-*- Text -*-

The StreamIt Source Tree
========================

$Id: README.source,v 1.6 2006-09-06 07:33:38 thies Exp $

Directory Layout
----------------

Most of the compiler sources are in the "src" directory, including the
frontend, the compiler, the scheduler, Eclipse support, and the Java
library (for running programs in a Java VM).  The "library" directory
contains runtime support for code that is generated by the compiler.

Compiler Flow
-------------

Compilation with StreamIt syntax begins with the front-end.  Currently
there is a converter to the old Java syntax, which is invoked via the
class streamit.frontend.ToJava (under src/streamit/frontend).

The old-syntax compiler is entirely contained under src/at/dms/, where
it is built on top of the Kopi Java compiler.  The main entry point to
Kopi is in at.dms.kjc.Main, which calls
at.dms.kjc.StreaMITMain.compile() after parsing the old-syntax file.

The Kopi front-end will generate a series of JClassDeclarations.
at.dms.kjc.Kopi2SIR converts these into SIR (Stream IR) structures, in
package at.dms.kjc.sir.  There is one SIR class for each stream type,
so class declarations are converted into the appropriate one of
SIRPipeline, SIRStructure, SIRFilter, etc.

The compiler diverges here between the default
(uniprocessor/multicore/cluster) backend, the simpleC backend, and the
Raw backend.  The default backend is contained in the
at.dms.kjc.cluster package; the simpleC backend in the
at.dms.kjc.simpleC package; and the Raw backend in the
at.dms.kjc.spacedynamic package.  All backends use the IR
transformations defined in the at.dms.kjc.sir.lowering package.

For more details on the compiler flow, the source-level documentation
under the javadoc directory.
