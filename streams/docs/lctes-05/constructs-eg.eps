%!PS-Adobe-3.0 EPSF-3.0
%%Title: (main.dvi)
%%Version: 1 4
%%Creator: (dvips\(k\) 5.92b Copyright 2002 Radical Eye Software)
%%CreationDate: (D:20041213151354-05'00')
%%DocumentData: Clean7Bit
%%BoundingBox: 71 618 297 732
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
71 618 moveto 297 618 lineto 297 732 lineto 71 732 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 10
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 7
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 lt
{
c1x c1y r1 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 le
{
c2x c2y r2 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 13
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 6
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Courier
[/N60/Courier -1 TZ
%%IncludeResource Times-Italic
[ 2 /fi 32 /space/exclam/quotedbl/numbersign/dollar
/percent/ampersand/quoteright/parenleft/parenright/asterisk
/plus/comma/hyphen/period/slash/zero
/one/two/three/four/five/six
/seven/eight/nine/colon/semicolon/less
/equal/greater/question/at/A/B
/C/D/E/F/G/H
/I/J/K/L/M/N
/O/P/Q/R/S/T
/U/V/W/X/Y/Z
/bracketleft/backslash/bracketright/asciicircum/underscore/quoteleft
/a/b/c/d/e/f
/g/h/i/j/k/l
/m/n/o/p/q/r
/s/t/u/v/w/x
/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/exclamdown/cent
/sterling/fraction/yen/florin/section/currency
/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi
/fl/.notdef/endash/dagger/daggerdbl/periodcentered
/.notdef/paragraph/bullet/quotesinglbase/quotedblbase/quotedblright
/guillemotright/ellipsis/perthousand/.notdef/questiondown/.notdef
/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef
/hungarumlaut/ogonek/caron/emdash/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/AE/.notdef/ordfeminine/.notdef
/.notdef/.notdef/.notdef/Lslash/Oslash/OE
/ordmasculine/.notdef/.notdef/.notdef/.notdef/.notdef
/ae/.notdef/.notdef/.notdef/dotlessi/.notdef
/.notdef/lslash/oslash/oe/germandbls/.notdef
/.notdef/.notdef/.notdef
/N57/Times-Italic -1 TZ
%%IncludeResource Times-Bold
[/N45/Times-Bold -1 TZ
%%IncludeResource Times-Bold
[/N46/Times-Bold -1 TZ
%%IncludeResource Times-Roman
[ 2 /fi/fl 32 /space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quoteright/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/quoteleft/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/quotedblleft/quotedblright/.notdef
/endash/emdash/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/exclamdown
/cent/sterling/fraction/yen/florin/section
/currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright
/fi/fl/.notdef/endash/dagger/daggerdbl
/periodcentered/.notdef/paragraph/bullet/quotesinglbase/quotedblbase
/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
/.notdef/grave/acute/circumflex/tilde/macron
/breve/dotaccent/dieresis/.notdef/ring/cedilla
/.notdef/hungarumlaut/ogonek/caron/emdash/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/AE/.notdef/ordfeminine
/.notdef/.notdef/.notdef/.notdef/Lslash/Oslash
/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
/.notdef/ae/.notdef/.notdef/.notdef/dotlessi
/.notdef/.notdef/lslash/oslash/oe/germandbls
/.notdef/.notdef/.notdef/.notdef
/N47/Times-Roman -1 TZ
%%IncludeResource TimesNewRomanPSMT
[/N81/TimesNewRomanPSMT 1 TZ
%%IncludeResource TimesNewRomanPSMT
[/N41/TimesNewRomanPSMT 1 TZ
%%IncludeResource Times-Roman
[/N39/Times-Roman -1 TZ
%%IncludeResource ArialMT
[/N52/ArialMT 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
71 618 226 113 rectclip
%%BeginResource: font TWPPMU+ArialMT~47
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 10 dict dup begin
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /TWPPMU+ArialMT~47 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { 0 0 0 0 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75
B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918
86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97
FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC
99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54
7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34
68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289
78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65
FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130
53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E
F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5
79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96
BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C
326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C
9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2
9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3
B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1
186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436
A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D
E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40
73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82
9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07
B3F636FA69A259BC9984DB874CFBF432DC23D7457637070526912FD9815BE031
9519877F20C9609B5B58AAB0EFD1AB99AE9E6EBBFFF6479EB9E420D146762F01
59B41831A5312789C775520554EB9FEF7F7C5A0B69609D183F654CC9E516843D
39D400085ABA9646DA481FF9468E167556FF2D2521815E2A32874AB03E72C7AB
1024243EA677680BE387625F955E87713831EB3219318ED24174C839554897C7
213358F9708DABA15D2FB9C8340A6A684CCB04C1845415C81C9AF8E6861BDE41
2BF46CF45BE4D7B4D65A6D990C67FC10310576CC8DBBA7765CAB918E883BACBB
97147F7D72EA3A2E1B3AECC1CD984BBA20123B0FE78C02B6687368159B715447
9EB249424F55DD2FEBBB88CB2CB3D9E6BD1F5E41B28EA25FB4982745B9EFFDDC
58FFC60A0CDD5990D0AC927857559AC8A39DA004A9E99A94FCD78B20D94429DE
3D17CC2BDC4A3CC75392C8C38FD13BD6BF369D0E51989A9E405EFF62FA317CB6
9C49F642460F43F7896B919594E672389A0AB10BB6A0319B7DA61A23386151B2
6CD0BEBAE4A37E391BE5FCEACDFF7AFA8793CDAEF8FB4AAE31057301D2D43C3B
0BC75E9F333139988AD175E4DCA73E35F4AD723D4B6D08AA2622B36413277BAA
9C65600C5FD300866842A91675A392048FFF0F8EA0B04869B01F1BEFEE9D2543
1864509A8B7AC913BFEAACE31AC4B2245B1A474E8331D296456B3484E2AF77B2
3D0E0A705F9684A816F6F3303D2D635CD57FD9CCC01AFED57B312FECF713D2EA
4FCA1A4FCA1D0518FBEC3BA59B13EF7E015ACFA7393D0C6C32FCE02073F6457A
4A86547BD5CBB44261D74A216C4D91B11B0CD0D131CA56CC8B39E7D39E08F133
F4BE00F38E4E9B63DEEAE3B9614612C111C007FCC425B672842DB76BFC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/TWPPMU+ArialMT~47 findfont /Encoding get
dup 0 /.notdef put
pop
end
/TWPPMU+ArialMT~47 findfont /Encoding get
dup 0 /.notdef put
dup 79 /O put
dup 112 /p put
dup 116 /t put
pop
%%EndResource
[/N48/TWPPMU+ArialMT~47 -1 TZ
%%BeginResource: font OGCUNH+ArialMT~41
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 10 dict dup begin
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /OGCUNH+ArialMT~41 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { 0 0 0 0 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75
B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918
86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97
FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC
99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54
7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34
68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289
78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65
FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130
53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E
F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5
79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96
BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C
326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C
9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2
9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3
B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1
186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436
A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D
E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40
73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82
9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07
B3F636FA69A18BEBA8D67DD8AD36B7F2459BDD5018192B26B1196D9822275B7E
7116DA2B71C1A0BD3FF9F3FCBFA20466CF1F99EF43F07D8EEBE6D20CD1F74810
527EF849CA7D3A47A075C579CABC23DFA76068EB6C2545483BEDE3F5036AD096
95D44D3AF1F3DE68B49C231BA72A6C0F914ED70519CC4C1E28E058061A7D304D
FCA2C36D91A36B15655F225FB9DE99B3072122C81748CC079616345904F8F37C
C7F95A75EB51E927A490401ECFAD06CB01C4EB75FBAF00E3DE83EF1F35C94410
04E7B1D25AD35361E694D89ECC0A72C605EB4C9D7D88A29FC9115CE89A379FD4
C1A4E52ADB52D3C654A49B201C33A0E64899F3935FB11EC87C168D736D95D91E
CD594E4FAF03BF485818BA103ECAC3E87F72AE5856D990E4536CCAB54D452CE9
BE3C07AA91A93F489997B9845FBC29CE29CEA04959987633F2F395973D9BCC1E
F1D642C62512AC59555F83DF8FB03C9F5328563D36909495C6CAA400AF2803E9
805F933A5E8469E2F7D8CF8A58C3FDC26C3F6BC5A6A197174E29185023335B31
49C04C2065931AFBDA4267C1C0DC4D966E0D373B1FAE511F636707FDE0428D27
8CD58E604F898A821A607E115D78DC72DA764158960D53157D53BB98A4750E89
0791B4931367FA9297B8F57AB9972B85446060B224348392C259001C556CA4FF
28344533E4D528C7ED3C4AEFFFDD6E256FA0E42203430943A3FC456E777EAC14
C9BF3B7D09525AACAE4A6687834BB5FFAD6D2E1A6D254A25445F3DFEADA91B9E
B63EDC882598237FA32519923EC02D15A0D25E4ABE5A571EF333F6BF909B231C
D842ED1DC55AE14DAE113A288504DF4849AECB8CC9C823CA48BEF1F9B13A2D3F
C46539206CF0CEF63BB8F6552BE9364D67D6B39778D4BD2569B935FD862C8EA2
4E26795DE934852A7018E3B85CE303AFFA2182984F2EE5ACE4F39D970A502AFA
F9CBE6D9EBA5CE0E114C24D87E11B9E14BDFAB759A637774FAB8B429AC0A0036
EFAC9429FD3F5B15AE3B4E8C1201637BA3434279592BD2552309725ABB188F59
6B747B36D1BF0D3493FBBAD3F5EB2D7F40C818DD9ECFFB1EB8D896C481DDD06B
35EB9551DE18D5BBF26714656CD44754C6B2088C110B82B8D4B3661EAA663D32
F104CC46F44C2ACFC76FED41A0F2B05B7B41EFF4A37F7C0D5DC28C35E17F6140
019D18B7BBB5116D61F535122FC1D6E7351F19E0DB3E12A9156BD90771E21877
107BEE9A31AC1E5B36695DE9CEC2019EB79CB7271A579F459C886F87D2B10358
83BCB25720684831CCABC45EC31548BBCA6C7C3CAA7D6533D90C1E8DF8CD9C1D
768155AAC4C84085EDA4C7D6E53D50850C87EC5700B6A0096EB9EE2987951B49
D8F300EDB61DFFF0BBC71A93DEFFF6467E3B50E99ECE362A8C9C066D613026E5
A9C940B5968967BC8A6F1C9E663E4281DF5FA67C13AABF9087CB59EFC9717659
ED4B3E22F50B0A5964D490EDEA4C8912279A80D6959C1A04DCE4B59BF46537BD
3DF45737103A25DC0AB7238687BBC7D18AA8725E95880EDC87EAA210BDDD4EA3
6D0233BE65271564FF7D61537088B0874D1DF9D41C40368399A80433D3743DE1
C433
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/OGCUNH+ArialMT~41 findfont /Encoding get
dup 0 /.notdef put
pop
end
/OGCUNH+ArialMT~41 findfont /Encoding get
dup 0 /.notdef put
dup 83 /S put
dup 99 /c put
dup 101 /e put
dup 111 /o put
dup 114 /r put
dup 117 /u put
pop
%%EndResource
[/N51/OGCUNH+ArialMT~41 -1 TZ
%%BeginResource: font ZJMUMW+ArialMT~3d
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 10 dict dup begin
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /ZJMUMW+ArialMT~3d def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { 0 0 0 0 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75
B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918
86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97
FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC
99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54
7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34
68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289
78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65
FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130
53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E
F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5
79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96
BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C
326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C
9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2
9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3
B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1
186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436
A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D
E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40
73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82
9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07
B3F636FA69A5D5842D86A6C9AFDD18ECD5CAF2DE803E7A7BA868FAB984229798
ADDAAE49C9EA48A5D2DB77F25DC348952B5767EA25D6B45FB5128D1FE19A13A9
7002F975B66C9D5CC3EE3F1761A538F9022226136BFAAB026D01E0FB9845A9FE
FBF6A04BAC4A2EFBBB973EE935BFE23007877F33299A211C3D90A328B2D7C191
4958A3E05057A5E462736BEAFAB78E885644D62D94E30F82AFE894F988F779CF
9FECE9B95C4F0A5D21D3723DDEEEF96400AA484030C6D05D838398C95647491D
BC0D333156ECCE454ACFE3ED1588C866DA6139A7EB9B135E23DFA3D54FEB26E8
85DA2226E79F8E7312B94721BECB4B311B600555662D256B8CD5585E1A77D228
599954C42563DD55EA8E81E3A3B44E0C96461FA8CDB355140EFB150C899B1AF5
37A3FC4CF21D77AAC53D78C1170AC920B8BCC1F418BB5D809E8B5631E57CA8F7
75BE0997CD1D3F3B3A30C75702DCD9034E4FA07ACB4C393BAE91E3C20B4BDD4E
28A6A9CD35E53FB9F88C1B35641F104F43BDB3F882BB141DB7A2F75BF71D1459
ECBD8B040579BEDC02A93FB8415F4664B67A8144C5B87CCE66E97F06383B941C
CCBE2DB149D5EDF7F367DFCFBB082942F3D7E23805E65524D091B9F5A5584661
9F5E55E9EFCE8D71696618CADF4E39319329E4F972DD9C09FDD1028715633E72
59879F0D45B306F85B8106B92F3F1348EB73C59334DEBBF2A21F8CF93E27DB62
FD955F2BE3E29D052F407C73EE62ABE49C0C94EC1B981ED469673AA03BBED205
FFC5E80BA4A37C0DBCA8188EEFC8C7CFDFA65B91493574F1E7262FC78F0C0542
71EE9C3A061E656D4272EBB7D12365555D7204E649AF46C97A3C8FEF0A10899D
11EB37CF1E612071DD9C2942B129B3E92A213AA82860EC9D6692E3AE4CE6AC93
14BE238EBD9BDE963D77AF3597349C77140E15582FD8B52D509FFC323BE1ADA8
B51971030F7BC855D9E03B25A6A91EF9675677F85A8071DB1E6F6C6FB86355A7
DFE10ADB40E2921CA88485C759AE50713BC70F2C1D5E78CE8D79A6C7D93217AA
7773FB631E4E1DF000C771D9771919891CF147FD0CC90D7C9A0B609A32EC976A
9E9EEA77363D633A09CA6076FB8ED55FDD55EB40E56B25D0B9D4B5B8FE5015B8
6AF68FFA9FE5F12D655A6EC26BAB77154C9CD88F4084858A93E7743E07ED3F63
F6BA61D50895F12884CFE801EF1E9C987C9A1EFC11C3C5F0DDDCFBD738C80425
DAA05AB310FA7642C111A041B1766A84CFCA1679970F3BAA698B686ADDA540F1
451621FEB3A37E236BA5627BA833E2A29EA883EE9F7F683067DE7740BC114F24
83A2C5270B7ECCAAA522E8BF1CBF5749C30B2989C9A103433F3E023BD94A8BDB
49917F0B42B1DC5C4F323AEC77C18934D1233169AF3531231A9900918F8A4024
5E0F44AAB9276B3F672B215E6A462BC856028A3B19FAFD409C2853E826A43DE4
51A02050A1FEA0763EF8D4E1EEEBBCC889D066689193444F5B4A46F229055443
720765B15EC8AAA278A9D0D2A1524CD3643CE3DDF69F815CAF88623DC03039D5
E5CFC7BCBFC86598C0F062BEA4CF2C27B3C7BA0DFD4B16EAFD214A6886C41D52
D8329097BEE435D2106A74E6E51F5CB649562B97AB5BEAC905218D6BF0A79B67
4B8032EFECD6C19088EAD58CD0166F8E7A79C45362352DEA2F277F08001B1660
544395B9EC7C2D0D9AACA76851AB9AD4100AD0C567B465B5F91C0B49D33FA82A
A3A0C745BE9C2B0EC02D6177BA60BFE8042F52777EAFC54027966E18CBBC5B51
63BD1D296C9EFD52D0D73214EB1CD435396EAAD4E084E505FC17D071F11923A9
1478D795489531ECB5DAA57EB300704E23050AC45CE0AB131D477926B88A07E5
F67B6A9D5A64697E4195FBEAAF786A2724C9011FDB18D61CAC897690075DCB4A
736B7F630A15BD57254F71DFBB7D7BF090CBA999D00ED8D4807424AB5726A62F
034A8D58BB2E9464DF5D983ECF8BA2DE9A60A8B9688DE2DAAC3F9B577CEB6745
58DC45C7297575AD8E5B6EB6BF7C3AFDA0B7A853A661DD60BFEA39C62FB948AC
872CB6426305B83275016574E83C92E7C07943D0A144EBF39610F304C3868878
AB7FA0FB84C5ED9B960E3A6F8B4226C90AFD5383569C2D9E335396B5F49CF971
9A9596FD7C1B839C1890B3740DEF54192195CB0D309C263AD847B425A6ED1B5B
BB45769D4AA7B68D4F9E0558B78AD191EDC11EFABA1C21619817A0975C7B85C4
81B917B6DF02E299CE03FB28B3E3427835A46A6C6E3E42049557B2B6F0DCD638
459632CE39595EC4F4B175D029D3435A7A6DF88708B0C44AFDF87F9620A78F4D
B3572925D02DA44168BEF45D2A22C792E44DB695856B9DCE3BE8F7E84DA97097
3373B8C2C5E5AF3379573EAC8246BE7612CF5A6D307C1D1E580D09CBACD6FA96
2FBFDFB3C8353538F68B7218192407192FC89ECDB18C734007AE1C2238B0C473
32F9082ED05C7B5B8E4F51766B59493518CDFE9C179470ABA8A5EB83DE85CF9F
1AD9E27752A48966084CE2EE5A473910AA7B06FA5CD8C226BE874027E01A982C
0FF4B05039AAE1927379A2E813EC79D64A72793AF00F79CE4CE3A9E0DECFD7EB
DF19029DE1501F13BDE1FF44C42FC612034CFA9FA1EB25D9B98B18742F96C129
1DD81217052467D592FD34F518BE92EB76C816ACADE8314EE7DC962B395A0BC6
3FE384DAEA52014EF575EBD64857B497036639548F55A246F831E8B9A065A46C
C2315AAE195323A9FB246E6F6E2F3F12D307EE091F970F01DE342954091FAD25
314B02044670722C2EABF99A377EF4E167FEA22873DA59DC8AAB1154774B515F
E9F668707E971689BFC528EC480892CFFE1162B7C69EED8878BB1AF60B59FEE6
C539BBEDCEC9A8D913D734DD23C761E6D028AA850B1CD714EDD514FCE806C05B
0A073BF863CC48C54A234CE3D5E462846188D458AA7955D76F13D600A9C381E5
E6F5310370CF6B0042824F15015234A8941E0EECEA5DC233281D01CC026127F6
FBDB31059AC5708DCFE489B27DA1FFFF6543E2949814B7EF03E1C2EF480F2A58
F981F9AC424A1B8C4102E36C4A01A20F460060086D6BB45D98C723FA755155D5
C7C2350A023F797D9E6CB1D05B0EABFAD46DE2F09B01D93A3FF3EF67CC3513EE
79D6D80F4BF3F01DD011C3B84177E29DF962254ADFE27636F6340188B2ACCF4E
87895E2D78A26729BC34D8AF2CE26050E71BC005475EB201A12DB65EC44BC224
DA445D09E5BAC0656FFA332241E88B68F09089D601911778EB4EAC3364544866
35EA7C557D837A11986E0D102FC99B713D4B48C5E5D6D6072AC9374EDEB7F5D6
B42B83D55716C569A06E185684634F2B64EF1EDF3289E21058B1EFB9AA8881C5
1CD2DC040F0E44DAEC8B0341E96EBB16469FB3D27901237ADFC5BD531A973588
77BF5B676D0691CF5BB9BA388DEB865F64B4F0F4707D794344C2C80988F7CF47
F9F64E84396549A4B8FAB47235A51CF6C12A3CC6B7B1F37F5BD55B83AEA14034
87C6B347A870F8036F57ED14E02382A9B5870CAB82B9A8F6714425D76B352A27
48907A4A985E23CCE50B97D6458B0190C84B801314A1A00944BDD2C66C42EF78
4F2332A91CD9E90AD99B90FB4F5D270CC32221820EE05E7E065F6254A9F49057
89F3B8A2A09CF9B14941859299EC4BAA9B4B5D96C9AE103490106CE5EBE0558D
2A0C5EF7897D597AE945881A020178DF88A1F63B9A7F5749978A19C055C61164
0C793B008BCDFF36AB34E048D452B712AAD28077AC5968C1B69D596D2B3806CB
8A9916062723F9D5BD43149139ADEC44E5E89CEDAA0377F69CA33B9759C2CE1C
3FC6B883DF939E457480C8DEDABB35806E42EF26B6B0ED4383DE3D74B3D746DD
D00D49C8EBF0A6652F9B13150A96ECE8838E75F4D1112421CC327FCF79EF422A
DD8AEF7AC64316EE0F2F6CEF56F2C8494A862AAFB5C545AE4D83F8DB042E7770
52F93AB726CE0B823394A22ED0B3379482E96F9C90A64C349173226EBBF4D9D0
6C3D205DE96D299BBC31780906AAEEBD7D3B1702D8B3924F7BCDF168D132BF4C
F5A1880C72CC23D5D90DF01BB07DE8839E0A9EFFD9AE64BDD5444D50E6E2451C
42649A6B0DCD9CF4ABBB3B9CB0465728FEBEC98EE1DDFC840B3EDC41DC49714F
76D2D4AD4E92CB2498FF6BC40863FB2A51A3E5D92BA7F023E595F54155BE3501
559E2412BAF8D1145CF5D50BF972D9D39340E935A7912CF31EB3362BB226D477
A95FE2733C29427C49F2315347235B5B63ECAB17E55E5E78DEEFD339437CD5D3
7F1E2F9EDC6219FE4C8B79665654F1C541BCA64DBEAC4E0CF6D7960D25D9C5C6
C3A83FA3A95397EB32C17A0D370DDF841BF0AACE574AB95B4D4BD13DC93F92F5
186D9D693B3CF21FC0AE8AC128CBF505D21753692D4D56B64C0CAE92DEE58B38
1272C1C610E19F18975C46BD2032DE17BB733F8D4C14CD779BE0CBCE441017D1
9089521DF299E2D347C74D22E5627D7C1184D2007C23A68726DCD75C4F9D3A90
D3543492D836B47DE2F2DEE582784A756EADBDA009DDB2C8EEDD4397340144D6
DE09FFAB597F8E74A95142356568C36170AC576D90DBFC95A803DEB787AA2627
E5F4118A1FD1E23A566168BA9428177DD9AF7BF7448550E653DAF214C7E26D0E
F8A35D67F7B4C88BCF80E214CCB3DDAC500F770937EFDED41EDAE04AC523C6DE
6D34B29F5BF480CE5FBF16E6D42FBD1923E90B37E1AA50D1FEF0603CEE6356D7
821C343C42526EE2CDEE8B0C572E717F121C29D5CA45EACB9EC293ECF0D13C34
306BD4E1FA566ED1040D5AE89947EEFA9121BF4F7E71B466DBEA1FDC7DA24F2E
1F7BC63389583687AF8D3FE1D0B8E79B4BD6EA99133141BFFF3015CA97F6BC42
926639AB0C23CC04029CB7514E97FD9C33A8D6DC50F904B2CD43BB91117A1AC7
BCC9A6F9897C1CFE2B7DA2C1E06C7FAB265A4F86BF92B875FC69791F1AA74A3D
8883E0C5EB7D6EF2E19FDEE63E67CB80F482B6AD3FA0F00A7B42BE8889ECBEA8
64D79CB9C31823C41E77FC401341339050944D7463AE34D5A13A20E11A5F2400
37DA6C7A15CC7C21FEF312FB742FAA4D0A7B7D87999E6BD21EDFB185AB09207B
25AC54CD36403BEF3BA0552DE8F7F1CAD140C8327636634943C60E4199E417BF
8A6FCB745A07B484A2B0BEE550C4828B5157E0A4F40B67A98ADBDA8B21A45909
D7AA6EF52972E6BAE7F3DFA432FB6EA12889899EECAC223F6E11692310EF59EB
105341CADE92F4D8EF95EF042D33A18FFB22D46DE27F89EB273E098B7E0AC4D2
AC4FCF74225E6E9A6F6B3CB2B9FF1F97F4140B310E02049CAE392373D5B03CCD
C00489C4493D3FB62ADA16A62F7B4519ED2C9FAD29557B6980E5DD0821A81A11
2B60591CC10BF67D29BC7826F3082C3D36939C8DD26B053D9ABBBA351A00D89E
C684133984EAEAA33C6FDD99229ACDC6972CB8F8B29E949732766E0C8B80346A
D7E3B426FF64981FB86C85276671BECD88D08FCE30F3AEF6B0B4A897216E4672
092EF65FF2EE3E14F972503805712540029088A77FDE93BD32887D80C1677BDD
03ED24C7A7DB72A6921BD56FA1232F7DFAE46579DD11F88B7EFD0ACDC1912170
840806652BBE0CF48830971D9CDD5EDA6139482F8F2113E69739FE03E3EB7B40
E49C35CABEE2B4091D2CC00FA2DC221F4D0C58DC87841743E6D4533BFEC8A821
7AEC889671BF0F69E662B05BB7F80CB0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/ZJMUMW+ArialMT~3d findfont /Encoding get
dup 0 /.notdef put
pop
end
/ZJMUMW+ArialMT~3d findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 47 /slash put
dup 59 /semicolon put
dup 62 /greater put
dup 73 /I put
dup 77 /M put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 123 /braceleft put
dup 125 /braceright put
pop
%%EndResource
[/N35/ZJMUMW+ArialMT~3d -1 TZ
%%BeginResource: font HCLPKB+ArialMT~37
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 10 dict dup begin
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /HCLPKB+ArialMT~37 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { 0 0 0 0 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75
B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918
86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97
FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC
99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54
7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34
68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289
78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65
FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130
53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E
F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5
79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96
BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C
326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C
9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2
9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3
B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1
186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436
A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D
E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40
73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82
9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07
B3F636FA69A5C48AB7AF79B79D736D42CDE21F0363666AFD1B2E8230C07E3DD1
B4503AAD5E63ED2314400EEB16531F7335B34CD2BD4FD38F90ECA74DA87497C1
756F7178A45C7EC0ED25E0AE233807F0EAF3DDE653C42453A43F319A023AA37C
F4C2DBD26BEF155A2AE1A880A254FA8518170FE7B76A5120CBB49ADCA57CF20A
5502FF35F5488673A03F11BF1E2CDAD7A1AACCCF7C7B8C675A403D9FD5A91866
C8734B5BF8B99A08AABB8F8BE438653FFD4546A739EDE655ADC8879321A48918
747722A92947A50FFE4166290F65482F2E1F537BD1FF45615BC89138EFBB97B5
18206D6A14E8BA71991D8108E7FD66A5AA3187AA0E3ED0D01111C2658D4401E5
7CF7C0CEB595C755F2288DC8B956839AB45B82A9FA6FC65E12F789DC971375C5
59E78953B748AAF161932139ABF91185E985FD840D0E94BB747D02F2D869B2B9
7679D51D6FC355BE7639CF23DA069EB6972666AC0910F99A6213751D65A79D78
53808C86826FBB367C74E196FD5A8F8ACF13FB23F581F788E2961D2795
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/HCLPKB+ArialMT~37 findfont /Encoding get
dup 0 /.notdef put
pop
end
/HCLPKB+ArialMT~37 findfont /Encoding get
dup 0 /.notdef put
dup 108 /l put
dup 112 /p put
pop
%%EndResource
[/N30/HCLPKB+ArialMT~37 -1 TZ
%%BeginResource: font MMCJHH+ArialMT~34
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 10 dict dup begin
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /MMCJHH+ArialMT~34 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { 0 0 0 0 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75
B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918
86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97
FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC
99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54
7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34
68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289
78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65
FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130
53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E
F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5
79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96
BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C
326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C
9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2
9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3
B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1
186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436
A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D
E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40
73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82
9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07
B3F636FA69A367D85BFE7DCF51A4B1428D17CCFBB38855B20F264AED104C7F38
0432D121C51BCA5B423A43BE147BE85241E84318442F2F0386B31CBCF75E8A7F
E1CA92CAED009304155349E29FFF3AF4467E81183A43F1761371EFE7737293B8
358D800562B41E3621FDD577A69DECCD8D0530A8DF883DFD5D67645B9BEC58D3
502AF80CD62D1D9FD8CE8A1247ED876FAFD508DE5585EC27F7E12FB08A7E7B54
7927081BEC6D2D40DF6A5C5F4EC8157CA160480C1335517C6D996921616AB728
62B9120577C3B434E4F8D9D12D32C45B3EB2529D380566BF6B104F36CB5C2044
629CCCB40C98D5A293B50825C29AEBD6B3811270B24D5545C4EFF656E0B04F07
7888E86FEC1C5D2C17633DC251D04B1108A681D971B0E499860873AD0824A075
CEEEA405C6AD57F3CD6B70CEE8A2883DEFF36FBDA1C30491A54424A4F4BBE58E
49487DE6042DB85A5A460EEBFDD0CA09A5FAB3EB284F3BDF09B4DD5B6F9A1014
C8CBB593BFFC0EC32FD35E731EA7D45878BC90EC90223B8B26026ABF5C0660C5
65824FC595F60775A5F5283B91C1A53A42624A63CCF36F92112C7394A37D59CA
F70BB7023E0CDE5857C62A104B20E5CD9961DF84AA5470800CD224C2BDE69A48
4D3A51CF1B2C8A47CD84D0DE91BF0B7A2F14D106D15CA95AD2C7B55AF66C1BD2
0A378FAA84A369135296C0AC81CA4FBC98A3179B748D7517418B14A52C138997
D09F7FE4FA0E079836C72BF9E4D5D0A352E7267049FE9956D7EF7B7E8BBF8BD8
E4A3FFE12AEF054D8CEFDC0DB6EB732BF81CD9D7D46C937E5FE28E03526E731A
22C444CDC18BD7E7CE950EF1314846288FF371D289E8DDF3A5C9ED328811516A
21019740849CA9C5404CEE3F03F530FBE0981E2F48E6D7AE998A3467D3E2B630
31818C37C24FF6C70323A35090C6C2940952F35ADCACADFE59CA8E964019E251
03EE3957A63256B87854847C1B7A557EBC6A29F469E75156646647E28E6D439B
092A6B0A084C1AFB4F658713954CC7B063C9C78100C87441EC7B651FE7AF9B4C
309A1D7993BA383BDDF41BEA7D233C6CECE1316FF277B1A1315D9608AD5D5D4E
AE521F6B548DF8073BC2C934E7A77F8A5FBF79AFCE6044CE7E4BA3785AB9E70F
CEB938955F8DBC72F66C92EAAAB284EF3C75CF6B91B9AE809ECF5CBD3F52800D
C9E155E147DE889B57BC2DA0C3FD3E58AAB00A81BE3340B48C9720B527F48774
E5C3520217C9B8C60A46E56AA2CB940A6CC0A108850E5CC61542F5903E4690E4
22642811DB0402900ADAEB14507B6C15979156DA031E7BC192E22AF79086D405
36251C43A35299C9D14D5CF81343F92371D4140B53965767CD8B06C820573CA3
3554234A2D01DCA5948CE41084019EFE6B4CDC1FFD09A527FD345A3E7A3C6A2B
49
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/MMCJHH+ArialMT~34 findfont /Encoding get
dup 0 /.notdef put
pop
end
/MMCJHH+ArialMT~34 findfont /Encoding get
dup 0 /.notdef put
dup 97 /a put
dup 109 /m put
dup 115 /s put
dup 116 /t put
pop
%%EndResource
[/N31/MMCJHH+ArialMT~34 -1 TZ
%%BeginResource: font XSJKPF+ArialMT~31
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 10 dict dup begin
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /XSJKPF+ArialMT~31 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { 0 0 0 0 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75
B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918
86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97
FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC
99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54
7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34
68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289
78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65
FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130
53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E
F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5
79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96
BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C
326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C
9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2
9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3
B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1
186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436
A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D
E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40
73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82
9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07
B3F636FA69A18BEBA8D67DD8AD36B7F2459BDD5018192B26B1196D9822275B7E
7116DA2B71C1A0BD3FF9F3FCBFA20466CF1F99EF43F07D8EEBE6D20CD1F74810
527EF849CA7D3A47A075C579CABC23DFA76068EB6C2545458FF8936FE9391A64
D5A8A1448880D50715145534E59E9430613005EEE7550C409CE0503BF1650BE2
AC03F7B38C2F3285304B4579EFA5B3CBAED6250C9F4DAAB3FA6B1299E9AEEA4D
89055CD9A2356AA207C739E3FCE13B5376C7FC9655A96F77B53B5395FB2D1D5C
A6E537CCB83F391C30C5C1E35A28DC8E05B1CAE62C372B995DFDC8D9352128B8
0332D44F401A72524C8529754BC7EB888F7DD93AE1BA8F7CFDBCA8CAC8D46E33
C3E360213B048E8C336A64593C0DB302F64BCD36B9D4202D62559E89CF92116A
9E4AD7B511A3B3A99802350257C4FB11BA65A93DE9F2DBDD14B2EFBC02FFE11C
BE40569379BB56F037476787964F569781CBDE85B006DBDBE83F4C751FE1C84E
C59FB946A9DFF2F34F66E93DC0F2A4B50973BD4E8D4F8EE8C58587576EAE51AA
6E05B48F6193A0C0207A91C0DDC6A66A271A15B0FBFB1C5E2A16C33223C49DF4
DCA79D03F41A25C0008ECA85745010FB9369D716CA1183878B7B056B67A1BFEA
A16CB0E0DD34FF661D09A734DEA1EDA628A258425BDE9EFFFB47A6188FA620D9
90E61FC284890A03B53F3B93B1001E2AD219890A32A288E56A2D1F8630179D1C
BDE8DDA5D1A0A6FEE9B2CA73C1B46049A28CA22B01F593F62F1F37DFDD2E98BC
7F5DEE60B7758E6FBC084657A4F4F9B6FD1D2FC5529454B74E410DD11BA015A5
F46B45AF40754189BCDC6E97F56FD759E085B5051A7252F6188DC15907A180DA
FC336FA0407579581ABDDD82F170F156058D16BE7E00D8C20971C98CBFC4D9DC
1638C7E38683846D351E56D7F5AC39DF7EEA520D08C9636F7279835087EC393F
C8959A3A91DFCB8426BBA2FE13D9DFC5A15C285D52A2B30F55A256522BEB5A5E
B2A17654E0A187C375F3704CF3BF62FBBB6EF10E90752DC77005FE35B9781DC4
419D8D436789EAA572C4C4B6DEEBB2DC731238A56CC448F095B8CB6159B9AD80
EE7A7E28E479715C42C9C98933215B1BB6599DD1C0B8ABC83DEDDA0C4ECABA6C
404BBA756A7EEC6AC8053FD25FFF91671FF50AFD4F92A1C9143A20B54D05621E
392D86DA33F7F91757F5FFFA4CA1357BB5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/XSJKPF+ArialMT~31 findfont /Encoding get
dup 0 /.notdef put
pop
end
/XSJKPF+ArialMT~31 findfont /Encoding get
dup 0 /.notdef put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 110 /n put
dup 111 /o put
dup 114 /r put
pop
%%EndResource
[/N22/XSJKPF+ArialMT~31 -1 TZ
%%BeginResource: font EJJJJY+ArialMT~2b
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 10 dict dup begin
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /EJJJJY+ArialMT~2b def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { 0 0 0 0 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75
B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918
86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97
FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC
99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54
7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34
68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289
78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65
FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130
53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E
F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5
79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96
BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C
326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C
9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2
9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3
B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1
186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436
A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D
E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40
73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82
9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07
B3F636FA69A259BC9984DB874CFBF432DC23D7457637070526912FD9815BE031
9519877F20C9609B5B58AAB0EFD1AB99AE9E6EBBFFF6479EB9E420D146762F01
59B41831A5312789C775520554EB9FEF7F7C5A0B69609D06BB445313C1AE65B5
055AA6C2F10ACF37CD93A18D299BC54BAC72233B536005468912FE2EDF704209
3AD85F2CCA921758866AA49E3391AEAB38B488FAB48502A5D59AA8E116A63C5C
E16B261FC70D20F99994A05A9E4F68E13797C960FE85CE505538DC81E566874A
DD22D8AB5A0B41F9133B0C14297F848195D257DAEEF3AAA7C690A83288BD36AB
BA90578795D7A69444A6349248FF73BACC549CBE9624844EF53A411F846B483B
8F9C2F7CEFD97134C14818AD0F56951B266C90AF15360BEB94E9FA1335EDD738
BFFC1FA4EA624DFE346C68137FF7231A277C1F682A1BA7BB409963FD73F7FA59
9E159AD9D118B4A0C2049390DC206A6029129B53C03137C52BEEDE577B724C9B
08BC47F19CA319547465D2C2CCA901B156A8A2D4FCD1061374CC93E9D8149F84
3262CC1BD8296C5F80F3855D36805393862268ED0A0FCDF216A33D4D6F20F41E
7B7769246455A14737859F61DECE8FE760FCF7184E2312FC210532A79DDF0232
7B2A275E043BB90EC83CA9947BE41882A69361905CEF78666AA2A11E487E739C
254598C6CC7416F1010540F1533262B5FFF2F2B7AE592EF6E9A7E369FE560BF4
9EB4664C976372B5A91FE8C0C2D8F3DB27D6707DA400F934A9E5BAB9CD83C1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/EJJJJY+ArialMT~2b findfont /Encoding get
dup 0 /.notdef put
pop
end
/EJJJJY+ArialMT~2b findfont /Encoding get
dup 0 /.notdef put
dup 106 /j put
dup 110 /n put
dup 111 /o put
pop
%%EndResource
[/N25/EJJJJY+ArialMT~2b -1 TZ
%%BeginResource: font UKEUSF+ArialMT~28
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 10 dict dup begin
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /UKEUSF+ArialMT~28 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { 0 0 0 0 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75
B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918
86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97
FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC
99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54
7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34
68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289
78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65
FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130
53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E
F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5
79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96
BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C
326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C
9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2
9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3
B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1
186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436
A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D
E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40
73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82
9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07
B3F636FA69A5C48AB7AF79B79D736D42CDE21F0363666AFD1B2E8230C07E3DD1
B4503AAD5E63ED2314400EEB16531F7335B34CD2BD4FD38F90ECA74DA87497C1
756F7178A45C7EC0ED25E0AE233807F0EAF3DDE653C42442EF75F21F39891C8B
A70C0530EDA7B6EE6158617516D4BD56DA39F92E5D3910BFD5E78B2873E2A362
3C5D0B72D7F91C0BF8ED3A4BEDDEB61B4803889554E9F574B27F18D6F6043CED
187AB1E1FB29E62C0BDBB27C95B28F01513D918C23D0898A86125A8833E01E95
90D7B7A8E66A3DDE45E4BA8946929A0301895EEB31A1451BC8C529D8A7C1F218
41C4EC16177C67F72529C8773B7ABA6A9D252D50BEA83F17BAB783DF30B61E5F
4D95AAE12D93C10172975BABD5DEFC456EABF928E66D8E67989A1214133FADEC
FC8CA966567DB6FABA54C6A15117808BF88D6437944511BA4D1D8A1FF025165D
10C59E3BB0DC4C7445238CFF643D10CD8E0DC2ECE931F902E67289B101B23BE4
3BF42448455214E6548D72735128C4F70843AE421C2F1F7C6E19D132902F94FA
B732D2E97DB8EBD6D50B1B5D6AC6F2B2C471E6A4C609D2605E27F4137163468E
443559DFC474EB21C75B28F2D092E0A4D0DE9D2370FE1845434303BAA9E51F0A
6448239471F42272931D0BE8816DACA5456D0D3D188C498EEA0FA232CE25344E
A7B05B17038A0898CADE06699C5448D8C5EF0F83F78D0244B7D873EF7036DFE8
96F74DF438EC0433FDA9B74F58152C491525CF57F960E366FA9B5E63A6914774
2B4DBB41D65CC5F0A329384537BD9CA65B60D1A5928594A31DD7CB747E831C05
4095F937EBE5DFD79515C455B4298EB94A61F2D6EA299FDC30C175511BBCD7A2
6A44F7450DD1B1F22A2D6060E34D490187
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/UKEUSF+ArialMT~28 findfont /Encoding get
dup 0 /.notdef put
pop
end
/UKEUSF+ArialMT~28 findfont /Encoding get
dup 0 /.notdef put
dup 97 /a put
dup 109 /m put
pop
%%EndResource
[/N15/UKEUSF+ArialMT~28 -1 TZ
%%BeginResource: font ZCXVXN+ArialMT~25
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 10 dict dup begin
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /ZCXVXN+ArialMT~25 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { 0 0 0 0 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75
B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918
86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97
FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC
99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54
7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34
68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289
78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65
FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130
53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E
F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5
79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96
BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C
326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C
9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2
9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3
B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1
186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436
A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D
E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40
73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82
9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07
B3F636FA69AE06434ED40772B6ED119BDFC5AB0F936AB651C8D4814E518C158C
7718948C0ABBBA27C52DC58DC45A8973C9D632CD4EE579DEFF0C423553562E82
3403D332EA07F8778AE77033ABB687FB865B70DEC32AFE39DCC06FABC17D9F43
D753287663EBA22D0DAC42A026E48F70E11DE02158E802FD7C03B8B9C6857C8A
1303E6C9967D0EF4B0314CF24F523A8613CDF2FD64C9B184667B1B3875DFFFEE
EC92480310DC697A16D5213FA2BC675D76882B0E99F3558B48AF0555B5BC5E42
08A62047312393248CE0DDA42A7D909EE72024D667B07BF05228DA08931AA36B
C3F0CA2C04401ED41D4F303251A65F174785D613878BD5B21E78EF3D8251366E
8D6451F4F0642D015A327B08DEB0D437AB9E8D779E1F370DBA5F713090C4DCCF
2AB7BEE450463F5DA2AF0AACAD2043F404EB970E9E664D61A6D488C615EE95F8
8EECF31C773E465FBB0D4664D3A5ED7B301A8F71C04F973AAC25F779B2759A5D
EEF87A7B341F5E839E65A9B9649FE77663BC1C7CF630A27C4FB14D42C15CE1C5
AD1AEA2332136D745768F95BFED8AF6FB40C4CF2208FA3975360510F90A993A3
62696388803B0CD8FC5C05961CA8138C6A833CD3F5052D3B1F8A99CEEA41D869
D7F96C5CCB9E44CDA3634D26E3B344F1A360810FD4DD3E26214E14CAE4AF2CDF
B52D721394BA2F6CBA09B5A83DC682A7582FFE2AFEC0411FB3BEDDE2393F96EA
717D12FCD7B0418DEDDFE8AD772D723986A2D441804FE584BEF0FDBCC6CCC0B7
73C003A248714158C821F3A68D84742546DF0E898FFDF8C2FADEDC10AA3FD3E7
0CA76EB7EB516D0CE4DF7CC748686723BA2A93D24405B4BC46809C722319FDCC
86E267D47526082EE1FA6F2655E1A1D73038518FC88DC26D97496EBF28C7C4A3
9924B65AB7E2597B7D87E02006FB9C16355E672F49AA82003EA63ABF2A4119E1
EF7F2BD6092D85DDEB66DFA985EA5681F41D94451E6BA8DDAF86FB58F6D31936
8CE8A1555345631B843C298CEF712B2CF2C9FECC5CBD3C4DA21A18B64204042A
89025302C560AEB8B86FFB921C48F61AACD908A82053A9393508BFB1D2380282
74CB0CFCB0D05A228B155AA7C5E32F81197D3D9AED2352B76A4C18297D1DFBFF
C8D2CBDABBD14ED268E39499CB546469ADB9FCB86C3B243B96317E42C7D6110A
D960FCC279C401E7C882D15AD9D6DF451FB17061E0A5A715EC682FDE6B655ACB
2A0617DEFCC4A8C666313ADB0D0EFE48807C5316135E0E073392E36E98281F94
7A1B40CD4BAE404E52BBF7C0D29E5DB983B8342EEFCB1713D2F06C50E2042A21
DFEC8FC5D0EF1F2C43A22E80B81B6965A679A050461F0DEFCA41702F42F823F3
FCEEEA125259A4B861723458811FD12703E55174DFB1E00AE6AB9E6962098D47
ADA41ABE730CB5F014522D7AE9CE8483B1134C6C735DAC1528FE1F7FE1A5241B
56489DF0B20F281006429AF012560157B91EA8F657C17D9F0886FAD0225254
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/ZCXVXN+ArialMT~25 findfont /Encoding get
dup 0 /.notdef put
pop
end
/ZCXVXN+ArialMT~25 findfont /Encoding get
dup 0 /.notdef put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
%%EndResource
[/N10/ZCXVXN+ArialMT~25 -1 TZ
%%BeginResource: font JZYFAL+ArialMT
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 10 dict dup begin
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /JZYFAL+ArialMT def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { 0 0 0 0 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75
B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918
86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97
FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC
99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54
7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34
68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289
78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65
FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130
53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E
F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5
79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96
BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C
326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C
9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2
9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3
B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1
186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436
A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D
E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40
73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82
9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07
B3F636FA69A18BEBA8D67DD8AD36B7F2459BDD5018192B26B1196D9822275B7E
7116DA2B71C1A0BD3FF9F3FCBFA20466CF1F99EF43F07D8EEBE6D20CD1F74810
527EF849CA7D3A47A075C579CABC23DFA76068EB6C25454ED15E53C2441C7231
1EF68C9867B0ACDDBFA3E2DD56A038DD3C8AE91DB0346212B7222BA5DA1FB9C8
FF5798B34471E9A6032BEA5FAED9106462D5864132BEC9E58895050FFF88FA46
C6A0DCE4F54F27C00FADD7FB86F5A0BAB252841FE8860F278CF57A56C83AE01E
682DE23E2530839CBCD0AE1726D33386D1676CB0077AC9A14F7BB546D1415AFF
5A47F9BDB61F4BA3D9E41F64C6FF2F38A048290DDABEA363458B780F0131F662
A4138AED0DAF7350358C98B600EE7209D28A6D9CEB550D01647EF6DEB82F150D
B27D7E9E80721EA69A8DB573A3CFAE4BE135A0D6EFE01D2102525BFE4FFE835E
7C1AAE631CB155E9023050408D7C50FDE32B5BDF51D7B336045F8E98BF5AC5E4
3EEC3903963418DED2780B0B73AB743BB148EBCB1EE6FA5DD63E400E2B6D648F
4BC175BE360B324868807600753727F50A25D6D15738BA7064658973F10DB372
49ABDEE0FC2B3827952F46306843D68D5E5DE8FC4A57242D756D06CFE1DF22A3
B706249CB0BCF18CEF4A17464FCA0AFBFCEB0052E655E42B7FAC1B11838730C3
627D4EA20259513732468D99F027FC9AE569D7AEFE18DD3DD92A7CA229E481CB
E759125FE87D308DDFC34BCB3490819DB2788DDD5BF20672F2EF0AB044D85C0D
E8A2FF135B2854E3635DA5E212DE2EEE9242E9FBFE9604A85C8477C390A2C275
A83CE1A180F6125CCEB7763CBF72603D5CC24D6A31B6FDF9C2B31D3A2CF755F9
A6BF5A5C8FA28FCE19ABD07D27BD7ADB476B90CB79FA00D1F53702D92ED17DD5
69D2D4808DAC05CF1433983058C7152F1441D77F7AFE2D7FFD9B914BDC7690C0
DFBD0D38C052FACD4969E9DB47AA717DD78E1AA110A028240880F601E8CAA9E5
600E1DE6FBBD26752370E97EFB67FFE04BE8B3E4CAC83B78857472F51EA3E7A4
80B7FC4687057F713EAB1B4C536ED0C0918D5ED4F0FCB11F8F505F9799915D7C
81F2EE0130722D8FCB7E0B8A7EF94542471475705635635C75A05C2C73848264
1D72DEBDEA70C283547071074BA3CBDC3056CF0F9916464EA359F51ED8F7B951
F1A661B6EB3D0434E765DA44EEA2ED67DB4287AA4368A96F214ED2CA94AC9815
82E9DB02DBFD3C307269B158521E7F3389C26FE1D70401B6BA3683CCEF780F16
E841456F69B6D777E81BDF100F709489C21B1BCD54CB6E8CB19F5BB0B4832B64
9D993C9331904BB09C2FE1D8CDC0A4D9D2E41140E959CB5B848871A4818AB81C
8FD2A5CF8EA076D9566AB4150E5E2C033238F78F78D22A4133C7093FC96DD57E
C11B959538125BC06023CD18A46DE510E9994BFE48336968C298C2BDA2923913
3BF7E5CA9F5F7E8ACC5324CE8261FCFCCBD5917E6FA417441192A485895C45C5
843A9E984EAE0B2CF70BB797602876B5F8ECBA62344F154A0472D8B5D7F57377
EE95779533CBA56671A81E40E637993B85A22DC9633EBF6AD4480C985675FA95
C95E8C917CB4494E4980E19B7E802F34B355FEBBB2AE46BA2CAE712873D78264
23DC6EDC5AE5760D330A788E094EAB06B957B52A339236BB0230CBCAED587FEA
90D0204AEE120070CA8B8EB56A14DEE9B9B6FF01F6DB6222086C76337883DB76
3A811FE7EAE5EEB76A6ABDBD510E7215B0D18E6D78B21EA59BDA7CB53199B8A4

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/JZYFAL+ArialMT findfont /Encoding get
dup 0 /.notdef put
pop
end
/JZYFAL+ArialMT findfont /Encoding get
dup 0 /.notdef put
dup 97 /a put
dup 101 /e put
dup 109 /m put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
%%EndResource
[/N9/JZYFAL+ArialMT -1 TZ
70.776 618.485 226.483 113.035 re
W
n
q
0.100006 0 0 0.100006 0 0 cm
n
798 7298.59 m
798 6475.2 l
1129 6475.2 l
1129 7298.59 l
W
n
2.10831 w
4 M
n
1127.95 7134.85 m
1127.95 7120.87 1121.68 7109.55 1113.95 7109.55 c
813.048 7109.55 l
805.321 7109.55 799.054 7120.87 799.054 7134.85 c
799.054 7208.64 l
799.054 7222.61 805.321 7233.94 813.048 7233.94 c
1113.95 7233.94 l
1121.68 7233.94 1127.95 7222.61 1127.95 7208.64 c
1127.95 7134.85 l
h
0 setgray
S
9.9994 0 0 9.9994 0 0 cm
85.7903 715.22 m
/N9 6.98335 Tf
(stream) show
0.100006 0 0 0.100006 0 0 cm
n
963.5 7110.95 m
963.5 7064.57 l
f
n
963.5 7058.21 m
962.388 7061.2 960.494 7064.92 958.488 7067.22 c
963.5 7065.4 l
968.511 7067.22 l
966.506 7064.92 964.609 7061.2 963.5 7058.21 c
f
6.3248 w
n
963.5 7110.95 m
963.5 7064.57 l
S
n
963.5 7045.48 m
960.168 7054.46 954.482 7065.61 948.463 7072.51 c
963.5 7067.07 l
978.538 7072.51 l
972.517 7065.61 966.831 7054.46 963.5 7045.48 c
f
n
963.5 6919.1 m
963.5 6872.72 l
f
n
963.5 6866.35 m
962.388 6869.35 960.494 6873.06 958.488 6875.36 c
963.5 6873.55 l
968.511 6875.36 l
966.506 6873.06 964.609 6869.35 963.5 6866.35 c
f
n
963.5 6919.1 m
963.5 6872.72 l
S
n
963.5 6853.63 m
960.168 6862.61 954.482 6873.75 948.463 6880.66 c
963.5 6875.22 l
978.538 6880.66 l
972.517 6873.75 966.831 6862.61 963.5 6853.63 c
f
n
963.5 6731.46 m
963.5 6685.08 l
f
n
963.5 6678.72 m
962.388 6681.71 960.494 6685.43 958.488 6687.73 c
963.5 6685.91 l
968.511 6687.73 l
966.506 6685.43 964.609 6681.71 963.5 6678.72 c
f
n
963.5 6731.46 m
963.5 6685.08 l
S
n
963.5 6665.99 m
960.168 6674.97 954.482 6686.12 948.463 6693.02 c
963.5 6687.58 l
978.538 6693.02 l
972.517 6686.12 966.831 6674.97 963.5 6665.99 c
f
n
963.5 7298.59 m
963.5 7252.21 l
f
n
963.5 7245.84 m
962.388 7248.84 960.494 7252.55 958.488 7254.85 c
963.5 7253.04 l
968.511 7254.85 l
966.506 7252.55 964.609 7248.84 963.5 7245.84 c
f
n
963.5 7298.59 m
963.5 7252.21 l
S
n
963.5 7233.12 m
960.168 7242.1 954.482 7253.24 948.463 7260.15 c
963.5 7254.71 l
978.538 7260.15 l
972.517 7253.24 966.831 7242.1 963.5 7233.12 c
f
2.10831 w
n
1127.95 6944.29 m
1127.95 6930.32 1121.68 6918.99 1113.95 6918.99 c
813.048 6918.99 l
805.321 6918.99 799.054 6930.32 799.054 6944.29 c
799.054 7018.08 l
799.054 7032.05 805.321 7043.38 813.048 7043.38 c
1113.95 7043.38 l
1121.68 7043.38 1127.95 7032.05 1127.95 7018.08 c
1127.95 6944.29 l
h
S
9.9994 0 0 9.9994 0 0 cm
85.7905 696.253 m
(stream) show
0.100006 0 0 0.100006 0 0 cm
n
1127.95 6758.4 m
1127.95 6744.42 1121.68 6733.1 1113.95 6733.1 c
813.048 6733.1 l
805.321 6733.1 799.054 6744.42 799.054 6758.4 c
799.054 6832.19 l
799.054 6846.16 805.321 6857.49 813.048 6857.49 c
1113.95 6857.49 l
1121.68 6857.49 1127.95 6846.16 1127.95 6832.19 c
1127.95 6758.4 l
h
S
9.9994 0 0 9.9994 0 0 cm
85.7906 677.286 m
(stream) show
0.100006 0 0 0.100006 0 0 cm
n
963.5 6540.67 m
963.5 6494.28 l
f
n
963.5 6487.92 m
962.388 6490.92 960.494 6494.63 958.488 6496.93 c
963.5 6495.12 l
968.511 6496.93 l
966.506 6494.63 964.609 6490.92 963.5 6487.92 c
f
6.3248 w
n
963.5 6540.67 m
963.5 6494.28 l
S
n
963.5 6475.2 m
960.168 6484.18 954.482 6495.32 948.463 6502.23 c
963.5 6496.79 l
978.538 6502.23 l
972.517 6495.32 966.831 6484.18 963.5 6475.2 c
f
2.10831 w
n
1127.95 6565.86 m
1127.95 6551.89 1121.68 6540.57 1113.95 6540.57 c
813.048 6540.57 l
805.321 6540.57 799.054 6551.89 799.054 6565.86 c
799.054 6639.65 l
799.054 6653.63 805.321 6664.95 813.048 6664.95 c
1113.95 6664.95 l
1121.68 6664.95 1127.95 6653.63 1127.95 6639.65 c
1127.95 6565.86 l
h
S
9.9994 0 0 9.9994 0 0 cm
85.7907 658.32 m
(stream) show
Q
q
0.100006 0 0 0.100006 0 0 cm
n
1207.2 7325.09 m
1207.2 6450 l
2142.67 6450 l
2142.67 7325.09 l
W
n
9.9994 0 0 9.9994 0 0 cm
0 setgray
157.068 717.664 m
/N10 7.04625 Tf
(splitter) show
0.100006 0 0 0.100006 0 0 cm
2.1273 w
4 M
n
1811.21 7161.09 m
1811.21 7147 1806.11 7135.57 1799.81 7135.57 c
1554.58 7135.57 l
1548.28 7135.57 1543.18 7147 1543.18 7161.09 c
1543.18 7235.55 l
1543.18 7249.65 1548.28 7261.08 1554.58 7261.08 c
1799.81 7261.08 l
1806.11 7261.08 1811.21 7249.65 1811.21 7235.55 c
1811.21 7161.09 l
h
S
n
1677.29 7134.41 m
1357.58 6949.8 l
f
n
1352.02 6946.59 m
1354.08 6949.07 1356.37 6952.6 1357.37 6955.52 c
1358.31 6950.22 l
1362.42 6946.76 l
1359.4 6947.35 1355.2 6947.13 1352.02 6946.59 c
f
6.38181 w
n
1677.29 7134.41 m
1357.58 6949.8 l
S
n
1340.9 6940.17 m
1347.07 6947.61 1353.94 6958.2 1356.93 6966.95 c
1359.77 6951.06 l
1372.11 6940.67 l
1363.04 6942.44 1350.43 6941.79 1340.9 6940.17 c
f
n
1674.93 7131.07 m
1570.37 6947.78 l
f
n
1567.19 6942.21 m
1567.72 6945.38 1567.91 6949.59 1567.3 6952.61 c
1570.79 6948.51 l
1576.09 6947.6 l
1573.18 6946.58 1569.66 6944.27 1567.19 6942.21 c
f
n
1674.93 7131.07 m
1570.37 6947.78 l
S
n
1560.83 6931.05 m
1562.4 6940.59 1562.99 6953.2 1561.17 6962.26 c
1571.63 6949.98 l
1587.52 6947.22 l
1578.8 6944.18 1568.24 6937.26 1560.83 6931.05 c
f
n
1671.48 6516.06 m
1671.48 6469.26 l
f
n
1671.48 6462.84 m
1670.35 6465.86 1668.44 6469.61 1666.42 6471.93 c
1671.48 6470.1 l
1676.53 6471.93 l
1674.51 6469.61 1672.6 6465.86 1671.48 6462.84 c
f
n
1671.48 6516.06 m
1671.48 6469.26 l
S
n
1671.48 6450 m
1668.11 6459.06 1662.38 6470.3 1656.3 6477.27 c
1671.48 6471.78 l
1686.65 6477.27 l
1680.58 6470.3 1674.84 6459.06 1671.48 6450 c
f
n
1675.2 7325.09 m
1675.2 7278.29 l
f
n
1675.2 7271.87 m
1674.08 7274.9 1672.17 7278.64 1670.14 7280.97 c
1675.2 7279.14 l
1680.25 7280.97 l
1678.23 7278.64 1676.32 7274.9 1675.2 7271.87 c
f
n
1675.2 7325.09 m
1675.2 7278.29 l
S
n
1675.2 7259.04 m
1671.84 7268.1 1666.1 7279.34 1660.03 7286.31 c
1675.2 7280.82 l
1690.37 7286.31 l
1684.3 7279.34 1678.56 7268.1 1675.2 7259.04 c
f
9.9994 0 0 9.9994 0 0 cm
123.044 685.855 m
(stre) show
134.79 685.855 m
/N15 7.04625 Tf
(am) show
0.100006 0 0 0.100006 0 0 cm
2.1273 w
n
1476.3 6838.76 m
1476.3 6824.66 1471.19 6813.24 1464.89 6813.24 c
1219.67 6813.24 l
1213.37 6813.24 1208.26 6824.66 1208.26 6838.76 c
1208.26 6913.22 l
1208.26 6927.32 1213.37 6938.75 1219.67 6938.75 c
1464.89 6938.75 l
1471.19 6938.75 1476.3 6927.32 1476.3 6913.22 c
1476.3 6838.76 l
h
S
n
1675.25 7133.16 m
1994.96 6948.55 l
f
n
2000.52 6945.34 m
1997.34 6945.88 1993.14 6946.1 1990.12 6945.51 c
1994.23 6948.97 l
1995.18 6954.26 l
1996.18 6951.35 1998.46 6947.82 2000.52 6945.34 c
f
6.38181 w
n
1675.25 7133.16 m
1994.96 6948.55 l
S
n
2011.64 6938.92 m
2002.11 6940.54 1989.5 6941.19 1980.43 6939.42 c
1992.77 6949.81 l
1995.61 6965.7 l
1998.6 6956.95 2005.47 6946.36 2011.64 6938.92 c
f
n
1674.5 7132.35 m
1779.06 6949.06 l
f
n
1782.24 6943.49 m
1779.77 6945.56 1776.26 6947.86 1773.35 6948.88 c
1778.64 6949.79 l
1782.13 6953.89 l
1781.53 6950.87 1781.72 6946.66 1782.24 6943.49 c
f
n
1674.5 7132.35 m
1779.06 6949.06 l
S
n
1788.6 6932.34 m
1781.2 6938.54 1770.64 6945.46 1761.91 6948.51 c
1777.81 6951.26 l
1788.27 6963.54 l
1786.45 6954.48 1787.03 6941.87 1788.6 6932.34 c
f
n
1604.04 6887.87 m
1604.04 6884.34 1601.18 6881.49 1597.66 6881.49 c
1594.14 6881.49 1591.28 6884.34 1591.28 6887.87 c
1591.28 6891.39 1594.14 6894.25 1597.66 6894.25 c
1601.18 6894.25 1604.04 6891.39 1604.04 6887.87 c
f
n
1550.21 6887.5 m
1550.01 6883.98 1546.99 6881.29 1543.47 6881.5 c
1539.95 6881.7 1537.27 6884.72 1537.47 6888.24 c
1537.67 6891.76 1540.69 6894.44 1544.21 6894.24 c
1547.73 6894.03 1550.41 6891.02 1550.21 6887.5 c
f
n
1819.32 6887.87 m
1819.32 6884.34 1816.46 6881.49 1812.94 6881.49 c
1809.42 6881.49 1806.56 6884.34 1806.56 6887.87 c
1806.56 6891.39 1809.42 6894.25 1812.94 6894.25 c
1816.46 6894.25 1819.32 6891.39 1819.32 6887.87 c
f
n
1765.5 6887.87 m
1765.5 6884.34 1762.64 6881.49 1759.12 6881.49 c
1755.6 6881.49 1752.74 6884.34 1752.74 6887.87 c
1752.74 6891.39 1755.6 6894.25 1759.12 6894.25 c
1762.64 6894.25 1765.5 6891.39 1765.5 6887.87 c
f
n
1711.68 6887.87 m
1711.68 6884.34 1708.82 6881.49 1705.3 6881.49 c
1701.78 6881.49 1698.92 6884.34 1698.92 6887.87 c
1698.92 6891.39 1701.78 6894.25 1705.3 6894.25 c
1708.82 6894.25 1711.68 6891.39 1711.68 6887.87 c
f
n
1657.86 6887.87 m
1657.86 6884.34 1655 6881.49 1651.48 6881.49 c
1647.96 6881.49 1645.1 6884.34 1645.1 6887.87 c
1645.1 6891.39 1647.96 6894.25 1651.48 6894.25 c
1655 6894.25 1657.86 6891.39 1657.86 6887.87 c
f
n
1784.94 6818.09 m
1697.37 6658.7 l
f
n
1694.28 6653.07 m
1694.76 6656.26 1694.88 6660.46 1694.23 6663.47 c
1697.78 6659.44 l
1703.09 6658.6 l
1700.2 6657.54 1696.72 6655.18 1694.28 6653.07 c
f
n
1784.94 6818.09 m
1697.37 6658.7 l
S
n
1688.1 6641.82 m
1689.52 6651.38 1689.91 6664 1687.94 6673.03 c
1698.59 6660.91 l
1714.53 6658.42 l
1705.86 6655.23 1695.41 6648.14 1688.1 6641.82 c
f
9.9994 0 0 9.9994 0 0 cm
189.792 685.77 m
/N10 7.04625 Tf
(stre) show
201.539 685.77 m
/N15 7.04625 Tf
(am) show
0.100006 0 0 0.100006 0 0 cm
2.1273 w
n
2141.6 6837.9 m
2141.6 6823.8 2136.5 6812.37 2130.2 6812.37 c
1884.97 6812.37 l
1878.68 6812.37 1873.57 6823.8 1873.57 6837.9 c
1873.57 6912.36 l
1873.57 6926.45 1878.68 6937.88 1884.97 6937.88 c
2130.2 6937.88 l
2136.5 6937.88 2141.6 6926.45 2141.6 6912.36 c
2141.6 6837.9 l
h
S
n
1339.48 6811.94 m
1615.08 6652.8 l
f
n
1620.64 6649.59 m
1617.47 6650.13 1613.26 6650.35 1610.24 6649.76 c
1614.35 6653.22 l
1615.3 6658.51 l
1616.3 6655.6 1618.59 6652.07 1620.64 6649.59 c
f
6.38181 w
n
1339.48 6811.94 m
1615.08 6652.8 l
S
n
1631.76 6643.17 m
1622.23 6644.79 1609.63 6645.44 1600.56 6643.67 c
1612.89 6654.06 l
1615.73 6669.95 l
1618.73 6661.2 1625.59 6650.61 1631.76 6643.17 c
f
n
1561.76 6819.65 m
1653.59 6658.66 l
f
n
1656.77 6653.09 m
1654.3 6655.16 1650.79 6657.46 1647.88 6658.48 c
1653.17 6659.39 l
1656.66 6663.49 l
1656.05 6660.47 1656.25 6656.27 1656.77 6653.09 c
f
n
1561.76 6819.65 m
1653.59 6658.66 l
S
n
1663.13 6641.94 m
1655.72 6648.14 1645.17 6655.06 1636.44 6658.11 c
1652.34 6660.86 l
1662.8 6673.14 l
1660.98 6664.08 1661.56 6651.47 1663.13 6641.94 c
f
n
2011.98 6811.94 m
1735.96 6652.56 l
f
n
1730.4 6649.35 m
1732.46 6651.83 1734.75 6655.36 1735.75 6658.27 c
1736.69 6652.98 l
1740.8 6649.52 l
1737.78 6650.11 1733.58 6649.89 1730.4 6649.35 c
f
n
2011.98 6811.94 m
1735.96 6652.56 l
S
n
1719.29 6642.93 m
1725.45 6650.37 1732.32 6660.96 1735.32 6669.71 c
1738.15 6653.82 l
1750.49 6643.43 l
1741.42 6645.2 1728.82 6644.55 1719.29 6642.93 c
f
9.9994 0 0 9.9994 0 0 cm
158.825 655.793 m
/N25 [7.04615 -0.0162331 0.0162331 7.04615 0 0] Tf
(jo) show
164.309 655.78 m
/N10 [7.04615 -0.0162331 0.0162331 7.04615 0 0] Tf
(i) show
165.874 655.777 m
/N25 [7.04615 -0.0162331 0.0162331 7.04615 0 0] Tf
(n) show
169.793 655.768 m
/N10 [7.04615 -0.0162331 0.0162331 7.04615 0 0] Tf
(er) show
0.100006 0 0 0.100006 0 0 cm
2.1273 w
n
1805.41 6541.9 m
1805.37 6527.8 1800.24 6516.38 1793.94 6516.4 c
1548.72 6516.97 l
1542.42 6516.98 1537.34 6528.42 1537.37 6542.52 c
1537.55 6616.98 l
1537.58 6631.08 1542.71 6642.49 1549.01 6642.48 c
1794.24 6641.91 l
1800.53 6641.89 1805.61 6630.45 1805.58 6616.35 c
1805.41 6541.9 l
h
S
Q
q
0.100006 0 0 0.100006 0 0 cm
n
2220 7201.65 m
2220 6572.4 l
2952.64 6572.4 l
2952.64 7201.65 l
W
n
2.09711 w
4 M
n
2548.2 7038.78 m
2548.2 7024.88 2541.97 7013.61 2534.28 7013.61 c
2234.97 7013.61 l
2227.28 7013.61 2221.05 7024.88 2221.05 7038.78 c
2221.05 7112.18 l
2221.05 7126.08 2227.28 7137.34 2234.97 7137.34 c
2534.28 7137.34 l
2541.97 7137.34 2548.2 7126.08 2548.2 7112.18 c
2548.2 7038.78 l
h
0 setgray
S
9.9994 0 0 9.9994 0 0 cm
230.402 705.393 m
/N22 6.94644 Tf
(joiner) show
0.100006 0 0 0.100006 0 0 cm
n
2386.72 7015.01 m
2386.72 6968.87 l
f
n
2386.72 6962.54 m
2385.62 6965.52 2383.73 6969.22 2381.74 6971.5 c
2386.72 6969.7 l
2391.71 6971.5 l
2389.71 6969.22 2387.83 6965.52 2386.72 6962.54 c
f
6.2914 w
n
2386.72 7015.01 m
2386.72 6968.87 l
S
n
2386.72 6949.89 m
2383.41 6958.82 2377.75 6969.9 2371.76 6976.77 c
2386.72 6971.36 l
2401.68 6976.77 l
2395.69 6969.9 2390.03 6958.82 2386.72 6949.89 c
f
n
2386.72 6824.17 m
2386.72 6778.03 l
f
n
2386.72 6771.7 m
2385.62 6774.68 2383.73 6778.38 2381.74 6780.66 c
2386.72 6778.86 l
2391.71 6780.66 l
2389.71 6778.38 2387.83 6774.68 2386.72 6771.7 c
f
n
2386.72 6824.17 m
2386.72 6778.03 l
S
n
2386.72 6759.05 m
2383.41 6767.98 2377.75 6779.06 2371.76 6785.93 c
2386.72 6780.52 l
2401.68 6785.93 l
2395.69 6779.06 2390.03 6767.98 2386.72 6759.05 c
f
n
2386.72 6637.52 m
2386.72 6591.39 l
f
n
2386.72 6585.06 m
2385.62 6588.03 2383.73 6591.73 2381.74 6594.02 c
2386.72 6592.21 l
2391.71 6594.02 l
2389.71 6591.73 2387.83 6588.03 2386.72 6585.06 c
f
n
2386.72 6637.52 m
2386.72 6591.39 l
S
n
2386.72 6572.4 m
2383.41 6581.33 2377.75 6592.42 2371.76 6599.29 c
2386.72 6593.88 l
2401.68 6599.29 l
2395.69 6592.42 2390.03 6581.33 2386.72 6572.4 c
f
n
2386.72 7201.65 m
2386.72 7155.52 l
f
n
2386.72 7149.19 m
2385.62 7152.17 2383.73 7155.86 2381.74 7158.15 c
2386.72 7156.35 l
2391.71 7158.15 l
2389.71 7155.86 2387.83 7152.17 2386.72 7149.19 c
f
n
2386.72 7201.65 m
2386.72 7155.52 l
S
n
2386.72 7136.53 m
2383.41 7145.46 2377.75 7156.55 2371.76 7163.42 c
2386.72 7158.01 l
2401.68 7163.42 l
2395.69 7156.55 2390.03 7145.46 2386.72 7136.53 c
f
2.09711 w
n
2548.2 6849.23 m
2548.2 6835.33 2541.97 6824.06 2534.28 6824.06 c
2234.97 6824.06 l
2227.28 6824.06 2221.05 6835.33 2221.05 6849.23 c
2221.05 6922.63 l
2221.05 6936.53 2227.28 6947.8 2234.97 6947.8 c
2534.28 6947.8 l
2541.97 6947.8 2548.2 6936.53 2548.2 6922.63 c
2548.2 6849.23 l
h
S
9.9994 0 0 9.9994 0 0 cm
228.283 686.438 m
/N31 6.94644 Tf
(st) show
233.686 686.438 m
/N22 6.94644 Tf
(re) show
239.862 686.438 m
/N31 6.94644 Tf
(am) show
0.100006 0 0 0.100006 0 0 cm
n
2548.2 6664.32 m
2548.2 6650.42 2541.97 6639.15 2534.28 6639.15 c
2234.97 6639.15 l
2227.28 6639.15 2221.05 6650.42 2221.05 6664.32 c
2221.05 6737.72 l
2221.05 6751.61 2227.28 6762.88 2234.97 6762.88 c
2534.28 6762.88 l
2541.97 6762.88 2548.2 6751.61 2548.2 6737.72 c
2548.2 6664.32 l
h
S
9.9994 0 0 9.9994 0 0 cm
228.668 667.947 m
(s) show
232.141 667.947 m
/N30 6.94644 Tf
(pl) show
237.548 667.947 m
/N22 6.94644 Tf
(i) show
239.091 667.947 m
/N31 6.94644 Tf
(tt) show
242.951 667.947 m
/N22 6.94644 Tf
(er) show
0.100006 0 0 0.100006 0 0 cm
n
2951.59 6849.23 m
2951.59 6835.33 2945.35 6824.06 2937.67 6824.06 c
2638.35 6824.06 l
2630.67 6824.06 2624.43 6835.33 2624.43 6849.23 c
2624.43 6922.63 l
2624.43 6936.53 2630.67 6947.8 2638.35 6947.8 c
2937.67 6947.8 l
2945.35 6947.8 2951.59 6936.53 2951.59 6922.63 c
2951.59 6849.23 l
h
S
9.9994 0 0 9.9994 0 0 cm
268.625 686.44 m
/N31 6.94644 Tf
(st) show
274.028 686.44 m
/N22 6.94644 Tf
(re) show
280.205 686.44 m
/N31 6.94644 Tf
(am) show
0.100006 0 0 0.100006 0 0 cm
6.2914 w
n
2554.49 6698.28 m
2783.08 6698.28 l
S
n
2785.18 6694.09 m
2785.18 6811.59 l
f
n
2785.18 6817.92 m
2786.28 6814.94 2788.17 6811.24 2790.16 6808.96 c
2785.18 6810.76 l
2780.19 6808.96 l
2782.19 6811.24 2784.07 6814.94 2785.18 6817.92 c
f
n
2785.18 6694.09 m
2785.18 6811.59 l
S
n
2785.18 6830.57 m
2788.49 6821.64 2794.15 6810.56 2800.14 6803.69 c
2785.18 6809.1 l
2770.22 6803.69 l
2776.21 6810.56 2781.86 6821.64 2785.18 6830.57 c
f
n
2554.46 7079.96 m
2557.43 7081.07 2561.13 7082.95 2563.42 7084.95 c
2561.61 7079.96 l
2563.42 7074.98 l
2561.13 7076.97 2557.43 7078.86 2554.46 7079.96 c
1  setgray
f
n
2787.28 6943.65 m
2787.28 7079.96 l
2560.79 7079.96 l
0  setgray
S
n
2541.8 7079.96 m
2550.73 7083.28 2561.82 7088.93 2568.69 7094.92 c
2563.27 7079.96 l
2568.69 7065.01 l
2561.82 7070.99 2550.73 7076.65 2541.8 7079.96 c
f
Q
q
0.100006 0 0 0.100006 0 0 cm
n
3240 7006.14 m
3240 6397.2 l
4908.56 6397.2 l
4908.56 7006.14 l
W
n
9.9994 0 0 9.9994 0 0 cm
Q
q
0.100006 0 0 0.100006 0 0 cm
n
5068.8 7018.95 m
5068.8 6516 l
5399.8 6516 l
5399.8 7018.95 l
W
n
2.10831 w
4 M
9.9994 0 0 9.9994 0 0 cm
0.100006 0 0 0.100006 0 0 cm
6.3248 w
2.10831 w
9.9994 0 0 9.9994 0 0 cm
0.100006 0 0 0.100006 0 0 cm
9.9994 0 0 9.9994 0 0 cm
Q
0 setgray
72.0044 625.238 m
/N39 9.96367 Tf
(\(a)
[3.35766 4.43375 ] pdfxs
79.7958 625.238 m
(\)) show
85.5537 625.238 m
(pipelin)
[5.03155 2.75986 5.03155 4.43375 2.75986 2.75986 5.03155 ] pdfxs
113.362 625.238 m
/N41 9.96367 Tf
(e) show
146.17 625.238 m
/N39 9.96367 Tf
(\(b)
[3.35766 5.03155 ] pdfxs
154.559 625.238 m
/N41 9.96367 Tf
(\)) show
160.277 625.238 m
/N39 9.96367 Tf
(splitjoin)
[3.83596 5.03155 2.75986 2.75986 2.75986 2.75986 5.03155 2.75986 5.03155 ] pdfxs
217.916 625.238 m
(\(c)
[3.35766 4.43375 ] pdfxs
225.707 625.238 m
(\)) show
231.345 625.238 m
(feedback)
[3.35766 4.43375 4.43375 5.03155 5.03155 4.43375 4.43375 5.03155 ] pdfxs
270.024 625.238 m
(loop)
[2.75986 5.03155 5.03155 5.03155 ] pdfxs
q
468.149 0 0 -0.479996 71.9924 592.944 cm
Q
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font ArialMT
%%+ font TimesNewRomanPSMT
%%+ font Times-Roman
%%+ font Courier
%%+ font Times-Italic
%%+ font Times-Bold
%%+ font TimesNewRomanPSMT
%%+ font Times-Bold
%%+ font Times-Roman
%%EOF
