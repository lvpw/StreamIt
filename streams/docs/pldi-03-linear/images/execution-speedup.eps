%!PS-Adobe-3.1 EPSF-3.0
%%Title: execution-speedup.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0%AI9_PrintingDataBegin%%For: Bill Thies
%%CreationDate: 4/21/2003
%%CropBox: 0.000000 0.000000 661.874023 439.516602
%%BoundingBox: 0 0 662 440 
%%HiResBoundingBox: 0.000000 0.000000 661.874023 439.516602
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -439.517 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 439.517 ln
661.874 439.517 ln
661.874 0 ln
clp
gsave
65.999 410.999 mo
596.999 410.999 ln
596.999 410.249 ln
65.999 410.249 ln
65.999 410.999 ln
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.999 410.249 mo
596.999 410.249 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
65.999 301.499 mo
596.999 301.499 ln
596.999 300.749 ln
65.999 300.749 ln
65.999 301.499 ln
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.999 300.749 mo
596.999 300.749 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
65.999 264.749 mo
596.999 264.749 ln
596.999 263.999 ln
65.999 263.999 ln
65.999 264.749 ln
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.999 263.999 mo
596.999 263.999 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
65.999 227.999 mo
596.999 227.999 ln
596.999 227.249 ln
65.999 227.249 ln
65.999 227.999 ln
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.999 227.249 mo
596.999 227.249 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
65.999 191.249 mo
596.999 191.249 ln
596.999 190.499 ln
65.999 190.499 ln
65.999 191.249 ln
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.999 190.499 mo
596.999 190.499 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
65.999 154.499 mo
596.999 154.499 ln
596.999 153.749 ln
65.999 153.749 ln
65.999 154.499 ln
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.999 153.749 mo
596.999 153.749 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
65.999 117.749 mo
596.999 117.749 ln
596.999 116.999 ln
65.999 116.999 ln
65.999 117.749 ln
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.999 116.999 mo
596.999 116.999 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
65.999 81.749 mo
596.999 81.749 ln
596.999 80.999 ln
65.999 80.999 ln
65.999 81.749 ln
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.999 80.999 mo
596.999 80.999 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
65.999 44.999 mo
596.999 44.999 ln
596.999 44.249 ln
65.999 44.249 ln
65.999 44.999 ln
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.999 44.249 mo
596.999 44.249 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
65.999 8.24902 mo
596.999 8.24902 ln
596.999 7.49902 ln
65.999 7.49902 ln
65.999 8.24902 ln
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.999 7.49902 mo
596.999 7.49902 ln
false op
0 0 0 1 cmyk
s
grestore
76.499 351.749 mo
88.499 351.749 ln
88.499 337.499 ln
76.499 337.499 ln
76.499 351.749 ln
false op
0.12549 0.0862745 0.0666667 0.00392157 cmyk
f
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.749 351.749 mo
88.499 351.749 ln
88.499 336.749 ln
75.749 336.749 ln
75.749 351.749 ln
cp
0 0 0 1 cmyk
s
135.749 336.749 mo
146.999 336.749 ln
146.999 257.999 ln
135.749 257.999 ln
135.749 336.749 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
f
134.999 336.749 mo
146.999 336.749 ln
146.999 257.249 ln
134.999 257.249 ln
134.999 336.749 ln
cp
0 0 0 1 cmyk
s
194.249 348.749 mo
206.249 348.749 ln
206.249 337.499 ln
194.249 337.499 ln
194.249 348.749 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
f
193.499 348.749 mo
206.249 348.749 ln
206.249 336.749 ln
193.499 336.749 ln
193.499 348.749 ln
cp
0 0 0 1 cmyk
s
253.499 336.749 mo
265.499 336.749 ln
265.499 189.749 ln
253.499 189.749 ln
253.499 336.749 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
f
252.749 336.749 mo
265.499 336.749 ln
265.499 188.999 ln
252.749 188.999 ln
252.749 336.749 ln
cp
0 0 0 1 cmyk
s
312.749 362.249 mo
323.999 362.249 ln
323.999 337.499 ln
312.749 337.499 ln
312.749 362.249 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
f
311.999 362.249 mo
323.999 362.249 ln
323.999 336.749 ln
311.999 336.749 ln
311.999 362.249 ln
cp
0 0 0 1 cmyk
s
371.249 336.749 mo
383.249 336.749 ln
383.249 239.999 ln
371.249 239.999 ln
371.249 336.749 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
f
370.499 336.749 mo
383.249 336.749 ln
383.249 239.249 ln
370.499 239.249 ln
370.499 336.749 ln
cp
0 0 0 1 cmyk
s
430.499 336.749 mo
442.499 336.749 ln
442.499 281.999 ln
430.499 281.999 ln
430.499 336.749 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
f
429.749 336.749 mo
442.499 336.749 ln
442.499 281.249 ln
429.749 281.249 ln
429.749 336.749 ln
cp
0 0 0 1 cmyk
s
489.749 336.749 mo
500.999 336.749 ln
500.999 314.999 ln
489.749 314.999 ln
489.749 336.749 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
f
488.999 336.749 mo
500.999 336.749 ln
500.999 314.249 ln
488.999 314.249 ln
488.999 336.749 ln
cp
0 0 0 1 cmyk
s
548.249 341.999 mo
560.249 341.999 ln
560.249 337.499 ln
548.249 337.499 ln
548.249 341.999 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
f
547.499 341.999 mo
560.249 341.999 ln
560.249 336.749 ln
547.499 336.749 ln
547.499 341.999 ln
cp
0 0 0 1 cmyk
s
89.999 336.749 mo
101.249 336.749 ln
101.249 169.499 ln
89.999 169.499 ln
89.999 336.749 ln
0.427451 0.309804 0.282353 0.12549 cmyk
f
89.249 336.749 mo
101.249 336.749 ln
101.249 168.749 ln
89.249 168.749 ln
89.249 336.749 ln
cp
0 0 0 1 cmyk
s
148.499 336.749 mo
160.499 336.749 ln
160.499 146.249 ln
148.499 146.249 ln
148.499 336.749 ln
0.427451 0.309804 0.282353 0.12549 cmyk
f
147.749 336.749 mo
160.499 336.749 ln
160.499 145.499 ln
147.749 145.499 ln
147.749 336.749 ln
cp
0 0 0 1 cmyk
s
207.749 336.749 mo
218.999 336.749 ln
218.999 222.749 ln
207.749 222.749 ln
207.749 336.749 ln
0.427451 0.309804 0.282353 0.12549 cmyk
f
206.999 336.749 mo
218.999 336.749 ln
218.999 221.999 ln
206.999 221.999 ln
206.999 336.749 ln
cp
0 0 0 1 cmyk
s
266.999 336.749 mo
278.249 336.749 ln
278.249 148.499 ln
266.999 148.499 ln
266.999 336.749 ln
0.427451 0.309804 0.282353 0.12549 cmyk
f
266.249 336.749 mo
278.249 336.749 ln
278.249 147.749 ln
266.249 147.749 ln
266.249 336.749 ln
cp
0 0 0 1 cmyk
s
325.499 372.749 mo
337.499 372.749 ln
337.499 337.499 ln
325.499 337.499 ln
325.499 372.749 ln
0.427451 0.309804 0.282353 0.12549 cmyk
f
324.749 372.749 mo
337.499 372.749 ln
337.499 336.749 ln
324.749 336.749 ln
324.749 372.749 ln
cp
0 0 0 1 cmyk
s
384.749 336.749 mo
395.999 336.749 ln
395.999 44.999 ln
384.749 44.999 ln
384.749 336.749 ln
0.427451 0.309804 0.282353 0.12549 cmyk
f
383.999 336.749 mo
395.999 336.749 ln
395.999 44.249 ln
383.999 44.249 ln
383.999 336.749 ln
cp
0 0 0 1 cmyk
s
443.999 336.749 mo
455.249 336.749 ln
455.249 296.249 ln
443.999 296.249 ln
443.999 336.749 ln
0.427451 0.309804 0.282353 0.12549 cmyk
f
443.249 336.749 mo
455.249 336.749 ln
455.249 295.499 ln
443.249 295.499 ln
443.249 336.749 ln
cp
0 0 0 1 cmyk
s
502.499 336.749 mo
514.499 336.749 ln
514.499 130.499 ln
502.499 130.499 ln
502.499 336.749 ln
0.427451 0.309804 0.282353 0.12549 cmyk
f
501.749 336.749 mo
514.499 336.749 ln
514.499 129.749 ln
501.749 129.749 ln
501.749 336.749 ln
cp
0 0 0 1 cmyk
s
561.749 336.749 mo
572.999 336.749 ln
572.999 251.249 ln
561.749 251.249 ln
561.749 336.749 ln
0.427451 0.309804 0.282353 0.12549 cmyk
f
560.999 336.749 mo
572.999 336.749 ln
572.999 250.499 ln
560.999 250.499 ln
560.999 336.749 ln
cp
0 0 0 1 cmyk
s
102.749 336.749 mo
114.749 336.749 ln
114.749 169.499 ln
102.749 169.499 ln
102.749 336.749 ln
0.647059 0.509804 0.517647 0.552941 cmyk
f
101.999 336.749 mo
114.749 336.749 ln
114.749 168.749 ln
101.999 168.749 ln
101.999 336.749 ln
cp
0 0 0 1 cmyk
s
161.999 336.749 mo
173.249 336.749 ln
173.249 146.249 ln
161.999 146.249 ln
161.999 336.749 ln
0.647059 0.509804 0.517647 0.552941 cmyk
f
161.249 336.749 mo
173.249 336.749 ln
173.249 145.499 ln
161.249 145.499 ln
161.249 336.749 ln
cp
0 0 0 1 cmyk
s
220.499 336.749 mo
232.499 336.749 ln
232.499 177.749 ln
220.499 177.749 ln
220.499 336.749 ln
0.647059 0.509804 0.517647 0.552941 cmyk
f
219.749 336.749 mo
232.499 336.749 ln
232.499 176.999 ln
219.749 176.999 ln
219.749 336.749 ln
cp
0 0 0 1 cmyk
s
279.749 336.749 mo
291.749 336.749 ln
291.749 65.249 ln
279.749 65.249 ln
279.749 336.749 ln
0.647059 0.509804 0.517647 0.552941 cmyk
f
278.999 336.749 mo
291.749 336.749 ln
291.749 64.499 ln
278.999 64.499 ln
278.999 336.749 ln
cp
0 0 0 1 cmyk
s
338.999 336.749 mo
350.249 336.749 ln
350.249 335.999 ln
338.999 335.999 ln
338.999 336.749 ln
0.647059 0.509804 0.517647 0.552941 cmyk
f
338.249 336.749 mo
350.249 336.749 ln
350.249 335.249 ln
338.249 335.249 ln
338.249 336.749 ln
cp
0 0 0 1 cmyk
s
397.499 336.749 mo
409.499 336.749 ln
409.499 44.999 ln
397.499 44.999 ln
397.499 336.749 ln
0.647059 0.509804 0.517647 0.552941 cmyk
f
396.749 336.749 mo
409.499 336.749 ln
409.499 44.249 ln
396.749 44.249 ln
396.749 336.749 ln
cp
0 0 0 1 cmyk
s
456.749 336.749 mo
468.749 336.749 ln
468.749 236.999 ln
456.749 236.999 ln
456.749 336.749 ln
0.647059 0.509804 0.517647 0.552941 cmyk
f
455.999 336.749 mo
468.749 336.749 ln
468.749 236.249 ln
455.999 236.249 ln
455.999 336.749 ln
cp
0 0 0 1 cmyk
s
515.999 336.749 mo
527.249 336.749 ln
527.249 130.499 ln
515.999 130.499 ln
515.999 336.749 ln
0.647059 0.509804 0.517647 0.552941 cmyk
f
515.249 336.749 mo
527.249 336.749 ln
527.249 129.749 ln
515.249 129.749 ln
515.249 336.749 ln
cp
0 0 0 1 cmyk
s
574.499 336.749 mo
586.499 336.749 ln
586.499 251.249 ln
574.499 251.249 ln
574.499 336.749 ln
0.647059 0.509804 0.517647 0.552941 cmyk
f
573.749 336.749 mo
586.499 336.749 ln
586.499 250.499 ln
573.749 250.499 ln
573.749 336.749 ln
cp
0 0 0 1 cmyk
s
65.999 7.49902 mo
65.999 410.249 ln
s
62.249 410.249 mo
65.999 410.249 ln
s
62.249 373.499 mo
65.999 373.499 ln
s
62.249 336.749 mo
65.999 336.749 ln
s
62.249 300.749 mo
65.999 300.749 ln
s
62.249 263.999 mo
65.999 263.999 ln
s
62.249 227.249 mo
65.999 227.249 ln
s
62.249 190.499 mo
65.999 190.499 ln
s
62.249 153.749 mo
65.999 153.749 ln
s
62.249 116.999 mo
65.999 116.999 ln
s
62.249 80.999 mo
65.999 80.999 ln
s
62.249 44.249 mo
65.999 44.249 ln
s
62.249 7.49902 mo
65.999 7.49902 ln
s
65.999 336.749 mo
596.999 336.749 ln
s
65.999 340.499 mo
65.999 336.749 ln
s
125.249 340.499 mo
125.249 336.749 ln
s
183.749 340.499 mo
183.749 336.749 ln
s
242.999 340.499 mo
242.999 336.749 ln
s
302.249 340.499 mo
302.249 336.749 ln
s
360.749 340.499 mo
360.749 336.749 ln
s
419.999 340.499 mo
419.999 336.749 ln
s
479.249 340.499 mo
479.249 336.749 ln
s
537.749 340.499 mo
537.749 336.749 ln
s
596.999 340.499 mo
596.999 336.749 ln
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/percent 
<10bf317037023d4c0d7ec55f50e0d703cca3a91924009f4c54fa159cf720
05369ccdabc1406ade1a67cb8d912b310ad9f04e6f3b28d418a72a41c0d1
82546e1a7620eb97f057ef2d2818c17e8fa65f685e4d4e5e802ebc46e74f
c24c6aab9527e691343fc6ee843822158aa5860b42421d2cab508fb7a1ef
041bfd9f3df048726b67a5f3d9d2baebfd0da8f41a68b5c249e6306143da
781c59bfed50e7b6aa0d30f5637d48a589fe7132f9df130dbf99124377cd
7bec8347fb1962a828f67cbccb3ac9a2a465f606f6dca2f8b5b7ed55449e
3181f995ae07070d2e5a09dafab52c13b0e8aa5df2ffa25948b618b258ef
82606b00e5d7d3dd2d855510591e51de1d44623ab7287d84635357e7f605
27875c0c> ND 
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 37 /percent put
dup 45 /hyphen put
dup 48 /zero put
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
37{/.notdef}repeat /percent 7{/.notdef}repeat /hyphen 2{/.notdef}repeat /zero /.notdef /two 
205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
21.749 414.749 mov
-0.0359802 0 (-200%) ash
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
21.749 377.999 mov
(-) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
25.7087 377.999 mov
(1) sh
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
32.3459 377.999 mov
-0.0359344 0 (00%) ash
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
38.999 341.249 mov
-0.0479584 0 (0%) ash
restore_ctm
save_ctm
/ArialMT*2 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
25.499 305.249 mov
(1) sh
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
32.1842 305.249 mov
0.0120392 0 (00%) ash
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
25.499 268.499 mov
0.0120392 0 (200%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
51{/.notdef}repeat /three 204{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
25.499 231.749 mov
(3) sh
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
32.1842 231.749 mov
0.0120392 0 (00%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
25.499 194.999 mov
(4) sh
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
32.1842 194.999 mov
0.0120392 0 (00%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f72e955f0050b5472
6b68794743aa9e2640fbbbe965e5c7462a0da2fe3396d6994552b6fd7b9f
c3a7f776be319813ddb449d1a761c2a25379bcdbddb59583b40898699b48
1611e523f8146fbaea058eb8237d1f8ef6c080ecb39f96cb6c0db3e3c586
248bc7c61f659dbd2f8aadac81a2448e7137d524> ND 
end end
end
/ArialMT findfont /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
53{/.notdef}repeat /five 202{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
25.499 158.249 mov
(5) sh
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
32.1842 158.249 mov
0.0120392 0 (00%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
25.499 121.499 mov
(6) sh
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
32.1842 121.499 mov
0.0120392 0 (00%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/seven 
<10bf317048559e9c292b4762aa54ba120a145df60b670d87c36c3ee92d5b
39c9648a6d5ce1131c9257911f8bc7e67b7a2848cf37308ba0025304ca48
4c163915b2d4c913b4486d09> ND 
end end
end
/ArialMT findfont /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
55{/.notdef}repeat /seven 200{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
25.499 85.499 mov
(7) sh
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
32.1842 85.499 mov
0.0120392 0 (00%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
25.499 48.749 mov
(8) sh
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
32.1842 48.749 mov
0.0120392 0 (00%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52805a666
172babb1d73a09fb0432847d9265c3c057d0112d971ed0197edf6801f0cc
d27a4300d973d4627332ff0ca814c0ce250c35754139515ccbb98571061c
85e232c5d2724d28cade69abed806808a329f904488eec02d4bf36c25046
f7a1306ac101498c67190cf8a8e43a1298791a833df5d0225170130cde4e
6dbabf7a8e794c3de6dcec3e9a0c2449b47003a2eed622096fc30cf785b4
a1aacc0e4ca1048fbda9f51c6b8cea845ce656cef8e1da09ee2450f7b737
e0b1217086fc607fb5d514dedd6adb> ND 
end end
end
/ArialMT findfont /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
57{/.notdef}repeat /nine 198{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
25.499 11.999 mov
(9) sh
/ArialMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
32.1842 11.999 mov
0.0120392 0 (00%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT Initial
11 dict begin
/FontName /Arial-BoldMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/B 
<10bf317026ba2bbce92b978098e619897ab994f12b29b50b1a37e1df35af
c77b66274e94150451fc95e985c6c08f95aab316f7962853a630615432e2
1b8272f8d5ed3c35413a3be96787373ca9ee58c2b3c8f88c5e7f2b46cbc6
da244bdfcf527fb63a2bf6fdd1a3a182d97472c35edad437c1ad62957493
5f64399df752833660c1e1a5e9502a0791769a0c3bb4ce864eaea539b5fc
7ca689f1de9edb8fe0585da90a4f2b54ec3e4d6de3597cb0348b9c628e65
65ccc066957c911710c8f29dce32bb8485782f3c37c00a4751995c320cb4
a1620a6c345e> ND 
/a 
<10bf31705d64e193f644676913533d4f242c323584e641872a5c1de0a45b
c11c47ee3d23ae30ec51b7900366fc3318b4ef94c2953a10b5936c67bc95
df7d37c51b5487300f67d7441f8269f5ffc887ceba6bde7cff93c7f647b8
311cc86f0853364498b70618adebf5a2e115a1c20cfb7121a3dfe7a5b7c6
add7b2d5dcfe3b3af6bf0816da6c357f0ae9724881ff8f104b4595e63917
d60898e28a9be18eecaba21d899347bbf3b3e35b2af907ddcc3e7d8ba400
d792f1ad86a4f4b8ea1a66ecd59933affcb926ce97be7483e84631a143e2
e179131e4623f6ff518ffb182bef0db8119fa8d1563d701d2106ef6ee4> ND 
/c 
<10bf317047276c49998622737f5c0fdc953989c609349f8198e567ba3d39
2d8c9b20497fb0a1ab50b280cbda93c4b37a5526c420af9ef3900c7fb283
205f311e91d93c70e400c5046b03a4aac576b29b2c7de42ac653c03179da
3539d27b77207dfbb8455d3504430410d87009da808518a61cc55d987a14
eacf1822ce81958eb18adf5067aeef> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
27ce5de111138125f9093766174f312900bc907ba83f063c596c451528f2
8a3f9d1e22e4c33f68809148715a52e927c4da64b149239c9db47f7f7686
ed072ee6b7334e9d8f3063889e2ee63ce6f7e07b343f8999bbc054ae2b06
c6fa9f71ffbc2111aef9e940176dfcabb2a79aea515293> ND 
/h 
<10bf31702094fda29d7d9038ab4fee8abf76646fa4a846d0367c68488384
7072fb940cbd22f4690ef440df392c4d96ca01e2e586bed9d948f27f9979
68c93efdb995ee74bc9cb6bbb9d3862655cd42ed564b131b6d358c5ef80c
2237740c4e3cf8f75d67bcc464609c7b4273da3c696cee03dad8> ND 
/k 
<10bf31703cf850293dbeacb4825d9b43eba4ffb09ca807300a6840933215
67484a102e8968ac891b9c55c03edb3428b3c6b22f37d92d6e5be6> ND 
/m 
<10bf31703bc84f280bc926798acdec2516276f3d24aa85ca9a257a88e668
ad6a657479da889671cd25759330144397f939b3b43dbbb312036f39eb3b
73a321a0cd09c9f24d1815b01926ce18ac4a050fa89875f0ba26a9c289a2
96ce6616eb926ccbacea4e64f1080064c63a54d52aea5a1a640c06660ba7
9c303d2b7feb1ae62b835f35563410ff3552f3587e4d3552c5806bbf660e
e7049cf393e3b6172e6515fca5010cb65be9e382131e8cf3a71499b433> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073caa5a4880edc0519edde9
3b7e79d27ff1cc1a7f5a6acdc915e4245b62ae0fac07b1618eb64ef312c8
189ae1a0f41d9ffc939b577e79e262d221101176596e459e6e66acb6f95b
e4bfb69a69ecf51cfd34996ad9e4e4f1108e778b29c01f6f36d44356> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184ac30254fb69f4898f904e779cc
cdf8991cca76a0c49ebb55db4360f969cdec63227973a8dbca70a1074b85
36761b137a1d527cb4c37dcbcb389ee07d6f305d1223> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Arial-BoldMT findfont /Encoding get
dup 66 /B put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 114 /r put
pop
%ADOEndSubsetFont
/Arial-BoldMT*1 
[
66{/.notdef}repeat /B 30{/.notdef}repeat /a /.notdef /c /.notdef /e 
2{/.notdef}repeat /h 2{/.notdef}repeat /k /.notdef /m /n 3{/.notdef}repeat 
/r 141{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*1 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
298.499 434.999 mov
0.0720367 0 (Benchmark) ash
restore_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/S 
<10bf31705d65c0900ab6f1dec2032040522da1778ab1f8dbd6f39e50575f
52250ed883fefd73047e46389dc27ed35368c13d67ccff3e72181d1ac631
1700339f08ca27d037db9405f13d00088e1b28f177b15a22fa40f81d1a75
44a4000f0266a11f21625d90c40b82cc1eb172633b7488d80fc45db85753
17eb9df5ab42e2ae2af288dac456f86913b01c5d2d521d5c08cea64a34f3
c481f9c4573367f7e378128185921449b6927a1579586b2b1b71fa9e4a59
2f38c71da73a3084aa09675bfdf7f1b1d39296c9c0e626974999e7191dd2
dec61a20006ae8> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a75b53d1c665062d85e
9208be1984d80ca429b440be0d79933714c529b927b56e27825e8eadf74f
14e87b6f85165a926eb74adcd0c093eaac7ff05d0f72baa4233a39845afa
6811b2b5de2df75f454bd343fe08c0e8b39c4af7e58c543ec2dcd039c6db
ad50c8e41d8a0dfab92fa56fd03c98ce6668feed> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9f6e2a066904f62de83a0a
2387f9b423cab37d6ce38b09f0a443a91da0549e8766c701cb72086b9bb8
329aeb3074533c8ae19f93708fdfd8a4bfcd1f14323c5d4d22f0e0487985
e04e4881400fae5ca8a56a6e530dbd27716785a1e4082d8e7af1456094de
07a9f290847b62e8e81f4f64d7792fa0e74ccd25e9bd4e7ae1337d> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5feaf9f39c3bc26
caa14daea01213f2ff600170c95bfabf18052fd4b5af83e9027c7a767d82
8fbfb100edf40ba6b9b6e84650c3369f9b1f9e74f24cd40bab49730d26db
5fb7e28f767951f04459886909b03e0cd87868558866ff18> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 83 /S put
dup 100 /d put
dup 112 /p put
dup 117 /u put
pop
%ADOEndSubsetFont
/Arial-BoldMT*2 
[
83{/.notdef}repeat /S 16{/.notdef}repeat /d 11{/.notdef}repeat /p 4{/.notdef}repeat /u 
138{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*2 findfont [0 -11.9987 -11.9987 0 0 0 ]mfnt sfnt
BuildWidthShowArray
11.999 234.749 mov
0 -0.156036 (Sp) ash
/Arial-BoldMT*1 findfont [0 -11.9987 -11.9987 0 0 0 ]mfnt sfnt
BuildWidthShowArray
11.999 219.105 mov
0 -0.156021 (ee) ash
/Arial-BoldMT*2 findfont [0 -11.9987 -11.9987 0 0 0 ]mfnt sfnt
BuildWidthShowArray
11.999 205.446 mov
0 -0.156036 (dup) ash
605.999 235.499 mo
661.499 235.499 ln
661.499 182.249 ln
605.999 182.249 ln
605.999 235.499 ln
0 0 0 0 cmyk
f
605.249 235.499 mo
661.499 235.499 ln
661.499 181.499 ln
605.249 181.499 ln
605.249 235.499 ln
cp
0 0 0 1 cmyk
s
610.499 194.999 mo
616.499 194.999 ln
616.499 188.999 ln
610.499 188.999 ln
610.499 194.999 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
f
609.749 194.999 mo
616.499 194.999 ln
616.499 188.249 ln
609.749 188.249 ln
609.749 194.999 ln
cp
0 0 0 1 cmyk
s
save_ctm
restore_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
97{/.notdef}repeat /a 3{/.notdef}repeat /e 3{/.notdef}repeat /i 2{/.notdef}repeat /l 
/.notdef /n 3{/.notdef}repeat /r 141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
620.249 195.749 mov
0.000244141 0 wsa 97 get -0.143997 0 (linear) awsh
610.499 212.999 mo
616.499 212.999 ln
616.499 206.999 ln
610.499 206.999 ln
610.499 212.999 ln
0.427451 0.309804 0.282353 0.12549 cmyk
f
609.749 212.999 mo
616.499 212.999 ln
616.499 206.249 ln
609.749 206.249 ln
609.749 212.999 ln
cp
0 0 0 1 cmyk
s
save_ctm
restore_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
/q 
<10bf31705c36af5cef64feff3875e93eaf63e864fd70bb6a23335213cb92
613ef6659d57bc2de254cc566d895f5f133292f3976aa75f0d8220b64377
ad3b9e0cca6d8636b6227e93d3d5b69cfe8190601c5aababb869cf2a2c3c
0faebccc9d8bc5cf47ae76bd1e7c93faffdb072fb9b42389012d94496b07
587d7aa3589ca1cc4d727b6e3d5da767a9601bc235c68de176> ND 
end end
end
/ArialMT findfont /Encoding get
dup 102 /f put
dup 113 /q put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
102{/.notdef}repeat /f 10{/.notdef}repeat /q 142{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
620.249 213.749 mov
(f) sh
/ArialMT*10 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
623.475 213.749 mov
-0.107971 0 (re) ash
/ArialMT*11 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
633.928 213.749 mov
(q) sh
610.499 230.999 mo
616.499 230.999 ln
616.499 224.999 ln
610.499 224.999 ln
610.499 230.999 ln
0.647059 0.509804 0.517647 0.552941 cmyk
f
609.749 230.999 mo
616.499 230.999 ln
616.499 224.249 ln
609.749 224.249 ln
609.749 230.999 ln
cp
0 0 0 1 cmyk
s
save_ctm
restore_ctm
save_ctm
/ArialMT*10 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
620.249 231.749 mov
(a) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
111{/.notdef}repeat /o 3{/.notdef}repeat /s /t /u 138{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
626.862 231.749 mov
-0.0599518 0 (utos) ash
/ArialMT*10 findfont [11.9987 0 0 -11.9987 0 0 ]mfnt sfnt
BuildWidthShowArray
649.302 231.749 mov
-0.0599518 0 (el) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/F 
<10bf31702f7c4b31b7f92f61f70a9032d1addef58c81f5b8fed9651d8c00
81acb06eda84b504e7> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/R 
<10bf31702819c97bfff21764697e50774ba74072e33752b9757ab1da5110
1cd5007d94ec5ab5df40cad71d9b47c5db20b30e71ec3b2ea4ffb966617b
dd86ea50ab4da70131cee0aeb4868b9a28ad3c7bfd4f03efbe080427ed4f
f28d15b9222e1f65cad625669e8a7a22b058fad3199168f7fd693aea9bbe
853141b98c668a72cafa538bace6827819d98c98da00e70453fb9769adea
4f22cf1b5b62de022aa24acc2658> ND 
end end
end
/ArialMT findfont /Encoding get
dup 70 /F put
dup 73 /I put
dup 82 /R put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
70{/.notdef}repeat /F 2{/.notdef}repeat /I 8{/.notdef}repeat /R 173{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [8.4846 -8.48462 -8.4846 -8.4846 0 0 ]mfnt sfnt
BuildWidthShowArray
90.9155 368.349 mov
0.0509796 -0.0509491 (FIR) ash
restore_ctm
save_ctm
/ArialMT*13 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
108.241 410.366 mov
(R) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
114.419 404.188 mov
(a) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
119.189 399.418 mov
(t) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
121.597 397.01 mov
(e) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153f04f4f888
a9793af1cdd76cf42c98e3b7c6efff30aedf23874b961a5a7d8352571859
f2ee15399c0c2d0f0e789c04eb8ab69e8694b49d1cdc36041f81732689ae
c7de70103ef45c5aac1fa0ded9e2cebee882d4e31e26d9203d2435459b9d
1e92bd9bcf321ca456fc2c8b25bf9b414bd39bc63d4e221a0d6aa6fccdc3
c8a808e6ed39733b2c7e47> ND 
/v 
<10bf31706ae07dd17dfc9e3ad4fb8a8843b0ccd3bf37159e4d997ae7db46
1605af60e723de30a8f7915cee06ac348ee0e2ad17e20e> ND 
end end
end
/ArialMT findfont /Encoding get
dup 67 /C put
dup 118 /v put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
67{/.notdef}repeat /C 50{/.notdef}repeat /v 137{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
126.367 392.24 mov
(C) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
132.545 386.062 mov
(o) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
137.315 381.293 mov
(n) sh
/ArialMT*14 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
142.085 376.523 mov
(v) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
146.378 372.23 mov
0.0509644 -0.0509491 (er) ash
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
154.024 364.584 mov
(t) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
156.432 362.175 mov
0.0509644 -0.0509491 (er) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/D 
<10bf31702a859cc72343fc5a00cbe95321e18bbf02bcb7f45509644b3a8b
d207519f4bcffbf34b0835498cb5f045c513178851cd4b8c0789ee8f3a55
0fc15c42bfdebb133169428a3a1b1bc672407557266ac16d178cd3a902d3
fd09df3b5e705b49adb88819b4b54ca38f423b6ee38449760d0c755823ee
ea80463cc5f9503741f9ccd7257c12030036b4cf0f6f62e0dce133ff0b52
38> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 68 /D put
dup 84 /T put
dup 99 /c put
dup 103 /g put
pop
%ADOEndSubsetFont
/ArialMT*15 
[
68{/.notdef}repeat /D 15{/.notdef}repeat /T 14{/.notdef}repeat /c 3{/.notdef}repeat /g 
152{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*15 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
173.767 404.185 mov
(T) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
179 398.951 mov
0.0509644 -0.0509796 (ar) ash
/ArialMT*15 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
186.646 391.305 mov
(g) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
191.416 386.535 mov
(e) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
196.186 381.766 mov
(t) sh
/ArialMT*15 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
198.594 379.357 mov
(D) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
204.772 373.179 mov
(e) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
209.542 368.409 mov
(t) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
211.95 366.001 mov
(e) sh
/ArialMT*15 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
216.72 361.232 mov
(c) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
221.013 356.938 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
247.988 389.306 mov
(F) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/M 
<10bf317027e82ad35cdddc2b5c741dc6db294c8b4a0d6704b3828695c903
74c6f490906b329d29d44205638bbfe80126114fe37407e2e312c7bcbd2c
1b7b9e7fac2817224e19> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 77 /M put
dup 100 /d put
pop
%ADOEndSubsetFont
/ArialMT*16 
[
77{/.notdef}repeat /M 22{/.notdef}repeat /d 155{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*16 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
253.222 384.072 mov
(M) sh
/ArialMT*13 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
260.341 376.953 mov
(R) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
266.519 370.775 mov
(a) sh
/ArialMT*16 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
271.289 366.005 mov
(d) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
276.058 361.236 mov
(i) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
277.994 359.3 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
300.743 394.894 mov
(R) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
306.921 388.715 mov
(a) sh
/ArialMT*16 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
311.691 383.946 mov
(d) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
316.461 379.176 mov
0.0509644 -0.0509491 (ar) ash
restore_ctm
save_ctm
/ArialMT*13 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
363.688 392.292 mov
(F) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
368.921 387.058 mov
0.0509644 -0.0509491 (il) ash
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
372.793 383.186 mov
(t) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
375.201 380.778 mov
0.0509644 -0.0509491 (er) ash
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0415702485e08c0
f77bc592e4a945edc8aefc27f1cc883c7c6cd2735a8b0e6e3a6451397aa4
97b27340262755a03b261d3a97c75d2b7376de5705dbe038fae0f2b63921
648e180bc7544e071f3547a31a704e5e674bee16ed9f79b34d65e93305ee
f05f76e02bb0fcbba2e58bb3dcb1c9352574698f9f72> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 98 /b put
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*17 
[
98{/.notdef}repeat /b 8{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*17 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
382.847 373.132 mov
(b) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
387.617 368.363 mov
0.0509644 -0.0509491 (an) ash
/ArialMT*17 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
397.156 358.823 mov
(k) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/V 
<10bf31707d937b42ca5aa917fb8735867898e231374dce1d715d27566dcf
115e95280405ef7103dd8183790f381980b4f25c32c305> ND 
end end
end
/ArialMT findfont /Encoding get
dup 86 /V put
pop
%ADOEndSubsetFont
/ArialMT*18 
[
86{/.notdef}repeat /V 169{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*18 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
428.834 386.487 mov
(V) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
434.544 380.777 mov
(o) sh
/ArialMT*15 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
439.314 376.008 mov
(c) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
443.607 371.714 mov
(o) sh
/ArialMT*16 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
448.377 366.945 mov
(d) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
453.146 362.175 mov
0.0509644 -0.0509491 (er) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/O 
<10bf317049853377ebc41c579b14bfba658962b764f6695015980c5a5c59
892f597759506fea6823cb15491706451f6de9af5780c2aa7b2cca8c9d1b
148d66d0dfba0e5ea9fcc590ecfa2901a2e230ddde47fb16c5ce672dd34b
46e6c0db45175b43134ab01e75569405261cf4f68cb7466f1a6f0e9d10e2
5b88d2dddb2b9d5c78c616eaddb9f7cfcdbd414dcf4bab600d8b1f0fa157
b2d02044fd034ac64440c5> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
end end
end
/ArialMT findfont /Encoding get
dup 79 /O put
dup 109 /m put
dup 112 /p put
pop
%ADOEndSubsetFont
/ArialMT*19 
[
79{/.notdef}repeat /O 29{/.notdef}repeat /m 2{/.notdef}repeat /p 143{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*19 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
471.013 403.653 mov
(O) sh
/ArialMT*14 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
477.663 397.003 mov
(v) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
481.956 392.71 mov
0.0509644 -0.0509491 (er) ash
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
489.602 385.064 mov
(s) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
493.896 380.77 mov
(a) sh
/ArialMT*19 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
498.665 376.001 mov
0.0510101 -0.0509796 (mp) ash
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
510.554 364.112 mov
0.0509033 -0.0509186 (ler) ash
restore_ctm
save_ctm
0 0 0 1 cmyk
/ArialMT*15 findfont [8.4846 -8.48462 -8.4846 -8.4846 0 0 ]mfnt sfnt
BuildWidthShowArray
557.587 376.421 mov
0.0509796 -0.0509491 (DT) ash
/ArialMT*12 findfont [8.4846 -8.48462 -8.4846 -8.4846 0 0 ]mfnt sfnt
BuildWidthShowArray
568.999 365.009 mov
(o) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac576702c4654165111c4e219216
925a1bbda37b8221ddb4f3d7ef9dc32fffa987a0f0ea03488171acb09982
96179b683649315a4b1534> ND 
end end
end
/ArialMT findfont /Encoding get
dup 65 /A put
pop
%ADOEndSubsetFont
/ArialMT*20 
[
65{/.notdef}repeat /A 190{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*20 findfont [8.4846 -8.48462 -8.4846 -8.4846 0 0 ]mfnt sfnt
BuildWidthShowArray
573.769 360.239 mov
(A) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*5 findfont [12 0 0 -12 0 0 ]mfnt sfnt
BuildWidthShowArray
339.999 329.082 mov
(5) sh
/ArialMT*1 findfont [12 0 0 -12 0 0 ]mfnt sfnt
BuildWidthShowArray
346.673 329.082 mov
(%) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (execution-speedup.eps)
%%CreationDate: 4/21/2003 12:42 PM
%AI9_DataStream
%Gb"/L>B:e)Q0.ZfK)_NN'HtFJJBE5(k)%U,UG6=p,^RI:Xb5#;1s'&_cu>a'R@`ntht)9ZA6&:+,QL^uNf=>OXK8GGb1k$Z5GpaE
%oZ?slnpG`YqT8T;?So<3]%iP.RcO(8:HnaLT9hbnY4nrd[]Pa.V`sl(FkbBJ,cRD29C1'gX7cDQ@WAsWI^>V!Y-5TFYL]3/0:FQO
%c7YUTB!:=@XSLmc[9EUY4B]qkJ"F+EApq4T\rSeng$634Gk4/mk2aX1FfnMTh&gR<Y#``bq*WlWXO]<L);Z1SPmm81Z#(PSY?rng
%X;4#R<rU(uDc>[kIFIKEG3`u%?EIRQAlip->.q@aa6I[,hd4BgV-]I6iV</]?*/"I\!u&o]s/+);K70a7Ma6AJ).B]f5G9R-M^-O
%6/`dR]bfQW=,V"JRu>t.8Z2D=khpo>/VB7h6.qiZHT>HhS1hUCSQVJ(nCN%d?L[*t`HEb[aLZB6?[haihbNqAMl,TcY5.F^*u;&H
%SCV_/q5;P9>?4&erGcg7dhhR<q%W+(M8!0+Rbb'R3hU)d-,o97NR%@Q'qS[:<G#>/=$,Poh=.*:GN/,l=RE>GZ>W&C[@cp&rsF1!
%XcV9a-@,!\JNN&qs*_mQ@Mtdk0!86]m=Jsto_C=$ThY<+/D$o-4fmd4j*['e^+#nfQfDLXr4H;4njW/rMqRo8@lsR4Zi+n>2qc$q
%q^+CCO+4ZB/N1AY>iJlLZX28^]Cku/V-@TW^KJgcRFAS%^K0CjD"DtX`G&K2@+i;.]!f?Mh9Epfg"XL.\pgl5na("1q0`-Z*9]t-
%;CM['!mmn_n9:RCI(!UHe*X/B6ut2fT.S]Pmfi!JD3hAlQX=]_'Tg1imq5^[bn#a.p59T0?FlFQG;<4o:<'Gr:@-:BW4_oMApHR,
%Eq)l%s)@8$h;kcCIl9YsYO-LQC#K$ajnY8/$g\B6aeqo;i\0CQXOaTBm<HNmdc\l?m49@WYiKEAD`/R1aH^.#),dfsgaj@(f672X
%P;>RDc(!D4McYN!R`kB4q2aLH5_0RWGW(dkC<i1;D0(/Ie\":EH&9\YRp@S6iN)."=8)RfgT-#JJapR#ZgDB#fB+G`K!oNCfhcSA
%o]Ar5lAr.3169G_65mkA?S1p?8I3d`s#AmeYI="Un^/"1#jA?M8TGO?)?*S3q"f$F#**JHb0=b/RD%_3#ZE00s3[@-b0!92k3>EK
%rV,H>TTZAKQ$m)kS?8*DMs\)YX_6hjn=hqT=T?&.E8I,,^?e(4EjK#AJ,*]b_=IVeUBpe:ca1l=ZhWka9lp$fj`7t:^O3Y!kQ;^R
%?(5i+n(*<fh^mGTX4=&_Ui4)6Z&rX#](s\#!_]k'>e](/Bg2F]kEB+aLRSQc.DWQ1B'8?bjdh/)kJc3?W*-4JkNf1Xgl%_\@H^@Q
%/2+Jjc-N_]NLu,JL@tO`+bQ.h2hI+1n,7XUH]31WcoiUITSTcN+oj@XhP!_*;"NB<c/Mt^l$UnV?#':mX;2l#kC6X+b?FhW=h\(@
%Xqq>Vs2Yp7hYZ<9Mts,Drnb:m?5f'HG^/S(q\Tl#X`a?lY7;ZMKP0lUjl2W-)>:tU;:&lg/u0=n'8i<:igPsd&?!IIFROoMnPS2K
%9(3j*afCO"-:Z%rZ0Q[0amkW11I';H3<s7E=$bF4?k9'c2u%=mm;nCkH0)=ISY5T6"in)=+SuqX8n`5P+IBY+ECl!o"9"H&_C7r?
%rH1a'@_Q#Q06Eq[N?]e8]<97A3pi,Y`:KGY'uqW>2Dh?FZV4J)`Rs]\P"-@0O9n"Z]##tP/?M`j-*rKPY-r@*o0Z8V-(,(COb7.@
%W!]P43,"S")#-pnY$E\2fELu&.u#4Lpdg-l.Wo'EZPAXOijl2%G?doEqCJ8D,//j?X0M)-k6iE954AZ[Q7#GY>Q><-ZE+M<glT<\
%.?7Ch@GX/&f`beB9%-4F@+&h&)\fsk!N=t8a98dN61?Tm-Zh,bp^/,UX!'XbMCf<l74_PsT`,!g/U'G$qY;>N+G91ciOHJ9&$dUk
%P&,l'MTojZWJWR"R?e7T0?]VB=n7SS<tt:'PV#?>=a`-L;4#(LGq1WPfg>aS+;ea*J-W@"lRXj?qH6!++3:*?JiJ&#6/QpY3Rkhm
%d)KkipknNZMJrcHG(V=A7k8P$1(I9_e(L;Qh[PXZ>-:m28E$UtU_)U/H-[d&0fTEr#_#[gld]*YFm%V7:YSB*=9_*\P<Er:G!M8`
%d<T&L8j[,E#U^ts*KUWE+suECMrKTGK-0/hK#E"P^$s[gkVZn)$7SGIg]YJ?^n4d1%<jDHJP/EA])6-U8J.mOEoV[R16<K1.p+>f
%R'k<fTISW5q/DIY@c4cU\GDdcf*PLLZI]]#`t:B.Ia2slUal__!l;k?pge%n#":[qZ#N:L\$V:.$CKSRc%cJXh#f$7!1!c%P66b8
%Gg$.1hDnmsE]FUX#%/*PEL@M;,'oI3-0[Ajf6;PK_hb%Rg8G(SKiZLR;KRmtk'(qQFmQ&uF[tM\PN?qYhf?#TpkH\t7D2k`.&(?%
%LEXe(WDf7HZb$It\H=7h>lp6hfoQrCjkL4IiQqadGZhNrPQJ3o*)%6[%75hTPLhCJ"j4cb/cm(-;,@t^Mq(VK(-riMm=BB$D?BTj
%&K]inM<ZDk)q/)jkRW]>!+r.I4j/*)?n:,tZ8_q`=\"g#V@JhZBX@H'EQE\=&V1)gjs%%6Z36P3!0un9qrHH=3K/iWV02t\i09W"
%)XLEqZ,]/LWWG$bS<Qe-:$1d2rG76;%u85?d=GM@MMQ=d,X^Kj::Kj>Vb0KQnk)2Z(Qs<HD+KhU:8fFL7DU-MTp7\X]?/0Nj2jiU
%P9JDq/,aW:o-'=efKQnOI>&kO[GW,NnQ#3a:PS%aOb^gOA0P=j4=DEcK`es9H_N:><EU@jHQi!EOlHiR7>F,9?q04H&<jW2=TJb]
%No]!(ruM^cNZmSQ'fjIROARN'#"l#-3>NB?$P;?aVPJ1X2F<gphu^'p&"GI2S.l-WP$n+dG"kFDFKZo+79L/j;-5I/QI$S(JF`hC
%9Z5g#fL_DY$6p.pbR\.:Gu\Ng&[.&>*F%U'XWl'#$lSDsJ56/VGHFW?-heK$raWE0(niZ%1kG_kY2t\IJB@o?i))d\l51KOI]LiJ
%o?;j3"_Zq-GhMif@2W3gj=iBO-2;+AT:iM=L=!14\YGfB"ZIU_(-oG6Zh(3@-]9aA_!0#Wj@!/5!:H,M/.b'0el2[8QlV6<IX))*
%WuN7L"!7Qq-o27:cTW/:&KDfrmHC2[+>lQ[$*7W<M2LaB^ZSPCX4)Iun,m;iQNAAX5s.(D6WRI+LLVD3H?p!EC]RKH,%Muudjo&?
%H@h]EJ3<<8JS8/".(Jpb8::Ss8+mZ<.@B"`Bp+d/-RDZYGG,0on2Q<@Zt%K2;Cke7'Z!2@oGC^Ck=a]b44NsI\7r4MXnR)ofBUC0
%ZlY=226!3aLZ2V&H71X3Lg#ZNapqJ9#HX"k`<sttJ>&-_(<'3(q3M5;-d[XLO1h9ASsu6\Y6&76%,brWZO`3DJ&E*X$X>-J"Vu[5
%A+:hjO@Y5c4c/o*3P.kfGbkiNgK$uZ//2sDe3Zu@Ss1?X+m>/M+b!P&*[jfB26&4oAU7?'p*tWFD[S`-j<,kl@NL*a>KK+53`m)I
%%7!WJ"QAL6F&g<$!UsWtYf_6!..@54'?coD#6:t53BD`>b5lJ7i;ePi!&u#"a<KEeHQ7Q`Du_$D.(96J=+DedY]5u`&UXA34loNK
%=q6M2fmk1Fj7d(6JdQfl@k%H`l3&)%]<RA-.cm3&SaYSe/p&Qq'M,c/Ub&/UT2[WKS'+59_E"B_5S^C6X$.r:$@O4$^qU2-C<e(I
%d2>mbTgg>15d7@s0i+IJP0$lqaHPNfN*.]hHbn<CBF\EWPck7nQ!2hEK[g[YB?2'-RFDt3%YD@fDI?/5l2\Kh6c(!C:^KVt8iT)"
%U&o76)*$Vp@)+O?&.W(]UK=,3?r1ho=t"Ao1?(<jVXF#&:YGfkpQRQU#cZjp#^rR"-)fB"$6U$;Qp=R"Z5$HH:hY[3j*,ZHSe4E\
%C_47P1Z>lXNBd*O.Nu/]#5oZ]a>VuX(a]EX::W[lO^@];&3g/I:/MP@&4hp\8Hl<6<&e9;EKG9uFftHu/*5]j5U6_"/(A=lP6+B,
%XEIiZ9I#(Dp)FXB-@5A4!:_l[1@D+d.('Bh;+Ugc.b$gnHj'ZC<Sn]J&Z@,a=A,Si^qhO&J>H#7,N(o:!U-"n#t;arZ($t3Mq'e\
%HVfuFIo-Qm6l<e',(n/1j5Lae9RrF7Pl8Cce,omJGbR)5nN]u)'l6B9@9sm<.d:YKQL>Pp^#8u+TdkX8!bslKW&KP\';7iC6GVu=
%$lN[ba@/<"Y8n.$>uG^>NiEC*.peu")^#RBC.$\c?mM#:K74M),3AueJhrBQmSk%oK.nPnP+dfN\TYKMV@b*l*C_1eH`Vm`#r7'l
%A:fV.%\CoN#RD)sbQsYQHa@q]qi8<>:-GfnGh6WACH(ge:9bGoU:`![)2%4q.0C;^mEuIq1Q/PUW'Z*._#WOGE't7.n-#DVdT6js
%&_\HqpS`ZU=t;(8"W'2A*EfSFe\dW-!NC7]iO=+"bn^TA("K6NEjhVPTZti^i&WR,4ZRUqIXALYC-ffo;uk&+<KAqnO=*TrK47=6
%YtYEmc]Bnu>ntC+I1R+5aflKcY_b=[)(M@OFdT4cb`Oo+:c:[P"!+lm'GeM5R%gk2oc?)q5@>*IS=8Xi]0cLUk;.nPHo_u_K:HUo
%;mE@qTQFnI6i[4e>-Ft6";hMk::lP<d.r!0,=*=t9Q^d%-R^$*Wn@.'U-7Vp8-f]!(j1$K%OV]j%-]UYKg::n[B?ebRFJ6.R2;5S
%Pe3YD)$pCA4U7lcNMt8h(e=WUn="@1*^gX:)'gl7P0GKj!Tju1%B1Q_CZ7'X:PmLB(^Z^+?M.8pY3Qf9@8ikan5]Gp<28Do@9TJ'
%HEI?-=pi;ujL73P2[KmdY:;\1?)^c$.QpI!!35ANBnG7IRcHdY0C+Sk0@Zo;'G7<.K=\='$rV8"%:fe+ksCYm!=.IO)Nd->N-uFA
%q$9X<N]OU(P0S>>NX`[.<DH$rFH2g/:>(PA3]^G*P3W"E&k\ok.%3b!Ptk9bRICQ<$(0R"G/lK67^E)=b(O4`F^B8V>4Fk#kut9r
%-MA((#hf$^(6_9>]#n<Yb/@P=9Ad.bG[f[-IVuQ+6#)6'B`fd5"QP;'kt6+l.7esh6D^67<mX>BFGdOmD'>aXFA6Pu5'qK;+WfjC
%&uC,=Jqfe6LeJDl6gBS/1k=Y;#;*&8^c8J;`",[<f;f/YGVRVWN>kDQJ-(H8?7REQHV?gsUJN4U,.a&-K*98kTO#Ke1BndL>8A?W
%dKV6U6r4O!_6F)`!/(?*:uNpo!Hp\k*\)2%>VS)<Fd\+dlmt,$=@Rq@ashm)=">^VbYVTadaB$JqSFbZ!H/1:TEZY1'$:sKe,hKg
%!4aWlGS;s/jfBjF2U/rR(BpWN;MEJjde'R(R&e@@i[""$"eT1XRl%;dE.1#b&:q5d9N"Z4kh$8hQ>HfV.D:0=\5VWSc*iJW4K;mM
%P;2YD3pq"%%Wj^^>Vn^\K<l@n;c#CST2il?_@gOC/3S4fPn[qjPoWeu%bEuUe=\!N-m6OF26s)cJHV13\3^cMkuE9O7H!_F__tm-
%I&XE3@'p#P;#IS'>&#f!5HpJ%*^`aUBM"+RI+Wm.]YOA/!<`X5d*c!k+=0Go<Kc!EJ[2;.M$0R<UG,gVepQQ"q.:l4^#FeM]f6!0
%gpYA3J1`6r+Su_S3,teU>ROQddT1t]dLSYoKo/!\_47)Zb21'CX\d.toX%)tG0h<'N\Vt>c(Ru@(@s7\\]sI^Gj.Hoi]:/GZ=>74
%AP+;gW4#SoEI0*;a-c:jB_qhJiD:G]grJIo%p:\K<BAPle?AUl;UU"rlQ6!E(m81mXe4CtH87?s`S=NE"cZ!M76W6os0@69.utTH
%i&2Pt'VR.11++J#6\2,Z<@jn7"kXgEWE85%Y4>0gpbXGa`9YM43q7.^-Oq@r;$ADuE39aSM^+WDV%!Eo7o50mDSV!0j]>Qi!mcDU
%4STHf)eQ*78uj9E**t=Hd&TG4K=_Ab/:Ee*AI=MeS#C@#b.hNA_-/=N1*rTE.>Fr+L]Uc`H@aH]$)-Ml8-fVK3.)iMd<n,kf`9c,
%TJ!:B_UL(,#XT[??'f.>4i=FnAE8iSMCNAAk)*n'1P!BsO%8s`P]\*t?>WEU;<Yu+U@uV>l&^c^2?"l/CZKJX.'Z*DVW"XY?I7&_
%F:XS4BaWUpF9IYaI?]ut[0KW<mQ<qW9sC0BME!4R*]VQK>3#fR]Zp0<,Ush'G"ZI<Mi-Jpba#6J!''Q]%3dC5'Le8ocn+5,;_-4m
%U*h+^clH*BJ?a]0b)Ql>f3WH9`"Ma^[$*t<mG&C_9ou$tXVOR*Qjh1L!@YdrV)Pp*<31[#LM@b22Q.WR5mE@2hZENZ1aKN,-#P^q
%pqfFF16cNZAeEr'"s&)=.+NYH`&O)Mk+]4:^F)q"\[mE$j>9_!2;dOg'tXK<<0XH,^/#JDKaiKq-9UD1@Glc]%^K\gZu]dN(JA@s
%:)Ip;oP+SN'HK`9UUC6B11l0[7#)>bX^I[+UZpo;Fc]Ss"D4-8"QaBl<cQ%0D/a\&]0jjl)s'nM11:Xh5:KVn,>Ll)RZ,No<'DPa
%O347#\uSLC4Olo#%f_K&=JP01e\:7O!c9S1Jcmd>iE1_J$r0e3:d:Zd<j3TXnMmAJX+JkF4M5J%q*:5J;o[4_iUfCUd?6MI'n5ef
%Zk/TLO:7'no[>LK'EYRsJK5ILoZ(pN"c8*]!Dh+I1C,D&7N%mj5Rdi=_ACuc<#u?2>/\I3`^!LpU1rA>4ouZ>e9kL!07nM`33#)N
%6g"k1-X<Soc6p"<cp=&`"-S$i^BJ$#U`-M2\cq[WTofjp\U:#]Q.":U6)ts<m\&LF<=#I7PXj*P^aReN1X7FbfW%RPYMeJ]%5r:2
%\.cprHNIWu`(3M-So.iLAf.L+[k=V[kn)BCNC/&n8pq9%6,EuJ(`:Si=oJQ#ap7T$<10[#\:DTG[flsEja\LXH+Jc-RH=^3.hK,R
%^I>r\ZmV6P'S]XG\9(](B2_;9g;7OnC(q*>'cqQBReFu;e?i<@4@IF$oN\'PMIWoR@!/]Z]s67&EQFY,+K;8-9Qd2GjTFM=_C9WF
%'#I<EK;c,W66(ofG8R^7^tG]A/K+N+<e*0G#%]R$;/3%"4?X4$Z6BK0e02Y/Oqd`hS1A.FYjYZfcGP'$V4eB##:ru=5RM@lqJosm
%LUK+>bG!@9<g@2TLh\@l<)8Zh(".!(3.Wp&%;J]V:-]23BHk-Nm=`iWYZI;VLeOHN`0c-EnJh*:7ljH[Dl6hN4E_ap)]fa!R,MVl
%Z?]Ul4C*\.hDYm(:bPi.:g";62!?E_b6G8nI8sCB8@(O"76c)$Gb]=GXnB3TSI;=jV[:#_L>\THe'jWA44U5&qu2Gd_+'!B$T:G-
%9Ib"tE`8+$U_OZjT`0K6<j=+0SZU'?\h+ahA62$(km6)JVl%\`%;OKm7g`TeGT&%I_/SW._V$;CD*dC>+*@"F=R)if#",n-_&"gU
%]+9=&?$rQh^fN*&e'PJH<JU_k!L^f6"DhAW<8gBEN[g1:7;@&Lp'7ThXa)L0E^YJ[Tm@SWG_:%F_Ahhc1rgL%/(CqiOMPRfLIO]@
%-r$WKk/AjmKZ0]3\de^YJPMWD(Ch(b^?g1ba4<A4j]&5NX+D;7D3;lZdE,2/ATQ>"RnlmsI"/?Vh6rgI!/O"OU-=uL;*Q`nZ/$kK
%@]W*rSe.2C\6tJL[aP\`)Hm<7Y'0)ceY]`"W,.(9#'MmDF/rE=W945*^KR\ZPQRjL=<`_+>WYh?W8VeoIgp%B+\;dOLuAh).b/%e
%o^A9'r91iqB0Q-'-!AdiWDA:cGh.D($aoR>UNkmli>>G&KN8rpXA5QHdut@e_JcEh###3#%3h@mk3BFqisj>YkXdC3ob97G1drP+
%n!Z`h<atWr,q_,G#E,83SqU6M5SSdmYR,EOc9mQ4>lj0)<srZGldUlf>&nA&#n%LB.7Sku9h5/XCWBA*Lmk!nFg+R9(b,PQEFhT8
%G@DWMY%8_SGQgY/lE+c:@&-E*-h!l;+HIYE\,bM7*8tmR%4,T9Rt2SS]Qc6W-mjV%(8RR_g,]>^F7+WW>rT>!<5hKq==ujB:GW^L
%JOb6Q,B.!G:6?TBb%*l5"7Yd(aJWf9ht)[2`#nW.JQ=V,QR.c13M^UW6'g0Q%1F.G[!LT0^"A:LFHCUe/Ah[OZNfS4J>[O:&"#B,
%A<s7),C?PYS'FffOO.'4@9W$O>(j(2J0on[K<!XQ>2Ue1?%Q-"-/)!#%\^c`Xb1`Qd[R8jRER^-(8O:C&?hd;Ta[W)]bYU($:#f4
%WqpmX?f@Rlg.?T"VO:@_#KJ65!WeX`,#L9mCf7J@kbb1b`qPVu%pX\d\0k#\SmY_s5iKPuS3U]m3'T,ng#/Tj+mGNDnk!%XQRi)b
%6HKOP.4EVGgT5E^SPPo(UqY7HC.`\`c?,Xc@O=ObM3ObYdM8dIG[g7m#eE,A,0l!82\H]`OR*Pkoqm?ZJj,;rWUW68RaQ&(k+CoV
%LDl04Jn+9($5Xi`E#.JhM[=MK2jED8Sq]%M@MUZnoLVoHk`]?#c\Ye=!dXC1bjUB5(ZD_T=+=#3@=DTAW/5:oi2RFp=NE7fFFb)$
%8MY3Fl!8^260b,h6pgrhh=EeR!HM0h=]S-1b`/j6"!r#j;6m!bK>C-j[QnTcs.'M'\G@s?g6(Q6eLMa$]e_9,TFUl%1qSUe\mfPj
%N31%$J<=IAOi_;hd14qe+j9CZN07cCG"TkK;l=^JXE8-`5U]*8LL:5u2l<Ef:A/BM:7!h<Q"_/p4&8L:gO#LP-ca4eo]%f>NoHrL
%&+IfCk@q%GnD"#XPsm4eJABN4e-^>Q>0UuTq8:5OjfsW8[`7=_0&!.L^O?YE6`JRa$IpCPF11ch:Lti\k%mbE):V5Sh?7t6WD8V<
%:9`)!VrpI9/fHt>2(Atd1EaFH?o65kmc=^!m*l'!=8cO*2CRegLI0@$1DX]7:T>\X+nVOY(+]iAKG,@SD'1N1n.GSN&:]:6@^C&Q
%+,3nLa:Eh]7:f=5AI-Eb49aGpX$rBK7W(gW.0PVq6P1f_;UXJ+&8SX$>c'P^Ku4/3a,7c5;B/Fm5[VO&g-Y'6H;tkM44n;D:X[.>
%!2i5gUsAT:UL[5d5!ZJM_;)IM?lI61&5Yip:8!\TI1kRZ!:mMH<X?5PgjT.hZe5ke"tiBj4Ms9e:K9aclB0SUQGD$HJ1DIU`JJ]l
%=%*r_O+Fm.5W04+)DQ;6XT\haI$Bb9Tb8pjDC1(1OkD9t%C;f6P?qZid]qWUe@H'F;NFbhJjueBQUlj"Oe^0DN/?M@X_sZp7YQm)
%KnBZte1&bW=m9>ad4ja7fb=QGlh3SX3>Kn2i@pXL:8\]smC12(38i;EK!>Ve:m05TMuK$a680/<_,<W%Bh^mPorA-d2?CeLSSl=4
%kZT\P'^AV1be$s\'Wc&F:ZJC)JHUZTjC4"&?inK2)/7TV+hEAi?m`X?Vls9AIA@c9%JQmn!YdE^L$_H,E:p+(""C)[4IS_jN>f(/
%UCdldr2L:C+SN1H>6@AKm!$OS5t0j0;b>b?,?>;l_\6/12@bCE"*99R)%6O/3t`J\kW7qA0l*'K\e/b)!ulRY5`)YA%SfT`B$Fd6
%)SEU>p!b9D507NOOt$C/\:TEh+YH28-cX\[b)?pZU'q0?_$VMd5Td2.Eko@rI2,bjWi#ma)34rd%G4h)LN%C1/_O*emErhmeQP[J
%DI;uR7a5^Vr/*Fu/j8(7&3,7c6X)f;HZ^S[S>gg.>u*&4ckp]h8^Eic^1Ujrc@Xg"4sYQ,Hj^t^+B>%*LFu"[$s0=\XKQ;n!HAOQ
%eVKcC_V(V'%Pj9b=es`i"J@S'!n.[c:n#Hlm/_5MJlUieq<u]]WFLH@IAB=HY-(QBi<AABJ\b#"5k>Ll\HbbMUK%BkGZC:D`WYWN
%_&UlqAji*i?QkkK1g3a;:b"W.0J]`F^3NpMS1djWVB,if#egS;1jD<6'D$Em%>j)lms"G>an0>))G&<YEV"^_E@.?'\!XXl<Ni9+
%`as6R:-3^BO*F56$$G_'Gr7`!,HQJdp!DgRVK<>n3>,Q2_ngKu#Kta$OHmu)lKCL(@F,%)#F#D&=A93c%:H/DAsoGii5U&Y=VjLt
%UsV;tA$D?9<$U2gPhAjV1cpuHU[$9HdR!:ms3r$ij?4>ll"D%jVA."1`e9VpT^ijrVWJjJ0P:$U!`!8#W;/e8P#"4b/`[BM=u<Pe
%/]gJb&JWaB?cUQ^6UQ@db-Eh+&r&\-[XJW:;q31J@OU3nDf64I=_"T9U]2$9K4PL2.]u&R!H<h61lTP7\FG[$EGTX#ZRIRh&g-BJ
%3t4B6k$\g#Ed%on8sV\4>=&'[E:6bI#[U1haKV#4kulMYVQEm>)R>!MM(>Ja6qO<l:!Yo2DQjei#bV1SfB>Y::<70nOY?iRWIYLX
%/qg#Q)U/To[KKL>?:/PGT_)j+'l56m4kPqOdV6,q1p1M&\+,nYK,QF7Yc`[G1#,Rq<kpF`a[5q<^=1N1$J2%J6]@$#Tgok<],>:U
%RR;"WEK81MCa0scPM4=E.Xj/r$6MVg?!CUJ=9P?N)PmNW>3/`M6.+IM=ZquYBfW3GTar`Dn>CJ_#)***=`)lO*ERROl#+5`W4/(a
%`NV_pfsq@M3\W#!rN)6`QUX^q_khd[EKV@8foWdlNN$k$WC<(QNlN^8eSk^jAXS!,a(]P?%u4l(W;=)(7sHW9f6L8oMUjI1iFH.!
%#$Yc(0i0qe=<Xj^;dD_F#gX/[($/$GGri2iDO*DmFR$-)/6RXA&>g#\RD<j([F3$`&'K2.7!N+/M1)PH]oh8eGD\SMU"HB;.&!ni
%eL(EY*H72JN4T+?kpeNAVp[PGi'%-;*a!dN17;[S1_pi/+D;MFi=*[Znn>[JViDQU7kLoNh.12k2%hVq@CTKMY)A;@3$d*<Q*PMF
%"p">?&n2&OTR?G-k\,4gJZ29M##%&i8%.8S[QZFjJ0WNNi`fWtRX:0t6iXI#2%QgGMS'rX,d[i]C7nZc/e^lPo/l%sbGp[VW&Tns
%Ub@T[0&sFr?s%ug`):EZpDEos$9L6OR0<%cGlrOGPi%U77MDQ<T4Pq\&n23&6<,@<6t3to[0[;B=rY9m5P;D?dUo2@iCZf@XTYG%
%\MfYc!7(qfV55#$Du&.+-=iF-XdNSUT+DV9:Jp_[Ag2hZAmN<s[@+)?*/>H28iUY;2lp4fq:`tYDj*"@b^Q=?-'YF;;)fD$382S6
%XB_76@>(k8kd82m,N#_?D3PP,@KcEk1[J3\em;+P2)EYU[NWYFQ#!]]o[\#<rb,Zk0WA4pF[IB<356R$.lXP7S+R"B45LBB-'bU#
%!7Xd_BlJZ(bSjrqh^DujES+mfiMXQ:_F[nZ9MbEc#gVWa%Qc#8cC3-ILmXcDI/so>Y[`88I`ca;A^#ouKBtNH!3%q/]R]*>ScO=_
%Nj-ljK1=MS3%fn)YV'?5(iW@%D>'V7k;40^pl3LS<fEu=JLH-q92TY)Up;ikYdC7"is0t7O7^s'GggV."M/Cu4I-%@oj`s]K5"H&
%Pj8O[9f_&7Y`sn(bJW9L789O,g[@)eYnhTbM`dO/>aq!g^%L%:4A79cr::?;C5<<hHc$KY!LiRurb8F_F94sY!u5J9g29.Vb`$T.
%jM4!aG&<QNQm*#XO)6[t0NP<8"q8<>TZdK#NqW`cbQAX%J7,3&,VNot3c'M&R0O;K:[1i`(#5[I[c5"a)-VGKoYn2rkpS6;1p_(:
%2&mG+<Tp-+U_S)j3%t*n!Cj#8m/*Q[87eW8D=u01?@t$ng5^M<*4+'gHD<Y/q#4qolrt@K?PuXi.>#X,*c$R[/&N59VTu+sFTg2f
%*,C6q>)"7uL*JsE"jP22ZlSkP$thh#Zb[p>6$4[n@H+L/c?C.d5T,SIc?=<NXWFnQTTnC@P['!C,Zf9,_c?c%@V9*,_J3EAOUI@S
%O$8]SnksP2?`gL_SNB`6K:,rXW_(e/2^[sSR!n`eMR2-n4/?PnSc%[4Bc"_bhg*rU4&>bRms3WJS\7,IBo`MQk$hZ4Ldt=I(:jsp
%2/;347R85;U-\V\VJ>V_]8Uu`6kq!<P6a?rR[#.B)SVT<'CU3(Tp3N\kUAb#!q_3_Z4:_tdPuFh6Kms@QEe_uX"\]G1HI=,!$MF6
%@-_I6!iN<m8MrDp^d-r%RFs`:p?T9.mD6<\CMkDPpLuOj7!D[CAI;E#bUII%6o?-2<#1[`o,?hA&FDR(3RVZ&cjPgOA%GK)aMQ%$
%Ad>[4@4dm`YiE6TGp@GIZ2st9otSMPn7qA79Hb5&JYLUEL=OdY<9ZtqI9"EnN[UhiBc-*uHQSX-aNOj>`K_4FjlX!#lqIn\d#?h?
%%qNV4k$j,T"'*Sqo"MKrr(:%1$XoK>5UO/&BUt*NWkj&*2j)Wl+*O!Fl$dEVSlQRs0TJMu"&64&c\b7d:"FEY1jZ,reL'E8=PS6D
%pM-58h).4Wd-uSX/EYTROLHus'o7hfLFp%ih>CsK3_:*'Ve:pF=%518^A$dEe']rhR5eUCc='Q9YR"Y,C5U<`0F'Zf61`dI@`2@S
%5IcNb[-H0S!5B#T)qj[6oU=XPe"at2^HL,'[%O\3<$,k`-2S\e(87"J!tJ5M&KOtGNkdd?hU2I?-G<7Khop'CImmI'@6q2@B2K>&
%?rRE-7@qf#4p[P];Otc,n:2_@S>\`,\[0Lm?:/VDVUC5O\&ObEA"rf),A8*t^Z$j%7Z-[RJhk"nr]3Q-Eb>H)XNB42*3]Pi6ojai
%KY<+s[6h8Q6XP`?3EQl\Ph?SX2IZ*+,<"rJn@l<s:2gN97BT_@-O_bB7tjPG"t9ZX_@V@#`Ue<=4[8'UKrrT4WCMq8KsD^B>]Hus
%qd'AO!'`0+Ge-nN\t@>)_TW(V"mf#K=Y(G=7R/'$atsDWZj-8K2]<ZjW<0f.@LtRh+^#P$I]0/XFfU._.VQs4AoNd@)Whp'$1Fdn
%\at*SS7rBY8UAN:"ru)&be_u\^bo18^d*Pcl+$tg[o[,o]Kk\W8C]CV].>Qqd^Hu"_:VjBWjr=7_F+Qs$j%q2LV&Ls2OBV!aM;'Z
%TesAuTM6G@#1PsA6O7NuQuZW]F*"HU1`.OFHs=r3X9^X<C*$&9T14U'E`?nebd15(%NoutL>CEYJ[aoWD/Xs9<a(Hab*E$+7fQU"
%<7-*G)WRl1^1=J).n1'3nMQ<CEYe>7<U^-o2H7SQHuRU`q+8:5IrGrVK""\I2u8-9[].W[$\9I:hMM[m_Qb#F4]pn3s(TZE/0G/2
%+NsgdWb3,QBTU\1o=BHXZ/!!\i<9Lj=+<D,(s46BDa-Ju2"]:o_:$Ijk#b?bP^@6Nl^_YgYU<tT^EJ'5V:SIM(AU:qp*it>`pE-P
%&9gCD5_VHk0@Y!2N^l*tqiDcjb1D03?6_;3g@i]5R>It@5AAPjp!ekfqC6:+2_8S_m6"ecb*k:dA]pp,c]O@qbMkd:G,,NI@SZh9
%!Ai9h`nX-&-po4o+mu,e[-#=<MYidM7GX\C41I_Qk_U'4dr2Wa1"'-Ib;49P)-kLUilBHLV/@qR!a9nPGg4RNBU[LR-Ofk%d2T<d
%o.2]rRO8Hk@M[B%n@O8!p6s)(^4&M!qn;+jA>jiglIObnkoNrAOThI]gpJ6P[\3uT1\`,9$r^6RO"lO7i.J``i)*\NMBH7mc5>mn
%J(/0$&l`4mX?JTPPqeqNl>C-0<-_$=>&u=6!sNQ\fZPEg4a;J'K9"Hub]:P$=d[o>-jO23[.S)T/5@3a(`)5Mq1A];DM""?XD!SX
%(sj5^goA8nf8)@4?+8m1.(5##!(.*Xk4K=3H@f$#n,_f6NB-_O2=?80o_0Wn)J_m]Br;q*YJn0*1QrIb'!qR8::OXnk[?Fmpgt1:
%!lO(2%b.PE=.(#3%!]Q05LLeZc5ZWG2(^'C>[U`)o7Wc`ULG`7.0^Lhpj3BoE+ETlOSq]TiQ_;A/!jDtNDY%OaBYH5!!G$R_lI[&
%_0h2GqN,HR&4XcpcPl[K*7U"b\Rt5_gSt.#JW`"RE[>Fq+Q=lO7,)rL.d!'i)'h%]+m42<Hcg8/m$m-4d.H)rRFXbZFetr'&3(eE
%C,:p6cj[HF^&B?FClP4@U_JL1A;PL[Dq!8Z=1Tnm*2ZO*'iu*mhuKc='YHnTdG)X>bA:Q=U.h:Ulki=:LQ(qP@,C*_jRkcWG.nnB
%9OB$fbR_cDIJ'_;s1;2A!fdZ4X^P(A[+RP4$.N&co=RCe0ggpU5loXKC(Xtd9G`3CU9F"2TKFrD3!.kl.8hT_&X))n`mfT+"Vsag
%&i=e=%Jiphf+"I,Ys<9g8PW2j`B8*0<K5ptTWe4r$iuhGB+;5BdG,jVQ'JOm6MM97bF+QMU@9^/!f#^u4eV_9'l3S>5:O#5jbF$1
%e9jM(o_M-=k\4d$VFcLpU"(PK3mJVEH1f+/3s>A41jJL&cN>-ZL@<qH??h+1W,@]Jfki<8Emep9U@B[)W/Z7QDCaapU1Rg+p!pj*
%kHWsq`uN(6G_)/U29^Y^WHdcB9iBEp#>hs20P&Oc`kPDc'SbR&lj&TEbe``Uor\Z#a@V)l=2<6ODSoK%7]GX[\sUM>7)`?rU"@a8
%<U':"F?E&6r*eg?Y!PL\ls'61q#-:RI>0GK1@Y69<>G03l6%!1@:4rA0\Jj$(&brXSuQ>3(P=0D!in"N<V7+<.V"ieC7+''k`'@D
%&r>fZCts8"G_>*ll,06FLcmSHON!qYF21&Df[W)U.B4:=nMc3pVrK>@K@=`j24$,DLZoc`6t5T_AI,4@L0K%)oE.Q4-DR$Im#%F"
%No9@c(AltXG>!3,<6o5JLJ>jj5e2i0;ammn5N$.ddglAc][EJDJ99k#X5[Q'Bo?2R@EO3A.C41F`S^HX9@[bT(ArRlNd8AnOO@l3
%[!=6pR!0Fj7bGe>PI1CC#0/Jfi[olX:c")l=_GGHDH02>qW)GQ9/<IpFd`a?<sqdcmur:Ni%J'/^I_GbG'^fq2aWZ4egLYo]0W8\
%d[[1hm%VL-HTS;Iq(jeq"q^0t<2VqAQD:GpYW,d8Mj.rR+O?E[6PSeO`sX^>(ZGm-&U7:tVEX-.h9g#dTW$_fN-McQ$IE-L@?u5;
%!Klk2^`H_"<@5[O%Q46'VS].0d]0(:'`8ZAC0W@=\CH*g1<L0#D-hF!Qk0/fq=Ac4J+saA+l%c6:h3>"&-n4j_oR2dJPrH'fuaM5
%BG;mh)_/#R;XkkVo<[l,Q.Q+/lJ`^CrI$Xd;4A>J^jp"WUP!0U9&n6:0bYO$)k&e$7cF%/Lr/a@N3H(T6QB(AAf80"GROLWbZG!g
%ZQc1i$<<Y9QWp72'(\SPZ"51MN\rP3?kBtSQ4WG@?]6cuYiaPJ7M#GPRAq)5W\\35DeKJ$F.&cWC$l4EqE&"F;rN\feP/Z%\>Q:D
%:t/dWYL9HMp]/8:D[GfZA_0`;pp4%AN5)Vk6HG^>&lm!iR"):_+A"@4)7Sp!7?WH%Q652NH&LMK5KD)+%R+2UYN>2Nk?<UU7N?ih
%6?Uo>cb'J9:eEihj6P&l$Fb7r"le)pG\lcY?3[F2mcJhlNbEN3%#l\gmbrJ'h1bPtY#eorO6ciT77V]W;bc\'S>"HUL!HXmW.X;b
%1XoLV4-qL!GC2]:\M`c6n.'>1E)3c?7a'43?<$gi8anM#qn\1_ZNRtnb:$'halQ=_rGFhAm(d\UfNuhbJ!Mb2bK&Lp(\7Q\jnWBW
%k`_Wh&^UGsZed=;jo&p;M!jX&B(kftaf6^A?I#\iB<P?O3T0c+r1uS]XB*NFlfGOumsOj*ojVDIH%._ZDWWkoY?$RrSm<p+gGeGf
%le1CqfoPaXApnsuqI[:t[o\JhgTtO""7,3\nNah/nn.^oc$&<6<U5XYH?g`2[qDu\Zg0P_M[Nk"bLQFJCqH++0.pk+5Kh*MpH$jE
%lc%QQHFm?c?SA+X55XC9Ej:`E?T2WLZ=`T)M/^&Z/2$+(&V>B'EjPc:ipu2I_pg)I[Jh%+8aMq9o2gj.jeZc#K'poblds>UCj!;F
%T"TDrok&2h[Ll2X/Q5lDT3]\'(tOG2F*=t&\X&O?f4WiFf%2jdBZp)2D#7hN=:BD[q9=)&G&[V\fbpEQ_j?3eRkN%j43ut\lcZPe
%%-V/D4hk->6sYS7J%:taU^`3"Auf"eLHW;)p#GBn_#ReHg>h58DEcYEI6>aQ0d^l5q!57>D$Xc]Zh`;+C^`h58b9-@G2I&:DmbLA
%-[!-Dl?p9nF7q\=.%bd^%A%9dB9NPGFA1#8Fr**<mIG#bp?^K*$8D#I3hbGHj53WNs*eYS7t(42c$CV]ZIiCf`4fJ^T?Xb'=e3lT
%dX%crc\@M)\/_ioft8rX6CTY#l\i$QHtkCC>AC::elkh[=:THhZ5f4biEE:cl^67e#&C7pZo_Xo]YjnXN#QV[UHRH"N9=edo2]4:
%\JT8Nj%#_(s-f<#V13d\r;,PbnO<%2!@5Q8oEVJ-m#1!04o;s?hUkhic<5R=<o;;[YBg,^+'&4qi54ZHS&KH[:Yi4ll:SSPK35ao
%#J4;tG9)?[pd.I>^$P?V8,%4/p.h&Nhjg4L[nX'p*cJJODVkdN!i<D3s)Q5nk)2a%I.l#jMcV]ck!+:NSC(R3In?1QQPW`(`DEON
%T&Cdicgeb7bja\KqUjKE5<QrLiU/;cr^BHZ=.]B=`9+\oVa%T6q'1/4D>>?K12#LjADGEo4o1s7PMr1MZ-.MB,Cf_+Hp89\%;82n
%hnL-9pXr>,&1qe\1p&EBWm^o)-GT<MHf79*Ikl1)I.2U.r)CD@Za>MZd4,[^eaCENWuH?[S'CfllJ'K`C[$fGMTtn4:,bsL6EmUW
%DsWnK2VLQj5$e.m+.gcD=.d7jP@)Ug$Hn:?HF',#:Gt/`DjokTokO:"OnV4E\$WhA[k\U?(RNH#F\7Gf>(uo-AV%86>riiQ+6u0u
%IaH,h'u:0:I<tY<nG0s;@m@H=M1OMbCVd8BWkY!>j^`i:iiG>Zq8KI,8cn%Zc!,UX'821JDl(<`nrZCto?6fCF5G-m_MH<r&X*/S
%E5<Qp^)$9gH.U1l=#UMfRlkd`\(:590tb!\F:@W?4;id`[@UCfP6umi/qnFHL@+YGH/;dZs&Ql[h#A&@0s,^Y'E1PZ$D0T=@W`gf
%TDc!]=fl<q>Bk&c0E]5$r#9E05:ithX.)[*"S>G-ICBd?GYaOfTYFV1W%LANrq0m3>&N4U:DZ5K<`\mcnEmcjEJnmdYQH@A'@tpo
%pH.uZ>W:u@(RlqjA@&q5Q+OP0?SAmHn`pE%QsfYOW.f3\j'm@V28t)AB5\qf3$UPNg;"?g4.7keIag8O"lXsNg5Z!BH$[TSaGJ^X
%rNXY9.MXWPW<___q)H;/+<Nqqrpo7o">0,`-r13[qW`UT];P<SSao6#mbH<<D]\lSUWZ0:crMNb46aCHj^4\$q!QQ)Xc'l!IXLdk
%O8A"Fc^R/sqZA5+I6@2?L[FMD]c0GU;lk*_1_Dt>m:/j7]A]5WHo_sY`N@GRh8<lu?b4nYjWi!E0@MT??(F^INPMoF;a(>ioNN,Y
%]mTTc6AXZGp#]u%8Z*dqmGD'c#L16%Fg9iM8!m"jdkC#mSPSdnn>A_L+m/u8]%HiXLJJ!FGP`_E:P[rjA/sAfGR!l<Mu?sG_E;9I
%4tFUM6ZG0XrO[j2,>Re-pt^ubO05%&=mtWl3]A,M]pn^_cF\Pk@]u+/T1j9:r3"m=XZ,(sK^[f`%lj%OXc*.,%VMOLm\qEmES>S4
%&"g;OS;laId*&97]BMb<i&e,/"BhllQ^<Tc4<8=N@HLa7s'@4j]%8D[352HB?@1%F]6@HKqU()"cH^_uo'OfMKr3>-/iEBIV,UL_
%i.4nBf+PkZkI1AKRaIC5H=N4(lHF</AKi9l85rL#HTL!m)dY$:4OEs!Rt(.0n*=&A6n@]\BYBJ;%`-b'kh-io0(fEDE_i+OGlQnL
%Rif;4^t\DI%)f74_1Q(q(.+p+Q;,o&!/.NEk,I/F)dfWe4K-g![iBK']tN%SHIs[t.N`^8@VdRU>qe5%":jhEGKDb[.N^ct#XH>T
%T>%MdXRjuBHag`k1rOhuUu^=`Mr+4GlF^8@s8G=-d!([pEO8YS[&rKirNEF8.IE'#OV9Vs`q396`i:%AGfVYUe*jaEN:TW0gO?g2
%'kX%kb97j[b4#.To&/cn5t(lCPCj+Jah8H6]6nq6!VG)K5!?ET<JQirn9/PB6ecg*nJr7seE'"Rc1Kn'bCVDigDs@m-f48Xb*>7b
%rSH?tTY[IBJs:0;Z=jd)iS?\*I-C49.jJBiIWEs2-C!@H(095&I1WI?nru3tdUh$2L.&'`4S\,u:j.TC%He6jGc6aadBW&n4_Xg@
%hqh;n7,_OeF8)r;bTF&FL*`,lAD(6:V=F[2n(g-_7g`r3p:#.sBb0Itm\<Rm-^0k_=#dPB4<8</<_.#oheV?N/O@\lI93>[ECghr
%R^DpY$P67(J33mr.YEn^d_/XBGjli!+GF%s1Xa=6%F^f-^$eYBCp[;eaH[b2SRN]s-t2l46'U:&$.'d_0N?h>Pn+p`oHbo'`;$;>
%';g^ITs#A-Xgrr]TS4f]Pj:B]Bf;iE89X1a@kU(We%oS7Be#0pi6>/b`*-sVrZSVoTtRkC]!eQDHac6,%+faJMUP>q!=ZL]dSOPJ
%&_4703QgZPWM""M<96:8DSk=Fjb!dK@X<oY:Tq``Qkk1*(%>WKLl^$FAToAKUVV07c%AQ8QjTM,3uiMbXaKWrf3!`E+q03LEiSd:
%nb;*9qYclgX[4r]\W1l83?>5JnDIAM"7)_B.SijLh*nk&c.BQ(pCH89@eZHXX2P9#GOL!7<J^#rSEQief6C@'^Xh2R]0?hQQH=tC
%hIUW+>jLh8rsGfgo6;<cksb['RgJu0Reugi>)AcH%+qg[.j(QEp[<TcF\$sBVA.1K+1ni]8HpL^IIJBY^q[))b),r-RpTY?\oBEP
%T!E0Y2dqNRrOW;/^5J12ED)Y@&8BDF]3etMEX^uRa=0j50YA9k,$*L2I1V;^e?HTtbCMV#WWs&hFkARom5Vr[-ngES#?R3q?E9C#
%^=Tuf$HC;CU#4go*uk'i<hn9dXuFF(U&%(A3*6Tm8(W>uVhMC-)XJhX!5kkb'#&-i+"IaHk$?I/=J6XMGHAWuleNkZg-P$S<R7@Y
%_=2h5V=@Q(YW]YdVni;l,G/f$CPC_u<=$fY;r?kGI9#(ja+jn#+o6Z^j26LQU$JUp]7,-m@^l7)iIP"MD;P6dn=Wh?)GQbnL0&6`
%I#Tr=pC,l?s0UE/-c)INk>sWbc[UE9an+t(g?eT8%k$ng\c;:j6T;J=r9L+R"rDJOkohl:S9DTelH`i-UXt=bdf@q]Is^h08SF]6
%eT"A,ipRC:K?sF5<c>1ur-7i(HM^,eQJho&n8jZ<(8H2ugHY8dIq&gDH2-sX-\$B8'4?T&Nh,e@hm*.)oAA%X5$tV/)9t[pC1MR-
%q!9Ypp`$-W?YeK\.iE\\g.FTUkH+0rUJF'8nSS0fkKWV5b2>J\58u'M5t]IqiCBpRKDmrV,*Ha_hi,lVgk.i;T8VraDNB;E,]Xt\
%-".WFV9^2F'D1:4HYZuK>tIfn*UN%Le'brCq7BiHm/seM+7J6,?Oe1Oje.K^><X)mnDh(7])J=u&,UNdj#bgRJ)JAtH@!cTb6NKd
%H*WK[\biTa-PtXERJhb&Y5?kd"&a=&H7I@&b.n&Bk'Gg?*OdDSbP<([#Ms/cFX/?Pi/i/d^Pu^4@,3!p-+j'EC9]b5\U%UqQ-.VO
%SIAi,DiL3Nd%1aA:[<FbB)U%emq/YH5Ba?2EqR-E%^*h*i8DH(ihMrOWE:po!?0jlnc%ct?_'T"rVcUss.4#$3gTO6?G5N:rVcUs
%s8#d),^6r-XmLo6-1Bh^O<;8/*qGF+<"UK=gUmbhn#]*g<Hin9h=Q/$2qRHbd_WWsOBm3On,;Z,*SgNRmi$\Li<+8jU`VLl2.#@o
%B(;5^D9E%B='\rPnN1MrpZ'u7mI!a9h2h4NZ8:t<h<jXKhYgRV]fU9s06>a98HY;maF/6<?!eg]k:X]T[+lg2:3LP]l;)b;.Y6WX
%n34;jFE4)rjq`]PT'\3TGp;DE4b%-k&-PHHps$94*$+Z';)pDU/qq$/K]P=Anp!@5\bKUHSH_qoE6c/Z%O3u`X4a>ucnWec?0:R1
%X3TP%N&AoNLY6k@jneQ2"_-6d;.^457EP$mn,g[%8U_&roR+)m^"@eAfIl=@J!@bSQV[Jg:a\(W,+\N]KE()G+(j]Zofp[1F+7AT
%OkL-7m8CN<d:Lh:&A\<t;9.TjEsM)G#cBE5b.E/0>R>qqS6[3!B`BSPhNu\$HDr$C2nN9arbq,uqYVGuCo.K;SA0U?:YYmB'n7Pi
%ja)Y8r-t*=B:hsuLVV*cT*F3/-D9.RJkWE4=3oKZrt?b_K1M-Hbk:dr,/Gj!>AO66]h5acPqJ,YW5[2F;TtV.XOW^d'jA/2J)6e\
%H%^7c=r[Ii8SS;2YqcO]e*gqQ(XG%HjU-"5YHO'rB6JQWPuq;5/&XnaDqCIIF8]_L$_F$=d,=-V*&VALgb4t[nqkJlrb0jJ2_u_^
%OD<U`WdT^Hl>J>O4/nY*<HJ'2C<\")Dr91>*&Dh@KbYf$rU$6Qo[C"9IIlZdrs'Ur(\[~>
%AI9_PrivateDataEnd
