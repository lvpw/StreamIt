%!PS-Adobe-3.1 EPSF-3.0
%%Title: flops-removed.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0%AI9_PrintingDataBegin%%For: Bill Thies
%%CreationDate: 4/21/2003
%%CropBox: 0.000000 0.000000 662.339355 455.706543
%%BoundingBox: 0 0 663 456 
%%HiResBoundingBox: 0.000000 0.000000 662.339355 455.706543
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -455.707 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 455.707 ln
662.339 455.707 ln
662.339 0 ln
clp
gsave
59.1597 410.64 mo
598.44 410.64 ln
598.44 410.4 ln
59.1597 410.4 ln
59.1597 410.64 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 410.52 mo
598.44 410.52 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
59.1597 310.08 mo
598.44 310.08 ln
598.44 309.839 ln
59.1597 309.839 ln
59.1597 310.08 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 309.959 mo
598.44 309.959 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
59.1597 276.48 mo
598.44 276.48 ln
598.44 276.24 ln
59.1597 276.24 ln
59.1597 276.48 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 276.36 mo
598.44 276.36 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
59.1597 243 mo
598.44 243 ln
598.44 242.759 ln
59.1597 242.759 ln
59.1597 243 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 242.879 mo
598.44 242.879 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
59.1597 209.4 mo
598.44 209.4 ln
598.44 209.16 ln
59.1597 209.16 ln
59.1597 209.4 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 209.28 mo
598.44 209.28 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
59.1597 175.92 mo
598.44 175.92 ln
598.44 175.68 ln
59.1597 175.68 ln
59.1597 175.92 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 175.8 mo
598.44 175.8 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
59.1597 142.44 mo
598.44 142.44 ln
598.44 142.2 ln
59.1597 142.2 ln
59.1597 142.44 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 142.32 mo
598.44 142.32 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
59.1597 108.84 mo
598.44 108.84 ln
598.44 108.6 ln
59.1597 108.6 ln
59.1597 108.84 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 108.72 mo
598.44 108.72 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
59.1597 75.3599 mo
598.44 75.3599 ln
598.44 75.1196 ln
59.1597 75.1196 ln
59.1597 75.3599 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 75.2397 mo
598.44 75.2397 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
59.1597 41.7598 mo
598.44 41.7598 ln
598.44 41.5195 ln
59.1597 41.5195 ln
59.1597 41.7598 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 41.6396 mo
598.44 41.6396 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
59.1597 8.27979 mo
598.44 8.27979 ln
598.44 8.03955 ln
59.1597 8.03955 ln
59.1597 8.27979 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.1597 8.15967 mo
598.44 8.15967 ln
false op
0 0 0 1 cmyk
s
grestore
69.6196 343.408 mo
82.8198 343.408 ln
82.8198 342.688 ln
69.6196 342.688 ln
69.6196 343.408 ln
false op
0.12549 0.0862745 0.0666667 0.00392157 cmyk
ef
0.960007 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
69.6196 343.408 mo
82.8198 343.408 ln
82.8198 342.688 ln
69.6196 342.688 ln
69.6196 343.408 ln
cp
0 0 0 1 cmyk
s
129.5 342.688 mo
142.7 342.688 ln
142.7 64.0479 ln
129.5 64.0479 ln
129.5 342.688 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
ef
129.5 342.688 mo
142.7 342.688 ln
142.7 64.0479 ln
129.5 64.0479 ln
129.5 342.688 ln
cp
0 0 0 1 cmyk
s
189.5 342.928 mo
202.7 342.928 ln
202.7 342.688 ln
189.5 342.688 ln
189.5 342.928 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
ef
189.5 342.928 mo
202.7 342.928 ln
202.7 342.688 ln
189.5 342.688 ln
189.5 342.928 ln
cp
0 0 0 1 cmyk
s
249.379 342.688 mo
262.58 342.688 ln
262.58 63.5679 ln
249.379 63.5679 ln
249.379 342.688 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
ef
249.379 342.688 mo
262.58 342.688 ln
262.58 63.5679 ln
249.379 63.5679 ln
249.379 342.688 ln
cp
0 0 0 1 cmyk
s
309.26 366.208 mo
322.459 366.208 ln
322.459 342.688 ln
309.26 342.688 ln
309.26 366.208 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
ef
309.26 366.208 mo
322.459 366.208 ln
322.459 342.688 ln
309.26 342.688 ln
309.26 366.208 ln
cp
0 0 0 1 cmyk
s
369.259 342.688 mo
382.459 342.688 ln
382.459 81.4478 ln
369.259 81.4478 ln
369.259 342.688 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
ef
369.259 342.688 mo
382.459 342.688 ln
382.459 81.4478 ln
369.259 81.4478 ln
369.259 342.688 ln
cp
0 0 0 1 cmyk
s
429.139 342.688 mo
442.339 342.688 ln
442.339 95.4878 ln
429.139 95.4878 ln
429.139 342.688 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
ef
429.139 342.688 mo
442.339 342.688 ln
442.339 95.4878 ln
429.139 95.4878 ln
429.139 342.688 ln
cp
0 0 0 1 cmyk
s
489.02 342.688 mo
502.219 342.688 ln
502.219 162.088 ln
489.02 162.088 ln
489.02 342.688 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
ef
489.02 342.688 mo
502.219 342.688 ln
502.219 162.088 ln
489.02 162.088 ln
489.02 342.688 ln
cp
0 0 0 1 cmyk
s
549.02 342.688 mo
562.219 342.688 ln
562.219 287.848 ln
549.02 287.848 ln
549.02 342.688 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
ef
549.02 342.688 mo
562.219 342.688 ln
562.219 287.848 ln
549.02 287.848 ln
549.02 342.688 ln
cp
0 0 0 1 cmyk
s
82.9395 342.688 mo
96.1396 342.688 ln
96.1396 39.5679 ln
82.9395 39.5679 ln
82.9395 342.688 ln
0.427451 0.309804 0.282353 0.12549 cmyk
ef
82.9395 342.688 mo
96.1396 342.688 ln
96.1396 39.5679 ln
82.9395 39.5679 ln
82.9395 342.688 ln
cp
0 0 0 1 cmyk
s
142.82 342.688 mo
156.14 342.688 ln
156.14 26.6079 ln
142.82 26.6079 ln
142.82 342.688 ln
0.427451 0.309804 0.282353 0.12549 cmyk
ef
142.82 342.688 mo
156.14 342.688 ln
156.14 26.6079 ln
142.82 26.6079 ln
142.82 342.688 ln
cp
0 0 0 1 cmyk
s
202.82 342.688 mo
216.02 342.688 ln
216.02 34.6479 ln
202.82 34.6479 ln
202.82 342.688 ln
0.427451 0.309804 0.282353 0.12549 cmyk
ef
202.82 342.688 mo
216.02 342.688 ln
216.02 34.6479 ln
202.82 34.6479 ln
202.82 342.688 ln
cp
0 0 0 1 cmyk
s
262.7 342.688 mo
275.899 342.688 ln
275.899 56.248 ln
262.7 56.248 ln
262.7 342.688 ln
0.427451 0.309804 0.282353 0.12549 cmyk
ef
262.7 342.688 mo
275.899 342.688 ln
275.899 56.248 ln
262.7 56.248 ln
262.7 342.688 ln
cp
0 0 0 1 cmyk
s
gsave
316.58 411.688 mo
342.02 411.688 ln
342.02 336.688 ln
316.58 336.688 ln
316.58 411.688 ln
clp
322.58 3917.73 mo
335.9 3917.73 ln
335.9 342.688 ln
322.58 342.688 ln
322.58 3917.73 ln
0.427451 0.309804 0.282353 0.12549 cmyk
ef
322.58 3917.73 mo
335.9 3917.73 ln
335.9 342.688 ln
322.58 342.688 ln
322.58 3917.73 ln
cp
0 0 0 1 cmyk
s
grestore
382.58 342.688 mo
395.78 342.688 ln
395.78 22.168 ln
382.58 22.168 ln
382.58 342.688 ln
0.427451 0.309804 0.282353 0.12549 cmyk
ef
382.58 342.688 mo
395.78 342.688 ln
395.78 22.168 ln
382.58 22.168 ln
382.58 342.688 ln
cp
0 0 0 1 cmyk
s
442.459 342.688 mo
455.66 342.688 ln
455.66 111.688 ln
442.459 111.688 ln
442.459 342.688 ln
0.427451 0.309804 0.282353 0.12549 cmyk
ef
442.459 342.688 mo
455.66 342.688 ln
455.66 111.688 ln
442.459 111.688 ln
442.459 342.688 ln
cp
0 0 0 1 cmyk
s
502.339 342.688 mo
515.66 342.688 ln
515.66 37.8882 ln
502.339 37.8882 ln
502.339 342.688 ln
0.427451 0.309804 0.282353 0.12549 cmyk
ef
502.339 342.688 mo
515.66 342.688 ln
515.66 37.8882 ln
502.339 37.8882 ln
502.339 342.688 ln
cp
0 0 0 1 cmyk
s
562.339 342.688 mo
575.54 342.688 ln
575.54 40.2881 ln
562.339 40.2881 ln
562.339 342.688 ln
0.427451 0.309804 0.282353 0.12549 cmyk
ef
562.339 342.688 mo
575.54 342.688 ln
575.54 40.2881 ln
562.339 40.2881 ln
562.339 342.688 ln
cp
0 0 0 1 cmyk
s
96.2598 342.688 mo
109.459 342.688 ln
109.459 39.5679 ln
96.2598 39.5679 ln
96.2598 342.688 ln
0.647059 0.509804 0.517647 0.552941 cmyk
ef
96.2598 342.688 mo
109.459 342.688 ln
109.459 39.5679 ln
96.2598 39.5679 ln
96.2598 342.688 ln
cp
0 0 0 1 cmyk
s
156.26 342.688 mo
169.459 342.688 ln
169.459 26.6079 ln
156.26 26.6079 ln
156.26 342.688 ln
0.647059 0.509804 0.517647 0.552941 cmyk
ef
156.26 342.688 mo
169.459 342.688 ln
169.459 26.6079 ln
156.26 26.6079 ln
156.26 342.688 ln
cp
0 0 0 1 cmyk
s
216.14 342.688 mo
229.339 342.688 ln
229.339 25.4082 ln
216.14 25.4082 ln
216.14 342.688 ln
0.647059 0.509804 0.517647 0.552941 cmyk
ef
216.14 342.688 mo
229.339 342.688 ln
229.339 25.4082 ln
216.14 25.4082 ln
216.14 342.688 ln
cp
0 0 0 1 cmyk
s
276.02 342.688 mo
289.22 342.688 ln
289.22 43.6479 ln
276.02 43.6479 ln
276.02 342.688 ln
0.647059 0.509804 0.517647 0.552941 cmyk
ef
276.02 342.688 mo
289.22 342.688 ln
289.22 43.6479 ln
276.02 43.6479 ln
276.02 342.688 ln
cp
0 0 0 1 cmyk
s
336.02 342.688 mo
349.219 342.688 ln
349.219 164.368 ln
336.02 164.368 ln
336.02 342.688 ln
0.647059 0.509804 0.517647 0.552941 cmyk
ef
336.02 342.688 mo
349.219 342.688 ln
349.219 164.368 ln
336.02 164.368 ln
336.02 342.688 ln
cp
0 0 0 1 cmyk
s
395.9 342.688 mo
409.099 342.688 ln
409.099 22.168 ln
395.9 22.168 ln
395.9 342.688 ln
0.647059 0.509804 0.517647 0.552941 cmyk
ef
395.9 342.688 mo
409.099 342.688 ln
409.099 22.168 ln
395.9 22.168 ln
395.9 342.688 ln
cp
0 0 0 1 cmyk
s
455.78 342.688 mo
468.98 342.688 ln
468.98 72.9282 ln
455.78 72.9282 ln
455.78 342.688 ln
0.647059 0.509804 0.517647 0.552941 cmyk
ef
455.78 342.688 mo
468.98 342.688 ln
468.98 72.9282 ln
455.78 72.9282 ln
455.78 342.688 ln
cp
0 0 0 1 cmyk
s
515.78 342.688 mo
528.98 342.688 ln
528.98 37.8882 ln
515.78 37.8882 ln
515.78 342.688 ln
0.647059 0.509804 0.517647 0.552941 cmyk
ef
515.78 342.688 mo
528.98 342.688 ln
528.98 37.8882 ln
515.78 37.8882 ln
515.78 342.688 ln
cp
0 0 0 1 cmyk
s
575.66 342.688 mo
588.86 342.688 ln
588.86 40.2881 ln
575.66 40.2881 ln
575.66 342.688 ln
0.647059 0.509804 0.517647 0.552941 cmyk
ef
575.66 342.688 mo
588.86 342.688 ln
588.86 40.2881 ln
575.66 40.2881 ln
575.66 342.688 ln
cp
0 0 0 1 cmyk
s
0.119995 lw
1 lc
59.1597 8.15967 mo
59.1597 410.52 ln
s
55.5596 410.52 mo
59.1597 410.52 ln
s
55.5596 377.04 mo
59.1597 377.04 ln
s
55.5596 343.44 mo
59.1597 343.44 ln
s
55.5596 309.959 mo
59.1597 309.959 ln
s
55.5596 276.36 mo
59.1597 276.36 ln
s
55.5596 242.879 mo
59.1597 242.879 ln
s
55.5596 209.28 mo
59.1597 209.28 ln
s
55.5596 175.8 mo
59.1597 175.8 ln
s
55.5596 142.32 mo
59.1597 142.32 ln
s
55.5596 108.72 mo
59.1597 108.72 ln
s
55.5596 75.2397 mo
59.1597 75.2397 ln
s
55.5596 41.6396 mo
59.1597 41.6396 ln
s
55.5596 8.15967 mo
59.1597 8.15967 ln
s
59.1597 343.44 mo
598.44 343.44 ln
s
59.1597 347.04 mo
59.1597 343.44 ln
s
119.04 347.04 mo
119.04 343.44 ln
s
179.04 347.04 mo
179.04 343.44 ln
s
238.919 347.04 mo
238.919 343.44 ln
s
298.8 347.04 mo
298.8 343.44 ln
s
358.799 347.04 mo
358.799 343.44 ln
s
418.679 347.04 mo
418.679 343.44 ln
s
478.56 347.04 mo
478.56 343.44 ln
s
538.56 347.04 mo
538.56 343.44 ln
s
598.44 347.04 mo
598.44 343.44 ln
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/percent 
<10bf317037023d4c0d7ec55f50e0d703cca3a91924009f4c54fa159cf720
05369ccdabc1406ade1a67cb8d912b310ad9f04e6f3b28d418a72a41c0d1
82546e1a7620eb97f057ef2d2818c17e8fa65f685e4d4e5e802ebc46e74f
c24c6aab9527e691343fc6ee843822158aa5860b42421d2cab508fb7a1ef
041bfd9f3df048726b67a5f3d9d2baebfd0da8f41a68b5c249e6306143da
781c59bfed50e7b6aa0d30f5637d48a589fe7132f9df130dbf99124377cd
7bec8347fb1962a828f67cbccb3ac9a2a465f606f6dca2f8b5b7ed55449e
3181f995ae07070d2e5a09dafab52c13b0e8aa5df2ffa25948b618b258ef
82606b00e5d7d3dd2d855510591e51de1d44623ab7287d84635357e7f605
27875c0c> ND 
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 37 /percent put
dup 45 /hyphen put
dup 48 /zero put
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
37{/.notdef}repeat /percent 7{/.notdef}repeat /hyphen 2{/.notdef}repeat /zero /.notdef /two 
205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
22.6797 414.12 mov
0.0705566 0 (-20%) ash
restore_ctm
save_ctm
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
22.6797 380.64 mov
(-) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6664 380.64 mov
(1) sh
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2773 380.64 mov
0.0705719 0 (0%) ash
restore_ctm
save_ctm
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2397 347.04 mov
0.0823212 0 (0%) ash
restore_ctm
save_ctm
/ArialMT*2 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6396 313.56 mov
(1) sh
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2505 313.56 mov
0.0705566 0 (0%) ash
restore_ctm
save_ctm
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6396 279.959 mov
0.0705566 0 (20%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
51{/.notdef}repeat /three 204{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6396 246.48 mov
(3) sh
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2505 246.48 mov
0.0705566 0 (0%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6396 212.88 mov
(4) sh
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2505 212.88 mov
0.0705566 0 (0%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f72e955f0050b5472
6b68794743aa9e2640fbbbe965e5c7462a0da2fe3396d6994552b6fd7b9f
c3a7f776be319813ddb449d1a761c2a25379bcdbddb59583b40898699b48
1611e523f8146fbaea058eb8237d1f8ef6c080ecb39f96cb6c0db3e3c586
248bc7c61f659dbd2f8aadac81a2448e7137d524> ND 
end end
end
/ArialMT findfont /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
53{/.notdef}repeat /five 202{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6396 179.4 mov
(5) sh
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2505 179.4 mov
0.0705566 0 (0%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6396 145.92 mov
(6) sh
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2505 145.92 mov
0.0705566 0 (0%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/seven 
<10bf317048559e9c292b4762aa54ba120a145df60b670d87c36c3ee92d5b
39c9648a6d5ce1131c9257911f8bc7e67b7a2848cf37308ba0025304ca48
4c163915b2d4c913b4486d09> ND 
end end
end
/ArialMT findfont /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
55{/.notdef}repeat /seven 200{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6396 112.32 mov
(7) sh
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2505 112.32 mov
0.0705566 0 (0%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6396 78.8398 mov
(8) sh
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2505 78.8398 mov
0.0705566 0 (0%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52805a666
172babb1d73a09fb0432847d9265c3c057d0112d971ed0197edf6801f0cc
d27a4300d973d4627332ff0ca814c0ce250c35754139515ccbb98571061c
85e232c5d2724d28cade69abed806808a329f904488eec02d4bf36c25046
f7a1306ac101498c67190cf8a8e43a1298791a833df5d0225170130cde4e
6dbabf7a8e794c3de6dcec3e9a0c2449b47003a2eed622096fc30cf785b4
a1aacc0e4ca1048fbda9f51c6b8cea845ce656cef8e1da09ee2450f7b737
e0b1217086fc607fb5d514dedd6adb> ND 
end end
end
/ArialMT findfont /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
57{/.notdef}repeat /nine 198{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6396 45.2397 mov
(9) sh
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2505 45.2397 mov
0.0705566 0 (0%) ash
restore_ctm
save_ctm
/ArialMT*2 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
20.0396 11.7598 mov
(1) sh
/ArialMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
26.6505 11.7598 mov
0.0705566 0 (00%) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT Initial
11 dict begin
/FontName /Arial-BoldMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/B 
<10bf317026ba2bbce92b978098e619897ab994f12b29b50b1a37e1df35af
c77b66274e94150451fc95e985c6c08f95aab316f7962853a630615432e2
1b8272f8d5ed3c35413a3be96787373ca9ee58c2b3c8f88c5e7f2b46cbc6
da244bdfcf527fb63a2bf6fdd1a3a182d97472c35edad437c1ad62957493
5f64399df752833660c1e1a5e9502a0791769a0c3bb4ce864eaea539b5fc
7ca689f1de9edb8fe0585da90a4f2b54ec3e4d6de3597cb0348b9c628e65
65ccc066957c911710c8f29dce32bb8485782f3c37c00a4751995c320cb4
a1620a6c345e> ND 
/a 
<10bf31705d64e193f644676913533d4f242c323584e641872a5c1de0a45b
c11c47ee3d23ae30ec51b7900366fc3318b4ef94c2953a10b5936c67bc95
df7d37c51b5487300f67d7441f8269f5ffc887ceba6bde7cff93c7f647b8
311cc86f0853364498b70618adebf5a2e115a1c20cfb7121a3dfe7a5b7c6
add7b2d5dcfe3b3af6bf0816da6c357f0ae9724881ff8f104b4595e63917
d60898e28a9be18eecaba21d899347bbf3b3e35b2af907ddcc3e7d8ba400
d792f1ad86a4f4b8ea1a66ecd59933affcb926ce97be7483e84631a143e2
e179131e4623f6ff518ffb182bef0db8119fa8d1563d701d2106ef6ee4> ND 
/c 
<10bf317047276c49998622737f5c0fdc953989c609349f8198e567ba3d39
2d8c9b20497fb0a1ab50b280cbda93c4b37a5526c420af9ef3900c7fb283
205f311e91d93c70e400c5046b03a4aac576b29b2c7de42ac653c03179da
3539d27b77207dfbb8455d3504430410d87009da808518a61cc55d987a14
eacf1822ce81958eb18adf5067aeef> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
27ce5de111138125f9093766174f312900bc907ba83f063c596c451528f2
8a3f9d1e22e4c33f68809148715a52e927c4da64b149239c9db47f7f7686
ed072ee6b7334e9d8f3063889e2ee63ce6f7e07b343f8999bbc054ae2b06
c6fa9f71ffbc2111aef9e940176dfcabb2a79aea515293> ND 
/h 
<10bf31702094fda29d7d9038ab4fee8abf76646fa4a846d0367c68488384
7072fb940cbd22f4690ef440df392c4d96ca01e2e586bed9d948f27f9979
68c93efdb995ee74bc9cb6bbb9d3862655cd42ed564b131b6d358c5ef80c
2237740c4e3cf8f75d67bcc464609c7b4273da3c696cee03dad8> ND 
/k 
<10bf31703cf850293dbeacb4825d9b43eba4ffb09ca807300a6840933215
67484a102e8968ac891b9c55c03edb3428b3c6b22f37d92d6e5be6> ND 
/m 
<10bf31703bc84f280bc926798acdec2516276f3d24aa85ca9a257a88e668
ad6a657479da889671cd25759330144397f939b3b43dbbb312036f39eb3b
73a321a0cd09c9f24d1815b01926ce18ac4a050fa89875f0ba26a9c289a2
96ce6616eb926ccbacea4e64f1080064c63a54d52aea5a1a640c06660ba7
9c303d2b7feb1ae62b835f35563410ff3552f3587e4d3552c5806bbf660e
e7049cf393e3b6172e6515fca5010cb65be9e382131e8cf3a71499b433> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073caa5a4880edc0519edde9
3b7e79d27ff1cc1a7f5a6acdc915e4245b62ae0fac07b1618eb64ef312c8
189ae1a0f41d9ffc939b577e79e262d221101176596e459e6e66acb6f95b
e4bfb69a69ecf51cfd34996ad9e4e4f1108e778b29c01f6f36d44356> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184ac30254fb69f4898f904e779cc
cdf8991cca76a0c49ebb55db4360f969cdec63227973a8dbca70a1074b85
36761b137a1d527cb4c37dcbcb389ee07d6f305d1223> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Arial-BoldMT findfont /Encoding get
dup 66 /B put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 114 /r put
pop
%ADOEndSubsetFont
/Arial-BoldMT*1 
[
66{/.notdef}repeat /B 30{/.notdef}repeat /a /.notdef /c /.notdef /e 
2{/.notdef}repeat /h 2{/.notdef}repeat /k /.notdef /m /n 3{/.notdef}repeat 
/r 141{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*1 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
296.64 451.28 mov
0.0117645 0 (Benchmark) ash
restore_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/F 
<10bf317027e93a6da982a87edd53b1a22870b99b44157cee5f7e1ac9dd0c
13b8ca1eb59184f62bdabd0c5d> ND 
/L 
<10bf31702a84dbf05e19cf614950deb745919e83632147afa81652f9b5b3
9e> ND 
/O 
<10bf3170448a2f19371b20667b22e903c1afba152b4879eab11cbcbe2ef0
b442009ad30cbd4e7daceeeaedcf23b21f5eb9f831a5c9fc3a28ceb8499a
cd3c5ef467b8000d6194a9e249fff20bb4b4133231118d2cfc55219b300f
d0746a1d42f153d8dd6d9a6088bd3f375be027b60c2e7b64dca7f9bc0681
d6817a29bec07e8f3bda7c47d394e8d4c82575849b48a78ffd321fdb> ND 
/P 
<10bf317026ba62063a41a530d6e25ee764c7f37e362ce95244ccf4143bd7
6e3ff0410d2b190cb91e47edd50ccff2e42a0d8d7aff8c39656d43525a65
79630f8f89a62ff0293d4d844fd3177fa0a6af1903894748ef4cbc602139
169d0e04b43b959bc25da9d853bd0f9f6202b7c82eea945f359f5d0bf5d5
059ffb82bbb04bd750a251bf> ND 
/S 
<10bf31705d65c0900ab6f1dec2032040522da1778ab1f8dbd6f39e50575f
52250ed883fefd73047e46389dc27ed35368c13d67ccff3e72181d1ac631
1700339f08ca27d037db9405f13d00088e1b28f177b15a22fa40f81d1a75
44a4000f0266a11f21625d90c40b82cc1eb172633b7488d80fc45db85753
17eb9df5ab42e2ae2af288dac456f86913b01c5d2d521d5c08cea64a34f3
c481f9c4573367f7e378128185921449b6927a1579586b2b1b71fa9e4a59
2f38c71da73a3084aa09675bfdf7f1b1d39296c9c0e626974999e7191dd2
dec61a20006ae8> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a75b53d1c665062d85e
9208be1984d80ca429b440be0d79933714c529b927b56e27825e8eadf74f
14e87b6f85165a926eb74adcd0c093eaac7ff05d0f72baa4233a39845afa
6811b2b5de2df75f454bd343fe08c0e8b39c4af7e58c543ec2dcd039c6db
ad50c8e41d8a0dfab92fa56fd03c98ce6668feed> ND 
/o 
<10bf317041f0d680f4930f6b0672f7541f6e2d601952218f891df4de7fb1
a12b8f6ef4b7411d7caf36d6c12165e362f948ed9301abab7dc334fe3032
f31dc6a43b76044be207fb11eb434d390e28b3a5cdd669883e371a67c337
c22a5647301810f5b9e291ddd0d763101639f297cd088e8dc2784d613e20
e44703e0623793a823e7cbab3e0f36e62433551b3dcbde6c93e4> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf3991486ad73cd5c
e3c2a76ac4e66058f8979f25569ad46341a43f14e1e6f23cee3876> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 32 /space put
dup 70 /F put
dup 76 /L put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 100 /d put
dup 111 /o put
dup 118 /v put
pop
%ADOEndSubsetFont
/Arial-BoldMT*2 
[
32{/.notdef}repeat /space 37{/.notdef}repeat /F 5{/.notdef}repeat /L 2{/.notdef}repeat /O 
/P 2{/.notdef}repeat /S 16{/.notdef}repeat /d 10{/.notdef}repeat /o 6{/.notdef}repeat 
/v 137{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*2 findfont [0 -11.76 -11.76 0 0 0 ]mfnt sfnt
BuildWidthShowArray
11.7598 255.12 mov
0 -0.011734 (FLOPS ) ash
/Arial-BoldMT*1 findfont [0 -11.76 -11.76 0 0 0 ]mfnt sfnt
BuildWidthShowArray
11.7598 212.613 mov
0 -0.0117645 (rem) ash
/Arial-BoldMT*2 findfont [0 -11.76 -11.76 0 0 0 ]mfnt sfnt
BuildWidthShowArray
11.7598 191.004 mov
0 -0.011734 (ov) ash
/Arial-BoldMT*1 findfont [0 -11.76 -11.76 0 0 0 ]mfnt sfnt
BuildWidthShowArray
11.7598 177.257 mov
(e) sh
/Arial-BoldMT*2 findfont [0 -11.76 -11.76 0 0 0 ]mfnt sfnt
BuildWidthShowArray
11.7598 170.704 mov
(d) sh
606.719 234.48 mo
662.28 234.48 ln
662.28 184.2 ln
606.719 184.2 ln
606.719 234.48 ln
0 0 0 0 cmyk
f
606.599 234.48 mo
662.28 234.48 ln
662.28 184.08 ln
606.599 184.08 ln
606.599 234.48 ln
cp
0 0 0 1 cmyk
s
gsave
607.219 201.688 mo
624.02 201.688 ln
624.02 183.448 ln
607.219 183.448 ln
607.219 201.688 ln
clp
610.82 195.568 mo
617.9 195.568 ln
617.9 188.488 ln
610.82 188.488 ln
610.82 195.568 ln
0.12549 0.0862745 0.0666667 0.00392157 cmyk
ef
0.960007 lw
0 lc
610.82 195.568 mo
617.9 195.568 ln
617.9 188.488 ln
610.82 188.488 ln
610.82 195.568 ln
cp
0 0 0 1 cmyk
s
grestore
save_ctm
restore_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
97{/.notdef}repeat /a 3{/.notdef}repeat /e 3{/.notdef}repeat /i 2{/.notdef}repeat /l 
/.notdef /n 3{/.notdef}repeat /r 141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
620.28 196.8 mov
0.0470428 0 (linear) ash
gsave
607.219 218.488 mo
624.02 218.488 ln
624.02 199.288 ln
607.219 199.288 ln
607.219 218.488 ln
clp
610.82 212.368 mo
617.9 212.368 ln
617.9 205.288 ln
610.82 205.288 ln
610.82 212.368 ln
0.427451 0.309804 0.282353 0.12549 cmyk
ef
0.960007 lw
0 lc
610.82 212.368 mo
617.9 212.368 ln
617.9 205.288 ln
610.82 205.288 ln
610.82 212.368 ln
cp
0 0 0 1 cmyk
s
grestore
save_ctm
restore_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
/q 
<10bf31705c36af5cef64feff3875e93eaf63e864fd70bb6a23335213cb92
613ef6659d57bc2de254cc566d895f5f133292f3976aa75f0d8220b64377
ad3b9e0cca6d8636b6227e93d3d5b69cfe8190601c5aababb869cf2a2c3c
0faebccc9d8bc5cf47ae76bd1e7c93faffdb072fb9b42389012d94496b07
587d7aa3589ca1cc4d727b6e3d5da767a9601bc235c68de176> ND 
end end
end
/ArialMT findfont /Encoding get
dup 102 /f put
dup 113 /q put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
102{/.notdef}repeat /f 10{/.notdef}repeat /q 142{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
620.28 213.6 mov
(f) sh
/ArialMT*10 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
623.606 213.6 mov
0.0588074 0 (re) ash
/ArialMT*11 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
634.18 213.6 mov
(q) sh
gsave
607.219 233.608 mo
624.02 233.608 ln
624.02 216.088 ln
607.219 216.088 ln
607.219 233.608 ln
clp
610.82 229.168 mo
617.9 229.168 ln
617.9 222.088 ln
610.82 222.088 ln
610.82 229.168 ln
0.647059 0.509804 0.517647 0.552941 cmyk
ef
0.960007 lw
0 lc
610.82 229.168 mo
617.9 229.168 ln
617.9 222.088 ln
610.82 222.088 ln
610.82 229.168 ln
cp
0 0 0 1 cmyk
s
grestore
save_ctm
restore_ctm
save_ctm
/ArialMT*10 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
620.28 230.4 mov
(a) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
111{/.notdef}repeat /o 3{/.notdef}repeat /s /t /u 138{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
626.855 230.4 mov
0.0352783 0 (utos) ash
/ArialMT*10 findfont [11.76 0 0 -11.76 0 0 ]mfnt sfnt
BuildWidthShowArray
649.224 230.4 mov
0.0353394 0 (el) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/F 
<10bf31702f7c4b31b7f92f61f70a9032d1addef58c81f5b8fed9651d8c00
81acb06eda84b504e7> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/R 
<10bf31702819c97bfff21764697e50774ba74072e33752b9757ab1da5110
1cd5007d94ec5ab5df40cad71d9b47c5db20b30e71ec3b2ea4ffb966617b
dd86ea50ab4da70131cee0aeb4868b9a28ad3c7bfd4f03efbe080427ed4f
f28d15b9222e1f65cad625669e8a7a22b058fad3199168f7fd693aea9bbe
853141b98c668a72cafa538bace6827819d98c98da00e70453fb9769adea
4f22cf1b5b62de022aa24acc2658> ND 
end end
end
/ArialMT findfont /Encoding get
dup 70 /F put
dup 73 /I put
dup 82 /R put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
70{/.notdef}repeat /F 2{/.notdef}repeat /I 8{/.notdef}repeat /R 173{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [8.4846 -8.48462 -8.4846 -8.4846 0 0 ]mfnt sfnt
BuildWidthShowArray
83.3286 375.632 mov
0.0509796 -0.0509491 (FIR) ash
restore_ctm
save_ctm
/ArialMT*13 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
100.654 417.65 mov
(R) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
106.833 411.472 mov
(a) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
111.602 406.702 mov
(t) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
114.01 404.294 mov
(e) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153f04f4f888
a9793af1cdd76cf42c98e3b7c6efff30aedf23874b961a5a7d8352571859
f2ee15399c0c2d0f0e789c04eb8ab69e8694b49d1cdc36041f81732689ae
c7de70103ef45c5aac1fa0ded9e2cebee882d4e31e26d9203d2435459b9d
1e92bd9bcf321ca456fc2c8b25bf9b414bd39bc63d4e221a0d6aa6fccdc3
c8a808e6ed39733b2c7e47> ND 
/v 
<10bf31706ae07dd17dfc9e3ad4fb8a8843b0ccd3bf37159e4d997ae7db46
1605af60e723de30a8f7915cee06ac348ee0e2ad17e20e> ND 
end end
end
/ArialMT findfont /Encoding get
dup 67 /C put
dup 118 /v put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
67{/.notdef}repeat /C 50{/.notdef}repeat /v 137{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
118.78 399.524 mov
(C) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
124.958 393.346 mov
(o) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
129.728 388.576 mov
(n) sh
/ArialMT*14 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
134.498 383.807 mov
(v) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
138.791 379.513 mov
0.0509644 -0.0509491 (er) ash
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
146.437 371.867 mov
(t) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
148.845 369.459 mov
0.0509644 -0.0509491 (er) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/D 
<10bf31702a859cc72343fc5a00cbe95321e18bbf02bcb7f45509644b3a8b
d207519f4bcffbf34b0835498cb5f045c513178851cd4b8c0789ee8f3a55
0fc15c42bfdebb133169428a3a1b1bc672407557266ac16d178cd3a902d3
fd09df3b5e705b49adb88819b4b54ca38f423b6ee38449760d0c755823ee
ea80463cc5f9503741f9ccd7257c12030036b4cf0f6f62e0dce133ff0b52
38> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 68 /D put
dup 84 /T put
dup 99 /c put
dup 103 /g put
pop
%ADOEndSubsetFont
/ArialMT*15 
[
68{/.notdef}repeat /D 15{/.notdef}repeat /T 14{/.notdef}repeat /c 3{/.notdef}repeat /g 
152{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*15 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
166.18 411.468 mov
(T) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
171.413 406.235 mov
0.0509644 -0.0509796 (ar) ash
/ArialMT*15 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
179.059 398.589 mov
(g) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
183.829 393.819 mov
(e) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
188.599 389.049 mov
(t) sh
/ArialMT*15 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
191.007 386.641 mov
(D) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
197.185 380.463 mov
(e) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
201.955 375.693 mov
(t) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
204.363 373.285 mov
(e) sh
/ArialMT*15 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
209.133 368.515 mov
(c) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
213.426 364.222 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
240.401 396.589 mov
(F) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/M 
<10bf317027e82ad35cdddc2b5c741dc6db294c8b4a0d6704b3828695c903
74c6f490906b329d29d44205638bbfe80126114fe37407e2e312c7bcbd2c
1b7b9e7fac2817224e19> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 77 /M put
dup 100 /d put
pop
%ADOEndSubsetFont
/ArialMT*16 
[
77{/.notdef}repeat /M 22{/.notdef}repeat /d 155{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*16 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
245.635 391.356 mov
(M) sh
/ArialMT*13 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
252.754 384.237 mov
(R) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
258.932 378.059 mov
(a) sh
/ArialMT*16 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
263.702 373.289 mov
(d) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
268.471 368.519 mov
(i) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
270.407 366.584 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
296.156 400.177 mov
(R) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
302.334 393.999 mov
(a) sh
/ArialMT*16 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
307.104 389.229 mov
(d) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
311.874 384.46 mov
0.0509644 -0.0509491 (ar) ash
restore_ctm
save_ctm
/ArialMT*1 findfont [11.999 0 0 -11.999 0 0 ]mfnt sfnt
BuildWidthShowArray
333.156 422.511 mov
(-) sh
/ArialMT*3 findfont [11.999 0 0 -11.999 0 0 ]mfnt sfnt
BuildWidthShowArray
337.224 422.511 mov
(3) sh
/ArialMT*1 findfont [11.999 0 0 -11.999 0 0 ]mfnt sfnt
BuildWidthShowArray
343.969 422.511 mov
0.0720673 0 (200%) ash
restore_ctm
save_ctm
/ArialMT*13 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
356.101 399.576 mov
(F) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
361.335 394.342 mov
0.0509644 -0.0509491 (il) ash
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
365.207 390.47 mov
(t) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
367.615 388.062 mov
0.0509644 -0.0509491 (er) ash
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0415702485e08c0
f77bc592e4a945edc8aefc27f1cc883c7c6cd2735a8b0e6e3a6451397aa4
97b27340262755a03b261d3a97c75d2b7376de5705dbe038fae0f2b63921
648e180bc7544e071f3547a31a704e5e674bee16ed9f79b34d65e93305ee
f05f76e02bb0fcbba2e58bb3dcb1c9352574698f9f72> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 98 /b put
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*17 
[
98{/.notdef}repeat /b 8{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*17 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
375.261 380.416 mov
(b) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
380.03 375.646 mov
0.0509644 -0.0509491 (an) ash
/ArialMT*17 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
389.57 366.107 mov
(k) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/V 
<10bf31707d937b42ca5aa917fb8735867898e231374dce1d715d27566dcf
115e95280405ef7103dd8183790f381980b4f25c32c305> ND 
end end
end
/ArialMT findfont /Encoding get
dup 86 /V put
pop
%ADOEndSubsetFont
/ArialMT*18 
[
86{/.notdef}repeat /V 169{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*18 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
421.248 393.771 mov
(V) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
426.958 388.061 mov
(o) sh
/ArialMT*15 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
431.727 383.291 mov
(c) sh
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
436.021 378.998 mov
(o) sh
/ArialMT*16 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
440.79 374.228 mov
(d) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
445.56 369.459 mov
0.0509644 -0.0509491 (er) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/O 
<10bf317049853377ebc41c579b14bfba658962b764f6695015980c5a5c59
892f597759506fea6823cb15491706451f6de9af5780c2aa7b2cca8c9d1b
148d66d0dfba0e5ea9fcc590ecfa2901a2e230ddde47fb16c5ce672dd34b
46e6c0db45175b43134ab01e75569405261cf4f68cb7466f1a6f0e9d10e2
5b88d2dddb2b9d5c78c616eaddb9f7cfcdbd414dcf4bab600d8b1f0fa157
b2d02044fd034ac64440c5> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
end end
end
/ArialMT findfont /Encoding get
dup 79 /O put
dup 109 /m put
dup 112 /p put
pop
%ADOEndSubsetFont
/ArialMT*19 
[
79{/.notdef}repeat /O 29{/.notdef}repeat /m 2{/.notdef}repeat /p 143{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*19 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
463.425 410.937 mov
(O) sh
/ArialMT*14 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
470.076 404.286 mov
(v) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
474.369 399.993 mov
0.0509644 -0.0509491 (er) ash
/ArialMT*12 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
482.015 392.347 mov
(s) sh
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
486.308 388.054 mov
(a) sh
/ArialMT*19 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
491.078 383.284 mov
0.0510101 -0.0509796 (mp) ash
/ArialMT*10 findfont [8.48453 -8.48454 -8.48453 -8.48453 0 0 ]mfnt sfnt
BuildWidthShowArray
502.966 371.396 mov
0.0509338 -0.0509186 (ler) ash
restore_ctm
/ArialMT*15 findfont [8.4846 -8.48462 -8.4846 -8.4846 0 0 ]mfnt sfnt
BuildWidthShowArray
550 383.705 mov
0.0509796 -0.0509491 (DT) ash
/ArialMT*12 findfont [8.4846 -8.48462 -8.4846 -8.4846 0 0 ]mfnt sfnt
BuildWidthShowArray
561.411 372.293 mov
(o) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac576702c4654165111c4e219216
925a1bbda37b8221ddb4f3d7ef9dc32fffa987a0f0ea03488171acb09982
96179b683649315a4b1534> ND 
end end
end
/ArialMT findfont /Encoding get
dup 65 /A put
pop
%ADOEndSubsetFont
/ArialMT*20 
[
65{/.notdef}repeat /A 190{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*20 findfont [8.4846 -8.48462 -8.4846 -8.4846 0 0 ]mfnt sfnt
BuildWidthShowArray
566.181 367.523 mov
(A) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (flops-removed.eps)
%%CreationDate: 4/21/2003 6:27 AM
%AI9_DataStream
%Gb"/L>B:cSG38BGK)_NN'HtFJJBE5(r']gZb<l_QM.:=%42GSgRNt!)1oAZnL?"[$^?>C=amA:#,_2&uj,N`!W^M#B<aJOmq`4?>
%a%oaF=6CB$Dk='0r)o@Z=8K'&f-OcFIJ!'Ms)deuib#C9l0/!mm7u[Y]JT%PI2W@TO\admZJ-1rq<d;'C@chdRP/Pr5$omCl^Q53
%cem'O\o22!jHj$Dqo*TdqQYCQSB_'nmISlnC*RR;Y:jM2DdM@gs/CL<4BX8^[ALD2me6L'H*K@/O?TtSea6P;pK;\le%Ah"]#X!7
%=,WEg`Oj+;^O5s%lJ/B-H6$n4c0"utlHOWurV!q4lT9<l*EW75V(>d'ASDs@O8&<fH$cl#cShi3%<tC\q9<-s1b\;:Nr=@sG(u3D
%0a:A[A&rmJ^UdN"^07WlB:CNEC1Yc6rU*-%-V&fpeUN!)?f%A-T$,5,c8k\>r_d(nO7*jRNP%XPND'9KS)=6XHHr.*4oa]V:O`(^
%n`GGH\l`8:iD[+L?-r=p\%&$o%l0^bL%a/n0,Ca(\''b+W8"bDio\]bfDOtR2)jleq'u>E?d/NZXePg``8Ua*bmmApq^utfht-dA
%(O1_e#.a23P+TF1E!J&3s$#BeZ&LCPQe0F6B#/6r`dF5dcmSa8>HU]^GhC5ocM9)P@opfd5Ai.'in_T5a3V>H>0P8.CHL4ilcjVi
%IutBqU[PM[<rMFQEj>W"eHN+0er@90hlP*>90G?%rmc%D_jp,us(a2mbgp\J)r-b@/[kVaDWpD)^V.=.3d\VDhp_\IQd;fN="dVS
%b))^C,\rMga`:Z*"o_fk4.gA^j7L"LOQ_b^F^3pik5ohQee`6WY!1kU.3sV6cY(jfos]kTk-G`#014'f44uOe7OG=0:@+V?:jMkt
%l\k?d-l:bMqB)m=FI;tFlT\UJCtN@+\2*jZo'6/EeKk\2\)cQs!qKE5+-rrdp?VD_r[.*H]sa\I`O?XGc2$aQ/V@:93g;(9S+Z0C
%PDa:-5PjTfYZpjFp29D(&70Rgg3!AB`WZjBTYRm7EiD.8QuBS-g["8B>0;n>r7fodU2-Nq04%l]Mtbg2\HCTDDe>L3`LjaaA./7J
%+%oI5RJu`38b9t]F'2#rH64NB?S&S\,_YF7hp'ahf,GT9>P1C%!aaHK,e4:&LB"7Aq!r16!g;ksb2$mIT"X=8#ZE0ps3[C.b0EQ4
%meTscrR^JFi0*EV[>hEWcB]8JMp88+Y%HitH.e`oY28PGcFYkmQi5Vc[hm6Zcem%!f`(nj'SF/J2d>0]Ma,PFG%WI8?#5h-=78'U
%XcR8Q[i<ZhI\#-jm0-kGCNJ_oH+0HhfL\#<h>Ei9^t(%Q=)U!8]2*nIl/YY)LHd!0V#]tiS"62'T(e]I*uFCDZY$JncWA`eGnrIN
%6[P/A\[^?Ef'd3DRm/jj%/^"J67+G%kl`/Ha*W$L^G4aX5kg3kJKeG!-NT#@cOTE.$T4R$h_*1XQ-L3%?_t_kaDR\TLB$f'>k[0\
%h8S^!nn)n2p@#Kna5=W+o4%^_UVCuU0!5UT@Q_;H^Ng6DRC50Rbnl.85+taNs(_)aoaL$BK]@r<kq8eL@MapWM;l+.MGU4hVnCjo
%M.2aS@qZMQ^g?S187NI2@s&b\5#ZM"8W&pgN*X^pHHB*I2$P%O'ZU[c(D&eIq37LVetNh"?@7kc.MQpinP]a":''uBpEL_.EAS5'
%Bi1&;6uK%W8Ud$[=#ULmW+Y:LL&,6AZ;;)s-5jbnRH,a@98\/]cm/tIMI&"Ir$b2PVAs-_:7eWXM()(N'OAgsij,Vu>g+2/8ZsBi
%iA5Lp/.,BC'2/YEZ;(K(AU1[&AI""+GN"Bm82"#cFO6hdCN$UIZVN]E233dp.6sM:(b9&`1g"YM/pBcUJq/:-!4%q=:A.om&+-[h
%%A#\D^g\aQ9nqMuPPd0A#;6'56l]U_B4`5"]a+[QiQEWtKJ=*eN8]Fb#+8g!,[r^n9mGZR6X^QG(1NB1"eL%3IZj[$,$cI^N#)c?
%dhNA6U9mO5(]l1qVVS@(em2<[1,-CX<utnq#<lEjcpLZj(enQ8d4%TA!XJ.qa9pu:!N:QWS>?<;ieX55X@V)Y)+4\MTKn)gq92-S
%n[rpVJQ\Y,f=,6(5N!=9%ZYoGSp3JGJZY,]TLiG7mNV[GGi\P:Ed<0L^=Yp_6#N%`g_(<REr_6Y-RJ]'gpUJEqea3Jm@te?"!Pq2
%)*'rDTLmupGWp[N6=qqX-RSa3O:&fJ-=rg-ie]XH+67<k`-WK;0\O2(1Lu1H.7W"G"MuJ#T6^JH:G'_C91:JEr6'\U,#DA%_#^rS
%+?<+sYZM_t:RsHVW(P?>"thZ09H6i5=$O"S#/P%\c8stW3(#(Rk:CgE?KE@)b+"sI:SoI[:t-^#Rs,!_8''+R^tcA8hDT?I%%PNB
%=;(C(/he("Yl]INi:t77jZ9%OJ5(R5APk^LGahA[abqB_rLcruN$s!dN@)GEkiKHo`R%1dNiOP+F%>i'-R*\.[b#ebjl?P!L;U_o
%IG/I5`1*<&L*X7+/nr%*h#lT\*C.0+&tg6A01A47gj>_;S@W)?0,p71;LfgXK-^W/60ODCnp1GE6(++j7DNCW$AsF^Z2;Yr-:eB9
%4ch9V9`SNT_W*_k;8]2;F1UfQrP@"s^`8TKB:3Z[D!-.C(2"a>qrj3Ge:Fn2D>'PO%QSJQ,-ZU5>QbgCQ2mrpTTTCjT0,UeLJ\Yh
%[#SMrS.\aaKAB-*DRcXt<M2g4P;4Q!aa+uIcZY.c]0oDP%buY77%=K,)$79f]*%.\+YCed"dN"W!hOQX8U<FkP*?[bLLc*>SnK)j
%2^<3Y7[i*@=[%;_Yp5YI=bOicfe_hf.,q-Gr'MaDME^@NnD#_g:fs>@`9W*^AH\`H@!>(9</.e1bN%Y7A:64SgnCD)&82*gLl;Wp
%M-HGaE)7BBcL(BK!(#Q\EfO:bZWmp,[Gk_ie;B`*@57HU0ck%$$3tu,PUQnki84@H72*R1;#i!NV@R(dA<oO-3eC4nr;[pnm/h/3
%UHo/F04;aer#L?ZFIT!Y&oku4#fk5g66hE`R4-mr7ul:Rif;3H_-RHC"Aj9nl_6jhT)mq9:90%"1a[iE&-+l$4Ra_kE^2I+<03V2
%#KMb[.l<:!o3cXU=ZMmVp7i*K1J<`JAd5ODs/bDtF;Dh,"u[WK'Qg51-3W**8=*_-5*bqS;'lpcI!L=6.*EUG^%.Hm!iX/2.\IE\
%UC-4O:Va3W!J3<c#e3?,=cd^u\aYX;lJQAX#K6\B+TbAG+,<Hfr9-,3:IUmNcO%AtS-`I.Lqj#\gggiHE>];=4qRAY)XuG^W$"LL
%:8Vo.c5Q<X-PHN+i$e`TYgQ?elV!?9%MFhm.pf#ZIXe4dHLBUR88[4[(;R`G.K\(:Ma!84Tu!N1-@2ZCaGRK7qE)2Sm2pqL(Alg4
%TD*B>%XtDEJ8D>\*O9V&ql]TgC31#p'J#CgX=uQ6OF+qRd'A1qP(a[j;a'rC"GA/LLSp3.U4n_bSE-aQA>p!qm+^>$acV(k(:"90
%.@:8SJ]qWo,gVQCM;LIQpJO#`8[3N:%0G9b9Fr`hD9C9n:h$#\+?:V/P`6i8fP<WHSfDKE=kLpgW_DbZ!X7Hs7f8I.THK/8"JTf\
%s*X*B;$8cW2<>O*Rs3.X+WD65PF]QCkJg>k!i-LaS>R/'YQm0LJ^V^FmJD&-6G!5X(BC`H:\4Z(+<Ohga>qC[JG^/?$4q%/jaN+N
%IDqdUeUs.iUN&.6#f-3[R>RYh*mp>^^k"NILYH^J,D8\b9nCTNE@WXM.P;E+\Qu!^TGX;#1]j/i""Ihoe.\dT=(4#k-!"HU`!Z8u
%5u>go"=-$\8g)W^":GLDf-f,U<)tbWM[4S@*.]i&7<(!U>"m0Am#1GB^pVSt#F;SUK)#hC6S4LV_V%5:pYIdI1o_&$bBlc>":?X;
%#XJb%BMqgfbpifc>RjG0Q4Cb4Ch!#DF;YK:Y!ijI:/=>AVps6qT'o5i5l%#"L'&TA]GG##<2B`JqEP(7+smsoWd=Bu:)40G&UOAk
%T#rj`#bDKW(N_":(VT@:*`s_AT%@@ddY8_T._m_en-mGS$AaY@Vh+UD(j(X].#(!EN(PSp%&UlB'9%jF;ljb_^g/AoG6K0ni*E$W
%"%0Z9K[kXCN+E,'d?,(De\mrj#sc-4KoC?s#YMd^6<'*JPR@'p(gd;0N9YcM,m#q-!IG,1$93:l$F&&0$j9g+3WOS,/tlsG1(KK\
%<jCF4kQ+Xof\_pF3>%!bV9!%crcgC+"V[Qj']hGr-hTfW4eAS][WioDQO:02UbJtm+I,4@#;MZ&6R!2[AL=GWJIeC^KO-BXPB\hp
%>(e(&g^_DeEMe7k]I2ZN`sZ7`P[(2_C'*"EcY1H*#Xc&TOS/bn8S.1[+2sM$q*:_59V[[S'o%)LL'0n"FA]R"%M.#FU*R(_/>V6\
%SPV(--I@lK&/!%'ZP<KA@=aLX6$)F0p29ggOE\[G#;uYP)NAq][_/Y>XG!u0mttGkTK7,95XeYaoSmEo;2u)[8FSDPJ6W8<#Qb=(
%!;'4H'n^LZ<[HrN9e\s#7HLW/,"K0glSJ3[R1_4seZQF[[][<o!l;LC)O3k=()-hW)&a5P)tQ.S6W`DoA1s\n<%LB?OM!dM3hlt+
%K![`jAqV5[A8o1!;MOS>ijbd!6#iDg>Ccd0Lte&c,)T?T\VeHJR3MrJ1K69ZJa5a5&WD;j)XCQKJE+WO-5"+oM2lU+jNi'8F(k<s
%WTY2[7Y@1f<NQM&92?i8!)V3l6WG8E=MT8E%"*fGf;fhslF:9&@fS_ZnM!k[c>ecV.??qbE+-UaG?87cC#EGkVnjqf+rmP(PuYr%
%<aEjq_"=>U'nsb#(kCm3343KhQ1i$Z!_@moN9g-ZOs&!lGtF9;?C;'QO'l`o*I1d$Y7]ZV-k1cj^s1q=D\_BF;)&Xm'hSd>jf^p,
%)K$@W79Z_c3`)TJE'-UM4h,f/?slH(l#Gr[SO-?@@:946_cUgj"?4[Q(CGFjB=r_f4rpMV8G*kMNC.??Z3tIk9-@#sW`0D:n359V
%jJcQ-X0B_rCc,QVYa:JoXqPhl)"jkK3f9SOe1;*P?=_O4dF+.VmmiX>g8]h#WJ"787$Wi?Y@*`Jl+LPM4QC*3$ZN";.&KqpFoSKW
%%oemupF9t</0Th2SaU>KM6s"h4J\uNbZ21F6XPa!-9g^6b<652:GbW^5bTMA<s2,sZ<Kpe!X'&am=_iu5!ko@]EN$X.;c&2>)P<*
%rV;+kTT`!4!X8uMEk`bQ7Hb5\02g0tOom1[>&/Y.>i3I1:eWgJ#Qf6*dLV<V83_V+L(6Bt-n0L:6q3qJ,]P$>Q'Ht)aJ,>5`.]uO
%)_>2/+JdEi/2'Cf'*H(U"*4Hq!/+2-/"6Q_5Ed-<E_5%@2$4;UMH$)s3*]QTK;Zj@JN['b.5]7F>t'"n!DLPN-`$i^#,7ap,Oc>g
%(#mdG2*(`JC_1h)25936-l"YbZ.j.'8j/sWTg>Lo<RW[(Pp+(;i"l_a_(IZ\?Is/qfJJE"g*e:^-Z9js(;*e1'j.Am3Z)h6dWq9u
%';]t2a(Zl1jstO9i-l^1EWWdbJGoOe0;tb@D?N/(N#RErclUkdn/No,dM=>\VFDToK,U[S7=\3"N.GbT:V?f9(.W@u,!aSS!\oSJ
%jV`ei^^g-;AKAU%"59FCA%D6]A.j?!02K68TN]^*(6eOCXccd.."L6K)d:7='VqNQUIl/G/5TAi0TeV"I2!G)_4"AaS8U;P4t;"P
%d#/!f_/658$g<2:#I4j@M[NTYcFm&^/Sufd/fbL$.9,BM%-I3C;>)>sC5#Qg@AGctohBci3m*uB1l"gP=KKPBjgMH"i2$MZL`9U<
%b)S,X.T8)O7^\LBMVG7H0?/#[76;"s%U5oTH&0R"*jTBuX)t4KW2#E!;UY<DeH=ZL?q>Hd[.iXDes!(a/*=*7.;1P)/[DP+s2ta-
%YIrDI!k7+iTa5cIPW;$4)%&3KY$r8+._t2>:89S*F-TfV^o'aq(LC`thh?Qf^Mk$0MCM/jL3&'a=rbY;.;](;]Rjl\E=Ek!Q![tA
%$G6IqoADt9Cm_4$.(u&lE-]:h6*CIn%.51$ZLk&j4&^YTqF$TQ;Z88s%b=R8PUQVjVAQ`K+:9)#kQPR2,_VaN+<`Fti:;G(7J$>J
%AHQaMJ\%qO$<+.P,7&uGFPWBkoF/?TP*n\G.]TGLRObD;bQ&,g5H6CUP]\*t?>WEU;<Z!67.$$[dNK?FCA^Y<f>u_&Tu7:XR>/1J
%GsOennp6Z[9iK\GV'C5$S>5EZW'-LLF6=u%DM%8/;8dGVEoTQoC69/<n[@0KPGiS:g+@q_/LlL]10:Uo"5qBj1l/No;A<+\5dQDJ
%:TZmSMNNR^6?c7O"3([_.0hUbgj@#V&R.(-dnUf9[X1r#2*lglpKB,1@PTW%"J>ndQI4V7;m?\,*3*iefV!E;";s0cILA7gd#cnL
%QFQ+ji!U4_a\]![R72W:(j,9;TiCIi&E@"&R>]M2r16G"kNWP/RF=P)eU3u><?)p?W$k`VI@i!h$6/mk9mFgA_nZNE*+[=XB]mJ%
%0:'fpSM8q`kgKt$-p!GP7r8EcA]t@@M%1\N>JWF98(5ALl6*(o$-Y<P#g1[aXlA'iD0#@S]0jjl)s'nM11:XT5:KVn,>Ll)1Dua#
%;>H1K0Ii7rkcQ[Tn5S/:Eqj9H_\uOIY.ff(/("",+\2TSB\+/-@rSG_JGKkKY_.A!`S2[J6PZ[4iSg\HT+>Hm0P-c&C:=F/Nh4Hl
%XRN"ZV2)i+JRi.6Tq@&oU_&V^$ll2WTg+91/P&h\$$_>^SO#LI29H1n!brhX&\d23U%1_SdNUjZ1^9]F'M[=_ZjLVS;"JPs^Bj,t
%ii)F,*M#!rST(9[\=_8c5R1_p%nQ9Er"ag&PA8$fl5%UQKLS.]jYB$E.V5^UK2spWh*Jkk]+@Z^-rnXG^aM,W1X7FbfW.XQTA\f#
%%(:2[\.cprB*)Ma`(3M-So.iLAsfPV[k=V[kn)BDNC/&n8pq9%6,EuJ(`:Si=oJQ#b()M_<@4^L/tarkD1M^T3FIYDT'db$VR^;Y
%"eo&r[g6*(p&n<\_U,:eQ[u1+D!K).>8SquSV#h5_W*7:e%Q]ORe@)ZLT"@,SdY0qE@_S4X:BDs1cF)>%[i4Z,`T0eWNObFX<:h!
%>gh!-&7ugt7%HIUi`LlI_k;tnc9X=(alkC<!lPC'.$N&<;F<V,l$4tG'euAT%LKS,Ur_HV>Tq"?ID<@c]\J9A)X;9a^k)^rUsKTc
%/-hJ]BPW73*%EQ(<Cqq'W0[!@od"6P+mfJl'1`dA;hMr+!a<B4'Bsp]2h^UPUY=cpA--Tj`Y9\Uhk7`odXdj3]B+@tEU'4Rn>M/^
%$ni(5k%Uf?]!Of\2[qcD03.".=Ut`okUN:L#-u<[<EPnbZTiEJ\Fg-s7d#A,lg_&((JOEr'6p2[_)Y_tV_,dsW_FT0r=aU7K*!\B
%Cl&Le<8`AiVBT)5.kI2Vr;l/b@S=9s>F,kB>;2)YWIVe4&\8?F9ppWLC=c?r$=>uA)CcN=FQi83eL*Ot6g35GFRl),lDUii6b$L>
%(GRDO%t/*HI&Fs!T6_uaTkU!s&-jTb153[QfXcC._N@G2<?duleF3\/%oea=o30;tL]U^HoeNW<#3BZT2qUQ4N\fHlW+dV&K?k;d
%NJ\QLRSXmGLKBWFMap?\*<=ptSMG7>*$f3Gg%R=`]m1O>X]"=`"ZMh',-R'&PFn;ek,)'9T;(3;r_^A@m5,mb&;P-l@ktNfYq\2B
%h^QQSXN3r(&=,)]@$6#JgC:&!=p:GaFrK+QdomA`2Sj854.D5?="I8!Eri1GX]8oS!E:0mO[]B>*@VoVn2[G^L,6Z-U]FlAE!Mr!
%l7m8TpWZ$Rlb3C44rL\iXQoU<VF*7(CI#n9gA-S&]Q2>;N2TuJY7(MV-W6AsabUMepJbN&V?59PO\TY4oipJLL1b,j,T!V0$CZ%)
%,*:f.bp*cMZ1u`\QQ)]P9i,cS_P_5nMSNd_"?KQG(1VAl!'9W"_He,c25@+9S/P_N6H+A1;;bP4:d=4@m4CUl9i1:>==/G)PlRMf
%Zm,H1Ymt]ud`<,O![N'aehf9=;PcL=pJM-U[ihZ[!9,:EiGi]D-"YVrJK7I4GVdSm-A7*hUn<\$\cU3)mXe;A[ri.YMO/k'>_'3<
%Agl(0Y5fe;i4`fn,!GF[abE+ei'3Zm:\T+Jk7\Mb5Nia_X_:Tc9-W&08E!$i/?u0i$lV[DHJY^9fSm+XOEAVr_Zl+4#3QtVVnMd)
%0QX27/6-UYp0'%,K:`o&TeEgiZoI]c#[^d99a8cF<OMY0^ek6G"Kt!][$MUL6AIp3#O/t#2c[7AR<@(38;3WY?:2b"Bq]%3(3+0u
%5U*)*qK?gbiL(J88Oa/dR8[)ja!bs0!KX$#dEiXe.G+h5do'E?KB0fMQQQ:rM,T$SR$JC^G]5Abckuo1:Wu`q\>Wt03[_:^dZuZL
%b.jQFEl,!o'^;Z8<]Ql!-dXtRhrshlV)pMH\kXq6P9T'Ub0^db$Iqb]Z$@i*\i_,[cA9QG,pIFRfcq^+9a<HWI3PXgj+SU5V:u'r
%5LhP"/NUo]a4^2%/jT9l/B37!$$@@LPiWIJL-'in(,-X&Uo6rYaf+Fd`2keH]Qm?9pV`2PE*AX0^F.2Y5Hl$T`3h7;eHl=/A/e9u
%5RIB7R5^\L?%#C4lCcHk7f[9eo0(:uE`FPk<_=.ONNi&7P.BEt=]3J[i$@,_+>rZg:5)h5I;+^bjS=,pb(k61N(X_\"9/AGDPFG>
%Ql?rR.rd%HU`"YmE`u8G"1LtFEdSXtA=:*$;R4a$,s;5Y*Ek$+M@o\#N*tYb[$8hW5.0Bl>>nOiV?Yq'>&&I-FH`=:RqI)/f8r"M
%T1V5]1TR+F[l8m$#4O2r>!XM=L:3gWW&)q<Ib2_,D!mo;M\t_p/Df3W?-3\)c_4nuQ27(=29F::XhDhT=c'7@>LQsaFV9ot6/>\D
%P9cq;Cc'B#3DlZ3`fGG*b(@eFa=d]6%J6EB3Pl%,Fb&OO#7T,e"l4YY"H><LObWb/8hsX<^X^Y^AYG0(U'%5d"@``!_*84q-\s',
%)`RFuLin[s#fJ/AMo$l0:eoptcpg,L\o]cL;hdjeBET62;#-B>RM.rfd@tTJ)H7F]*s<Z9%SoZ939^Ek)+SELWAbYoBaF*6YE;"?
%0/E["'"sG4di3*LMk]hEU3-h*[UfKg@.o,$1.$*bL%OYo(u#58do'Nrj?[bZj\OdYZ/$>.(ch0ro5m,q%2Gg3;E%b\f/Nf6@)*L)
%dd^ES@F.+@l<48B6jRPGbZV=h&C<*Z,O7ZB=si#u$:,oC=j.dr7h$fY_N^kV\>-$G)%rbeVt^Q:X\i@J)&>Z$2V0r9L@b(aE,O;X
%Hk[tK6suofJ`b3L#E)puEup]C5sVat&!WAY!IZI<"r#AJ1nq__[TEe?>^B7$2Lu6.14"8oh_J=?V?/n_C.KJ\.>Y6Y<C"YQTGY9s
%9\:BA.gCSlI0tu0&?C>5?&eJjghL4>5p6TGQm*`AJ?iZSg1nP;h82]:P@)/T="Um^WCBS!]rJ^FKa`B<8!4NJ]kRI2MQ$`>V@cI*
%NEFo^LkR1jC'>HmOVW-+i95mn'Cop8&UD`&&eEHIQ,E+\";\M.NGrZ@%e26*+eWI<@KQd>#Mh=>Xn(>Q"e3oTL)rKSU?eq6;c9Jq
%ZWN(hDsg=EFifS<EZ2,lME`Sn@%h"b92WlhEOCESA&Ore"2S0FJk6['a"+0+\/26MU<6g81k7aLZ(SB'3t(iqY"l>MRqf5nH5X7t
%bK8&sCL4nZo,8I\i_?7BO8%'(7o3`0$Y\_%Nhh=a<KF-FWPoGfj39@tg!\:B/F:8WE-p;oU_Ut[0[L;-opKpc;Y7kGA\-._MM;rZ
%`t2I7fQeU0*STHp6Q)C_RU&Se9%+t<I?TB56l,%uO96)r)Fr#$O'YB["6A\k[70'>qEu-+@#c-BbesN=s3R%C=TTJC'$/+olDtj:
%E.S4681U)?D$kZEBTgbV7Hm(:oVfVtgOXeE[Y?bKWdmf,#,Dii#bX#!6$s@;GBaRRimf,pokMV@C5Ej"dfT(/J?<f=TQmr5\!U1!
%VI%8RlZSeAn<2\g-"S@O]lW8`oMCLN$6%G^QY0ON"5r93D#FhK4#@G5Ylu7#Q%RW?JNC]A"9&cY$Z`M@(a'd5;T$^68Y*YVo7F;$
%MNCB(GsKDX0nH;n\>,AC:WtXWQ-?#gdW!Z$mRdH.*3A3a(hOY!*&+6(`F"T2.u-FP4etcr3E0D1*)-U,[c+"D&&h('on]u:4"t?q
%bR1^&)nAF7cp3($7qW;@rLGI^cF?I`#0GNoD.o?;/h%K%#mYs,MnmFQEtoPjVZ7YeCOf?'%Cugq4#EgCS%OO^%s]/H(,n=E!b3AC
%U#'b8i8\Jl#!jPZ`uq$cq1H$jPj\bL5rFGU`H4A"]jsj`U96;#[?B"#*AgGp3R&<cTiO"`n)1dn:&lMh!dJ(I(SNi4X#WSb#dgE4
%2GgpqP(mX,.id1S8EiSQYmF.hc#>2c:7QX7-+0SuC_:>cdE$4c23S5%@$4o'$\Mo5T&d#(A!iF5qBLsJe#Ec,UHq8+NVT8<(*'q(
%BVCk^Di8Uqb$c87*L2iBcK6U*1E[$Wi@RE(?+j>CU+R@\"!1Y-<1H8%gcS_&PRV=eWn=!U/Xl0AFA7D)JEX'mD8qSd^%?D*?Y\(p
%:X<M&+nb7c!-90JPi.!k9%?QZ-^*H:1"82)Jbj1Rh4qth3.o_T8h7qtQLnlN"0&S"5Fgc@f_!'i=tH\f*n1d.9D.I1.9/fPR$;Qr
%XTX8.1s),`>oE!j=,Nt0Te4.Q`)B*M;L"g//<62G:G&,`Ca_pli>R@q6ujWYggdO0oB'm/++OV-Cbp(Te[W)"3;T2?O/3S<ob/W.
%Nir4H^p*uZ&qP$]i%JAi7ds@qB+E]%!6U;/="]\.`_'lP0`Zf3_&^ft$mUhQCC]WS_0a]'l.&L_p/rUPdh8OY-0DcU(k=toc!)W$
%2ei?>a=JKHi!%8)O,njH(S-r)Zs^bH'624H]?8\PVAX>`)GGPE.p)<bEcpSQf(\=#2,TM1NC#si!36<]7H6/.eMP$>hQs:%fn,(p
%=[W%[(uqnBb;I0EZmD#IX+.q_(K/o-.EEcj5F"1sLI1eW=_9KFMYsf>Qn9JY?mmjCdR>Ds]N:`PTrI\s>k,^&lRcrhRMi9H[,4MA
%MN)C1Go,BV6+F996g63&p:CX!ARk$Q=SN,S7)2aNI&WNii1SiOZ#T0nC,a24#-&:GH]9'#em?)ao$H,:9b4Sf.:EU\C$cTEAf-PO
%Euc4ODR%Ft((abP39]Eb2Q`Ou_7LQ#IF&EN(>@WgD7+7.3o;g6fWfG`<nc:4:=1/3(Cj--ekSTujI>c<Z$5;iNGH#n?tIBj!NMs#
%FVB<%5pHh6Y_uXO/G;/:9JNtcQ8e_<QruBtCRXJoIfR;&mu$MNjORHm=pP_hF6m04`7RgYE5`?Um\#O7Y\9-s:'DaTgVsV'rnn[`
%8*:-cm5X<_6]Tp'O:*rlC]snnMRq%RFQ/bConm+uRV9Zr$5nXT33j8&(I]6H2ZZS+$9EXOkPE93"orRV(Ib"?[_cN)TN"/,#r%b#
%rhWj1R!m-I5(KKZ[P,,5+,ZLV<OUfR2I\=[",krPJ$.VMZ+#]PiS9`aEW:<>@l;2ZUMn$cjp"Pjh1+-.24_OF[t0FCFm[dW!&LD*
%\N''hCgHr"##iIVrNTi:&&tKS;o8T/&'?GBmeGN:N4EAJ$j]n&6LpkJY/=SUR(7ceIT!Y<^#1esZkq'U8aH%pHPb.cVk_$5d`f/-
%=1^)4=.tEKO^:/XG$jg,%7[:D*64hf87eW7mIf#d=bALig5fmtY$(!:DkfK$q#4qsS6K^gYAA--.>#X,*p\W'/+!fP;eK'u3Wa%C
%NqL78/aWn0Fp7*7TNQQ#p;;0BFpI(d)bbi(<4?<K-4[ZHI[>3]9"P-bgXRIVHIraY;VDj6\P?'pY4@*u]`9J"mQfgLC0p-V(FD@0
%qFF3p=.3q'H?F)hgl\<NbhU2'RUk5<13&Anm-Sj.B=iZM,=Qs-akn^H]-,u1T;VYfk@ssG4\r[$b7DnIhB1=f!tB?,cX=\iW2L)P
%#@ec3RR\SI&PURq,m;[UGk5Q;N'AKq&p[.RUcZh#Op;G1bg_i;I%$_N@S686TMbg%6jmL[L-98;4,kKWJlZ[??jTmOc]f<P))\?(
%_0N9b1P:8-q"UXg*)11@1$6^R*],,8gg^(eE#CN?&juXT_cWXkX0OYfC3A[,\&>#0,WdL18S`V]IQrVgT&q3\2/h]T7ZoK[.&(>4
%p]4<Hg&8.A9L(RV?HC-K"q0IA:PejX@pA^bQP$*[Ms=7rBP,.sIP.W+V$XmdC+X?<e=e^b%.qRN9QjsDKYZSFMqRZDgCj2qL*8Cs
%2e*%0Kq\;[,""^tgPT5i]fO*[IGD].jr1$%%lmfEUS_u!hJuG'p"tNVVJ$=pR_bn'V%O4!d.9N7mF9l7dX%*7"XjggWb8_n3=R,*
%?K]#W0&cf`S\qCS%+eQj-t6qW2%aCM7e8`R`h-;=r6r_k2(@B"<3G\8^e>8dZVh595bW$aR21^,Mj/3ZZA@:'aF75^43hZHlrTTE
%pJF/&'Bq(d.QjJ^\)EA.WY\1>3-ZC.U`)riKDH"L8-`"qWRiq)Xt/d(U/"8PrEs'tIEQ.6[0TRn@dmIK%0F,N_Go..WaWuMWYYn0
%L6%d;ZA^XC(fZkc5Js;:O;?'7521l\8F"cFOSY'Amtj%ZGX!%&fe_+ob$#2K"dGe'b_i18od1'-+#G-DL)0kTD\9"o./01d%&*L,
%=icTb8jaW?g'*,9F)"<fC/(R"MMZMOk4jOdVY9SH3"g\ZIaBLB?oHG1c$sDi)#4a/pGM@XR=!l(Z#dCe.a+NjXi2GfR!GCM"usq5
%5jG:f?qc.PRq6Eu2k^&`(rA[.:hDI#V$oVP8DG4BGq>QLIDI*@"*eGO:J@]rLT`-YRJ"@0giY>Q#@qZO#3[pC$BW,q7,uo/`u.tt
%Ib<YJ5)BT8$_]SM=#NB#H;.P/keGd%loR`aO*L1co8)"rV7.9uJIoPE!)GF4IRPJOC0d]DR(%R2]V]m)>RP-*hsOdF*gW^<Mr<k5
%mZ0KYTu@gnYq2Ul+^o>C$l1qtb-A&5oWP-A_+Cp\B4YIanR?5>-*F"'<VDAB5meks)Wf=&l7<!tGkD*sPmYNj"T=Df9_Af\o?B3)
%4tU)8Yh1r3H.iLB7a3IDkt:1W=HmPKE6tBb[+f8_48T!fM_GA;hN5@54I>.r$3W_7q,fM.BrHbV-C9@[3*]3d]!jec;):@D<leYK
%(f-%^1:\J!dKN\Q<!:2nC@lZj/EN\Z>R+TM@0.gFRb.]I'/_HGfg9(f.Gb+H%AUdt=d\t.7nYMPbUqLE2ls<N\VYhD(N^M:RF+iJ
%*Ehu*,&S9bR+^tW96,ulNX-I_+sH<hdd"XbT<8a#qOG>6D@S5%V#YE97D]+dV^54Y1i-lq'H0^VY$O(7!.^=JZ*U^G*ViPW.KMc<
%<dX\LV0\^en%cXHCG?7t5$8FMSb9dOB2p9)`%Dn^h]IUpjp(m67;l;8BOY3n>>c:9lH]n=J=sH-Qo[Iol4M![Gds;VrFcM0QE66H
%Hq@Hi9tl2?#:;\'kuf]AkNbC9/^e4]&VG.@\DP[sS2NC;e651r8>@r8Zt!`?!9Y9J%c77'_\(:6+4$$Od+Eb%M:J&q,H@UU%s2Cb
%3E=Nf/C66)A''FCSsrMkU8:&AbE55o_L,#F%S]3)4K@@Wk'C'@)C@GEWEp.D"qoG?2]-iME3Wc#\s?NY]di[TV@:)Fi7"DB,1,BX
%l<fY^ejj;@K=T]2_dAsg>A)L]JKZpN_c3RjOWojYI$LoYVUa0&K=W)P$.&9MKq;QU$s=5J?"sr`/YJnYMk]7FD.g.F6oa-[ojXmQ
%[3-CGnMHpT(^s&pY,SgZn4%Pr[S4pS+8#9gQ_6)5/i=F]raU!76l.0,DqPk;?LWV!]WVM,pN2`1r-V!X<;R@Z<+C%]n3fG_=J/!B
%<%^%;L&sY9k-sU/=nru83,3+hG2#46PaO6;m?<"$6eU:o3<ul;gVe9tXarWOUL>OAX4`XQ@lT?=_:%L#O9f)!&9Hjo>KfSeGNQrd
%#Xs'C']M<fXOIcD"N>d_R&0e\Y&F<<.!hUV9sJ"F!LR=^:WkP,E+q$kbcU$k:n[fB/b:o,gUnk&@MiVDX7mPRRd#R_PBUMoF`RRo
%52no_!Mr+*DlkI1i+-+MW6/>mA`ag9>s5b(+Pd,9)5Q.=QLMc#I$s&io!ifB*LIp:?1,/[Ws0YfU'$J)X#h6q&um#rZh%sQbro:%
%aKdik1.KZA_Ps0*Ks0X)ft&NBL[-&[j)C=OF!+;`J0#,p(?Q,>b`)TqCP?ejhh"=@bs6e`a5!pg<?:-7NSFX]2d+NH^XP$-G,!SZ
%"g=W>r7Zj9]gT,,_upoTTJUl)aP.Am6@]TnL_[":e8u^kfK_[^1Y3afHE7OTG&Sd&bgh1lcj`qf8(U0m!$i'7W1f_84]#O8'#\4=
%l<^70%9Ng6n>gW!h8OY,J"u/D-(YLgLMJMUoIF!Z7IT`=\e]bY-FX7)L1K#iOU,k@^f.ef$?$?>p+9j?1'%qkR"r'F:Bq9qkioa`
%d@$@J1[Su).</2!c&,nH2XpIM&'&L_'9Yh"HX(-Ik`f&MM?O,Zd1a+&Oh6B7-VE3$Ou"GedI/7jA9u^CBab*72SfDK7AdWdKru^j
%pA-M4fGd>_fmj@)aYKGfhPRJ`[C\)&*9OBt'iu)BSHGnH$=:V_l"9-9<Zs.'>csg1B.3T:;^/b,DfkRBH6KdZ5I:UCajWG1!lug#
%F_YOHOf;qlhG[j<JE4s64#&#eS["/j\B5B5n3.Pd*\8bl#[(+k0f7Ik'2Y8;2%GS./,`!R:%t*S.Pdo;:k?Tk;$BZ478Kq^3C=4L
%K<[]2T1i"$%E@25UFLHa,O"H%Oda'4b#nhKBGq<kZc^GB!)7i)b`\5;U+"O18YftR\nrn2AAoHG3DN1prUH4C:tA$N+S7]?4JOb]
%0([OZ@G>RB0Kk^2f"AT0_[h`S6>E2-`:Lc6UZ$R/'ed59>#bOn^pN*eT0?tZERDQe-.GE!4cbj/Q;LRfqta6$^@Sek27Nl[.X`Fl
%0R@[\InEhlmn'@O8S;G_W*m\[4&%h&c$X3RB=oOjMWomc=+u)K"2s"G@-JiDiMgLce@^N'bhE1e`EF6i4OL?8%K$\an'M,*7)fn>
%cql:\+bg-7+-P>+&:[h$hp39n;83MHd=>stds*2;)@V#k)'I^ML9nG1o;gCaYR(sGehEYf1584$KLsUYdC9s&hl.b9`f6&(%6%'U
%^F\`7fL&$8=Y0Dt)+MumTdH^2;/I>1+*Z1PG$8,kQeu"B6t_r!1[Hqd@W>DE75>(b/NtZ\nYTbAeSM9:ISr4Y^Z2a^NeY;qas3U7
%Uc<\C6XBr=ALOifdsV+7VX[DCptHGXK?=;ETuO.m@;ku$HOCn>c$u@X91XrT0pkTk>3HIoI1QY`YaA*2Qt!E>Ch]=@`_nsEdi*g4
%+OMBki)8SRN(K"fKV7bfo"m(>:et@EU]rqsb*YK0_o;'o:poF)%g:V'S1'\ubY80&/Bl(9(*b/mhL8?/?cLMF7_fhRIFh%LdS+"r
%N<r%1Y(ZYba`Jet\0oJ#3e*&`i+ICUcn<n"nA'QR918"'%M]I#!^t;,`:+klEJ,N]),J^!F%TH08ss'VR.Rrj<FV_aI\8)_52#he
%M_UZZJ^K&E[(Ke!^7K^-[5YhFn:Tbqpc6a'+5-o*9);T4'paUd)^D7p4%<e0;J96IE^(J"9#B#3MW,Lpc23hYY%=]7J+Q:WbR420
%:'RhfKs2`7Z=TY\AcbZ\cQ4k5-I'R,V2cJe4T7auZ`dflFlC*VeN@#3=k]aOi%6WP_s%u"B[\Q_HU<mMXpuuRL3#gaT^\.BUIHlj
%B<6@sftt6;e'bo&EL"eQqN)PtT5Zj+_[5=@jE06[:GMb(J[[WZi-]TrMp4PQ-Cm7=Fh>of.uVZ3D<n7G:A=D2rOd9IcT&QsrIG>\
%iL?;-iPb,LM/$]m/b-X2H/J"tYKjA`Wc6b\()'AY/*&`p-[p>&d(48Y>luuID>dCWSS/+nSU3?DmWubU.^SR+%BI)XeHB_=N<a^G
%g?V(T05oL:SJkc7diG$Wn8lgkNdn&i*qHE(;4mdhs3r]:^]^(/iV8-Io/,9miB9=uD',>:a)HfhlCOn&r'&0+q6ato[\*6iCiKWX
%:@UR)TCQU!\Xq(G-mQorO1u/XjnE[Hc55e:+8l1'jm5dPX3KWnIU=_=0qZ-^ce^8Cm=<:hY@]_OZe*BcTK'&:J#.:GjmqF-k2JiG
%G<UBFB!Je"r-gQ==O1n=?S<4F5.b.&2fDd,2m]RVZg[%_p$1i/c0`K5@kSY%2eUIN"Nf6";'Fu)]Y8X^G10d>VY(Jul.)ocDU)cC
%AiFYS(70Db/sb[YZd!f>^:9]8s!WNUm(H@[Y81d6X3G[)F)q@Fp=\o\0,A>+nP+4N,C9X(_$D.(p#9`c*Z5R8?EI:Y>[4t2XdQ0R
%XL:?GA"Sak5(C8U]XX+l!@r?%>eR\8c^%Y5c.UkGf5DI,B5=1E2mTg0q:XkGNbPV@3+pjdgDfC&HZQXkEHQ=QRs)&?T5EGf(Q8"=
%Cjs!!S6au<Q$10YF1@NV[/&]dkgN3p>$YulaFl0Y2tPcMB/C%lnP?X#[IccTm;2T%hdMd/Y_el5-5aOt<o<[sEgi&3Iil/M5K3cM
%*e/J/\P;&L96NPsP+CR@3pHWTlh@fqqH@7roq]jaXj*3%[qEJ;$Y>]<g>SHCGW+gU9]u&Lot.kBDD&)Yn'@T]/--F!WsecpG5g<n
%oC#kdhs6=VhQGE2/W9:u5jYQ5c.Pct4KIe99mY.Xe[%0TN8$'kSB^AC/@>:@7pg'ob>=,Jmm:5aBWI'5.kY"pKl"ep^2Tpn=*79=
%8V`QgC&Q=1hHcd@2rdrNhWgSJGNNu$qRkFP2r'Ad[JJ9@0>8\Y8a2jS^::_e>^Y-$<WL7G$f/->0)M_s8Or)b??GlTUiTT&cK]>j
%U:g9YO",Tn\F@K6G4C1@X:KYdp$COX$*UP@MHqV!qbBIbpek_n>g@W4X8CXer\j%[O4Tli2X^gO!9IRiI_=ZIh.Md4qW*Db(9_?P
%R=G"=4/4%ss,o:t?!L\h(TgQl4i;dAIuaR+IYO;0CULJj^OM32p=FZhp!6P4GH(JEMqp>J%t>-;oTB%uI6!BcN3h\'R<SB9O$;jS
%A3),Xm]toqbdg]PRP+6nA@_rjB7bC0H$K/V=8S3YjG.Z1kgjc=<`cS7r:KqpYR,Y@4;Z<>q311rgV=?Sm\_i&c5%M)9:PkWdZ2%Z
%Gkl`4.mO$nH?FT5p!rAn]Smojh/a/@\gL,o68tN[<i:Fjg-obK?G*>(VmD<I:OcutcY#RIjd'5f]pO">f!dSV],.NuZ42<Ep\(UK
%qVLDCZ4\;]=3n$k8VccB#5bTg%G!`;GtDe!lilt?0,e*J$dA+md(;NMi=C9OhfBU()!HCQ'"f[SpP[]oDWo+ocY<XO1&_m_:LJRY
%I]jJH5q"_i=rMc4K60G!?`dr+o5;8Tk">&sORZ+t'CO9?NKEM-q_io2]NnXojIqsOZ`TkDiFeWTkO>g;-Za6N[^-0edQeA_Q*=c@
%KY:MqS9Hn.J#OY!2uc9@9NtiLK]eJ)L%Z1h=;upUT7+>==fZ2E)[+3/3s-.>nJAY#^0TNqQFE&QaI+aHoZ]^1j(Gqs-iMR.5]m8$
%nLqAXji-A1pN5qCZ*^D.J?e:SROugm@L#kc2QSgK^[J8qC=THC/_8O(amS.\G4+pIF`XfjCe$],@"RM7TG@UHGDj`5ob7KlS\9f3
%i/@Y9`"&9C+)%aKUJ]o3'u^+Y>BfMamcbH&,<'cfoXA\_<)nOH839Ya:Ua8M#r3]8m8&ca5hLHEm0>ZQVpbc%_b5G)nham+7`$XI
%mT#Qm*)O2prFfd0rq=aS4h>r]#9e7G6RO\V:IQ&s&Ls;h*pnoLTto<Q)(T:^miMGNUTs^We*d*_q^">^?'a*Co1jX.X*hK[ahlN?
%mRJdCpCH-^N8e7hfUj$3J&NFaj(WL[45DBYmT&P_mW:Wj<P/6^e]T?CI!G?t`QDP-og:_3rVeG$b,9TO1%$.V?'Vhp0A$:C-,B)Y
%5;Q@>H92Z@Uj.`omqJ%_G:KH4mS]*HD7b8ll7pEe?2FQ%=SXJM54thfm'"-(52E85IWqd3X(p6nY^.05N;KZZQ+u>D"e83=?[]'3
%=oGRKap3E748jbRb:#a2?[&XMp!t,eCdZp':TJlS=.+ESjZD:Z<n?[\^&o2u%L;T_^F%6a!_<R+[8lXr4ur#9Zd@`tg[;gaoeOZ2
%2e#e%ip);D)T2R-f?1"<Q$MS;0DM*'[JMUZ]o8-F*\YqkJ%Zjn!`0-3[8fEHW>nZ=hHT=eQ.t^K^&o3UZ`<Fe5q1%:l;d@!"+e(M
%&RbPsmI@:gj;SB"49kb"qKS*>8>dp;W)L)5Fh49?S0A3ri.^*'c;Obp_QVcuh:%q+E110QIlch?UoO*8ogm`6e&_H_[A!GhSS#*m
%e)%2^Aq0+(61gDmI-lBiEn^KB,G-=5^,YfN/X'8@o''IlH[e(3lJ\+X'po19%UlrK&;6A;o[XpS4i?^g27;Jlb2)`D;GJ8#WCt+&
%Ngc.iN']is8m:?*C$#!KXo$Mg8bZ;IU7@a+=>F.mnCGFSXYRmEjHBIGmpgLPCPm.S4[c@8MisUC:ODDGPu0HE3'I)grFk<\X&9R2
%M`GIKYEG)n@BXOK$osn?Vh`^3+0F=H<H^l=Q,A_c[7VMFTs[WaeCsk7jmK2Gdg2:73J:`47^ctqU8Wr7&0s"/0+\;)mu[6\TT_h;
%H1(sEauJGdS?;\9b.SbXp(7JG\;n5%<Q9#@9r!a&\f\'0HW<*".OgEersIB#3'%Z;D:I!?Fej'H*eo)Z_=1K6l.d?([`Y!!G,6c'
%0YDS)Eq`QVL5kgCd0h(h0Iq&pAj72IeB4]<b$j(#8GaIZ9KH3X7mciEi4>+?ma)rK2F(3?3sbq7%Q>E27CJ-e+5?(YPNn_+*=i_J
%reT@K4,E7,['k`e=Q%B0McR1*)>tV@[E@"B`<][QRuZ"biAnB.VYP@G.1^dpeLKV?pfmKfQ$]\aqhY*3+i[#Y<@d)P.*X3sCu(.Q
%m\/-LjAf@N=560A=quf<baW%dcsCdhEZ^iaA0A^^'.OXC.*)L!.Qr$p@IHL@$ApP(i>sA2ojGsHjUUj_h2bV)TfIV`<B_CJ<NFn@
%T!eICb.UjcqfnPi*m3HM[E?u,_AnQ5Wni_:mU=VTO/Mfe7c>3D?JAKuKrM.u\og5@\]8Xp+updjO@KgPF/o`&M'/`)B\e_Mm_(+=
%j".i8+J@olBrA/7Prj3%G!B0@G7jd;%_6*cRa\P!RoZSKC!4<#mRJf%?8W^LeTgF\[;tGVfBu-Zp[3Faa!A1d_K(oMD[0J-c4uBL
%k8^JVI2-9PQ/<'?b:::JC@Wgj3S>d5ekafm5LVBJ.W+U\XHbk!+ZYrGCYQ-q:0UInl\G?1SX'pHoV$/KVr^<PH`4iQ[[a?U&+uJT
%/LP;K6f$ZqbDG6F:n'@[\Q(?Nl^W-%2+>a'DJ#fs6t()6`L+(r!Z+eOrp[F@bW^Ad=PK-OOKmP@BESms[&$di[.Eg\?*2gp(](3\
%5Ads5gheRj0DmHcZu)l!BcDJ$S&r&)[W8jZ/3nlDh:ZZrGM4BH6lc'1drns+dl-qjg28EbgU<lF[QT(GIJ71SSlRj;@6(;IFjB<(
%aj8RH"CJfgo[/T[/?O,$H5aOX4&BiYqY4VlX6THZo&uk2,pd&n,.BW5HNKUEaPDd+*;TjWe9a7P^A&)+fjARF=KHZ?p\et#SbgCg
%qs1`Kh7gJRI+E/XE2DhZg10coe=Q6Wht+V_aoieaq<H?th`oLgn9ppIhp&q9%189d`BVq-^:7SNR52ljrYN-^Dcuh48,RJfM`9A`
%`=a/9?[A.?S.0ppo[,$6^AmuWm_tf0DP-j![?SCldYhc5'Q)mnNug_HKC/3(puK@VCg>RRKo$!R`s46PI-BsFi&X&Ii;=&1GR%g,
%Sb(2#20HMpH/O#&H_M+.48.p4gL#^fAhUi-f^N=e"t-2Ode"Qt`Xa%IRW\(Z@FGGk4.+^fNa_O7%3(j8^cR9&+#n'n;pQK%%Nd[s
%5RMkYT]<oo*=BeYc3tA1$n@(s6)-c;a17M7m)nj<GMP`4&TWOS_%S!(H8VB=jOJX`\=10d$i58uKaF<KPDu#AKGje=U,)<"+nGXu
%]dNAS,cMsPr9EOQkMLFJ"`jI2b7"@KVd@(*B:<BbLk#?dRO:OT`!e!+<BcsQ,-^J!V!%a7dn[(g@S+BAM2?3n17,,L9C728En^JH
%g9t:%S4bUTcu7HO=ZWMjkdMInD.W?>kIp82XNo^sEr5NG5KC0L\I>LgUs:].E,-4$M/m1.I(E6ZRWa,-rFk<$q_?(Eo]B_I!;4#&
%W;QYt3N)bC$%FC"(&qM0<3],".YN>rej#.Pr\T3'h@=f9meb,JD_FK7$JAW+5?9f/rjPfaDa>'O1oN9N$fSL6#OHk'R=4IOZuXUn
%ra66hYCF'tn@&Jro\USROl:HbpTN2,5M[:DrTI6C3edE2\HDN-DoTREJ01h^G2IlI%o>68(uRbUgEX8Q'_#>g%cI(<EJ@a95?9f3
%IW*$rA,7X7qnF-?_gcI;7l%FXi6Q:"WuF$hhh1eg/NmO)O-ABa?#li6,Q^n__Dd0tP#'[-(7H;u'72nM:P1f3#rX()Kcd+.]-9#4
%=2+L2YJ34]k;uqlAX5[jj"U!TJ+D[jI"$G<m:nG:">CAX#;&(LVl:fH6na7=-fFErh7';b>t'Fg)S_h[(8%e5hCT:\q=h0u+69#o
%67\Xni9iYj:L;8rD\efq(7W9joCk$9+=@kbH-lpoR9b=*jM1QRgY)DAlL/?AE4%*^*rn:f4[3Y#FP\e=44q%BS68qS*IEPJnlr1>
%RLXO:n3e+h4!a;WApD0gl,`o'B5DC;@gOoC?t6OX)]gVtEX,srY)^]irrjMW#O!(g(=`e*4PZo1qq'AGFoM,f5#Q?t!?&IWqsrFt
%3U^U4p24IJHi:REH`eun:'C8MVRot%q[p@FUAs5llLEbBO\[>Z[#DG&Yi<^LB5\P=f!C8\!kR7D+M5PXl3]m1Y2q#6n_J"^lU?$h
%G4d(pd&D.IqTYf'9^^*c`K^idq#ZX9]m2\,e?h%OI]D)aM"^`B;I1_&o1udL]Y@c-Re?X*]m>\Rr)A:p6Lap/_gMCPQd<Blo[3[BHDZ%g~>
%AI9_PrivateDataEnd
