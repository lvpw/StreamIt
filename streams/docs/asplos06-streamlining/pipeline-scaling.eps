%!PS-Adobe-3.0 EPSF-3.0
%%Title: (pipeline-scaling.xls)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 15:07:55 08/03/06
%%For: (Saman Amarasinghe)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 87 65 733 508
%%HiResBoundingBox: 87.12 65.0 733.12 507.8
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource ArialMT
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N17 (ArialMT) -1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3688 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2006-08-03T15:07:55-04:00</xap:CreateDate>
         <xap:ModifyDate>2006-08-03T15:07:55-04:00</xap:ModifyDate>
         <xap:MetadataDate>2006-08-03T15:07:55-04:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:F04AF5D56D22DB11A02292B213D53008</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:F04AF5D56D22DB11A02292B213D53008</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:1f725137-ffbb-4acc-b44e-88d04ac054be</stRef:instanceID>
            <stRef:documentID>uuid:79cf8066-0423-4861-ba7b-8c387eab8892</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Saman Amarasinghe</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">pipeline-scaling.xls</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
87.12 65.0 646.0 442.8 rectclip
[ 0 -1 1 0 22.12001 594.92 ] concat
/N10 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

q
87.12 65.0 m
529.92 65.0 l
529.92 711.0 l
87.12 711.0 l
h
W
n
q
n
432.72 109.2 0.119995 537.0 re
W
n
1 J
1 j
0.12 w
[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ] 0.0 d
n
432.72 109.2 m
432.72 646.2 l
[/DeviceGray] cs 1.0 sc
S
n
432.72 109.2 m
432.72 646.2 l
0.59 sc
S
Q
q
n
384.36 109.2 0.119995 537.0 re
W
n
1 J
1 j
0.12 w
[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ] 0.0 d
n
384.36 109.2 m
384.36 646.2 l
[/DeviceGray] cs 1.0 sc
S
n
384.36 109.2 m
384.36 646.2 l
0.59 sc
S
Q
q
n
335.88 109.2 0.119995 537.0 re
W
n
1 J
1 j
0.12 w
[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ] 0.0 d
n
335.88 109.2 m
335.88 646.2 l
[/DeviceGray] cs 1.0 sc
S
n
335.88 109.2 m
335.88 646.2 l
0.59 sc
S
Q
q
n
287.4 109.2 0.119995 537.0 re
W
n
1 J
1 j
0.12 w
[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ] 0.0 d
n
287.4 109.2 m
287.4 646.2 l
[/DeviceGray] cs 1.0 sc
S
n
287.4 109.2 m
287.4 646.2 l
0.59 sc
S
Q
q
n
238.92 109.2 0.119995 537.0 re
W
n
1 J
1 j
0.12 w
[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ] 0.0 d
n
238.92 109.2 m
238.92 646.2 l
[/DeviceGray] cs 1.0 sc
S
n
238.92 109.2 m
238.92 646.2 l
0.59 sc
S
Q
q
n
190.56 109.2 0.119995 537.0 re
W
n
1 J
1 j
0.12 w
[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ] 0.0 d
n
190.56 109.2 m
190.56 646.2 l
[/DeviceGray] cs 1.0 sc
S
n
190.56 109.2 m
190.56 646.2 l
0.59 sc
S
Q
q
n
142.08 109.2 0.12001 537.0 re
W
n
1 J
1 j
0.12 w
[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ] 0.0 d
n
142.08 109.2 m
142.08 646.2 l
[/DeviceGray] cs 1.0 sc
S
n
142.08 109.2 m
142.08 646.2 l
0.59 sc
S
Q
q
n
93.6 109.2 0.120003 537.0 re
W
n
1 J
1 j
0.12 w
[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ] 0.0 d
n
93.6 109.2 m
93.6 646.2 l
[/DeviceGray] cs 1.0 sc
S
n
93.6 109.2 m
93.6 646.2 l
0.59 sc
S
Q
1 J
1 j
0.12 w
n
481.2 646.2 -387.6 -537.0 re
93.6 646.2 m
h
93.6 109.2 m
481.2 109.2 l
481.2 105.48 m
481.2 109.2 l
432.72 105.48 m
432.72 109.2 l
384.36 105.48 m
384.36 109.2 l
335.88 105.48 m
335.88 109.2 l
287.4 105.48 m
287.4 109.2 l
238.92 105.48 m
238.92 109.2 l
190.56 105.48 m
190.56 109.2 l
142.08 105.48 m
142.08 109.2 l
93.6 105.48 m
93.6 109.2 l
481.2 109.2 m
481.2 646.2 l
484.92 109.2 m
481.2 109.2 l
484.92 135.84 m
481.2 135.84 l
484.92 162.36 m
481.2 162.36 l
484.92 189.0 m
481.2 189.0 l
484.92 215.52 m
481.2 215.52 l
484.92 242.16 m
481.2 242.16 l
484.92 268.68 m
481.2 268.68 l
484.92 295.32 m
481.2 295.32 l
484.92 321.84 m
481.2 321.84 l
484.92 348.48 m
481.2 348.48 l
484.92 375.0 m
481.2 375.0 l
484.92 401.64 m
481.2 401.64 l
484.92 428.16 m
481.2 428.16 l
484.92 454.8 m
481.2 454.8 l
484.92 481.32 m
481.2 481.32 l
484.92 507.96 m
481.2 507.96 l
484.92 534.6 m
481.2 534.6 l
484.92 561.12 m
481.2 561.12 l
484.92 587.76 m
481.2 587.76 l
484.92 614.28 m
481.2 614.28 l
484.92 640.92 m
481.2 640.92 l
[/DeviceGray] cs 0.0 sc
S
0.96 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
337.08 287.28 l
335.28 289.92 l
333.48 292.68 l
333.48 292.68 m
331.56 295.32 l
329.76 297.96 l
326.16 303.24 l
324.36 305.88 l
322.56 308.64 l
322.56 308.64 m
320.64 311.28 l
318.84 313.92 l
315.24 319.2 l
311.64 324.48 l
309.84 327.12 l
308.04 329.88 l
308.04 329.88 m
306.12 332.52 l
304.32 335.16 l
300.72 340.44 l
298.92 343.08 l
297.12 345.84 l
297.12 345.84 m
295.2 348.48 l
293.4 351.12 l
289.8 356.4 l
288.0 359.04 l
286.2 361.8 l
286.2 361.8 m
282.6 367.08 l
282.6 367.08 m
280.68 369.72 l
278.88 372.36 l
277.08 375.0 l
275.28 377.76 l
275.28 377.76 m
271.68 383.04 l
271.68 383.04 m
269.76 385.68 l
267.96 388.32 l
264.36 393.6 l
262.56 396.24 l
260.76 399.0 l
260.76 399.0 m
257.16 404.28 l
257.16 404.28 m
255.24 406.92 l
253.44 409.56 l
251.64 412.2 l
249.84 414.96 l
249.84 414.96 m
246.24 420.24 l
242.64 425.52 l
242.64 425.52 m
240.72 428.16 l
238.92 430.92 l
238.92 430.92 m
235.32 436.2 l
231.72 441.48 l
231.72 441.48 m
229.8 444.12 l
228.0 446.76 l
226.2 449.4 l
224.4 452.16 l
224.4 452.16 m
220.8 457.44 l
217.2 462.72 l
217.2 462.72 m
215.28 465.36 l
213.48 468.12 l
213.48 468.12 m
209.88 473.4 l
206.28 478.68 l
206.28 478.68 m
204.36 481.32 l
202.56 484.08 l
202.56 484.08 m
198.96 489.36 l
195.36 494.64 l
193.56 497.28 l
191.76 500.04 l
191.76 500.04 m
189.84 502.68 l
188.04 505.32 l
184.44 510.6 l
180.84 515.88 l
180.84 515.88 m
178.92 518.52 l
177.12 521.28 l
177.12 521.28 m
173.52 526.56 l
169.92 531.84 l
168.12 534.48 l
166.32 537.24 l
166.32 537.24 m
164.4 539.88 l
162.6 542.52 l
159.0 547.8 l
157.2 550.44 l
155.4 553.2 l
155.4 553.2 m
153.48 555.84 l
151.68 558.48 l
148.08 563.76 l
146.28 566.4 l
144.48 569.16 l
144.48 569.16 m
140.88 574.44 l
140.88 574.44 m
138.96 577.08 l
137.16 579.72 l
133.56 585.0 l
131.76 587.64 l
129.96 590.4 l
129.96 590.4 m
126.36 595.68 l
126.36 595.68 m
124.44 598.32 l
122.64 600.96 l
120.84 603.6 l
119.04 606.36 l
119.04 606.36 m
115.44 611.64 l
115.44 611.64 m
113.52 614.28 l
111.72 616.92 l
109.92 619.56 l
108.12 622.32 l
108.12 622.32 m
104.52 627.6 l
100.92 632.88 l
100.92 632.88 m
99.0 635.52 l
97.2 638.28 l
S
q
n
93.6 637.68 4.32 6.59998 re
W
n
n
97.2 638.28 m
93.6 643.56 l
S
Q
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
337.08 287.28 l
335.28 289.92 l
333.48 292.68 l
333.48 292.68 m
331.56 295.32 l
329.76 297.96 l
326.16 303.24 l
324.36 305.88 l
322.56 308.64 l
322.56 308.64 m
320.64 311.28 l
318.84 313.92 l
315.24 319.2 l
311.64 324.48 l
309.84 327.12 l
308.04 329.88 l
308.04 329.88 m
306.12 332.52 l
304.32 335.16 l
300.72 340.44 l
298.92 343.08 l
297.12 345.84 l
297.12 345.84 m
295.2 348.48 l
293.4 351.12 l
289.8 356.4 l
288.0 359.04 l
286.2 361.8 l
286.2 361.8 m
282.6 367.08 l
282.6 367.08 m
280.68 369.72 l
278.88 372.36 l
277.08 375.0 l
275.28 377.76 l
275.28 377.76 m
271.68 383.04 l
271.68 383.04 m
269.76 385.68 l
267.96 388.32 l
264.36 393.6 l
262.56 396.24 l
260.76 399.0 l
260.76 399.0 m
257.16 404.28 l
257.16 404.28 m
255.24 406.92 l
253.44 409.56 l
251.64 412.2 l
249.84 414.96 l
249.84 414.96 m
246.24 420.24 l
242.64 425.52 l
242.64 425.52 m
240.72 428.16 l
238.92 430.92 l
238.92 430.92 m
235.32 436.2 l
231.72 441.48 l
231.72 441.48 m
229.8 444.12 l
228.0 446.76 l
226.2 449.4 l
224.4 452.16 l
224.4 452.16 m
220.8 457.44 l
217.2 462.72 l
217.2 462.72 m
215.28 465.36 l
213.48 468.12 l
213.48 468.12 m
209.88 473.4 l
206.28 478.68 l
206.28 478.68 m
204.36 481.32 l
202.56 484.08 l
202.56 484.08 m
198.96 489.36 l
195.36 494.64 l
193.56 497.28 l
191.76 500.04 l
191.76 500.04 m
189.84 502.68 l
188.04 505.32 l
184.44 510.6 l
180.84 515.88 l
180.84 515.88 m
178.92 518.52 l
177.12 521.28 l
177.12 521.28 m
173.52 526.56 l
169.92 531.84 l
168.12 534.48 l
166.32 537.24 l
166.32 537.24 m
164.4 539.88 l
162.6 542.52 l
159.0 547.8 l
157.2 550.44 l
155.4 553.2 l
155.4 553.2 m
153.48 555.84 l
151.68 558.48 l
148.08 563.76 l
146.28 566.4 l
144.48 569.16 l
144.48 569.16 m
140.88 574.44 l
140.88 574.44 m
138.96 577.08 l
137.16 579.72 l
133.56 585.0 l
131.76 587.64 l
129.96 590.4 l
129.96 590.4 m
126.36 595.68 l
126.36 595.68 m
125.164 597.353 123.773 598.983 123.12 600.96 c
123.12 600.96 m
122.532 603.209 123.31 604.114 123.36 606.36 c
123.36 606.36 m
123.6 611.64 l
123.6 611.64 m
123.72 614.28 l
123.96 616.92 l
123.96 616.92 m
124.08 619.56 l
124.2 622.32 l
124.2 622.32 m
124.44 627.6 l
124.44 627.6 m
124.68 632.88 l
124.68 632.88 m
124.68 635.52 l
124.8 638.28 l
124.8 638.28 m
125.04 643.56 l
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/E31 exch /ColorSpace defineRes

cs 0.60392 0.8 1.0 sc
S
1.92 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
337.08 287.28 l
335.28 289.92 l
333.48 292.68 l
333.48 292.68 m
331.56 295.32 l
329.76 297.96 l
326.16 303.24 l
324.36 305.88 l
322.56 308.64 l
322.56 308.64 m
320.64 311.28 l
318.84 313.92 l
315.24 319.2 l
311.64 324.48 l
309.84 327.12 l
308.04 329.88 l
308.04 329.88 m
306.12 332.52 l
304.32 335.16 l
300.72 340.44 l
298.92 343.08 l
297.12 345.84 l
297.12 345.84 m
295.2 348.48 l
293.4 351.12 l
289.8 356.4 l
288.0 359.04 l
286.2 361.8 l
286.2 361.8 m
282.6 367.08 l
282.6 367.08 m
280.68 369.72 l
278.88 372.36 l
277.08 375.0 l
275.28 377.76 l
275.28 377.76 m
271.68 383.04 l
271.68 383.04 m
269.76 385.68 l
267.96 388.32 l
264.36 393.6 l
262.56 396.24 l
260.76 399.0 l
260.76 399.0 m
257.16 404.28 l
257.16 404.28 m
255.24 406.92 l
253.44 409.56 l
251.64 412.2 l
249.84 414.96 l
249.84 414.96 m
246.24 420.24 l
242.64 425.52 l
242.64 425.52 m
240.72 428.16 l
238.92 430.92 l
238.92 430.92 m
235.32 436.2 l
231.72 441.48 l
231.72 441.48 m
229.8 444.12 l
228.0 446.76 l
226.2 449.4 l
224.4 452.16 l
224.4 452.16 m
220.8 457.44 l
217.2 462.72 l
217.2 462.72 m
215.28 465.36 l
213.48 468.12 l
213.48 468.12 m
209.88 473.4 l
206.28 478.68 l
206.28 478.68 m
204.36 481.32 l
202.56 484.08 l
202.56 484.08 m
198.96 489.36 l
195.36 494.64 l
193.56 497.28 l
191.76 500.04 l
191.76 500.04 m
189.84 502.68 l
188.04 505.32 l
184.44 510.6 l
180.84 515.88 l
180.84 515.88 m
178.92 518.52 l
177.12 521.28 l
177.12 521.28 m
173.52 526.56 l
169.92 531.84 l
168.12 534.48 l
166.32 537.24 l
166.32 537.24 m
164.4 539.88 l
162.6 542.52 l
159.0 547.8 l
157.2 550.44 l
155.4 553.2 l
155.4 553.2 m
153.48 555.84 l
151.68 558.48 l
148.08 563.76 l
146.28 566.4 l
144.48 569.16 l
144.48 569.16 m
140.88 574.44 l
140.88 574.44 m
138.96 577.08 l
137.16 579.72 l
137.16 579.72 m
136.226 581.077 134.388 583.406 134.04 585.0 c
134.04 585.0 m
133.629 587.191 134.155 588.342 134.28 590.4 c
134.28 590.4 m
134.52 595.68 l
134.52 595.68 m
134.76 600.96 l
134.76 600.96 m
134.88 603.6 l
135.0 606.36 l
135.0 606.36 m
135.24 611.64 l
135.24 611.64 m
135.48 616.92 l
135.48 616.92 m
135.6 619.56 l
135.72 622.32 l
135.72 622.32 m
135.96 627.6 l
135.96 627.6 m
136.2 632.88 l
136.2 632.88 m
136.32 635.52 l
136.44 638.28 l
136.44 638.28 m
136.68 643.56 l
S
0.96 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
337.08 287.28 l
335.28 289.92 l
333.48 292.68 l
333.48 292.68 m
331.56 295.32 l
329.76 297.96 l
326.16 303.24 l
324.36 305.88 l
322.56 308.64 l
322.56 308.64 m
320.64 311.28 l
318.84 313.92 l
315.24 319.2 l
311.64 324.48 l
309.84 327.12 l
308.04 329.88 l
308.04 329.88 m
306.12 332.52 l
304.32 335.16 l
300.72 340.44 l
298.92 343.08 l
297.12 345.84 l
297.12 345.84 m
295.2 348.48 l
293.4 351.12 l
289.8 356.4 l
288.0 359.04 l
286.2 361.8 l
286.2 361.8 m
282.6 367.08 l
282.6 367.08 m
280.68 369.72 l
278.88 372.36 l
277.08 375.0 l
275.28 377.76 l
275.28 377.76 m
271.68 383.04 l
271.68 383.04 m
269.76 385.68 l
267.96 388.32 l
264.36 393.6 l
262.56 396.24 l
260.76 399.0 l
260.76 399.0 m
257.16 404.28 l
257.16 404.28 m
255.24 406.92 l
253.44 409.56 l
251.64 412.2 l
249.84 414.96 l
249.84 414.96 m
246.24 420.24 l
242.64 425.52 l
242.64 425.52 m
240.72 428.16 l
238.92 430.92 l
238.92 430.92 m
235.32 436.2 l
231.72 441.48 l
231.72 441.48 m
229.8 444.12 l
228.0 446.76 l
226.2 449.4 l
224.4 452.16 l
224.4 452.16 m
220.8 457.44 l
217.2 462.72 l
217.2 462.72 m
215.28 465.36 l
213.48 468.12 l
213.48 468.12 m
209.88 473.4 l
206.28 478.68 l
206.28 478.68 m
204.36 481.32 l
202.56 484.08 l
202.56 484.08 m
198.96 489.36 l
195.36 494.64 l
193.56 497.28 l
191.76 500.04 l
191.76 500.04 m
189.84 502.68 l
188.04 505.32 l
184.44 510.6 l
180.84 515.88 l
180.84 515.88 m
178.92 518.52 l
177.12 521.28 l
177.12 521.28 m
173.52 526.56 l
169.92 531.84 l
168.12 534.48 l
166.32 537.24 l
166.32 537.24 m
164.4 539.88 l
162.6 542.52 l
159.0 547.8 l
157.2 550.44 l
155.4 553.2 l
155.4 553.2 m
153.48 555.84 l
151.68 558.48 l
151.68 558.48 m
150.548 560.245 148.809 561.697 148.2 563.76 c
148.2 563.76 m
147.612 566.009 148.39 566.914 148.44 569.16 c
148.44 569.16 m
148.56 571.8 l
148.8 574.44 l
148.8 574.44 m
149.04 579.72 l
149.28 585.0 l
149.28 585.0 m
149.4 587.64 l
149.52 590.4 l
149.52 590.4 m
149.76 595.68 l
150.0 600.96 l
150.0 600.96 m
150.12 603.6 l
150.24 606.36 l
150.24 606.36 m
150.48 611.64 l
150.72 616.92 l
150.72 616.92 m
150.84 619.56 l
150.96 622.32 l
150.96 622.32 m
151.2 627.6 l
151.2 627.6 m
151.44 632.88 l
151.44 632.88 m
151.44 635.52 l
151.56 638.28 l
151.56 638.28 m
151.8 643.56 l
0.0 1.0 1.0 sc
S
1.92 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
337.08 287.28 l
335.28 289.92 l
333.48 292.68 l
333.48 292.68 m
331.56 295.32 l
329.76 297.96 l
326.16 303.24 l
324.36 305.88 l
322.56 308.64 l
322.56 308.64 m
320.64 311.28 l
318.84 313.92 l
315.24 319.2 l
311.64 324.48 l
309.84 327.12 l
308.04 329.88 l
308.04 329.88 m
306.12 332.52 l
304.32 335.16 l
300.72 340.44 l
298.92 343.08 l
297.12 345.84 l
297.12 345.84 m
295.2 348.48 l
293.4 351.12 l
289.8 356.4 l
288.0 359.04 l
286.2 361.8 l
286.2 361.8 m
282.6 367.08 l
282.6 367.08 m
280.68 369.72 l
278.88 372.36 l
277.08 375.0 l
275.28 377.76 l
275.28 377.76 m
271.68 383.04 l
271.68 383.04 m
269.76 385.68 l
267.96 388.32 l
264.36 393.6 l
262.56 396.24 l
260.76 399.0 l
260.76 399.0 m
257.16 404.28 l
257.16 404.28 m
255.24 406.92 l
253.44 409.56 l
251.64 412.2 l
249.84 414.96 l
249.84 414.96 m
246.24 420.24 l
242.64 425.52 l
242.64 425.52 m
240.72 428.16 l
238.92 430.92 l
238.92 430.92 m
235.32 436.2 l
231.72 441.48 l
231.72 441.48 m
229.8 444.12 l
228.0 446.76 l
226.2 449.4 l
224.4 452.16 l
224.4 452.16 m
220.8 457.44 l
217.2 462.72 l
217.2 462.72 m
215.28 465.36 l
213.48 468.12 l
213.48 468.12 m
209.88 473.4 l
206.28 478.68 l
206.28 478.68 m
204.36 481.32 l
202.56 484.08 l
202.56 484.08 m
198.96 489.36 l
195.36 494.64 l
193.56 497.28 l
191.76 500.04 l
191.76 500.04 m
189.84 502.68 l
188.04 505.32 l
184.44 510.6 l
180.84 515.88 l
180.84 515.88 m
178.92 518.52 l
177.12 521.28 l
177.12 521.28 m
173.52 526.56 l
169.92 531.84 l
169.92 531.84 m
168.886 533.495 166.849 535.294 166.32 537.24 c
166.32 537.24 m
165.722 539.578 166.512 540.236 166.56 542.52 c
166.56 542.52 m
166.68 545.16 l
166.92 547.8 l
166.92 547.8 m
167.04 550.44 l
167.16 553.2 l
167.16 553.2 m
167.4 558.48 l
167.64 563.76 l
167.64 563.76 m
167.76 566.4 l
168.0 569.16 l
168.0 569.16 m
168.24 574.44 l
168.24 574.44 m
168.48 579.72 l
168.72 585.0 l
168.72 585.0 m
168.84 587.64 l
168.96 590.4 l
168.96 590.4 m
169.2 595.68 l
169.44 600.96 l
169.44 600.96 m
169.56 603.6 l
169.68 606.36 l
169.68 606.36 m
169.92 611.64 l
169.92 611.64 m
170.04 616.92 l
170.04 616.92 m
170.16 619.56 l
170.28 622.32 l
170.28 622.32 m
170.52 627.6 l
170.52 627.6 m
170.76 632.88 l
170.76 632.88 m
170.76 635.52 l
170.88 638.28 l
170.88 638.28 m
171.12 643.56 l
0.0 0.8 1.0 sc
S
0.96 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
337.08 287.28 l
335.28 289.92 l
333.48 292.68 l
333.48 292.68 m
331.56 295.32 l
329.76 297.96 l
326.16 303.24 l
324.36 305.88 l
322.56 308.64 l
322.56 308.64 m
320.64 311.28 l
318.84 313.92 l
315.24 319.2 l
311.64 324.48 l
309.84 327.12 l
308.04 329.88 l
308.04 329.88 m
306.12 332.52 l
304.32 335.16 l
300.72 340.44 l
298.92 343.08 l
297.12 345.84 l
297.12 345.84 m
295.2 348.48 l
293.4 351.12 l
289.8 356.4 l
288.0 359.04 l
286.2 361.8 l
286.2 361.8 m
282.6 367.08 l
282.6 367.08 m
280.68 369.72 l
278.88 372.36 l
277.08 375.0 l
275.28 377.76 l
275.28 377.76 m
271.68 383.04 l
271.68 383.04 m
269.76 385.68 l
267.96 388.32 l
264.36 393.6 l
262.56 396.24 l
260.76 399.0 l
260.76 399.0 m
257.16 404.28 l
257.16 404.28 m
255.24 406.92 l
253.44 409.56 l
251.64 412.2 l
249.84 414.96 l
249.84 414.96 m
246.24 420.24 l
242.64 425.52 l
242.64 425.52 m
240.72 428.16 l
238.92 430.92 l
238.92 430.92 m
235.32 436.2 l
231.72 441.48 l
231.72 441.48 m
229.8 444.12 l
228.0 446.76 l
226.2 449.4 l
224.4 452.16 l
224.4 452.16 m
220.8 457.44 l
217.2 462.72 l
217.2 462.72 m
215.28 465.36 l
213.48 468.12 l
213.48 468.12 m
209.88 473.4 l
206.28 478.68 l
206.28 478.68 m
204.36 481.32 l
202.56 484.08 l
202.56 484.08 m
198.96 489.36 l
195.36 494.64 l
193.56 497.28 l
191.76 500.04 l
191.76 500.04 m
190.374 501.948 189.382 503.078 188.52 505.32 c
188.52 505.32 m
188.073 507.077 188.869 508.84 188.88 510.6 c
188.88 510.6 m
189.24 515.88 l
189.24 515.88 m
189.36 518.52 l
189.48 521.28 l
189.48 521.28 m
189.6 523.92 l
189.84 526.56 l
189.84 526.56 m
190.08 531.84 l
190.08 531.84 m
190.2 534.48 l
190.32 537.24 l
190.32 537.24 m
190.44 539.88 l
190.68 542.52 l
190.68 542.52 m
190.92 547.8 l
190.92 547.8 m
191.04 550.44 l
191.16 553.2 l
191.16 553.2 m
191.4 558.48 l
191.64 563.76 l
191.64 563.76 m
191.76 566.4 l
191.88 569.16 l
191.88 569.16 m
192.12 574.44 l
192.36 579.72 l
192.36 579.72 m
192.6 585.0 l
192.72 587.64 l
192.84 590.4 l
192.84 590.4 m
193.08 595.68 l
193.08 595.68 m
193.32 600.96 l
193.32 600.96 m
193.32 603.6 l
193.44 606.36 l
193.44 606.36 m
193.68 611.64 l
193.92 616.92 l
193.92 616.92 m
193.92 619.56 l
194.04 622.32 l
194.04 622.32 m
194.28 627.6 l
194.52 632.88 l
194.52 632.88 m
194.52 635.52 l
194.64 638.28 l
194.64 638.28 m
194.88 643.56 l
0.2 0.8 0.8 sc
S
1.92 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
337.08 287.28 l
335.28 289.92 l
333.48 292.68 l
333.48 292.68 m
331.56 295.32 l
329.76 297.96 l
326.16 303.24 l
324.36 305.88 l
322.56 308.64 l
322.56 308.64 m
320.64 311.28 l
318.84 313.92 l
315.24 319.2 l
311.64 324.48 l
309.84 327.12 l
308.04 329.88 l
308.04 329.88 m
306.12 332.52 l
304.32 335.16 l
300.72 340.44 l
298.92 343.08 l
297.12 345.84 l
297.12 345.84 m
295.2 348.48 l
293.4 351.12 l
289.8 356.4 l
288.0 359.04 l
286.2 361.8 l
286.2 361.8 m
282.6 367.08 l
282.6 367.08 m
280.68 369.72 l
278.88 372.36 l
277.08 375.0 l
275.28 377.76 l
275.28 377.76 m
271.68 383.04 l
271.68 383.04 m
269.76 385.68 l
267.96 388.32 l
264.36 393.6 l
262.56 396.24 l
260.76 399.0 l
260.76 399.0 m
257.16 404.28 l
257.16 404.28 m
255.24 406.92 l
253.44 409.56 l
251.64 412.2 l
249.84 414.96 l
249.84 414.96 m
246.24 420.24 l
242.64 425.52 l
242.64 425.52 m
240.72 428.16 l
238.92 430.92 l
238.92 430.92 m
235.32 436.2 l
231.72 441.48 l
231.72 441.48 m
229.8 444.12 l
228.0 446.76 l
226.2 449.4 l
224.4 452.16 l
224.4 452.16 m
220.8 457.44 l
220.8 457.44 m
218.88 460.08 l
217.2 462.72 l
217.2 462.72 m
215.76 465.36 l
215.16 466.8 l
214.8 468.12 l
214.8 468.12 m
214.68 469.44 l
214.8 470.76 l
215.04 472.08 l
215.16 473.4 l
215.16 473.4 m
215.52 478.68 l
215.52 478.68 m
215.64 481.32 l
215.88 484.08 l
215.88 484.08 m
216.24 489.36 l
216.24 489.36 m
216.48 494.64 l
216.6 497.28 l
216.84 500.04 l
216.84 500.04 m
217.08 505.32 l
217.08 505.32 m
217.2 507.96 l
217.44 510.6 l
217.44 510.6 m
217.68 515.88 l
217.68 515.88 m
217.8 518.52 l
217.92 521.28 l
217.92 521.28 m
218.04 523.92 l
218.28 526.56 l
218.28 526.56 m
218.52 531.84 l
218.52 531.84 m
218.64 534.48 l
218.76 537.24 l
218.76 537.24 m
219.0 542.52 l
219.24 547.8 l
219.24 547.8 m
219.36 550.44 l
219.48 553.2 l
219.48 553.2 m
219.72 558.48 l
219.72 558.48 m
219.96 563.76 l
219.96 563.76 m
220.08 566.4 l
220.2 569.16 l
220.2 569.16 m
220.44 574.44 l
220.44 574.44 m
220.56 579.72 l
220.56 579.72 m
220.8 585.0 l
220.8 585.0 m
220.92 587.64 l
221.04 590.4 l
221.04 590.4 m
221.16 595.68 l
221.16 595.68 m
221.4 600.96 l
221.4 600.96 m
221.52 603.6 l
221.64 606.36 l
221.64 606.36 m
221.76 611.64 l
221.76 611.64 m
222.0 616.92 l
222.0 616.92 m
222.0 619.56 l
222.12 622.32 l
222.12 622.32 m
222.36 627.6 l
222.36 627.6 m
222.48 632.88 l
222.48 632.88 m
222.48 635.52 l
222.6 638.28 l
222.6 638.28 m
222.84 643.56 l
S
0.96 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
337.08 287.28 l
335.28 289.92 l
333.48 292.68 l
333.48 292.68 m
331.56 295.32 l
329.76 297.96 l
326.16 303.24 l
324.36 305.88 l
322.56 308.64 l
322.56 308.64 m
320.64 311.28 l
318.84 313.92 l
315.24 319.2 l
311.64 324.48 l
309.84 327.12 l
308.04 329.88 l
308.04 329.88 m
306.12 332.52 l
304.32 335.16 l
300.72 340.44 l
298.92 343.08 l
297.12 345.84 l
297.12 345.84 m
295.2 348.48 l
293.4 351.12 l
289.8 356.4 l
288.0 359.04 l
286.2 361.8 l
286.2 361.8 m
282.6 367.08 l
282.6 367.08 m
280.68 369.72 l
278.88 372.36 l
277.08 375.0 l
275.28 377.76 l
275.28 377.76 m
271.68 383.04 l
271.68 383.04 m
269.76 385.68 l
267.96 388.32 l
264.36 393.6 l
262.56 396.24 l
260.76 399.0 l
260.76 399.0 m
257.16 404.28 l
257.16 404.28 m
255.24 406.92 l
253.44 409.56 l
251.64 412.2 l
249.84 414.96 l
249.84 414.96 m
246.96 418.92 l
246.24 420.24 l
246.24 420.24 m
245.04 422.88 l
244.56 424.2 l
244.32 425.52 l
244.32 425.52 m
244.2 426.84 l
244.32 428.16 l
244.56 429.6 l
244.68 430.92 l
244.68 430.92 m
245.04 436.2 l
245.4 441.48 l
245.76 446.76 l
245.76 446.76 m
245.88 449.4 l
246.12 452.16 l
246.12 452.16 m
246.48 457.44 l
246.84 462.72 l
246.84 462.72 m
247.08 465.36 l
247.2 468.12 l
247.2 468.12 m
247.44 473.4 l
247.44 473.4 m
247.56 476.04 l
247.8 478.68 l
247.8 478.68 m
247.92 481.32 l
248.04 484.08 l
248.04 484.08 m
248.16 486.72 l
248.4 489.36 l
248.4 489.36 m
248.64 494.64 l
248.64 494.64 m
248.76 497.28 l
248.88 500.04 l
248.88 500.04 m
249.12 505.32 l
249.12 505.32 m
249.36 510.6 l
249.36 510.6 m
249.48 513.24 l
249.72 515.88 l
249.72 515.88 m
249.84 518.52 l
249.96 521.28 l
249.96 521.28 m
250.2 526.56 l
250.2 526.56 m
250.32 531.84 l
250.32 531.84 m
250.44 534.48 l
250.56 537.24 l
250.56 537.24 m
250.8 542.52 l
251.04 547.8 l
251.04 547.8 m
251.16 550.44 l
251.28 553.2 l
251.28 553.2 m
251.4 558.48 l
251.4 558.48 m
251.64 563.76 l
251.64 563.76 m
251.76 566.4 l
251.88 569.16 l
251.88 569.16 m
252.0 574.44 l
252.0 574.44 m
252.24 579.72 l
252.24 579.72 m
252.36 585.0 l
252.36 585.0 m
252.48 587.64 l
252.6 590.4 l
252.6 590.4 m
252.72 595.68 l
252.72 595.68 m
252.96 600.96 l
252.96 600.96 m
253.08 603.6 l
253.08 606.36 l
253.08 606.36 m
253.2 611.64 l
253.2 611.64 m
253.44 616.92 l
253.44 616.92 m
253.56 619.56 l
253.56 622.32 l
253.56 622.32 m
253.68 627.6 l
253.68 627.6 m
253.8 632.88 l
253.8 632.88 m
253.92 635.52 l
254.04 638.28 l
254.04 638.28 m
254.16 643.56 l
0.2 0.39608 1.0 sc
S
1.92 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
337.08 287.28 l
335.28 289.92 l
333.48 292.68 l
333.48 292.68 m
331.56 295.32 l
329.76 297.96 l
326.16 303.24 l
324.36 305.88 l
322.56 308.64 l
322.56 308.64 m
320.64 311.28 l
318.84 313.92 l
315.24 319.2 l
311.64 324.48 l
309.84 327.12 l
308.04 329.88 l
308.04 329.88 m
306.12 332.52 l
304.32 335.16 l
300.72 340.44 l
298.92 343.08 l
297.12 345.84 l
297.12 345.84 m
295.2 348.48 l
293.4 351.12 l
289.8 356.4 l
288.0 359.04 l
286.2 361.8 l
286.2 361.8 m
282.6 367.08 l
282.6 367.08 m
280.68 369.72 l
278.88 372.36 l
278.88 372.36 m
277.846 374.015 275.809 375.814 275.28 377.76 c
275.28 377.76 m
274.878 379.375 275.526 381.438 275.76 383.04 c
275.76 383.04 m
276.24 388.32 l
276.24 388.32 m
276.6 393.6 l
276.6 393.6 m
276.84 396.24 l
277.08 399.0 l
277.08 399.0 m
277.44 404.28 l
277.44 404.28 m
277.68 406.92 l
277.92 409.56 l
277.92 409.56 m
278.16 412.2 l
278.28 414.96 l
278.28 414.96 m
278.64 420.24 l
278.64 420.24 m
279.0 425.52 l
279.0 425.52 m
279.24 428.16 l
279.36 430.92 l
279.36 430.92 m
279.6 436.2 l
279.6 436.2 m
279.96 441.48 l
279.96 441.48 m
280.32 446.76 l
280.32 446.76 m
280.44 449.4 l
280.56 452.16 l
280.56 452.16 m
280.68 454.8 l
280.92 457.44 l
280.92 457.44 m
281.16 462.72 l
281.28 465.36 l
281.4 468.12 l
281.4 468.12 m
281.64 473.4 l
281.64 473.4 m
281.76 476.04 l
282.0 478.68 l
282.0 478.68 m
282.12 481.32 l
282.24 484.08 l
282.24 484.08 m
282.48 489.36 l
282.48 489.36 m
282.72 494.64 l
282.84 497.28 l
282.96 500.04 l
282.96 500.04 m
283.2 505.32 l
283.2 505.32 m
283.32 510.6 l
283.32 510.6 m
283.56 515.88 l
283.56 515.88 m
283.68 518.52 l
283.8 521.28 l
283.8 521.28 m
284.04 526.56 l
284.04 526.56 m
284.16 531.84 l
284.16 531.84 m
284.28 534.48 l
284.4 537.24 l
284.4 537.24 m
284.52 542.52 l
284.52 542.52 m
284.76 547.8 l
284.76 547.8 m
284.76 550.44 l
284.88 553.2 l
284.88 553.2 m
285.12 558.48 l
285.12 558.48 m
285.24 563.76 l
285.24 563.76 m
285.36 566.4 l
285.48 569.16 l
285.48 569.16 m
285.6 574.44 l
285.6 574.44 m
285.72 579.72 l
285.72 579.72 m
285.96 585.0 l
286.08 587.64 l
286.08 590.4 l
286.08 590.4 m
286.2 595.68 l
286.2 595.68 m
286.32 600.96 l
286.32 600.96 m
286.32 603.6 l
286.44 606.36 l
286.44 606.36 m
286.68 611.64 l
286.68 611.64 m
286.8 616.92 l
286.8 616.92 m
286.8 619.56 l
286.92 622.32 l
286.92 622.32 m
287.04 627.6 l
287.16 632.88 l
287.16 632.88 m
287.16 635.52 l
287.28 638.28 l
287.28 638.28 m
287.4 643.56 l
S
0.96 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
337.08 287.28 l
335.28 289.92 l
333.48 292.68 l
333.48 292.68 m
331.56 295.32 l
329.76 297.96 l
326.16 303.24 l
324.36 305.88 l
322.56 308.64 l
322.56 308.64 m
320.64 311.28 l
318.84 313.92 l
315.24 319.2 l
311.64 324.48 l
311.64 324.48 m
309.72 327.12 l
308.76 328.56 l
308.04 329.88 l
308.04 329.88 m
307.56 331.2 l
307.2 332.52 l
306.96 333.84 l
306.84 335.16 l
306.84 335.16 m
306.84 336.48 l
306.96 337.8 l
307.32 340.44 l
307.32 340.44 m
307.56 343.08 l
307.92 345.84 l
307.92 345.84 m
308.4 351.12 l
308.4 351.12 m
308.88 356.4 l
308.88 356.4 m
309.12 359.04 l
309.36 361.8 l
309.36 361.8 m
309.84 367.08 l
309.84 367.08 m
310.2 372.36 l
310.2 372.36 m
310.32 375.0 l
310.56 377.76 l
310.56 377.76 m
310.8 380.4 l
311.04 383.04 l
311.04 383.04 m
311.4 388.32 l
311.4 388.32 m
311.76 393.6 l
311.76 393.6 m
311.88 396.24 l
312.12 399.0 l
312.12 399.0 m
312.48 404.28 l
312.48 404.28 m
312.72 409.56 l
312.84 412.2 l
313.08 414.96 l
313.08 414.96 m
313.44 420.24 l
313.44 420.24 m
313.68 425.52 l
313.8 428.16 l
313.92 430.92 l
313.92 430.92 m
314.04 433.56 l
314.28 436.2 l
314.28 436.2 m
314.52 441.48 l
314.52 441.48 m
314.76 446.76 l
314.76 446.76 m
314.88 449.4 l
315.0 452.16 l
315.0 452.16 m
315.24 457.44 l
315.24 457.44 m
315.48 462.72 l
315.48 462.72 m
315.6 465.36 l
315.72 468.12 l
315.72 468.12 m
315.96 473.4 l
315.96 473.4 m
316.2 478.68 l
316.2 478.68 m
316.2 481.32 l
316.32 484.08 l
316.32 484.08 m
316.56 489.36 l
316.8 494.64 l
316.8 494.64 m
316.8 497.28 l
316.92 500.04 l
316.92 500.04 m
317.16 505.32 l
317.16 505.32 m
317.28 510.6 l
317.28 510.6 m
317.52 515.88 l
317.52 515.88 m
317.52 518.52 l
317.64 521.28 l
317.64 521.28 m
317.88 526.56 l
317.88 526.56 m
318.0 531.84 l
318.0 531.84 m
318.0 534.48 l
318.12 537.24 l
318.12 537.24 m
318.24 542.52 l
318.24 542.52 m
318.48 547.8 l
318.48 547.8 m
318.6 550.44 l
318.6 553.2 l
318.6 553.2 m
318.72 558.48 l
318.84 563.76 l
318.84 563.76 m
318.84 566.4 l
318.96 569.16 l
318.96 569.16 m
319.2 574.44 l
319.2 574.44 m
319.32 579.72 l
319.44 585.0 l
319.44 585.0 m
319.44 587.64 l
319.56 590.4 l
319.56 590.4 m
319.68 595.68 l
319.68 595.68 m
319.8 600.96 l
319.8 600.96 m
319.8 603.6 l
319.92 606.36 l
319.92 606.36 m
320.04 611.64 l
320.04 611.64 m
320.16 616.92 l
320.16 616.92 m
320.16 619.56 l
320.28 622.32 l
320.28 622.32 m
320.4 627.6 l
320.4 627.6 m
320.4 632.88 l
320.4 635.52 l
320.52 638.28 l
320.52 638.28 m
320.64 643.56 l
0.0 0.0 1.0 sc
S
1.92 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
362.52 250.08 l
358.92 255.36 l
358.92 255.36 m
357.0 258.0 l
355.2 260.76 l
355.2 260.76 m
351.6 266.04 l
348.0 271.32 l
348.0 271.32 m
346.08 273.96 l
344.28 276.72 l
344.28 276.72 m
340.68 282.0 l
340.68 282.0 m
339.72 283.32 l
338.64 284.64 l
337.8 285.96 l
337.08 287.28 l
337.08 287.28 m
336.72 288.6 l
336.48 289.92 l
336.36 291.36 l
336.36 292.68 l
336.36 294.0 l
336.6 295.32 l
336.96 297.96 l
336.96 297.96 m
337.32 300.6 l
337.68 303.24 l
337.68 303.24 m
338.04 305.88 l
338.28 308.64 l
338.28 308.64 m
338.88 313.92 l
338.88 313.92 m
339.36 319.2 l
339.36 319.2 m
339.84 324.48 l
340.08 327.12 l
340.32 329.88 l
340.32 329.88 m
340.8 335.16 l
340.8 335.16 m
341.28 340.44 l
341.52 343.08 l
341.76 345.84 l
341.76 345.84 m
342.12 351.12 l
342.12 351.12 m
342.48 356.4 l
342.48 356.4 m
342.6 359.04 l
342.84 361.8 l
342.84 361.8 m
343.2 367.08 l
343.2 367.08 m
343.56 372.36 l
343.56 372.36 m
343.68 375.0 l
343.92 377.76 l
343.92 377.76 m
344.28 383.04 l
344.28 383.04 m
344.52 388.32 l
344.52 388.32 m
344.64 390.96 l
344.88 393.6 l
344.88 393.6 m
345.0 396.24 l
345.12 399.0 l
345.12 399.0 m
345.36 404.28 l
345.36 404.28 m
345.6 409.56 l
345.72 412.2 l
345.96 414.96 l
345.96 414.96 m
346.2 420.24 l
346.2 420.24 m
346.44 425.52 l
346.44 425.52 m
346.44 428.16 l
346.56 430.92 l
346.56 430.92 m
346.8 436.2 l
346.8 436.2 m
347.04 441.48 l
347.28 446.76 l
347.28 446.76 m
347.28 449.4 l
347.4 452.16 l
347.4 452.16 m
347.64 457.44 l
347.64 457.44 m
347.88 462.72 l
347.88 462.72 m
347.88 465.36 l
348.0 468.12 l
348.0 468.12 m
348.24 473.4 l
348.24 473.4 m
348.36 478.68 l
348.36 478.68 m
348.36 481.32 l
348.48 484.08 l
348.48 484.08 m
348.72 489.36 l
348.72 489.36 m
348.84 494.64 l
348.84 494.64 m
348.84 497.28 l
348.96 500.04 l
348.96 500.04 m
349.2 505.32 l
349.2 505.32 m
349.32 510.6 l
349.44 515.88 l
349.44 515.88 m
349.44 518.52 l
349.56 521.28 l
349.56 521.28 m
349.68 526.56 l
349.68 526.56 m
349.8 531.84 l
349.8 531.84 m
349.92 534.48 l
350.04 537.24 l
350.04 537.24 m
350.16 542.52 l
350.16 542.52 m
350.28 547.8 l
350.28 547.8 m
350.28 550.44 l
350.4 553.2 l
350.4 553.2 m
350.52 558.48 l
350.52 558.48 m
350.52 563.76 l
350.52 566.4 l
350.64 569.16 l
350.64 569.16 m
350.76 574.44 l
350.76 574.44 m
350.88 579.72 l
351.0 585.0 l
351.0 585.0 m
351.0 587.64 l
351.12 590.4 l
351.12 590.4 m
351.24 595.68 l
351.24 595.68 m
351.24 600.96 l
351.24 603.6 l
351.36 606.36 l
351.36 606.36 m
351.48 611.64 l
351.48 611.64 m
351.6 616.92 l
351.6 616.92 m
351.72 619.56 l
351.72 622.32 l
351.72 627.6 l
351.72 627.6 m
351.84 632.88 l
351.84 632.88 m
351.96 635.52 l
351.96 638.28 l
351.96 638.28 m
351.96 643.56 l
S
0.96 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
386.04 215.52 l
384.24 218.16 l
382.44 220.8 l
380.64 223.56 l
380.64 223.56 m
377.04 228.84 l
373.44 234.12 l
373.44 234.12 m
371.52 236.76 l
369.72 239.52 l
369.72 239.52 m
366.12 244.8 l
366.12 244.8 m
364.98 246.646 363.198 247.988 362.52 250.08 c
362.52 250.08 m
361.95 252.052 362.617 253.38 362.88 255.36 c
362.88 255.36 m
363.24 258.0 l
363.72 260.76 l
363.72 260.76 m
364.44 266.04 l
365.16 271.32 l
365.52 273.96 l
365.88 276.72 l
365.88 276.72 m
366.48 282.0 l
367.08 287.28 l
367.08 287.28 m
367.44 289.92 l
367.68 292.68 l
367.68 292.68 m
368.16 297.96 l
368.16 297.96 m
368.76 303.24 l
368.76 303.24 m
369.0 305.88 l
369.24 308.64 l
369.24 308.64 m
369.6 313.92 l
369.6 313.92 m
370.08 319.2 l
370.08 319.2 m
370.44 324.48 l
370.44 324.48 m
370.56 327.12 l
370.8 329.88 l
370.8 329.88 m
371.16 335.16 l
371.52 340.44 l
371.52 340.44 m
371.64 343.08 l
371.88 345.84 l
371.88 345.84 m
372.24 351.12 l
372.24 351.12 m
372.48 356.4 l
372.6 359.04 l
372.84 361.8 l
372.84 361.8 m
373.08 367.08 l
373.08 367.08 m
373.32 372.36 l
373.32 372.36 m
373.44 375.0 l
373.68 377.76 l
373.68 377.76 m
373.92 383.04 l
373.92 383.04 m
374.16 388.32 l
374.4 393.6 l
374.4 393.6 m
374.4 396.24 l
374.52 399.0 l
374.52 399.0 m
374.76 404.28 l
374.76 404.28 m
375.0 409.56 l
375.12 412.2 l
375.24 414.96 l
375.24 414.96 m
375.36 420.24 l
375.36 420.24 m
375.6 425.52 l
375.6 425.52 m
375.6 428.16 l
375.72 430.92 l
375.72 430.92 m
375.96 436.2 l
375.96 436.2 m
376.08 441.48 l
376.08 441.48 m
376.2 446.76 l
376.2 446.76 m
376.32 449.4 l
376.44 452.16 l
376.44 452.16 m
376.56 457.44 l
376.68 462.72 l
376.68 462.72 m
376.68 465.36 l
376.8 468.12 l
376.8 468.12 m
376.92 473.4 l
376.92 473.4 m
377.16 478.68 l
377.28 481.32 l
377.28 484.08 l
377.28 484.08 m
377.4 489.36 l
377.52 494.64 l
377.52 494.64 m
377.52 497.28 l
377.64 500.04 l
377.64 500.04 m
377.76 505.32 l
377.88 510.6 l
378.0 515.88 l
378.0 515.88 m
378.12 518.52 l
378.12 521.28 l
378.12 526.56 l
378.12 526.56 m
378.24 531.84 l
378.24 531.84 m
378.24 534.48 l
378.36 537.24 l
378.36 537.24 m
378.48 542.52 l
378.48 542.52 m
378.6 547.8 l
378.6 547.8 m
378.72 550.44 l
378.72 553.2 l
378.72 558.48 l
378.72 558.48 m
378.84 563.76 l
378.84 563.76 m
378.96 566.4 l
378.96 569.16 l
378.96 574.44 l
378.96 574.44 m
379.08 579.72 l
379.08 579.72 m
379.2 585.0 l
379.2 585.0 m
379.2 590.4 l
379.2 590.4 m
379.32 595.68 l
379.32 595.68 m
379.44 600.96 l
379.44 600.96 m
379.44 606.36 l
379.44 606.36 m
379.56 611.64 l
379.56 611.64 m
379.68 616.92 l
379.68 616.92 m
379.68 622.32 l
379.68 624.96 l
379.8 627.6 l
379.8 627.6 m
379.8 632.88 l
379.8 635.52 l
379.92 638.28 l
379.92 638.28 m
379.92 643.56 l
0.2 0.2 0.60392 sc
S
1.92 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
404.28 188.88 l
402.48 191.64 l
402.48 191.64 m
398.88 196.92 l
398.88 196.92 m
396.96 199.56 l
395.16 202.2 l
393.36 204.84 l
391.56 207.6 l
391.56 207.6 m
387.96 212.88 l
387.96 212.88 m
387.034 214.197 384.6 216.503 384.24 218.16 c
384.24 218.16 m
383.76 219.638 385.274 222.098 385.44 223.56 c
385.44 223.56 m
386.52 228.84 l
386.52 228.84 m
387.48 234.12 l
387.96 236.76 l
388.32 239.52 l
388.32 239.52 m
389.16 244.8 l
389.16 244.8 m
389.88 250.08 l
390.6 255.36 l
390.96 258.0 l
391.2 260.76 l
391.2 260.76 m
391.8 266.04 l
391.8 266.04 m
392.4 271.32 l
392.4 271.32 m
392.64 273.96 l
392.88 276.72 l
392.88 276.72 m
393.36 282.0 l
393.36 282.0 m
393.84 287.28 l
394.08 289.92 l
394.32 292.68 l
394.32 292.68 m
394.68 297.96 l
394.68 297.96 m
395.04 303.24 l
395.04 303.24 m
395.16 305.88 l
395.4 308.64 l
395.4 308.64 m
395.76 313.92 l
395.76 313.92 m
396.12 319.2 l
396.12 319.2 m
396.36 324.48 l
396.36 324.48 m
396.48 327.12 l
396.72 329.88 l
396.72 329.88 m
396.96 335.16 l
396.96 335.16 m
397.2 340.44 l
397.2 340.44 m
397.32 343.08 l
397.56 345.84 l
397.56 345.84 m
397.8 351.12 l
397.8 351.12 m
398.04 356.4 l
398.04 356.4 m
398.04 359.04 l
398.16 361.8 l
398.16 361.8 m
398.4 367.08 l
398.4 367.08 m
398.64 372.36 l
398.64 372.36 m
398.76 375.0 l
398.88 377.76 l
398.88 377.76 m
399.0 383.04 l
399.0 383.04 m
399.24 388.32 l
399.24 388.32 m
399.36 393.6 l
399.36 393.6 m
399.48 396.24 l
399.6 399.0 l
399.6 399.0 m
399.72 404.28 l
399.84 409.56 l
399.84 409.56 m
399.96 412.2 l
400.08 414.96 l
400.08 414.96 m
400.2 420.24 l
400.2 420.24 m
400.32 425.52 l
400.32 425.52 m
400.32 428.16 l
400.44 430.92 l
400.44 430.92 m
400.56 436.2 l
400.56 436.2 m
400.68 441.48 l
400.68 441.48 m
400.8 446.76 l
400.8 446.76 m
400.8 449.4 l
400.92 452.16 l
400.92 452.16 m
401.04 457.44 l
401.16 462.72 l
401.16 462.72 m
401.16 465.36 l
401.28 468.12 l
401.28 468.12 m
401.4 473.4 l
401.52 478.68 l
401.52 478.68 m
401.52 481.32 l
401.64 484.08 l
401.64 484.08 m
401.76 489.36 l
401.76 489.36 m
401.76 494.64 l
401.76 497.28 l
401.88 500.04 l
401.88 500.04 m
402.0 505.32 l
402.12 510.6 l
402.12 510.6 m
402.12 515.88 l
402.12 518.52 l
402.24 521.28 l
402.24 521.28 m
402.36 526.56 l
402.36 526.56 m
402.36 531.84 l
402.36 534.48 l
402.48 537.24 l
402.48 537.24 m
402.6 542.52 l
402.6 542.52 m
402.6 547.8 l
402.6 550.44 l
402.72 553.2 l
402.72 553.2 m
402.72 558.48 l
402.72 561.12 l
402.84 563.76 l
402.84 563.76 m
402.84 569.16 l
402.84 571.8 l
402.96 574.44 l
402.96 574.44 m
402.96 579.72 l
402.96 579.72 m
403.08 585.0 l
403.08 585.0 m
403.2 587.64 l
403.2 590.4 l
403.2 595.68 l
403.2 600.96 l
403.2 603.6 l
403.32 606.36 l
403.32 606.36 m
403.32 611.64 l
403.32 614.28 l
403.44 616.92 l
403.44 616.92 m
403.44 622.32 l
403.44 624.96 l
403.56 627.6 l
403.56 627.6 m
403.56 632.88 l
403.56 635.52 l
403.68 638.28 l
403.68 638.28 m
403.68 643.56 l
S
0.96 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
418.8 167.64 l
417.0 170.4 l
417.0 170.4 m
413.4 175.68 l
413.4 175.68 m
411.48 178.32 l
409.68 180.96 l
406.08 186.24 l
406.08 186.24 m
404.87 188.045 403.069 189.466 402.48 191.64 c
402.48 191.64 m
402.019 193.537 403.487 195.169 403.92 196.92 c
403.92 196.92 m
405.24 202.2 l
405.24 202.2 m
405.84 204.84 l
406.44 207.6 l
406.44 207.6 m
407.04 210.24 l
407.52 212.88 l
408.0 215.52 l
408.36 218.16 l
408.36 218.16 m
408.84 220.8 l
409.32 223.56 l
409.32 223.56 m
409.68 226.2 l
410.04 228.84 l
410.76 234.12 l
411.12 236.76 l
411.48 239.52 l
411.48 239.52 m
412.08 244.8 l
412.08 244.8 m
412.56 250.08 l
412.56 250.08 m
413.16 255.36 l
413.16 255.36 m
413.4 258.0 l
413.64 260.76 l
413.64 260.76 m
414.12 266.04 l
414.12 266.04 m
414.48 271.32 l
414.48 271.32 m
414.6 273.96 l
414.84 276.72 l
414.84 276.72 m
415.2 282.0 l
415.2 282.0 m
415.56 287.28 l
415.56 287.28 m
415.8 289.92 l
415.92 292.68 l
415.92 292.68 m
416.16 297.96 l
416.28 300.6 l
416.52 303.24 l
416.52 303.24 m
416.64 305.88 l
416.76 308.64 l
416.76 308.64 m
417.0 313.92 l
417.0 313.92 m
417.24 319.2 l
417.24 319.2 m
417.48 324.48 l
417.6 327.12 l
417.72 329.88 l
417.72 329.88 m
417.96 335.16 l
417.96 335.16 m
418.2 340.44 l
418.2 340.44 m
418.2 343.08 l
418.32 345.84 l
418.32 345.84 m
418.56 351.12 l
418.56 351.12 m
418.68 356.4 l
418.68 356.4 m
418.8 359.04 l
418.92 361.8 l
418.92 361.8 m
419.04 367.08 l
419.16 372.36 l
419.16 372.36 m
419.16 375.0 l
419.28 377.76 l
419.28 377.76 m
419.52 383.04 l
419.52 383.04 m
419.64 388.32 l
419.64 388.32 m
419.76 393.6 l
419.76 393.6 m
419.76 396.24 l
419.88 399.0 l
419.88 399.0 m
420.0 404.28 l
420.12 409.56 l
420.12 409.56 m
420.12 412.2 l
420.24 414.96 l
420.24 414.96 m
420.36 420.24 l
420.48 425.52 l
420.48 425.52 m
420.6 428.16 l
420.6 430.92 l
420.6 436.2 l
420.6 436.2 m
420.72 441.48 l
420.84 446.76 l
420.84 446.76 m
420.96 449.4 l
420.96 452.16 l
420.96 457.44 l
420.96 457.44 m
421.08 462.72 l
421.08 462.72 m
421.08 465.36 l
421.2 468.12 l
421.2 468.12 m
421.32 473.4 l
421.32 473.4 m
421.32 478.68 l
421.32 481.32 l
421.44 484.08 l
421.44 484.08 m
421.44 489.36 l
421.44 489.36 m
421.56 494.64 l
421.56 494.64 m
421.68 497.28 l
421.68 500.04 l
421.68 505.32 l
421.68 507.96 l
421.8 510.6 l
421.8 510.6 m
421.8 515.88 l
421.8 518.52 l
421.92 521.28 l
421.92 521.28 m
421.92 526.56 l
421.92 529.2 l
422.04 531.84 l
422.04 531.84 m
422.04 537.24 l
422.04 539.88 l
422.16 542.52 l
422.16 542.52 m
422.16 547.8 l
422.16 550.44 l
422.28 553.2 l
422.28 553.2 m
422.28 558.48 l
422.28 563.76 l
422.28 566.4 l
422.4 569.16 l
422.4 569.16 m
422.4 574.44 l
422.4 577.08 l
422.52 579.72 l
422.52 579.72 m
422.52 585.0 l
422.52 590.4 l
422.52 593.04 l
422.64 595.68 l
422.64 595.68 m
422.64 600.96 l
422.64 603.6 l
422.76 606.36 l
422.76 606.36 m
422.76 611.64 l
422.76 616.92 l
422.76 619.56 l
422.88 622.32 l
422.88 622.32 m
422.88 627.6 l
422.88 632.88 l
422.88 638.28 l
422.88 638.28 m
423.0 643.56 l
0.0 0.0 0.50196 sc
S
1.92 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
429.72 151.68 l
427.92 154.44 l
427.92 154.44 m
424.32 159.72 l
424.32 159.72 m
422.4 162.36 l
420.6 165.0 l
420.6 165.0 m
419.242 166.679 417.657 168.294 417.0 170.4 c
417.0 170.4 m
416.539 172.297 418.007 173.929 418.44 175.68 c
418.44 175.68 m
420.12 180.96 l
420.12 180.96 m
421.56 186.24 l
422.28 188.88 l
422.88 191.64 l
422.88 191.64 m
423.48 194.28 l
423.96 196.92 l
423.96 196.92 m
424.56 199.56 l
425.04 202.2 l
425.52 204.84 l
425.88 207.6 l
425.88 207.6 m
426.6 212.88 l
427.32 218.16 l
427.68 220.8 l
428.04 223.56 l
428.04 223.56 m
428.64 228.84 l
428.64 228.84 m
429.12 234.12 l
429.12 234.12 m
429.36 236.76 l
429.6 239.52 l
429.6 239.52 m
430.08 244.8 l
430.08 244.8 m
430.44 250.08 l
430.44 250.08 m
430.8 255.36 l
430.8 255.36 m
430.92 258.0 l
431.16 260.76 l
431.16 260.76 m
431.52 266.04 l
431.52 266.04 m
431.88 271.32 l
431.88 271.32 m
432.0 273.96 l
432.12 276.72 l
432.12 276.72 m
432.36 282.0 l
432.36 282.0 m
432.48 284.64 l
432.72 287.28 l
432.72 287.28 m
432.84 289.92 l
432.96 292.68 l
432.96 292.68 m
433.08 297.96 l
433.08 297.96 m
433.32 303.24 l
433.44 305.88 l
433.56 308.64 l
433.56 308.64 m
433.8 313.92 l
433.8 313.92 m
433.92 319.2 l
433.92 319.2 m
434.04 324.48 l
434.04 324.48 m
434.16 327.12 l
434.28 329.88 l
434.28 329.88 m
434.4 335.16 l
434.52 340.44 l
434.52 340.44 m
434.64 343.08 l
434.76 345.84 l
434.76 345.84 m
434.88 351.12 l
435.0 356.4 l
435.0 356.4 m
435.0 359.04 l
435.12 361.8 l
435.12 361.8 m
435.24 367.08 l
435.36 372.36 l
435.36 372.36 m
435.36 375.0 l
435.48 377.76 l
435.48 377.76 m
435.6 383.04 l
435.6 383.04 m
435.6 388.32 l
435.6 388.32 m
435.72 393.6 l
435.72 393.6 m
435.72 396.24 l
435.84 399.0 l
435.84 399.0 m
435.96 404.28 l
435.96 404.28 m
435.96 409.56 l
435.96 412.2 l
436.08 414.96 l
436.08 414.96 m
436.2 420.24 l
436.2 420.24 m
436.32 425.52 l
436.32 425.52 m
436.32 430.92 l
436.32 433.56 l
436.44 436.2 l
436.44 436.2 m
436.44 441.48 l
436.44 444.12 l
436.56 446.76 l
436.56 446.76 m
436.56 452.16 l
436.56 452.16 m
436.68 457.44 l
436.8 462.72 l
436.8 462.72 m
436.8 468.12 l
436.8 470.76 l
436.92 473.4 l
436.92 473.4 m
436.92 478.68 l
436.92 484.08 l
436.92 486.72 l
437.04 489.36 l
437.04 489.36 m
437.04 494.64 l
437.04 497.28 l
437.16 500.04 l
437.16 500.04 m
437.16 505.32 l
437.16 507.96 l
437.28 510.6 l
437.28 510.6 m
437.28 515.88 l
437.28 521.28 l
437.28 523.92 l
437.4 526.56 l
437.4 526.56 m
437.4 531.84 l
437.4 534.48 l
437.52 537.24 l
437.52 537.24 m
437.52 542.52 l
437.52 547.8 l
437.52 550.44 l
437.64 553.2 l
437.64 553.2 m
437.64 558.48 l
437.64 563.76 l
437.64 569.16 l
437.64 571.8 l
437.76 574.44 l
437.76 574.44 m
437.76 579.72 l
437.76 585.0 l
437.76 587.64 l
437.88 590.4 l
437.88 590.4 m
437.88 595.68 l
437.88 600.96 l
437.88 606.36 l
437.88 609.0 l
438.0 611.64 l
438.0 611.64 m
438.0 616.92 l
438.0 622.32 l
438.0 627.6 l
438.0 630.24 l
438.12 632.88 l
438.12 632.88 m
438.12 638.28 l
438.12 638.28 m
438.12 643.56 l
S
0.96 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
438.84 138.48 l
438.84 138.48 m
436.92 141.12 l
435.12 143.76 l
431.52 149.04 l
431.52 149.04 m
430.321 150.633 428.388 152.413 427.92 154.44 c
427.92 154.44 m
427.745 156.432 429.229 157.991 429.84 159.72 c
429.84 159.72 m
432.0 165.0 l
432.0 165.0 m
432.96 167.64 l
433.8 170.4 l
433.8 170.4 m
435.24 175.68 l
435.96 178.32 l
436.56 180.96 l
436.56 180.96 m
437.64 186.24 l
437.64 186.24 m
438.12 188.88 l
438.6 191.64 l
438.6 191.64 m
439.44 196.92 l
439.44 196.92 m
440.16 202.2 l
440.52 204.84 l
440.76 207.6 l
440.76 207.6 m
441.36 212.88 l
441.36 212.88 m
441.84 218.16 l
442.08 220.8 l
442.32 223.56 l
442.32 223.56 m
442.8 228.84 l
442.8 228.84 m
443.16 234.12 l
443.16 234.12 m
443.28 236.76 l
443.52 239.52 l
443.52 239.52 m
443.88 244.8 l
443.88 244.8 m
444.12 250.08 l
444.12 250.08 m
444.36 255.36 l
444.48 258.0 l
444.72 260.76 l
444.72 260.76 m
444.96 266.04 l
444.96 266.04 m
445.08 271.32 l
445.08 271.32 m
445.2 273.96 l
445.32 276.72 l
445.32 276.72 m
445.56 282.0 l
445.56 282.0 m
445.68 287.28 l
445.68 287.28 m
445.8 289.92 l
445.92 292.68 l
445.92 292.68 m
446.04 297.96 l
446.04 297.96 m
446.28 303.24 l
446.4 305.88 l
446.4 308.64 l
446.4 308.64 m
446.52 313.92 l
446.64 319.2 l
446.64 319.2 m
446.76 324.48 l
446.76 324.48 m
446.76 327.12 l
446.88 329.88 l
446.88 329.88 m
447.0 335.16 l
447.0 335.16 m
447.12 340.44 l
447.12 340.44 m
447.12 343.08 l
447.24 345.84 l
447.24 345.84 m
447.36 351.12 l
447.36 351.12 m
447.36 356.4 l
447.36 359.04 l
447.48 361.8 l
447.48 361.8 m
447.6 367.08 l
447.72 372.36 l
447.72 372.36 m
447.72 377.76 l
447.72 377.76 m
447.84 383.04 l
447.96 388.32 l
447.96 388.32 m
447.96 393.6 l
447.96 396.24 l
448.08 399.0 l
448.08 399.0 m
448.08 404.28 l
448.08 406.92 l
448.2 409.56 l
448.2 409.56 m
448.2 414.96 l
448.2 417.6 l
448.32 420.24 l
448.32 420.24 m
448.32 425.52 l
448.32 428.16 l
448.44 430.92 l
448.44 430.92 m
448.44 436.2 l
448.44 438.84 l
448.56 441.48 l
448.56 441.48 m
448.56 446.76 l
448.56 452.16 l
448.56 454.8 l
448.68 457.44 l
448.68 457.44 m
448.68 462.72 l
448.68 465.36 l
448.8 468.12 l
448.8 468.12 m
448.8 473.4 l
448.8 478.68 l
448.8 481.32 l
448.92 484.08 l
448.92 484.08 m
448.92 489.36 l
448.92 494.64 l
448.92 497.28 l
449.04 500.04 l
449.04 500.04 m
449.04 505.32 l
449.04 510.6 l
449.04 513.24 l
449.16 515.88 l
449.16 515.88 m
449.16 521.28 l
449.16 526.56 l
449.16 531.84 l
449.16 534.48 l
449.28 537.24 l
449.28 537.24 m
449.28 542.52 l
449.28 547.8 l
449.28 553.2 l
449.28 555.84 l
449.4 558.48 l
449.4 558.48 m
449.4 563.76 l
449.4 569.16 l
449.4 574.44 l
449.4 579.72 l
449.4 582.36 l
449.52 585.0 l
449.52 585.0 m
449.52 590.4 l
449.52 595.68 l
449.52 600.96 l
449.52 606.36 l
449.52 609.0 l
449.64 611.64 l
449.64 611.64 m
449.64 616.92 l
449.64 622.32 l
449.64 627.6 l
449.64 632.88 l
449.64 635.52 l
449.76 638.28 l
449.76 638.28 m
449.76 643.56 l
0.0 0.2 0.0 sc
S
1.92 w
n
456.96 111.84 m
453.36 117.12 l
451.56 119.76 l
449.76 122.52 l
449.76 122.52 m
447.84 125.16 l
446.04 127.8 l
442.44 133.08 l
440.64 135.72 l
439.68 137.16 l
438.84 138.48 l
438.0 139.8 l
437.04 141.12 l
436.68 141.84 l
436.32 142.44 l
436.08 143.16 l
436.08 143.76 l
436.08 143.76 m
436.308 145.587 438.566 147.545 439.44 149.04 c
439.44 149.04 m
440.76 151.68 l
441.96 154.44 l
441.96 154.44 m
443.04 157.08 l
444.0 159.72 l
444.0 159.72 m
444.84 162.36 l
445.56 165.0 l
446.28 167.64 l
446.88 170.4 l
446.88 170.4 m
447.96 175.68 l
447.96 175.68 m
448.92 180.96 l
448.92 180.96 m
449.64 186.24 l
449.64 186.24 m
450.0 188.88 l
450.36 191.64 l
450.36 191.64 m
450.96 196.92 l
450.96 196.92 m
451.44 202.2 l
451.44 202.2 m
451.68 204.84 l
451.92 207.6 l
451.92 207.6 m
452.28 212.88 l
452.28 212.88 m
452.52 215.52 l
452.76 218.16 l
452.76 218.16 m
452.88 220.8 l
453.0 223.56 l
453.0 223.56 m
453.12 226.2 l
453.36 228.84 l
453.36 228.84 m
453.6 234.12 l
453.72 236.76 l
453.84 239.52 l
453.84 239.52 m
454.08 244.8 l
454.08 244.8 m
454.32 250.08 l
454.56 255.36 l
454.56 255.36 m
454.56 258.0 l
454.68 260.76 l
454.68 260.76 m
454.92 266.04 l
454.92 266.04 m
455.04 271.32 l
455.04 271.32 m
455.16 273.96 l
455.28 276.72 l
455.28 276.72 m
455.4 282.0 l
455.52 287.28 l
455.52 287.28 m
455.52 289.92 l
455.64 292.68 l
455.64 292.68 m
455.76 297.96 l
455.88 303.24 l
455.88 303.24 m
455.88 305.88 l
456.0 308.64 l
456.0 308.64 m
456.12 313.92 l
456.12 313.92 m
456.12 319.2 l
456.12 319.2 m
456.24 324.48 l
456.24 324.48 m
456.24 327.12 l
456.36 329.88 l
456.36 329.88 m
456.48 335.16 l
456.48 335.16 m
456.48 340.44 l
456.48 343.08 l
456.6 345.84 l
456.6 345.84 m
456.6 351.12 l
456.6 351.12 m
456.72 356.4 l
456.72 356.4 m
456.84 359.04 l
456.84 361.8 l
456.84 367.08 l
456.84 369.72 l
456.96 372.36 l
456.96 372.36 m
456.96 377.76 l
456.96 380.4 l
457.08 383.04 l
457.08 383.04 m
457.08 388.32 l
457.08 393.6 l
457.08 396.24 l
457.2 399.0 l
457.2 399.0 m
457.2 404.28 l
457.2 406.92 l
457.32 409.56 l
457.32 409.56 m
457.32 414.96 l
457.32 420.24 l
457.32 422.88 l
457.44 425.52 l
457.44 425.52 m
457.44 430.92 l
457.44 436.2 l
457.44 438.84 l
457.56 441.48 l
457.56 441.48 m
457.56 446.76 l
457.56 452.16 l
457.56 454.8 l
457.68 457.44 l
457.68 457.44 m
457.68 462.72 l
457.68 468.12 l
457.68 473.4 l
457.68 476.04 l
457.8 478.68 l
457.8 478.68 m
457.8 484.08 l
457.8 489.36 l
457.8 494.64 l
457.8 497.28 l
457.92 500.04 l
457.92 500.04 m
457.92 505.32 l
457.92 510.6 l
457.92 515.88 l
457.92 521.28 l
457.92 523.92 l
458.04 526.56 l
458.04 526.56 m
458.04 531.84 l
458.04 537.24 l
458.04 542.52 l
458.04 547.8 l
458.04 550.44 l
458.16 553.2 l
458.16 553.2 m
458.16 558.48 l
458.16 563.76 l
458.16 569.16 l
458.16 574.44 l
458.16 579.72 l
458.16 582.36 l
458.28 585.0 l
458.28 585.0 m
458.28 590.4 l
458.28 595.68 l
458.28 600.96 l
458.28 606.36 l
458.28 611.64 l
458.28 616.92 l
458.28 619.56 l
458.4 622.32 l
458.4 622.32 m
458.4 627.6 l
458.4 632.88 l
458.4 638.28 l
458.4 638.28 m
458.4 643.56 l
S
[/DeviceGray] cs 0.0 sc
485.04 93.36 m
/N17 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(0) show
436.56 93.36 m
(2) show
388.2 93.36 m
(4) show
339.72 93.36 m
(6) show
291.24 93.36 m
(8) show
242.76 86.64 m
(10)
[6.672 6.672 ] pdfys
194.4 86.64 m
(12)
[6.672 6.672 ] pdfys
145.92 86.64 m
(14)
[6.672 6.672 ] pdfys
97.44 86.64 m
(16)
[6.672 6.672 ] pdfys
502.44 103.2 m
(0%10%20%30%40%50%60%70%80%90%100%)
[6.672 43.1245 6.672 6.672 39.8101 6.672 6.672 39.8101 6.672 6.672 39.8101 
6.672 6.672 39.9301 6.672 6.672 39.8101 6.672 6.672 39.8101 6.672 6.672 
39.8101 6.672 6.672 39.8101 6.672 6.672 36.4501 6.672 6.672 6.672 10.6681 
] pdfys
%ADOBeginSubsetFont: GUVBAA+Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.008
 256 array 0 1 255 {1 index exch /.notdef put} for  /GUVBAA+Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320e0b3397000000cc000000566376
7420ef1f94cc000001240000073a6670676d08e8ba2800000860000005d7
676c7966a47d5e660000595c000020e468656164cee221a800000e380000
003668686561127e12ff00000e7000000024686d7478a006329b00000e94
00001a286c6f636100ce0218000028bc00001a2c6d6178700d8312030000
42e8000000206e616d6582e14b8b00004308000005e47072657041216403
000048ec0000106f67646972000000000000000000000000000103d402bc
00050000059a05330000011b059a0533000003d1006602120805020b0704
02020202020400007a878000000000000008000000004d6f6e6f00200020
fffc05d3fe510133073e01b2400001ffffff0000000005ba001c05ba001c
05a7001c0426001c0000ffe40000ffe40000ffe4fe69ffe405ba001cfe69
ffe402ea0000011d0000011d000000000000000000b200ac00d701280120
00b301fa001700f8011901310049000400f7000300af00fd009500140054
00960112002400160055004901040119012b008c019bff76ffe9003d0092
00a2ffb70182ffaa0016008f00c600f8001c00de04010037004e00550055
006500e903e50059ff9a00080087000b003b00520116006100d600d600f5
00000093009400be017cfff80004001400820092003c00410041ffc1fffc
002a008c049005d809b5009100bb0106ff63ff69001e0022008a022bffd6
ffdf0026005900a300ac0104012b01c004480021006b00850098011903c6
006b009500a400fe010c025d034305bf000000490056006e0077008a00aa
00ca0112015005d805f0ff7bffe70006001300280061006900e90135014d
02a5040cff3effda005b00b900c801190119011901c0045b04a7055bfe3f
ff9dffc2001500b7010a01bc01c10532058efd81ffa1ffae000c00260031
003d004e00560062008300c100c900f100f2027fff7f00480053007700c5
011d01200126012801d60219027e027e03d3002e0041005d006b0075009f
00b000b200ba00bb00bd00d600db00e000e50114011b014a0162019101f2
020c026402cf039b03b403d4040104a9001600230025002a007400a500b6
00cc00cd00cf0105012001300150016a016f0197019d01e002b002ec02f7
0408048304fb04fd0526fee0fefbff4efff50018001a004c007a007f0091
00a300b300b400ce00d500f200f300f601100138016801a101b001e001ec
02090222024f0270029602a502ad034e039103c104350442046b04cd04da
0586058b076107fefca6fe93feadfed1ffb7ffd10003000e001800260046
00690081008f00a500bf00d300d500d900dd00e20119012b0138013b015a
015e016801730188019401ad01c501d101ea01f20200020002000222023b
0244024f026f0272027e02820293029402a502cf02cf02d002da02dd02eb
02f5030503220336037103a103b003b803d003e604100426042e0431044f
045a04ff053205320547055305a805ab05c205f0063c0664067006e80782
078408ccfd2afddefe00fe68feb0feb3ffaa00080059007a0091009e00a2
00af00b400bb00ca00cc00ce00d900e000f40114011a01210127012b0139
0146014b014d0157015c01650182018701920198019b01a201ae01c501c5
01d102070222022b024102530261026502840287028d02b402b402ba02c9
02d602d802ed02f503170323032b03310349035a035b036e03710374037e
03840391039103aa03cf03d303e703e803ed04080417041e0475047a0499
04a704b404d1054c056d056d05a205bf05c005d105fc05fc0602061a061c
062f066a06a806e2070607360750078907d407f30870011c012a011a0120
0000000000000000000000000219000b001e02aa0214047f01ed0000001d
0104000f0091002b01880153011201f3003f03fe0168010e047f01ed036e
03150219041300000000064004b00000027401bb003501c5007f06020301
000004e000b201dc02e004c3023d00d50160011904a7036e05ca022100ab
0426009002bc02bb014200b4023c0256029c030001e501a800e5006b0078
0094016b017300ab01ed013a017d0137017f00d4021603530184003cffa2
02040109014901f0006e031500810464005e000000000000000000000000
000000000000000000000000000000000000013900dc00e9fe9e040d047c
012b00b80096005900ac00df01a900fa0105ffec00170003005500610004
008c00a3008500280120005d00d6007f012601190104016c06cf00b40106
00000737063e047a00f000f900e905ba042604420000ffe7fe69049e04e3
ff37ff2d01200105012000a800740068004700f200e500d900bd00a80068
0047005c0048000a0028003200410050005a0064007d00870091ffb0ff9c
ff83ff79ff6f00cb012000fa012c01fa01a000d500b8005c003c00c800c8
008f00d9018b00b300470000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000fe6400c000ea01180125013203b003ed0576059005aa05b405be
05cd063100780084009b00cc00e200f4010a0120016300d100ea00f70108
01420019002c00340041003800480058006c025903bd0043011a007000d3
0028003700420050005a0064007300780082008c009c00a500bd00ce00f0
0110015c00be00d801020117012c016300ea01080041004b0055005f0073
00a60109018301b300410064001e002a00eb00fa010e01380274002c0040
0082009600b600c000cc00dc00e600f000ff010a0120012c013b01440156
016300f70057006401100136005001b10000ffb60039004e004403cc00e5
002401100042012201a400f0006000e0000e001d003905e30102002cfe4e
ff38026903bd011600ff000e00a00054001b003d01710041000f005000fd
0015014f0035fe52002c00d30000404154403f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00
b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a2344
45b01923442d2c2045b00325456164b050515845441b2121592d2cb00143
632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a
2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2c
b01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a
8720b0c05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2c
b0022546608a46b040618c482d2c4b53205c58b002855958b00185592d2c
20b0032545b019234445b01a23444565234520b00325606a20b009234223
688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321
b03f1b235961441cb114008a5279b31940201945208a54582321b03f1b23
5961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b
2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b
2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b00052
5823b002253823b002256538008a63381b212121212159012d2c4bb06451
584569b00943608a103a1b212121592d2c01b005251023208af500b00160
23edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500
edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b
2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b8023623
701020b802364520b0005058b00161593a2f182d2c21210c6423648bb840
00622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c
21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c642364
8bb84000626023212d2cb4000100000015b00826b00826b00826b008260f
10161345683ab001162d2cb4000100000015b00826b00826b00826b00826
0f1016134568653ab001162d2c4b53234b515a5820458a60441b2121592d
2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b
5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b
54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c6423
646164b0035158b00425b00425012046b01060482046b0106048590a2121
1b2121592d2cb012435c580cb00425b00425060c6423646164b807085158
b00425b00425012046b8fff060482046b8fff06048590a21211b2121592d
2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121
592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426
024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46232046
8a608a61b8ff8062232010238ab902a702a78a70456020b0005058b00161
b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1400188
535a58b910000020885458b202010243604259b12401885158b920000040
885458b202020243604259b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
02436042595959592d00000100000002e66700aac6ea5f0f3cf508190800
00000000a2e33c1d00000000b9d5b513fafafcfd10000815000000090001
00010000000000010000073efe4e00431000fafafe261000000100000000
00000000000000000000068a0600010000000000023900000239000002aa
00b803cb00700473001204730046071d005905c7005a01e7005c02aa006b
02aa0043031d001c04ac00550239007502aa0073023900930239fffd0473
0056047300a2047300330473004d047300260473005b0473005704730057
047300530473004102aa00c902aa00aa04ac005f04ac005504ac005f04e3
006a07cd003d05c7000005c7009605c7006105c700940556009504e30097
0639006205c700960239008c0473002305c7009904e3009d06aa009105c7
009806390059055600950639005905c700960556004a04e3002c05c70093
0556ffff078d0007055600000556fffd04e3001602aa00920239fffd02aa
002604ac00730473ffed02aa002a0473004904e300870473005504e30054
0473004102aa001804e3005404e30092023900930239ffa2047300890239
0093071d007e04e3009104e3005204e3008b04e3005b031d008704730030
02aa001f04e3008d0473000b063900090473000c0473000e04000022031d
003c023d00b0031d002d04ac004305c7000005c7000005c7006105560095
05c700980639005905c70093047300490473004904730049047300490473
004904730049047300570473004104730041047300410473004102390092
0239ffe90239ffcd0239ffd004e3009104e3005204e3005204e3005204e3
005204e3005204e3008d04e3008d04e3008d04e3008d0473004403330056
047300540473000d0473003b02cd00420473fffe04e3008b05e5fff705e5
fff7080000d802aa00bb02aa0005046400310800ffaa0639003f05b40098
046400320464003c0464003c04730001049c006f03f4002c05b4007a0696
00a1046400000231000002f6002502ec001a06250037071d005804e30057
04e3006502aa00c304ac0055046400540473ffec0464001f04e5001a0473
00600473006a080000c905c7000005c700000639005908000048078d0058
0473fffc08000000040000840400006902390098023900720464003103f4
002f0473000e0556fff70156fea90473ffe002aa004b02aa004b04e3001f
04e3001f047300440239009302390075040000710800000105c700000556
009505c7000005560095055600950239006a0239ffae0239ffbf0239ffc1
06390059063900590639005905c7009305c7009305c700930239009302aa
000302aafff302aa001302aa001a02aa00cd02aa009102aa002602aa0060
02aa00a002aa000304e3000a0239000a0556004a0473003004e300160400
0022023d00b005c7fffd04e300530556fff70473000e0556009504e3008b
04ac005504ac006d02aa005b02aa001902aa002806ac005c06ac005c06ac
0028047300000639006204e300540239008c0556004a0473003005c70061
0473005505c700610473005504e30054046bffed02aa01ea05c700000473
004905c700000473004905c7009405c0005105c7fffd0556009504730041
055600950473004104e3009d0239007904e3009d0315009504e3009a03d5
009005c7009804e3009105c7009804e300910639005904e3005205c70096
031d008705c70096031d00500556004a0473003004e3002c02aa001f04e3
002c03d5001e05c7009304e3008d05c7009304e3008d04e3001604000022
04e300160400002204cf009a063900560691005604eb004e04da004e03cc
004e0579004e0392003005b9004e046bffed04d500b8032b004f08c00029
0800004f040000990800004f040000990800004f040000980400009807d5
016a05c7008f04ab005504d5009d04ac005504d5022204d5010505abffe9
050001c905ab027e05abffe905ab027e05abffe905ab027e05abffe905ab
ffe905abffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c0
05abffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905ab
ffe905abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905ab02d605ab0066
05abffea05d5ffff04d500920800000007eb013007eb012007eb013007eb
012004d500b204d5008004d5002a082b0198086b01b807550010060000f4
0600006f0440003a0540003704c0003f0415004004000025060000550647
008c0473009005abffc701eb008d03d500860715002303e9001804d50092
02d6005c02d6005c04d500b202d6004d05c700000473004905c700610473
005505c70061047300550556009504730041055600950473004105560095
047300410639006204e300540639006204e300540639006204e3005405c7
009604e3009205c7000504e300190239ffba0239ffbb0239ffda0239ffda
0239ffe10239ffe20239006e02390075047300230239ffa205c700990473
00890473008d04e3009d0239ffed05c7009804e3009105c9009c04e3008e
0639005904e300520639005904e3005205c70096031d002a0556004a0473
003004e3002c02aa000705c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d078d0007063900090556fffd0473000e0239
008d05c70000047300490800ffaa071d00580639003f04e3005702aa00c9
078d000706390009078d000706390009078d0007063900090556fffd0473
000e0239009502aaffd70473000d04cd005a06ac005c06ac002906ac0030
06ac002f02aa00bc02aa002602aa00bb03b8fff405c7ffe806d3ffbb073f
ffbb03caffbb0699ffa6076bffc806b4ff9c0239ff2905c7000005c70096
05c000000556009504e3001605c700960239008c05c700990556000006aa
009105c70098052600660639005905c7009a0556009504cd005a04e3002c
0556fffd0556000006790056066a00620239ffcc0556ffff04eb004e039c
004e04e3008e0239008204a8006c04e200900473000f03af004e04e3008e
0453004e023900930476008e0473000f04e500900473000b0390004e04e3
005204f300760429004e04a80076049b00110607007606c2004e0239ffcd
04a8007604e3004e04a8007606c2004e055a00970715002f048900a405b1
00580556004a0239008c0235ffca0473002308c0001a0880009d07000037
04e2009a04fa000005c0009905c7000005c0009b05c70096048900a405b3
fffa05560095073b00170503002c05c0009905c0009904e2009a059d0020
06aa009105c700960639005905c000990556009505c7006104e3002c04fa
000006d400590556000005d8009a059f007d080a009a0827009a06f5001a
07d5009d05c0009b05b100570840009605c000040473004904f1005c04eb
0096035500880514fff90473004105acffff03fa001804eb008c04eb008c
040100880515001905eb009b04d5008804e3005204d5008804e3008b0473
005503eb00150473000e070000540473000c04eb008904a5007206ab008c
06c0008d05d5002806d5009504eb0099046b003806d5009104abfffb0473
004504e3000003550088046b005104730030023900930240ffd00239ffa2
07c000180740008c04e30000040100880473001204d5008803e500960393
00880800004108eb00a30620003002aa010102aa001e02aa003102aa0031
02aa010102aa007f02aa007e02aa008c02aa008c02aa010102aa001002aa
010102aa01210393007d02aa008c026500c802aa030202aaff0102aa00c9
04a90059049b004103a7000a0466003204ea0082022f0087034e005a04ed
00870503007d022f0087042c002803ed004b03f8004104e30087050a0037
022f00870316004b04e800500459000a04c0006404b2006403ff000a0418
000a04950082042c002805b8005a0563002d045e0087045e0087045e0087
0236005004090050068b0087022fffac042c0028042c002803f8ff1603f8
ff160479003205b8005a05b8005a05b8005a05b8005a04a9005904a90059
04a90059049b004103a2000a0466003204ea008202950000038100000503
007d02950000042c002803ed004b03f80041050a00370316004b04e80050
04c0006404b200640418000a04950082042c002805b8005a0563002d022f
0087049b004103ed004b04b2006404db00410000ffdc0000ff250000ffdc
0000fe51028d00ab028d00a002da004303c0007e0196ffba019c004601e5
0046019c0046019c004601ad0048019c004601b1004601510046047e0188
047e0150047e0104047e009e047e012d047e00ea047e00d5047e009c047e
00bc047e00ee04350085028d00c1043500b3060001000600010002be0058
06000100047e00a5047e00bd047e00de0600010006000100060001000600
01000600010001b100460600010006000100060001000600010006000100
06000100060001000600010004e6ffba0600010006000100060001000532
003905320039022cffba022cffba06000100060001000600010006000100
049e0034047800300430ffba0430ffba0376000a0376000a060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba05280097
046f000a0600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010001cf003001b1004601b1004601b1004001b100460600
0100060001000000ffdc0000fe510000ff160000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ffdc0000ff160000
ffdc0000ff200000ffdc0473002d08000000060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100028d007f028d00670600010005a0002e03c0007e
01e800000207ffc301bc005e01e0fffa039c0006039c000601bc005e01e0
001a05280097049e0011022cffba022cffba01bc008801e0001a05320039
05320039022cffba022cffba02be0036035200030532003905320039022c
ffba022cffba0532003c0532003c022cffba022cffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba049e00340478
00300430ffba0430ffba02be006902be006902be006902be00690376000a
0376000a0376000a0376000a073200400732004004deffba04deffba0732
00400732004004deffba04deffba0880004008800040062cffba062cffba
0880004008800040062cffba062cffba0430ffba0430ffba0430ffba0430
ffba0430ffba0430ffba0430ffba0430ffba0454003403c000460454ffba
02e2ffba0454003403c000460454ffba02e2ffba0610002f0610002f0270
ffba0298ffba04e6002704e600270270ffba0298ffba0454002904540029
02e2ffba02e2ffba039c0023039c002301e0ffba01e0ffba02e2002102e2
00210352ffba0352ffba0454003e0454003e022cffba022cffba02be0058
0352000303c0ffba039cffba039c0006039c000605280097046f000a0528
0097049e0011022cffba022cffba0454000004c4000003e400220454001a
03e400220454001a03e400220454001a0600010006000100019c0046019c
00460600010006000100060001000151004601b100460600010006000100
01ad004801e5004606000100060001000600010001b1004601b1004601b1
004601b1004601b1004001cf003006000100019c0046019c004606000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d00ca028d00c7028d00c606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010002be00690100ffba0800ffba1000
ffbb06d3005905b0005206a3009305cb008d0000fd880000fbc10000fc5f
0000fe310000fcad0000fd550000fe260000fdf10000fd180000fc690000
fd950000fbe00000fc700000fed40000fecd0000fea0041b007806ac005c
06ac00190000fe450000fd550000fda60000fc5f0000fe250000fd180000
fbe00000fafa0000fb360000fc700000fb870000fb9b0000fcce0000fc54
0000fbc30000fc940000fbf50000fdb00000fe590000fd7e0000fc820000
fd340000fe500000fe460000fcd10000fd3e0000fd020000fc3a0000fce9
0000fc260000fc070000fc2f0000fb9e0000fb760239009305c700000473
004905c700000473004905c700000473004905c700000473004905c70000
0473004905c700000473004905c700000473004905c700000473004905c7
00000473004905c700000473004905c700000473004905c7000004730049
055600950473004105560095047300410556009504730041055600950473
004105560095047300410556009504730041055600950473004105560095
047300410239006a0239005d0239008c023900930639005904e300520639
005904e300520639005904e300520639005904e300520639005904e30052
0639005904e300520639005904e3005206d3005905b0005206d3005905b0
005206d3005905b0005206d3005905b0005206d3005905b0005205c70093
04e3008d05c7009304e3008d06a3009305cb008d06a3009305cb008d06a3
009305cb008d06a3009305cb008d06a3009305cb008d0556fffd0473000e
0556fffd0473000e0556fffd0473000e05c70000047300490239ffca0239
ffca0639005904e3005205c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d05c7009304e3008d0000fef90000fef90000
fef40000feef0489fffd03550007073b001705acffff04e2009a04010088
04e2009a0401008805c7009604d500880473000104730012047300010473
0012055600000473000c059f007d04a50072059f009c04e3009205cf0059
0473004c0639005604e3005205320039022cffba0270ffba0298ffba04e6
0027022c0065022c0016022c0016022c0011022c0043022cffd20000fef0
01a8000f01a8fff502aa009002aa009001e8000001bc005e01bc005e0000
ffcb01bc000f01e0ffbf01bcfff501e0ffcd01bc001d01e0000901bc0088
01e0001a039c0006039c0006039c0006039c000605280097046f000a0532
003905320039022cffba022cffba0532003905320039022cffba022cffba
0532003905320039022cffba022cffba0532003905320039022cffba022c
ffba0532003905320039022cffba022cffba0532003905320039022cffba
022cffba0532003905320039022cffba022cffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba049e00340478
00300430ffba0430ffba049e0034047800300430ffba0430ffba02be004f
02be004f02be006902be006902be006902be006902be004f02be004f02be
006602be006602be006902be006902be006902be006902be002f02be002f
02be002202be00220376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a0376000a0376000a0376000a0376000a0376000a
0376000a0376000a0376000a073200400732004004deffba04deffba0732
00400732004004deffba04deffba073200400732004004deffba04deffba
0880004008800040062cffba062cffba0880004008800040062cffba062c
ffba0430ffba0430ffba0454003403c000460454ffba02e2ffba0610002f
0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298
ffba0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba
0298ffba0610002f0610002f0270ffba0298ffba04e6002704e6002704e6
002704e60027060e00290708002902e2ffba0456ffba060e002907080029
02e2ffba0456ffba045400290454002902e2ffba02e2ffba045400290454
002902e2ffba02e2ffba045400290454002902e2ffba02e2ffba060e0029
0708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e
00290708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba
060e00290708002902e2ffba0456ffba039c0023039c002301e0ffba01e0
ffba039c0023039c002301e0ffb101e0ffb1039c0023039c002301e0ffba
01e0ffba039c0023039c002301e0ffba01e0ffba0454003e0454003e022c
ffba022cffba0454003e0454003e0454003e0454003e0454003e0454003e
022cffba022cffba0454003e0454003e049e0034047800300430ffba0430
ffba02be005803520003031a001a031a001a031a001a039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c0006039c0006039c
0006039c0006039c0006039c0006039c0006039c0006039c000605280042
046fffd905280097046f000a022cffba022cffba039c0006039c00060528
0097046f000a022cffba022cffba05280097046f000a067f0044067f0045
067f0044067f004501a800280000fe290000fe8c0000ff250000ff230000
fefa0000ff7a0000fe5908fc003208ad00320000ffb50000ffb60000fef0
0000ff590000fe590000ff8c01b4000002f700000000fe850000ff0704cd
00320000ff580000ff580000ff59073200400732004004deffba04deffba
0880004008800040062cffba062cffba0454003403c000460454ffba02e2
ffba03c0007e02e2002102be0058022cffba0290ffba01f4002f01f4003b
01f4001201f400b101f4006d060e002907080029022f00870000fec80350
0000045e008703e4fff50454fff503e400220454001a03e400220454001a
03e400220454001a03e400220454001a03e400220454001a03e400220454
001a047e0072047e00bd03e4000f0454000f000000000000006c0000006c
0000006c0000006c0000006c0000006c0000006c0000006c0000006c0000
006c0000006c000000f60000018000000180000001800000018000000180
000001be0000021400000214000002140000021400000214000002140000
021400000214000002140000021400000214000002140000021400000214
000002140000021400000214000002140000021400000214000002140000
02fe000002fe0000039a0000039a0000039a0000039a0000039a0000039a
0000039a0000039a0000039a0000039a0000046a0000046a0000046a0000
06ca000006ca000006ca000006ca000006ca000006ca000006ca000006ca
000006ca000006ca000006ca000006ca000006ca000006ca000008d80000
09d400000b1000000c0000000e0c00000f0c000010e8000011e80000128a
0000128a000013b600001422000014220000150c000015fc000016f80000
16f8000017dc00001b2200001c4200001d2a00001e7e000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40000
20e4000020e4000020e4000020e4000020e4000020e4000020e4000020e4
000020e4000020e4000020e4000020e4000020e4000020e4000020e40001
0000068a00f2003c006f000600020010002f00550000064e106f00030002
0000000e00ae000000030000000000fe0000000000030000000700c400fe
0001000000000000007f01c2000100000000000300130241000100000000
00040013025400010000000000060013026700010000000000070062027a
000300010409000000fe02dc0003000104090001001803da000300010409
0002000e03f2000300010409000300260400000300010409000400260426
00030001040900060026044c000300010409000700c40472005400790070
00650066006100630065002000a900200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200070006c0063002e00200044006100740061002000a90020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e00200070006c0063002f0054
00790070006500200053006f006c007500740069006f006e007300200049
006e0063002e00200031003900390030002d0031003900390032002e0020
0041006c006c002000520069006700680074007300200052006500730065
00720076006500640041007200690061006c00ae00200054007200610064
0065006d00610072006b0020006f006600200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e00200070006c006300200072006500670069007300740065
00720065006400200069006e002000740068006500200055005300200050
006100740020002600200054004d0020004f00660066002e00200061006e
006400200065006c0073006500770068006500720065002e547970656661
636520a920546865204d6f6e6f7479706520436f72706f726174696f6e20
706c632e204461746120a920546865204d6f6e6f7479706520436f72706f
726174696f6e20706c632f5479706520536f6c7574696f6e7320496e632e
20313939302d313939322e20416c6c205269676874732052657365727665
6448424e4c4b432b417269616c2d426f6c644d5448424e4c4b432b417269
616c2d426f6c644d5448424e4c4b432b417269616c2d426f6c644d544172
69616ca82054726164656d61726b206f6620546865204d6f6e6f74797065
20436f72706f726174696f6e20706c63207265676973746572656420696e
2074686520555320506174202620544d204f66662e20616e6420656c7365
77686572652e00540079007000650066006100630065002000a900200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200070006c0063002e00200044
006100740061002000a900200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c0063002f005400790070006500200053006f006c00750074
0069006f006e007300200049006e0063002e00200031003900390030002d
0031003900390032002e00200041006c006c002000520069006700680074
007300200052006500730065007200760065006400480042004e004c004b
0043002b0041007200690061006c0052006500670075006c006100720048
0042004e004c004b0043002b0041007200690061006c002d0042006f006c
0064004d005400480042004e004c004b0043002b0041007200690061006c
002d0042006f006c0064004d005400480042004e004c004b0043002b0041
007200690061006c002d0042006f006c0064004d00540041007200690061
006c00ae002000540072006100640065006d00610072006b0020006f0066
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e00200070006c00630020
007200650067006900730074006500720065006400200069006e00200074
0068006500200055005300200050006100740020002600200054004d0020
004f00660066002e00200061006e006400200065006c0073006500770068
006500720065002ebe0054039a000f0101001fffc00398b310143240b803
99b30f1332404110039500500395000200b0034d00c0034d0002006f0391
007f03910002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020
038b0080038b000300a0038b00010020038b0040038b0002ffc0038bb313
163240b80383b20f1132b9ffc0037bb2303432b9ffc0037bb31018325041
14037800010365036e0023001f037e036e001e001f0363036e001d001f03
620364000d001fffc00340b30f1032804110033f0001033f03150029001f
034103160032001f0344031a001b001fffc00375b20e1132b9ffc00375b2
282a32410a034303180032001f030f030d0034001f03080307b2321f20bb
0340000100400388b3090b3240b80388b2101532bd038503070014001f03
800307b2171f0fbd030a002f030a0002ffc00354b3090d3290410c035400
a003540002001f036e0001009f036e00010040036eb2090b32410a034503
1c0016001f036b031d0015001f0346031eb2151fc0bb0393000100400392
b3090d3240b8033eb2083340b8033eb30d0e32c04109033e000100b0038e
00c0038e0002ffc00390b326383200412603280030032800020020037f00
30037f00020010038a0030038a0050038a006f038a007f038a009f038a00
0600000389003003890002002f037a0070037700900377009f037a0004ff
c00315b20f1032b9ffc00315b2242832b903190318b2321f10bb031a0001
ffc0031ab3090e3240b80318b2121332b9ffc00318b30c0e323fbd037300
4f0373000200400374b31718326fbb032a00010040032cb3181b3240b803
70b2090c32bd031703160032001fffc00316b20e1132bd031c031e001600
1f031d031eb2151fb0411f031e0001000f031f000102ca02d00015001f02
d302d5000d001f02cf02d0000d001f02cb02d0000d001f02cd02d0000d00
1f02ce02d0000d001fffc002d0b3090c3240b802d2b3090c32e0411c02e5
0001005f02dd009f02e5000202bb02c30030001f02da02b80032001f02d9
02b9003f001f02d802b80064001f02b902b80033001f02bab221c81fb802
b8b321c81f40b8039bb20d1632b9ffc002c3b22b2f32b9ffc002c3b21f25
32b9ffc002c3b2171b32b9ffc002c3b2121632412502c202c1001c001f02
d702c10024001f02c102c00022001f02bf02c00018001f02c0027400c800
1f02b50235003b001f02b40235003b001f02c402bc001e001f02b702b600
38001f02b3b20ec81fb802b0b207c81fb802afb206c81fb802aeb200c81f
b802afb2502f1fbc02ae02ab001a001f02adb2261a1fb802a8b326241f0f
bb0235000102a50274b21d1f12410a02a1015801f4001f02a000d801f400
1f001202a2b237c81fb80290b2bc201fb9029002904018374025402d40a6
033025302d30a6032025202d203720a6204110028e0005009f028b000102
8b028b003700200289003002890040028900900289b20437b041fd027400
c0027400020080027400a002740002006002740070027400020000027400
10027400020080027400f002740002003f0285004f028500020090027e00
90027f009002800090028100040090027a0090027b0090027c0090027d00
0400900274009002750090027700030070027e0070027f00700280007002
8100040070027a0070027b0070027c0070027d0004007002740070027500
70027700030060027e0060027f006002800060028100040060027a006002
7b0060027c0060027d000400600274006002750060027700030050027e00
50027f005002800050028100040050027a0050027b0050027c0050027d00
0400500274005002750050027700030040027e0040027f00400280004002
8100040040027a0040027b0040027c0040027d0004004002740040027500
40027700030030027e0030027f003002800030028100040030027a003002
7b0030027c0030027d000400300274003002750030027700030020027e00
20027f002002800020028100040020027a0020027b0020027c0020027d00
0400200274002002750020027700030010027e0010027f00100280001002
8100040010027a0010027b0010027c0010027d0004001002740010027500
100277000300e0027e00e0027f00e0028000e00281000400e0027a00e002
7b00e0027c00e0027d000400e0027400e0027500e00277b103d041c5027e
00d0027f00d0028000d00281000400d0027a00d0027b00d0027c00d0027d
000400d0027400d0027500d0027700030030027400400274000200c0027e
00c0027f00c0028000c00281000400c0027a00c0027b00c0027c00c0027d
000400c0027400c0027500c00277000300b0027e00b0027f00b0028000b0
0281000400b0027a00b0027b00b0027c00b0027d000400b0027400b00275
00b00277000300a0027e00a0027f00a0028000a00281000400a0027a00a0
027b00a0027c00a0027d000400a0027400a0027500a0027700030090027e
0090027f009002800090028100040090027a0090027b0090027c0090027d
000400900274009002750090027700030020027e0020027f002002800020
028100040020027a0020027b0020027c0020027d00040020027400200275
002002770003028101580801001f028001290801001f027f00ec0801001f
027e00d80801001f027d00b10801001f027c00a60801001f027b00820801
001f027a00370801001f027700260801001f027500200801001f0274001f
0801b21f370f41160235004f0235005f0235006f0235009f023500af0235
00bf0235000700af023500cf023500df023500ff02354022040f074f079f
07af07bf0705af07e007020f064f069f06af06bf0605af06e0060220411b
020d0001005f02350001008f02350001007f023500ef02350002002f0235
003f02350002003f0234004f0234000202350235023402344011ed20ef2a
01cf2a01bf2a01af2a018f2a01410902470104001e001f02200037020100
1f0158400c263e1fd8263e1f3726273e1fb8028eb6ec171fb226361fb801
bcb226361fb80129402b26361fec26361fb126361fa626361f8226361f37
26361f3226361f2d26361f2526361f1f26361f37262a1fb801584022263e
1fd8263e1fbc263e1f27263e1f21263e1f20263e1f370016160000001211
0840b9020d01a6b3c50d0009b801bcb227281fb801bbb227301fb801b8b2
274f1fb801b7b227621f410901b600270101001f01b5002002ab001f01af
b21fe41fb801adb21fe41fb801acb21fbb1fb801a8b21f341fb8015db227
2e1fb8015bb227cd1f410d0155001f0401001f0154001f0401001f015300
1f0201001f0152b21f561fb80151b21f291fb8012bb227261f410d012a00
270125001f0129015800e4001f0125001f0401001f0124b21fe41fb80123
b21f3b1fb80122b21f391f410d010800270801001f0106002d0101001f01
05001f0101001f0103b31fbb1fefb901580401400b1fed1f931fec1fe41f
eb1fb80201b21fd920b80401b21fcf25b80156400a1fbc2d9e1fbb1f411f
b2410a01580401001f00b101580401001f00b001580401b51fa625891f9b
b901580125b61f991f2e1f8e2db80801b51f8d1f291f89b901580401b21f
8220b802ab40131f801f301f742de41f731f4a1f611f521f5d25b802abb2
1f5c1fbc0801001f0059015802abb61f5025891f491fb80125b21f4725b8
0401400b1f461f791f401f271f3920bc02ab001f003801580401b21f372d
bc0125001f003201580125b61f2c1f341f2a25b80801b21f5537b8011140
2a07f00790075b0742073b07230722071e071d071408120810080e080c08
0a080808060804080208000814b8ffe0402b000001001406100000010006
04000001000410000001001002000001000200000001000002010802004a
00b013034b024b5342014bb0c063004b6220b0f65323b8010a515ab00523
4201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b58b101018e
59b0382bb00288b801005458b801ffb101018e851bb0124358b10100858d
1bb900010119858d5959001816763f183f123e113946443e113946443e11
3946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b
2b182b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0
ff1d594bb08153205c58b9020f020d4544b9020e020d45445958b9047002
0f455258b9020f04704459594bb0e453205c58b90020020e4544b9002702
0e45445958b908420020455258b9002008424459594bb8012553205c58b9
0026020f4544b90021020f45445958b90a0d0026455258b900260a0d4459
594bb8040153205c58b1d8204544b1202045445958b9250000d8455258b9
00d825004459594bb8040153205c58b9015800264544b1262645445958b9
23200158455258b9015823204459594bb02953205c58b11f1f4544b12d1f
45445958b9010d001f455258b9001f010d4459594bb02f53205c58b11f1f
4544b1251f45445958b90135001f455258b9001f01354459594bb8030153
205c58b11f1f4544b11f1f45445958b91428001f455258b9001f14284459
592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b65422b01b331757ec3456523456023456560234560b08b7668
18b080622020b17e754565234520b003266062636820b003266165b07523
6544b07e234420b131c34565234520b003266062636820b003266165b0c3
236544b0312344b100c3455458b1c3406544b23140314523614459b33f3c
5841456523456023456560234560b089766818b080622020b1583c456523
4520b003266062636820b003266165b03c236544b058234420b13f414565
234520b003266062636820b003266165b041236544b03f2344b100414554
58b141406544b23f403f452361445945695342014b5058b108004259435c
58b108004259b3020b0a124358601b2159421610703eb0124358b93b2118
7e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba
04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a804
00000b2b59b0102342b0112342002b2b2b2b2b2b2b2b00b01243584bb035
514bb021535a58b1262645b040614459592b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b737373737345b04061441800456944456944737373747373
7374737473742b2b2b2b2b2b2b2b2b2b2b2b007373737373737373737373
737373737373737373737374747474747474747474747474747474747474
74747575757374757575752b7300004bb02a534bb036515a58b1070745b0
40604459004bb02e534bb036515a58b1030345b0406044b1090945b8ffc0
6044592b4569440174007373732b4569442b012b435c58400a0006000702
a006a00702b9ffc00274b31a1d326fbd0277007f02770002ffc00277b22f
3132b9ffc00277b322253240b80274b32f353240b80274b3282a3240b802
74b21a2132b8ffc0b3371a1d32b8ffc0b3251a1d32b8ffc040112d1a1d32
9025902d9037a025a02da03706b8ffc0b6a61a1d321fa61fb8028eb22fa6
0300742b732b2b2b2b2b2b2b2b742b737459002b2b435c58b9ffc002a1b2
1c1d32b9ffc002a0b21c1d322b2b592b73012b2b2b2b002b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b73742b2b2b2b2b2b2b2b73
732b2b2b2b2b2b732b732b2b2b742b2b2b73737373732b73732b2b2b7300
2b2b2b2b7374732b732b2b2b2b752b2b2b2b2b2b2b2b752b2b2b2b2b732b
2b2b2b7374752b2b7373732b2b2b2b0000>
[8421 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>GUVBAA+Arial-BoldMT AddT42Char 
GUVBAA+Arial-BoldMT /CharStrings get begin
end
end
%ADOEndSubsetFont
[/N19 (GUVBAA+Arial-BoldMT) 1 TZ
525.24 205.44 m
%ADOBeginSubsetFont: GUVBAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GUVBAA+Arial-BoldMT gcheck setglobal} if
1 922 51 <00020095000004f805ba000f001b007740250605b914b918034705016705
d605021211250d0e0e001b10250201020f00081627af070107b8ffc0b309
0b3407b8028c40161f1d301d601d701d801d051d100f2001200030000200
b8028bb31c3153182b4e10f45d3c4dfd3c4d1071f62b714ded003f3c3f3c
fd3c12392f3cfd3c3130005d71015d331121201716161514060607062323
1902333236363534262726239501db010e527eaa62974e6ac9c1a2af7643
5e4835a005ba1621ddaf87b8691115fdd704c2fe602e624150680d0a>GUVBAA+Arial-BoldMT AddT42Char 
1 3072 72 <00020041ffe80427043e0014001c01a3b90010fff840460b3999099a0d96
10a805a70abb09bb0db81a0808140148024706460a4f1ea80db606b61ac7
0ac80cd60ad80cf807f70d0d1c0f1c15401b1d3415400e11340f15bf15cf
150315b8ffc0b30f1e3f15b8ffc0b30e173f15b8028d400c0f0e12500e60
0e020e181201b8ffc0b6191b3401331200b8ffc0b31d203400b8ffc0b322
293400b8ffc0b32b2d3400b8ffc0b3181c3400b8ffc0400f0e0f34a00001
0000100002005f1212b80274b3040b1218b8027440240b070021012f1521
4f0e010e1a2f1e5f1e6f1e9f1e041e0f2108400d0f3408191d6941182b4e
10f42b4ded4e105df65d4dedf4ed003fed435c584014184028143f18401e
0f3f18401b103f18401c113f2b2b2b2b593ffd435c58b90012ffc0b32814
3f12b8ffc0b31e0f3f12b8ffc0b31b103f12b8ffc0b21c113f2b2b2b2b59
f45d712b2b2b2b2b435c58b90000ffc0b2123900b8ffc0b2173900b8ffb0
b3090a3e00b8ffc0b241213f2b002b2b2b59e42b1112395d435c5840140e
400f1e3f0e401c113f0e401b103f0e400e173f002b2b2b2b592f3cfd2b2b
722b2b3c0111333130015d71005d2b010506062320272635100033320003
211616333236132626232207061702fa011836e9affeeb85690114d3ed01
1206fd40038261425a270378565c3c3c0101522f9aa1b591dd0108012bfe
c7febd7d8b48016c7a7f43437300>GUVBAA+Arial-BoldMT AddT42Char 
1 5880 85 <0001008700000337043e001000a84028970501090e01530566057505032f
12580e680e7012040a090f0c1f0c028f0cff0c023f0c4f0c020cb8027740
29070701000a0302060a28000910093009700904091a7f129f12025f127f
12af12d01204121000260103b80129400b02028001a001020119113fb901
1c00182b4e10f4713c4d10ed10fd3c4e105d71f65d194de400183f3c3f3c
3fed5d717239323130015d005d71004bb017534bb035515a58b10a323859
005d212111211536363332170726232206061101a0fee70105436b446059
57473d3b522f0426976b4435f52e41aafef1>GUVBAA+Arial-BoldMT AddT42Char 
1 2516 70 <00010055ffe8043f043e001900e14051580f59125916680f691269167d18
79199702970cc610c618d710d618e906e908e913e915f80613381338154a
124a164618590c690c073a1237163718037705770f8705860f8919a812a7
16b912b616090eb8ffc0b3181b340eb8ffc0b51214340e330db8ffc0b319
1e340db8ffc0b30f11340dba0104000a02744012110b0040181b34004012
1434003390010101ba0101000402744020170701401214340121002f0d40
1214340d214f0e010e1a1b072114191a5841182b4e10f44ded4e10f65d4d
ed2bf4ed2b003ffdf45de42b2b3ffdf42b2be42b2b3130005d7101715d01
052626232206151416333236370506062322001110003332160431feeb0e
634f697d7f6b50661501142bf4cde9feeb0116edc2e502ec32535491aabd
9c5b6f2fbec20126010401070125a700>GUVBAA+Arial-BoldMT AddT42Char 
1 5154 81 <0001009100000459043e0016009f4018071317135a08680804b804013408
34104408440fe9100506b80274401d11070e0d060c0b0b01000a02012616
0040202434af0001ff0001001a18b8ffc040162224349018a018027018f0
1802ef1801180a0b260c0eb80129b20d0d0cb8ffc0400f202434a00c01f0
0c010c19173f3c182b4e10f471722b3c4d10ed10fd3c4e105d71722bf671
722b3c4dfd3c003f3c3c103c3f3c3fed3130005d01715d21211134262623
2206061511211121153633321e02150459fee724513949742bfee701058b
d35d9a4f1f021eac65385084b2fe1f04269cb44368847b00>GUVBAA+Arial-BoldMT AddT42Char 
1 6946 87 <0001001fffe80291059d001900cd402920002001230a290f3a0e4a0e590f
07191500180316150017121314011712021401180309070a070c18b80101
400f0017a017b017036017a017c0170317b80104b2150114b80274b30015
0607b80274400e0c0b092f0a2f00002f015f010201b80104402818032617
1255153f149f14af1403601480149014d014f01405001410142014301404
14191a78a0182b4e10f45d71724bb037534bb03b515a58b90014ffc03859
3c4dfc3cfd3cf45d3c10f419e400183fed3f3cfd3c10f45d71e411123911
330f0f0f0f3130015d011523111416163332371706232226262726351123
3533352511027ac00b271c274a18627c4c7a390b098181011a0426e0fe54
822b1c1bda2a335145319501cfe0d3a4fe89>GUVBAA+Arial-BoldMT AddT42Char 
1 1738 68 <00020049ffe8042e043e0023003201714068071a081c051d161a4a1b481c
4925db10df11093619461957266619672686269219931aa61ab91bc71ac8
1b0c06060d151606191627062915591977028602a606b506c6060cbf34d9
10021d243231112c0d24402b2e3424402228342440191d346f24fc240224
461db8ffc040300e0f343d1d01001d101db01df91d041d1d2c013300400e
0f340f001f0002005521401c113f21401b103f2140181a3421b80274b504
070c0d0a2cb8ffc0b31c113f2cb8ffc0b31b103f2cb8ffc0b3181a342cb8
02744040140b1e3126082909280d591f0c9f0c021f0c01ff0c010c400e16
340c1a4f340134600001008e300101013329215f1701df17014f175f176f
17031719336941182b4e10f45d71724dedf471ed5d4e105df62b5d71724d
edf4e4fd3c003fed2b2b2b3f3c3ffd2b2b2bf45d2be412392f5d712bb106
02435458b22f1d017159edb10602435458b90024ffc0b71b1d3454246424
025d2b595d2b2b2b111239030e103c3c3c313001715d005d710127363633
321616150314161721262726270606232226353436363736373534262322
060106060706151416333237363736350165ff2bd2cfbcb84b031b25feea
0b10070348a45da4bd569b92c54c506f4b54015e36ea243758444c453310
0b02e22e9a945989b7feb88c854c1c3719084646b2885a8d4b1c25201c51
453bfed2123218273c3b563226372465>GUVBAA+Arial-BoldMT AddT42Char 
1 3852 74 <00020054fe510460043e0023002f014e4062771d871d02120c0d7031860d
8031042001230223033001330233034001430243035b0f59145925562956
2b592f6b0ff811f813123b0d33163b28332c4b0d44164b28442cf00cfd17
0a8e0c010c0b0c0d0b2a0c0d270e1617152d0d0c171604182401b8ffc0b5
191b34013300b8ffc0b30e113e00b8ffc0b30b0c3e00b8ffc0b3282a3400
b8ffc0b323253400b8ffc0b331343400b8ffc04009151b34600001005f05
b80274b21f0f27b80274b20e0a2db80274400b15071819062a290b261a18
b80129400919191a1a8f31013101b801b8400a00332421121930583c182b
4e10f44dedf4ed4e1071f63c4d10ed10fde4003f3c3fed3fed3ffdf4722b
2b2b2b2b2bb10602435458b90000ffc0b30e113400b8ffc0b2090c342b2b
59e42b01111217390011123939111239390708103c313000715d015d7143
58400d690f691469256729662b692f065d59005d17051617163332373637
3635350623222726351000333217352111140e0223202635341314163332
36353426232206790141081d28566e3725130d7ec0d67d620101bfc58001
073e70bb8ffef2e2fc8360678e88686583462738151e211631235e9bacb5
8fd5010b011aad95fc47bcba6a3cb98e0e0283a99da19ea5a09d>GUVBAA+Arial-BoldMT AddT42Char 

1 0 3 <> GUVBAA+Arial-BoldMT AddT42Char 
1 5388 82 <00020052ffe8049a043e000d001900974048e801e708f713f71504c702e8
05021219051909025910561356165918970298069808970cb809d502db05
dc09d50ce705e706e80d10a708cb02cc06c308c60c057508890684080311
b80274b20a0b17b80274401404071439071a601b701b021b0e2100191a58
41182b4e10f44ded4e1071f64ded003fed3fed313000715d015d71435840
09691066126616691804015d59005d015d13341236333200151400232224
26251416333236353426232206528afd9cf10134fec9ec92fef78a012096
6e6e95956e6e9602228c01068afec7eff1fec384ffa89ea8a8a09ca8a800
>GUVBAA+Arial-BoldMT AddT42Char 
1 3596 73 <00010018000002e605d3001600b840323604012a04201020115904801805
0804bf180215161102141216110e130f00100e13010010021409080f0b01
5f0bff0b020bb80274400a0601110f1601ff160116b80274401e10000001
f00001000613140a09333f084f085008030828102f115f110211b8010440
0d0e132602145f00a016c0160216b8ffc0b6090c3416191778b902690018
2b4e10f42b713c4dfc3cfd3cfc5d3cf45d19e400183f3c3f5d713cfd5d71
3c3ffd5d7139320f0f0f0f313001715d005d133335343636333217072623
2206151533152311211123189c399975787326433e3d35d2d2fee79c0426
5086845324c41039514bddfcb7034900>GUVBAA+Arial-BoldMT AddT42Char 
1 5046 79 <00010093000001ac05ba00030053b90005ffc04029110a3f400550050280
05b005c005d005ef05051f0560057f05a005b0050502010003000a020326
0100b8ffc040092124340019043f3c182b4e10f42b3c4dfd3c003f3c3f3c
313001715d722b3311211193011905bafa46>GUVBAA+Arial-BoldMT AddT42Char 
1 7806 90 <00010009000006380426000c02274031000b010a0006020a0705091b0016
021e0411051a0714091e0a110c0c122b032b06230b390339064803480698
039806090eb8ffc040782c47340a000b04040504090b0a040c1b001a0416
051409190a150c0c2300280427052d09280a270c310037053e0946004702
4705480749097700780477057809780a770c8700880487058809880a870c
d900d904d505d509d90ad50cea00ea04e405e409ea0ae40cf900f904f605
f807f609f90af60c2d05b8ffd340091b3a3404261b3a3409b8ffda40091b
3a340a261b3a340cb8ffd340091b3a3400261b3a3406b8ffc0b3193a3403
b8ffc0b7193a340b40193a34b10602435458b408010e0d06b8ffc0b30921
3403b8ffc040150921340b40092134030b060300010704010609000a003f
3c3f3c3c111217392b2b2b01111239391bb4c20b040520b8ff4db3060a09
20b8ff4c403203000c200b0603030c000201040c03050a0b070908060807
0705050404020201060c0a0a0909000a2f0e3f0e020e17171a084109010e
00200006026d000b026d00400003010eb42001190dc4b9011a00182b4e10
f41a194dfd1a18fdfd1a19fd184e456544e65d003f3c103c103c3f3c103c
103c103c103c0111123939123939113939123939001117392b2b2b593130
002b2b2b012b2b2b2b2b2b015d712b005d435c58b40b400d3906b8fff8b2
0d3903b8fff8b60d390b400c3906b8fff0b20c3903b8fff0b20c3906b8ff
e0b20b3903b8ffe0b10b39002b2b2b2b2b2b2b2b59015d005d2101211313
21131321012103030159feb00111c7b7010fb1cb0115feabfef2b7b40426
fd4802b8fd4802b8fbda02abfd55>GUVBAA+Arial-BoldMT AddT42Char 
1 4746 78 <000100890000045f05ba000b00f3b90003ffddb30d113f03b8ffc0407d19
2d3407031003130627096606af0abf0ac809cb0ada0a0a53036003020d07
180946065708760605b609df04ed04fc04f506054e074e0866067d048c04
9b049c059a069a079a080a1f0412062b042b052a062a072a082f0d4b044b
050a060607090a09080a050a090306040b050406020100000b0b08070a03
0a0a0b04b8026d401a052f08391f070107650d020b26018000011f000100
190c3f7b182b4e10f45d713c4dfd3c1910f67118edf4ed103c103c003f3c
3c103c3f3c3f3c12173987087d10c4083cb10602435458b90003ffc8b209
2134002b593130015d5d5d7100725d2b2b33112111012101012101071189
01190149015afe950185fed1fef58305bafcf60176fe7cfd5e01dd89feac
>GUVBAA+Arial-BoldMT AddT42Char 
1 4328 75 <000100920000045905ba001600b2402b0f011f0139013302331042014211
de01f9010907051605240258116811050101021314111213031402010fb8
0274401d0307090a0a14150a1600000b0a26080940202434af0901ff0901
091a18b8ffc040162224349018a018027018f01802ef1801180014261615
b8ffc0400f202434a01501f015011519173f3c182b4e10f471722b3c4dfd
3c4e105d71722bf671722b3c4dfd3c003f3c3f3c3c103c3fed3939111739
030e103c083c3130015d005d01113633321e021511211134262623220606
1511211101ab88bd619c4f1dfee720513d466e33fee705bafde59f487088
8ffd910231a75a35448986fdec05ba00>GUVBAA+Arial-BoldMT AddT42Char 
1 4584 76 <00020093000001ac05ba000300070077b90009ffc0403f110a3f40095009
028009b009c009d009ef09051f0960097f09a009b0090503060700050403
0f00014000d000e00003005d02010006050607040a0207260104b8ffc040
092124340419083f3c182b4e10f42b3c4dfd3c003f3c3f3c3f3cfd5d713c
0305103c3c103c3c313001715d722b1311211101112111930119fee70119
04b60104fefcfb4a0426fbda>GUVBAA+Arial-BoldMT AddT42Char 
1 6108 86 <00010030ffe80410043e002a02c240c00611062308271711172398129814
9727952a09071446140212bb0db90ec721e523f80df62206290d550d650d
950b9712a722b90c07412340244426672264268712871486228324093726
4506460b4a0d4f0f462142220722242726370c352135223523352407060a
05110921180d270c22222223072422402c730c781479157629752a881584
2a9a15952ab422b4230d80018f178c18992aa92ab02c0617211640212334
16401c1f341f1601df16011633082150258f25022540181d34251a2cb8ff
c04017110a3f502c01302c012f2c012c1e213010011033012100b8ffc0b3
0f093f00b8ffc0b3110a3f00b8ffc04009090d3400192b78b8182b4e10fc
2b2b2b4dedf471ed4e105d71722bf62b714dedf471722b2bed00b1060243
54584035060101060116012622362146215401591764016917f6010a0117
02041a21220228130d0c02281a5f04010446280b501a011a4613073ffd5d
3ffd5d1112173911121739111217395d711bb90022ffcbb3282a3421b8ff
cbb3282a3422b8ffe0b31e243421b8ffe0b31f243422b8ffe0b3191a3421
b8ffe0401b191a346b0d0136224622980d9422c422d4220621220c0d0404
1a00b8ffc0b5191b34003301b8ffc0b3172d3f01b8ffb0b3090a3e01b8ff
c0b322253401b8ffc0401d1a1c3400013001400150010460018001f00103
00011001500160010401b8ffc0b313163401b80101404d0004015f04f004
020446280b1640191b3416331740172d3f1740090a3e174035373417402b
2e34174025293417401a1c340f171f175f176f170417551a402224340f1a
01501aff1a021a4613073ffd5d712bf45d2b2b2b2b2b2be42b3ffd5d71f4
2b5d71722b2b2b2be42b111217395d712b2b2b2b2b2b59313001715d0071
7171715d5d435c58b90024ffc940090b123f0f280b123f21b8ffecb60d39
0c140c3921b8ffecb20c3922b8ffeab10b39002b2b2b2b012b2b5900715d
132516163332373635342726272427263534363332161705262623220706
1514171604171615140623222630011a126e636d3725141549feac5b7eda
e5dad428fef7115f586f30201c2601c15958f4efd9fd012f2b5255281c2f
201514114b3e56998abc8e8b313e421f16231e151c664a4b8692d2b0>GUVBAA+Arial-BoldMT AddT42Char 
1 7234 88 <0001008dffe8045304260016009c401757116711960503090619063c023c
114b024b11e702070fb802744011040b16000a1514140a09061314261515
00b80129400e1640202434af1601ff1601161a18b8ffc040162224349018
a018027018f01802ef1801180a0b260908b8ffc0400f202434a00801f008
010819173f3c182b4e10f471722b3c4dfd3c4e105d71722bf671722b4ded
3c10fd3c003f3c3c103c3f3c3fed3130005d015d21350606232226263511
21111416163332363635112111034e3abd696baa4c01191f523f48722a01
199f55625eaa9602a0fe18e0653b4f75e401c0fbda00>GUVBAA+Arial-BoldMT AddT42Char 
1 108 11 <0001006bfe51026805d300100046400e280fa70302080901000910001208
bd012200090001012200000294400a09f30c9b200430040204b80296b311
a56b182b10f65dedfdf4ed10ed003f3f103c103c3130015d012326023510
13363733020215141217160265c199a0635684c089673d3523fe51e701f2
e901210102e0bdfed1fe57eea4fea89b6600>GUVBAA+Arial-BoldMT AddT42Char 
GUVBAA+Arial-BoldMT /CharStrings get begin
/P 51 def
/e 72 def
/r 85 def
/c 70 def
/n 81 def
/t 87 def
/a 68 def
/g 74 def
/space 3 def
/o 82 def
/f 73 def
/l 79 def
/w 90 def
/k 78 def
/h 75 def
/i 76 def
/s 86 def
/u 88 def
/parenleft 11 def
end
GUVBAA+Arial-BoldMT /Encoding get
dup 80 /P put
dup 101 /e put
dup 114 /r put
dup 99 /c put
dup 110 /n put
dup 116 /t put
dup 97 /a put
dup 103 /g put
dup 32 /space put
dup 111 /o put
dup 102 /f put
dup 108 /l put
dup 119 /w put
dup 107 /k put
dup 104 /h put
dup 105 /i put
dup 115 /s put
dup 117 /u put
dup 40 /parenleft put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N19 [0.0 14.04 -14.04 0.0 0.0 0.0] Tf
(Percentage of total work that is in stateful filters \()
[9.36478 7.80624 5.46167 7.80624 7.80624 8.57833 4.67522 7.80624 8.57833 7.80624 3.90312 
8.57833 4.67522 3.90312 4.67522 8.57833 4.67522 7.80624 3.90312 3.90312 10.9231 8.57833 
5.46167 7.80624 3.90312 4.67522 8.57833 7.80624 4.67522 3.90312 3.90312 7.80624 3.90312 
3.90312 8.57833 3.90312 7.80624 4.67522 7.80624 4.67522 7.80624 4.67522 8.57833 3.90312 
3.90312 4.67522 3.90312 3.90312 4.67522 7.80624 5.46167 7.80624 3.90312 4.67522 ] pdfys
%ADOBeginSubsetFont: FAGBAA+Arial-BoldMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (FAGBAA+Arial-BoldMT)
%%Title: (FAGBAA+Arial-BoldMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /FAGBAA+Arial-BoldMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-628 -376 2000 1010} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1674 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A93
6AA182F5809A9> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /FAGBAA+Arial-BoldMT-Identity-H /Identity-H 0 [/FAGBAA+Arial-BoldMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N18 (FAGBAA+Arial-BoldMT-Identity-H)
/N18 (FAGBAA+Arial-BoldMT-Identity-H) /Identity-H [ (FAGBAA+Arial-BoldMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
525.24 534.66 m
%ADOBeginSubsetFont: FAGBAA+Arial-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/FAGBAA+Arial-BoldMT 1 GetGlyphDirectory
305 <001C60D8A8C9B62184868FF8F6AC5EADD5F019F35F7B7AB4A55E2290FA2
792FC75A3C2D61F0EB042BBEB62CC43A7AF977A4F31CA859926AC35F4855608F
68D5A1E162C2A220D877AA7D53DDB0A788D2AC889EB80F2C3AFCCBBCF58872F1
2DE5BED0D95475655602FC061E76B714B5FACAD441FDF46787DB5EA613E1FE65
670100C30A2AA1D87D4E39A70A895> |
!
end
end end
%ADOEndSubsetFont
/N18 [0.0 14.04 -14.04 0.0 0.0 0.0] Tf
(\0011) show
525.24 544.264 m
%ADOBeginSubsetFont: GUVBAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GUVBAA+Arial-BoldMT gcheck setglobal} if
1 246 12 <00010043fe51024005d30010004940182702270a6702670a9702a702a80e
07090810000810001210bd012200000009012200000294b408f3059b0cb8
0296b3126a43182b10f6edfde4ed10ed003f3f103c103c3130015d133e03
3534020333161215140702034553443a1c6689bf97a7424bacfe51b2bef8
df75ee01a9012fd7fe1ef8d1effef4fefb00>GUVBAA+Arial-BoldMT AddT42Char 
GUVBAA+Arial-BoldMT /CharStrings get begin
/parenright 12 def
end
GUVBAA+Arial-BoldMT /Encoding get
dup 41 /parenright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N19 [0.0 14.04 -14.04 0.0 0.0 0.0] Tf
(\)) show
462.36 78.36 m
%ADOBeginSubsetFont: GUVBAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GUVBAA+Arial-BoldMT gcheck setglobal} if
1 1130 54 <0001004affe604f205d3002c01d0403db911b81db628c62c040713071517
131715182b650565287406780d7428d90cd6230c590a550e55225923680c
661267216928672c771d861d96210c1223b8ffe0b31e1f3423b8ffe04065
191a3451225123c122c123047122712381228123e122e123062b0a2a0d24
222423390d34234b0a4b0d442243236a0d6523790d7a22890d8a22a60aa7
0da82213090a090d06220623190a190d16220722230a0d04011756184019
20346f18016f189f180218ba0265001bffc0400c1a391f1b011b2d140300
4801b8ffc040491a203430014001500160019001a001b001c0010801ee04
401a39100401042d2a0918efff17011740131734174b0727261a2e1f27a0
10b01002104b01ef11200030000200192dd253182b4e10f45d4b5358b100
4038594dedf45ded4e10f64dedf42b72ed003ffd712bf45d2be43ffd712b
f45d722be41217395d5d71722b2b435c58b90022ffe0b31b1d3e23b8ffd0
b31b1d3e23b8ffe3b2133922b8ffe0b2133923b8ffc9b2123922b8ffd040
0f12390d2012390a2012390a200f3922b8ffe8400e0c390d200d390a180d
390a1813392b2b2b2b2b2b2b2b2b2b2b2b2b59b1060243545840153a0a3a
0d352235234b0a490d43224623a60aa9220a005d593130005d71015d1325
161633323635342627262726272635343636332004170526262322070615
141716041616151406042320004a01201a9f878f913d4c34b9ee60877fef
a90114011707fed8137d7d81492f2c3801b0cf758cff00bffeeafed601dd
1c9188795134491b122e3b5679ae70c366f2ca0d716335223934252f666d
bd8b7edc6b010100>GUVBAA+Arial-BoldMT AddT42Char 
1 5628 83 <0002008bfe6c0497043e0010001c009a402e3813481302123403390d3913
341b4403490d4913441bf91b095606560a591256165618591cf607f91b08
0100061ab80274b2050714b8027440160b0b100f0e1721081a701e011e11
290e0e0f26101001b80129400b700080000200191d3f41182b4e10f4714d
ed3c10fd3c10e44e1071f64ded003f3c3fed3fed3f3c3130015d005d0143
58400d6606660a691266166618691c065d59005d13211536363332001110
002322262711210114163332363534262322068b010633ae6ab90102fefc
b9588f4ffee701168e6662828663678804269c5064fedefefdfef6fed946
55fde903b9b3ab9db3a7a29f>GUVBAA+Arial-BoldMT AddT42Char 
1 2832 71 <00020054ffe8046105ba000f001c0090402d125906590a59125616561859
1c98079909f80909701e801e023a03340c3a1534194a03440c4a15441999
090914b80274b2050b1ab80274400e0b070e0f0001000a17290e0d2601b8
0129400f0f001a8f1e011e102108191d583c182b4e10f44ded4e1071f63c
4dedfd3ce6003f3c3f3c3fed3fed3130005d01715d4358400d6906690a69
1266166618691c065d592121350606232200111012333217112101141716
3332363534262322060461fefb41b15ab7fefbfec2b2820119fd122f447a
6188846764879c5b5901270108010e0119940210fc70aa4c6ea5a4b7a19f
>GUVBAA+Arial-BoldMT AddT42Char 
1 532 39 <000200940000056105ba0010001f007f40332805280a47176504650c052a
173917481659166816053917361b871b9905960b051f1125010002131225
0f10081927af070107b8ffc0b3090b3407b8028c40138021012021302102
2111122000201030100210b8028bb3203153182b4e10f45d3c4dfd3c4d10
5d71f62b714ded003f3cfd3c3f3cfd3c3130005d71015d13213217161612
1514070607060706232101113332373e023534262627262394021db76081
b8602d37664d8362a4fdd30128dd7c37485f3c3c6c533eb505ba1c26c2fe
e7ceb583a0634b2a1f04c2fc350e1256c5aaaab666120e00>GUVBAA+Arial-BoldMT AddT42Char 
1 7466 89 <0001000b0000045a0426000b011b401505281a2f3407281a2f3406281a2f
3408281a2f3403b8ffd8b31a2f3404b8ffc040201a3a349a040106030b08
080a0c0b1501150212031a091a0a22002d0bc70b0c00b8fff040161d2034
0a00050b1400190b25002a0b34003a0b870009b10602435458b40a010d0c
04b8ffc0400b091734040100090106000a003f3f3c1112392b0111123939
1b40120b000a040b0a0909020201060b000a09390db8ffc040181c28340b
0d1f0d300d400d040d17171a100a3f0a4f0a030ab80230400b0402390b04
3f044f040304ba02300001ff80400f0c350001200140010301190cc4a018
2b194e10f45d2b184ded5ded10fd5d194e456544e65d2b184ded003f3c3f
3c103c103c12390112393959313001712b5d005d2b012b2b2b2b2b210121
13173637363713210101b7fe540127c83a17060e10ca0121fe5a0426fde2
b545162d2d021efbda00>GUVBAA+Arial-BoldMT AddT42Char 
GUVBAA+Arial-BoldMT /CharStrings get begin
/S 54 def
/p 83 def
/d 71 def
/D 39 def
/v 89 def
end
GUVBAA+Arial-BoldMT /Encoding get
dup 83 /S put
dup 112 /p put
dup 100 /d put
dup 68 /D put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N19 -12.96 Tf
( Speedup of Data and Pipeline Parallel over Data Parallel )
[-3.60158 -8.64182 -7.91587 -7.20317 -7.20317 -7.91587 -7.91587 -7.91587 -3.60158 -7.91587 -4.31299 
-3.60158 -9.35453 -7.20317 -4.31299 -7.20317 -3.60158 -7.20317 -7.91587 -7.91587 -3.60158 -8.64182 
-3.60029 -7.91587 -7.20317 -3.60029 -3.60029 -7.91587 -7.20317 -3.60158 -8.64182 -7.20317 -5.03895 
-7.20317 -3.60029 -3.60029 -7.20317 -3.60029 -3.60158 -7.91587 -7.20317 -7.20317 -5.03895 -3.60158 
-9.35453 -7.20317 -4.31299 -7.20317 -3.60158 -8.64182 -7.20317 -5.03895 -7.20317 -3.60029 -3.60029 
-7.20317 -3.60029 -3.60158 ] pdfxs
465.6 654.6 m
/N17 [0.0 15.96 -15.96 0.0 0.0 0.0] Tf
(1) show
433.8 650.64 m
/N17 [0.0 14.64 -14.64 0.0 0.0 0.0] Tf
(1) show
445.08 660.6 m
(2) show
0.75 w
n
430.8 660.72 m
438.96 654.6 l
/E31 /ColorSpace findRes cs 0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
398.4 649.32 m
(1) show
410.16 657.12 m
(4) show
n
395.52 659.64 m
403.68 653.64 l
/E31 /ColorSpace findRes cs 0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
348.36 651.84 m
(1) show
360.12 660.12 m
(8) show
n
345.48 660.36 m
353.64 654.6 l
/E31 /ColorSpace findRes cs 0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
284.64 651.24 m
(1) show
299.52 656.641 m
(16)
[8.13984 8.13984 ] pdfys
n
281.76 659.88 m
289.92 653.64 l
/E31 /ColorSpace findRes cs 0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
218.64 648.36 m
(1) show
233.04 653.521 m
(32)
[8.13984 8.13984 ] pdfys
n
216.12 656.4 m
223.92 650.52 l
/E31 /ColorSpace findRes cs 0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
172.08 648.84 m
(1) show
183.0 657.601 m
(64)
[8.13984 8.13984 ] pdfys
n
168.72 659.52 m
176.52 653.64 l
/E31 /ColorSpace findRes cs 0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
136.44 651.84 m
(1) show
150.0 656.641 m
(128)
[8.13984 8.13984 8.13984 ] pdfys
n
132.72 661.2 m
141.12 655.08 l
/E31 /ColorSpace findRes cs 0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
102.48 654.6 m
/N17 [0.0 15.96 -15.96 0.0 0.0 0.0] Tf
(0) show
490.08 697.2 m
%ADOBeginSubsetFont: GUVBAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GUVBAA+Arial-BoldMT gcheck setglobal} if
1 766 41 <000100970000048405ba00090072403f0805040605250720083008bf08df
08042f08900802080800030425020102090008073f064f06020652030002
01021a200b300b020b04092001200030000200b8028bb30a3153182b4e10
f45d3c4dfd3c4e105df65d3c4df45d3c003f3c3f3cfd3c12392f5d713cfd
3c0305103c3c3130331121152111211521119703edfd3b0264fd9c05baf8
fea5f8fd9100>GUVBAA+Arial-BoldMT AddT42Char 
GUVBAA+Arial-BoldMT /CharStrings get begin
/F 41 def
end
GUVBAA+Arial-BoldMT /Encoding get
dup 70 /F put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N19 -14.04 Tf
( Faction of stateful work in )
[-3.96209 -8.57974 -7.80764 -7.80764 -4.67662 -3.90452 -8.57974 -8.57974 -3.96209 -8.57974 -4.67662 
-3.96209 -7.80764 -4.67662 -7.80764 -4.67662 -7.80764 -4.67662 -8.57974 -3.90452 -3.96209 -10.9245 
-8.57974 -5.46307 -7.80764 -3.96209 -3.90452 -8.57974 -3.96209 ] pdfxs
308.159 697.2 m
%ADOBeginSubsetFont: GUVBAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GUVBAA+Arial-BoldMT gcheck setglobal} if
1 2264 69 <00020087ffe8049405ba000f001c009db90012fff840310b39371b471b02
125606560a56165618591cf7070635043b0d3b13351b45044b0d4b13451b
940799090a0c0e010201001ab80274b2050714b8027440130b0b0f000a17
21081a701e011e10290203260fb80129400c01700080000200191d3f4118
2b4e10f4713c4dedfd3ce64e1071f64ded003f3c3fed3fed3f3c31300071
5d015d4358400b6606660a66166618691c055d59005d2b33112111363332
1211100023222627151314171633323635342623220687011982b2c2fefe
fdb95bb140123449795d838467658605bafdf094fee7fef9fef0feda5b59
9c022aa54f709fabb6a19d00>GUVBAA+Arial-BoldMT AddT42Char 
GUVBAA+Arial-BoldMT /CharStrings get begin
/b 69 def
end
GUVBAA+Arial-BoldMT /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(the bottleneck stateful filter \()
[-4.67802 -8.58114 -7.80904 -3.96349 -8.58114 -8.58114 -4.67802 -4.67802 -3.90593 -7.80904 -8.58114 
-7.80904 -7.80904 -7.80904 -3.96349 -7.80904 -4.67802 -7.80904 -4.67802 -7.80904 -4.67802 -8.58114 
-3.90593 -3.96349 -4.67802 -3.90593 -3.90593 -4.67802 -7.80904 -5.46447 -3.96349 -4.67802 ] pdfxs
116.039 697.2 m
%ADOBeginSubsetFont: FAGBAA+Arial-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/FAGBAA+Arial-BoldMT 1 GetGlyphDirectory
541 <001C60D8A8C9B7D7E8F5F68EA93907297E01A9556B5829D1369AB80E1D7
79E4246E6A766ACBECAF54FB01833505B64765B49918F91903BDB2A17E6D2E99
24CC3B2BC91CED9E6757F060C9D405EAA35C44F80FA27945018849EC12DEA152
9F0E2A2> |
!
end
end end
%ADOEndSubsetFont
/N18 -14.04 Tf
(\002\035) show
107.399 697.2 m
%ADOBeginSubsetFont: GUVBAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GUVBAA+Arial-BoldMT gcheck setglobal} if
1 446 18 <0001fffdffe7023b05d300030038401d0001014902031402020302010003
000a01eb021a0503eb001904936c182b4e10f44ded4e10f64ded003f3c3f
3c87052e2b7d10c431300701330103016bd3fe911905ecfa1400>GUVBAA+Arial-BoldMT AddT42Char 
GUVBAA+Arial-BoldMT /CharStrings get begin
/slash 18 def
end
GUVBAA+Arial-BoldMT /Encoding get
dup 47 /slash put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N19 -14.04 Tf
(/) show
103.438 697.2 m
/N18 -14.04 Tf
(\0011) show
93.8375 697.2 m
%ADOBeginSubsetFont: GUVBAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GUVBAA+Arial-BoldMT gcheck setglobal} if
1 384 17 <00010093000001ac01190003002440150238000a02260f001f0020003000
040019046776182b4e10f45d4dfd003f4ded3130331121119301190119fe
e700>GUVBAA+Arial-BoldMT AddT42Char 
GUVBAA+Arial-BoldMT /CharStrings get begin
/period 17 def
end
GUVBAA+Arial-BoldMT /Encoding get
dup 46 /period put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N19 -14.04 Tf
(\) . )
[-4.70751 -3.96209 -3.93541 -3.96209 ] pdfxs
Q
/FAGBAA+Arial-BoldMT /CIDFont _pdfUndefineResource
/FAGBAA+Arial-BoldMT-Identity-H /Font _pdfUndefineResource
/N18 /Font _pdfUndefineResource
/GUVBAA+Arial-BoldMT /Font _pdfUndefineResource
/N19 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font ArialMT
%%EOF
