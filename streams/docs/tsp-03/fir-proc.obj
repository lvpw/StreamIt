%TGIF 4.1.42
state(0,37,100.000,0,256,0,16,1,9,1,1,0,0,1,0,1,0,'Courier',0,57600,0,0,0,10,1,0,1,1,0,16,0,0,1,1,1,0,1088,1408,0,0,2880,0).
%
% @(#)$Header: /afs/csail.mit.edu/group/commit/reps/projects/streamit/cvsroot/streams/docs/tsp-03/fir-proc.obj,v 1.1 2003-02-07 21:00:54 dmaze Exp $
% %W%
%
unit("1 pixel/pixel").
color_info(11,65535,0,[
	"magenta", 65535, 0, 65535, 65535, 0, 65535, 1,
	"red", 65535, 0, 0, 65535, 0, 0, 1,
	"green", 0, 65535, 0, 0, 65535, 0, 1,
	"blue", 0, 0, 65535, 0, 0, 65535, 1,
	"yellow", 65535, 65535, 0, 65535, 65535, 0, 1,
	"pink", 65535, 49344, 52171, 65535, 49344, 52171, 1,
	"cyan", 0, 65535, 65535, 0, 65535, 65535, 1,
	"CadetBlue", 24415, 40606, 41120, 24415, 40606, 41120, 1,
	"white", 65535, 65535, 65535, 65535, 65535, 65535, 1,
	"black", 0, 0, 0, 0, 0, 0, 1,
	"DarkSlateGray", 12079, 20303, 20303, 12079, 20303, 20303, 1
]).
script_frac("0.6").
fg_bg_colors('black','white').
dont_reencode("FFDingbests:ZapfDingbats").
page(1,"",1,'').
text('black',112,352,31,0,1,390,371,0,9,2,0,1,0,0,2,390,371,0,0,"",0,0,0,0,361,'',[
minilines(390,371,0,0,0,1,0,[
mini_line(60,9,2,0,0,0,[
str_block(0,60,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,60,9,2,0,-3,0,0,0,0,0,
	"int N = 5;")])
]),
mini_line(126,9,2,0,0,0,[
str_block(0,126,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,126,9,2,0,-3,0,0,0,0,0,
	"int BLOCK_SIZE = 100;")])
]),
mini_line(0,9,2,0,0,0,[
str_block(0,0,9,2,0,0,0,0,0,[
str_seg('black','Courier',0,57600,0,9,2,0,0,0,0,0,0,0,
	"")])
]),
mini_line(390,9,2,0,0,0,[
str_block(0,390,9,2,0,-1,0,0,0,[
str_seg('black','Courier',0,57600,390,9,2,0,-1,0,0,0,0,0,
	"void step(float[] input, float[] output, int numIn, int numOut) {")])
]),
mini_line(96,9,2,0,0,0,[
str_block(0,96,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,96,9,2,0,-3,0,0,0,0,0,
	"  float sum = 0;")])
]),
mini_line(174,9,2,0,0,0,[
str_block(0,174,9,2,0,-2,0,0,0,[
str_seg('black','Courier',0,57600,174,9,2,0,-2,0,0,0,0,0,
	"  for (int k=0; k<numIn; k++)")])
]),
mini_line(282,9,2,0,0,0,[
str_block(0,282,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,282,9,2,0,-3,0,0,0,0,0,
	"    sum = sum + input[k]*FIR_COEFF[k+numIn][N];")])
]),
mini_line(180,9,2,0,0,0,[
str_block(0,180,9,2,0,-5,0,0,0,[
str_seg('black','Courier',0,57600,180,9,2,0,-5,0,0,0,0,0,
	"  for (int k=numIn; k<N; k++) ")])
]),
mini_line(282,9,2,0,0,0,[
str_block(0,282,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,282,9,2,0,-3,0,0,0,0,0,
	"    sum = sum + input[k]*FIR_COEFF[k-numIn][N];")])
]),
mini_line(138,9,2,0,0,0,[
str_block(0,138,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,138,9,2,0,-3,0,0,0,0,0,
	"  output[numOut] = sum;")])
]),
mini_line(162,9,2,0,0,0,[
str_block(0,162,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,162,9,2,0,-3,0,0,0,0,0,
	"  input[numIn] = getData();")])
]),
mini_line(6,9,2,0,0,0,[
str_block(0,6,9,2,0,-2,0,0,0,[
str_seg('black','Courier',0,57600,6,9,2,0,-2,0,0,0,0,0,
	"}")])
]),
mini_line(0,9,2,0,0,0,[
str_block(0,0,9,2,0,0,0,0,0,[
str_seg('black','Courier',0,57600,0,9,2,0,0,0,0,0,0,0,
	"")])
]),
mini_line(78,9,2,0,0,0,[
str_block(0,78,9,2,0,-1,0,0,0,[
str_seg('black','Courier',0,57600,78,9,2,0,-1,0,0,0,0,0,
	"void main() {")])
]),
mini_line(186,9,2,0,0,0,[
str_block(0,186,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,186,9,2,0,-3,0,0,0,0,0,
	"  float input[] = new float[N];")])
]),
mini_line(246,9,2,0,0,0,[
str_block(0,246,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,246,9,2,0,-3,0,0,0,0,0,
	"  float output[] = new float[BLOCK_SIZE];")])
]),
mini_line(120,9,2,0,0,0,[
str_block(0,120,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,120,9,2,0,-3,0,0,0,0,0,
	"  int numIn, numOut;")])
]),
mini_line(198,9,2,0,0,0,[
str_block(0,198,9,2,0,-2,0,0,0,[
str_seg('black','Courier',0,57600,198,9,2,0,-2,0,0,0,0,0,
	"  for (numIn=0; numIn<N; numIn++)")])
]),
mini_line(174,9,2,0,0,0,[
str_block(0,174,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,174,9,2,0,-3,0,0,0,0,0,
	"    input[numIn] = getData();")])
]),
mini_line(96,9,2,0,0,0,[
str_block(0,96,9,2,0,-1,0,0,0,[
str_seg('black','Courier',0,57600,96,9,2,0,-1,0,0,0,0,0,
	"  while (true) {")])
]),
mini_line(258,9,2,0,0,0,[
str_block(0,258,9,2,0,-2,0,0,0,[
str_seg('black','Courier',0,57600,258,9,2,0,-2,0,0,0,0,0,
	"    for (out=0; numIn<N; numIn++, numOut++)")])
]),
mini_line(246,9,2,0,0,0,[
str_block(0,246,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,246,9,2,0,-3,0,0,0,0,0,
	"      step(input, output, numIn, numOut);")])
]),
mini_line(258,9,2,0,0,0,[
str_block(0,258,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,258,9,2,0,-3,0,0,0,0,0,
	"    int wholeSteps = (BLOCK_SIZE-numOut)/N;")])
]),
mini_line(216,9,2,0,0,0,[
str_block(0,216,9,2,0,-2,0,0,0,[
str_seg('black','Courier',0,57600,216,9,2,0,-2,0,0,0,0,0,
	"    for (int k=0; k<wholeSteps; k++)")])
]),
mini_line(282,9,2,0,0,0,[
str_block(0,282,9,2,0,-2,0,0,0,[
str_seg('black','Courier',0,57600,282,9,2,0,-2,0,0,0,0,0,
	"      for (numIn=0; numIn<N; numIn++, numOut++)")])
]),
mini_line(258,9,2,0,0,0,[
str_block(0,258,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,258,9,2,0,-3,0,0,0,0,0,
	"        step(input, output, numIn, numOut);")])
]),
mini_line(330,9,2,0,0,0,[
str_block(0,330,9,2,0,-2,0,0,0,[
str_seg('black','Courier',0,57600,330,9,2,0,-2,0,0,0,0,0,
	"    for (numIn=0; numOut<BLOCK_SIZE; numIn++, numOut++)")])
]),
mini_line(246,9,2,0,0,0,[
str_block(0,246,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,246,9,2,0,-3,0,0,0,0,0,
	"      step(input, output, numIn, numOut);")])
]),
mini_line(150,9,2,0,0,0,[
str_block(0,150,9,2,0,-3,0,0,0,[
str_seg('black','Courier',0,57600,150,9,2,0,-3,0,0,0,0,0,
	"    displayBlock(output);")])
]),
mini_line(18,9,2,0,0,0,[
str_block(0,18,9,2,0,-2,0,0,0,[
str_seg('black','Courier',0,57600,18,9,2,0,-2,0,0,0,0,0,
	"  }")])
]),
mini_line(6,9,2,0,0,0,[
str_block(0,6,9,2,0,-2,0,0,0,[
str_seg('black','Courier',0,57600,6,9,2,0,-2,0,0,0,0,0,
	"}")])
])
])]).
