%!PS-Adobe-3.1 EPSF-3.0
%%Title: fir-pipeline2 [Converted].eps
%%Creator: Adobe Illustrator(R) 11
%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Bill Thies
%%CreationDate: 8/30/2008
%%BoundingBox: 0 0 157 239
%%HiResBoundingBox: 0 0 157 238.5582
%%CropBox: 0 0 157 238.5582
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)
%%+ procset Adobe_CoolType_Core (2.23 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 68 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/agm_sethalftone
{ 
	dup
	begin
		/_Data load
		/Thresholds xdf
	end
	level3 
	{ sethalftone }{
		dup /HalftoneType get 3 eq {
			sethalftone
		} {pop} ifelse
	}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ imageDict begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height { 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 
	dup type /dicttype eq
		{
			AGMCORE_tmp
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			AGMCORE_tmp exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	AGMCORE_tmp 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		/CSD known
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 216 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_gradientcache 32 dict def
/AGMCORE_in_pattern false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/add_grad
{
	AGMCORE_gradientcache 3 1 roll put
}bdf
/exec_grad
{
	AGMCORE_gradientcache exch get exec
}bdf
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&usrshfill /shfill load def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not currentpagedevice/OverrideSeparations known and
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		/AGMCORE_IsSeparationAProcessColor
			{
			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				gsave
				false setoverprint
				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
				currentgray 0 eq 
				grestore
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				clonedict
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					currentdict end
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 xpt
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 xpt
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/currentpagedevice currentpagedevice def
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
ColorSpaceFamily /Separation eq
	{
	sep
	}
	{
	ColorSpaceFamily /DeviceN eq
		{
		devn
		}
		{
		setcolor
		}ifelse
	}ifelse
} bind def
/sssetbackground { aload pop setcolor } bind def
/RadialShade {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bind def
/GenStrips {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bind def
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		6 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get 0 get null eq {
					dup /Names get names_index get /name xdf
					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
					or or or not {
						/AliasedColorants false def
						exit
					} if
				} if
			} for
			AliasedColorants {
				dup begin
				/Names new_names def
				/AliasedColorants true def
				/LookupTables new_LookupTables def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				currentdict /NComponents known not {
					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			Names {
				AvoidAliasedColorants {
					/currentspotalias current_spot_alias def
					false set_spot_alias
				} if
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				AvoidAliasedColorants {
					currentspotalias set_spot_alias
				} if
				/names_index names_index 1 add def
			} forall
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				/setcolor ldf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSD known {
			CSD get_csd /Names known {
				CSD get_csd begin
				currentdict devncs
				AGMCORE_host_sep{
					4 dict begin
					/devnCompCnt Names length def
					/NewLookup HiVal 1 add string def
					0 1 HiVal {
						/tableIndex xdf
						Lookup dup type /stringtype eq {
							devnCompCnt tableIndex map_index
						}{
							exec
						} ifelse
						setdevicencolor
						currentgray
						tableIndex exch
						HiVal mul cvi 
						NewLookup 3 1 roll put
					} for
					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
					end
				}{
					level3
					{
					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
					[/Indexed MappedCSA HiVal
						[
						Lookup dup type /stringtype eq
							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
						]cvx
					]setcolorspace_opt
					}ifelse
				} ifelse
				end
			}{
			} ifelse
			set_crd
		}
		{
			/MappedCSA CSA map_csa def
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {
			begin
			CSD get_csd begin
			map_indexed_devn
			devn
			end
			end
		}{
			AGMCORE_gget/Lookup get 4 3 -1 roll map_index
			pop setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {
			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		1 dict begin
		/name xdf
		AGMCORE_CSA_cache
		{
			0 get name eq {
				exit
			}{
				pop
			} ifelse
		}forall
		end
		end
	}{
		pop
	} ifelse
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
		dup wrap_paintproc
	}if
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	  begin
		/OldPaintProc /PaintProc load def
		/PaintProc
		{
		  mark exch
		  dup /OldPaintProc get stopped
		  {closefile restore end} if
		  cleartomark
		}  def
	  end
  } {pop} ifelse
} def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		dup /customcolor_tint exch AGMCORE_gput
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.23 0
%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.23 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.23 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel
		2 copy known not
			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 2 sub 1 index lt
				{ pop count 1 sub }
			if
			dup /argCount exch def
			dup 0 gt
				{
				exch 1 index 2 add 1 roll
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count 1 sub /restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup begin
		mark
			{
				(*) { pop stop } 128 string /Category
			resourceforall
			}
		stopped
		cleartomark
		currentdict eq dup
			{ end }
		if
		not
		}
		{ false }
	ifelse
	def
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
	userdict /Adobe_CoolType_Data 10 dict dup
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end put
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	currentcolorspace 0 get dup /DeviceCMYK eq {
		pop 4
	}
	{
		/DeviceRGB eq {
			pop 3
		}{
			1
		} ifelse
	} ifelse
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/srcDataStrs xdf
	/dstDataStr xdf
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/samplesNeedDecoding
		0 0 1 origDecode length 1 sub {
			origDecode exch get add
		} for
		origDecode length 2 div div
		dup 1 eq {
			/decodeDivisor 2 origBitsPerComponent exp 1 sub def
		} if
		2 origBitsPerComponent exp 1 sub ne
	def
	[
		0 1 dsCnt 1 sub [
			currentdict /origMultipleDataSources get {
				dup currentdict /origDataSource get exch get dup type
			}{
				currentdict /origDataSource get dup type
			} ifelse
			dup /filetype eq {
				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx
			}{
				/stringtype ne {
					/exec cvx
				} if
				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx
			} ifelse
		] cvx /for cvx
		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [
			0 1 Width 1 sub [
				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx
				currentdict /origMultipleDataSources get {
					0 1 dsCnt 1 sub [
						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx
						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs
								BitsPerComponent /decode_image_sample load /exec cvx
							} ifelse
						} if
					] cvx /for cvx
				}{
					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx
					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx		
					currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 
					[
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx
								BitsPerComponent /decode_image_sample load /exec cvx
								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx
							} ifelse
						} if
					] cvx /forall cvx
				} ifelse
				currentdict /convProc get /exec cvx
				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [
					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx
					currentdict /convProc get /filter_indexed_devn load ne {
						255 /mul cvx /cvi cvx 
					} if
					/put cvx 
				] cvx /for cvx
			] cvx /for cvx
			currentdict /dstDataStr get
		] cvx /if cvx
	] cvx bind
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	2 dict begin
	dup dup
	/dstDataStr exch /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						dstDataStr srcDataStrs devn_alt_datasource /exec cvx
						] cvx 0 () /SubFileDecode filter def
					/MultipleDataSources false def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA map_csa 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							[
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							dstDataStr srcDataStrs devn_alt_datasource /exec cvx
							] cvx
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource [
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								dstDataStr srcDataStrs devn_alt_datasource /exec cvx
								] cvx 0 () /SubFileDecode filter def
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get map_csa
				}{
					/CSD get get_csd /Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
					CSD get_csd begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (fir-pipeline2 [Converted].eps) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2008-08-30T22:26:16Z</xap:CreateDate>
  <xap:ModifyDate>2008-08-30T22:26:16Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>168</xapGImg:width>
     <xapGImg:height>256</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACoAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7JY6NbfmBreo6pr8f1zy&#xA;vpd3JYaDo8hrazS2jGK5vZ4x8E9ZlaKIPVVVSaVbIDdsJ4RQ5p9/yq38sv8AqUdF/wC4daf9U8lT&#xA;DiLv+VW/ll/1KOi/9w60/wCqeNLxF3/Krfyy/wCpR0X/ALh1p/1TxpeIu/5Vb+WX/Uo6L/3DrT/q&#xA;njS8Rd/yq38sv+pR0X/uHWn/AFTxpeIu/wCVW/ll/wBSjov/AHDrT/qnjS8Rd/yq38sv+pR0X/uH&#xA;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&#xA;yJN7M4jh3L//2Q==</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -238.558 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 238.558 li
157 238.558 li
157 0 li
clp
[1 0 0 1 0 0 ] concat
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
156.5 47.5 mo
156.5 54.1274 153.527 59.5 149.861 59.5 cv
7.1377 59.5 li
3.47266 59.5 .5 54.1274 .5 47.5 cv
.5 12.5 li
.5 5.87256 3.47266 .5 7.1377 .5 cv
149.861 .5 li
153.527 .5 156.5 5.87256 156.5 12.5 cv
156.5 47.5 li
cp
false sop
/0 
[/DeviceCMYK] add_csa
.5137 .7333 .7725 .7647 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 83 /S put
dup 99 /c put
dup 101 /e put
dup 111 /o put
dup 114 /r put
dup 117 /u put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/S <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E
3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE
47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB39
1537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B13
B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96A
30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8FE
12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE45
0B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-
/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE
9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7
BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C
344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D3654
8FE63FC8465B1B685766E782F0> |-
/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0
D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B
6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA
03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C3729
5284C077711C162623860AACA404F650F8D516970257> |-
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE11285789
4FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619AD
D420F549AB7C795751D32E8EE6> |-
/u <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F51
7D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F
992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE3879399
0906DA8D7F8ACFF6D70790F06B02> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GDKLCM+ArialMT /ArialMT findfont def
/GDKLCM+ArialMT*1 
[
83{/.notdef}repeat /S 15{/.notdef}repeat /c /.notdef /e 9{/.notdef}repeat /o 
2{/.notdef}repeat /r 2{/.notdef}repeat /u 138{/.notdef}repeat
] GDKLCM+ArialMT nfnt
GDKLCM+ArialMT*1  [33.12 0 0 -33.12 0 0 ]mfnt sfnt
26.5283 39.4849 mov
(Source) sh
78.5 58.834 mo
78.5 80.8345 li
f
78.5 83.8521 mo
77.9727 82.4321 77.0742 80.6704 76.123 79.5786 cv
78.5 80.4385 li
80.877 79.5786 li
79.9258 80.6704 79.0264 82.4321 78.5 83.8521 cv
f
3 lw
78.5 58.834 mo
78.5 80.8345 li
@
78.5 89.8872 mo
76.9199 85.6274 74.2227 80.3423 71.3677 77.0669 cv
78.5 79.6465 li
85.6328 77.0669 li
82.7773 80.3423 80.0801 85.6274 78.5 89.8872 cv
f
78.5 149.833 mo
78.5 171.834 li
f
78.5 174.852 mo
77.9727 173.432 77.0742 171.67 76.123 170.579 cv
78.5 171.439 li
80.877 170.579 li
79.9258 171.67 79.0264 173.432 78.5 174.852 cv
f
78.5 149.833 mo
78.5 171.834 li
@
78.5 180.887 mo
76.9199 176.627 74.2227 171.342 71.3677 168.067 cv
78.5 170.647 li
85.6328 168.067 li
82.7773 171.342 80.0801 176.627 78.5 180.887 cv
f
1 lw
156.5 137.884 mo
156.5 144.511 153.527 149.884 149.861 149.884 cv
7.1377 149.884 li
3.47266 149.884 .5 144.511 .5 137.884 cv
.5 102.884 li
.5 96.2573 3.47266 90.8843 7.1377 90.8843 cv
149.861 90.8843 li
153.527 90.8843 156.5 96.2573 156.5 102.884 cv
156.5 137.884 li
cp
.5137 .7333 .7725 .7647 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
GDKLCM+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7D8BE1661AF70E1029B586475C590C02056C6BE2BB9C2329F
7F6ED1937D1E8A10> |-
/I <1C60D8A8C9B854D0F463D3892D665712D6B7D6A81E> |-
/R <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4F6
32B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F2B
A15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA42609F
BC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D2952
57B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3F0
B222> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GDKLCM+ArialMT /Encoding get
dup 70 /F put
dup 73 /I put
dup 82 /R put
pop
%ADOEndSubsetFont
/GDKLCM+ArialMT*1 
[
70{/.notdef}repeat /F 2{/.notdef}repeat /I 8{/.notdef}repeat /R /S 15{/.notdef}repeat 
/c /.notdef /e 9{/.notdef}repeat /o 2{/.notdef}repeat /r 2{/.notdef}repeat 
/u 138{/.notdef}repeat
] GDKLCM+ArialMT nfnt
GDKLCM+ArialMT*1  [33.12 0 0 -33.12 0 0 ]mfnt sfnt
52.3226 129.445 mov
(FIR) sh
156.5 226.058 mo
156.5 232.686 153.527 238.058 149.861 238.058 cv
7.1377 238.058 li
3.47266 238.058 .5 232.686 .5 226.058 cv
.5 191.058 li
.5 184.431 3.47266 179.058 7.1377 179.058 cv
149.861 179.058 li
153.527 179.058 156.5 184.431 156.5 191.058 cv
156.5 226.058 li
cp
.5137 .7333 .7725 .7647 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
GDKLCM+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6FF86E621E1FAD9CC02A23AF5AAF7451327A9277DAE8170AA
C8E603A02E3EEFF561DDADE9FD6F6F16B77EE709DD797791A73F1C532C58482F
9C51E1EAE7EA6E4D820E6AA1026E7BE345B1C97C5D9EBBEF4840C4188F96B538
0E7625249BBAD172254404F6F1CB17CABA1F131B17AAAB56C5D3B94E3AC2C2E9
F0A0D079C435D0249DF6C47E18FCF00E7FFE3C519BB35DF797EF47286BDCA762
289BE1> |-
/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B964
70F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330D
C4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556
CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1
E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D06
5152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CF
AD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F
5C42C88FB43C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GDKLCM+ArialMT /Encoding get
dup 79 /O put
dup 112 /p put
dup 116 /t put
pop
%ADOEndSubsetFont
/GDKLCM+ArialMT*1 
[
70{/.notdef}repeat /F 2{/.notdef}repeat /I 5{/.notdef}repeat /O 2{/.notdef}repeat /R 
/S 15{/.notdef}repeat /c /.notdef /e 9{/.notdef}repeat /o /p 
/.notdef /r /.notdef /t /u 138{/.notdef}repeat
] GDKLCM+ArialMT nfnt
GDKLCM+ArialMT*1  [33.12 0 0 -33.12 0 0 ]mfnt sfnt
29.2856 219.405 mov
(Output) sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
/GDKLCM+ArialMT*1 ufnt
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 11.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Bill Thies) (MIT)
%%Title: (fir-pipeline2.eps)
%%CreationDate: 8/30/2008 6:26 PM
%AI9_DataStream
%Gb"-6CQBdPOVmqCJGB`=b6$+GV`OW#FU\HG>g';+&N%r/mTgYrWOc]=XfCf/59u;>^#MZg1\4RI5K9pO]5q%P)2H=EP/2B5nF-AE
%m+&_7cX4?_iU#+pps$X1F9p_D648R5Q`n1#]>+6(07JEFB&2[h0@"(NPHaf`brnElC*tkl'd()5Fo1UcmcE3\]mb*NpZB`rX8>u%
%hu)VUrq"CX_`urS!5I;/rqZ!]rmfm9BD4?oJ$I=)]mBJig7H$-EHD-jJ$?\8p[4rOmU+a4hm>BAD>M`3Mu1,e=0E]`hB'h]6GW(<
%HLW*7^`27opp\%gqssI[h=J89_7T0-s7QJBIm^u85LI`"GAlBU(W/<S^An*QrqSe50DWk$U!"I*oe4(pqr,M`\$'`,^3K>A^]%EJ
%s23[1:\QedmqBk\P##It>JgC\Iqqt"[Pia[ZMmpS*YWhnf,&X\qp"(ahVC</HS+-&qYKT'0E*>H>DDr,bmX=@n*]XNs7,1YS0WhH
%Sr%rAp&+5a@J'?Fr=+4QIa=aT[.qP`lQ>QO!YW/WItqD+RmUKR[srf"E..?Lh.rE)I*&i^h7`a(X8e4bqFs\>*'JE/6EQ$/_SKl2
%M-CJ#a9s$%e4H#%4?fnG(7b?\_1I(3qS`su?N*D!<rVacY?sC6X&T"jo)I&aS5f+[:&eS?#[dN'mG1E<g<5i/cX/in$mPiOh&3<V
%93CKV=$Od0j+`#8GJ<t=l`^<Ll`WX%p>=c@H@,AjL2_WdB_g<lYAaDdGAt8[]6sAL'n#^a>5\3Yc/#_p@1?PUAE`VL1CSHCMkAk=
%JCd#4Ie1GfGH^*mnGBQH(U%9C^V@P\+4#DIHi<ZY=7>#$]R9_F]A&h,Y?jEiiSBE=lMLSKqmXnc]f`fl\8ML8J+P\DglHCN/#fN)
%n5"O_#LKs+mTr)lH1U(&]*J2YgDBV1n"'Pd5JMQTGn'ZBfpgMbq;GD!c^qmtHOi3u`PJDEm%9ob\9eZlr9!M8btkRS%PGe7\*mY<
%^3b/&1Yh&(It%@]06])LHil@pEdahPTA@6Xl"B8Pp%.Y@*aZL,nIclrrY`r[Mqa`uQ`o70qsijAI_:%'lnrW@GjtO8LRVKf(/-50
%d^,S6hn=Rghn==/p2@.k]Rre&n`oeR[m.U@]BaZ"\*r214aVEtE&Ba&f^i<LJ*IKA_2J3f)sHP:bOG]Dki([KmCR]`;6BWRIt)\6
%)P4c0J%W>lT&1^,2[@t4ZW"^Gkj"DiG\U:NPiqeJJ,LgF^pDM5BBM%'B:&8cZV,T]HFYkn?hWZ3bH66:YP>56o@r-ao'MLarfLLm
%h0dBVI*3%JCEE8:a7O4umc!"#gD<*1s8;6<2tr+AJ(,#*,<u)roC*k!;ub'+ro(n!Y5qkqJ0;T0<."6'L0o>'hfE;!^>W/NoM0:;
%3c=AWh<K+;n`+iKqqZK6]"74R^#2pE\CCuYMANtN*DFLHIc2epr^t6'auo/cRe5d7^\I+&"Ros7j%&"sS)-m"H.S\aR=BZYPOYu2
%^]*L/QV?qtJ,7V9h>i-,c/B`FObDj1Tt,Prq[0n%D[q704u`8m^H>HI1]<<Tp)j;6YGhc">Pe9V&$OmHrScq3mY&MVkC8)mr=5_"
%/a]!Vr/#m'J,8""48A@7?b^p]dr/TBs6ApRIWbMbeXu:?^Undg,OfE?&9!#G&/a:Gp^r$_^\Fi2:MsM:o]u6q#oi!f[kG;\fC.So
%Gkf1W=80CXBcoY5f)X"RB:e[WhK\JmnDbm=IXVBP)j'!U+(*gkotU*FJ'jBkTCQ0YrAZNYDk)=B0AA\\pj6r]^45YcUl<38mp<Z?
%)di7&i?sin&)[>1o+Q_\jcsQUPjr,9I1JZ5R<*sd^AR<QrMuRY#/!<RHlW./c0M!n1c[cbr;"nAM`2/V:(3rurKOHM9R(E/6auRB
%n+"0Qq1Mtsm\Xp:H$l6l_q@];ipU5!d<k]_2htb&+T1[<s5cb<ai!QJHuffOf`d"qit#eK8IkRj?[m3@F`htPEHQ_QG'/,]Y3K#t
%b#dgW?A0nZjfXomX38]0Mp(_8Zcgh@G$-KAA\Lj)nM4AG96[pO>[:T@>[3e+S6_XkZjVuR0?Q_t8/Le?>ke\NZ(,0l?_1VpT:_aH
%T:WO`H="ngGrh#LiS:';oB#?(m.0N&m/65:m.@BMe[':^cdGrY$YTI_SUo:6H?FOZH?"7[H?OU\g.psJ3R+Jd1nKG#J*KdqG1A5"
%76>F#mBj9%>A:XE()uHRc*aBSe]W89cg+^sXf]GWCT4kA)Jc:c]"4-,E`k$;Gr[CQV3P4VaX*3S6Li$[-"#cWI$)bH=[((^f3E@A
%.E<F6cOL\]FHnK-7644WkqoeI;b9!G'N7Od\[9;UGSr0oGs%"_Z,IVSbV@'R6hJdF-!Z/IE"UC5=Z?R:$H<oTa<?6S6LY!Y6@\)M
%rImK1BE$C>?[_It-Qdd+hE+Q/Y2#kcE9HZ5S\!s`.k\HpU'o7.k?s5V/E['BZCEL#Ba]=^Or"th!hCtSL%G<EN=LI4VmG!.*_Vje
%'E/6phZ<`TBa$\IUFdL=TVkdoo)lEb],2JPOn]2ks5U/phB4/oJ"`3::_u=R6a-(5"[,'GqZgCE0Bb-?hWrQ1e&P_?j$u8AHUYT?
%a7sq`ce;mE$[N5Rp\MB@C!6I%>([5c;din%_Y-*ID0i`t\HOmoLCG53,A5ZU'fPb7D")Muka1_[0<k!:?N;jCJ/f7G$Ot1pg"0R3
%Tst)SE<S"85X5A^&thZY;G*lQ?qu:"S--U<$s,,3n,a_"!Q\+>Z;c?:2'>g_K7RE9!9(L]8E(VNZ2c.%!b'8;i$o;L;]p<t5kZg\
%r*9=93Zs5"aC5;CR"7p4SHXUj$AA!j#j;GRd4<ijTUHVqoiFCb,EUS`n6Z@9HO9lmp]HW;bAp$UecC=35c>ohlO7;Cs"tqZ^aFZ*
%?N=L>T%+T!o,_`c5k6.]rWEY&!$eGX%ShR,S,m]@!%)^=Y"fd@)%IJg9EDAZ"KWjN6\-k@[@@;V3<M_Q]F7mPE'tgL$SW_/X=3"K
%^rO<i!/n\p@)o0Xq!T1>fEJK6i1fBB0Js*:bl`TNklXrkT8jusX:L'UoiJp5:OsDC5N&$H*&#XA/muMH=ZTrY*Z/Mip'FZT'*dg1
%>el*rF)<lfHkAPcJcC6V?bdL3XtB`\J/p^ZarXZ+!!\E!/./WI$qqTnR&irL"CU>h^sMVGf4-b+r9jtG&.98a**lmR+BLC$dYlf!
%8TOo(.B)II8cCkiNCYH]OPHN)K]j3%/[>n/#AaV:*XFDI:C(l9?BH:+hBMnNg40&9+T;u&LJ(K/9rNP&:qn6):uqZQX2iWf]u]Y'
%ng!E%nq5`'6%2(I7fF:q&a`@Ug0Y0?HU<!IH:3$D7R?ll6?kb@6?bik+NU^aIS+:&c=j@kCFm2)n^/jLH3&U`O8eA)*kdm<92V)h
%qiU47Ii%/AqC?n?fD22nfq[.JoQ^5ReK2Ehh??(-hrW69c^1g#;^D;POn4.f4[INr&31h'r=^IT&!?I7*Bc^:rt%14BZ^u6r=>%^
%JaPZedbi4C?-N)fs8J)Hd>\N[FJ&=(5Gq"T=(a@u'4?7Y!<7$j+.*k.rY=])E)1D[\G%p.bmo2Hj9s(&[EUt//*XtS1UgZ([k7>W
%,.U\hO72fhiI@0?G4`iL2uQ"$o(RW`G52$\MjJpBof#i$m4F8S>LUY`)aX0h,7q\P2M1:Z7UY*qD$8N>NBdV2g'Fu[)F8<:BHtS^
%BdDNs,E3iC-4nTYU&3.7[LE/foq[)aj4"%A:J_W0rFtZo3[Pj6#te"+*Z)i[Jf^Q2WaEdM^OA<q*q!<p$_20%O7M3.5W[)i[ZCur
%HC2CglDi=`<nF<Wd,SiliPp#S]&nKXPe45&fDW_N<gR0!@CkI`K"XEQj1&\5E@jGY7F,*r,lr0%DeIIA/LWit]/J=A*is`22MbOG
%KHmu$Y,ZrP25],;J507tFDZprAr53I_h]cL[+)+Mecmp7@''<<W1QHQm&DG[qk8<G`H.uKV5p+Ri>h.F:c>qc#s;q#RU+;t9'/r)
%LOuMj,q50k6"0'cg.l%7A3"(fab<hi*8*n-mEItEmZ_l-m[#HX"eMq[&^FFo7DuZnrLNojFmVP\1TQ&Zl\TAD>gkknqf9A_q$Oac
%HM@#"PQ?)8du%`*ROM"HG*jFLUW\SoIqotCf@c:%9/66G;c^Wtm^8q>I"@0eU#qc=[=0QZI.<5FnW%J!A$]>0'04""5JUo[,)9:l
%#FP?`j:H,+!9is0*+I/7!/3Y"6`g(cCpT2b&B5sd_4Ii;b_Pj/4\hKiNsg:+TD/3$9dLlp>jCIrQ&N;cpA"[%Bm8G[r++(?Qu9=4
%4$?T]fepM4)!f:ZZ#c2dX0+,>&N9OSFh2Xbm9JiG"[2E`HNM7UoSn?IjS;0P_CtA4r["-(g>ah.Eq"q%&Pi\>pqXZTAAuP9oiV`J
%TRM9?I'tDn!Q4d;q.rhf"#]K[jKh#6$j;>]OO*Wr1Jiik5sF%ec>`LtF#pW^HmrT]:;2^DV:iM/Zj@\O>KUK*p+;;sX6nhI$\#h,
%/D+p@C`hL/;;US:P+2mU+\j]Gr[<NtI=".7nP:k9F0kV/r0JcKq`i^]s4uGA]DKM!c0N8cIu@A'koRDD?Qp9#k[a.?=SuXFq_r!$
%6W'<-'oiFT87HBY@J#e;8e`&Ep7kc_)P]=s\]3_VVZ$9krb3#JH_gBH-]IM#^4,V7NbG0b\aiWjE/N@$:PJ#_DHBLur'Imj/_tlR
%QFX>>>siYR[PP@K73[Y@imO?S=<Frm+(=IhH&ll`8$@W%n1d_"3mmsQ]SA)(6n?Q^ZSUkX]56!a#lj:cZ<a%DMJuWH-dVW*;pW3N
%;\)chQ+:P.is[N7p$8tlBDjlXl[geRn\Wr*LMf=m(])JP/+b@c/*VaJO)gM7eUFoTSbDACY4I*JoEuuLH=XYfYV<$3AdiGP$iPs'
%V1*!iJ6sM'lW*i4j>u\[=hi8ZFjVl8<5A?R9?0lYa$bnQl+bk(%!PI=AFeD4qAbCpI'PPXhrsZBPL#GP4qtm)<27dRfk8Xl;id;o
%SndmXgGSfn)h";ip=VpD*A\cY1K5DSY!16re$!8)PiGf*@oeS4oFgEk4eAgZZQn)tOm?JjLhcIfmgHe`6erJ_RkC?ga8YlZ=0U;2
%%tD;-SUF_lLF3i(fV0GeSMBiu@S2\s@N\OLm4Y*1LQTOJB\8POga6"qa=-Ap,-4!][b=RPSI"Q'@Ge'*0C,_75^12]$f_OG%NF%S
%gHG84Sbn_64kg3hdDl0j[=E)\Snf:$Z%@B%("klb9?:oWRB7X=%Fj*!`$,7$1##*t<Q*T[L1S<W7YZ%rlq,lq+C!m?e=AVnk1H57
%J*INo4Z[bc>"i=r_J[>`Wd@b5-G3i2cg%[pIEO]RpFbo@g:t:Q8Xd76.IW4k^IE6P+c.q9//_t_440S"c=HSod?SfTm)j],nZ=+N
%=jC5EGTts0O'TJh,eLH`\!H9AUp0AhjJla;Wh_lLFXl"2>j$-5aJI9=.QT"W=.pQsoBWUDF7n)[0?KL@.WX'g27ZKD3g0psSOiQa
%KI_Fam#G[U%5C2'I\#oR0-*BRd+T`_8U;,^C;3re:?=P&f6P+Vp'#cT0JQ'uA/q>&1RC%%0NXm>?Qck=1hsh"NDBETNVX6X)V2rD
%eW8JJNpG4bZ^qdLl`QLjX'KZ:CSP;?XgDf%F&M$F]5-!)-XF?"gL#H<c0jjGN$Elcokr<m]C+LWGhs\s(:'jiSuelIMH?O/]:P[_
%6m"&p2L6iVq++!i?0U6Op<$l.IX[^GhaieY\`i;2Iuf<`G<'a[6MeEt^F/+>X_\c6AGa&!e$!EY]g'__F\O$V\dq"_GAlm=!iksN
%\U/+Q(MHmBR(KiYZ[b,b;XWC:fJ0q8/%K)D2g=sjn,4^g@X.!C3Uu=IG3I4'0l`[^:4NpGlS3j,g\3^i;``%'508X49r1?TfRc!#
%oW8n"T@12X505KQ[bmuG+O5-)*I`a0#B@&bGPQQj!.VA>pfK>C:&OCSY\S[-f6sI2#C:Ijq"!Ok_qjq%%g"f%J=`;pn>]1.0?.&l
%O!`O%r65&5&O1bmj8\L0IT4j\cOtO"V8pp7j$tS&mrMb]ETsQ(Xc9Wo<juZWVH(,UV8]J[F1=!-1K2i,Tm1ES03,_Or??E73icYX
%66!A_`a!>tes__91LGX.75oP3)-4p_0cO,*=?-bbo:l[-SY5<R*@3[A9g^_'(?1]3cpZ=)D&!sggU%TQetQSSWRdf;!Zf(&=HV($
%1gI%JldBHX)Qc_T.DD-[W_aA?Op>aYf3aqL26?:)1'FW2B5?(s!iVB"S60uee?=_!9@L3pD5QBa(MU2ukH%2H!L_/$b$&!31A:(R
%<R0T1T&R`r8B0V:QesOlhW+%:4]gKqA>^JijfP^LfA71D7ju>r>-V_+=](*V-r1NJh_<:pX$^G,1i%uR.`sQ!+4`899f;7R4EG3X
%TGus80pDc!/CBI;P_0E)CYHU:S-o\;^"UmFZFqFSR-=hpG.&)QBh/j]O&?Rd,A2XhYeatH,C>YcU*X/r[A>3Z&=P">2[qK1))S0a
%1^0fbd%5;Mf%X(<-h^lC/Q&U.\Pj;;?\H8rm5\BJ)+/$pZt?0n5qK$7^,BR!XY[>n=kS.IfR)<'P&5("d5KnYK/0Q1=e4;Plhue.
%j13e-dQbdXZCcNHF"4&UOM:/6KI$'a_MD8JfT3K<<#s0NW`U<"//q+R_%P@dA<AOe,%$L%r`(5%I#7=i<uKok-'e3\Rur/&"5a>%
%0YaFSrYnJkrDK9L97<*Zoi]#i!e+7"Q7qpc^=7)uP5P-Z/,=8$IbU2mX^>hN^@us%^Fuuus"CJ(qCeJEC;oA;U[`>H4?g&_a<t"<
%q:&RsT44N*A_0B^i)LU.&RidLTqmAmP!^kCF*'k].a:IlU<I..OFt_RMSg1N0c*NVaYB[g.86[C2BQ'O9WkQi*kEJDeJUC@Rh5"M
%YG/:\St(*ODrlRu?"`4"eEiGe_$,[#Kn8$6:'ga<@lYnq,D]^fFOY,m9VDl`d6bdCa?:47$hCQn$/'6=rWn[9c#4a0nF]j0bN4VW
%7*Tg6,NibSQ;AtD6h=RbAKjsrMm*H2HbnKl1R%c8.47G<?o/,.;f9S&1LYS^%'^AgL8gEd!GWa^P=4XOS/3E<0uR7uH@F'Aq&7R)
%9BL=B$sIYt$A:blZpN^r-dU/]$hgNq@Ir:cMqL1=Ao_ul7&^WUH-F\'GKugX_6JoYYcb#_BY'E)F=0;h9b-T2$I.i%gc!2,RBpS(
%>_Vtr-5A16^b!KbI88I%a,XV$dnrf:h.:H@?i9aK-H]_ph*$2#3fIc-Te<U^U!*6k'B:mK%#>LG.9i(rPPbEA*52$4g@0pX!:.4&
%m=!ODR.@IY+#`G"'o7hVZ(j^geHit(8X5\A"/e4`-lR2lqghmKrlHJ1UJWRA[8>sO.mdKGC>OdS3oN6t-QaA'q?.c9#J-]qa><?c
%(\.BDgQ,mXJ$;<7_m?Ho+!,_jSh'h3rqu;%-aWgBr-Go^kHWrGUiYX#Gf&B[M.'addMu3chPMj&3M6s$MI)Y%Ks?gfL:t`!:MK`X
%_AaLBqsP#:Zn+gddliZdbMfa6bd1)0>kXr8EBSU^m3AS-J`eVG"4cKuEPVS&s7u*Uh;S+Tjp`NL]fgUiP5'N)Q2eZT^>jc*g)J5o
%T75r"rrdiO2h:np&.ee[pm;#l*1hY>n:19tr]^1)kdT(-2;\'+bq1f`StDk6Qi+STmjithH&QY*UN7e/*W?8\M2T*(L-`9\DF$BE
%"Fh'EdLHDUf?ms7e,e@%jqn`U6W*`UApBXmF9@u=5#S\07t4AtI2,&H:OQsdO;bjtUE">F\(&#1F<C*da9'j=HHSK]lGJR*DZZfX
%U&WN<7dJT\l$p^/__R9tXQk%48'o"=+,\NTB[W5mci[q#m-1PV_DAfk6&uN5bXhNUDfqK4\`r_1e1@)'PG_I!Tj(f9I;5Fj5S&8^
%60NTBC5d-imXZF$X,GfSh1rZ][6C[QXHnP=d^>Z1FYsWW'[\&qWA23=TEg3jqdgi@5f)upNaRfDT3<Bhci#V[gE8ggO*aR&4uHN)
%EK;DkkdS.YZq/XS(mM.lR8XGJ%qhaDeK>1+)+^K?,7+7/4uHNI`]]E:DKWqq\GNKhUXh_T+u6@E9G$QgY,5Wr+rZ+u2$UQ/oKX%,
%^W_<OHcunr=u'QDcO+;tRSXHVX>ZN]D6/:P29%VqrC9].K\Z]f(1t2)J'[Q?h&ZK6oB6"_g\Y&jImb?j#-gGOiVu*1qdL'Hnt9VJ
%8fdUi(]J3t5D7(+]?b!eZH$H`8b=$+Hdaoao9]CM4a/K7Z!h?hF:F5+YMMA`)>M^NN9;kmUSNr^p$VA*q"2VHPK3=gM9;k_o@2.m
%@)2T__lJ"=hr">s78_;MM2Wars*aON@h0+J#BWAOUCR0n:8U>WR+EAW!01!D-"!%fR<P!ihXE4A2Yo?c*@$[aO.=H7=HsPZcH@EK
%G)NVbY2s!$"a.-#i7GI:<T@fj6<>[dOeX3dBhKWbd\S/VF>*tg13o_O`foCiB^Na5S&CrKl@Rjn#ll9)$%ROGHp\0)<).gEh1Utq
%6C23o;GPS(L!@uS[^l/#A8+;r=@?%p4J>Qk2#+YrK+H9Wp'2-5F>bZRW7so79A805:nhB^1Ii-]4"6)CeTC;cn9O?s(gtas]L62i
%A4\d'i!V<'q=te>-7F0q;$r4/&bL8a8-(;aF'G>jk]L,5bDn.^nK_boqq&:`-?&.tbHQ0L5l!P+>/G],2>2A^OE6R&$ICaLT-B6N
%CO=te$YYsA^OC+Yfmtn2=H$saH9Zg]#Kl6,FQ-1*gNu#7$Ii45:9'4dHZ'Zl@Chg[=pOomp>-u]#7AoS%!48%c2E<>*QY/crrLrh
%DJh%D.o80T#I8k^[CNbNVupUp5pr>'Vp2p2U^E<&XQqEa>]1Wm`?5GPMDXd`4F3eB=P+ei652gV,&E'uP_dC$p5`_aVQK!tDm0,j
%%T$T)Ee&\fim.Kj9GAo("`I*=0Pl/%c$9Qb\cAno=QAP0<`[R5J\:muEQ8gHb+!a96QJ^R7ZC#tgO"j[*@;%4'?j(lS,6o$FJ*H@
%Lnl*CH?4$!T)q)/!TrQ\gYP`U7=dc8A<iE`aK6)Ae,VY[i(eS/c(fJJl2l08?mlJM=RU;paUZ>8,Z'%5*V:5-P>p=Jl[.h80N0&k
%+;"7cj#8R2o[^M@WO9mm.hH6#(\&0d@N3bh*]*u.aEorZ99^,16h@.UDaQPT[?G\9#*?NL9-k]!3W%(7Da:`lIo7EI=3:@D%GBV7
%*q1m43Dpt*"hDKf:*)q+1>hbQ![/r76QPAcJqoq+b"BlqF'enZEpBu*Y]/#_4m4@chD0C-Unq"HO-:RP?iBBRiUlMAZ!:*!^d2\m
%LkZsr_FFurg<i:&!?-#2_r'60q3Y]2<pIU/'\O9Kb6b;/(VPmuTgN3SZp(1V3e0+O;?lV$Reh?YZB#(/k+UQlA6_B:&Om/hpE7fW
%+PlQ0/C_bAjL8Ti1./]39OSr<ne^8Vcn**KkD/^D+ja<.69qa[&s,5##.hcC?4bqDGh?K$?i4U+[55(U+e]&S%7VZ2JSqbqM2h:b
%S'%3;,bpH6Vbp4HZkm(;*u5V3;qA.(>M,ggBo$'1*m2Pq@HLs)dT;\tZS8/V`hpN"X8B4a3S=q"$6cV\e>GDJdRinrr`8iLhFnJ#
%TKG*O3doahaO=L,KUu]j?*YSO(4@cj#-"9RYRkD'*6Bu*VFW6:29@ci9^[Y#2TZA)J,MsU/FI^)=aqrQA46!a)6a"S?-Sodf=l&=
%?aQI7!0\-\.NW&4_(g%Y'<Dp++pbkQ+7ir/m,Oo=`-pl[^.OGmpp@aDJ&o<K+.N39e_"!bWft$V@isic\HhXN#%@UMaWr8(k"YcO
%D?l95!^h2glZ7*u5@3c/qZ2I6oEX.7[2Hk,^U!AlRHMdrmH9lK3*r4DA2Op:GSh"E[L$(Mij=Jt_RT_NUYmKe)?DQGr5G4c-g4#\
%m&5T]gj>W>H7G&H7(VFu>q((AK4K)plnm96;@#A-Fn:03?58\HP_1-`(!sSnGDesZTm&NrM[,F(V1jCj-ft^Y"at_R!,/`P$HGri
%)JYUK>P7a\mlVA6erFmMMF94_I%I#OYjNe&HXU6$lTi6r4E7WfN.eO]GU5:@4O=Dg)t9p*j)Q[0;nka-M^UbR)[J!cLGAT'G%mU:
%Q,idCT18jKcbd&3`[6cU_HJ(]$"R[T-ITq$d2Og*OJ9s\g)mBL-1c4f$j!r%k(2mGgfYI(3dFd<.lAP,4Z<gk,*"06,R3BeU9jA1
%1i&mJARG:WCG^H[G:Pa3qdB,m4G\Ij`Eks^"[m6B*-h.P[pY:k?7-j5#s[/Lq(t:tK&D0B&ck7u=p$AhXD\\52]G!j/eK$WA9uPn
%b25\_5hN:sGq=t>j60G!a<3E)kgnS87Tict]2?!mSVMY%$l<OXUcqc3L]W@WTpbD,Gn'kX5N"*AE?t%9WCDhpdYmSC6J[!S0su"m
%R@p^A&*_G";=67pb1-:%0HK5c8lWL%H_5;7`h2POF9UF`muAd#5HjfK540P$GfA.d\I7=g!FHlDT1\m(#l;.C;4jJpib8Z9gBo)-
%+Gb`OrBSF@<u;5__kQ5aBP;1WC_jSRd:dhaGc<?^TBA_r4[4[fdEdWjpO[(W,7W.=1N('"%HIqo5D4Lr`54T%3IS\Y?\X"XMXp)p
%!Ah.p=Y5ldrNo`ngQ32mS9at%Vj.4Q(5kJp4rI&/B!$Tb-[`Nil"n\kFtIX`#4p=0c6&=Xb!sUDV6!+BqD-5rMhkJ)_C@&:$V!&]
%=<d*QGA]*$I2.BZ'`+mOjG/ipZDRCQ_=sKYO1h%&EZOL&UVB+\Bs%]CGG@BtO6atW=.^OUX'UkVjC2840cW2J%!faOSRoj"5.#FO
%\L9[b'._pYia`pH0mm(.[R9C+LH?uO!IIV@/7_kh.V=nT9H_q1Z;hLQ,"QY\Xa80hM93HR(e[+'9H/Oj>H6pUn)[8LAelMD2]m>n
%"cNDL2p&a2+r)N:dJ*q6AG&Z,&jF*Yot-i'h`SPr:2sqFDfU.ZGAa#aDIsl\eCh7pH^ib[*M?^.7.hEDE+S-$>bKRm^NWPq?TQug
%0>BG_mg\u$_4I*Jq+muplP86JYjEH[0s@#A(!imM9DX6.K`mR/e_g1)Vfo^OVm4W[":iH]m/HKFN;bS^m:3K-4#7t97_c]bIe`?u
%lPDdJs4lBQhfRrX9coEegkThRkc"Bbc(EA@HF2Lb;;>0Fp&c$[Kdd5]VaBtVr^ep;h;^<_1%Cp%Ili#Um`gg+Y@%7gh;8]_#7TYE
%(p/Z-jG/6]gXffG_a!L\pLfTNn!d2UI51O!56gNkJ$P=$(j*Fm/J7u^:>kd&%Yu3S.3nY3"Q'-3g45ErKW.%^1Q\^%)KpYJ"jHT7
%m4n-`fB_S_RU*SA8,)ra0W6!2XIIXOk?^k]4,E9k!=nu,f")lNp$9L[r>5="edL&R?EGTWU+`.GMC#0a&5Y;];<#!.<iZC0%o=j*
%B-,h/R0SeT-ao&.cX:NrHSlOeF324L>,A2,1mJ%k^qX0R4RLZ"9130!L'Kt#())H*E((;<Wsk$)ASbR,HIN,.TS`ie-BVWiCPgJ*
%""=o_0fZ^s*Rk60,fY\gW*0ThJdVFd`[%1<>YEj>"e$5DmPofohsbK52((CRS/jl2-+ZI9AUUW]8l_L.O?N_,!O0M+MD>25bL1qb
%jMo!hRLHlAOJd0:`ooE74A)tbAf>u)CEANV^,$nUT>4b^dK/\QR:tfWU+[!(`1:<"5/%KFK1`q2i^KX\79RK!&%kjr0\l1d_ibe]
%]0ceJlVAQkRV(0A:-[`l.m,Q%G[crX+\&[4c@s/pD_OaUc(g'PUFo26g(p7"4G97&@2B)cO.bVuD;4;&R(.n'[Dpo'C3n/UZq]SW
%")S(+9<&rD9dlSdBuX@nm%'X9(1#f]e.(C=*9>*r,;'Ba2Wn_k"dE*rqfsR-"ZZ=q-H(TQ9srN3\^1UQA)3e2]Y;nXB(Sg%R^(,i
%$a:JKhdS6ppHJ?iHaDmrS^9=-'26-rU+_]*1h1I('JMBfDaGn!8K6a0_a0/q1\Tg76#;pm(FGj6?<q%o_K.+]p>V#GRMgak#pUZm
%g0cSL>mPRB?UQuB%_J[L`a4Af?uJM'grBltU8snXT#':=h`6cW"+p<X-+Xuejq;:e"ea&@c,bgV(8X+tGr%$]R#r2ur(JmOmK+q$
%%X4=[(Z:R8N58e%B_[tCE>RK;Zr/fl$UYAsZl+&g=?pAfOV`NW]``-3c(NNu`r:P%"iS:knd9Zs#tWfZK=k@6F2He(3>Q3n?[+)K
%GhAZBNlE_`7UKEl5[uM3$hN;W:81$]J-WH^:Zr0Ok=_;l(V4HV$leiXjf(Gik_irl^)_BZEK.^?hne1od?5IHD+aU4rg**&J\V72
%%_5'ei`T0K&/Z@u>%[sjc7j[!^]4TO`N9]]FkSi0(dimqh&pZ>R-REO$qm%CHP6HJ,>=ig+E5/Qc!4i`L5u\HPSo#Q87Al@">1fU
%q5(2)\?Y(16=?2*R$@:^"NK)>a0]b-Duh4dR!K5FL.)GP3IjD'(`TPk=s5Td(W;(8JIC339%tIB_Xe<Q(kH\T8guOt"#-V12@*PA
%-Ek0Z&@a9-qV&p.2$,:U%tQ7h_r<Q[$r\D#cQI0I0-(<,^u1K#)[*;ORC4I?"dmU^chNF3G2@0-(FIoLmka_HmoB3un@(a-4Tqp4
%PZOFg(d>uq*!QI'&GoAX+>=3S!^E1e\1Scd2Bd%Ycn?,`$j+=.adP(1E.s-!KF\9<lW3MoJRlM.*@aV*8]XNE?$LePOa@+&@=f0X
%ic5:m=/ak5(j(DA.(h*[Kt=cX3Nl8gOj.p!\Zd]_Kb``ZW2F!Z%Z5u[bSBpOB@'_V>gDLh2o$We8>"VDo`7C_6<n6j>>R7;@-6nA
%CXl9X&t_H;kIY:fd;9I/"RIiUaI!e\5QXfK*=(mc2arLj!*tF4;gAt1.u'V+_SR^`l#Z6#"i"*JWYL4=h@-0U+X%Sbb:LHm]K:r1
%^4ao($Jml<NMTENe#9Bm1?,l%mWe?JkCaK3_NN+TZ9-Wfl2NeAS%&*JUA/'#W)R@5[@j#%1gMEY:f]h`3r'hE0.TF-Z,c_ZpBt^o
%1j`cBQBm'@3,m4trSgK]1]1Dm(Hs-#mr@%FH4^0jP3/d[5cXO:6@G.)W-=$Y8JoD?,cUH`R$\NGe;FM'?F8acS;Xt9:+-\D?NCp/
%2l*K,oa0BgHd?5j+M+YO!W^)mP+79`;Gm,\0OP^R;2b''7O-LD#i2#F>>490c4XlSnBgo;U7)XN>'?&M'LZu/RG*h2M:q=[lch*=
%iHN]QQUU)H-)0*M^YXD"r0g'kE#%Wj[j'!E1?'2c^,IE/0!q[@i=nF]nh5m>*gGGo)X%l1K5n\^EX;C<.<t/tg(iY3@_`%;&T8,[
%,kNhgM`*#d&oQ.GH7+9X4^mEZ&!-,VI6pds^2TKeE.PL^i!$+6Z#/GT2AhRTUt$!EP%gm\)[ergP!"as6>CcSC^%TAMmPkaWCpQ^
%ga.&M'4UardUBhZ!scm^,F)+EE+^bZns:S.e!ZsaOhM&f0h(Ga:X$0J1$,g/+@&21Q%>Lolj^J.@!4*Da0&hq0P&L];e(\n?tP9#
%k^#+%JtMgXZ.]"g:=c)p$d?3K1G;?]9g#[ZS9V;KIH]r>#,',a(m%o`X=tsk3-UMPqbIcf%U77Qm4uh>LeJlNEL)"tc[tq,d)83o
%\\bOOE/tdU(^DLRIZD6=5;2c%2k\\P]QG_0(-Eube9*LH#FB+aaj<b_LOOoQpqpIL0o554N<)egD:VMafLcca63hpWlk2lb+gN>_
%?Pbj-'*r?grjZr7Q:#\2+Q8i69L?<`PVAgd*Bm[G4&2'7i@Qe30Sk+]I<c_e=bG8p!"'-O43B`aRm-'OdMPrE7+)9#!$#c.BSjY-
%82`qI*2PIr*IA+PpS'WL"r?(l(g%\alV$8ig7.8DEIgQj!=Y.Hg)HqZX:#]T&kcp=/B'Q>U>1-7%()ak2A;2@PCX'lQ!$n%SB<7>
%)]K4e^2Q>""+qhH%\l'OdhU*jN6[I2%Kp,')/X_WfWF/m?WHnpm-_br_a$]kMRL0O(<(ncKD%ZHloB9?L-YjqpBpYrY/.?mf0Y3G
%,)04I!4*Mh-ONWhI*4d:5;NCG#'MSX;8+Eo2kXlS=\M:N5",[a<(:(qk%S6oa-bJf)$6ZMU9_U#e-sQ!94Lq0K8d93>Mu9T^Cq$@
%ASm@q8i?)@Q,`EW@5:Cf72Q@4dMB97VY<qWJ:(P:aD_1^g6^A\N+-@]ji^1FOaoKX]J3Oh+61?hCp8qoSKJK_$i4JN(3Crqa,SOo
%BU.(]2Z_#Ecpo6A"64mb_K/T5qj,BX`5TG>1[7Jgm-IW9,a0B<%Yj@[,`OX8JVGM@Pu`:$%-SkdV2R/+V92C^;2if)BP^2S`(H81
%A25.:hIt+_5o5dC(;E/E0loVXEf80.iT7kt&/^M7.3aEBT5p/6,m&ui:b<'ca`WO><Fq*,)B:)P`57K72-:(&!)aX1QkPd<9/@_?
%(t?K`Ab,^PEam(_lO!pu(DcBQ_kf*#]WhPQF(!\=8nQQ3)-G5ieu-g&V#JPBS'4?4^&a3tN+"L]L0thA^L@a'RaSQm[TRDH2Qsi%
%gb4.WOif85787k2Pd=8PVu[a/DCMsN!@bu:6:9&&-_Pu`Lf&\OC#d8?7*/ad[PX>iIi:Uj+"J.]'3-p.,&gu1LC/;FfG7H[6!ff[
%-ULno!dW3T)M_Kf;T;N_2UY;bb)flsVMm6T8qh"(4V0K*D!7P'?V9c'fMG4Tdl&MC?=X2CUdEH6Y9qYgd<0F*N7eF3bsOrD0AR6N
%]7S45`Kj^18p`DB-m)oqqLcY+DB^?Pa'oDPr)n_?o"G5IG[/b6OAHXaaG*;A^K#er#r)t'AFUlGJ)nV7F7mZB8d[R;7L>u>KB'h'
%f78Z\WA/2m9\YlQkU=bdqIrfQ`ogHdT>jR(GI/eT>(XkmMEi!1pI)j#dM*H=e6lE3a+Pi`[;4b<m!Qa8%+59<(c+:ST_p.,Vp:ng
%CE8sioGM0LT7O@)UTNS$KRS'KQMAm<,3[3m*kYT&./lO.2!1tU02WH@EbUIF(k"n2rp"=ZM`bT#94JPnM.;WA%tR$+#F&oPqCk<P
%@^.m<Z"-cW*>'h8+/Q*D2AuaTO&]$6'.NW;C+:=@5dARq^q(q+))tNr+Dl2KfRo(X:N,!.XZXqd'j?&ok:S[_Z6LUG`mNEQF]Ee/
%\GoquD[$7;k/@G]dD!I<b>S'`W]aTR>X\pO$';P!%]:/%q6<9Q>PFkc]7Q"a&_$_?/TI^<2[MB?blIoY>NrCZ3b42=X\KX.`=<^;
%Ij3i(3l`jHiC6D-2V@GV/[.D/ka,P1Zqa`8nur>8DXAGHdUk-e(0GNY"rm`e\-]2nN,MW*YsYe`^bFD!@_F,e[C7_^4l+6_`]Tpd
%MKXqBi5B4P=FXeXhiOIaA3@-?k2%lu_iZ3r)@u:C/9nG((-Q*\Qo1\^Q'o,!W0Jk!WFDC,1rd0E-^ubHf$?(I/?u9!)h].`Q'5_a
%:6H@o@4*F3W>I7o[/PK(]nI[u"r2-9)PhK7q_/eocm/-l?S$rS]+bZo9A@DM$9@n3lg)p`6Y%*n7&6t[3n/!b/P5&e$p5D:_M#qE
%%bbMM%%29h:,.WKNgrm#)?%1l@P:^opF''P#j)L+T\sCV<q.[Bd+(Qo8B<\5NF@ZHRfqT=MeBdKck+5G><1&")ETeEbAJ\QKR49Z
%3U/,f#`JrZbfkS<X'$'c7H-i<<Dc$KZf0TTJo:HbZ7H?KSis=&J+7,T#OucA_s74([X-\E-a]C*`](Y?aWppW[^gPO7\u@!^4eT<
%L$c9H462f\0Vnt3n)(<n1jY'B\TeRM8,lu]?SI-H'Qf%bD'bL_I]B5Zq,FQS$/=i-TUaie=a[B?"8XC<8((OEGN@03]0Le7"&O=Q
%C6-BTME[Ci6CD-l[=uA'S)4b*eUPRGg&DBXphsO2c=o"s@6APF,E$nJVMHO(fIh`'V@u'`1ag1258Y+M5R:N1[=<`,)'d%kS\BQ"
%n`'90McVQM?N5EJ%DmSe%CuZ2hldR:0J<@d%u4M_SXnWo^3fYRX1(%?pt(:NLJ@eUr#biW8JH,K@b]:iepX"l&-<*UXZm@I5N+`^
%o:e(Lr(q+"()9"7mdQe%n(-nkp\4?4F&X'OE,LG$PMl9>OTB*S*\nfS.Z64N'q@I8s%@P4s4gt[)'>+3L>824;_;.sX<JXW,tn`K
%XU?/b<a1QQDk"LepD[-rJ*sLdF@Ud)AqWT>o,i_8M[m3bd11"o@c'LH$9?kS=u2q3)T>d8IaQ[2s5pGL:b?,qSM5a&[?!A@`*h")
%SaRY+`RV!TpADHcm9"hsmSlEPVE.c/]<72'p3Q=5f142.%G._,]ha:3c'?;OiC]<Y5U`GTVp1SZeV_hQ'09D@R?$V5c1GC*nRhZk
%pB%H:pQ)'*/jerKrHSul'lrs2iC=+h5##'DM[ASATKg).*>"c8"do?8oU'%]i:ZC"@rTo9bG4Z2ON=ipT8Y!?d%"M=>N^j5UP=dX
%OAc,P2(thO<G2r[O,YZ/Uol"^`]V&oID-k?n:TcT1,R^'aFR2(dSo<p%X89oZ#Hh2`ZjrS%)-)$5ppe8.m@IQ<fN0UJIYMVc2Dqu
%Nke@RT5Sa6!WD'A#f'(Qo566H;_Di5O-N)@O2JA`lYWhd@Qk(F21USWFNjc.n$KmFXG7Zr0C1DMAC2=blP4dg5$E3aPB[e%2W2rj
%dr5G-hY[7aRu@=0h3N+`:1iD-#<HFbm]BGg7n&ClZdf[k7:O/$AUSq8Ult)RSZd-[M&c(SeIo4P9GA'b5^$gNh9?KgXqqP)bm>c;
%PPN_GS2`.8SY/K$"r>?P51^C.LJFOkTDHQ7L66n#4?tE<<L6)5PQ:nfT8EYA]Wkt'@rCX.;W,KN3aAs+8<0\+K>QT*/))`YkeoO9
%37(UD&48-:l!ZTgZdq$o6RsoN?6\kMLaMEW]mY=IHu'^rn\mR-6X<$HJNT!A"B9GCU%54n84*h)7nX]R!\oQS,OP@!!iIaMUgN&N
%VF'@`^5M7S"RKKgE3s=\m6SsgkT`OL=]VV)$bY$GRb?tE)[H*%F$<*VYNS7LMOlXicLmpR"JdMr__DHpF#$9HSUhh_^R4pBKqnC!
%4]Rp8LX>,?cU%L+PZH7A*LC#GIVu`9%23?)R4\(k?(hR$M`aZPU@cqWZ[6[)U<b@J]F]8`&c?qaa$Oi=l,?1\TutpW;W=&+Clg32
%R2eE9V4_0C!=8phrL=a=J;J9LpFtN_;5RPonD0gKa;jDqY$C$qI=;6%+YcF'\#'jpK=oTugE]aq'@S-.lh1UH^&P0%rf9b:=Vmru
%C;Q9a(R:.E9`Qf6]GRt?k#qhLX.R?VM:ScU-3s_DE4H<<$KXaW<lqcW5Y:Sm%l!%3!i6-t.%J(.)WS!Ze-4;QKmJ".+V.Pm:l%fW
%!XB\j^<u7I_,')b=nGfp</U`H*2nQ)=hIg\#TR3=\jqgu_37Qi'0O/Q*HZc$?rgjdjGo+CiZ)Qe["=-3*Dp\YaI7"=*X,K-;=:b^
%?;9I5:*)ZYh?%6g*^*-]`Y"#KPtoGFaM?l#fTW<"nZ>Q<Qg>Q?F13Sp0G_VN84;P>!aVnTN'ZE"dl'iq#GEd4]FON?>I`iI>5AL7
%',oO`oFX_&"t2W&%OGU9$UJhm]e;,naekG5FpO>&*EM4>9_BgLZq*56C;O*c4nX3JWNi65;FV>kB#G4:J=D',bn#42"7@HF"M3^k
%`[F/g,m#o936q./T_*ae_^2K)BCu[C[i4aGJN5X;K>M-E2DLh?[`"P):A+#s0u1.NYPSG]hc:[SBfp&tO.(O%Ud+r3p5EDu6nGoP
%Rk/4#J9&8SJI&i!\+Q+/%*+eU(Ubga\28B/E#d.GW4,8&m:Rg2O/Xge,-b+r3i\DfWjO<b'G7=^)EoI;8FFA2K^pTjN9g-:Nkraa
%52VmC=-&Jf"$a!r=sY_6J:"F$#oO/kkr%sr*eE'f$&Ol#!J1#83TcfV3<nr)qg?khEeb=F$1(QlJD$pcc>_<>*KP*5dfMak/Nj:K
%>djBQqq>P!)U@NcO8]$/$-^O(=r]$[J5;e[b[P#=da.TKrr;_d4Yke.7%#>-q`tN.O_fV&SK<m_>>s'fmJ?oq$4bY'%Pc3!qFL@Q
%p!Z+@VNj%tXUd=*8I6V?p'B3eiM.f;,sMa>h*s5Y+n[+:<S>:S6.K#JV.JVa.MO%!<'?aV%rC>5MlPCSp!m`1'r>0B0SRSrB[;K4
%eq-H"9$1n^V$NG31*mD_aX<8OO8N*@W"^`'m52\SE<'6n?:$aDb?EA]_4RIa/YVfen&.*da3=6^nP#['.?mnk(go1>OjD9ldE$2t
%0P>0UWPX5:)njrm3+X.^BjikPi%@k!A6G'B1R0e=Mac?/=$[4FPZB)?>OsGOi+Wk$2M@4lf&;98`XB<k=*MIo2I&oGf1pns)=83b
%Spr`VcPN\Z=,9kfmMdo<i1DN.s5<H\-Eh)CC2??mK5Crd2TGEI&FYh7GC.84C(SR@e\7aEJL13Q4VW9f,9em5(>?"b?gA[JZYuiH
%J+k-h(%_pd$OO)lM!DYV"A3dhXbtjGgPE!^$1gK%!JfMVNjc%2l"UNHS0i6VcAKh()VUE^o0:d?Kh9?Oo45rNcB^KB;nK<96rT;L
%Djh6<l.uja1<go&gh"G%>1ug2P:Nr&dRX_neDe=gMnBEGn<kX&>isTi9$W=M-#@P_(jr34\S'=MBJ_^T9.,k(LNYF#Nc(3V<pB.C
%O\Z(/:cblQJU:=8FP_0gH#GR#Xk_bgmio\Im+Fh8?)0T7_7SpF].nK,qrlc#Xl=NGchGQ(r?)^/*s^Ck8^-q`-/KrLT7b4&.sQM2
%'I>;0hU"Shc:QjO^mO?=d<$?lW1iU$,)No=QL,m#\+F,-b/@W6FoTM?g<XAe"9(I<]\VQ+4XuW45]J0jWMhf%_\O;hY,CIS,2%g7
%ff)I\e6LfZEgEG!4`XfUR2n3o4'C@5_.^f3.kJ\B#;*u-9XYeY/8coc\=CLSE<LjQ$YEf-6pp3I^m!?0V"jZ)Y62?]^'P54c5arb
%-fK/7Tn-hlQXmnB8@M1=C`J1lY\-[\I3'X9f/E>)g/FLj0%RN5dSf]YlG@:Mf(qf@%*e*>GV5=:!Qbi+H_=beJnl5g%.<+//>Tj^
%6HP6RJ@CCG""k<2.@rcpC0!O9;;Th=FoCB7n0,F12iV<JcCflm*7fsV:RhE]LIJ27D7jtg&u&%i)^(hjmpUI6>jg8PY_OK'S.aaj
%%(rPRfY9b/X_g2oKm^0+/(o,J1E!bk;W-/2G])ka7A0AnQ'8m.2CtA*"i,Y2./Fji5hS7g%YC;HETQtq26baD'\leliO=*;*&!hU
%b.ts[H-#>+KWfkF3C2fI&Qm38=5=AE1^"3S_i5ReB0Rq^;1R1J"ALbFVi3)tXs\Dnm0Z:a'=(f8LtO/$[EMasV7%+*V!drJYpXa&
%WG.m1DO!Z5!Ltms_E5?(\=bpoDiCLN+fen5e7^]uN\T)7k/:M;kKN\o*Yt'sCh&P5E\/dC@=`TVPGXsUdPEAY)'Y?WLc/0g$h*.0
%BuZ2[P[b+X<OM<kJl=$.L0,Z&//BWs+=a4lC0\C/2&M&K:>?"Obf$_F=HVqF",:M-i5FR_I'>u^:b/!KUQ!Z!G\,WK=[X;;'/Y]4
%B%1#H%5V%chfARu08s!e2Y)qO/Bf`cfSBUD?Gk/G]-uX2F>+V%f'P4.;\(Gm6u<i#TmeO\ZS$ik#Cd0k]kjR"]7Ei$kT);Mgd]%L
%D9Fn4,WJsC(!s];PEJlW.PN`Wo\;SQWEJH9i"m%#A/]f<_9Le^VLt?m3)*((j2F>+D>dlF37!21pF.&pR`QRZJmAW-"hj(F)uRu4
%mJmS@S0*kkfq2qe4)-NLf7j0nF.0"eU+8'N?)J1'jDIPYWP_E9T[P/b7m?mjcVnJ,e'q*2SN>6cQo_6pk4<?QE3p7025Uku96eaL
%3WknL%c,Tb"/s5hXl6QOnSP#tNh&jmD[j-1gRe>8'[:$!"IAfRdEg;FAV;*kARdKA5/1fjidfMj*Ycj!-h:p.K2uGUXei.u.TV8b
%%*Ft@)u-)X=>EX'YQe[Z\pc5If`97B&pY^h`a^k2GF<u9r_XA^ZV/6?P?L8,_bED6%M?s[?h$m5,M#H#RE%"dj9`!eRjn\u137bh
%=-)E#@R2;]Dd50n>3!Rm)qD9/GqGJXM5?-S]s6V/+Hs`"!KD>7i'Wg)OCGs;d;TM!2eEiQE,Q*00oa5f(m5tqi$;n!Fsb7!SA`GS
%XthEFb;>L&<Ed@DYGqbYNG)Om@)XArRsdCEjpB[V#7;N83#3t'nmP""Y@:EhZMd1!fAr:"&5;omWG^gRCj[;;,B0Dk=J-Q'%$p?L
%TIO#k-4&8SYVBu#c\n9X-j1lWW#;Wj")7#F[0P6`"Fe[9X,.-h+L&)DE*uMY'/r83TGtbE:kEPS3&/unYm"<qTAd(?W*@*&^6<4=
%ad;\/.s0M'9!:^WPTq*Y)1bu\dVaL2jBNM9C>8u]5uD7PfJEl;9:LnQoX^iXKrPlf*O0Es*&Cj`-$J&@@[Z4<#"s\`\Bo&\#@YE=
%\sI+!jl*;k'PtC_`neI9/C8F36DoVB<G@h;'eGZ6r64(McuMJ]n#R27eVN\>A8/Cj!&8J(r*#A\9k-9p[FC&\dprd:ZVlA1&m^0p
%HWXj=).lrYlp7Z\=EkX.k\[TC8Na<E3$]s,Q<aB3#[N*l:+Ni3GW#YZ/8*qe,*R2N&gG3bcibjndV(WTAr*&N?0iOK6E6`VP;9@0
%AHsAbd+8('q6k_&-l/fkd_hN2j:d3h%VL`4QMaK/?-urnC:IQ:m>VD*VPsY-lWeg)?C^.W^=>JnN(@MM3dJ8k]GJ23;MWSEku8Us
%gc;GO1Km[R^M[;&^cSDI'7Ss8=3lk'a&6f<9@JiQa?Jo6H'l)+o,>V;,/"Ci3mLaTf6G"Ja.F),6Ln1?Z.>u\]Z"SB`20CiC8mYa
%:c`0j\X,cT0+M(56TMJDMG<>Xrgi20i%ZWK=D'MmZjS7W&3L]2V:\7'HrXr1THFR6+G[IO_ij:M'SVu5GZBZN\.cu*5X^sf>L6?3
%qO%CR%F++rP/`;cMb4:*o3u,``hmRQqI=*BE<M4o(tG-KP!Dn*TJ*CG`jHZ*PLZ!#:B;(4Ka"%#ECS!g-]t4Hbk2F1#F!efbZo,C
%Rhg%rfs(M_f*tlin;pcl:DN=4Db!4*Q=XV+`.>?\p):bMcaH/J&@*37Ps@B\NDc6X">.80Yl9K[64e0KXU$G+'e^ndEAC)('<X>Y
%L)c;;)McsTZYC"C&&YN&[9Bl("Z;`#H:/>H6dA"c1^jM;O_`/aM81lk]n[lt,$5@-CLaAm_)0M/0!pek2h2-[+LPU)$lIjg<ceU2
%/]9!M<Ka_7*YJ^ij)IEaF==;(<]'&7NldsY/ODn4W3\\[RPfY_O2h6>4m+-b$MmjmXK%4TQ!kLM`2nJERp?@a.FE4\M;joS@nEIu
%Ea62`'sl)S=rU:=/kRg>c;69RlBs,L=@qU!i.QsgZKP0d>\^&Y>k=*c*c`IjVWX"V\\r>LN28"PRMZ;NR?;eN(UK3TBgJndC$A56
%o:_c:dof58o@KF7U6pWKgrN%t[uiBiE*:tNKp:Z1J%r=OOtrX?Cfs<FW_,q<Y`P#p`N$a@$Bj\nkD=m,Wl/#oRY;HOhqcI&/-LM:
%1HnnHcBoa4`'OfbJn7q&R>#Sj?8JBm&=?uU:+W2;*j)0%O==EAd3Y$2i$=8FD?^It<"HOiM1tHS/i*ka=K%XgTM6s?iDad6Z4I0$
%*gA"LAE!?-;Am`b&4.B18IcNQ.$eH\Ju?S$<pXo^%#)%`A6DHsntgXBPct]]K;N\BY_e&J8q9up-7ks#<-,&q$N],(MU@<8?i_TV
%eR2NNBt5>]3`sIT@>)mB=NH(M<oV%a(>i%3#7JA#Gf88hZ&f,bMi2ji+]s=eB\Zu=Yh[B;-5KK_;N<V:882A^)_;,C$`CI-/-KTO
%*RpX6:i33RJKcXuJ6Y!S@Nc#DUFHHU6(f&A"q/6S-:,qAYq-$REL$8,*GVQDicGrfo8o>7:FlY-;BXPp&=VIGB,7cUjj5dk6+B<^
%%MhAYgo@l_/7cRrA1cAr`_p>@j_>G:@2r3c;-4)J,`'*J,3USRO?G&BM1lY'$aD7Y@(r(SD(H&\GaTET*S8e=Ri'3VQai<BYiB.G
%U=,^Sdu8iKiAU8h=JUt290_#uqU^hfj3]ORTu`L>2hOHqc>DHe">%6&L,@gaRN`qBhJG`'1^Ie"aj]QQ)#2Q-#&T*nb\i.J3C\>d
%o&F]SB/?IekPE"_ma]iZ>s5:JB_%=nnQo03o9Vo(6/KEm]bT2-QJ?=;]lE#Vk&(E#`mB'7_=+jPXo3!@(H<F]*h*/+kOB^mZ(6d/
%m:LfbO3H@,0?NQ;fY#:^SI]L\ltTd-\n2`TJTl>k5qKhP7IKSX\Y_(]e^umn2*`$HmpQC7hnmJe0Ybp-iuH=r"=O?Ip^kp,:5*l'
%SY+X]o;5GiYa0=X6XL%`c>ZoA"=C;<4;PDbFFsl5&3bL1VD7Q`\*DNG#:AfQn(7&hlLo@K;qSA.*FqCQ1p5shbMMVuIVt4j>G'>u
%--V[d`mP_W989NGe^hIE#aE4d-;4Db*hLQ#e[T8r0AET4%SYN+hlkuZea;]!VQaR:432l,BfnT4FM!s5gEZ<5s#H8`l=W_4ORd+,
%65a?Zp*b&8"*"IH?!M;pI=E6>m9ek+H4m=12A5fX$9l3@MmH%cULWf/Q&IZ^56<e4I<+*q4fubi(A&[B<"^r\MncAqT$^8frjH.J
%7tFV#RgEE>3/AkHMFMN]fW,'*)J)M5+`;E.[4UZ^93DAF2=ahWbSj"W1S<tEj?+E9hfj<0@5gck@*Hg]nT,V(J4<_Gk"l,&o<6J'
%Y#?9d9i8mod5!0RLkk&Y%L-$Hr%-9BAImLhj-#Vo'\Mfn.B8TZ1mZi`PU0/UTGkJsb>%@P4GuHkDbT2?bT0Gt/fPYP@ip<P]hl5O
%/SJWSfhIM?-Wh9_&)a0r,IgqfQ(9ffY21eH55YF_,F'=e9hZg(2?t8>?(D#Ql;ejU>]5Rm\h%U&Dghj?S8NB%:%6-f-cc=SR*ukB
%oL`<E%#h:b8.Pf_^:']F1R^Rf=XHR#&Xh*3'KA2e&qOF/4"WW_^:$mQ/#\db#&iur[tC492/hAgb<?B.=UMJ9"b+.>-VgGq:8A4*
%3nmQ9'r6a*\;o6-0o6>M[bt4hFFK)MgJ#BoN138PDP5MCeb/\I/<s5BmSYl1-l,!c=PRad0CpG<1f[<j(pl+-_7Dcr@lI7tW+ETW
%M6]-W0J?>t[+c$tNhnpec$f6Ff@>9F](D>UDT]rh*b)NG&V2/Tk5lk@r1cOA6&nF*)[FnXCq%+pE00oddR,\YL]`Z#buLLHnC+tL
%.W[3c_)0,Q!XGfM+pgYq3n4tj09c"Qn7AG_03[!DL*IX[X)Q7dW>me>,\LGX:V'('!Xc<+JY'3NqWoUM/KR3aYp?t#X4Z]OgJ/2I
%$LE5OfJHDo)j?-,99l0OVuBX)Q,EC,d*'q<FaUtB.,H;0p6+Dc",<L?eI4b&M,/t=TLAV.C0"gnVBqhlEY^^J?aZ=;"Y7YaYbb3J
%]a)S*NLI.O=>V](H8Ab"bl[8L.O4pTi2XV$=Rnq&h$Q\&^#mhKJkh;lhEe/fS7;r_1baHW51Kf1l<(2-nRmb\og5Vb*%k*d-g(-B
%5SS7)>"?_J/M*[(d='aV+*DqS#EMSfjq3j`Db>fppaFB\A]SVX2f.#3eaYbP.[7I6q@Sf7nG[-bs,HM:I-,[46s]1g9M=H1bnN,a
%7pOoJ0ijA08gEH]TA0s`<.]FCK[?kG+!)*mHT</Dl_k"c]+8PpjL@g=%_Wq1(.9oe0YDMWZ.Xnn;7sq%B-0H`4%dfp?HG^q]h"9O
%nsM%pS_tRj9>5$DpL6=ui#FabC%GcRi+%`'Y;pHqap/G,,&&>E/kgFO^l#$j"*;08c7q9cBPGmGorZ9mTtJE^bN1!rV4?2]],UN%
%S7;o.JP/5Z8,@]:U*+euRP@P'XU?IZqPKD(9M3uK,It\6p<kn6B;bqs5jnJ>pRee-K&7WAnk!GK]JVd0U-FZ2IiX;[(Mg?EIZiC#
%oUi"Db*1MpPZ/]9LL<auS+.JLRsr)$6>bcB-E4JH+[JHPOH<HNZ_FhFIefR8.Yit)aiXtT?L&S7EB_DXcr41Wn%bq0<<ZI):c(>I
%dqTtW>PLci@Fg#PQ8E]i\6N+Nbi:b9*jh<8_!ec%0!]c'LoFeN-`q5bJIIa"(U`I`<<eqIDeUX%!T%]QCN!H)KiCIl123pZF=i]V
%bJs[N4=S7D0B?I-\$1q%O$Va'D$MY#A+]?MqB;P"M+:sG#7X?aNW!B,OCFN)1*gC_-XQA,ZGe8.SWG<^(5PY1+IY$1oV5EGD8_dk
%#R&fMbSjd`&ZS_iR`mR.5&W-;*%?*8%Dn+`V`0q4eRTlpq@,=Y@":D?;A-oaj#EI+7#S:b/t3_lj5UkcdI^\IV&/Ks>`6&7Q&(#-
%#If]+[FF;,f?p&[`[m-5..HOS>`U7#@+24,7;RLQ-5ohDW#O_RFG.l(MIO/LdCrc4#1uC^@KT-DBiLNUU1a*$ej3'Q=>5QaL<L.D
%FdB/(/OHr[Y)8V\.pVJXK.Z1EbCp^J`55BnEL$uVi$9b:M+J0`C*0Ud%!TJ[ERAOEKHJe7A;^m8Z2=ltAFNohe'-N#p`pR?a:Bet
%+ZuJUm"uLl8F[D_5)0+qAmmdu]<`/td*NC"/4sdVItBdo?8BW$Kq'Q",>SdD/2rt_*J&^54CpPf!\goV7ocF_-]_+=fL/dLE$@U^
%>U^GR*H#%nK1R"/Le0;Q6jDr_X<'3^o$P=3\kYL7`TPs-VNqM#B9C>FTn^kE_:&TYTS0qKkqq#tB'1b8`f:e)M'j16@:'[I3?;ZD
%\t83*4:t'pd[#G^NoK&"NC3Fi%DH(;W9V=>X5q7$)s=$#;qYO[)A^C??g[d6lU!4fG_.iiU^`))1P&QkW?\3aa@BhFP;"l1<V!.W
%kT2K_m0/8WJW@$JrOVOIe$=^uBRmEcfed<m8t`T4Hl-"oR^a"]fFGERJfF<e8RA9ij:i'-cX\_p_O>(pP*($Qfr6BF.2r<Fm"qDF
%Qp!S(L'_PF@dHF4?a&EUK:s"L7A`Co*OD2u@T5j$bg<'qc_Q6Cd'k@[d*3!O=e*oHS]r+?PDa)HY]a$ek`RgsA#$W`Bdg5_XkP(R
%G*8drm+.k%U)NN(Eamn="0qtAcf.F,iWQTqZns_uK?qsY#KaNsiC8^YIc9<be<^+uXPoAM<.$n2i<XgsQ?]ua5T>?uT%$T,L2>0;
%e:>jgNb^r?QP#ngk7F:UN4U\7WF>7YJ_iV.iU[24_/3o5dHe3+rB,P'S]AWoc)Gm@+Zt]beN=B$]Aj.BO\d&D$&kCmj)hrL`Zft@
%YM_kCmBoi?U=>7>,G-+6&OY'OA+9<-FE0;f'c_eNn"h^_NB?$Q:[]=qGmo`%?.d=!h2t-pjr]dM0JIp71(*2n*l7^!YlhGT6@S82
%W8[iTYBsBf0q+oj*POM8_mg*+I]eb(s+CidfaQ=p2Oe,:&9Xl7$boX<W8<<S[gkC?QXr8N!IeRgiNY8>UeU;k&!:?eVO?,G?c1:A
%(-9E(<Y]Y'%#u^Xp#<6dS,6o7]5TgGV\hL<jjG-hi+1cgANN%Fi&FJ?QG<?8pai=2G3fH.AJ%,'T@H4EX4,dEAEjZG@etQR<SZY7
%qtYOAhg`bH!^4<Yf\s5?g2\Y0aX8!ce)n,NK:S=PU[l!eQRo!ZHBbGA5Yfe&R7obS5P=[@AP,t"\.Nj1PXXEn!RGtg*;eJIQU!?a
%4ij*c*DnAPW^MhnS-S8"N`AB)'*Io.O%1/S">ZCB-/Nqr"U`1C[XLeFcV.8+(s<0X)Wq4*BBdLWX;p*)L1Ar+BF%>Y<`7c0oub7C
%q7_:Dk_a:41tdZ<Spi62O[B!KbmTtVgL`t6a62S9`o^gi)dlh(e##pu\Ckg'rY]A,)tL:*r5d1(*ZNQ"$/GWp7@/G@3ei?(Cu%PE
%A,*gN=a%:)Ys#V+@<]3S*a0URiAI?JGJs;l*EG75ZTaut"b$J1Zor\bM5^F[2AFL[PPKSm@7(55igLm(+g\[IKK[FclY*025X?Rq
%FN=Ot!3?Q)pcS4?@F^NtKXju`^oajV0.r^'*n#lU*-[(dBXk&H!2K#!:K[OLl\Jr6!QPDle?'H/dG%cROAoJ9FW>OaC(Q?$=BD*M
%*i@93NND^OE,TbW#r>a?q52\d@:Z%?F)\:Jbf\e`OLsn;N,987(GOasF\='"F0&%MZRI0_fKL!(0MK_FM,.61%:^gt\p2?%!U+p4
%B6&BA*'ZojNtROj(^u@.D@b45NQ!D]l</_t\uIYj.12>&+V)Dc^;%Ipc-<f+C?i1U$han&7=]nrda3]6LCmW4"qno[7BPW(;5OUu
%URfkT;_WhEZ_5XpGe#f>[7!\ekO1iT/uR%5I)7Y=='ia0,MH5*XcLAn10EG-oJ7u9<?GDJ$e("L$LD$n\JW_GNQa]Rb='VIO>U2R
%?s\e2FH-cJ?,2\8O/e<bhRFs8+SB=TN!k"+Ag!BHC-<N2_pNulXH<^IIq9LN*qbUTk*:Kq'q4]SX3JZn=u6K6![k'@mB7@/)Y@!)
%/\+-?W?XrDl)s=n8jP(6.4Cu2frHD=f=?hWK].uVK97$"$\A"?fuOi2Fj=U7Y&AX8X5eT<GmIMs4j4sZanbWCk<;'<JG?h,*!iVN
%I2:+A),5*[jfCp6&Lco77P<4Z0,f,25nB7#D&AJ6SnR2Un)\gK_)1uhP:1_7U5gJ@8(2"gYC.bT_gJ?_Ud_sqB!`.o6ZUXg;2mFB
%jW64.ZqbA;fVW0V3iauL/Y[Ls@P?>MedI$K#%^id!%es[i*tD4YG2/Z)8]iYR3(BW+%VP9qM,C.:NJ5W"ILg8QFL][4%XC#V6![n
%W-j7!V6%(kP8Un@UIZ_4\DY%+^p1e"K,S.%&Q8e7jPtOqVd,?,SHpu[FXD+t+]G@4(b$M)`WiK,LqOqACWrI"U-rS>`RqPVmmL;u
%EnJVl;-#6dk@0m,k^J>DZ4'YB@'Ur>-Na_s0&96SoT\$8`5$,2H\AC&EF:VDL_mkfpoBhIJCGe]b4t5V'NV%CR6[Va"XLnuaRmL<
%!UdJ!1;_"c*."`e_+Ls<;=ARFh*ACCdbH[Ia-DjPn3`g)Zi-!XJ.<eKKVZT`NAN?jNRSQ'HAZ^Wa722k/`MTa#9_rUA!&/3$jub6
%.7jSV(e)0UP#`bN%RFhSGb/^-0dUQKOW6a8_A!jY;PP=AY,'H3'nK1P'ip8r12Y-`fk<P!)'eiZPn%i!``R9-7k82'n::cu"68QK
%Vi.<!Q=-]"c$_L/QY^q'J;-K_QS=Jdb1#E,I9%k%2HO;WHo3S+VNl4)q-D3b&Lb\aj"fT`9YH',e!3pf,@I;)1+XCl,nhY6[3JL%
%BP?)l%LUBY"cI7f"o9E.U-?6qWPo^#<@.Qt7ZQb13B!"NN]j85d`7sNo9-:Bi05.@2XrsVTFabdmF[R5,UuYE,61<H-BZJ:Q]JF_
%E[hJ)M]nu5&>W8A_rtOE;_HckY,!d@4R8'o=LFelU=1a:F^Tg]_cKZCOHNU'i.\"3OR"FKZNMCj"TV$[Q?VVG;6.W.'#oqY[9:l8
%1pfoSI?3c8,.)FS$g6"@:_(ailCXI"p5L&VU-Kq=i%ZU9a6_I*qi+RmVaSNQ]%IKsX;cS>dpM!'.="r#)_*7>3oA-'U"XUhT9^+\
%EtOLbE'+4D+X8CpVer]WLo1A%`J9I8#aSq2!bPP@'_aG\%Y0D:SHUb;ghI',j+E_jR62[T$hoTC@=`%jb[B+>[b&5Dm1AV"[c?cP
%h0rH]+/X*eBF%?WB`E'e$L8o#AV2V_3>>fmqE`'`N!p:*3lQ`j@$/Y_lWC2@-_p#!o02^p:JEPU1](1En,X\La>hfEl[1t.$"caW
%ad(0Z4X+[1JIo@5n>^1t70]USJpaPr"bR:elQ+In`%KuCn2NO(R7%9b=i#[r=R?A.4>=eIg8QJ2@8TGZ<7Hr;QT(c0@PZ`<.*k1N
%l^\TWT$rPUd3:5JoJhq_R\!KnCg-TEJ1ZO_BVkd#@5Gp?B?n[]Z<7k,#mJo+W@B9(QVo(MK;6?U,gh7E>@+Mk.*lLPglK;c(Yee@
%O-jp5]F47'7U:/lU.jD),F;QiAc9&VesjQuZ?u+3+TUAuQ[b1`!UNM(*,e$ZI6!mtlaNI]HDq-_oNQjhXu?,.!h$82D.NbYc,P9>
%[ksIY?!g;^"D;RLA%35;`tj6r@7+TFF"h<P0OGI]4ds7+(-_6/BT00%YYn^((21=a3MVK6)&J-@.'3kcCc\ZigSH"GA=<Rg0<*0D
%/f=2_c^Oqd$YP^Xd?4pD=D_A41RW&8""8#n)!]lj@k$37hf?7hN\n0?/]+n0B%Lt#lsD<MIVXK=$YF>qD+B0%?Cl'D_<SLA]L0Fk
%+4g*h1C&(N:sm"WC9Qp3=B&.&`*L,`0F1MX=Nt/W0Xdq%EDKP7R=Sk+'Cs@4Ta0c7_k8*cVa7&E0)7)_"GB[d<6cK%$,qDa?6^=t
%<t6\eEq34lO;Cb:&m('&"Z9g<.S.]j(-ng3?`>"''t5P\\9%`S@>Tik&3pdDpqW(b!("+o$Q&pN!gfG:`(hl1$Le]gNOEl-h-aoM
%YYa$Ai-mL>&Rd`$7%j=YN,H()j)4%#3m\#M^hFu!SJ#'U9Gt?>UI/Eh<sV@0;EghnEBZ;3^b,L)LST9hNaq0N_3aZM*]]+0NKmSa
%,9\ai*Y5@7P8-d?U1OcaA!2JqeWRN@(p[8N>R"6qOu$Y<5k<&Tp8L@hUTDC10X/Wth%Tjc-"T.Td6@36M?XR^cSk8ZV*Hj^9<+U\
%,r)<qAAEuoDl_\mM;*,lno8,WV[^lX:l;sY]\WLq./d*]TbC"tc;"Kg76R`#VERR']L&G-B'AQKL.]c=i1PK&4Qp=ENP"o''BL70
%1h:o[cCj@\b9t^KfJ3lGg(]3Yn_+FqJgGtYPa;&O%:_-*$q>qNG)*n5.h*<i3+^R0q%YA.0K#X.fMe8d`*C"l2l>D_OqS)ES$A^&
%]%_etUF7V6D-.l4,8X/t9`[0=eKRg4:sPW#UlRiO:ROWd!m52g:h,'"q'WD@MWqO,<H\XK"uG<,ns]BW+kW2CR'7[0/,Cq-N&\'g
%BuY^[Q3BY7;r<+rpD$:QNSQ&$eY4L7g!AZ["^9bqi8ei^oQXmK#E#%Igi?B+,k*c#:Z_[2>e$>@]<2PNWI2c4ni3mk:f]gmF[M%b
%R-C#a>b=VubSbIcX?L-BAdd!g9Ogg9bAMU\!)>Z%Jie`+]aiMX)8]o31W(5&2=k7Ia-erlL:XXb9[eZl,(7,sI6*n]`_qWO)GU`l
%C0&9a+ac!3YWlSBC\NVq;^E3ni^4VXdpAchp5*6\WLEp!M-Z`CMmXau:5aK8:diDrR:[R"p%=?BZ(LXn9-CBYADlH\+^7a/F:_6X
%gh:dJ;e4qji9ufOhX(R\/83-#/&_,B+iNTk.t\<kVM-:X&B(3#[Jt=+P56;2nG++;$bc4*O_IK;d"a/g,=b3%dNo=lpBFR+%O]^u
%Gf".JPWe!f6_b\).hd0_WNOaU6rIV3[rl7Tk`?:9!+_tR#)LbQL5h"OYaUJk)\E0F?pq3(944:84`(\L()]p<k92:L<$Ynib=Q==
%JE/(<UkFs6Ja"VQMqPrR.He8kg)k%8if&]_K`2q\R:+BZYLs8$Ac@bRROfX.oEA$"RbG`@gSq';LoMROiC4,/Yo*F.=HkQ1_++f'
%#X#,GfeZlbM**f:&hO[PUrDp64:;b\DFruf!3==T,B4-<hug\da]1fAcEm5&[28X@X+^U1M#@KgeIDu:Z)eKF=%<p[#XH)&8'@+-
%>8L^]*edd?8qQo<b8l32]WjA]i%;Nl>aFiQo-PjC1^Orc\\.dgD9Q:n)Il%mHh7(GA&(W@$D3&-^+=@\IS<)4'*$t!\79HG8bmL<
%l-$.`mU3n"DfVm^InN#r@1DsaWX+4mNr1=<b;Z]g[4IafL[NE]2:c`"l?m;nFuobh.^4KL/!DW^`T]'ZArLtTX/8G9UUY>#(CL=O
%$ogtZ>2j7";,]PB9#1:*Pt,&41OIG1<d#4A9EUfNH,/r\$--k0FGlF4=Q1/bTMWOB:fYM>L:03.XS.8o`Z,7Xk-.Y5BKG:@%ZP.=
%?3E;b6gIF7'uRjK=iS1_PbUnb`ss0GR^BREHB$?Hi@,CuMXX%aq)F@1,9V&1b^NsaAHqka4G02=/%mS%nXbN?R%sNimePW@,kX:A
%#`O-N".$&9,(VES";$q_Nu?Llc:tX::QdU#.AN;6NrE>(:<^5M6>%e/Z-RZL>Z1"-,V$i@nl&re39K1S2E/T7"`5_p!p+?Y:<@a-
%nm%R3%MUcg5&OnY&?p;VLH^,JC5AB"1c6lOQcJpo=^Y-lG8bkOHKYbmiPodhG!S.RE<_RI/KIr<#pgRuf-m%tKShel00n8Zf(1Ze
%'V;mLj"+dT5L"]oCM9^i_,f,J],8Z.g0CLGM'>D!#u/JXHb]s13>rD[Y)FtkC+0k?N'KB\$mS-+)HT04=OiU"$lg"gTIF@dNe_F=
%70F'jY/jh1N%O](bH33&AFrE%q]NRDnAAr@&uI-8kHu-D5ECO"50nC/712sG'<j=9^s+*O&G8!FHO&b:DgI^JE82;VIgM9+jB/NB
%^a/&7l!_@j>F)'h*Z+5d%^a=lK<(]2<0^:+#Y$(6,i.F78I:U+>o8jDRM"Y$_N\blS'?e(Zo4dAGZH/l=30^>q`N?4R*;3IRP(.m
%LkTUb_IK2!N>t#79TF;f\WRel0,(q!Gnn_maG>n5aV"FVPXAUT8.dSI84dr'`0=)h1mS5A&]c%`G%JMmJ][MA$/HUr-'&mOSl_'(
%o.37gh3<V43LVD-rjbEoWrOFKBa,%t*5^ga15\JcVK.nE8mH1_V`/VR>a.:qrHV5%eBRHF^._-PTN-N5oG3gL-&(KI[0-O%.LMe5
%O\k0dCDeY'@j4b\9L@/".;73522;m$`u$R@=Fi-cV@]LlDjj$(?]$>.;3GZpGONth&b:E86kHV*0S%;9H-tQgG`e*mEAc809I+RH
%El6$]SZEc4nmD%ansDj!b\.dP7!89:ZIk'"i:Z"h,YNO+D&tPYP12"OJ[=ppiE4j(c"Yh4B[eHU#R<U.^Dt:I+\/)5RG&847-$"b
%K:^F6jf'MN`r$C>>V$j,ZtO>0d?NE!pHqEXLFZo9oo=lne7ZSEpeD?]:%3]!?s2\.&mMPS249`*?l<kG<K;]o((/gaEI'Ua#a%rL
%)pOm9:_P::QAH>(#U@"/(Hg$G<<a4[g3:P-C>K/^CU""n.iM7>TdCj/[j]U&non8%*oVEE>oAW;Y8)ZN>Zkks^r4VW156:ZK5Z'^
%XbEMYd:<r#7*YnN:qi,]Tu\Q0)-ZH[B@-Jh,TnEsc:Q^Y&1/cE@`Y*-nh:-FB=$eQc&+d"EB#7l#G7cc%Z(FEb=dRk!eGASmP$NE
%^b5=`E;)s9:a3iiCP#mCNSVK05soGQC_kV*!bEHrHTT(oT>PA;o9@SLb>`9+_WB7K\Y"I8Wk'=-D]fW^MmI2N;^sVmS]NUTbCi2b
%f*$,"Z-Sf79naG5BBhCqGlT:l0@,S8ob=k)=_NS$JSgj,e;r@URKf&lL3%sJ>uKk.3[YK1pdDjTS3W`X64N+2"^3IE^ksiPlqT6S
%:=-':d##k)_*b7i$^ge>2\bqmM`$qe[\$.K=_^9IB%Fm/@DD"oQ$?da0[-L-kSC:%21hcH'uiPaF=JU>AJ\:1UCAn5Om>.=\7ZNZ
%JOUie`2XF^?`a=n6ORK7rQ$K4>mSqh4->L&%+M$^d8]);c9p%.r`&2h@KYi09!3M(JUs)%Zp#fG.J<"^)Gol/rT4MFLBj#h9kH'+
%$6h/$X`fe;3KckS;kY7UmEnle:)Y70.=9Nr_FrcPk"'Har!PsZ;i55RVpuRUkX`+Re`pY,GcC&Z1lrhW?I1%aM5t`s_bBc(mRJW5
%GAj34-k/feJgS=o.eA7B;F+dYPmKGDPlZq/Ld7!o2nLqkom>QLp^O(s@qEr,?=iUKXD#K#6sC4.6uD6a8H91*1R49Gq&TgkM-KL"
%//q3;Pn[,bW@RQ$(,j[-%]l37J>fF%;Y-p7VMa.k!1`m*4*;hQMb63)@06?X$>E%q[CGjCOgHnKHNR;N9[g@Jlf&sALu>e3CkT%o
%B^V#s/-XTH\+*VTe9g:0UIu^-L,TZ'pheKim5!hk[n$,!fQkX'D@3E^/\@$mi%##7CP;t@.Dt$Z'f-2ejgb59$[U`pBkg/gqoi^g
%fWK]SRU'F-[96WtUgFOkMi3uQQG]#g%TJ\$;+bC+EG>@ggRtGK+KuWh/X8^Q,MC37cD#)r*Q5efD-fsW,tBWj0l2UnWYdZ,(44cH
%1F!js@`s+$GZ*gd5Z`T.N$Ou<@*a3oXuP^Y>`H#Qr#$_W#)<RIOo#*s^5<NTae]a:6u_9n]M:M%,+E2,$0aic-rnfgTqa9K+(Eem
%-NTPKl(!=B*biDq0X\T;_:/t2$DqFJ6SLA>Ae:ldJ_bX^m%?qr3/4KgGCq"_/rcCn4CKkTV]U$/d6(>EHCFt*1IeGuD,!&WBE43%
%leF<7)Q/#[U+8;9^nV]f4k`0#cgqPJP!R6:"oqn>Ao6#J1nRY_''_nh8Bu6/KM1IU@!)bIEQ&VDE1&<K"0<>LHL6<`*J,#"c$6j.
%C;+HhVIg=8SIf&PBC&JO33cZ\]LU4W0/Za2;)>^CEqIM1RR,lait=4ZJMq8_^sV#uolMbnpNdgOGo`bRZ:E?%%;g6:TNM4*19/G/
%pJ8f-)31URdpo.bbZ'V$))LG=C<!@$'K'A9F%"9?AKOc*(20FSB!=\JfO"1=-&j)#W#7\PAC3\-9ERTI**@REfMSCmDS;m%S@$"+
%V$t-R[$!Q`OJPMR=Z8471JRZl5fqCfd0<8M9iZ]7BSs`@SaHOmM3cdgJfjOqGh&=QK!]F[R6:%C`#i2fcbSNpYGp6QaL@)rd7bO%
%N1<-*+=i?L&giZeOVejKo,Na?U.=<k0bf2FL)!GglXGaee&!gkW@b!e6hBA@B.8PO77k$hUM-B3h['P7@jH@$#,1Y97%gq?>T>*L
%na:5J:D.>a^(QZ,pT%J`'&e`gdf<Pt-_,]pTb4sTPt1V/&t&"QS>G="60;LMW%qXe_+mad._'I)jEoS8`\r,\R+%-FCs#p@dQPlq
%5QQFO$?Q/Y4]!oC^,S)?;8g%3%f_JO#m"7TgYnbCcARrV9%RgIIP)rOkqPI,AqLL1ei5>`Vn00S&0clYW$t#rDCH8r'^jCB?pkb>
%(mooI%-.[mf8[&3j'ifgl,kj-C(dk$-D7A]B)mc]%aCbCVYEmc0$O+4Ae''#J0)nEBf]ff2e\'0`-.*Z<6JV8#Blh9RQOtK,&>S8
%`sM?R`NY*R>:8A1R2q?u5K=)5`no<^BIhYH%!G!f7`4)WkFUs&fifbAVoY#IS-2S!M^XVZO9#GZRZ)e_nNTK*(If[jUc)+m<V:85
%OeS&mVT2r)PaIU?>SA!(JosB42pHQnVO.PC$NbQrWrc,Ag/L86FNPKOcA4oD`!8@,pup3u@=_B*]POs*<(BddlBliklG4K/V_dSY
%#aDm9nJ88qK+<o".03GCj91N",r%:A<lI"Q70>B<c?H"='.K%JVX]fa")slhK4@J&K;0Tnf@.hLqM.&W![Bc;e"W<KZRppe8le)u
%fY#dL6uNrI^9^o8%E1]u)/G(dO0ps9?gm`0]b`7:YqRk9=Js(I$h&om&I<Fam)A7H*>,W&,V-_YG/T+J*F[Jhm"h$g`1EfsXT=ni
%6SWFe7p;(e,#-PAXb&^@!ubm(oT\!Zn52k_&j$`k891Y":[A't<!SX^lnI?HZ,=G*@L%'->5LkW^`fYQcR*fXgh#SdU9<J\a/4T#
%&`I,QCS?ZC;N^lcPJ%f6QDMfiC@V1e4q+8;.s7,-Y0P21$lkQs"!2n*e*HLuQm#.PPVHM)7i<C,bWfSI-;2aLZj`O?MTH_#>>a.s
%deZcf6OT>=jJ^a?Q#WK>3ml22/h$sk/3U-DI&:U2Ugj2m::]">!08iH[EYK>=\iEBTB3,r*n(Pmg=_R)RYT?_m&-ck1"DnUXhJQB
%]!9KUc?"sSf)RB<9OPgVe*HLuQm#.PPVM%R7iC2qr$Z%bVOcY/L*6tJ'djbn;X4"4\se$1nMjQT9chLE<%[%Gl7)kU*Z&tL!j0%K
%i)>eoL%ci'H<ntQ$BjI9A)f@`VBc]MO:\f&L*V'&-]>boP!$t\=EW.fj\T%'S9K,+XO!]FR`-93W`f%hY$.Jq=(eb9X1$W_Y1b%$
%Fk$s\=`i"$lPc.Y"/Drc*G([/RgmdA4r#I5Ub1T'%WteE!-c1bASrWan9bG@<EBj!e!Q%G+RtSM&C]f/RJWIG$I#pUXBZu+bfiJp
%B)sZNQq0:@Yn]F@XZ)6aCG=R8nq\%2UaVWD,KU$Jrt+ZFahu1*,KXFcTU8.-fXa_"9(K3*:%F)W_CK2lHBLcbX#GfJ9h?C?)&"Jk
%*[$5P<Q?`Y,1hp(;_&[5A@<37VF;BP8FjQm#ea-e8Ff%@-t4Sr*_'$E8KJX\P<98$9(K4UT&bI+'4#5rH/O3'j6;fhJKLdeV*2qQ
%A>rh0E>A,f4mgcFH/LeSOX3LrVha/h,S+-!nT3A/%pDJh!(N-,=n%R7Z%F(+-58ON.B:m.Or'(hA)tJ^_BHW56AI'+d@eI<#FUPN
%MmdiaO_n7(_nL[$Y[.HoL=ahsHVXHpD#;%h)`B+c&7HCWdA1<A>Xncg>0u0-7RW2kaK"N"PG3&IK=tc-B4^5L93fMNKj&T4-6Y!c
%`\:;YmCoOnmd22(r))nl\Uhjm]f1V1:);Gl(8bm<'TZqN?G52W%jBPOkOEl3GFmGX'B:"l9;9BE'MSfSX13D#+KZZn<#5q6^,!=K
%H?]CQhgHM?h,VnRWIGF,56L)-VKecRl.,+0=Ve%=df>J.(iP"c(?lL7S1?;OR(D&D$G[6_3J"`?-)nrF"/4\b*A8/g7N*,iRL%rs
%g35Q14-/<Ba%3E,5+Z.&_HibjCE5(qIXTuB]NbcaCQM<nOuKK9c[Fbt@;jD9JC&"E"E9+1IkgOh!)aUt=B+U+:a%V:rs(WY(NW(.
%8"X+ApPns('P)Jhi#)f_Q.Hm&fOD?VBMhac.6<U4O[s]=FDes;V][MIap[f5:8cO"3sG.R;]=XjR1A5'hC0iRYe8St;eC"a+a-Bh
%k1t-8H)IHEj%`053:<"fhRHM4`($1tpR9Vl;7""e*m"8hgXD^FAB+LHo6Ktrj?3H]*3'B$/deEGPcSBJh`Kk:C)RT6kS%QfAmLo/
%#\<-UgAOhl(2kLg(@VXR9;DPs/!2f[)SgF*;]\9&i#d.Mne<p++l+RY`g=+%EX6k1_<[+Q]uHV+L2bosBtSnmUj9qMP1CbJKSN=4
%rVkcH+upgZ4tI>u@E3-)rXlU)!rUm"(a"EN`[r*rKu^S6ncPsCbMCN<58PYT)V\[bVMTu2RALs9Bj.*E_PX.<F#U53gVrFS*&_p8
%Qsjs3cQ8tZ.<I@0Mr!I?]t/8-%j?94dW!+kO=',hM6mK?Q'"g@C?e;Bg`u'R*kmk\W5J.g:;;-hdRB:h3U':1:&XWSIE#!(%Nqp^
%1toJ>@TmbO*\.f2lI"+ahf+^S]DD#pV2IL,Ds7Q62dI3]?#YV1@oBMu.*P'"?H"bXE'^@X\Z[cj_/U+IGn%!XoFO)d<I2$uZPY?C
%J5mn$+Mb"_0`,mR>bHDekF8iADoCh@P2pV`^i-E*aE4JUJ4OH^cC%5)TU#+LOi6R*3kLP!GH>@(IHac=m4`FCcm6qA-.L4^X+Z(n
%p;eD9rKP6?X+ZA#DO&SHcW_][mrYVK`8[H.)B<B>FT9k?FkLk3_kK+$FdO98"pd::Y)4oIN`u\PmOW!Ld?]'1Z-TYRc2k;fMMom!
%;B&C^&4YK\!b)*L:!HL.[n9bfkH,@DBY%3\=A?7s''<J=Lf^rpYApV=+WRs`N&TQB0sS5g@L\?]&<;9_X+\Y=DO#/oS7f)u$*'mI
%lE,YA1-ad2<Kcj]<C2/'.7kRm9)MpL;dN`O$lCn@bFM^GH\$K1Sq?"\R$%_`Ye?u!$<c]l)9'01jBbUbg4i"P7Ea<VA!=BG^,Q66
%5^+,0'rGY'@+Z>M$T7L`.gqTJo%o&]\(@tNE:j"VkOQ9C@fUj3=Ihp>baEL?0C:A[>!#dC+c[Y&VL^"'pM*']N=lF8aue\(BH5/V
%KGL*ajo#n](dWs`Go*1-3j--=:RO:(/+4[coQ]U8,f;L3Lb%pL=a`B<o%rfX.kMd^)[j800&\eHZJ&I_ESu*%l]ANpEP*H2:9J%c
%hH?4c]MH)sGXH0$rkS&ihbm54"32@$9Ag=#D[b:&Nrm?@6@0me*:J&(j:mDW,3*ol`2PVWE1g<"IbX?3a87Tshc3Cc#omjhm@51V
%hN/](G2RU4G\\!DE4iM2j*72:_srK.WYbiY>=RAVq77Tg]8O.GRR(RWhYhJ`mJt]%QWM-HVB7#!)S6G+aQ4^maU&"W=9I2:S03ED
%j6;`h"M(PiCgka=@5`TG0hpcZCDbT9#_rST`Z+&dRb1.Eiu2GE^gk%Z%ZF,uT_8NCeIhcu]WRD.!^Q3LO@=p.P-Ed&@]CF+IBWWt
%O*6'>\8/sMf#n`NU/.Gr]Q:.]AC%U*"rPe],WY)=$iZ/$W13-R7oKIqLMI2n]u$U<IOKjLbmP1[.u=XsXb,uC6b)^n.#o=3H4;5-
%L7k6Cdg;2WlV8"Z(U4P8"HbR/c\]Q#X6QDW0_:0ZDZq`49uj8Z7Z[o1$!.m5hAth-R_'P1hXV[%C+@#>+!6t"oK`!8^oH#/cND9N
%a\O]>ahs''UeB7FAB$a?/n#J*eYrNlA3W(EOG$[3PB3OAAgSSA)o0D\lcG)7K19RB0a374/(^KL#_lF&KGamN4e>@'6Pp/H&r.?g
%H4;YW%H0!N@^sO=M2?pu*c#^CnYME:.lD`KB(n**Ue>ZiQHArcfL)!!%]$+!p0\gXQfT/Bk'F,mTQ>fJ":EHMkLO8J%Ti7iq>f4Y
%Xgag4N+c,f`%m*gAoD!^!JmWh"!(+VZP`jRIq-J`hO_t/#j\f7PD*]eSDk9#gTqc]LQKcJ1u9ord_sq"8SaD`!gL.U3F?C<2"6fu
%:P!*d(>FWQO0eU`G+r)l)$=:eEAM+10UjdgINWo';7B`Q6O/3LDhoBQ3AnXN?tk?=GrO)5g1-;.]Z%63C.CebL(RmjKqX%4LgfR9
%<aQs.XsopEJ;=Xkeu=1U[A7qlLB7PCb%S=Q!>4;@:O8Q_bUWN6*i\NP@%BGoD[\Y6nM1:5h^^Rr:k\s.&FRocaZQOh)kl%/UT9#@
%Tu.a*QeK0nRT5,o!Qc8kHEO"8JKbe8L!0Z>Ci^1.[Z%3@@fU)72CIb))fD.a(U,6t]J8lM+ag93Fd"ih;/NB*jjtRrW&T;KLPcN0
%fq'OuKU"+Ns.Ooq'PM*M8;3iH+81;kA!O0lM:ddK,'rKs63BK+Cc*i,W[+?.Z%5eA#s;$CRF/C7l?sGG$4V:4>"fYL9Hl0oD^4")
%'NM5_i*.i^S&5N3@MB^;RLQ_T)A1g:S(:K+(DV@<"idS>WSul/X<ss:6E(pS?\,J"J%rDR;WVaFX/GRE!5>@,np_SJ'#p!>Ies>-
%nFMGW:M!j:_oYFjIs*L4[Xt[7nq"`cDe$9k1.9>9WP?u3<0XD[$U_#:-:qcBVBZ(_Vm9d!fI/bV3+eaF+@f+;L8:_V7+"_[J^df6
%8r_Y4[8I<cVmj'^#]u*'oJ&qi[;+]R*LL(S41CE-L3t3UD1)O%MU=%#93Ps.TUuiJQ%N=P_B(r\eA)KXgq'-#+$*(=8HeINFj$,"
%gBgQsMZFCgl)K-&+8_T6Ac`QgRZ8M)@4!g;P,;j-ZZ)^)GMu.GXj=.=2Wk&]qe\;+<>mAYBdS2bXI^g-^\kT#Pe>5/3)^jgg[+?q
%<<4#?o=4!:XY:C`gtET),0G`G@GI&="Cs:dq[n3,dBrb;;kKCX#9O'3Jd$7gUW"t!g[loq^Iq]iI+COldpqH5@a&(?GVb:Xj]Lf'
%]G[tHHl(K1$B?38n.;JS%Uk?_c,j-1\&!M3!)D75#/JVeV'eL*<1ddI9s/HNVA`'C_NqE,dj'ia$>c*#9Kt,3,X?d[JDFnX^.gYs
%[6;XuM!G=5c7@lF=oMNZ=e)KjG9+h[mR8:uRt,dlda5.41N0T;60mZ-&U,7WpoLPEhj,B_22\ql>@Ns0mE6Q0p/2*!RU@@X.!(Y-
%Fld&9fXUEQlT<Z,>4e^j;X1t$>Gc;2LXIB'T?e#SjFn,?Al];?VF!d<[[lfdn]@>9!-l9tT0g.j;:0PE(@MYF7A'R@U+Z0%RqE17
%qHL\XXndp9B,j?OI?jEK7o>\'mA(aJiLrl:<,F&1WM.GdcY6Z;[dPnZ;WkP(32dTk0Npg5Sdop/`@k2dB5R3loUeqnbVLdbH)1JQ
%#jc!ZT?9U_9!mDFi!CFS;q:gF"&[Aa9P#mD!@>X*,ZYYrR6!ZFJ*fL7d1Ab(X.LEh([I:1?\_Wrg%@(!&4s<McKTLUBTq-,&-&oi
%FAA^-g,gdC:C?%db@Jp6*GfpVR7\fb:DS)_eJ<WM[QK-QMlYH_l3\:/CQh8G`Pn0M4>?uH\koM3fth,!:/dC,9WKjOB+r`/Me0.e
%Gk!G@I_I<]Q),6_3I,L4pB8cSF]'?tX`Q=&$:p0aYNC,ZbLRtmfJQE2P2lh>V*b%U]/i"?[k+aqE,"0]q*G*h>T8#4T'=`9MGDFO
%=b=WGSb_ks1,g`D`!<ER-PF"u>#sAG&op@clp<&#KPC0jXpR9T'M%enOKdCMlc6mRDjreV\s7!0d-Bos&oLn:+dAnGH_;@?ZUtZR
%S8ZsKnEWFrZ@P`h#no:!-[iUpmjk6-7WGuKV$2+ofJFtH<I+=(>W21.:!l75qP<:qR[&Vh`UHLLHTLmK#`i]_8P-/n04p^,R5fnL
%ISR/=[G7gTau"e3#cI44Gu#+FM]o2g^-b/aa5DP./]]!$k7n=jd-76k\AZ2Sf,FrqfE85B45Z"/?Hd-,Q?nPSLc=[RMG"taYf:H-
%d]Z^WU.I^hQNrq,:9F;ck339<jnXMd_./5bp5]9"8^"S4ktekMI>nLGP\4de%'UM7C2LTh@ga:9RG(iJIYGoUWp`9h6IU2X$IsFt
%f%*Jnf3l62KBcc2>bYMRX9-ai;]WK0J.dsV\*8A%)G^2:0@t%AaB#Lan#3rd&@O7"[3+:qa3uXd*<Z63)R_p8mBrM[e)eqdTa8ES
%\)QqWE3?EF<Rh26m;c_0ElA;Qi/:!^JnY*]W'c2.N2ODrQaJ:92Vai_^Nf#D'k1<>ZrW(iY>8pK84A/BT!VOVK+B?Aj:M0Ub<icJ
%;P2c0@i@VYrhVI&Y)*DHXN&`-dqN_)1oa82F2sIB#BUW#bo^j.&5EWR0.]b\5,iE4-Km=C\p[\]=+GikdfR:*4o/FX9sU3t!8p\_
%E*&!!2's'L!bRAVJ(GZ)O%lVu(50(&Ti#PFegfb)!cr-WKGs[tC\8C=h[X'h/NpGaXOTF`CoujI]!\!)<1dc.K3"OO(UmGMKMt6u
%DQPBi4*`^CLd?J?(7h+qgss,53k8fb$gj>9&FOWl#_RZtG'_"'U";P*2lN.SF+g8dLCDB+<g=L,8)FU9IA,%tkqrBmr/YDgAVDk8
%:b%c]I#Jl,'G6PM+4i(K\cAcgF/8q)k$2Gn!qKJr@:i+8KYseBW+[9iR)1"!WU7FBnP72%=ij$[e5j_tneY+LdE60j]\$e&YC)r/
%GINjo#q>#?;i7rE-JK=C"%k0ukRLUH2]5*dm80>b%P"75b0?XS4+p8eD$!D5"%8-2L(%%WIm"39-8uod5<s<"-,=UZ8#0DMUY+Hc
%_\t:blVK(17K3Dd_17REWJk.P7?t)&/mM:+9G1-fDM?Ne0%Wg^hoE_X2Q0h#gG"+q[j$>4ddPJFW=4C<$toj/5RS)d&%]/.Uk`](
%)1](ORCb]>)8^m>i,H88L'J[GD$6QLa/"(J&<?DG/mPBPobk5N)Sg@3VU<D3S>Pp@la.2dCZWt_^O:DM:a0\m4!#()j/B^<]f_?]
%8gbaR-kPhbQ=YNiKVn4lj(u<?jrsR(Lp'Zq*<TE)qnA;CNYVXcF4BKi07qXIXHt2tp"Ug_aJK>1BY^-niZL(4pGfPh#]D'u1O\<u
%VV_k,G=CfG[@o^5X?,IjR[03djP!_-3&`iATppT!ILS4f$-ISP!]"\n01mIF<MqHpBUBA%i0ku2U>n,+<'l#`q)Km@C5UZiW65bO
%LSF-6(mEt$LuYnFfESJK`L>q=OSE]NotC"nZkq"(bEjkB>[j,=0,'u=o\ma_9+IThdeUl)_Xq;KZ+i6FCH/5$#cB%#L7?t)0sU@[
%q&16UZoBtCC")G3_`]B$3]'s&0+TlRMn-$5r5l'jAa:+u61HpVr&'X]HTN._?Jb#7E,88BH2_r3HcD6s&U<L8+N0ckn):e!ZPR##
%9gp;-d8^&2Ub/irokGOP&m(#B/T?k'?Wun*G+B]M%W%kbLo:c1*OM?P*OLX)PTp#dUnGVh'[e9kk@U<clV_Udn-USD(W%t0F%T27
%8@Y;bHj]Pr["tie2r*F/<A!`LL3(7$_o]q')WFf_gp-(8^u9qullYB(QoY(@T4V+2OMPt>I>EWP\=\W[#bp7t4;A#6;=.-7@ni,3
%9fqbco?o3>YZNF#a[kk48N+82$q;RVq].Ul-_@K_m-gua7N>.]%[?FC)D"g9KOITc]In/;E3jCURT&j8Y&Ai?HGe`gZQ$X8P&Th`
%NXJDaC/2VP0X5AdriICHMiBI7,+>5CD]tTj]/pHsaR-"4?CP\?GlFKg)ac;)-7I/g.8;P0e?j(]_"q!N!f)?kb%?2&CPd:@+F#'Z
%h60NQmaE#WSG#?NYAV4<Non!D:3!VO\q9V-)-Rg<dT)c/_E@?6+*]J6&bg/TkVEl#`W4V7A,].?YS>knjk]Q32(IE:pD2IC<bN@U
%J2P8;1/lcp:#CEqYEO'L&9Nj%qt23>_PEn95AXW+&k&O"bp0GM>4FtP>,p`f[&=3ROesi8!QM37,aeE**5O<C2ZO$TqeTF?l#3B7
%pf>hfp"4NKS<`=%9mmgL[ma*>V;=QS>"Y-O+h\RWG^eZu?b1TEDNPQA4ISG:<4I[j&`_\Ud`04uZTYLCan5%3\\)W[=7cgAL>sLd
%!5N0RO5OA]<@tdC5P``,T""UT/!Fl%RoH/]$&&uhMt3Q0Y7J2*H\kSV:F*cT;K<%[F@ju\]]:-'#5$35DlU?m%u.)52FSiM[c+)J
%K[OMF(j6^Pr[g7LU\*?C,O=.;Oc79i?q`EXq>%M0_J[(+8gObH7oA;Kak)V/V=q)+YB:s5ok<pk=:-(>\cM=rD,3CKYn^n3L'HCL
%ZolY8mC99>Sg_1OGFg0gE=I,%eL%i`*`ph7UP2i5eCT5`O)E5%P>.Od+V`DV4%T6Vh/$oO_GZ=u.-/;"T6`2-D:%.jb/VEU'dLt-
%3=d8.d(cuQ=:q"8Kln(r"*HM8Ujl#1TSarW#q<XP;J`\36EE-sakR#Vk7E5J&g8896'?.<VuM.1)b6V#SAF2l$=0XK]pbij2r8D_
%*?*+"V_XlqDLLnqg_O#Z5*O4AFX+tR+&/Z;a-o"I>:6VHV:P`oGq`M)`,Q<1_(HKH3/);`YZjXeFiBQkI"g.(bJgMm4EU`0Bni@!
%8LkX1V6;(WV)n=Qj?.dg7Fa9J8rK!A%G=.E4?kO:?E.UP1kdi11[RZaSF"a3S(/H!Oi@D\ibMX#RPY*rb/`m\._o(26>7EtAW7,\
%)$phLlA-i6\$+G%DL(U6bNU=VU04Tm@oe$h/^;_,*#7SgJGGnJSK.T:1,Ii_Aq.Qn?7VKP8q\M4>gojl`HB-"go2RcFiEr\38M^T
%NHo4ncRB:;R)gl:[TJh,A15RJ75XbJr0/P#@2nRCMl20-X64d[rn9NkmlV%Chh;TQkCX.UC4<e^'"94g<C+&BOKjo755Y6kc>g1F
%\UQ`,dBtaZ\*JdilJ'+l>dL",*a$ScC5WuH$t2)?QST*2h:?[='Hc(B#8```Tu\faI0[-J7b*,""Ab'^Z_h;[,;sKk6+]sXC"^;(
%G+A&!?;gY/CCpJCqth>RbY:m:jQZ[Y7S@XjXXP*BnB#^\dc4^F:$Iu?QJM72h"<O37L3cS&=uD^+#S2frtM?SU72I,j/IFV;"8<W
%^l#jsFC5jGCnZO#e61c)U?>34C3hH`om?/)kaD,blL2rT(m!-h0C/8n:*#]X/fm*]Rq02JZJJEp$@08N'>r_kac/W:>J'\e+6uFK
%9Y3iK/F"D_`F:h=;Mo>/%nAl5ro#/%O+fOEW"b[iJ56@-(OIjD!;/1rfY44NHrMai69K/[N%n.HBKr+bEa`-(eqa'>BC%&qC3gU;
%0c2>r2RMVXUEt#NSu4Thpl+q#-B0]9L86et@Zg<+Th`b&mr[NTJBgF[:.?P=SYCk^:Con6U&Y`;Mq@p@VpH$5ZZ&?+nlg>R!(*+\
%3=6l2;d/=>!^KkHr,(*$2[sWO+"loL.Cq%R_1gi`F/CC,BmiR'QHO&hW*3J>MFTUd$uF+SkTSEi7s\:ZM:mtbk$I+4h:b!s!+!sA
%"#3u@-/'!r^CM\)otLm1Bf=Ya=7/oc!RXm+a!1qAYhditUi'$0JZ%+7mt_%8_@_8=6LG3Qks]b2"V@B6pdPr_#NeuW5(Viu.I$sM
%c:;>[P;&al#Yj:T.<tYX&Qa'Qld?])r%9FpGQdLYDV)1Zg>X;V/_QR'Tp20U1O>^AX0Y0I#%"Nmdo_=4^Z8B#;U@](=hL#Qb?KV3
%Ya%RhaZ0uPChXoKU^^"_K_V0G>apD9d*O1\>J/J(:/EJ^4AM507aLIHn^IED_N_!U,T&)H[nZuXP(!`tq_`"kKF3eab7NHn/emm"
%ki$,?4HBhuXqP)5f^Mj2@_AGg1Y0J7gEaKq_Rbpkq%eT!994&VUquD.0\pPSCDpV[&UO7fW/"mVo<*b#\O]K?;fN(gIL[Msg@WP/
%F=(YY^)mRsF"qL,3:4$oaZ]EC(B4.`4#W$T=m=Mqm=Quu[+NE!2''(^h.rZY/KXK4UQ!:;@%91Db10&hPF;uEp#J:a@<g&u+O3rE
%hj)?SJ<Mu2d1fg^V_DUEG1rb]-K!.g@P\[eCgXG^o'^_^<J/h9nGd;[NG1"h@j'GOMa(2lok^WoM<N4bjjGfblT1K9X1nMkMVP>'
%0_a5i(TVG$4W9M'd`Oj7]_O_>1'9o*If@W>o4Ei?L\g+thb!cnYY2BM"OY%p'r,61E!mWB__D.U+8_hW?$XHuY5c66BqUcFbZbN:
%_Cks"deG@@'CFa^l0>dj(*T>=J\%A+;9_0Oo5g,R]%nTDFZ2O=360srPaY=V@cRYfg<h'Ik1'3SQ>^*C6CQRJPY)$.plToe<OuJ=
%lf,qo`QQ_!KW_T9G"L,!#p^C/;K/=AJ=-;^KtH12C\OF%VO-?iZP_AD?G^?A++shQ+.(k6*:`28>gY=,nk;p)"3?@/*j$rMGtQDh
%p0X,kDHE71KO"sS@[dZ3:g)h(:P*\e2eI'^"pU8rn,(K2^c9s/HG9<m:M9UNd8WA1p3HIbnW)Mr(dOWCCIt;'#j.)528VJ)Dj]W`
%*%d=JqOgSs:P\H3%2KSr3s5<=G$`4a"Q;^&3#0D2R!q,Mg_Hea<tt6+ZD*^VCPlSmO=Q36inWV1Cg#AX$nSH(PDmN073Jt1rfJf7
%7a\([;5B*U,@MSJBi0DPc?Z4E,WVA4:e![AjX;TWO(S;0d]bTJQc94;":B<gLYI_:bdS9b7bYphqRJFCD'U]CUlD23p9]tSBo]Q_
%oGo/n,^o2R)``Uh^$^nO)p,d>g.3.!OZ&AW)egO2@\+!jf&1M3`USe^<Kn$kF$F<.oh.g7##9-,9ID:U+j/Li)[)LZj[#cN&R6DY
%3ue]Lbn(\Z*@b^l9*#qPN/&%UcCoj-BTO@d3fpgg5?CVd/bC6;&`;[.TR5VH:sBV$E8=0m[PQS]KW?h93/'1[0Btp&o6DdoA<PbP
%YS=*lb$iSoSrU*=o`H>N46u:6L'j8N's;<hHLeRO@n5JVEYaR:MWkZMg4i-BGuc"_g5]9EQ]k?C19&(8VaV1oR>/Q`_B3Ihin]T8
%d/aooq4,\<<Ol+Y$57!Q1fP2W7Ii\q_7M,oR#VS=6%f2*ZB!-q390i/[HQnYYd,?V2?,e[,#d5E>[Kfo^RGgF%m>%@Pq5@B"*Om5
%d19FW2W#i!1-ldJl@?hZ3eVVg+@P5b[-H1/4k4jt#6;qZVC!f\fNIl6f<^^_C.p_bW219\?k'eXF%W+T@<:Y<o@GLn$1gso5sns'
%T9R<VHiZFp2DVjIY*W!a/lJMg;9]Ne2A704dC>pfRunPn[*,Et@G-cnX(W=\0!9I3/rIr^Ft&\jZ=fAFXBH9)H;+&!WrqkWUne.Q
%C,MLoEPDBtOs?/`o8[F%l#\0?r$e/FF&]1fRQ`Z,);<Wpm6WPXYI'hC-!GO/\IQ?\Lt<St\oP)?rLn?E;kn,@or#_jrO,rHR]%:I
%$q203RhjIK_P,T,ZSk%OW,\/a04qpSmf@WR<<C%\,>I)jf3D)Wj!b^S?D[q\*8S7o-p4%n`tUDdmM\utn;A35;j<s1\F]<EqSsca
%i6>3&=oncEq'ZVR'Tig%+c!E>4Q#FHH[Igq-$$H*H,L*LKQ&^dY4$%=f9lSP35qXNs*W_I2ggii_k9f%$!H]8#lrX3=t('&$%c!'
%H&dLn-hP$T8iMV@3iZnQ4-EYTTHP$s.2=3Y#@ZL[_a`B@MA&7j7=N?`S051;C=Ymp!ec;h)oW-#7((^rb7g'6-rA!*02[8H9^O6*
%&:R4B[H/#)iSU_ioJ`7<k3J$f;qOA(j@"kFf&bS,eX@3DP/lA]pp`8s2Xj%9nOhH(&/r0!=;RlS`1Mg(78*=l_21"!,<1fT)o7@f
%V<;!Zh-`d4etbD$J%.D>l,,U\+IAqi*DVer8Cnj<(!stR4eE`L`HA`@'_!-D4S<t]CZI2Mi(3;+1tpXh:T77oYG*K\53mt6bpPuM
%TXL\g2Q)Z(l$\$W2Ckr9IG12&EeNC,4bW(/6g,\okVIf(B`LYB,)qo)M):n3:8E_fP<[WqBo-`[S6/4\V@K):e;F`OLWp.9iQ-f!
%M=2*Jf5/_`bVj*s+,(&)m\L9c\Y>N]PU\pHM%ia^$CJoK=I!9j$:79t)M"/(Unu0kB3N<Z3R`#\c'^c?@<8=7(cH%'iaHo"6FSsN
%Z.YYX=1:3=&.Y0c%6&+K1pO9\@L]WjQ&\XTMI9/eieHBs()B<6,<_U\c0`DG\gsal7h4$HcW%J`J*iU4hGB$0CHFVj1-8;.Fa8`0
%VkHH#E,8d&:`Q)]c+W!P3Dl8t(&B[6A?SqIdql8K8"Du5,_p)_'<>&&07HkM]MT3R:3K2>N?6UW8ac6YGl("-5%sTr@*1;5d%anJ
%`.YRl?E\m7_5]Gn\dGA*pi0uWZBCMAm*,alSZ#S>ci@d?C'>bq>W32"<\'tY5O&uh0NTf9Pp4g2A@YbnM!got3N<iK2?RJMWYS"Y
%;-PlW(8)N3g6p"Gb#4k5),>[2&V.ljb#59926%GQ];QU9Wtsb8lGFZC$[ED1h85YPnT?NY2Ne-W+bq="A!X3LU;3'pb?T9=$EI(k
%EWka8l,3=;'T?c'qQ)dpLhYUhSu)s*0?b]#b%&8Y<mL<84;Ql>hTn6c;s8"EMG(<fY?lLEL2^*5Vt!7<ELL""qH/C1JnY/S7+92.
%gCk<g:7&U9qUje^![C0=:B4/J;).5GYJ&e`PVh3W*@JBZ9"-^#d/MN<.[?P>+oOHBGg"S7.(h\Q6#RdZ>LCH>T"\_bhXe;BmC;rb
%hLMb`]U&A5&fR7QcD%p'WQP.?r$[=S[_O'KG*-*f4`7I+%Um)]Klt&1kN=tP/)L63#0/HK<EY_@BKkdiYW,l^M.huK@omdfA2jAk
%S+&/R\l<>fU$!:EE3iCfR5sFpfE!"S2j5X28!j!2DhWsn5KeWSAcu<dd:0(gY=gl%4/81U9lq#1FHCAR,k[R3(:VCq34DfRT$)Ab
%'KL&pEDoY([gAq<Qu&:1'2Srfa-O3h"@?#qde:c![$@r,UpeR!akJ(qE8DorhK57*`6oOn2)pU0(s/B"%:iET:Mh*!L]'p*ELu->
%E&eFn1?fg$:3Y-dbTk6=#tiG8;*N]8pde>=1?mCthl\i4U$e?t?EF;H<U0f.#u#W\$Hf4j;%E(R!N"Xt\P&#*TPuRK0%hIt<.9ut
%f^eLGDO/dfga*rUH'9N3&&1\F:?a*^q&`*,!:k=!`(cuf:3M@CDY?n`+3MRA2r0+&?/VD040irI!HfUs\&RjAn@2+XIK1L%\Qa1?
%kJHpc@lk+<1m,!le!.cL9Zodb2(`=jZY@*ep\KY*%-7$i_jX>-4*b<GiTn2`><_fG<e($pFqE_S\i1eYkikcWs'7iMf#5m9GW4&Z
%4Bs&ojG)P;ST&eWUq7cH@a_@j:#gOkIE#Q7%NmC,1toIup<uI?dksfmMPire4B^nQ529K/\dffb]%E3*m1?uq!GP?*5/W_R#&lR$
%dV.H0R&<oUB$Cc+:M#%uV+9(PO4",X*j9gj"8jR\lN)I!L"R!#jFD_de/:TbpdTX;'M0>^"]QIa(oE2m'j4.EE6\TZ_ik3K]I5&m
%\2^Y#W<05bq)X8mQ7e%knbf*eD=G1f6?Pt'74=RL>@c]n3h!4/:ib#b&K:1b=bQXA/rMQe-ZqP3NGIq8,W*kir5&q'cY=:+l!T9d
%&N;tB+ie/FWiU5-JA\[LMhuk:)0?@]A^E3AR4b[9J$Qn6Z2e#Cr+(;Sb9Dn[o<JWp0jPQ';l7at&AD>?Bih)oj0D2X3%g+Gg:/]^
%Pj6`!\]M`]:R=N&o5Rodm=-03?ppp:4hWCCcOqVW/rLu;/rPg`Q:-mk,nWA./;[HC`0\q:<p$P^^]$[4q*[QaL6)\Ze/BJ<&ee>#
%gM0?BG;R;!gs*NH40QcdfjCh'TkA?h_876O1MNgH$U*QFGD#oQ5*dO;HUI.ih+uN8E6^.AiV<(/=QYa#\sF(lq4'@+s7cISI3JIO
%laa!+R=p#@Hp4sNB\5Z9e&J@q/'e`cD17^:f^];7C`9_fbntF0>D*K%(HT!&%IM(//osiold2nj^rWV/UgmoFa@PM#cArj+FXI`j
%Z._[;Gp#(6IVHN=+?8DF)1?KI3+lYhE6`JoE/'Gd#Y/j"hbrs("2Pjq94AD7kJi[oSIh;7Uj"%.3.je:3>lo]3;8?AIh$Mo&37%Q
%K/Z/2>iPkA%&'5q"2#M!>ZL;K"2#MgV?*LnDa&jUhON[;hQ/P@`P."V2e*8%1%[5GEu4R.^Uo%UpT&6t#L9&!K%4M`WeT`<F$&(6
%\\3_Kr"BXi6^%B]9n6@.l(8N\h.UdN%Ug?K6d11KHAs-e6TED1N&MdNQrmJHYm,u7NW]DXr(g&!(:,)P^VjW<3gDf1j\#H>F=/2`
%\K:Jmf](&T:\Q6Xk-k.ZXl8hmXlp<>a`lUe)OSZ%<58_,'=8.#L0W4jIGm3!`cKTl*%76cjIrEP0Abh_HTA^8VgCCd'0?Sc_`Nch
%Zt6H"To^GAp3_@enV3)+o;YS`:0iJg"FSQW)EDqj2hSiL3=*3I2rcEQn.[p.1FP>Q#jgKonf8+#I1/X]S=_p8)8$iWJ!\_?*oP:7
%I[VNR*[\urBKB9O8KRd&TsFA.IHfI=ISV9s@,`bB+\\'Y"NIUHPtM'o1.e_7h5ID;#K+[8P=\Yee.fJc!od13*"M*%&<?PW&CMgq
%I>1=V#&oqTBrka+Ufi\TM5SgOAWu2[\n"5<,p0BXYFWdR7cS9MbQm3Ve^Ge+)t;B'!NGT;URY$j1omNG!hR5W?S<`43#qhLVb&(9
%Kr0E=f=l'@?,p)OH't++cR&rTNr+f-!r7:'8K_9a-HR\Vn`T5k,ftJG8Wj=?9p.VB2bES)lI2i6:Oq-G;N'<U_%N3imj<l&FPH!$
%7gsF3lcLO\^.gZ!AN^F-8Wr->GdFV0C.6REf*F++72PmI&QZn?ibS^8L>$Q[70e(DQjG^HV$>cbWl&E+oWD0/+L1ir6`GU,1/#2h
%<Q7"H-l&t6)O6J]<'96]OdhSm<QW+?P_qhqVNAbCg);Dc]Mia-ZEG&Oa2^FEMa.35p:pJHJ,^=7o!a,Ks867(gRnN%hu2ZornaH#
%nsBC8YC:uDs7"qDrqCpAlS&:t8,FO,3rC`3n)+*liIV1QjH&llP5kL8s,;I)=-%k-^E9c]oV;H]?[hnps6'(80E0o"hu4<GfgrMI
%S`?t"IQ`OR3?o9`s7,51V98X0m_JimY7K%LD.*AorX]#Z`_;5EeP0o>:&IHUEq6eW.:!^B>.+[0&OJd^!$OZH9(kC3QtYZY*e7'G
%%YVa`&mg=^@2=!Wfqf)m^F3`ck!]bho[=0CL*]dZ2b-C5UIuW]g8j0Si@JcqbF9Znk`C'Hbk"X3]]<j@bYpjI=SP`C+BQ.NQO3>S
%#o1AoFkjTK9qQaW5AJlY-oM(X?$rlrKJl,>nK5FZE`D6\pC@!t5G.i[T]IcG*C(>6Qcj/'4pA2l<+m+B\Bo/*)+.'goRNtldAf?P
%*5>X4N/Dtc0i&)GE>+;@XeJd4&&h!1C^@YU)8NGgjJ*k#rI[6M=9hGYoP2ln8MSiNU@;k*^?Y[jrR)AmkniGkYf+1.#>j(1e<(s"
%QSRISUiq;cBfBAqoq+W$KbGgAW6$^8QQk5O@#tJQmHrs<f/699E4<^)]Uc'=+rt@e&ae.mHUaj9]tPM=O)?r/4Fi)+[QM;@^mq9%
%CciKfRI_C+rZU0Vg)r]c<tR85Gt?far/inZEf:2Bk$K8QL4(I<RjQXRKf'SGc%MQQYtBG*R,\YHU0KSfej1H*RWO6I@4H]<+.$n]
%n>CTF-!Z$GT0tpU:DSZ.b3fW7V*ZQpL/Ilb*`tRcO#Y3le[H@1<b8J?:-(HSgK=cR`YJrqB`nJ,)6qe#PZq0EaI1f2dti>-DU4Se
%3LWbP``?.gqhOp=nAD:?1/35Cp_pb2@([Mt\IYjZUV9CX#dmUfl]7CPjn=ZF/Q&;V?W,:W6uI&pjR.H]p7(B&dEeO(7I9_OCu!kU
%XK%iT2mDhH@A<kdcYqaqM"94VNE@jg@Z:PF</"@pbqn<[Y[,l-!h2pR+k5ZhNK*)_FU\<>e[,T[LC;VG,PeilR^^cK6!+IIARRt(
%n/hM.9\rJ*PSTj2B;YUpAua8OV50-d.'KMZ!$(6YMV:K+q,&LgSQPWF[2Q\&nFuXe/u:V5+&dDBo[)?R[fc-)iJBBJa/V8bY47L@
%.05$Hk\AmlYTI;W1?!2G'#M>*m(Y"2LLai,6\g9K//jFURF!"]Y&Ah%6uTfmI<(r%J'L3p;Fg+_Qhf\/!'VASl_j5E?OGJ?F1to6
%JE#Fd4V!XtX[47IK"[mp<$6E>'+EDieZ#Z*Xdd:^n3;>!0$9aA="r`&XtbWa$Lq:dDFP36;%SSt\jrM#_<86\-V3g0N/mA/>`5)t
%h!M1Kb:-A0m;80-DBZ_92@r`b>e]P.'m+q]-@PIU8+m[n#a7S&[2$1f%R[8N4t/G"h_OA_I^Da&+D!875;2KiOdWN&=CV_j1D;:M
%M%,K%/$_*eQ9$Kd`Cbsm,'5c(-/7+!#$l)NQaJ8iYu7B)-KIaO:lk!!jE^2[$j8!o^%St<YpGG=qN;Ho6`BMl\aXd:WScu'=c8An
%H[3a;]!\SK\Mlg1(7Z=FTWX)G7G;a[l'cOK'tGt1h:lMOXH_OfW/=W,*bseCVG/7TK=I5e#'NPd7^AD!)Z`L.XBXlFP[iQ1L8'-1
%q*:.\LJ;4"O8soY&%.O_MT"U\&6@$%\[AelDn#P)qbsFTM0!=!rBlUimG8Tf8JVtCL)/>Xeq<].(UgE]-fmX.-Tf0`.r=VHA2OVn
%a.t<+<TuX[Wt.3a_f"1;%R*D>KTP/6F5hNOO.4j^a(;^"-<-EGkA:;Qe[lcfjr`JC(@`f?E*pe70VTmDqUY#-MCG5On(,t;'M6`b
%SV&Ka<#g*,f"#=6h<`gP@.D,r5/a4/%5Xb4Pgt$)_)#^]$0%ZBoIii8rQiAud03]:^9H^]bk,lan.IuFPrjZ#CP0S2ndQ#rE9O4k
%:+_&-#Nmt120O0to7=0;mJ]SL>WdSl=YUL,"Z4`,b<6Y2C`jBtQM[C&Y3`t)#]YQqTc"hQ>e[grMU,+<!YaG7<a-gJ4s1npP8'0>
%,>`=I]mr^:JCdmXZceoggRJngYg`oMWS-DcKL!OYSlb>gYiAaM$Fkn;MoH*g+P0=qhr%6%.utN^9hh9V?H:(=KB$+'?`'*RVj=>+
%:P*l*Rhj<EKh`<'^f(-Aig+E!EI`"GVKE=W:IAgVlr8EtfL)]5c]TsI4^/4K`b`da7f;^bL'%%L.oC3FRRBIV@3N5B:e.qWCR%B(
%\ELU2"#5p0DiQ!;PGsaa:";#gk<qC1*J%7fGhGca\>b/1)Hd,qCdPrWp)XW3Ip[k\(ZF`!V_k"O1k8mP-*+QT1AF%gYC=q3h\sbN
%.AUhg1hT&Db9O8OdTu+iU"!q'KWS!DDE7*`\3IZ^bJ$d"9Ce8r*ar3P!k+SY3#8iMS+=6ZkZ+X>5@/f$G2pidllH7[YuiDq7'a)H
%h\0etda5G&Y1*-9^bu-k*P*q4k8M?t\#sIW]F&S$-=#]g>LbAYj,W^PB'&<$;mbORDRtI#GU_>Q:.)ZfP1%P0+?4\U\:OrO5?>11
%%.B/*\c7]EWMD)fqsi@lEH03$3"\jq^%0lndipHbM4k72Y/(.&nQMHh=Zc5Pg5GK=[D[U\BV21P*N&M6dmfVG5^QnEEH,9$3ajs1
%kM?;($b.tb[*J'Tc\k5[&6^+V!=leu15=KFUT;u[0VAUd=k,g;6LtK(9((3HF]0BD6GlUfg%0th.>sa!%&(662M3B]Ao;dbUc.qj
%J-1+b<.Q[no1u8F&X4'g_/oF);&*s1PB%%TmHWcE6@?YTXZ@e_hSU@XkB-';1nOE/VE;-S0WK:%JEb?sEM$A=6T#8mo#5oNaGi2Y
%PZ9jf8;V5nSRdAoh7uUp=GGa\WY5RAG:gkc=mRRiM./7:iu_(dF;7a$jlre<&dIR=_,P8=8J.X"8hYn2[N8VpHBoORD/@kY@aD!Q
%!A^!26;GoA]a&oTn?OubC@CD#>aU:u5XAKVpK:eu#(Tak4\RQ,flM/:$B!Y=NC%(@Cp&BUAV+e/oDMQSeU&FcO6L`tK&VD+V02)m
%LMZi_LSBk`R(r#`0APT<05DQ*8?<mJ&k9EWTZMNLe8?M`Jab9;Lb.[XSH2+-oU57kbWcRH=M`tj#bYN0$%ak<3T1SVYAL6SV@\C<
%PB&JKTeTP1p;<)',joR\f14#B)WauSFms'\aM_QU$m++7DPsK;%G&Y`4[/>[Su[G,=#GVXbf43:B9#?c_KpUUjCmu2=OLD<Q;`lF
%,+$I5Xof>EL"'5?giB;6\t^AdDOX*dfIbncA,>_uau&V(YR*,8c-*:WC6Qn:cnQO8]]iJ(*X:#iZ,!eYS]8<Ibj)&-*`/WGI6G"m
%46UQ+<$Ekb&&YdY;jt_"R=mGK*Yr71\%RtR3=%H"IYt;<Z$&+_RM`q^^hu(NL@J"&(,9/Ub*s7%P+0KR@(`?2GlbANc!0]rF&C"q
%H+GAZ_Ym+q!XRi>p_$1c/U,fS!:+A6B%Qp!%!uC)/M?,E7nEVrn$c-+OPrhF2lqes]B""A#T=K`Jp<uKk3t0f]mJ)TK4lo]X>V_9
%ZtKB)^?[7Zl!%*S+ViGch0t\\ef=L`+J/!!?5Ct(HL)fV%P6B4?3VsNC#%kCp7<oJ>mYtDopk\T?T=kB;eRgIAE2g:g[.A2aa2tF
%:rtqQj&X?J&W2>%*>!e1l7#^VrC`D$KFg?Ha^]JZNZK$eW-[9F%uedln"JRfJc&"F>gCWA6^UTTZ"u)LB[r-opCT':EoQf)4dJk<
%Ul3?=&i6`@$W^AQUSJ9l.dY_%DC+.[o[1Cms&37>@TFTm)@rT!6Imsuc/m^7e+o$D(1V,P;Z?8^I/\a=4?c-qG%JsaK]E$s=\c!p
%RYAqI+E3go+@R/#pSdFaW&M1ScN;&!<K&=qgJY)JE@!0+r#Bo?TjP^QhD;^Q0>C_F?Hf=F.:Nip:B)kZP1K4K$K*i;6P\$QOkjr]
%TFAFVG`E7pQ)))3Ir%h<I<?4tkm"fZWH\Y;O<b2G?Xo1@9.l9P,l(0j?mtI[3[\9'F]\9(fG$_Lgi*2!K0O*f^P_\Yl[uEuB\[GR
%iEbN6-<KU?a'eO2Eku)[\LY<LV@6*j2l4BiJ@s;(@O4MUekLceI%Der^;t*$_1Ua)80Y8g9UJ`;\Q4t:"WKAWVOe^lTmI:cgf#Ai
%1#)/aRa;WRV/h)[9CJNREjmAs)FcGd_l]puU[b#?\_&&:DBo"^RO^R`G:)P'Afh-NosCiZEmANd@8,;#6Z9uJh4DT2`T>K0?/^gM
%(uEr?pFCpTdiu%gNHcLBaCh0,=c,Z<]"t+d<[qpTMO(%O=:^afnlG<m5?Da:-`5IGREg*5V4c+\TUGr&4M`'tEp<N,1JV'YX].US
%=5E;;RCh\ICDaqoHYA%([\W#b0XgkeX9JrKRSjZkddrC*5KuXg0R[aQ=H[cJeO<h,dFlo"2V,d5Fd1?1bmATA>O3NEorTE]Vt\Q=
%4#2*!#OqpPbAMe-42OLSH`;N5Fcj:U><W@>d!$>Dpn0p0-)@b/#0Ze,E0Hkt/Ghj^Gpod2<g%_i=+VuXgp"R>X-)OH>@\C9F*%)L
%B]PmOd7l')_)PK'*7XR5#epmVF4ODaqb7u$g!V>qSpSj*o^b!t41^t:+IhZL`IKJ,`/Lil#/$GEq9kcL;qr/R:XuFpZo*okF`ZQM
%RF4,sRbUSf6Ha_Abdl<KG%2#<Usm_H&q$:_\U+QK1Ikp?l.th4m_m*\8$OQM@!8`$H%a71)tU[q+/_+73i3*khg4LKa.aOmk]H:a
%'J=e>f;>Aoq#XneJjt7!&\)_X_VKjUSTd0Ol:UT1k1gCG=rnTfD8jV1/iQ-1>FCc?=>%kc96R;Zr[bE("#Bh>&tSc!5`8%/S*VX:
%m_PCK-qRuT>0X=2ZIaH-r+#qI/;s_5kB<9X2U0;Fg@J_&YuL^I&)B$W/U#MoX`Q7b-"fPh>DPA[9@8<mj&3q*btQZm[1*Lg$^KJP
%YpP6OF%egWc&+o!AGY.p<8R>%$YeF9#IL@+e=EnPdhRQLn#OjfXB=31R"qdn3g:!I>665>4d\Efb>6g+O;_\S.OK?q?#&%:b!Y*:
%DCe]\F!-(eeA+f.a</FGD_H2D@56GZBj<5fckWWbKN]m`"[i&YKmdp0Dl8U[F1t7H008;*9TQ_d:^>s$5Q#Wjo-#0@/otfEoTO<a
%BU?JpP'5u:#Kr7KGWS.f$pP%:homP&G"n`9]t<fgf$3`R<@gn&fqX=q@_3?>>D-`l,HjPPdd`#8bIpC!'u&J]DAO8gPO]P[]st>l
%hhYMPXWEd$_iK`FY54tLPoN>8=;Ei<jiHX-K@'2UQY,meEO"d`FK>VG\0"EE^t^QSs,gp%M;d5plY9<e\@&SPaF-s((,o!/p!A?H
%_1gMEWbSt359&U[ZVbCI$Ac'tP+E%S$!p(qD8Q1UA>%+aHa=6F+G@[eGV+e#2-H/1*hh83nT;K(bR@e1#QBgO6801P@,^;@`1[Dl
%IkV1W`oNS/5Q%:3fI9M1C6AG&h1u15Vtsqi4RDTW1O0s2+IYLKSEjZZ/^uVR2H%BSi220NFYfG.>3l[oW9Vst_6Tf_K3"@L#fX.5
%RV*H[MEGflk=/.)SS%.WG@iZ/(6U[Fl!O?&HYNo#fGMgWPCbts4k5I@,QW;,0K^+H!#+1B.YL,peK=kcS7$Ua]a+.]8fjDts16fL
%T]bbB44lu]r.u&Z%(XqE87mD8&u*TUo;@^?@(/=-">%FX;"66cH=P,@)AJD-o$9?U%DUj.FNci8m]a]uOX9%BhsrAF9H.*gRXTcD
%!`P6>*`0"PjR"lj1a;B^I4jBd/$'+BCNk]o8n-kNqL/MmMgDOnIf2huD]<e=]2?-r"[r6uDl3M<r"M/YpL5WPg,IWc`@jEXj2FHQ
%(cI(S"CVd0#W5L&TArZ]"frET(oB4*)+B*1P0732_bFI)XZ<bC&4.jS;_RWQiGphoa[Gmp/)`]-`o=KuoV.BS/%ec/HTVr#N;9:I
%p6B#0gH\(dGL3b2$L#)?OZ3]uh6P%CJP0D[qVFq2^mCGVCk7Y[POap;$f'ANQgE<";=VZ\ZS?On*Bfc:3o&-pP'DH$bmLF>DGOg.
%L>)\o*ef*->:dGOh3ZcuUKqaeT6sKdN3QW'QH15R@0r]7%?Up@>TAFXGcOZ@EH]X)L2]#>=KOUO1HR8GM]6DW2JlNNR^QJDmu)LU
%86eJk%A6#4#ttDLTTITb5_F[o^D/@Ra:0`J&PaV@@k%]&^p)ToWhkB8Rf8o;+CkLP"p)?5#U8HCH)DDY7LIY&ZFLeQNqR'pF!"jM
%L$UA)nd\J?ChEp\LBgs6N=G^:QLH!T>Psp9&&'X8;0c.D??41gE?:T'0:3`?eKudqKK]=kljVrDh-SNe#e@WI8:9oGde5`(Tc;dV
%PPSp,6DOt_XL9^7.K66`aP3`o2*H#!?>6Th*_gXC+_4Y3P?@m1)5!b'$Li<XRdB$J$s'>Y/$t\`@)s#B%f%Q1&1$K\RTK!p*\7N.
%S7Q#\NV*OR[NaZrbH5bFO\>YM#@3kQaG7GI6,b,j`:amcEaA.$N]JNoBrWg]#BsC7cmgV#45K-q7f%p$::`Z]+A]HdqOp2I(%V4?
%62$WGWA8WV&8'K^(`n-cqLU`UX19EY(Z[05*K,j9PB(R.Y)8dJ%B\BWU9:sA'"0V9F>\IdIS/$*e,F\Hd9@FS3>o-c#Htui(0j(d
%-b\F_@6M]=C7eKWRD6AGB3>410:M#@Z`&@TQFF1a*-)LGbE=Jik-_8]jBBLr[2.pm8p-($8<.JVXCOUT6.?(l$6X23V";`7#*d-M
%Rt,]qUi&Q`<M*D;pqGo>emUldL<"XV0Os0X^`Qn$jq(HF.M+u=qUu]'q=OU[L-(e]?GBMuK7uA8nk=p!R8!fY@IN9,1`%$pD!OCC
%ZOjF4pLS._R8lQ@_+J@F3"5aI)"GO&3,;m'83KLPRb*#$E`EAN(do/&mOu`C-YAUC610-j&qP*!;ngfF2uS4I>A\\,#1Q,PX+%U,
%%G.9Gc%=<m`]9GVB<XnQpo9\[9A@VcUJ!QFfrI.4?AIGtM4m,mp,6P4Y*%u6TijRr,"4:ZU0-7S);U([djL`oD-EQo+28mbh?fd+
%MHfB:;G<3O_.G;]T#o6V91>?X/bgL`AP7;]bE[]sal,cgdoaB;f?Lp5H__DL*epj3,FnNhS,2caMqaN+GpEk[`#e8QHR?LSl^sL%
%,8CS^2bHIenmZ$RK2BC,HVPL]*/3R'Ka%"p:BjMN]D4FhJ4aj(J;5I[5*!\Fd:cBkOfWf$DWVcMG>4p(+iqk!qo,;`G;>_WQ&$uF
%X8$d'I6C2WQhM'cM^K.Nbei!$n^^WoKt$b"3WjCZ2*Y"8Z'/!e?6RB&NP_`AoOdQfg_cB8e5T['WD0hi\"5=@o0e.sI'hC0UE/i.
%%WsF6Gg3p$e=9k-imU;IK&>_bjj+mIFq()(lh&/L"7`+(7Is>O.>6.n7';pk%Q^#S=IIZOMJ1B[m$#*3,)i2RoLd1FO:p"E5>gb@
%3f@L"<Y`@!*r\V&"4cd#;GibNfPG\/%gjoH0@^],hVPBG)LhX11#[cs!6^S*qJljqFZ:K$rF0;fp^iUB_>ogmT9iu7Ho&8'5s].Q
%HX>:Gk<:8#lgiDk_^/fTF?'j)Fc\lBD4&diclSPY.sh\RUM!nabP*J?NX,#AG>Pu33Bh$74,j1raT;dZeN/M]USbC'3_#tN<(pEY
%M`)QP2a)YpL[P&>otI0`m9ULQ`bML2P[<CZ4o]l3$!g%oolNEEQ90tQOOro\1ccOV*%6&OY0#GH\)C93Gn#bk8KnN9*G]>M"-@Fs
%5-^V4!VP_O?_RE**6%'p)?,k(\0[Tg5.nJp5^XHdq7a>,d#I,urM#g2rEGKR9M6s2NIuV'D!A@"c_Li-mAS0PaF@&^J+]q0lR1cu
%ij;BJq#%"]o)Kt1UJ9lA'Z\Q4'Q.75`p5+kl9DFF=ISKjn9ZXsK5Y'`jd<E?PY22dY@@>_,*)mD>pP^mLBn[k@X\^"q!CYj^G,rH
%s*%utge@X1>/\C2=n]T=/<UBYKuDCiE&9Ib[JXX`$U84Sim'8WFAR5o4XdX"kOS0pG3"p5"R4c'F/O4GF:YuTHWWjtZ2?dW5e4GM
%<_nQ$O"#<Ag(SQ:4^D)3Z?FOLi01Ch0na#JY@@q/RKp?J4A\AI?F;BBdX*)D8cG$ohKh8<J+!Wp.c2k<O8blDKr13V3DF1D0UJi9
%&r'd(XkX_Tg"+m8"</:a=Bbj<VPSEbJSoTuGn8CDDYMuFk<-D'8(ugDA$?#_bed9*dHtHs!.hF^fAXB7ih@*r)dfI.>uGG.CW[$t
%06S^8PG`Ll<#u#]+nh][EC&9`FQOc!B%fD/j)eN3hDAr^DknWT3+qc$NlYQI?E&lc>V@7Ml6kX/99;R=p1LC#-BTU,r,"[OXD=X+
%PLQk_QO,,:SjGs*$BV/]k$bO%=45hdWHR^"[D&%5dd,/jGDg60_1<u.h`Zk7Y*??>,_JX<_p:3+F%cs+NMtDpVTPKE%$TFDh#/]Z
%_JDo6=mJVr/p9R4!U:[2A[@8tn7O`RN*o=]9h9=f=(G-pQht?FT0-C0+ZbG*r>4RsV%QUcj@N]2%Q(??DSj51H_Ih-b4?E]'SdE)
%oH-Cel]W<(S_1SRId.ZYZdTMqAb-ZQX"kjcqAlX$?A@D4hs-XYC)L3AUBWTZ?FmGOFEs_c#&&4n\05cP7Ct2'0,sg!7X_hU%,W=[
%DHk"\4#8*gLNQon0^7l,=c2M2?q2bJ[m\,0Df>Rl>1_prrLCG-dm#[g&tX:HS]IiW0]gH2A-00;_S0q@=S"<9Q]?L3YV]5'5+\?Q
%PXi^m`-OL'9E9C?"#K)=TDTAYbFBk$mQ\PA0Z/5l@3L(;UQP+h<9?Zr"QiOT]%s#(j`tHu,eXG7Tu2ksRO^=;f.a26')i/nE=U9%
%fp#BUb%&g^N5>]a'aJL#mX/E0%Amm=kC'NB7c\r%I#[d(@YsY*m"'],<U0:+'eC+Gn5p10A'dE&,@:D$A`PXMP_4Z3D>5/Y%^g;*
%aZ/"D./2J05^uX+B^CY'*n7ui6u%Krq_Tq5E'N!+!S,AENHdsTb7mB(1SIT5MAk=]c$Sjg3FICtfJ/:;%]d[D&5Q>38f!)(_".t>
%8AfE#)PWC[Q]'!5Yumfb;4oi-ekG270fV5YZEaLEab>-*K#JU;n8`bW.FOSk%$EegZg_`+']7SYN8!CQi$+2/,s"?T6JPmng@`&W
%NQ!&978[($K_SOC.I;0"RU;r+XZLs&iKRI1iZ)&dFEqomg[CW7DqRq!VYc>,-b.&Fo)c5Ce4Q$oj4>e[Rq2]uYp"_NXYlXZe5Ij5
%'/&lQD+D1#]PG3GSd0Eg$gZel(X%$MJmMbK,,s-0+XU<VIX*pI+Z+<E2eDaK]QJK;[)"hKW6i>r7:A!F^!#r%!W[K\#MZc<\?hcH
%'PUf+idi.3+h$TfHC`kb0T,V,'VM@kTE>TY(NjPLR=,Lk+AmmRmbe>UpRgR6Qfm^,gooEAoX_p&&VTb*Z'+g&GX>a$=VNNi$E]\'
%)983Q.l5NcT#XqC;[`2_*Uq%],.D+q6N@LRdTGsgma9e`)/@G9F37VpK5M&]Pscm,#a`H1[6DnkLaQ]^Ip`nMcTA["?Hpd"r:W1]
%f7f1A5j&N2rtOqDlmZ^U&hP-rU+&?]4;cgYpb2T!Y.SK-S,jB+%:R?;G-0C>HGh1;>gmhg]+lJlaGYE=G9Qb'2CQDDTLniUMM*<0
%Qf!2m^f#$8h)hj`oOSMtT*>;5`-uu(U'&TC_qseklXK@AJI;Aq6^S3aK*=,[S@OKhZ^.Mr+$rhP@gnVFM/ZNWWXBVP.51#M2kT,%
%4*F4Dk-+`Xge\*?Z"ZO9OFm$si$#;"P_@A-BtX(:id@3?Kt*s/QYUodg?TSb_nr=q>pF$2[[ZL8[d\nl][2L^S#JNJT<GAY(EV#4
%)E[<Zd)+sV)30qD'_\dPG&aQ@4K$fm+Drm-?\W!!XfW-*=AI;F+D6D<M%;[WfZ%t4?Al=>a/7*R@'FZpVD_%3TQ7P<lh0AN,kE:^
%HcV":XCErW,=IG![rnW67>2>!c9P:Q!@u9M2]FR;AZ@QQq<'u*AM)TjgYnsaZ=Z51.hq7rjmjSVpMu.C>jN4,(Cg*0S,RR-s#9s)
%)5>S/?g;'U:A5i2:Q\qS'eG/Gp2GM6_\V/Rh4Op_*=H^R,0@M,+<JMd<ETQorU?qHU>8-i$eD+E0U8q^^e3gdW&,VBooPHA`o?Q$
%!&:q@<L:K/\t')AM4k(/UbQ`Y2YL9hCr1+@:b7)4o#[b8([Li(_soPpn8]K/F_(J6V4+-QL5J>n(U':(T<$*JDmmk@(NH5snmOkJ
%."0j;^nsQVC2_/NCPk`T2<aErg!qauRl]0>RA0Q_jZAB,@-6(jSK()anhi_nifF^oZ>kChj_CK1$t!`AL-ld`gp+&SH*g_oq9ph7
%W8eeqd.bF^=u<9)Z,k?\(`Xf\/0$<QLchr*>eq&0qF.s*6,c)=XPU9cM&7h*qt\Rj33&L^o_D*3%5fQgPu'NM>CQ@LMb&cL2A1\'
%K2u*qq(c,\B9[7VN_O9D4d=U]Y*<^<V0]iTjlo,D2HFmbYkuh!(D5(Qe#Ho(>^hOE%cJXlcM3$&jnut`Aa6p2T52Qei8$7aQN5u]
%O`t`*=['J]4cEk>r=:'"4I77BHoF0'*8$O2Ll;@]D<p4LgcsZ@+sKVq<I;P%fq*\4q8m<GY(G"c$H,l=2k((+hEYKSTWi)@S3amb
%-fnCk"dIG7WU>"--0jli`YQIp%e3P`o'@1S]kuYiQ;7M$#+]1MM52G;:1P`"GRqd((@(T1bKDR87>nGrYJH?sK3sj-Prj8Z''o=i
%@m!)f$"Zi+kI$uIj-sD7_6ijAXd$-<*;-@HBYj9cGb;CbLM9&<lrV\Pcga#k2Sib0kp]4kEG'W.XU%0$O,LD%YkHR@9PZ[I:=YNF
%8:p+pK9E6QcXmIt&qRgtr2-)?kF+coeO'A`d4HjTS2Ip'c)EF5\gGC]k1O9rIR/]4Uq6G/`mDZi&AgXm<8#n'[%%b%;PNESXg,eG
%a%mu/fea^FZ2JT!2LNr>Sj2(OOo7**P4a%3AEA,nrq7G[:KH((/8CT\B5O#_L[rb=\aZ`/">=ZkHm__gA@aNq#!Bm5eD^3*iPNWn
%#thLYf(dkSr1[gRMtcn<DO(C*o[;_uOY:07?Hfd>!Y7)bnBB^)3HJ>d-.r:4YW9:S\]GEDT'c5%],7*Fj?l>DLq;l5%:Uqko&JFl
%&kpJ'45D^mins^X5Q9EPq]Gh&lgOi<5Q:Z.s7S\Wq!T@&6_Np2XO$T15Q9cZrk#rDX5Er4++O&5J+CWe?[r+A:]KJ4rAiU2d?";C
%/cU1q+-uY0<+1%[ZHMa)4q>i6)0W9t[Ek3$`RH`?#.?YsQ'$rlDZ%`"M>K)XM@^_FgaoN?a$5u<p\N,uIWJRVY/$9d;^`DHM^\)\
%1qrsWf+Ag[!;#&]3QpI*rG,cDF"@%1rOQq(m]^W=j./-9-#-%U\*1c/$A,hbB6;=?[@+8cgIl8&22V':J%Kk'q%bO=F&5GG*,[4c
%`l7T%IM6Kd]Z.]b0Xo4cJV0s^pP&i+i63tS*/TSH]E0M%DutI8nSe4kn.s;@U&]P]VF=H`.%:DC_"P%JYDSA:=S=9:o$E^/)rc$]
%#JK!$lA(,MB'C%%+C#5>,YF+mg@.+b0DDY1lG*3_MC&gM.rl>?l&m^N06c7jf[1g%WSf^N,o$F[qkc;deR3a;fth^bZo`r#311%4
%7j*P#Si=(Kc#KP"9/DbOPi@[^n&N_WNpH5-l&S.cN_eXUKp?"\YW.OU\ini,=E_(ZRf8MQ@3mJZ18L\;RW>&_CL-'IGhI^qD8^^d
%lSGtcUR(t]f3COESh5tJ#)/"@TNHU]_<[-Sf^nG&IX_pc$s:JL0Sj9iND<A,%:)7,d+q9@C%_?.=3PD1Y_DB(Z)C:(O2,mR')M1s
%R^q5Bo=?ndb_F.L_7b:Kk0#F3@_RfJP>LU`_cO%,)#!$lX$k/+G#LAVd5"UcT,JC_\l1kAiW2-PZJeO#SofOqP9EJ%dX?l2cab5(
%NfQ?jHE!aG0^i`((2ecJErQ,[guBs+,,(T:M7J:MWQ8&/NJQ(^OM9?D0CWUZ\Mp/Hm>$*K]Up*dg4Ge;b_o=VK,iiZo$A#.DeBc>
%IsRXj2okg9iUmG*rUr-$X;era\&,d-`i'FL*ea#qXR";aMG$HfOQam5i7rE5b1F94_#LbL,&^3ClsW/?Ogh2ji!po<V;q_EZ,W"c
%iV!jlODbM[Y_L$bB4PD@KWH7%(&2@^ErQ$6C!ETK]f_)U30("bETQA9H)`J`"hrQh9J:9OhV\[4bf/#Jd59G5R@mTP-Rj2_ZVB!(
%7`k5b%U=;imC09,<5B)j?!r9DPIh4U0Fe68drW4BAqU<pR"75l?:g=bd5^Edm<Lr;#SQI;BQfE14eNSJ+;eu<`qWh!^7U/Rn_8Eg
%];`I-qs>N?*V!ZG=[ts"c!!K8rY<`6M\Y%`XX2i4S(^r1ap5_'E.1H\I!('MBDh3>):6__k)iJ#?KV"He:80*`76rC:Z'5OO+mCQ
%]0<s*EYjQ"0j&EC4s:NDHqTK)[iSG=fplC-NLXg/B:sX"3$Q2+XRCNeI-SQ!]R0!c3Tho-8Nh(G8NgDPVMHu+=6iRb_55+dTo(Am
%KLK3e-NO((#L8E"$D18</EBkH2!k6jpDEVok&,Psr!+n!mP&4^<UMr*s8TWG4LY"OXn-SFr;(l#l`Db\5B8NIHj29B[AfF]QeU*l
%3<3qQr<s'_ZrhQ<i#[lcBMqbYf.[k7?^Kl,0"RrB4,U'QND*GlXVtU[MJQOX,1)mgV;E>3paNVH;mVDYo&-f=\VlGtEldY,[\n9F
%3-E(Bg5+eM5L%/CrgSbZ?(u8goBkPPs%Mman_^q??EQ`3recl:+K,2_"i;hHG.-%e^\.66eJ"O>M3g$jnW,k$Y>35iU185VF%l"O
%P%4''I1EHGkKeq=0aNI48M_W!7JuJtDgGE-j?K!#kf9<-9qIF"s87-0i;74QrmMr/K7JZ2chNEN->fa(5G.!Vo\Y$PR>:]IIlj&"
%D>/$;NrQ;hq5MrB!?!aH`qf:35OjeYX)0Qt!HZ]!<;";HqLe6cqN0`KLK4#Q)W/[,&3esBO=u=?Z2T5op&8_H@/olj1uFk%J'9p!
%k^Ms]0pcD`_.IIK&_c-#GcK''T)A@AU;,gu,?Q>QKT^^*%l,lCFlXR'p2_10k8@fVl6jWWaNg*/M/+0(MFdO9gi<6LCU<NF_AO&&
%RU`;NhF!FbO-2"rdW&9#n;;$u_UQfiNQ.,CJubk4%b2DV%+:],'2N9j)<+LN(r]joXg-EeS3g]mHg+rh-3NIR/e=%-?HD[mYbsqb
%8tfGc162`J_%@4QFG4[hggU9qmV_J1&^DLu/7m00*UrsRZ^6so`nQ5V0\K?'Dn/aN<Z-jV=UJN'a!l[&^@(/(,4Y%I8GTo>1545b
%W)@n&JV0bsGAGDb,:SHu-Bq%n'T$r#Tm2EiA/SAGU*eQg@o_G4_:@eTT8"-7<Ll_)aQXXp)g'/Z'6qFU1[G'"jMPCl?i0js$YIKN
%i%^0Q!\"GYk/6fu'*HQ7a6)Zj66$V^N>eB7XW&!YHrl8j>$cjgNdTYd9VZ+-4#t1&M.A$iY;>\(!*)a;e20RR?dEbc<^^(u@o5._
%"dpdq#^$-2DGXn&(^8uOhMDrgk[<Q^I\+P_*OI--eB>oWcFm>X!pAXiiK^78M^teO%O#8ZOVY"J#o%\K#^P;0+^<B(e`Ri23tQ:I
%FpWVC%n4l/0fIUd/1j7e+Y+pHB&OC+9sJRQ5q'=SgEBXR0'+.3Sf1sggbQ,H^sRuLX7o\h=Yf$gBZC@)YX/K&4Y7aN\;p2M\@lKU
%34.d5U[ZIITMPi*%u)QpT<m:!oA9Z9LEaKB)D.CdQ0rQl,n^B"ju-"GTPRC<]U<mL\Wu:YVHXF#B8bh30796)g\P:g7T52_MsdEM
%<NtGOb,YQ[gH(7ofm,c7($S3EnYHGg^aH.1##'?62]<3\SHC"Jm_@F10f#EiQb'o#;gogJPAmHrn0,H^,pLFmgK&o+1TB-e2m:t[
%Y]8X?/G-_OU[M'RJ`d@8VL"Qo9puslYe?J.l_?=\m+E<7Q]7\^IN_W#JG'gK@-JX)>ci"Q^\W&*Fl*aS$aL"3AJ/ZI-^6o,`O1AH
%%gQuriED^Xrb;DO=Y<,APUO$lN08Rc(Z\!u>#JoXWWef-="+^2O(@GY+7-eUkOXQ\<nDkX(]%(j_eL#U35&j(=O2@#WQqr8VK#f4
%X7g?Yb;1>[YEOli?\J%0;0OPBE8eh(kX=/;`d'/(:pW'Pm]%h1JRsmY<isLZ=LQ$X>5\jjZ-l^Lm:gGUa5BToitng!8*\^YXV<\.
%S_[@F[:q2M:UNA[OrE&126bOTK<jcL-_=E336E"Jk7Tn"r(b_-ggOO26;iof&rU&+M72cY^!#Z,\[<b;jQ;uF*T["^]N).%4F<+/
%]FtkX`Gd&r@@bMr;C&/_P,HZKn3\VfKHK'WW[20<km3TRq?&YWLmM%\T"jtU[&DLD)IBs7*G%KNU2ITfaIJ7l.NKXbgZtZJTg52=
%6'E)HcL/XAdj[k[K_Jd0ojG_Xa0.'n_->7e^WbXb1pY0D=B'a[+(+]<$!`GNV)ROs%a#M85q9N"AkugC?.2enk60LLoT4rtL>qGr
%kRerRTR(Kl\KUm]\$O-hXQEMYE-V_>=?pmeeAQ<s.ok[?^CuPjgr>ZAbeufC6m#C(0\+E:X!<I1F`\d]m>knRW>`$$OA0@](2N*q
%!K!g.q\FGa:FhNn`i:/#[mU[gUWAnVA?I%M.h7)+?PNn@ob7K8q5Q.VFZ`$)FM,Xim@\\qo=-r!,W6?dmbJjlG(ZVjGgjKoi977)
%O3Qnjk$VBk.;\b'ZP7Q(BP\2i3r4K!W&UT<Z?5`jb4r.)jI$&:/tfEA>E#&b9Hc#e,jR:q+(!9G_DJ)[&VflW31,*_V#QS<:]5r,
%lu:Mg@,39>`R5&\^GBB.1I;OVd]sjL.BPYknq2pn9hgIDY*BfB''`l#92ZC;,/()(OlW+t*:90P-M^a.`k[5BNoQj.<9DAdj3ZAu
%ZN\skhGeQSB1ho]QfmCOBV_<<jKt*?'L"*fCu4RiP"SYt]jTNV/of9Yk5_cE2m(u$S[FZU$9BpYj>S_l0Dlh^Dp6'qEY!Wld8^m"
%D%Kb)iFL\lSOK,XFXp.->+]2"h^%8pP>$b]&_"r:ljmMI2]Y&f-9kB2+QU_r$1&"-9c`kGO-a3`H>ndWkEebfV>4CaJ$<TCg/FS:
%FVT#_7\kBc"-CuOZh)AGiG-A:OLJOLKc56Gh0g\OI<OdW)Al/LOKBKh3no-ZrP&o,?/T90nGsTFYm%%TU^7BARP'gb,NK6[(aIDd
%Cb.R+l@!mfKiaEjFf\egP)Qa^/Q7J'@5kYP&"t+S]q%UIYZ7Yp9U"`_];]m.;6E5l0rNBW]TtSJ+?+YM3EH6m[@&RuObKb';47e"
%V6]kUs#km4/il6M!c)nmWCoA#OIM`D]<`PFf3Ol^"KXpr&"JNAlWKD9a[?^D/2\!0hgc"1)%^MXC>(8fI@mT5Ncm6[&(*aVV;4p7
%W)VjLY>t>nG/YP"Tj`h"B(6m8C[B![^fT,;E%[Oc/ZVVVV-c*`>9k99_E+,GF)58Fpo2cJ=8(OoD/N?/ihfSBd!sOrk\8gLT&[tm
%%qepKeNN[pUWIGpp@6.u`LglL_:&fXN6Q>KM1P]@<VO4d/%)"#$1u[GgDEt(Se:nZJ9?l]1.B0F4R9r+D%L^n/D*T)eniU.&E"!F
%j/uIgCh4dG[$6hI8k#+FM13ZW*<_4.Z"J?#<QLb=LA[0W7C]ot2=t0O4XWp$@R"5SpG1T^a-GW2ej\Ht%&M^L0p!mm0Kef)$Rr'O
%`BM,D$8D7Rbqh?`e'@C2Rhuu]rRXSQ2t,SH?p#FGb"+/NErY$;-:QE-'ILQMe'j`L])r+f-^Okra1cFj3h"j\i>C>?r#U#j6H(<4
%-DuAa>_oiAQB'j)S`T4;dkIes#DJ_;Q?f7BlAb%kHMp0K:Z&"60/7eQN_RoX+MSoT)Hl37D$MQ1d<OLFH"1T%#OupN]L&>H)P(-"
%S*SOObcaD2G]RieX_C;r[2o*Jb#U!e9#["k/oOq7OgBo!O2%mS[Blti#F0Wg1CK&*@i1u7=Ze40Ue.em>6i'Y`=eYN'Pn]/SqKW,
%/I8ccP:K[8rjgcHn&q9/JVf5L_)setAR\LsfnsgZh;4piAULsg,_l0,d$@10bOkVYoW@VrIhCT"-6(VQ8\Xc/aL+J_-O;)Va0'9O
%F/e=pKI*QYnXGG1Btb5'\J2YN6\Pa/Z&Ycu>RG8E5A(J>\K#+lX5U+r>8@%%0j$k,H<<@hXpX?,*jU3"LTdKaO/lIXM',>ZNIs\f
%OKlGM9=oII6I>i7dmYiQ^fn<-gQ]ZL;B7,b?],TXkDX$ep6Io/UL\<D+eb>UE/;^TZ(7p)_eCft^oJC_i")(TI[XOZ!ehJ)GR^=n
%6uB!\^UI]pbsM!'-XgZUJX@K#m"%u!Q\/F-==+-ZQA6&^^uZ7:i1=Rji_L@0"5"@CX8&9uPb$BY4p!06n;^'\E2g\94WE"V`.U'r
%[X8rFd+_QIHa5^70_aneG#D($%^2UV:kLK8qp03WH$@EMB=M&!#dlCKkb-_2r:4K%!8$upQnj=iN2'4J^PSq6WEVjCbOKJ_iu*C*
%8:S'<o@=#;6@-N:oPP1E[AlA0*EY2L%.nQGeU]0g:%$%B#3_nUh%7PVHY9ieJU\NO-*LcL<CIZ^(<",4`^G)1*C,>@H9o#e,`o[@
%JTek3gkklbLi>97O;i'S!d'V_@T(nn+6i//c,Z-\dO,*]Et1KBd`tV4^C^^rPl<$tf*(VT5l0CuW1Qik0lJ*<-Me3"QXs1$$@B9Y
%$`uf.='dt\5.)fcI_/PJFX2I##0F$`d<=V;W\H;_Mi5&1eX$J,+1S.0Z1!a`'sF(GDKhFNdi>$g]Jp#p!;VNL;_R;ODem`/!c<;q
%<hrq\(=seN&<0DnL/?]i:Vmr9e5MsFW0^:_iK#--%RFOB/R-6(lFX^1K4V-FiMnnkb$)p+nK,8)C*VcoT>0#[qV"`;1q)I6<C'/c
%K-SOl&Wrj&>Cp:.C*2pRHB<pWA!>R2OD_o\7MNLN7J>Jr,QDV%/F_0KP&RMN#Wgc'U6TC<1H8ufLefM7>nLTERUO(S5V@h%LRLOn
%Loc8Ffb+Efp;IV?miT[iBYuU33%-\G3MaI4leMEeJ4A--0hP2A7,"R/_%dE/WK97374H)JBZRbR;kq(Z"*K7UV*i<B26ajT']/U:
%,Aa`GM\#MHXN]Z4MSf7;YrLLj:$&Z_48kK>Y`)enODAKR&4ep%)Err'TGU<398qgZC/Nu/'.V_Z.=>=?fNLOTS'3O:mHX.e"D+V[
%]&7!:c%E<k4!X;e12u(/9`pP^9:SB0c'4>Yh9.2WOOn*&GM&jR.CYl7R59HSD*-=]N7[O8V`>N$HdD5&b?q9&]j6ARZjZ]8<fMG&
%/nDB-6XD9E3]>P`Sj;77V@Ya5^'i'^=1""3K_B#5cQ,@$3NGX=XG?5t<n/b!:[cu@1TN#"Fr7<jmM$RP\+S[KM^PEKrY-]bf5%ik
%l]X7DP7VMafH#mS%?MBDJkP-uW"(#rpgb'H$)*]4bK"-Y!SO4P_LfdB`1mC4q;*mT9*d0]=CDK8XWsgqSAJcu224?iFqQMopl"di
%T5lB,mG(aom1>$sMm"[f-oK:/+XtZe-8ef*V"o;VXR?ou8kH*OA#jY[:ePut4W'2"jDAr_g3+(9@f)^k&I&),)$tQ9*,`Xim2p]>
%%=hnCY0`iE3bC_W*tBk1EA+K3:*T0m?</O+ZRfoHLKg>GR,kA=GGCJ%]eVH]j1f8)BZR=H+$F;c14D3=bg.r/^T$H@i+BWJqP]&c
%W:B'oZ<f*M7Sea9p.\t+9:g07L\naO>lL%:*-1a^CqRXnH6M?e5(50TgJ=P!K(@>VIFok."9ibFT.!n*cTT2bV(n>]Mf>G:m#F)2
%USkdkLM(a'K%Pnm=Y+qa%5\1Q?=SUX8A,(3OS@fk>IOg!cL=eKS$2R*\&-.l#q)iQ<7bGl^W^.T@InFJDTY\PY-&Y@\.G[n`bqOV
%Qcn#F?[#^MN:E)OoeV]hiiM=>ONl)LH7,q$\pA3R]joN4+>7'qTD#qf7(aS&3'2r@?A<,FZ$!5t0YKbKQ>L\##Ek\`,<>l3ALbn%
%(]SpoEp&T8@PgR9cm_h64[@:651i6L9DUO*8aC0'T)19sG<Qjk[`ZpX2:Hq\dXjp/]ie@V+iNR>nr?("U@R=*#QH,V=Q]OES:EZL
%=>"JdVM,H)B1"o>(!PEqZ]D4Dg_4bc5Pa+0AM[FqT/YmUln.%HjpudKnR<tnFP[=4ia4)3n`BongH/\9"rndEoM)#tq:CX6]OGa)
%c3+2C(l`Ad:^DTC2')/QOIIJlM:7-KOC-B+Io^XU<,G<)\+Qi>U/*TaX81?e.VBc8X,rgOWX1/@b-i)L/M3eWRHA.aQLXs8IYFrf
%PB&t_'fhgrXYKC"dAjAY34Gb'2t^-ra&Y"6N`AUR[Q.4+d1X@q@L"/7D=6.oh0&/JnGEe?YFLn]Hs:ekqX2uGkt<!_"6Do]_qibc
%F3N!U>j9/TCM9\kelWqs#U>]e&R4>YDBO2(apGXtEpl"LR?sP>(-M*fO_Xin,E-[?;>$][:%>NuoDNR;X9d`cpCBSFDR9cWc8R5*
%E\J9M#u[/uN`:bSmt"_@h^!!WYQ0eX0s',<;&oM"3ptYKDg9GG&cAOn!!5f$auqRNq'?oVV<Tl=TN(%Lp8U%UGcK@!8C\X;\U8QR
%lOuqS#ls"Y!eGF7M@LE\h)k4DZA8OV,O.7YPYT;#')'5MTCTDVbZbea\ur7[LYdU!T4/=@:In($b8h0cZ6"B%/;?DHc3Ri>=WoJ,
%_g6f<K=>c7GA$MFs-9dP)=s)B^6)n75/6@FD1'5'0fY(98-OmViMtZ_q1ebpE>E83\o2S&P19e!0^W*&'$V>;B.jcIKO/,n/-KWL
%>j=J]Hd0!$nJXiL+AMM]RYIss'@T]bkpb]4dqi><rV>kK']s#sRe!;3?PC!E9&>Ef?`S=p1urkU3;SKhQ1]AHBD^<A+GY,C<efd&
%/*>en?F&1R3_o2:1`6@N/=UR#*M/eP&[13$$&o@<.YCTN)kg*LQqgRUV=foh0-:8o023rX<+s)Sbk1J!&EF%)eC;b;l#L]<Y8S1N
%:cWKNDD)r[YQQoR6f,A1#J&Z3%o-1)ZG(e.@6#u]`eYYp9@$+LHUV=d,!GMfRF#ZCR<j-RguLY=DFJ'CZ"6t6Og$>r,sALLL".V9
%adDCC)VUo#$#663BcH<3)QVb^%me)YTT_/N0RZs2kca0Q\oVKKl`u3L][E;^T@-?@'@R#[j.IP_TJH]trYE*Ie>+!p3dpg4d_\u)
%WG36Qa-^%DDF/b(LD>Gg&,%Q30?l.0Q<k\j6W4Oc5X):,"_?<UOS];e,tpY5`3TOjf47PC+W@[F)o.$96.*Se2HXBG[5\:FXY;8t
%cV!rkV*'mYQ9):FoXCG@hL(tC?'Zq1c/IY"5To+>l%0;R[!0'[Vlt+uM^<i;Z-?CRfDbGGT913>OG[l0g>m9;NB@^H@R(;Y+-E@K
%aENIcqD`_J=Xq^6.Cfs4?.!nn40MArRRIfV_!V9YXQqr&!r@2i&V;cql9aXr5d:bV"@,H@fS9CYGp?F$48N.1psK8J";CiYp:p[P
%E#,l'.7lna2t)=N7ml5qXKgk94f6eY(:4I)*jOqFDBOck`#WMk(0J",+CYo$it#H7%ngcOHI1PudCb*iUN+o$.M==dK`R`JA+@]s
%ijie8.S(Y74e)n6XR5AjpSbX\?hV(qWG'%P)%n&,'j?&lgh\XYBNGjn[WI,[iHpRP\!JhmXQ.UuT/3M`j)V4N5%DJr=X\YRBq_I#
%I(^rHR#"=8@a06t7p]f$c[PbbikS;MrMA3kUC&`MgGRU*KUo[Ef?uZGBY!)-=i*D9#FC?I`HNBhI_,#WKK,uA/_5kEX;o=XIQQVX
%:$6XFOg()H9e=Ac7.qu"#Zde?14Fhs6KJsmOMI1>UhF\?f;e?YCTO,X'u"Gh25h[L5<%ICf5cC_@-f$RUgI^LF)FTk[A>8UB-eC!
%ljL7LL(8LGDX>WK!Lad]Ra>e%JrK'h(\;$.>JYgCmeZ4.>/&MB(qe6h@hTc8?-Bs$oO,u\+D!YmY;^'kY`k0Lo#HmmKC)Ba(F0Ie
%R#Mt@;HT`<*e[Q"fJFru7X/p+Q=o!DV?LfGErf4HRM?d1G@383040[3R\mHm2Mu;C1^XL=*s_e8oiqgQc(7Y.=e^3;ZZ%bq_dRg?
%-UNIYpo:Fc4_A^-nFX-gk)EMh/?TNard+NZkNAc/p3AS]p%-HKCeg:U>*SHS1Cq$MDW$>^1mluTWQCsO8COW.1Mam6F?=4HHJ[K=
%qJq4__][R3j$,\[_di5K\ak'h/TqDn,4sg6/p1:(c([0''7lQ][9s,J459!<8RpD*h4A,4`bRUX<nlk&A<KC9c8Cl9me1J6kHRHc
%R>CN`1Tu#Qr&'OBj>DUIG7*Z\cggWn^CjQ"Xkka4'fkB6!@0sKUhSa?S'*RZmb>9>XM/'l!7(m30FFXUTS3j[X&MVW#Y$Sm8Y$2o
%j?7>8/<kXqHuNaD9!^7;[B6(01,[cnO\^o5[U'7+,h;MF(s)+#B)uK5D?V#u*dV,(GJ6(2D]_D^Z,.!D<fE:_r,*:q4ar0/6rGDp
%bJW=`$]+f%B1p!=4H0ao;r1?l%CHD"XcRtN[@6:*4?@uiRXA4A.c$A'9D;3\QG'(Sbh^EWgNRH3[#4<]9]nA[%98ebL3;1<03(71
%`Ucuu'6S<EO*,*9s'C(h7%0]CiqSPs5(&fW]/\M=@s&Y%Q4nBmpDR)5E.DoU@FpH.)+$-RbQmmY*k$Fi`!rV2Ak]V*qR\khg4[1>
%N%),]mS/ZUK^he)VV=7TBadMl)UY&B#`.0%GgUS`:9+>a<GS=?@!s#)j3GLq$=doC3kenYYI+'m4HLPj=F1)Z%S[0&I/50T[YW^?
%aK<a46k&QsW+R#tZO,0m.VY]]q].hl^M)L9^Gn?2#]`kJNm;@ON*sj4XCU^4bcs5\l0rsN+g9jQ5":\Xh.(T4KZM=,02.;jO<9)h
%;rbEP/!fJq2QhY`k"PD'B-5XCMG`l))kL7YJ'P@L!Y\`S@]E3$_%*1oN>;A[+sNO?`"9)%nk4t)BlH9G@;$O@$>61kj*$V!@e1A7
%psTI[IrCpBg:VS;"NQLm>4`p#*/RM$kt6`d<pQKdBNS-Sd4u>+CLuQ6@KQNl<%3g5,o9O_Sl9+D.dpe[dM:in_&I/98s))UL@nuS
%4(rF%bK__d3e_>ATM*Y9e`*NodA_c+Z(Z;:'Lk@B=pVAKcYaeq4&Xn"9Lk<@?tG$/DUWs@?M"]BO_-`ELJV6<eq<"^iFB=YNQk`M
%>Nt_5)g[6C5LgX.+Ks(Q;M,f8OtNef_X[D'9=msh6FfgC`ch;U#KF`A/]i<"ib!moC"kY10X:?`E`02N/JTZ<),31nh9)Oj3eY-N
%.jKc';@apU4Fu7Y_GfZip?H%:-9f3AoWg;iSAmrI<hS.6;o#@i4Xh9'e>Vc$k;H^4D[M[8>q7WMf?t;Ff`1*h>oAV3k=$o8*cc!(
%-F^)Pje[Fi7'YV$M4MT$0.1#K+4!)D0B0oQ[]Gh[&1fg6NTk,U#4ZLLQ$,ZEk&o0E5tJ$Z@$,6;Y&diUW3,Lbl(X'*>?nNB@ed=b
%)KED=NuM''Jgl3;Uke;a>XDWpW#3o%P'mL<g'd,DHQPT6=.I.[*U)2Bhl4@K<!'@'^0./W6Ptme/aC(nG=>_^rhTJcC3<],B?t0+
%?jr'MODL*rn@d;=ZJ)%fOc<A^b(AdtLoIDsZAmJa1T(=e*J4f\rE()^f<M0RXQ-c+$*FU=.=YK,B)GCU$aU=4ad1H2:[D7T)ic=(
%24j.pDp5a$S-6rhEp*Nk?U+rrB/t>@JUkB;XE7kpSAe>Jlljl7$\X)[/'1WKJQ(HmA6sC/e0j)`nsq>CE9,ER!:j7]phC=jq@P%P
%D7WTfg3])gUg.ZgSR`Y@%Hh89ft5E0LtmDCe#R8]8+Bqfh*4H04rG?@Mo"@MR2JKiVmdc/`A;0uaK5:#T'1rk^fX7q;Ei_6!R$eL
%59VlM0H@oe6N5KWR-/2)f#,\X&<'LeW`5&(S3Q1HPJk?t@hWdKpO&qU+j>M;S.q%;U8!/&h,K76L9(eU<$DUSL^6t3"F)qcD(0pW
%<mD>5gd%YIEn$iodLs0DQ:LEf[.B?oi(^mIa`k0nd'Gdj+J7r&9Z'-hJgs\F9$;E26:57poX<q?("=dP6];hc)AVh_gQ*0!MmUXg
%Qei/qbaT9VSIE;?_DJJYqo5k-(\,ntc!?i#@Kls[OiX/;+HE#f6A'ZMP2tiM':%L!K9S^!*O=E][S/1WUP(49Si]=/V#BnPhS.[L
%!L0ALj`:p*3%V`*dX%3LcSpXBX!n1Ej&p'q*dZg#>k+Z*)(sC.q"H=\3nE5Hb^%:sB\rad*Bd^uH(Th*4!]-VI.<cM`)@cIrD$+Q
%0or^7@U<7n(?3Qme['<d+>/\D>?)"j?/?J](R+L%':.o*=64D<L#^/fFXjPt66%CFF`BEW<46DuL"oB!XjL;kL`oZ5-ZORJj5W;:
%Zj[4J-5QdUm:).rE$k(FIo=SABn3MQ]%5Vm6(:>%<+nHoaZ"D2BHX]%"^eTT#E[dWEt2o!7csbFGkZ%1V'`j$HH7k?qrLu0KPM5l
%Gh(-P@PrUR!)0$MNY2ikp;u*DAXEglQ\Aj5;B@akm>7-71#G2Eh[6Y6fdQiC?nj`)*tNcZjGX?J7Qqa&I4]#PYM\Q790K7"[oTU.
%H6XLXB9XA*aD]/Icf[7c^C?AaG9Cfu'DqGlhDBi:S8\NrUQ969h;:<Kp1Fn*mt%3a7dcIK=Ndg,S35XPcd>*i"'=9HZLcl=A4=J\
%/E4$91,R*iZWqjZUl?#t(!i.[=c$=*6sCu&:0rp-pgn[lllg6uetTS334ZM2XL4cY3/4PU,6u)QDgf`3EP4RGbgGIumHmFk/YhMd
%]1uQY0*,dJhbm/DC#JaB"1=kE>88JW6#IF;&1Xi64K]YBnUBqCW4)W\,X\sCLHui!F`=rLjN8*H[e,9_dU()pPLe0aB5nR;f<ZH_
%gT-7\VRVm5hL"CuIB1uKHT'(n]PpnsN)$B'9NDbu\dbuIQ[k7.ZD<pj\$Hc<P`:Sb<M#IC8G(m<n3'CPnOR]d6/>GE)K[IU\@K;;
%gZ4)1EGJTO3#+&pgG8#GANn60-uj*a"gC//9]`@k!aj>LYD\sLgJR+l[$dVAPiS3@UuHPk*=)nZ<jQiLGE<]7`W?e@+EP6RiLR,h
%e)$\[O+I+-OhLYb1^O."9b3!/jq3,JN?ArS2GCt'K$U8QW)`2ng/pY3\;.*IjoE//<XP7pIAmH54SfDLRLjuZU&<](Yc#0E8]@4l
%Yoh?D'WK`JJh*6JhkJPJLCSEB<k0A?IU+3g1>qFb\;^I^'_WAacbtXY,<1dS)ofs-SqffkNn:'$mcDI:9[ZJfNeLZ-]a3UGh8M$M
%Y/Q[Ui0Rd,4jR[qis,#Y%/neY]H]B2PB(9j#B/HdaQaN87b$CLQ<'kl6&Z?J^e,?WU6o)u#au)r^ElU=SAX(LYXTh='EBI$0Io/s
%eLg>dY]0\JT,a=<",Hq^@8K?<`m=t2-=TitUPG5-*5O:8+&D&74?Hn/QL!4k9c2s?Fr;"7\,j$bn8FQY7s:gD@m*qNOLVlN]`"Yp
%p/p"lPnUfU#?a1Mo*ukgp=ctDjloIOpA]=5/NSr:eReYI\Q/,qY!OX2"g+-q&IVM,-"6pZ0uS:N]EctjGOpo5EN$oVB^CN/b"'4<
%[b6[-ce,1WJPf!bS]-(emlfE'9:#S9kOlA<^B<W".gL3t+CNJTD)VMGML^@CpWSQqB7IKRYJaTecKkjMc8\ua*NQ6AX6Wh59PHUg
%\uj)GqC7Pl%Lu$/iDY$[4<2A.?ITC,Tk>FB)ls6tg>+V-qG%bB>E,Q+;0AaM0jdj?5b5mQJEA7(_F)giih5D46->N'bn8hu$u@30
%Lo1b7G-T17Wj@jt'HD3dJ\nG'e1%%F4-RKJk@knq&3@Y_!CYHu$qqsdjEF@s*<ZIr_'Y#To2VC)7ciScL$(!5gFU,Q[r(Cmr$/0"
%/glg4_lO4b&R?'`L0u;SHfsBKqG^+6M.1W?YTp48kt<0ZD\[YD'_[P55c?0Y>lo*d'jp&74.n<s.73+s*oM`G;>HN0pB6e!RDEX2
%%lSbmA,$5kXCE.]OnXD26j>]3q@5o[4ijm!?_/0Ta#:eI-Oa>fIBn*W2U</3nsh=K@!d9/e;7$>@P&5f+4D&.^dF@'_l,[B&Bq8q
%.M2'3U/G@=MIAhK][\/We$]D6dPi#tCY@1idhgAfU'amsB1S@:r)5Ho=jnZ,cJ81?dHN`uQcMjG3]$'T/kH-jC*7,!\Zj*3ZaRog
%a5#obOu%pG5U3Ab1dF)\B[MK$[R26DbnI]2IH-'O^WA%ioSNZ:((ona:7p$A@Wp`h>T31dG);39e#DmCH"1Qi(i2?7BjmA)n>R<.
%[6a(]0E^pO#Wh^u"tL[5mXldm%M*U\L,e0F$FN_!BHV%:.nmi8_H`0J9L(ESC&R7cZ5Ru4'Oq,b)E.nW,h<V?<F.K#LU"RMR]0o`
%o'hWJWGib_Q*UkWJ3XQq$!caD%Y\3./e1)g=E%nSG(p44agdoGn,spM)0AUOqnj1(]N#Ob_GciA$as=^5onUI,RsjL/tSt'FG2(c
%:iusJ_MN@lM9[7A0),/5Ce5Bs+L'DX2`N.J%$+l#Z(PN5,'<TiRma'&DJ]#X(0fVSq2d]r@m%M:CY!1?CPF(O:M#2)R?K(HZ[0U6
%K>EMA$k&tJg`%:i>\L3O$?ZE%;r*[F"K72nE/u.jlnFg!@bR,d5O(!P7Zn1!e)Kh71rU_>9?hjI=Ff.qr2(g6aYnX5@q]ao&1U1k
%)al1H$>:,P7L,[)Sq1`aBFKK+n2t`U:=7jIE\^a"o$ei/K#7'!!43AE:cP=KRR]f(B[2d>W!`:N1Pe>Lf0F2b1.*Ju['MTk'pKnS
%7%d+iIkohX'fH,GO,@NI<>FpL@M"/FYJK9C;B2Qf.Qm9Z_>La7!q$gPmRj2U-4_K&.P*n3&8dsOWFqtt'MMhccL7-hb%kB^%m8CJ
%WUeZ6$,EI]atb%WR:c$eYS;m6b3I3!c;OIad28.MY]mWt&3X)WTF/7T4IoG?JpU+T\9o.kfMhT%$7-$#\(Npt'lTWIFV2XPf%Ahh
%`ZLDSbDL0!$BJ)O+5u#4Nt5B0BfZSR`Y@i4kc3()7jC:Q4DZbmod4/]k2rO]+>u&ga`!_"nR;a7ct/TWTi:<CD4YFb5^.H]l4i7r
%L-bdR,Z.1ojbW(bWn?@i4[BB+fLOue^<';@8tt2gp'C2k8Kf]5!NT/,_I1@p#&>$d#2:[P4l]a3j3Lld:olA<LnU20nrh13@",2!
%CQ$#C9KkG%?fb]/-M2!4VktXj3A_Ac4/_Bq`WA3qEBOX>63fpDaJ868O?g1_MQ;Op!Y#i0Lb+6A4JEI49nasj`;/*^UU!2gD@8KS
%XQ[TVfd<XL;UQo.+)RL#Vr]e_QS>(2Khe>0*9!>Q[k3hCR-Q!"P^f<7Lk&7.8e7''BClg*DK&%_6DboJ#uT*[7jS=P.S-/CliMrP
%*mkl7p2UUPTK"bNg?`:';.P@$$t2'9Ls9^CB7iq,C@?/Rb-%itZ2u4J=!-2U=Tb=/Ka7>`-u-_/chJ&V6f[]I'V;'1,&sQijm/Lj
%A!>=n:kQG+HRHZ)<(:Nr2ALl*a<H?&bupJn=2kh&4LlWb5h/%@dbo$r2^0\5OWk?BIS3L^=q4SXO"Vr12fRmJCI"f7=M4#d-&rjZ
%O[b!/U9O,;4NAeD'-_d>GI^<pZ(!8E+^R2e]`O<;.5!R=.3`N8J(,1]"?07\iVS6i1OH06&,pYlGR]7bZcDS2TjXuFh.2dtkEuOW
%JsE2+3nXEGW[Z2jO=HL97?C,-M_;8fH3K,JhdN0'Q*GjsA4It;-A/QSL)oW#]#B9D0[l:2X?^)9(R_E3J`*N\2E2&k,;kmERUQk]
%$=S<9IM!b[TfBuE6I\\7+roU.7r,>3F!f.g)jL<\=E&M&-(",=4/_Bqd0GT;XuJOtS4g_];'LM7E>8C?kGd.2Ag54QTc4!d6V]4e
%")sr;@67As?/OBA;eHW#QGSKm;97oA$c$55-ObIl0je"7+8C`4ZqulI(hb`CXs)gI?s.0Y$%pugTiV"XDt(h#5]g-Q!1glV.Qh`,
%OD./cDcsN&/agkpaSCL>Y-<;0lrar5*E/d:PM"_N$Um6F#/=>>:%k.*=fb])T2Hh+,97+s=>B^l/!nKHac^6pp(LTW+"Zn="qQ9G
%MuLFf3^7eTL'fQ^XrF=--"Q\ui9d"5"(ZNh2*23l_Qm8m,4)sT.X^ir+\aDLj=5FUGRr4;l@K++WrB"+1mB(GL,Jh[lRL[LNmDO9
%:FP#k8hi;a7O%+Km4]d5)?e\ciPp8!6G5ea3^9a_EJ7a`'qO5'<?=(5WcWL&#GQR')PoA)76od1rqq>'2LRqlBh2^3O?QpJZL8s`
%Fd@E+WP$YEBeE@OA=-&?%>'W/++'Mqg+o33WF>m1*f!P"ajN5k2&e)%!^'[`bRtJ$j>W3-$re[p$5oDNdO!!;0f\I?;hH2b01MP%
%q>;.9ePM*GkiXtTe0QtJ0IX),W-OUL<S7ZlCNZ^Ir//*&X9X)WM"2>)^4?#/UcdKfr6\$^=dfYABEG&YB6:sKY%'02@1'6Y%I69T
%:Y.SjX2KuAkl]2Z.eo=5+cY\YLr,Y66hdl!1ZkVU,Gka&VFm@n.$<fE&3PnY72;@t@oW$C:CC+%MonDh.QVWXAK317TZR*oKk[u0
%`cm*W*a;V^reBWol!`#R+J%W0"/<YQ_slKWZ&HuBd:l"(nZo^F;LGd?\:hrO_pQ+<795&W_d'EF2c=(gpsP1:j=-'"\J7FCGWAK'
%p,$Y3f6E0I.*9@H.jAei+qUQ7md5U$TJi%uZ:AD@jl\M*V`dfb((]$@n2EV^(f4P]\*0dle%HFZWPLJ1+<DJ;GRYk`1r&/<4<bcX
%%QLVPGBB#/5qna`ONj6C)%$WV)ls)Q'ibtl9;GjhbL*j7SRofQ?065e',p>..=ucmUaa_`iGXa.k2dn`@::/h'S`4%ZIj.b3$P<;
%@"G8P_UMKoG_bN?3qq%L4JiH>WjDJ$VW'SL%Vn2t6;[:\%7?7%K&YsiG=FN:KE=Xe/jp$L"jnaGVGGl1j>!]P:#,@U3Edj8aT.G.
%`4!#qbqt,^PZu$k4"6:5=WhlF7\i%KJ>dd/i"7?h"#Gmpa5/^gPVaL\/$)M(@U]o@V*X;'4UGBsr74:&*D\hu8=K[&C,h>6K>M,R
%l5Vhi7%LHgA.OD1'ct.\7-B*k2IediMrp99?Y:Lm>+f?k4j#8jH%Dcs]M^B7'Q0$;q]^NS;A:S7OJ/sOAfbUu)_0Vh$uETmm=FZ9
%r/jJ/!G%i-iHmqb\%!]kTMnE7C7n?]4ED/_;Gk9L3tUYQL/lE4@!(m`2JH=QP!alC"&UJG/l.B*FAq7Q,&.5l.Hj?^%#>T=-1+0O
%@1'RLU1UVpm.<9S7"3(Y0YW4c;Q4CVg*&%a]"pQaLB]fHO;d>oiPOAWaj=iZ]+0n%TLn9=TK=Vb'6,,f(gTP1,$]_6HuPIJ#gq';
%QPcl10fpj^@>?i\!*u,S=?Hr%as+]$J.*c&gH(j9.](OW7Vl]P=U!"\__q^rnOQ^q08k\:H'Y&s]Z86"U+qH5&2bMoON)+W7"oJ$
%EOZ*VV!#V3@*_WH7lI3u*"9a($na)O1_;&dPb]It5W!51'5Wd<@p1IT#qjAO8=aZ^EZZ*p=)dlElYVV&*+#AWF&ud2O5<VREkSU6
%F,CSf,Oe)Qf1b(Wq=Fr/&W*OQ/PDjMi%\'GUHq#k`Rm/K#h/O"FIJLjSk=Y1p\L@h%kEmIo2cc]%8V)4\i7g=,<lH$CWo>khgW9!
%TU6NKd8:(Rf`^Y9ki>Jk1QU`9%`3&e.r`#ge0L3KF"=SFb0NrU:,du6p[1)+_GFc'@1lfLDic:,26gp%Ps6mZeO!bp?t!WQ$Lm_O
%M`[6XSC4AFUme_`THR9l&g(5FAddQT0^6a;#4YjSZ56Z'":2iA#uuCf>=F#3n7Q]LotY-1?;5+X1AT>:hr27SE;>^._%0/;0`o;`
%<ZjQ#.gj1CZId2]?En`uVcc$VF."YdpUHPp"@+^"I`m<bA;p\Xp/]!-%]$:l%)ok[Od-(T%gj^O#)DP1*B]\$6dtZuHC)jjZIT/'
%7"pVeAQ^aL/kC@>,k]LD;^#l"#'W@gC8ik:E7OHB'QQH>L+/[SNp5fF-V;`9KaWa8B).ia@6c#+k;>'o*O)(M)kb/5Cc'[NlG)PP
%j<b?$2mj&k5G,VsM[Bo7!L4M'&qsq"$f44'PEs+]/_Esc1Z=U[,>>TULd2gc+uYf615!_Zr*)(9rO'IV?m/'DVA>G0,_2NkMT^hB
%n\?JIW;QOI#Wi&g3UW/.B*fag#h'RuKO!-ip?90nJlFE?*;TJpa]*DY0GRakaT+`kj6iNp0q#HaK#:Q5%Ns_9%t-6Y#`N0e4fKnL
%C^^(lH/3O<!)t9BIq>o<\Kog*n-Dg06'ajX"^@7_\u@gu#:Qj"iK6eK;P6sl.Z4NEY^$pr+I[-+,u8W@gj^=a%E15-=_\95&P4l4
%+R6hm$UPRW1ft,T[r@sQHE7.<_0!2f2FM(abKO7t+cqM)q#NMe"(OpM6:@P5MdW1`OhOr?6rT,$.=(_T11M(:`[%9c25U)H*111*
%pHA@``@IVVEd;UN9?[K+k.bU#aQt`>Cm!=7JW%qro;?\<Gin!tZIk(o>Bh5lhe[ja0R5c_>PPhO-*[bGeDN#MiGf@G4P1k'!M$h-
%AT2WH`J#<J2ocMrD:Ok[d4e4iC@^kc8=_!g4sl^,DllW<<$F1Hbm_C'VO%92:Eqp"r4s>.7&e#L"I_LU,c;qs#RhcsKH\;oXoKXc
%0IL;FnW"U98_T(4^]&ij57^i4o&<:.:8^V35\mfbZT9DtD"1Z637#=*o"qBq.dGA!C`9,Z@ifkS(M^SUe0"j+GYSXTpj@:jP`,6e
%(^AfP<7$=k,Zt\b9SN+8HM<=)>7RJI/2-(UbT8_oco\.H9YZgkf0bn!('j.K9q2amcV7,.VlhWS^Q5;%SVLIPP\G;E01U_>]A0Jb
%C8Uo6WHm`,kI"LP]j+1_df@EZ_iLkULAoeU?W;n8\b[?Gg-NKe,2-ra,IO/T]iS+.+nXFom\jX"=Q^0IYI)qDZc8,]N5"JMCS9!p
%gk2OQMD!FXK5M^(+%SO\[k,TVY/,V7[DGUgdju+mDc#Ra5YZEWrhlKaW+[S=@]YdiD$\[1_Ng"_Pt%.2-e?:r:9NI'V@:;n'pf!m
%Y`\l3/o57Gi^FoCE+08Sc=04%b2:T;-uL.Wbei^[7$s(Q3'jmfYf?;m`O(I6_'(6j7H)#fW^Hf5KZR*-;&'=n1fE65CVX9a9GL8p
%k)s\;%ZUe_W;$rW"5e4AHm/Tb5m:Zj=304rNNFC)f1_/lD;qU6Be5a`5n!iTZ3WHn9g^1f<*2[FPMQJa3<PrYL_PNl9@Vi3;G`M^
%M\+C'"h=UVC=?\C!]LEh"%6X/>6hDCMdNTs/B@m>">hs,a:X#ZX/lhdc937KSt&&pj.t6g,eLjKKN^DkPakc^Es+)-e?O[3(sP>U
%=>W+$,$DO^B+V$BOuW##M(ZsgDK%#;aTFu!65cJg,t5hg-?UM`B+160RkM:2\O38gkZDX:FKlH<Z]Rtq&m3pd?t0OV;BTjrMK$>M
%TD91lk8K*!%b+3JAYs/1FO<(-^@1&Xa6_nlRRSjl(&mbu#)qB#=M+imC'S7KWDNmG%'Uj3^tpA/a`*=Io$ECM[2+t:e@Q=5.V0dD
%:`#Kp3C[kjf_!C3$cA!L?4<;&_LVt95Z3DF'`#HF(1!(Zh'SQ0#a+4t2gE\1X<a/_E<R\%StiT!hiJA43fSc!-NW*lc:XOD!?4OJ
%o<9AqAi=dN_BQ9/23*X2(+#,I9]aAI=Hk%(6ir'<!2QJ=RDBT3[D3tG%'=2X4HM6'5Q`#_>]M?lbNQ1'/;D!=!;ia'&IJ!uknP-6
%MVuV)/NK`#XfrAWYdl21U,I+@fn('q6o2k%+C7IW56)aEZj-faT+0aE@*uGM>_,>WN?DN<K8#'jbO)=XAft[faBNH.!@uCj#DmM=
%!p$^&p,!1t=hlF]CJ\--/f`#i-8Pnp_AcCZ77(dVKt2o4OC&&_LH2MNYd\=)2Rk8H,"1e&'qV:.-e!lPg+fE4V+>:3A8j(10BOgu
%7<FO)%Hcc"BK4Bm^BL"skeo?_6sjUH>51\o)(DM'2L#iA6RB0D.N'8d_2RS)pSUJs6!Y^W$M=8<`$eX]i+o3(nsWjm=5Y]%$bPI0
%K=;#l8X%(NGg^R=:it48_?psrL.h*?OFtGM8JXH(df,>,`ak!9l>j*m37NaST4np&rm50FJfVgDcbg?PKJ"7C##Z3N:eA_@ZFDpe
%D4,#W8&pQX[Z.DiN&Rso5+3sj/B(D.Pe/R!5W"sWE'RhNCZl[?/]>P'p_7pB8%Ljl*J2#dK&.r!#E;f]EWH$fH'0\IJCG$d+QgcH
%8->"o.bSd:"jaD<7#7A2i&43ep)"-ld+^\]TMFN)o6PMM(<hHqn!5TC:!kZQONET=9S6[eS)t]7TKg1I!J#%j"t@b;GDVM,Q,5N:
%mS>0Pfod::\qbp%F),;G)WA9Vcfj1[5k",@ou=LiS#Ft];?Y*>jnOgS@-JqO:^!>aX$*jG?2FaTKdPNV(lr7d/qQP%Tf7+g8I+"!
%B5K'*DMPVokl>LLh-K\r5bb$Q*e.9c2r!"XZ!F?\$I.I,90eu`;,LUhRnbQ,[[WQ9F)!1g8Jd;UpQKp8!+i',F&6lpIZP<f1VH'h
%.3'<'SaHlc,9rN*fatR@c;<#74ER*M(<oZ`'G5F,C'SaCT[QS2[/MObYQ8#"geT^FgffL9M.>JR(%:3`!^^m76Ne_(q8i=_=faWe
%-&O=TWR4H^qSEEo#9AG*Fg.;,S^H]T@ajZ>4F,eVT!:1LmK"sF`#<(5KWF*l`&27;c/dbpn/^dg7=6@?Le2moF'7!NgLccgm%`KR
%PXr,jL5^[c,9iKpF:,s$<Y%m,W;LAa-@XG4N6]*!G[(]3$?&Pc.8?6UN@2;8<$!k(D#Mk5<gAEWOW(5>dXp63TE:isH-9+7*Y;'&
%"lBjq5"T_Z@Or`J:LI6jeoO2<0!`i5,)EW.lFfMs"![oX';"F!`Z0OdSikQc)(l"sp]<oMl5=)(&_pQ@X!q7pK>oqPU</LAlr8[m
%FBPs]Ia@^cWFmO&Y@%KITkn*U.bh)TW<m9\Y06M\[<4r6Z-#qW_TJeGr1>Ykp+dGOJNn.7=i(rDJa7m;/]R(9@"4aJ_W;+dhNr%B
%f_#tt5b!egVWe*[KHYr&((&`h9'JYW)IWr93A(IX`>/od_;5:1_:QKR<(E(BrNU.<K8n%a4?NuNIh`>*8**een2"-F::0fF[R&@5
%@CkT7%,OIO'F,qh)",]/*A_fr1Ma6QE>4G`<u_F0G5sZuX0l*W#9^mi&mZuNllf'3?&f5q=hhIn,hh^q5mMs?GuLrRAa2+pLhlNN
%?5>iG'OH"5h98_Ai"C4@+MiqSS.hAPLJWg07-78IY5h\BG8(@-KKVSF&#_8bn\8IV6<AD23'%65YsdF?p`pSA`"/'(/IGc?7D-M7
%R;'Il$4;T!1Z<kt$E/sbQ[X\sEL6NG5Yb.HJXV,jY=VlA&ne^Y*4).Hd<3=<qp<"hB`SFoI00$OF@0UWmAV<f&CDMb!Nm0^VF5M`
%Uo6NET!Z?1@$<+2:#fPY,+WB1Yet6QfSFMs'j_!K_Ds/Q#n5M6CeCLB4.%go]SVm6!Bu%Z^dSh$O1MN.h"8]qImRcG$eCSgXZFC!
%NpEAI)r\#3F?gPM9,`DTgF*r2K_dT)U;N][E<eTk"P=DmDt;7>\2dQ%FCJgu*A_u]L_,^!@gB@l:"6s:S&8-JOs0.m"qhP-A0(q-
%mig;A_XRTB/-2D;$:f,=[M0]qKL'6Rno]c]TJ-qf.PcP5BEfHb.]'\[1d9;LkRI-1EJPhBYCR`)d%&?J!kGrJrm7[/-j>8PjZ1\u
%_X!:s4+q;#-7t0>B*cmB%6@b5eDt:r-B$c8mBM>c@Q-:k5+Ot5@J;ode:=E]diBJ:ct)?IL3CL'QO>4$a/:^9eI\2T6XtPkD2gu5
%E((jbcGrgL%02bN!G/NkBS3s@@j4Y'$e)nCQ%?[Umf6+P:.d8`"G>C_E1?n?i\7)/L12pK8$-qaG.(k".[X]I#X&BCete6G#.)tA
%_NZ3<C"MSrGARnICCFP`c4Lt)1Y"54N/;\DLf&RSq2B#%Z]0b&g-18X_@-ca8Cq:p;;FiV84-j#&UOMh`YaI@<a=loqF%"YG+RM^
%>fDf]p[Jg6fg1G*B%j<jL&(!N3fiq7-XDkbi$p9E*KS!HF3'I(V-rn*@^Z\R"n*drote)8(D(9$9EAau3='utROV79%EUuQ[95U#
%L6ttTh[,E6\@$VU4K;J@)OTK?U21r=Y/W(^%-%R\P9#)b^(,P(q#&h[FfW)OZk+:(c"6FZZ+_i"MSYbtRrm4e:"V->%ZSrq;3&b'
%aUps?psYp2imn^9mIKB>F+;"51T6&Qj)dP\5)mOAiN]Zh)=/9Xk#Cb!8rp9'RY?h<AhY(cR-LnP$=(ON3dmHNi,L:ZP:Kr,R*uGe
%);@4ig0*KXjt@ZWBpTloF>n;LdBgXN(IqTCAMs%!,0COmd#bK8%BVl?#FRqgK%b%dOe0BAFVM45V$eHI(:q3\B'@N#4uU#bKnDK*
%b.UZR%Q0_,g^SU_d;YfaVK85aQq8(b7i.5,)WZ-NaV]<s%#BeYP7l<J8d<W,JCF*-r1Vt4g98BQ"jfecL;QqHK&7T27&J+9;;aj8
%4Jo@IYj7;05mu'WGRuR"4Zb1`e4XYNd_d3c5TC8]V&goWaC*ti0o0]g>Ke[F>#X`9I3rS*_DDIbUTo"b_2[A\_N,.i@uRW,hI;&6
%EMlCop^TUmBp'MT`79_>WX+,:[LQciK0s]nc'.mHLW.\MrcBEL"`6lp&]?8W=JO:LLO&eoWfT/dLjDc_GaKi,n%g/<0jX=F8Mad8
%#$6@LNA7qQn1h`\P/G?qLu"6dhp=rd#t-^t4C<><,M,>&oJ(SO*DJD*[3E>OAhsfLONGH\m/hHU3[3`F:);(9)S\N-c*-^UgEtGs
%@I'(5+q>'X8bS<?Xr*NS,2WE]a^T@Xj9sbpaF0YKf;TBN,D$#aLp3Z,*LG3B9*;\3P=qJld*o5@ao0b`Ytg5T/CAPX'\l]fY:N)Y
%`COAA+rrAXE6U8==[\TSg;3UP:s4[;ZFef68JV(p@k*$_TOlT8fQf`l9(Em*Q@[1H.u<Z*NlmP#J<R"M\5mZE.Cut4qkh^c#-'su
%FHJ_\F$5J:n:J).AddK?Gi.^010dpdNETQqjua#X>V$(27^(2H^]`t$6OloCV_[9goLiH$keRK;B$8"9krB!$UR>4,^a&CJEE&Oe
%6WJq^N=^4EUBa\@>I4UsoV&cggu>l<Q5l6J>;09l+r1sh<2c&,<$A2+A[-L5ePC1qio^pYi&)?(O3u.PB.f+2$aqSNOKF%WJ47El
%<pYaGL607aeOK3T[)8S)$_I[2KuiS@UPPfNE*-V)17)V=_GS:^oo+N31#6@`ZO@VH`oQk^QZ#qJnkid3-F[lu/.XB-A].H#9ND8?
%'WhWeg`^QUZj(>TVgW%uO;48B"^DZVQk7qlL.gMLnf!m9%bZD,(>qdCL.#q@FbllWWd+YSDf_gILO04T(5][qN]KgGZ(2S/V/7Xo
%S-KZeYVVAd_;ddqbasBLBO%dY+rhHK,D8o3Jre<@Al5le%!!sVh;Rii@a6CC6kMmP=*EA"9M)(%B`.\!?06IKQ62BhHDB(ML$,Bg
%!#NSJ#V,bTDU>:XLVMu&%>$'&?IOtO:*fY$B_%YqNY&a_W1;\NZ$OO\lG?##YdhOoU)u&iQd<BC'F-WoK6P8Rj:nF\3+ZksS[)1W
%;[@W_&`aaPndm&T*\gpfD&lC2XrqI/h;HT1$E.f$hA#r"G/YeWf<Sn;V`A_&'N%K!Sr&7]/FOM+#B?DKRs(DcAPrb=WYc]3.Th^U
%aT^%"Tt"c2F&<)[Y,<^<Uadk_P#PO%Pc-K"d]QiAOkB'nV9gW'Wo[Cjn\E=kQL`e[DIf0Ah]$,[="8H?OP!.$Rq.5W^R7Ig@mSU>
%Q88ReN&2:U%W"H"4uteedH$CN@>d1H)a$\1psB]b!Cdd(6Z3+%YbOhlr`QX\aSJ.<9@-[V:D;7[IY`=*M*<U;m/ug]<*1'EW&?UG
%AAo5q^B[^olml]eVCEo'`1"Pp)_9^q8YSS49l_H^Ve1R\YVro8!GY`2n<p'92PcL<b>qV]SJ%'.J@cbYa;HQ-];QJIRAdkRkl@L*
%%e-Vn-)Ena3eK6(VbK#L/RTGW\5F1eKDDmb4;rc:XpFKF]#.q8Nm1K*ip-S)n%mh;5%mh<T/lhZi[IQ=30(IOM+INZB9(A>md;^-
%"XdpQIOb#A&\4gHa@48Z91'BC#3Wf]Gp[\GKi%:lT0.(Q(AM@1,Y]J8-P92dD4[X:et,2X;867%,YAblVl>E[0UAReoJ3IJ,*FS*
%W=rg-7h?KE=s@^`kQ2uL)i2S9a:!og8_*ZM6-L=7E<\_3BV6aERFA]9WKX7fms_jeDsjhR(4.3:;2T@Z)eMO):m%ESR4LHW.h!Cg
%"0.8o,pM^YT0#MDGn)c1XX19VLd!L:m/ug]>Z_D/W\uOAAFerX%XJo#")G=IGTdg)<$'O"%N(o10I8?h8kF,gXtiY/@1fgTkrqNh
%1ErGXNCHt\L#Iu`!U9N3e!>p9H6mT.3E5U6C/i:OXLEIIUs4h38qk67UhU",ms;@=^Z9'`Usuh!5[>(mV#g2&0lrf'A$bA!4alL8
%WXj_41PP7a`&L2eQR7iV*hnUfi,k?0i^j+T/ThkRBV9,rWB*=Z1ErH-M@,FQg[)6(i/emo\L@@pXE"N+D?,Dto$Zll*7i&k-Zm`Q
%Ym+i4#ea'Z1JE)cdS41=+[hXe)f@aukqkBq)[s.mGq1S"qJ]97*?dmc,@6b0Vf[;jO?XWZha'WD8K:_lki^pbCUr(e2i2XUr`H&l
%M#BZBn6Bk.%\';8F#ra,'_ujG:p!ciRt\jTV+?N9ea(c)Pa-!j;u(1%SQbAXF?5,%5)$bE.e&G8T7q$h09DnH.k4Uql3dQGQFq6[
%a>VbJY1-%V;_)u2!<.kTYedW>Va\7'\.kp#Q-E8ijjXmV[oI0O`EC%%AtdaA`=&NJ-q<J/(>^Oj8e"nn<_Sd<Eb_d_G_/h8mN]jq
%e=5ile7lPAlrN.\kHWC:^K3s37<B>_[O]=3R<JbT\\f>A-dUE:/Gc#Bs"1SlWJd,!GUYJ-Fg5oE2<Hu0R\URl0"G5`M$gUr]%;+/
%Ct>Z;e5<b'Pp:F*PX^hFNnNE9<gmpWY^SJ\jZgnGPeZ3MT:fM@W4sn]/4\:YS$.4IghG'#b4F.U$am;`jG8$KIt8RGEX52C&'"c<
%9eA+.L4M5nW*oC-6jFC@Jk>rq)hEWt836k<1aogc2\RSg12Nfa#^c$BfH\,5g8(c?Td%Vhr\%OJcs[,T/(/Whmn7*=Zq5b<=%HC/
%3'h\O'`Jo_nc],'El0s?g4,'"#0"P)\sl<@+l,'c4Q3[A@d`JkURMLMm$.H+I2?A:2u2__7WT]o_79`q[RG\mJ*&?TYGs$^&;0DA
%&;dc<#NajqG"ekbSmVEAU6n9,0E^Y34Jjg<i8Ur-9I?5TWU-*SO8TX$O-*,=7B@?u(GZg40X,4k(Gu&f8HkJR(g9RHd`t7IBgr&C
%,u;J,N5s,&IPQ6A%h^*6rkGVoJ$mcR(SG"(6<>>tUTJ%(d'_1Bh"$_ICVHL;^WHMlgh/#aLNMHQ>GYQqTLi!$MU"A&(0ZKC^O#ZA
%/L.BmVCg4G&p&fDq"7;6(@!Pi46=9AdJmMMs$YlgoI^GKG+a1U*M_U;`MK`CQt$)_7&H^9d!p.`6E?`L_5JD0V9e$D?$(mm#Imk#
%=*B:3N;ft^ImI-sr(Q;0E<#iR#jn"%7Qq)8>@nds+<m+K^RAki*q#XGc1:K5Hu"QSA>q$f!9E(Z2$*.-kOY=X;kpJuQjY/C5HnX7
%l$#Mkh2s$OQ$ufuYtkTs)+YXp;KWub^'Y%08s=S'96BEB;uGoW-<m_P,8eK;kgk7ZEY_a^WJd4X%[P`a>akB5f7*M=-(gl:F5$U6
%.=jkd>MQ@2J#hPC_"9UOY/+?8iW8<g(_@KZ/+8I4R=FW0<$t1e6clAAWq!$<3gEkiqHmtl>CM02r-cXcrqN88XNTEj(Yb4IU)T"0
%p%JY='DY68[,!$K:/ksW;M:.0M85frk/+lfFSOj"mpA`9>,KZH'W(705!hlgo*^_JAC3j9.JgkIU!c1n-gQaU0!e-:inn!'X0ep<
%@V!Y:R]h&7Ug0u[98L@0Vs#US;F]C&<3,Qp0aK##K9AiD0TuMd[?s6rN!d8-?SH%OKrZM8";cg>d@@Y7os\u9.F@Q+e\`^c*8BLB
%;NNMQMT1ZqZ%1CW#MZEOZPLJ`Z67"N3!X1A*!kX[#@b,7TtsGpX[S<+3t;30?I8]mXIt%\/,6#NUL#Hn.da/Pkl,.\S/<=45$_!9
%Qn76+"3)`$2^lP^-BZdn'?/_Be"e[`3H(1(5KgIP;Q8R<_p;DVRK?`HR"M2ePQiLMkW0(CS_X71M]M"SpS4esVooD3?ae=-.CXbs
%1[QjN_kEZ/Oo*a>/#I'\!Gp`0E8W/d9/M5ZPlZcB?WoK:(I*Jes!N8A&O4N4X'P]&f9&)reXgY.c[QY#K?=k%VeujfdE3+SOBd'/
%RB"bicI^4@f!L3;G\kp2ST^EN_KDor48MG$95BioBgK0e\Pd`+\,M\Vlg*'f?Wi7p*Qt-<rKgNbrnAt'<9_+oBXLd:083=&[pMYB
%s#!..'+2_9?^i7Em"mA;]+WlnD&Hhas$FgaW:Tur-7ng-)s1NT-X9R4S)nZ?MtFG=p_inh[JXaGd.Z%Q=E:26(c)d^M[H]hJbQ?9
%r(2RPUI[d1XJAH]HKs!N8I3rr&]<n`_b03i,S$NDnp3s22XRQB]*g*AR$'Y,Ps^okn@o^1W0,sDFr_0I>mFi3l\HDE3Y6f?Fb^]Y
%D>Td^lJI!(b10,WB'$!ir9sR^Q-\>pp_<#dkfGs(E_TiR<8-HE'K.V-?Hg%2eW$b%jr(n!aaDce2/"^UIc6UlNuS(1gu/)jbjb;+
%MQU[W!rGqK4I;u1H3jOA-$:^idXA.cCKhDM3o*c`csh)q^m-7q9tb[mdnRMuG10.p'>cHVHAHSK.?5PmF$M`C*#0*g=<Yh$n2nJ#
%a!di`hg\)VoU!qbnqC8Zd!G^fO8D_6q\)bCFp)>^n0uX&_k*?O;PdW6VmL.<#q-][_?2Fr#W^r)5RcRuY<%1%"(#"-;tn"bBh\B@
%J672ZNqgRi/Gnn\040!&r40i$IeEW&btRC*Z0ihRr0[`[/(aE#W!P<Hi;309ecHIEX8F`e._i'8-ZI\D_IKuYXCAX7Ks,uWq)CE0
%QO42of0]XIiZ:"HXcQ357e?@T)o,7!PS]i`55`\R($b$,R<8J>:@9[3iGE\R9pH(Q_C>(c?-H:#pX?#ZgY7aV7<Oi6rStfZIj<Ne
%rGMLnNQO2.$N?XqJ#b7,\<bH7a'l5r&tG!"@_#<.SQ$Me.[lF=VssMD9D(Lm]%,\k/FUl&*f(,jJ\S\4hp[E/k[/d6*#72P9"eLZ
%U/cSgoO9-OFC[eNN2+MMW&JMRAh2AN>^Y>WI9`p$0aD_PE_n\Vh&J*QFPq:3<sGKuGerU##_#(2NPEEj'nRh+GIT8C*^7<0TT>F;
%1?(/+2iESL\-UVJ74/-`8?R`')p22bNG@Ernn69%gjeeCUat#-q2G?>n(1i/^'jI\\hBlX:L2%Kaa<8:?gp9OA*Gh4[[B2APY,'B
%r7BhF(L.TJd$7L,s%Ddk^B"+,4A&3/__B,>mTL?E*9NN\dJ_Ja0m<?ae1.p.f)65%N>!C'c[r'LUbaaOHX2,9[CoN/?ELk9;[18Y
%]@U5udDNc6^f7k;3t;CWF`D5Ne?@oqrpLNYeFK(iWYR(\J%G^\nqY@peuC^>f7UiOO-&o[3O\q8qX]1I9#%ga##tthWEcV*gL^).
%cUts4hnVPVB*!>di;AQ'?QCn*(ae=QdSc/R;Yu[V"Tg>.S'>+dW1%W_d3:tCXl,9;IoA)0rn^VEZ\cjQnV6UDh(/u$`8BJ>AnC]?
%Q((G,hr%#=^PA`g$VBAC0:`$e:+XglR6i^;^&@+6T)\2Fs'@#c.3(5/?&g&'Ihe7/TCW>Wr!i;EYg7!E@0J8M##>0hbLgJ,9#If!
%nfTBC6qV#nBEBZ]MC(fHM;ci4'Ykji1Lgj`_&?ZEfNtrOJ"_,T[(pJ<W;IA_,Cch3rp.*W&2WZ'pmXGhFP>8;%7U_Jo_X6uX!HpA
%e4W=3`)e!C_(1QZrlUEM4A=@.T"g?&m_9"q5=a.n(7UT0a"N9up6Y6T7$2n_5/Xq:9Hn`Xb,GI%N3hEaKt$!U0KFG]oNOHhlD<A8
%_u%=JZeT@Q3C1YaW"i[PPY03pGDcpH9<WQn?gkK!VhW[=iE].o-Us!b/f\E#[U34^P,Lp_XlF4p)LfUO;e5g;Q_],,*.BEIM_G+[
%+I%AiQqZEL1Dg/8"JtUo61t(&5Kh<deNN[XhO2+)7I*2+qN&8fj0&EllVHNC?Wj#un(R[eWGD1)2U5F/<I'%mU4:q4Nop$GoelX^
%r)A,rLUA2MKtjWpJBuCc&=l2=8U(_61N6#(`O&S8]!Gf.[Z,o]W%<;\TAY3c`!V`Gef-`k[%AA7&#5Q/;aXG`YQNU0*Ms9R^OsRA
%XlM))=R@rE;+t*2$I(N5V7GG2'YR++UJU2D,PWWYs0M:r[6%+4]tOFks1^tm%pjES*W=hG]N7_-^K8@3^M,gZ^[#%$gX@Uns4#TS
%e@_fN$`]qP"0/EeqL?6C!u:6?$#KLr0%c@mZNlmXn<^jlru1,5P%^WT;Mh1sIjl1++nlZ=kKu>i^RcLj='4R;Y<<S=Soe*KD&4[%
%M/74oZW/RK`#\kGiH'q@Khf%(T.IZ0ojmFH*Yt/])!=31eOjP<"Z\c;ne#'@G.UFoF7^l,20F7t5&[iu"djjf=Jr28%+e!5.XFQR
%@Woq*]_SF<$u\gGcq,u/R\3p7FNE^@=;K3H!e/n=Z]Ze(l)GTC%OYqI7\,*^=Hu\(`?!daV7pK/\-.I8j%VT>0!V(2U7r^>'Q"W_
%=$i]\kTDJbe)`$X.(7%Be'LDtPrb@5?O7+TAp[_RQ.'Q>V4G9\P,:[;^9S=W:oCJ>eLKo`<[F/:&uN_?2!um9.`<WUg]u6:\#e^o
%nFg[^2/s'=qPus8&MiN_GOTl'0hG'EhR;E)Gii:+Sp0u<F@8s15mkLlLmaUQqSO9a2A8_n;?$[9'MFWCJ05/$C)%8s;_#<.@H!6>
%r(4FE<ZAB(72F\jS3mK2QR'kh#5Nj_fPJ_)$_<p&:%HZ'@\;cJc#O2:^0Kgli)%]c*HTjOHO:V6Q.ggA-EX>HPcL4Le.US!Sg"rN
%a<kK[71>J?n8uJX`E'n$mKLch7g=5R872s7)_@hZC?"8oZgq=sp/^i>V,#TsX;:&1!?KT73,C]]NAmkP18c-N$ajXIU=3snj0(uU
%pD%:e(g!f6s2c">Dr<(+^D<7(+<#Ia/'Mbuh+[=9F"(?PFb4KYi'.rTEThVB?M8s\neII*klIFB/K6EBK)1D)L_Q#md]#)SX`F=n
%=?6.o?bnCJ?c#h9A584Yj"I>1kVU["TbBTJpH;m!<PWAU`)pb"bM_;-O"8jJa$MACDRVXP``;!r#-"E-4;+7V:r-!u-otV(&K6\2
%q[EGlTKs;=r#&Fup5hc(;<;3-.Y%@nB\'*7VNA,i&':O<L\rl_L-ia*%f,-i%/CK06]u(ppiFuIa3-Y[e<G?DL:gY'LV.m!+VkT5
%85Ah7,kC4)Pt<_unbQe[Co[p=nFZJLa*JK#qYqBQ<T^2K[6W=p>;(0VbI)N%cn6I;_]g=UU()TEpBOC%g>=slKHC,.C:$Be9B!ni
%n%Dml-0F.k=;(,B@/M1\^s<'_$#g3;?BF6ogV5]"a,B.6<XA06Hb!E)E50`n6LDB$57>^C#c6!j]CjA>jO`V:T04:>U/^ZZ;CscL
%2-.lGd8J@Y)ti-oe##-8iNp)!5qTJOE$9ouo,"KN%qG3R*57`3[o3sJejC%k`qoRQ6ts3tg0_'8Ca``8K0NQ9R;e[P6X.>!.$oC/
%$/ISKJ)3H^J9^kicVEiF4]Z;D<'^C^k=m!k(lMAZ`Ab:g`X]@VY=6^V?Tq"=Lp-!$?KB,0^Rp\8Qu<mH:VZk9VeN28.K6Z6;EU]&
%HDamsB0^tHKa6f,q=!i:eMVJ8=#B>ank3hRh]iWWpgImJ\Y+K]d]YX3rsKq"9:7i@`/`)F0MP(9--+"0&N7G^.O?'A1hM,C-2eR6
%7_9a#ZH%81.AD1NVtOQ*nr.)*`!qkm./m+3%$'B"3k3T%p.m]X#CBtjDA\PE"I%J*EI(hh;r$ko1tPJI[9':iG7)[Xe5<p,C%s\-
%J)dJ1DO$\Ub:0Z#V/iD)]C8q%<n^6S>GeBh]EpMsBXT#KKk;c6XB4`4PaZ?-oeEo=1O3=u<qoOrMl@S_'4"Y&q@Hk1mR(gLa.PU-
%/Ec&-.*uiIC99r+/TUB*e7,8=io"O`?u5hu<27eg2pnPlSLT*&AZ*93-A>?QST^dW:7W)&m;fQ(#;2E*.:ZV@pl]B<^9h6b]u5=f
%naHV?XAf?</%!K5r+17GlX'FiL+X'\eA(0YSTEK6m=)TFl+BZ+hFj"TN*@Ic!5N]FKIPY)q<mA%-&d&p'!N+TH$HP_A\m9c6FG84
%e(tJ72`BVW-#TJSP3t^%m8U[GY4Hr29/)`Hg2@h[EMie`-ad%T=fsM4PBNmfHK'Qni[X,@QA]UuCla9bTiMT\&^P[d1l=dBD:XA/
%>M*X<0Qpgf@^XWLljOZ/s$PQ*),58/<uObQe:3dR%581u.CCRNM"k"(i'A"U\_rrG+VGT\V.OLoR$[qiI@si=<i`^K?7'G..)e[-
%CAFZ@Y[jY4N%9O@8$mn@a``@8mJgrQ81/1TrMW,t;<l)bBZ8P"XSW-jY66OK9Sn')*9CB]YY;OgBMjV5<AU?tP1)TtKk4^qd:T&M
%D2+DLDR*(sBFlMH@0'=7#q0.H8SJ"E^(a3$AiZa.WX9]Li'5kBV9g3jYsG@9Tm,.\/WZ\<.p+;d(VhE)H`9LT@?D!TUA'hl$`iEh
%em<$4*a@HT#A$NX7e<T3KLm$4O`Kn]7:Ot=keo^#^Fd)7RW#>)e'e@qSWfCY9)#+a`S:&To"nD&^l)o_.#gVb\J47QK(<s.',26G
%:Jf]uo,o,?@B:2,(7JO^*==\N^U:SW%A_!EC/=NT`gcO<_TUlbYX/_d)*.%]q$G>Cq-k3oY]8pZqI:J746&ts6gL^LmCMbZA;be'
%Ft)K8B>TN@S#(fs;X:kC(UgB;:od^"Fkrdf:nq3)i]ms>HDFf>>$gul[,=S92M>Q4jtj3CCEZ_WfJ*A;)YI,WL?Y?J>5SRpKgcfY
%2Z[G#a2Q#4F+J+!O2O\iCLMCh2X9[I3sgd:Ot`El&8T:"'N!kqdXEi+!lo"SEBKIPMgR$Hfm4(Mo7E%QNn^sPWSFL9f4*pVd:b/j
%$X$QVJPn.D*(_flgi!MBH#.>'WftBE'_>N=PoZg-G83L+(+N7.8&@%'Z,+W'*uV_)gi:.<`ZB/WB#m2&@=em0P_br.9W80(KiYfX
%M_uEL0%E6Jg8HD:>pUs&]<iLQ#SAHnH_B0dRNoH<J:)q*1aE>$YVsi7>qP(UQZU2Qjq]+Z@o'GZ.Cbk$h82PIBi-r,g+0PjG((*=
%ONgfDl>(P\2AC#A<>nD_f%sl4*p='_ZSQ-V48$X2Uf>EF'S[Z..X-!'3qQct4iS@CBFh9"l"6F'2ZZi\GOl7Ag*T1c_:OLZ-Lre,
%^I2lMM\j<NOGPe6d-ago^mT</MC`l70bso8D1J$^K:3*A4D'0j"s9e<S!D$()QVDBAKb'Q@I"&dgL;I]$n,O:HqnD&54M[+M-qD,
%-4PAGPJZA$c`UICA*^8]X-)c::@TbtIB99s5;M,oN4$PFX7iBmPa9Kcj#-btni"qeo0;q0PPO1j>K'+%?+Y>d<4$Dp9V7j:cdnF$
%pTAXK^#,Jp<p"nmlaSk&i,U>rg,Yctf,gPgoLl5,n*/ZOgh=%)qX$"]R44c00=GN!mZ5im2#>5jC2S35@;C&RV6-6))q2hs95Epi
%%kabnO4T87e;UYQ]QBakWQh^7>iF]E'pol`QCF:;DK^Nu1:t.]I-R5D2YQ`FF)<IVQEHdr2icIUc]1'pM_0"nrGf:ANOI_j?<Q&U
%hs=rnne\4&4%^Of">p:Pg$IR`:\OuL@oa[m+/j='/%oLHNG$jT?Z%Ya%^]/]GC=<<rE5ZRF5uMF0m<]6A__%7Gir8"dm^VRHWr"A
%fCNeD/(X-0qWr%r&fNk7%Q`>t)7`**G'l2HD]N4@UYSW'7:&l_iIfg%-e?Im^?;Yp:Z($$ElH50+r&=>4MP^V]!'B;gJ$-]R233g
%D`$ni[g$RO^8]A[D@TIHq7:Ol8=`JWF8b,2rAd$CPU<Q>PTtY,f:1%HelD<j3kMSoo<1f3KS8MD-Q?Xhc.O%G6sH+bNls5b0]5=@
%!jpq`F"83_Wd1\\25=@RdCfKmT1?9"nVEX=:($T]BNT#Wj]nf_X_o$EGks#)eWl8Rf&TrH+^0TIn:mF'*t)RWO(0P]@BIhXBR<Td
%[73Y>D@Xn[<fLnISk;1V*JP&J,ld.geb%suYZ@%e;fO=neHsL1cA>RffQ\;e.@ZgOlgRKkJ"19nB92)OebM6*%,Xjp0@<g]-7=6-
%MOMq^(Q0rV@<EpqR.DrtD=]r<E<NBr#FF#O2qeZ&oAQf0[WY'>YVt?mXTN-[1of)8o=Lc(KsuAiRi21/3r<?fU1RT(ND)NN\6E`P
%9t^jOeX4(B?*9b@KXH]Il.bjSqW1BO[gL!l^U.lr254)dFR8Xo\K'#^ot?O'h`;'Z'h1!BD_7$b/RFs%%9M5QlPr=$3a$o<57DIQ
%AU(K5C)i4!X"0RdI$8rJT38MPLLH@2H%2lAG357%H9FLSCXkK%Hb1E&k3h*sU/f\O)Xbk]Z?McoEPm@PZh;_OhaW[/crTmRR[(rp
%fA@W-d^W<,N3?[>lKts!\l<R$\%4YN[p(?.[6n.]I99\`CDA*O1jj8O[?Cn90!r3`>YJHaiN;O-G#"YO9290$(OKm;[u+1Gi,I"$
%(H8BlXmRYT%=LC6e[=Y"n!?8e^/gpFh!jFZj%SMZ5<ParQP$@V)9Vp:flVJ>#D^X/=4riV3!dBUHf&-hNbnCeBQiAbWn"cQE;[!#
%CDA]o)a7N!DVh6p)kjCr?K\GH<h6AOb6)=:Zs";\DgF@g>-i:,%r#_P>@@%BN\4+Wn%:lX<inf?X$:2k`b;DkmYn&Do4:8AV^IN`
%\N7-P>D6Zk_[F`?o?Jbk\e[DRp(iDO7]edfePu[Kls8EnXfbC[k'SsISB`3O''0ldI,A8an]JiBg#]>S44%_'-l:4[H$aJh't(WM
%q-.]:eu!/^9?.FM<RM9nmacYqHt!8gWiqu^m<L%(oX8<phVs_H'0HBPM34k4nMZoC!En5P5LrXekHj4F8pGoG1O4D_GIJ7^Br<Yt
%U28`3[Ndu,>ZD06UJ^r'M!,i#kN@T?1LjQ9&0g*TCR1M5;rQ1*kDX5j1p#E,V>EFk%)#YVg5#E,B#N<UD+@mFZ,8f^Setcu]Z_Bd
%I+j>&lu)9N[_`F=.ee:rZXtTE;sWCMIC1jKn`fJjd?8o4O$=(8D[p[7l)D)FHRQ*:PZl3H?d0_Rmo^=eL"kC_mo(rTHRi#2)_79@
%&RWl.>`LZlR>=YJjrQF^Zb,^&pX=)@HMob(:PT`G3-fdd4lg3"5.u8jf3=/:`2E&Gp%c)&K0Kh*[-RT6Y#bkCIQqnsR6:9/_oDqE
%N8]t$\C/*Nbh;g]YEuF&o'MRWEqlP.b5KNElh3m5VrO,a-.L/XeF::X=Fk)UgV^;1IQTIkT<8D`eM>m7a-h/H1a%jJl%f#anGOWh
%I;(TRX,ZA/#/B[cOMmQ&jeo;O;k*007P2B<0<+roq<GH/GhC8[AQH'rd`4/%hl3t4VC,1rfr)isRQfJ?G6F>\G-@dtW55$"G2_q%
%V:jAPA&Ck0D[at\\C\W>0<]$X@f^9=iOS<s#5kt>]/N&4jdFnH[W&ghQ_//5_5TCPRErUlO5qD:G6T,+b5@2VS3GXf43GgVoEerO
%YeIe7DW`)(fCR.FC!8!*ErCrV#\`t7STn809@9M'725,e%UIAlQ\1ba2IW8:g3eK%;7Ru18^ep[n+-iU1QjCC-EH\pVJ.q,<4&>H
%WcE159NH&foo<YFg=Xa-'L/0)/)MDGZ)*&DnOp2?IKFG`lQ><=Z`BkhLc5(rBGEL>SD:*I?M9\Q"u,nFhg!jp(AE$q2E&.Bm@1,9
%<V;W>.E$p9.tjU]Q<"1$9?=E;$dq;7H8iIAr-mYk*S(Dl*CSLtFM#0NhEeY1h'V>+>)mgO,<@&2W9!8WB<fp@Y3C;pQVprSLh7lS
%YahMAcGB$NP2>:1DDu-r:%\:6q;EKGqMqE/WKZK=m*f*<LN3UK#F@d)Ji\[o4GhNJ1Z*jlRn]O#]oA`5*+(@"7[N7"A"?nf>?r+Q
%p9fcHVl/Lp<fuOWPjYGLA,;#6dnmq$o.qb-DYC6aQh'/?g(2e_?+4R.e+Jtuq[-OOF0d[!L%M(MG)9n'&R+UJ]UD#+rH<iD=%:W9
%e_t+(kF=)$M18A"^atT91ng<HX$*<-H\9cA^-U9.9YH]7r?]-^btVr:CW\P_4j570a1@br/q$)Wda?"F]mP25UB-:W`[urnn66Ze
%8mjoQHcp?//Y1m(i[T'Yg)B-=AoJQQIXE+ed0B9K@keO.$NT2cJZ*(TX>H$*Ed!uQ3'g7\=nI_D#BD6emWs=<XEX;cdsD<%di@%&
%[$NDep?^ML2g7?4qTsP:4.QE/]Z'P@'-XE;DGOF^\npa\>`j"ai-dOn^luZF^t_!GR2&#SZMj4)_ipC67I&#ri@7JYPeMSKMUo][
%e]uI)'&r`WEV@;;=`$it>57NFXb4,A-4#re1g?%+9R:u-J1QLHZ[#E'L7d(!<Z@f%kZU'9@sf_2FZ7X-PcZ#@j7il:RG5QuM^&TE
%^<J-'P93l?3Ku,)]lS=%/W<DA-(%'P2r88-R`!+92MuD_AQpOK1QSZac!aG[&OY/T%1BZWl';^>DB$8b1DVlnVQ]1B`&*sL$,Tm)
%/FYem7OYIlkbNH\OHuuK]_>HPhoY6]Wf1P@nSu\QfE<22!kGr/&`7o&NCERi\6dVtGR$`7gAL/B-;>p**mT27)7aZDG:2Uj*BL^s
%Hr#0"l<n;7K%i;;al<0((ijrr3E8jJ;`BheU(VbR%\s9*=`C)(W)#p+:lXdHIJ0-imnbg1Dg145PXhhs[>je6\$:>;,SQQ+=sqEK
%$^D),ULm>f4&/2/qFJJgP7J])`8We!?o2uL&'^IN=Dj`aL<,1A#du/BQ)BUq><J%HR4)tGZ3;73)Z&^(1j#`2j2tH#de<Fo"jk3>
%2dYjQ7Ws"M,I?ZQNP.(N$FO3o<(`@.>jNW!<8s0$eX=Ws*nQ19M5ZThekQ2(S@0<7E!A;(LFOD=Xe&K[2JHHs9VcgVGW%p>F+o9r
%Es'YP47/6e5!3U*:8>Y-c'l5U2rM*#f4KA:S'@`&"H&5lA5qpTa*f:XR4a"905CGp+c/5qfWnB&lHO&&c%BAu#.>Vko\/fh=q@*8
%oBmjfCnbMc-e(5Ig1P"r>Wb+^Wb$)'S^5QXk?J-?#<<^WWuk2/j4:-smm;TB")4qCNlLLEIlK5HDu"8rAD_LBfZE:L6[=>J>d<62
%5F/@Y5(1ED:YJumUIWp-e(64tp'3BfaeTLI_=Y*R=j^Pm,s/WsqUF+k3jMOrm_6(HegLA6e_=%L&i%*aKh2<pXl./NhO"nKE,1lB
%#GW)^R^e.emfWQ2`TqZl-78IGcgD]IMOM)&c7YWWcf)ncms0!3H>`J)<tFg@`E`AQ/X@ki(C6FpLmojYh1u#BlK]I\2na;efqJX<
%GP%^C<>i<+7h.NH.Lt5)^-+>.^_QC]);Mi#o0^q@GtDg)_M9s\e;t%LPi(oTj<b=<nf=N9Nmph8SWj_0e[;Am)]s#j'WArkBLL,h
%]bH3>p+CF=UWJMP#dtq"&u(JhWB741Kk)Q^afQ?]1",l]?EF)P&O-Z9mt=j"qH%o=IB^il/.c]A9<cb8YpFNJo#?`Z8RQ]$P;Y;&
%8IMl9okrX7a4q1slfJOR5NXQIVh?BUU2n1o/$SDemLr_BkZ0XC>D.h&QrW3)h!+U:'LWt#jKENNK'GMi>NAfF>9r!ZLQ`Z#6Z)j0
%.C:%';;$bQ_X"d4CZju-!fOGS@SKrIr$mN&[%hi8:I:4WWi0EmYWu]"+'[UX9-Onh7gfu-3pCO<?)$dZ)ill1#5Ob&hfuV9@ok+g
%hC_#G$;d?'AlAT'V&T*l8KG?:HJZS_bNa`M\ZQrto\'a9JKst@WMuCAo[19HK,4UjJN`tr*A"rsDkIRmpslX@?A%GF$$G!H#"QkD
%UrVuTBukG2S&u??BT@Dlk;EgS!6j5EB.u+h%cT+\q]q\l)+5=f,=fg]$G4G1(u]Sp_7c2K/A2Xg[1'U*pH)a=e!Tqrom7gF.bX\j
%DouqPdtptO/Peg7e/M"oig]rs#WOF8n;BF)TKsm?U;:[urlp>n;@?U+'>/mIr02-J^+'4$bCilMR6OM(bQ@@K)6F%Xh(ra8MV#J-
%2hf:rOA:#cXg\Pu-t.<Pbb9#S+K:KO""ibD[#FQ_4Q81@d`^QQ9oPa&E9De?dg%aOBEuFg"s@1_K65XtHuIHhV/bg<2JCA%o=P+U
%SYWkOI_P"R1mmYS9aI=\k]e8.AhGK"K?lqWHkSiL2Fg;r=^C\`6Lu@+@,hAMDa*=s`("h(Lg7J%4*9(q'_VCNDfu$>r<BFHJZ#YH
%\Ku'>g+Q"@>gN`oi<,?Qk-D[7+OQKZbTd/;A"OtKL)u.l&C`HOo^V7>e$=PB5Q4X`hUXe:X09[]4gVnY$H</FUi(B<WUE%I4K5+$
%)g%WEWcE3JT9o>K:*aY=T@ARWLX=j96kPSFT@B2jS^c.G'Z$R0LcLij@oqGOlpAW5;($Li`Y99KI.&G*KQ<"%E^,BfSqtkB8KH;s
%5'^&$R0u$S!tL[rT%%3:@XL^JoN;"'o.D!,6SiQ?r9)=h_mcB')AVd1$WkOt5*8ebo^DBBEJhn%%M)_Z=IMiskt\/bTO,?lIEoJO
%Zgj=,lM:5`qa30Uj$hnC*jPI+VA<WX-=6E9S8o3>!5+G?o;_1q-_usG]P9AI>L@U\[(DOZY.]"qW6o.Y8o`Fb?CY'<h=Knm`.tW?
%VcB-D*[OksaXuIMQH8C[QH4TOEkE^hZ'ErSa^m,C-;n5g/D-RLEed2:bgf($]2'7;-WoN(l5a?tlL>i]>9NX!@"LG",s')"N**KJ
%p%1h(]o]5I]C.8V9(mUfmNtC!idNdJf[oWBad<NNmScAlmg[T)o+/_p]?;[YF:Z]'Hp8XCHRPEo:Yecii3sqg"Q+V](!RY2XC"Ym
%NmY0J&>I5A.G/HU^p)MBDtQ&)b]]Ta_OKQ-mi?q-(Y4oll:?)2G1:&Xn&0RaT)ChgL(G@gDcCZ.HI6b#@9?cI$Nc'n^7o&t<gP^^
%Y@GbD&>0>]EkNbI3]"K*>`UILN@#^+2*,?A9]%4rdK?31;@YQ?ITY8V,Ub^ImQ;0sPagHW>^5t9GJS=c#Onl):FC`1+.8RZ)j0XL
%etbIVPV#^/n7(tm_K8aeiPj:?OhJY-((rmEO9@bMjEF[c@XDaINZ/5V+4=(U2#d:o&U\tIbj+&s+Vm(Po6BmS[Y)kkLL6d&GN.rE
%&B#RtKob\/,alAOmQAgB(QFt4cU<6/p/6+5GScm[^7g4fb.P?uJ[Y%@qJ::tWSYp/)[+W+'Wn_@ZLMBdi-sbG5g&5H7qWT#33(;q
%>k,CQ7;2&(L?W">:,VT&-]q\B1Ai3Q;=6eh<Q@:-M9f&pBVM*>oDRG(9Y>.2(-J#UJZ"<K:[2U5lUU^+n^j_X*D?ULRIT)UL%ds-
%K<50k0JEkS9dKJBO*uZ(L-]>O(\Z317gsVt%N*-N_s>nl]ctSrd_.R[#mTbj:V4lg;s$OH+t$s<H=C7jP,ZQre:Et$#f"['>b0)I
%?-FJblg0?s%lg^<fdMu51,P!4i%SI!0LWLC@-Im9>,X1NHENA9esU3?aYQeImolp9hC]=#T'+Y"chFB\M^8!>@0@']mI_TV#NE7J
%-S<JbX_0V8oUAUk+$(/thO!8+n0&mb23@!$J7u8^kpP;46D&>YN0(=,39Xb?ZV.7]2e[XGfu^-thK0gHJ/T!XR?DA6k<fekM-j].
%%:/c4/n`;.4D;Mt$n@n%\/9"NLA(lOj"ErSY/\F/gN3^Ukd;+==i@*2G4,*-l5^)p6#Bs(>q*U<e6?L;&MP+-gJ4Eun;BfB.MM&f
%+n\9=ST!q8mn.pPU)%[np=`9ndltn@_m;6SUB=jBGAQ2Qj!MXkos?VP1KjLI6oJSM$^<O_WjKI4W+ERj1I?P25@2;'&;](E0<k(:
%JW/[CUmb":=F)1Q[YG]*Rn9;R4l>/CM-V7hBPak!]7@nmMc>8]l5oC<7.Cf<5d\bcMdILDdh-[p&B[L&$aeNKh)LIu<5]#7kld\_
%g1s8*8b.)OXmU`gP#'g)81:@AO%EPm-'L[n\eXIq!-%/N>#2WNa?K9GPE(B2?T4-6IZnk(Oba>4P:QmG_F!n5)`+3&mcU_AkWJAO
%n^tW>pT;J0R&:*JDdKo:iVU<4ok5=\bqBEU\j4?DFFfK#>d#;hCqJm@[f+?@:SKpq.Fde?j)Mdla^)2Y\+*J2G7.C2JD7DZOIPI)
%a8D$@77+X:@^qXnk\b)!J87S<"3/S^1j-)@0A_nu$^=gQ\TLiD'$k"!<^JJ+hTang%f7ukYr"OJFHXg\K`jZ@8PO)Z%)b6"2RtOX
%d)VHLOuOg8<HqAh$PPfAkS#S+iPGmpDF6u<=?E-5\VWn!56g,2#dEilaY!E>+ot*D2Zu[YG;hdoA)X-gqd^30Kp.O9q:gbEMFP,L
%-B>1;[WL#ZHAgPn5*g1Xa@$P.L_"!)I1Ai!Z5@-@B;.6lK`d^+`^if:X^UUEBe&=fgP:hFR^<pAD@_s)R:m$sEY'@D6Os<E"V>M]
%#,8_:B,j<$Z&:W5Zu4\<7'm0tkQRXnJg^'NUGW#^NC'))-su5fKT=JPFtiO#mh:`tKE`Bh@,@PM9+G2Y4=#)RjXeb!\@V@n>8#jo
%Jl'L<*"P=moegg>rX^\j`qr1!JCC)4:&$'k*EPB08/!h4ETg8uVOls$'OX#@ZBb-0+QFpbqmCa8gUO/FmiPhOI%.%AaHLP`L\+4*
%R=*T7K,)jO\p5Wpep<INj'hN-kF@4+N5aCmY;4?"JN9k*2BD%DKd=Q6P3ikGPS+73E'>,b!U-t!fL8A_`("nq$50:'r8J<l#sg5.
%U.jUa9`]9^&FKW;<%Vp\0b42fJB=5Onm(a!$1YOjJ2O[jo*3RkK=K:dq+;9gV$k-dC?C[A'D6lpn\AA3)dVARP985IEFI>29+[b$
%[prmQ%uJYsETl>3hf#YM#3qL>!6bQ8$\FeYo35MtMf"7$]Y@*7cuMcuea\c@&q[,""r,SpK@&Yqi:Og!T=O1pKuCO@<CR+28:5^R
%T%)]JLEkb#EAeba;AVgrP!fOIlokd/fn#[CW7u&b@?^J^^AI,C;L8o<,UYJ7AKT;0_hH@sJ50hZ<HAtq:[c0;aF9)rT%KE^ERfK0
%e:-Kpd*r.XWF<N(5Snc1WC,I[_Anj<4fKNl>u'[]WMH7EiCT#TGFQD2[`8M#='%Nc;)p<W*iD,F?/TJ%\c@aDcoW#N.rmg1g1('u
%G&U#F)IuKGfV;M/hI[B27.j1RZjYluW4`F8JC>1P<6/<MVk`U3f:TJbqFC,o&r$@,:91$gBF,_\&im(?Ja%+P^aVXC%&&HfR`$%+
%PWXU?l=E'9K0nJs-sR*a-U4Dj6)gj:/t)Fh4eT[3_IB>+/K)-G4N@G^*c$aClpDbXA'Qg&BOmDYhrh/jVfPr4oL\Fi2`'oENWW2p
%bi4VN@>VX$cbo@^is3ABkD&0KqKGKpSI8$W]fnP_>hJ;4gtS1KRp=SNTA81&DTIIL*F*W'?Y46EA23$'hH`W-\E)M\bhfV"kqflZ
%&%r>Xe5mpip1<s;7`[5Rmd9<\C?A0PHi&,ERe`--hVR+SLKHb)mN(XS\[Sbd7&CDW\[N)2mH(^k-26gNV>+\dHi#RF__p^0P'd']
%HUl`m5+C?^B.K[b[A:pX'4QM?r9-a(3klfJ\$(#2%5,)AM3<3Uh&qJ>EY]00\[PN[grP6J_#FE]pPunjpOXqkQ4>Y-fD4[lhJlA,
%k+=QqjPE$"A%Fo(0nh\O\T\\$c;,h^%a<m.G_F8Yah8?C%<37W"G]Q4LO7%3D[s[5#=C3]Oi[%qYjh`V'BKjoP_TmJV!'T[E&V.s
%hN?h)@,h?ngu]5S<"i&2O3rKQ+7f:uNed8KDjKhCSOZ/0IkkPM;WN(m_)F&^r?92p^rD/@_W-e&a-4F$5(sse@<+SK]XoP%1?<Z]
%fJp3XHj2U&^]MPYi%rIE"L)n>meIa]GQMRL:fg>!1?<\3V`s(_d6DY6U5LdCS0)O=5`R4BNCS"m&'4:eY>$5%G].BH2f_$<I@?kT
%8Y=5Ah%_h#:=&p%isF(Qe0Y)maRKD>l$J<O$TXdY2P0-@f#qlalcHj:6\ci*]:=cf2XZ!"m9f%;JW7jCeh;&+o&^M*!du64'>VWJ
%-S=$;:(1sOVb)e3NqY8Br?0.u3Pkk;:Nhq^R!=K.mg8R>5B8kPTCCQ^&ioCE;`JSU-j=oeN[HO98D`0"%t0P\4Ac1Gd'8>gnHe1q
%QQaMn&rq`UCI?uBjdb@`J@'fb%)lg[kQUl'R;ffG#QGhYNf-7c)Dn$6iHY(t9:*NbSE'ROLn&Fs#NbY8$-.f&+XZ1[hMDl*qr-?u
%&[@(8cLJ`p+fO[3F,ouPLB7'[k]=!N_CU7XDZnlJJY,98&+p]g[U1k<ctrG&B_J)mq[t`t?`&5`RQYK8^&ZDAoXS@h8^ZlrTHjV)
%ZO]XCs.m`i51&X`ER>C'K4Z2tS2BG.B_HB]`IXf;LUm^K)\ea3ZN(!Z^CJNFf;/'LoS@ba)DmmG?l/SV1j`\=p!9>b6SKQgJS&P$
%WYj+^F_Gs5Qg,B\ft5A5!M\7Y(AL3QHO(","e%U2_1*S@p7\;7W6_0jLZEt'?\`7^qBe?b1qT+'^'r7M'F$'.4ITQaVgT_W4mKI6
%?o0s51nH;uX3g4l:?2LIZc>^iJY:[`/fnANAnMp@d$YgmRXL"3jnLr-Xt,sslT"TLB_KgEB(0JW^LrGM>V[]a]2-!9.PuJR@*Bb?
%lp3`*Q_<#AmPfbbZ\qmia>s62B_J-=1squDm+pHB#)Hk]bmZ/R72Ie-?_!E9T!rgj+oVP*W2;kSfnT^?S=S/:JS+@kh@(%ASlF?i
%'$\^DkWVc,?I8%+h4qdq$I''tL'-/E%aEjc0r5sKHaIfT:c/&G=RqYOT%"@o:].C8?[ub//AM8Q?\`5(3H)V5bs(43Mu,qVp,H>c
%5\P=4(O0VB*L_Bf(\RuFp5fZ/oLek=Ari5Z"%BPS='UK[q@YW3oOnGdAnP.e$u#Z%1ctIB%cfp[4.8<O.Jt)@45HKj!c(&7G"E$'
%[_<6r*bsmW4IU\s\+j[nd-U2a8RQHj1clQC3M;q:g"U"h6*AOSfK)-uIMm03PXE]C*HGGM6d:!!EnrgG012n_Nb0udFTLesc$UOP
%h4M.PMid6+[Othm#EN,N!<*KI\Xj6)s(UQ*+8Gk)aE9/6I2R(]K?4'RjLTlDF'Ig/+P3CVSc_Hb$eTbLchi0RlVTY+!@-4p(8rlQ
%Xp8o]?\;T"ohcM")W\K]#O9KolXDlkSg"An>SjX;&:<-hOR(#Za?PA`%s9'<4E<UEKmh=hFlB.Y\OI#H\K8P2bX>o&5(d,/C)n96
%E]r)S`2Aa`_41(`+P2ge,n'daSp8[ILKkXJ)^7$*^BV7JM*1/')3'9O]`U[*HRJ4(OR$?p_\MphOQutVT#a@*?f\es%i\H]$Fqd*
%,ssN:o9UTOKagM#>8oPB>t@*8BEjB"(N48$Ra&X0lN4Md:p]Bs\K:!G0j*L_,c;(e\K8(8K0l^Kf_WD8-9U74kUZ(oOR#5:%8$'n
%#*)q)$Qe7p4rE@lQq]-*^C%NCkdL21jSE].kI-]cno<m"&F4rBrJ!C)$D35oY=?iB8Q-W?rGOg7`=B:Ul?ieB/=n'>CIt\IP/I`8
%rTC;eVtA@'\WhhOSVq&-<+SC4l-THnphb\t$hZYs'8)^[Y`-R'8'k18pT'rWJ(HkQ]CS:s!]k^9RHC[o_VBG5S>r4lhfnFBLB&YK
%_0+V<Vg5!/I0?:&`ms)g5o]s6VsF7LfQEcA1gk\9$HVmFkIV]:$$/f'P(_Hn1##-@Y^\`G3"'PX>ZCR.;kg9=HJUU:#97<Q$s]P?
%BDq8?:,s"!r,99IT,o]J1_'o^0a:,f-CbC8+UO)($*MR^]=X]?A$)*e"9Dkepc4"?U+XghE_M,p3di/aVH6>-U7%>>1&#N06;Mpb
%$0k)jVQlq_>CC=%`1MLP+)Ipflb=POI52feW\U56Hn'uj:.UbE4u4mR/K'0@jJk9^T8`!gf"!TH9X<$IJ`&;-n7Z:[V'V\4`48q_
%3<fPf4uCMYUfZJN_C1<9__7.\-pSQgR*(1NK:,+jCc$>4>cJrs;!m'>LXb)g&$"H08541iqsuH7C[Q*,p5,@MS$^G8pOQ`DLP:rG
%d&3&$mO!'(-_(t,Xj7&]l.YKY7G$fZm">mNms,K^M@%t),hF1CE>BTB,G?8kd\`2/H*SG!Yj(*#?MG6o(0t!d8<dbFT>ArcE?mU+
%kl&uh/;F(Am"#:h5r7\(g:O[VgrrJ?KneM5]Ju/NbbmrjKQH*\<;l!c'$HC5i%&0lS2QoH9H_Q&0qS6Ob0L:#^s*#Mp.+>.RTkVh
%=?l-MjC>bdeD[lf51iCCm%MUl3,=9BZ3U3IX,M/R5)XBckcr9,&C*^-9EX:GpAb79,[>L>]q-qU8*h;-W$d;?:jZAtTEs_QJ]NMX
%7\O,u#VJ3&5"u;a82,)k*;5'u1);28)7ZbajhTO<UtI-U+n^&3j0X'@m"FQX1C;hCj6He61_F7/X;nJW79X,#;@0KFDk,bBh=6Oc
%i:keUcror-k#gethJY<VgXFLL,P;)?5/KVuk0)-m]fGmCY^Fk8"1mP)8:Bgk1?kVhDM3)en%Os-0M.<"QuGhaEEYaMiP'1j\3?G?
%o5dodT%%s+^6@9OWWNNOO=,0Zj<V:Yd@HWlin]idYXohKkd&NuHDh2kHU&s$@AH#O=P1R:>kaFcIORsB'(>Ff%N&+u2S@pQ(kgDf
%PBme1QJeP[o"hTkJ]X!*^?:\@W=e^hH`,UirQsn[;F`pP7%Vn$;n[I)G"GBf`EIcc]5dHQXq+(eX$Q%Qf]d4F]"h<A\j2Dmd1=L?
%<mP:mG)2uV31NH;i-f>\`2NOb^#,=:0F$,VOTP(+i^<*d:E']55!,J$ih9qd^AE="5%,hO(3[QgkYT;5]`s18$q[$%Qg6_1[eN6f
%?"mc:6lqAeX.QXb#(>$qQbC'5`CMLMs3ZH5M!*^^8C`&8/3jlN1336NOU$=_q?0[rnF^d>"EE@GWXFKM@h0g?cEVCOp;T\M0/8o'
%64@dbUYQi9kp0rhGJt"L-tnK]HoIM&n(5b9mJ"#hoqf\,MGIqVD=)i6k+("SHaIj!iU7BJk`n?d0,_;eo4AW;rXi@-Olu`7I\65q
%R4(b$aSggNLSB]a2E'"+:ENRZ0#r!XBtQn>\_X8MjaZW>-A>`$ctJ]F+7B?@h-<+BX=q"`G1*C3Gq*YdD(T,9De*r1K5QIbp/f(Y
%F?u=p%5/K8)i!3sfu^Eun(m$qRAp#Vl,h.>7bN)O8<84A1=kr#TqnI@I]SU"cLTQ)ro(nSq=/WVCRY]$dFliQ/aP)HLX!M,j%&7m
%m<l$X\o1lgS<XUYE:(?+.R/nuVPfF?lc@c$mb:W^jf2WnS#Um!fH9.uopU"WI!MqS3MoSh>2rDfgY:2JQdK$4ITKiBbItMq0,H:F
%(D^6;f'<(al,E//m.^0]mJ5dOG"&$.=7VbbM#F"-T8G_QVDWAAD#SCORP!]C]/BH@H>K"1[mu<6qY$-mRm11lG('jDjr27U%og)<
%cgK$4Nb.@D98FRl4[7`'gb4[0<q];j5p;cp@G&Od/>tc]7&pJg+SLQQ1Y7A:K6J,tT;nC,q3B`k#$CcmRIp@4NgOG.N0n<AQY<DQ
%'@!C<2B4qS02mSHo$Q[?c.VAaXgsgkd#@/5BXK[%>$]jlh/SF0gCo><Sm>\$aN]0T%W3$SIfC^(:0UGM:!^L*2HtBJ!-c%j\];\K
%Hb*7JYG]W[BA`I?KEYtb>.0[gQ++ZCr63+<U6ltN%-.,P]s-lie3!rr^<Gb(m]>O@foM>E\ls@Q:\377]+[*q6paNi3@9KY<t:2J
%q8LG`#gSPQ*m6U&_fO;mlTj2BSin,TJ-[/#nA3iJHs/04cg>(V%F9E\2AL@Ys$!(0^Mrb]1T0iCApkl8]01O:RXm\HT&-oih<?<P
%m$g.pb,=,UYL^ENVNo]&pPhdR;'iU8RGm/FbACiRrEeAsTh2bqk'oK5I\]cbAq+?8VP^J#na44o[(26,g6la+dH"=EaLgX!CA-oY
%GU<6_grsRsI="!.GVL8FE'B;a4Bfq9bhLXhdrK`^3WduU$fBUY'n0uL10+3r(B/F,=01@-qK)B`F-N46V$a:]rNX'l="7Y'k%X!9
%qt-+O1=c&t:<mpWoj]3CR(rWlc0S_CTRjb`oBXQE3LYn\)uA`.p+h&"SF#0V-+*=,Rur-1^U-R4W;Z+2:7Kh=ke&mIbs'\HB9t(e
%fp@*;][:=m^X_4B2QNn1\]=QtI/9eK>fp#]POka'MfV=ZY)T=)ZKG`NmHXLm])H_0_n)J0a;AN+3qoR(gSfgS#>SF38a!!VCE-Ei
%^+t1@cFiPX2Y00,-g]OQgit22[C*\bh,pk7o_HGJlMC(s`M'5$/C6lJeQU17DdR\7))/fmq-\)T'!Eh"&Su;@QCm$#a3qTOV_tp<
%mFV#C-U4$T?2H>,QhQ6(W*9KFXD2=Ao)1ja[$tX6/2PbV_5eG1C1RU:@>YefJbr/bkB6D!O2eo`<skZ0MH4St+KfGsRCC;_4BfX.
%Fa[h<C0V0gl!S#oSf4'mf@8XBB/CXh<P6HCr51<fjnhd^EE^gXS2NLh^85mak,.f3hSJ1Djnmj\T:e)'9SQ'gS!DtilgL[VI\f^k
%YWjKbq5IY2*3Ga9O+^"(U]=h\d_spYIR[PlfNR,k>GDSdQ2H]bh>>FNrjPb#hk(eMbVZZ)eVDQFV:L#7G\MSS\UO43j@4#g/<G97
%5I(eeEcEpaR'c8JiRd_l_=Cmoq<%H=bfI8mq7.Tup"m4eqdC!i@ri@i@.8Va[(cIP\q)p9K\5;FrA9#-kGj=K1?[6P`o."jJKOOD
%EK-?%E\DK]CGj^>2g/!Fa"u3!YX^W;lZ,7\h6J5mf<eJh\]QO2*SX-UJ%JeSjjOOk7C6%IVtK/`oT$+NW#=fbSc<\Lr@M<%/GpXf
%Ao0$P>a]DnT6!pU(XLe4psT]e8`Q5V;S]kkT<>*XNQ,JJk[]_&Nb'm)Ze&i2W+l,EK[!/=X`\hB]/mMY8qkM*Rf1noCK+:d(\^__
%F>O/:@ohc'jq]bqP4iC4'hPO8(?^=29Qg:"3*U:&),qk_gEnD556K0Q>qUW!IbK%OnqWX51CEAj+\53gqfLV>JEa\u)Emo)$nHaV
%ph$gkFW>5+nm*hpVC^Lr[TodRL,BEac]H]_e?h9I;p&tohMrulSEFs.F"BCSp]-BKkoJs>FZ,A$/>%L<GF3hnpU[q5C79L;q;p_7
%r580o/eT5cSW1=/q[bgC@/EFZCqOjbc>pmnDg<ndaE`E[n#tu^NUnM[)SS#*;5n+SI<<)BQ[<D1?4hOER&maO"PSB@(?mt8Q\m[c
%eP742=3l\E`IApNS6k9_e"oFsf/`!-Q1%R=HYO^&IG6q31sGjaWJ1;IrE9(WI<IN_lheI9r>7`SClGJu8/E\8^uXo,L#i.7T4glt
%1OR!^h0oMJ"F#=k\iI1OIV@7%/,>@n=*%HX29*0m4gXccb8b/VPTS!e9Uq]Pcd#n4,Heab!%BaiT0CiS^]GUGmo.I#J<JMKer"`T
%1pk6JN]TY*[)P$cfpdBb.Q^i!j>QEb:Tg#O&*m0)bKTr\B"H\Y67TCNQ,tH_B?N5\[FNOe`RS7?b8Pi*CP.Yq[4;=nP7+=:cbE[m
%o@Ol"mtH.8I\W,k)Ct6>NJdN>na0G]=K&s.CWSFuT9Z[gnbm&1QfHX_XnpgUs&e`kV!H_&@pFI$lUqJ$2@Zu[B_.G@VtB%IDLQgO
%fFhYN]iGL+935%,:h9%"FJTnsFJGFsh-8MWUVTCfO]#;,*_#+XS7K[@X)ZkJ\*;)h$JJiW09@CJ"'"@s[-!hcLpcX^V]DB^jO_0(
%2D^,ZaXLn=)'(8poBWOCG6i6#3M+hQ\2L'Wka+q'gkX%>WuSU_plmsZ2`g3@b^2NPI4pRjh@J5XAoebi>9J)mUoj%OX0M$?@]#$i
%oY!;SWo4cZlu"u>6P-#.@chBQl#>]01V].p6Z`$>So!rfO\O%Ama8tq'A?IDT0;<6ArYE%f1a4iIbIsf_jV=m$BBgU0/I::"[WjX
%bg,+>__ccXhubf9NkMm+MsKl2K1BG&jkE'5ofP%#5#]eN)<43NUsIK^)8)<Xg.Y9'$AHkcdTE([/+Z!rFj+$l\`c4hbHF!GBY]=A
%6F/S@Q]8\ldRWG56bV1"`m/L"T8m`-U*DBJXDT#J(QPg`.s4;.X>C&nb.J^a(,M5HrI$ZG1?:66A,IQQ>$?=ZEH74J/ECWp2q5,0
%M=n3/F;``5J@<8b+meJTC?rEo:Np][^.iaWEb=WRq?=&V*,Frtp:'reFeM/Z&J3pleLL8niOr-nF.op)T3pJ[]#cQE?\.b(-Ps?$
%Kl$V@R2jQ/P]l39VoM=KG/gVFJ2I6I?C,m\n"n4ar@6Z09H'N>12kA$'\Z$r3"a*%2PU35pH_ec_j2lm$i')mp5SY8?u<`@4g_,I
%1i<)418dpL*1p\H?JZ]L7'c"7@0qp%r#&7O(S-W-Ai>/5nqKMd&["U$;):Emq;[X;BX@S&mpZfjp-j+B'4P<Kd?1[)KYPXIn(*K&
%/Hch`S<WHZF8hk]5G(_iXl#sNSmJA3!^7I<i=4a%FN$W%j)Tn1ZeU\MI:g7H9ms(*ft44jYr*M<0f=1G!:NFR'.YB//6/#e825K5
%?N3P@4V=hT0]4]+"Nq6s"KBsN:"$Ver%a!j42=bCbo@c^.S+8\R\6O?gijFfI^2[in[LjoQCa._D%8``Pk'X@aNTB7LeHSDYVs&F
%)=,DUhQ?/h8[@lT].'&2AohPXdbF@6ItJD'B9ut_YL+BXA-AHX8+#s-`r%<tbAE;*!44SM'-O_(gr:)&r<=2<p-Z-s7SO73aNNlE
%_b;\!XRoC]L9"%Zf=Gn1&S%BhNuRDE[Nid!_BsT=`q<3q=Gmh!`]Ac?ka>XV=%DLLCNSh+1fp2OR1G_C;f>(7'-o:#-T@Vt2oh!q
%H$GlD*GsasFd@J1Ecd*)-Kd&G,Z?s.k68<c5F1R=>XbQ3o5g\q?m[j>XK8!\R,/c@2g[N`XZ)/2'D_:jH]-d+MsBI!B-`;j7j]Fp
%$OhH/4?eq-mOZ(E=7%#L@9Lk2XmTa:(9EgE<VS8pRCR&6]Qm9"B;VPmTB;S,o''A$(er2fbDu67ZrHX$jo#/9hNrA_Xt/hPY;,Si
%63;f]2dgs9NThVY+X',7$)-h555XI@p8aA3d:JKb]jL3;A$+]-A6G(,8QGH6=&PAN;L0$6ch3<`k@4TFOg%'RC</ki7a',P3_@<r
%PrS-Lf7Hf;`2=3pNpHqXJbglQPfDaH(QUBlhlud*cd_jpkmWT4G$"Z$T9d3rdc0-7mi>q)+hJ2?ckkI]ZHZon?@Q"rNP8-.Q:tV#
%;b(U:aI>iIHJc%,9?k=tXd7UdqaYM?L'MH/-p4IZc$F/Sf2^V$Z*Iaub&ihj;V#`4'Klmp!$m+.Wk0S(Y*5E]q[fK2@tV'3k0ORg
%`rV0Um-B@/p%rJZNmV+mpr3M$4"aB(\p0="Ji)Cm`q?Y2L7iR?V-Ohh9r1k<P3KZOe9\EGCS:GX.4.-YeI)"j=Q=kDg?YPAMtqH.
%3pjFdH^L4c07@`jcldPMkIsnGWlAWX)cdcd2PG9\`Ad^l?`e1D2%"1=+Jl4B$Ij'M=05WW#2/o@S!)[:M._Z+GeI7NP@bimIClm]
%U`*OF;VsG!QYf(>r2<c=D2Na#h=N5H[8l/=iq1EZ8Qc4I0k\+@(7\)"R!<jfVY7aOV-41m!])VOkXeq3@!D5to_\CJB-siuY0D2R
%nP5rCGbaom7MpCVm$"RC>$XmG#Y_B0]M#;%>IL@-;mYuY'Z@_n*t58YXuM;@qbIS:H!JmPDHuCL@dTYYV;JU^="`kGln=CNUUU&r
%gafE`m>.7u2p;A+3e,`;3pjRX/s<!DMY6dC@pu0qXeBgpdcGN$EU)0I(,ZlR0>O9b:#4^NgX>fSd_&T;-7r6p=!dP-+dIsm0))KU
%]"/qZadPcO"70.#<3EM?2[2hdIJ7ssfL?+HSrEG6"6lk'9=:62?ZEZkfP+[Y^cYc&`4N@T=jHSMI_gVdfo6H,TmL6nL^WF;bEfi9
%A38t;=>3s`ZU%3P6XAM3cHKZ`lQ+ina/CUkbR'%+O@Z4s@/^4<gj6j*+$rV&4.)QuPFarQ$bb)P%;(N@MJVC!is;PuqE]OI9:945
%$de_aHQf3/+9HJ&S/#7uIV"T+AeVKH^_aLWn>sVqkJ+P><!.CJ\CqOnk%dn3f]!LU_c32aN$h75<kr+[P7kU%GXs/,X7$>I3[2j\
%GPa=X8mrO-*glL3[jCu02Xt5Ef+e-&D2bL4HO7f3JRS@^0>A2c]7lP1'jBE]^\jsTLb@^T17/+YB>0+Z\Fg=n//56^*lq\@1Wo!]
%l>[p4%HI#S>6bFWiK8n+_bM-llI^o,oj;bFf8b9q2*+1H6Q4m?FTIH3.^6\F5CNN%7u+3++3Ml$Hmk?9'24R#hQ0;jlWp)CH6!6i
%&MNYB#)qngOlRi0s*Pn.6DN8IJ]F;I^VODo%E:L4Q;Knir>*?Iqd;".OFZQY(').I6\Ahfou-_8nTQke5q?pkWZJ1epeZiX(S3:H
%<ErWCPrWoK.IQD3PBi$hdYdW?dm0'O)C3]/G[['2U$B?;3rRO8G@*+ccl1=3dbI7Ya'HL8C<k3NqIW36U[81NGZr_Dpj`f)I!+j!
%f&-k->.`+Z,P1fnLZ9\ZTX60ToZES.Qu`7&P[[lKW?.dDa%k)4\U.b+E3akkUK@1ncDth!/ld>ocVa'Jm?u(/_0]4@:F8.*Z,ZI<
%ZtgobEOM'/ZhdiaWknE2W&hFq8H7h@Z_U3$.pO`%&,tqPd,[p(P?i7>LC"mWO<#Tm4`<SS9]=_s8UaYai$N0#A$Zq2hj>V[16&jd
%jT^rG>PX^a=ut'sNjffr9WE:AE*WQL15?6>Ccp3K<l%W4]\\8s$[o`JbgH3_@H:Ws),)9c;e'g.gm/f9%#k=@(Oj!j[&*<h@Anga
%OLXlOToKecUU=-YX;fK*G=S0M:&Esi"^GIK'4=jF(\'5O\/,kr_\`ir^_/d"4eYnY4/B.Q]nhL`BTrKT]7!ghC94U9=BCUdf`F[X
%LfS&m$n)oVV4T^>L3=3^m^/tT)k%*6F]o]#A#i#4('`V;Z7$sC?shjo^4/u'@K.b;`.SNqD[u(k%%]5s:H_>0ZcfLi$m<elmcbnJ
%[<.gP5^c(8=SO0sn>6XdlbUfeX;4D0J2mPm.dqB9kDRfU9q'_XU\Hg;glfro"s4nhaULCR8.RCVcjJT)>&#c]HD7lER.DKH$I8V'
%[Q04li2QF#*Zm1N1j,(a%W.,R3r';#ADePmQ;s?m82p:/V[Gi,l8,BW7,:0ubUDgjkY7::<iHpCRtU.:28.#7[&;CN;jnae,;,U\
%$hpn*+6eGg4$Hf:gVan(5TcY\%UTpKZ/m!>&PXeD1nX.8csnYAnIH(B8T]BcVP-jtU]h,-3I)/cj2k=?]671#95s<jQ<k5T;\m`+
%nDsX7VF)CSknc/&cZC)HSSm1%Oc+)c4X&aT.HC+Vk&O826(Y>B4\i*3i2n!`J^O5krAQt:i*[6?I<3"somY.n-)h*_[YB"]<?q]@
%K:k<FrYVrRWZHWYW=1sii44UJLqdQEKLKg1h%O]@E%dG!IVF2A$Z/\$8_A%e2HG<Hh>$t_[\eF,pGDOM?<j@3=SmR#)98Is0DdmK
%VH#anHkE`J%Vse+_>_\Ms4EdJ;8QFF?`<cI,;Ql0AM_eH'3X\D,/0[i.eJN%FFUZK1$VW^BdW7MmNMC':>2du)K.Ar4qJJ9o$!I8
%A\V>gp.WCH'M6Sr,SEEsDqI5-:n!h+1QlgAAuqD>!.Bu;R-m`c.ATpg.GW&;T_\"=lJVc/[*^D%r[U.O*,9((=d9B-RE7G&5jNH)
%l;TsQM3]LmNieh=X[jgeS]KC&abZlIh-0QH5+0?'7q[rJkrt&He7o/$ic(@7O"RaT]&;P[K@ID!:]cJ0%<t'-6F9RUL>=>;:B2\L
%9U'mXXGO!gf!Pjmj7+7'G7C%c=sECDY6-IRSn0cdMtT+kQ]8*7ETJl_Q2C)F92g;QUSC?`/j<ZhRqa^lb$'J2P0Ds]dIItK+\h<5
%<g[?.TBq:8`ZeTN>50b<T#,mN!/fP:?7(*n:9qo/fC.%S;23Qt[?fGVB4h0MZ"8sk'oK/t>A"t?8JHQA(+e$OdkLF_dkPo"O#hRF
%J<qe&V,'DYYm:jU/L,4CVN.$d]m""cVI`>Yk&O[LB>raufS([WCflV2Do3H@JT8KSFgeO]J3Q!&M/(brf1ZQ(/XW<hDBs\B[%`X=
%rE-9L,tH^J]spq5GKfm$UWS)pqM+=h>SYVDU]N<Z`G&I'1n$cs2D##b%DNpn'^jm#;\1SN24$RiFf!eD9/&Q0QKi3NG3&hj]TUf<
%SBtZ;=,t,O?o!?-\WLot_9LS10@MQYoMoB?IG2R/PdCj&Wcd'>-)FMg/NSNZ[7n90hDS8D&UBJqjpetZ!Nduu-5G\gOldJ!F]hbg
%a+]%9feA!;dS-C-ZmNMOo</HWS7fX3oKiL)d5o#D<BW&R4E==H'<;MKQ_!/mY:4:a9X=Jer!^2Ffbs*_Bs7W%U>qK-s(%Z3\o0=L
%Q"AY:I$XqFg4"EOTuq&3Xmr4?=r+e)8AH?>q/QnH_L)@S\ZN,.=u*8ro`Gq>8B/ba0G+X6m"MH:=IQY3g*9@H>\WuKb`lYi)O(4?
%.3@<$U^7.kfUTWcbMqd^#BNqRGT22gdLL?3$UiE^@M!B@UA&lET!bQ.#(mp&/r'i0gIjYIR.d[ijr0/2M`Xl>,J@n<-pt$UBg'K]
%8RX:jLui[I3R1*/;6g12`_X]5Gs1/)2B^EUZTmK(a>-Le#(![K@j2J(AG<C_3Zj5"p.,%uX1%kk?(AMR2PDrEkHTI=RP;8@'\3[9
%]0J"Y/FhsW9OFI!S=Der.SRodnbZLpDsaL_^T!KVeih=\'gD!F29jt4L@(5T;;d56]cPmj>Y%;fi.oZiH`n#nN6F^hpm8rp/tnp(
%K^e5>!c'5:05$A)>'U=>V[3]pSuRX90^tg1niR4QO_No!-c7Ce,#:XDh27,dr2%fFoWPQW[e<W#clP:<?/r`KE1e/T=/'iW(Q^1W
%/-qX+YJN&3gSf@nFsEInP\QTXZr6b.[u`B6[113^2a13Am)WJ,5UiEC/-88o2F%HF7'^M)GU@I_!a6DR0d@<MRAD*)Qik]@0iD"3
%##[6:BF1/`GTJ7a<F9G/l9*0\81D]LRi._,j-i;s=r2_M6.39\K'gaE%gbQH(KF%dAr4Q[d6T&u6R1=DX?(N6Y%dPB:es`b/8$Qm
%*I[u.#i)%-.hjqnJI:,*g"1M:@9aV'!5Y"aBLl=4?P_-M.nVG]:r^AZKOgRi9rEtXd:3f$Q4L)UB!c<f=bOqFD3G3-7rUe#;_5<V
%6Z-Ao<oP3OkSD*,:_NWe1$/i_FLj.e7]/;Mjt54>0iVpe$\7T9)!b-]PVUK]^&TV75[8BlkL#XSR2cFOirHMX:kQ%&BnXB##,5+(
%iZN7J<>0O4V&%KD34gfA,?>+0Oqr+cRcmgo#DI1GU.H\Tfjnl3SDYOjBf&^q6@5D,-lN0YjId5+eZDbiY^+mDe'7Z<6V/C=cQ;bm
%UuU:!BTkpA6PE&%cT+"";Ru=Z18W]%6A9;tP8;T#EjXCO[&.fVUbm9`<P"^!O<<9_ghDUA8I0ui:?<_$aS6tC!$&L>C`0O#$3(5J
%X?ODVHgg_*IJ<0P@6WB\\'rH@H&ia=d+pp(+[a`Oj`$L?N^gG(s6c`6i34%Mp\2LN[nr&s14HD`)Q\Z<GQ>((NVq)uqB4n*K<`F[
%,W%b_!e2&JGQdl95$>Z4`7%781:Y[@Zl"_*lq_ff6&^qTU*5OH]R+R\!o9kTcn4d#J\-4Dk=&"Wm84d=75Q1qq$%TTrlQBj^nVE0
%7/_cL*pD0Q&\7ns,j\86c(*9W^/RsN.'b71[NCI3D]A<"/HLBJhG7ramG>43p'+5hbl7DjG+Y2&0?;*Qki]a\A!ij+4sQ4%V6\?Q
%\O;Y%T,B'Q^SAnlcgfrrN]0C42%1c5O0_`Y_6][GRQT`R_am"daeOQOHAdBM+p*72#[M;SkCJo</<W/oG8C4c2]l&M"O_<$=ARIA
%r8[GhlgTS\Q?Z7$mb8$kQN-,q0>teph(P.0Wr^/4SFLG=gH<FGLX!_V2_hNSWf"]MWrcM:Y5Df\)G$d%2.<aOZ(PVYAlCW8#+X3o
%(:l/_.j8u;+%LKYf)p=-ph+ZGiZBDcW_oRrlrW1o34'mQiRNg%L^J2P'TS!Ppp_>9G1tOAMrAh/jUs(_Z17FrH1pS9]Yj"=FaVf>
%Up3r#g;((BM<IX+^3O.=/5@bu-H/Ku3`1DRKJE.Bbd*"UdM<IeQ`QML&nUuO2<>2`:J:bC^p?Ki4gt1QT_p>a6p7KDj>.%''0*TD
%$4)3E9Y'7Y3,4'O2Hf(8<qZX;)l$DK@)*H@UpZgMS=gD%ZQqVBq5p@>;"GK)SU':4Gf?;F+jmX,->[D"+s^QcS2gKFMo0lGfqXHq
%r.2)[LhX+7/rDmaXfarmo(d,#PGgBe_m_A?E5N%8qLOd+7EZE[WeenERDCBm:OKH(1;3e)nNu@d`:`0P9[+c<1WF!-j7-GtAf26S
%ctR/W%MP1\mERlmZPLOH6UEbLM'Z%d]A5G$XWZ&p,?15R%LJ4qD)7p(A+M8A+KX.VW]4*%3^iYbMM$X!@Y`t[`Q;Ne/e1q5&k(fI
%^ue`@=n;$h,J-E'941#;AHLg:VM$1%mI2:a`J>gtAhqJS.ZB2?GW[0idKDltgI=j/d)f>/W>VVCL]5c1P'LQo,7VG%r6?>LT0S\k
%C/]se/CR2n.2<l(*&0$8!EQE4of+A)L/F7;+K-o*34Y$5[FQ._NsY7encB$Z3nV1Y?h](\7?rs2lrlupJc@9RJ&2c<bSOQd^_("l
%E,IH]..\dr+07Z;T?gVN$SJp3MM6eoFGtRg2tG7+P;kN&>fHY6I6R(sd`@/gV'<h$9;I&5&(gW&SBMj6V?9\D%9\6[A+SSPg@c=d
%]`&4;_I..,&)`Y$2)no'$%o#"GVrTqRhe$.rX^VHr-d;WYf:D^lZ<UDPejm][ikN2E#T/ia3"7@KnI.b+S,)9(632n5.l.JC@"V*
%c&?4p&$5pj-n5.jTRBJe4ae`HZ/.c[&`jOgqf9^@3K%*W*!D:=9p*e4-KrI^K(gRR%DV9<=>"/7Bm\PTYdoP@Dd`H"\Z`/4):,DD
%_JXfIV<)0%:b#L3clLPnjF"H&XMFUMP"jSQ$$6$NK`hf!4nqcG<Y/131u5&[eGkO2OZ.f677n*l+cN(4^.855l9hI3]2L^?EEOuU
%/OU:`B?0gC2sqnSSS.Q\%J,_MjF*t+8s3=sei'(d'o-YUo5X9!hl,O:$%ulY+l8+Aj5aJa-!m4J+?4%t[BVuOb)/Vt*uV*-*5@\K
%[^,^$n6%k1?jOE=[$44RD4HfcAaJl9p"(#'VR9,Ga-FG%fUS?"p2_t<r3S9*(aE>.FkFCu0B:bP\Nr6/>/ECe6dMCQ/6W2[/KW5m
%lp,b^)N4Q]9%lh2;9CQPdqPT'f.)6nr0OM&ZM]ge6C/4\j"=L1JF,jK-@kGbM0&Q:V]DCWeiqG!+[dsHqE^[m"h8fm-##<7%4F>=
%]Ir!N-ub;OVP2^!'l!;TA$3*Dmf#4@3V)M%2GJKpV\Vb%?IAUd1Mct!U+E%Y+rqn/[%qFWeuOLFX49HBCUPN=m`uW?#.c<XjX_'r
%OXde!fi/QRqnAVJ[F)fZ82PK9GN!=nd1Bk,+dgfXWg./#:L$o0A-Z%_Lpr@0,/JCE:WgkaeKF#'JS0s3o>b]Zb_pSm\RdV?9"A]$
%2cmc4+h2Vk?-+"'7]%fS'Yr,Tn'Mn=!?U`$;e).K`MAa$ePO<\q/]^S0WM]]MA?*W1qH?gp))iZU/Cb5d:kf2#75O7-MI/uW"8D6
%(\-amG1u+)=BaHeUe!SrWZ.XiNCPPj@9o2'/CnkHA(7iVqkVu(9Tt"&*tIDT/,ikkI-[b^CkDa#5M?R&LfsdtAX,JoHSe4Oj>EhC
%5U>*OmA)<7g2pl*+Z=<pp4#*N/Y9-k*:7At`m"E%ZBr!iWX/sWq_jD8XCKq5+7+e$[b$*OA_M?sM:_TqgB%@b<Vmj>!$0P,8['ED
%g+ER0g/9P!>$-1LY4Z#V'iYZ1jDFF8D!.q:Nk:'WdWF_Z!Th\AY'6/D/[k9?pr?d_WC:$gM%6(t,mKF#;317s9KDL[fgZ;/mVr4N
%EHrdSDdA/_Lcn.l\b$&#lC@;GIY]=%J.4TUHhMULE@#_S^05=AK6ukh!j^LTO[7UBn=c,J.0haHQ[mbBe'^`PEk*q8_CjH1^s'Ht
%9apl_&NKQX6LEm-dLf9FM1:C(_)/g>$m<)(H3C6F"%^.Af!",1E%&sOM$<m(]G,k'9p`^&mnNr<Y!s$6MVl>aLg9J>i.U0E]$kR5
%WCJH7bj*fb)!:oKGB.L8.(@l:7M9#8,F%QP6tlSqF18=El`0f0K][R$epf_e92dimc.^a_#p]=7e0saAZSiE56OAA?9c2QWIRBU-
%KX+j"eh>b\L5-Dtp2S"0oZNNaf;h.F8=8XGVZ9b8s/WERGZnR**<#A$Zl#6Yh&E)l/r*aBM?Ri&r%)URA,E%"ajU:hhhddAi'O-+
%s+Z%a)->ugi9J[@"'#_Y&Z<l4D!O`Gle=\^T<6gn+jL%#.U7cN^=ZO=@^)d"5Iq@*J#RKDg[Fk0?B9:/IboZ!\2JJDV_LPGNQ/oE
%?CeQ)]'qW)$3_TTQ(&CFf'?2)9/]b\?>d'>XsctCc6cL4?Y<9f]'*O>L8&^M9nTf)C(tKZ.#i&"NBHSN$f8".)r9nXAod^=BSb3O
%OCm;^!:(\f2IABe]lrpl&jQOdi&HH\(I3'6jI99,pJ0Q'4%&m:qD4,.XE^LXA^^L47\^Q&n7%$\0C#^,Imu&o_3W_hj#c(n$XfDb
%q8be5[47gS/"tNJg(I\/4]'$6O.neW/pq3H;M4s&m\fi30CPEbWqk[E=cLr<#cAhbl>C]diWW52Kg<ar_tiT<LZI^n])42%l=b^0
%-bcaD%B]WAMn@BYDKbYd_j[&8R;oE==AAr7\"]]\O!^*pm8(`U6gohi4E/BS;VS/]*Pr`imGi.93rSY_*FBL`VD#f$jiUri+_r]Q
%DSLWR'E9Td-P-cR-LG3!=g:2C.Gg/CP]&!CESu;P<Tj,RF9842fr?k*rGIp+4VE\]F`V5q35Vb"Ijr$iVM%^g#[aRS/SqHlB!=f\
%HaP3>e#i=TMIbkqAAs`W=3epCYLMUSR$.R1q@TAN)A3/L@"2s*m%k;q'IDc[KZbP-_PP3e@'?n/+FI50GHJ"J\ThJk_ugWa:KBIO
%a.X,GE5Z6bS:u!B9KO`*Wu+XE[+hqPbQ8V#PKeg(OpN./UX7LJRaMeE'K0?og-W3^L,CR)f6K2%"7<N$#^memoCFpu1-I9Zik3e6
%Y.8YrNOO&m*eV2.PjRn_)A?'bP1PB9"JDH!/XGitL]0Xkks+eLhohp)$7A9Q]i@8p;E/)$h@J\r081(PbtmEL081(*Sj/<4^D'GA
%RNKYL?OA/9TPp/m^D'H<g\a<#rDGU(eDa]odk?CgW#S$a:VRT=nmZ[HI/9[YdQ:KIO\`_+:>k[;M1#/rE$Cir]6q16SB)Qjf7fDD
%Df1h9^D'G#ht&M]V#M^1E.ELG5!`Ip819p\XbP+kTlS=Oc;_%Jq*5,M.K%@F'lH!-!Abo!nk=`V%TL4u-@^<<_@6`"@.=.KcW%F5
%5R!RDnlKHRgi/nf`WcA49SFDq<5:lZ0@*V-iBRQuEr=a]$9&s'JD]KBcW%F55R##UqR\NuD@hJFpgh4U4&b*m!u4)er7a"BDE(Gn
%goGpOVS]0.%:DR<Zr7DJ0]aM)k0M'sgfc4-F'S5WC/n&-psCf'+:*F?P(NW[a!f`6K]h0?P/<9?;,FXFT:_pPM"NQ$X7Q2NRq2W(
%ZQQ&TOW1&j,#>K;NN'3/Yjg9P,6q6='>C;)Z2j.#T4duJDL=cS0sHS0PttkMN\&h;p%sdTVM<%<dTf7YU>KP0=T!E0-$:\MZ"q`+
%ba1uRYXq$6CI(L>5].Q@K;W-rn^4%cBoDO'FK]WY7,KjABbheHbMA:XBEM7,1a!MWat(kc(,OOjcnp`NX21buqR.RTKZ;u(+Mo[9
%[F:8`$[$npK#].5hY=ghN#>Yok+-iEa4)-ubU,+h7JHFsmine)e.K(FA69JPNACXhBVX`taqRRVHCQ\B'S7J,n&%QN2!gi(+JZ(@
%iR!u7a\7LrR5n0-`]28-6e&3.h?58L[9]Leg7+AkE-W6Z$k44o"=Kftcq#^-*:7U4_^TSPNGc*Mc6&?D*2nYZ@I!mpl:M2.Ga7b]
%?b!q#_!*"@fE/(CE7DmF?/(_Ks+uL#Ak/_K]JmOJSV5EXif$/rN:M[TMG7B/9d+IT]ga;8O7+1m&!f;5Zhm9EL\_iLP\`ZXe^=B#
%``]qrib1)Qk'R+LD=@Itn&^%nq@BaC^cfs;mhr;FrU<-g^45m<"m<UtXnR)X*Zo9.]9fCIrH,I6D?##+`+cE/Hp&_1#Ob7P&!T.t
%DaA675#?EEbDO475+n_oGQ1M6!aK(3"cX'ig\_aXg-Q]5j!^7\ApsE<bK$n>r8V;"n.4^Ph<,mkBek#6hs`.Srq\rqs17s[([g28
%eG\kHh*V@N!SZY1B]e/E1G4ugr:^SI,3=Ls4SPr7n+&2^01qp/2V.>>;&l?(5spt.TL)b15YFLg3lCf"S<*>YM%&]5.:5_FRK97a
%M&r:l1aUPm\cR=FH`r_'%ERY3btq;7Bj-.S`&o:pn"h:En#hnYV'sTE?g9RLg(&]p\,6):dMr*'7N$T"qVM0+g@!<iJF?.FMj(l!
%C,)FVmRh?N>OIU0Z[b174'JF._kA!:!-EJ$`A+agT&hpJa.[=r<)8$3fu;KM3SZoD\('1,n;)*)G_6%h)8F9\5HY4.k6Nd&>mkAV
%85#O&oc+]09rA)-S%`H)@LVRU4o[\L:?G.e8_i/:ga0rgF6X-G;'((AiE.4;e>,*l3WXQiL!AQXd7p)cUG?!WUpdiM?A"U^+g%EJ
%Na%mA5c+@oGhhP_Z`p8S[f,%;C11gQ\R7'ZVrC.X8WN!ej<!)U2E=.%-.SXHjnV[.c;)ID[SGObM$rO@09I1)f4ir)o00b;gG@-t
%U`D]-pUa9@=1E[+qS;oh\h[mFcbMX+qYar;AU&6u5K"'3@Vibu)gB@VIN<72`6^^c?me=A*n7Zh29&52D*BBcs4in%b)Ic?HR3-&
%i>k.WWToX=pO$Zf)T%^j;k_"O-HODOik<14,S>3,,GDEcGIcqW<n8@&eP?BPU!YDG:QZ1=4ae9HWGHW5igLTdn)hiTRj[thd_qW7
%Bikq3S]+#Ybm3h5BRfGXc.uutVWK0oUPsP/,sS9E2URk/HI4bmfu)Q$4Ss--/.E,\7T/Tkf;Rjrh-`c_+!;SJ3.7i:!GN(^nrBHF
%Rl./041h^57p^i/>%qK'C%$d<ALo^.0]luHFu*,%U:?V#B!*JHckM\$O,2XonEo29:"c2]4?Ng<?1WmC<"kW`mcE`-:[hP)P(?KT
%pQ!cS<)Buc[+^ZY#gA?UpVk%APkI3KN$)SDa1mjK/<&@#rh]HF`[#=:cipQP]8@=FeI<7F&^-j^7\['4daBi1LoJ?aj`suOc0d0Z
%hd=Tn9`Xsu8b1@9KWEbWN+K>?jr;R!%p.e<HqJk?TD-\9F6N3Zq@5VCd'Al@jlcMc(m-Bpar)qT=H+s,7i+FXJ,I[N<TA[:c2;Me
%0\199A$!q4%k^0!]X:1rKXKuS"mOP>'NGKIi'rAW90FqW%+<pG.3Z)!+0J*/na4;j4V$TM[0tbY.W6d#A.jW%OBasb:53$3-\ga3
%CXe#*4+`Z1a!ZS41j0ia^U4^DZ0$#L9-1tGn.#$sne7@ara^_#frrr+<.bS1>m>\8e::=4_10QCW*fKP[n6H7X?5qUkJMf.-K7eL
%b#%\n_JrVY+K,=MQdhj:;!'DL/^>"gren$6&q2mLrc61NTtaD]EpZKXBQ4A'21,>dP:pia$8t-Oc-d."kU^/;36@2HqA1*0*/5A[
%NM&W1ojJt/jG+C$/o@Q.,E8!R@u>``f/9$Y82[Z6+8pSV]B-C%.-dY>?Z(PJ-LF^"]!Z]j]\I7Ur**@HjcCQ32s-07l0&ZEW.mZ)
%/m#[/XXJ%pjn,sDbK<K#M_T)Z=+gJuQfrnaQCE3n6Fm[Z1H$EBA_R$:T`26dq,h-7n(1ou0!Hg&rW30<+/D<M0:"<JHh[m)r+]j:
%U8uIq</;rTN0'Irj9"4.riqNgYrW?B"0"k)=o7!".kQ<F735eq<2di-n;E3!@+5N$WlWHORa=>r)@jeSkA8+SM9ADFn7P%%!h0s"
%dtHUa(qTd5C02X0`^8d'b`qJ("t%'snn4si#^"apmlR`u)l>Y+2o#,G;IJ9)^Mf4[MWGIXVoJ7Nm:V\&G8=c6EE%,;UiMbn$+21i
%!/%sYVs4q%N]MY^V1I`>U2l_MV+NBGC6N?Amq"d`TXN>*cmsEOPjmn.XCqa%(0I/TT.H2":oPc;7XqrE!Z(FF0"lqUG"LEAL^9?[
%4Ymn'#U[I?IW7dcT2JFK\Rsj9%-_T\R7g':iR_-]*gZ:37835o#Y?]$b5JlV>AsZZ:SD]`>3Ukt<h@Le7@*@'[r5j`KV_OSLUHR\
%)nqmDa"ojiPfZ=_=+\3%St!TPPuS[(X@?1@)h=bSJ&F4!"i,mG&N_3h@ThhBQAb!GPVOl^=1Z_7\f3Y&h0JP1BZ=8a)^j1#+u]#D
%d..n!DU=F?K"4i!>$-cU9/d]gbJ7G`L63t,W]5J68M>_DIIW&r*Cha=&Dc*ne[Ih;Vs\D2p!?I(Rs:]bp9O,u9$VrgV$iE/%^PmS
%kT^"pg%g@,\RPdMCld=B"%HC=o,MOA^6e*^2@4Ugdrec.9_P1Z8:S47Aq:iQhWV>-Wd:D1XHCUcF,Vd^Q!OT*&2H#/\t^BA4V(:K
%57JA3+!7`8cK`71fsnb*QuJ.%B*>,hp3\1N6.8YNXS[da0AgYuIK(4rqr]*jV5(B0?qVNm=pGHZ$@_[aUWda<qHl7V\mK=SXX51>
%)cDf04M:QH]=1o2iD@Dfh*1r%moTDB5PJn=\@C%3F]cg_T07P:s&7R#Vs]Hg#?^.FA4"_G@Kk45MW"WhoMuSf^&TF)mcSfo,`gA6
%(Ie/u8nJtm?]WOrnhA,tA<Aalpq.[G3$"ZRj\F8q+nM?3rKN611X,gUU_XKYi*'5$Q0e+k>#(UO78h^70@/Zf:_igf:Rd)R(up&i
%3!?AC&Eg_ocj[H`cB&G-ra0lYG>n1IO(j"C*\QA;$6)JB@*j8Jk[f2+I5&T*6!*!i%(NsWT0k%IZ74/tGl3ND(LR?c>mJ&2HUuaC
%Pfo-1:c%+&o:an9?<qiT0,["!lKUKIg9"X^56lI/EgT$Cp7*a<hfkrYBBUp?ICVaUH?eoM*=q'Y6e=\(W!FJloM#<b\MSC_!cpDE
%=[.*cFQ)cMU!*97k<g&kGo/S]1j%9<\tQ/T:EI*Y3_u7=h\j"Tm%uuV?.S1'+1ePG4W1h-jRLU937[9?`P"[__c.\gC.A0Ke]LgF
%Y#a^ge,Cjb=5S)1A:<?@)nNDhlM_YR<P^dST$Y)gg^shW61<)#]V^:7*\'F\WL0EKU'F!76p1gU-E9>.>/$;s1d_e*HG#cN1aS8o
%>o^h02%\9Tq;q1tAgf*S&6)BRK:ltRp?kQK>)Laepn`F<5Z"!cVZ&ALpda3Rh0&P@YW;Q?/E9)jNlS>O7i!s$B2cE2:!nG\2,XAo
%eO9(7W9%eD8i-+sO[YhBQ)5i']P%KSI+idTOa&&2X3FI=o\WM?e:0tG;1!M`Hn@d$7f60!rV+-EO3?SHTGmu02>RE7ZiEgqKuM*D
%]Y=CVB)b'uB#@(O3SKVQH0Kmb-S\mG.n)D!nj"*$`ceA-po5fJ;[<Eue/O7L`h8/M_6G_NIA]0>gVjLXVaM'<FW[0K?W2']oDYS]
%p=42q/`C6ZUh0baY,j@^fS<;<m.#'DY['YV@S15o@:bA_iWNc<G@Wp]1VhqDcpoZc`e+:ZfLHrr95+8mqF6NsgF_8>m@P^iC`ZNZ
%]Aqea_oYR3fI*H\8OkKa.>%Ej\]M1*TL!.a_^>'Y;m][E#+<2P$Fmr"n?o[;;+rP6KK;<>LYAg'(6hklC`!OUXCKP<l.H`9%gt4@
%$SL6dL+"`40D6c<CF[`>Lr)p=m^>*CYOZ_f]_\5,A0t#"Q[.F8qUOsV0RY#;1!]jgD.&DodiomrSmPpd":MMYf-5#^0Z2FoSH_/H
%BXnL)2_NHlP>):X3A"^u"jKQl5R<&6p1S+g/aY9nS,N/:J9&DMo#K8le;ce<F,peXN%n19J`>h9&[6HbaV^_+ph?Rp,EB:&90f9_
%P11Os*+.WAWbc7<+sXjSbaEk!BH7(q'!,dSVAEeDBCdP@leW.;SY&Za?<@@K["k<IYk!IM+BnST&(/(GQL>(io[:5f*LpaL!!!j(
%22kX:6cjBMUJmgN*VS*?C8+IF8V)fW@7Pg44B_bHL_3ubiGQ_/W<G!`6AitU3g>QWM-=4pQ+u2RkYbuWk)?rFKdi<eK*s(%ZpXL;
%!:/Hp;5GY!ip5Q9N&P5X(]T1BV7'=:k_@78XUP;_kb8ilF^[NTWo;km'aE^SOQH]'$)b@*R#?D(.HY-iG'`AZ1C6H@jo__@3#=P?
%3;"?5=LfQ,CPC55HlC@,C?UD,!Q`<][?A.\1p7Rj%\9&53.(ak)?&k%']0?o%:6Yk8bZqJP2j`b6Nm96<#6"`Qb^jdklQkOSJ1/H
%U/cgd1Dd\Jg'%\fH+N!2]IkT2Qd\ua>GQYgKEGEVQb5+XKuVF18E`mL1SJluig.[u+[JWS*t<[BB5!:G3j<h*:/_;h6_cMr`,Kc?
%jg'l+j=9[e]^h8GYW)knV!Wq0<iF<l?`4WG48EGP7h2)I=Wb<k)t1P_B2Hk8*(B8O4u)@31Dj!J5hfH2)mT$CO$8G%`j.&5nTM_'
%@m3cnQIqO!H?mJ=;q=RRhEDmXPsWWQb.CEr;F1\?R#bZe,gQPp)(B`Xg&]'^UBtM1!_=?=#6Xob'&c\X@b9eU7_b:>7?:Re@='dd
%Z]!$TBK"6D4Osj$T;Wm$#PEAp3H"D2OVKEl5c_[XbY\Pk[T_T;+:6hjFijFS5"]u_Wl\cs:0W[nb0"Cl\RnVC0OJ,pYcF`#%dA&,
%F26NLFStepM#g`&rs-%N/ZWPKnhq!_\lG+5QK]0>X.LY$]lBu0,+q"\S_ro>0&;ViJS!XJ(q7P+</iPglHe219Cq[TDX\J.-e6.F
%81M,$B+L9ul-#og.]Fpo<&0eX.%R4lJ\2F3B$c2u:H]rLK]K88a-KCl)@&H8fNnhTFM0-)KM`M#Fqd(h#<^C/e]O64j$u.Ig`-%!
%X8WNb4HL%T@JX^R.dtcZ^`9'qC>s$D;T33!b6K>gRJ@\SMnD!XKgs#48CuZ:kks"1&q"O,(Yo7YD.>+=g*[)W;Hg#&Kf>gdf*)iT
%M'Lb(/Tcs<Dc(?I^Q2je7@>'\=:R'2bmC'NVG_=f6FP`m%SXFTY4k/UqqcA(g@t<927dopfoC6SAY].YkNZE9!Y;7@QqW?Go'W.M
%$a=O@=o~>
%AI9_PrivateDataEnd
