%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: BitonicSort - recursive.pdf
%%Creator: Adobe Acrobat 8.0
%%For: Bill Thies
%%CreationDate: 12/5/2008, 11:07:19 PM
%%BoundingBox: 0 0 380 648
%%HiResBoundingBox: 0 0 380 648
%%CropBox: 0 0 380 648
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1622 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GNU Ghostscript 7.05"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -648 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 648 li
380 648 li
380 0 li
cp
clp
[1 0 0 1 -36 0 ]ct
gsave
35 649 mo
416 649 li
416 0 li
35 0 li
cp
clp
.1725 lw
0 lc
0 lj
1 ml
[] 0 dsh
true sadj
37.38 646.62 mo
413.775 646.62 li
413.775 1.46997 li
37.38 1.46997 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988, 1990, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Times New Roman is a trademark of the Monotype Corporation, registered in the US Patent and Trademark Office and may be registered in certain other jurisdictions.) def
/Weight (Roman) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 66 /B put
dup 82 /R put
dup 83 /S put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
def
/UniqueID 44335 def
/FontBBox {-167 -250 1009 878} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 0 662 677 447 461 694 694] def
/OtherBlues [384 384 -216 -213] def
/FamilyBlues [-15 0 662 677 447 461 694 694] def
/FamilyOtherBlues [384 384 -216 -213] def
/StdHW [36] def
/StdVW [81] def
/StemSnapH [36 43] def
/StemSnapV [81 94] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
14 dict dup begin
/B <1C60D8A8C9B64EDFF4D0475F24A0512970A16CFF6BFBD1A1A12D07A62723
BF27DBD01B60ACEC3C9DB4E627348B4F9C96D245E2397B81856FE7B9149C0D88
A0B1C89901A357B578317FC0F49D1050D95CF70B7F7A7C5741B1B644F20C16DB
8F1BD7E6C45546C9302E6AD757CA73E92696A658F8A903A2E6B5FA3BE24637C3
3393411FB0E113E4BDFEBF11B4E90F57471B306273B2241C3C23457DA84CC16B
22781151F6DE159B155116967F7D53FA1DDDDF14084F0631BA1C08300F50E5BA
9DC336D8349BEA3371DCAFDF658781D6> |-
/R <1C60D8A8C9B64EDFF4D0475F241567109AA60E358A72CDD6748BBE527383
3D9930EA16405C9FA084F4E606B7DF07A2CCABEF78658BA281F5D25760E71232
16C34541C223BEC48612BD7C0052F7AD27E210716125E9B30EDB889188D65976
1E4423BF9E66EB5CCCE83D82A2DB04554982E2E899847CA739A4B92152682375
567D18A66EABD5068029F8FB7424BADB87039D0F6B1530> |-
/S <1C60D8A8C9B7EF320E2EFDBCAC7BC76D0C8C1FC222AFE4F464C56D04CD48
5F140DB725EC46F068943283C9A43A14A852E22E87331165F602FD95AC890BE8
83DAD7F63C31168B480A95AC244C28C8F37F118A399681DB4822661628FBDA87
D99D0367C013E32688035EC31A5C3FC194FEB20C4FCD84A9EB3547C0D5A421A0
1B87DFDA871D7919B7251A9EC84A645CA15425845057F189EC65A90DD4028CC5
B10853B05E6F7AF9E84AC6588CDCE11B6EF766B248A8304E38964E579F6EF2DC
2D4971ED042868564E8E982FE2B2> |-
/c <1C60D8A8C9B77FE2948016809A16C1383D80AA8513D781288589A82DC94A
5DA0D421DEC176AEE608ECA472235D24D269E725C25D06B3582797B60EEBA4C4
46D10FC22341077B09EDB4E12CA0359E24628B46BB6E10727940> |-
/e <1C60D8A8C9B77FE29496D1FBB47314D6F46DA3EBFEC342F3B983185301EF
B706EB7833A9B3F14CD479AC93E43031BC63CB7FFE55CD73AABA1B6DFA935F49
683C721ECBA275DBC565AC78A07D0C5329E18D2789C058EC6367BBAECDF40AEE> |-
/i <1C60D8A8C9B854D0F11440006C203BFFD1DEDCDE7CAD1373D75DB7315CFC
49A0833FA9D881419B9BEE01885373804535A66836A5115D3B942001E4A8D676
2EBA1D3CCCC2CED3DAC862D3F0398204E81D1C72BC10727D59A156997C9269F7
F9572E03A90C988E59FECA8B3BEBEE755CF420171B> |-
/n <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA6A1CED287131EA2B
D2E1E6E797441A36EF164B2E98EA0B7A662ADAA0C64D637EBFFAEDEE2D95D0C9
387D6E78EA7DBD0E03769EFADBB9E99820C3CA652E5CB84D6476DEB84D65355B
ED40D74AEE8C38DE38F7ADD1F45E132F9FCFA8357906BA1C9F825F576D022523
4E76> |-
/o <1C60D8A8C9B7A73DE3E5E50AD058CB1758CCEC8536B108DD66A8D296857C
B3303D78514A78D06E85FDA9E8085F8D9525195AE96992EAA1E95B40679F85C3
FC4165030DF121E13968768CFE641E50E297E68778A63ACC6DD3> |-
/r <1C60D8A8C9B81F2C117020CA370F4EDA9CC5786DD9DE9EF42ACF1876A05B
D63AFC335B1B675841319B03439D25E5CD3513D8B1AF7C3213243E231585FDFB
23DF1B8599146D034A4E5D6FF06CCB4811E4D5773B1A3B8F6DC7EFA556C00470
2D769BB83004181BE21F0C2BFBE9C20E97FA9275EFEA6DCC374D4BC4F2DBC112
90AFF811640F86741723DE5B9796381D4326AE431F5D9C5CAED9> |-
/s <1C60D8A8C9B7361F4A5DC306676AF4C8647FF3053FF45CCDDBEB7E9B9050
12DA1DE9402C8DB245C98EF5B89AF8B307871A82029AB9C9383D498ABA5BCF42
FD3EBA06E16095068AAD2A24F29F66CD7BEDAF75E27B9E98183114BB708CEE9F
70B53D4922DAA331AE3A4B4FD1B5CD24EA574D8FE8D1E66E3ECF87407A13A679
B23887BDCEB1C164DC6CBF6472F4BC61E5FBABA972F7976EEBF3BC4B43DEE327
20F6A1A3C1878ACCA80EBBED76DEBD40C76FFC717243DC8D6CB182005A946D70
F948846138DEF539AD5BE615B04618EEB754F0DAF886F93D007AE786FB00955E
897D78D67615B1FA609D> |-
/t <1C60D8A8C9B854D0DAE0E17091F63D902F15B1C5B2DD1246F40FD3EC3264
448E2BE336EDCDEB1DFC2F9412B18B341EC1F740C5E1DC1152FC3909509AD9AD
D2933ADE9A3C5AD03C26776EECF232> |-
/u <1C60D8A8C9B7A73D96315394C03E2804B8D6B013BEE63C754B7DCD21D17D
EE183DDCCBE94C1E49FD4EEAD58EEB67E527D51D30B7569BBD690F10D18E5949
069889C638179D8480A9808D89F695AD05863E6AF7CC14732F1A0B4D904FA886
0DFB17262B8501BEF73C125F016588> |-
/v <1C60D8A8C9B7A73DDA3AE0A055993EE6BE7DFD4A4A2DB6881516C07791ED
230086728F5F7B4242AB79AA3E9EFA40308C16768E728C96C19C447086D3AC82
2F0AB1C43C44A30591856370C72E911DB5FEBBFD365EF7E42462BF4A23A3EEAE
F504CBF5C917EC0A44C5B6D735> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LTFDQP+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/LTFDQP+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 15{/.notdef}rp /R /S 15{/.notdef}rp /c /.notdef 
/e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r 
/s /t /u /v 137{/.notdef}rp]
LTFDQP+TimesNewRomanPSMT nf
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
38.5398 3.4019 mo
(BitonicSortRecursive)
[1.61079 .671368 .671371 1.2075 1.2075 .671368 1.07222 1.34274 1.2075 .804176 .671371 1.61079 
1.07222 1.07222 1.2075 .804176 .939419 .671368 1.2075 0 ]xsh
40.14 406.5 mo
411.015 406.5 li
411.015 22.17 li
40.14 22.17 li
cp
1 gry
@
42.9 395.46 mo
231.615 395.46 li
231.615 31.14 li
42.9 31.14 li
cp
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQP+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/K <1C60D8A8C9B6079F62AF7EE261D2819ED7974217E7034289FA7C1BABF100
C6A5480EF2F67F33525B9F0C3A7EBEA8703E8C35FFE54D3010A9809D5E12442C
409B269A7D4346FFD3D0C882E0638FE5876FB72290B12BADDE73C28ABC60097D
5F47A0B45D92F7FD41DF8475D961E4F5A95EF6558D45744A11DE71603FC94A1B
038775E2BC960C01D2B930F2> |-
/l <1C60D8A8C9B854D0F11440006C203A85DCEB221B1066666FE3EA25083329
14AA399D2F81DB0653B503D4FAECFE70883AAAA2B3345C999517D89696069E61
D192EBD1D92DDA82> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQP+TimesNewRomanPSMT /Encoding get
dup 75 /K put
dup 108 /l put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQP+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 8{/.notdef}rp /K 6{/.notdef}rp /R /S 15{/.notdef}rp 
/c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef 
/n /o 2{/.notdef}rp /r /s /t /u /v 
137{/.notdef}rp]
LTFDQP+TimesNewRomanPSMT nf
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
44.0518 33.0719 mo
(BitonicSortKernelRecursive)
[1.61079 .671368 .671371 1.2075 1.2075 .671368 1.07222 1.34274 1.2075 .804176 .671371 1.74359 
1.07223 .804176 1.2075 1.07223 .671368 1.61079 1.07222 1.07222 1.2075 .804176 .939415 .671371 
1.2075 0 ]xsh
45.66 240.21 mo
228.855 240.21 li
228.855 35.28 li
45.66 35.28 li
cp
1 gry
@
48.42 229.17 mo
140.535 229.17 li
140.535 44.2499 li
48.42 44.2499 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
49.5717 46.1819 mo
(BitonicSortKernelRecursive)
[1.61079 .671368 .671371 1.2075 1.2075 .671368 1.07222 1.34274 1.2075 .80418 .671368 1.7436 
1.07222 .804176 1.2075 1.07222 .671371 1.61079 1.07222 1.07223 1.2075 .804184 .939415 .671364 
1.2075 0 ]xsh
51.18 131.19 mo
137.775 131.19 li
137.775 48.39 li
51.18 48.39 li
cp
1 gry
@
53.94 118.77 mo
94.995 118.77 li
94.995 57.36 li
53.94 57.36 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
55.0918 59.2919 mo
(BitonicSortKernelRecursive)
[1.61079 .671368 .671371 1.2075 1.2075 .671368 1.07222 1.34274 1.2075 .804176 .671371 1.74359 
1.07223 .804176 1.2075 1.07223 .671371 1.61078 1.07223 1.07223 1.2075 .804176 .939415 .671371 
1.2075 0 ]xsh
56.7 100.83 mo
92.235 100.83 li
92.235 61.4999 li
56.7 61.4999 li
cp
1 gry
@
93.96 118.77 mo
135.015 118.77 li
135.015 57.36 li
93.96 57.36 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
95.1118 59.2919 mo
(BitonicSortKernelRecursive)
[1.61079 .671371 .671364 1.2075 1.2075 .671371 1.07223 1.34274 1.2075 .804176 .671371 1.74359 
1.07222 .804176 1.2075 1.07222 .671371 1.61079 1.07222 1.07223 1.2075 .804184 .939415 .671364 
1.2075 0 ]xsh
96.72 100.83 mo
132.255 100.83 li
132.255 61.4999 li
96.72 61.4999 li
cp
1 gry
@
63.945 182.25 mo
118.11 182.25 li
118.11 137.4 li
63.945 137.4 li
cp
@
80.85 227.79 mo
135.015 227.79 li
135.015 188.46 li
80.85 188.46 li
cp
@
133.98 149.13 mo
226.095 149.13 li
226.095 44.2499 li
133.98 44.2499 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
135.132 46.1819 mo
(BitonicSortKernelRecursive)
[1.61078 .671371 .671371 1.2075 1.2075 .671371 1.07222 1.34274 1.20749 .804184 .671371 1.74359 
1.07222 .804184 1.20749 1.07224 .671371 1.61078 1.07222 1.07222 1.2075 .804184 .939407 .671371 
1.2075 0 ]xsh
136.74 131.19 mo
223.335 131.19 li
223.335 48.39 li
136.74 48.39 li
cp
1 gry
@
139.5 118.77 mo
180.555 118.77 li
180.555 57.36 li
139.5 57.36 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
140.652 59.2919 mo
(BitonicSortKernelRecursive)
[1.61078 .671371 .671371 1.2075 1.2075 .671371 1.07222 1.34274 1.20749 .804184 .671371 1.74359 
1.07222 .804184 1.20749 1.07224 .671371 1.61078 1.07222 1.07222 1.2075 .804184 .939407 .671371 
1.2075 0 ]xsh
142.26 100.83 mo
177.795 100.83 li
177.795 61.4999 li
142.26 61.4999 li
cp
1 gry
@
179.52 118.77 mo
220.575 118.77 li
220.575 57.36 li
179.52 57.36 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
180.672 59.2919 mo
(BitonicSortKernelRecursive)
[1.61078 .671371 .671371 1.2075 1.2075 .671371 1.07222 1.34274 1.20749 .804184 .671371 1.74359 
1.07222 .804184 1.20749 1.07224 .671356 1.61079 1.07222 1.07224 1.20749 .804184 .939407 .671371 
1.2075 0 ]xsh
182.28 100.83 mo
217.815 100.83 li
217.815 61.4999 li
182.28 61.4999 li
cp
1 gry
@
104.827 282.99 mo
213.502 282.99 li
213.502 243.66 li
104.827 243.66 li
cp
@
102.24 394.08 mo
226.095 394.08 li
226.095 286.44 li
102.24 286.44 li
cp
@
105 383.04 mo
164.685 383.04 li
164.685 295.41 li
105 295.41 li
cp
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQP+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B59F85E7C3D982C036A83A051CFEB65CDD644D44695DA87381
2F9E0DA4474B3DF6D63B3341F86CDE23D0512CA425D085DC5BA255E6B3240439
E201FEC100F452F18CDA5E088317BF79F4C8FC952A839FE77A57A286C006FAF4
6CE1F964CD62165C424C020FEAD96AC86FEFFC256D> |-
/g <1C60D8A8C9B7A73D85D7E997B7B5DF7D7777AF52CC5562CB6E990E974840
46648599A1D9C4DB63B2EA37B7BBC0C3039255635B40FAB067F562720BFA98A6
8AA5F28640EAE52B9FE1BA9F5F2A49A2F977CAB7D5C25E3626BAA2BEB9E431EA
60B6FFDB96CDFE0161651CB3C7DDAAF79341AA1B63131C7BD07B3EF7C547B329
2DEEC810138CCDC2FA69E1A2AD41097A54F4DBBBA72B1810538F2F0FBA5B3B54
046B0BB798F435A12098BB54904B4FA0166943538B1D7B8EA5970358CDBCC48E
31C506A3AAB0AC2519075E7791339AF09F8C1F93B0D81A9E5ED3B02D4C03B817
17F61566CDC855CB444B31FBC8E71F4A79E39CF6ED7B9B21E0269B8614410251
F072B930BD3C2C0B5BE3125CE4461E97B369DD7B68AF48B8706DE7D2976BB7A8
F7FA6E1A10F519A6E8E51022609E6B7A2E822DDCD222A999CAA520FD83CCB934
D41B4EF6E07BE85DFA424019E44CA0D51152EDBDE920B3C59D4A719415BD84E9
F231F0CBEF222AB9855B090598B4D01FCC8283B4EC699D2D8EDA681DF37E56EB
75FAFC019A1A3645CA60183B64A594CD3556BA6088F7C2AF3F05FDD0875B0187
C18BC8AC2785F74D85EFAA74EA4D56B1D0576FD461BA0B37199C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQP+TimesNewRomanPSMT /Encoding get
dup 77 /M put
dup 103 /g put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQP+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 8{/.notdef}rp /K /.notdef /M 4{/.notdef}rp /R 
/S 15{/.notdef}rp /c /.notdef /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t /u /v 137{/.notdef}rp]
LTFDQP+TimesNewRomanPSMT nf
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
106.229 297.342 mo
(BitonicMergeRecursive)
[1.61079 .671371 .671371 1.2075 1.2075 .671371 1.07223 2.14691 1.07223 .804176 1.2075 1.07223 
1.61079 1.07222 1.07223 1.2075 .804176 .939415 .671371 1.2075 0 ]xsh
107.76 338.88 mo
161.925 338.88 li
161.925 299.55 li
107.76 299.55 li
cp
1 gry
@
107.76 381.66 mo
161.925 381.66 li
161.925 342.33 li
107.76 342.33 li
cp
@
163.65 383.04 mo
223.335 383.04 li
223.335 295.41 li
163.65 295.41 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
164.879 297.342 mo
(BitonicMergeRecursive)
[1.61078 .671371 .671371 1.2075 1.2075 .671371 1.07222 2.14691 1.07222 .804184 1.2075 1.07222 
1.61078 1.07224 1.07222 1.2075 .804169 .939423 .671371 1.20749 0 ]xsh
166.41 338.88 mo
220.575 338.88 li
220.575 299.55 li
166.41 299.55 li
cp
1 gry
@
166.41 381.66 mo
220.575 381.66 li
220.575 342.33 li
166.41 342.33 li
cp
@
219.54 185.01 mo
408.255 185.01 li
408.255 31.14 li
219.54 31.14 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
220.692 33.0719 mo
(BitonicSortKernelRecursive)
[1.61078 .671371 .671371 1.2075 1.2075 .671371 1.07222 1.34274 1.20749 .804184 .671371 1.74359 
1.07222 .804184 1.20749 1.07224 .671371 1.61078 1.07222 1.07222 1.2075 .804184 .939407 .671371 
1.2075 0 ]xsh
222.3 164.31 mo
405.495 164.31 li
405.495 35.28 li
222.3 35.28 li
cp
1 gry
@
225.06 149.13 mo
317.175 149.13 li
317.175 44.2499 li
225.06 44.2499 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
226.212 46.1819 mo
(BitonicSortKernelRecursive)
[1.61078 .671371 .671371 1.2075 1.2075 .671371 1.07222 1.34274 1.20749 .804184 .671371 1.74359 
1.07222 .804184 1.20749 1.07224 .671356 1.61079 1.07222 1.07224 1.20749 .804184 .939407 .671371 
1.2075 0 ]xsh
227.82 131.19 mo
314.415 131.19 li
314.415 48.39 li
227.82 48.39 li
cp
1 gry
@
230.58 118.77 mo
271.635 118.77 li
271.635 57.36 li
230.58 57.36 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
231.732 59.2919 mo
(BitonicSortKernelRecursive)
[1.61078 .671371 .671371 1.2075 1.2075 .671371 1.07222 1.34274 1.20749 .804184 .671371 1.74359 
1.07222 .804184 1.20749 1.07224 .671356 1.61079 1.07222 1.07224 1.20749 .804184 .939407 .671387 
1.20749 0 ]xsh
233.34 100.83 mo
268.875 100.83 li
268.875 61.4999 li
233.34 61.4999 li
cp
1 gry
@
270.6 118.77 mo
311.655 118.77 li
311.655 57.36 li
270.6 57.36 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
271.752 59.2919 mo
(BitonicSortKernelRecursive)
[1.61078 .671387 .671356 1.20749 1.20752 .671356 1.07224 1.34274 1.20749 .804169 .671387 1.74359 
1.07224 .804169 1.20749 1.07224 .671356 1.61078 1.07224 1.07224 1.20749 .804169 .939423 .671387 
1.20749 0 ]xsh
273.36 100.83 mo
308.895 100.83 li
308.895 61.4999 li
273.36 61.4999 li
cp
1 gry
@
310.62 149.13 mo
402.735 149.13 li
402.735 44.2499 li
310.62 44.2499 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
311.772 46.1819 mo
(BitonicSortKernelRecursive)
[1.61078 .671387 .671356 1.20749 1.20752 .671356 1.07224 1.34274 1.20749 .804169 .671387 1.74359 
1.07224 .804169 1.20749 1.07224 .671356 1.61081 1.0722 1.07224 1.20749 .804169 .939423 .671387 
1.20749 0 ]xsh
313.38 131.19 mo
399.975 131.19 li
399.975 48.39 li
313.38 48.39 li
cp
1 gry
@
316.14 118.77 mo
357.195 118.77 li
357.195 57.36 li
316.14 57.36 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
317.292 59.2919 mo
(BitonicSortKernelRecursive)
[1.61078 .671387 .671356 1.20749 1.20752 .671356 1.07224 1.34274 1.20749 .804169 .671387 1.74359 
1.07224 .804169 1.20749 1.07224 .671356 1.61078 1.07224 1.07224 1.20749 .804169 .939423 .671387 
1.20749 0 ]xsh
318.9 100.83 mo
354.435 100.83 li
354.435 61.4999 li
318.9 61.4999 li
cp
1 gry
@
356.16 118.77 mo
397.215 118.77 li
397.215 57.36 li
356.16 57.36 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
357.312 59.2919 mo
(BitonicSortKernelRecursive)
[1.61078 .671387 .671356 1.20749 1.20752 .671356 1.07224 1.34274 1.20749 .804169 .671387 1.74359 
1.07224 .804169 1.20749 1.07224 .671356 1.61078 1.07224 1.07224 1.20749 .804169 .939423 .671387 
1.20749 0 ]xsh
358.92 100.83 mo
394.455 100.83 li
394.455 61.4999 li
358.92 61.4999 li
cp
1 gry
@
95.1675 449.28 mo
312.862 449.28 li
312.862 409.95 li
95.1675 409.95 li
cp
@
79.6425 628.68 mo
337.357 628.68 li
337.357 452.73 li
79.6425 452.73 li
cp
@
82.4025 617.64 mo
211.777 617.64 li
211.777 461.7 li
82.4025 461.7 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
83.6311 463.632 mo
(BitonicMergeRecursive)
[1.61079 .671371 .671364 1.2075 1.2075 .671371 1.07223 2.14691 1.07223 .804176 1.2075 1.07223 
1.61079 1.07222 1.07223 1.2075 .804176 .939423 .671364 1.2075 0 ]xsh
97.5825 505.17 mo
206.257 505.17 li
206.257 465.84 li
97.5825 465.84 li
cp
1 gry
@
85.1625 616.26 mo
209.018 616.26 li
209.018 508.62 li
85.1625 508.62 li
cp
@
87.9225 605.22 mo
147.607 605.22 li
147.607 517.59 li
87.9225 517.59 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
89.1512 519.522 mo
(BitonicMergeRecursive)
[1.61079 .671371 .671364 1.2075 1.2075 .671371 1.07223 2.14691 1.07223 .804176 1.2075 1.07223 
1.61079 1.07222 1.07223 1.2075 .804176 .939423 .671364 1.2075 0 ]xsh
90.6825 561.06 mo
144.848 561.06 li
144.848 521.73 li
90.6825 521.73 li
cp
1 gry
@
90.6825 603.84 mo
144.848 603.84 li
144.848 564.51 li
90.6825 564.51 li
cp
@
146.572 605.22 mo
206.257 605.22 li
206.257 517.59 li
146.572 517.59 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
147.801 519.522 mo
(BitonicMergeRecursive)
[1.61078 .671371 .671371 1.2075 1.2075 .671371 1.07222 2.14691 1.07222 .804184 1.2075 1.07222 
1.61078 1.07224 1.07222 1.2075 .804169 .939423 .671371 1.20749 0 ]xsh
149.332 561.06 mo
203.497 561.06 li
203.497 521.73 li
149.332 521.73 li
cp
1 gry
@
149.332 603.84 mo
203.497 603.84 li
203.497 564.51 li
149.332 564.51 li
cp
@
205.222 617.64 mo
334.597 617.64 li
334.597 461.7 li
205.222 461.7 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
206.451 463.632 mo
(BitonicMergeRecursive)
[1.61078 .671371 .671371 1.2075 1.2075 .671371 1.07222 2.14691 1.07222 .804184 1.2075 1.07222 
1.61078 1.07224 1.07222 1.2075 .804169 .939423 .671371 1.20749 0 ]xsh
210.742 505.17 mo
319.417 505.17 li
319.417 465.84 li
210.742 465.84 li
cp
1 gry
@
207.982 616.26 mo
331.837 616.26 li
331.837 508.62 li
207.982 508.62 li
cp
@
210.742 605.22 mo
270.427 605.22 li
270.427 517.59 li
210.742 517.59 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
211.971 519.522 mo
(BitonicMergeRecursive)
[1.61078 .671371 .671371 1.2075 1.2075 .671371 1.07222 2.14691 1.07222 .804184 1.2075 1.07222 
1.61078 1.07224 1.07222 1.2075 .804169 .939423 .671371 1.20749 0 ]xsh
213.502 561.06 mo
267.667 561.06 li
267.667 521.73 li
213.502 521.73 li
cp
1 gry
@
213.502 603.84 mo
267.667 603.84 li
267.667 564.51 li
213.502 564.51 li
cp
@
269.392 605.22 mo
329.077 605.22 li
329.077 517.59 li
269.392 517.59 li
cp
0 gry
@
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
270.621 519.522 mo
(BitonicMergeRecursive)
[1.61078 .671387 .671356 1.20749 1.20752 .671356 1.07224 2.14691 1.07224 .804169 1.20749 1.07224 
1.61078 1.07224 1.0722 1.20752 .804169 .939423 .671356 1.20752 0 ]xsh
272.152 561.06 mo
326.317 561.06 li
326.317 521.73 li
272.152 521.73 li
cp
1 gry
@
272.152 603.84 mo
326.317 603.84 li
326.317 564.51 li
272.152 564.51 li
cp
@
233.857 11.475 mo
233.857 8.23596 230.15 5.60999 225.577 5.60999 cv
221.005 5.60999 217.298 8.23596 217.298 11.475 cv
217.298 14.714 221.005 17.34 225.577 17.34 cv
230.15 17.34 233.857 14.714 233.857 11.475 cv
0 gry
@
233.857 11.475 mo
233.857 8.23596 230.15 5.60999 225.577 5.60999 cv
221.005 5.60999 217.298 8.23596 217.298 11.475 cv
217.298 14.714 221.005 17.34 225.577 17.34 cv
230.15 17.34 233.857 14.714 233.857 11.475 cv
/1 
[/DeviceRGB] /CSA add_res
.953 .424 .267 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQP+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
/hyphen <1C60D8A8C9B81F2C7E673161CF52871F3F524B3A1BAC5ADA04F510A
476> |-
/slash <1C60D8A8C9B854D088EAD778FBC18D924BA165ED7CB0EB5700C3B61B
62ACF96E65C0BF> |-
/zero <1C60D8A8C9B7A73DE18CEEF4E48C6DD01FBACAA39C3CF5567D0E5C788
075445C95D6A3B6E540D57A95C2149688073A3E100742CAF1210D033AAEFAE6F
8B444349FD5782CA146EC98165CB56922017B727DFF8905922E07> |-
/one <1C60D8A8C9B7A73DB94F41466C876FCA9AF55081C1C70D8EC4AB3C9249
D700CD0FF27B669AF104FB3406E5DFE3F3B0AB0CAE2CF1998D0DA43C395891C4
7CD031071E50A5> |-
/two <1C60D8A8C9B7A73DB9C4155FCF739F7C1974D5BF41CC3E8700100AE610
E49DF6B4C276649A8B3177B0F76FADB15EC55BD4BBD1CDF8C5F886738FFDBD44
2FF8A0594A170A20B9C3E13444FE4DC986DA862896B80FFA135FA164A257> |-
/six <1C60D8A8C9B7A73DF81BACD811429F931042E1295F1D2320E46DE79DF7
47FCAABFFD92F045A475E54E15C8E93ECB3BD59C8545C0EF45BF22429615FC68
5C033A02F070B2C6D7D737838C1853D297AC8915086E73952A7A9847D6F588AB
17767CC39CB62607242BC1B7BFF5295CEB6C03755CD9B53DA2> |-
/colon <1C60D8A8C9B854D0E389293C42E83787A5BE0CE9B5745E40D1B32D07
F826004562E0981DB26F3EF2E2B5CD932C33C49C462F9673F306A9A8ECFFE93D
9FCE8BF4190AA3F1208FCCE1> |-
/equal <1C60D8A8C9B7E7C1C7C30B941AA047473EBF9655DE246137CE0666A3
DD27E47997A26319529C8C4FF5C38D266AE0> |-
/greater <1C60D8A8C9B7E7C1C7C30B940B3D62C7A181F0EBB0723CBB160375
71F050C44CCE59A85ACB3DB6BF9B03383F> |-
/I <1C60D8A8C9B81F2C3AB090E7A94305EFD59611ABFA6BAFD07A97745145D9
B0DF5E6D35DFFC117239480D5B4909BCBB653176E0149E687888D5B98137EBEA
64> |-
/O <1C60D8A8C9B6079F258D65BC2331B95A484F6FB0C89DE7976C286549CD33
A4D7316575EC038BAA234ED3FB5DEACB25E52512A7CBD428E6DBD2EB830622E8
8A44262525560702DCFFFB3478FE1A2C6113548B23F661EC01296D75C1A7D5FE
B75CD951FFE5A9> |-
/k <1C60D8A8C9B7A73D926FE6D4B51E06A6595F3746ABEED643EB32E31FC5C1
56BE33D279A48C7177D38FEEE25BE39FA8184693C31C3DD98D1AF000E30B25B8
F0029B9D7DAB8132C06DAF7AF8346F39C9E4C7E69A448E350100342A6E22A322
C4DEF85ED9405E1A9FCE65A5B4B5084195D644BBC14B138BCD62C9C4EFF347DE
06C9D1F36BBC04C3531EBEE642B499C247> |-
/w <1C60D8A8C9B6079F6CBBA5F366E947F933D60DF598D919B1B7650559D736
37DABDC1EE55BCEC17305D792CEB494E24BD853631335C74FFCA113C4D914522
6940D65B0FA636B78B1332922431C88D4DDF20C0A3C1C91D0C3F0EC21F67A6EF
80D94D8DD0BC64DA8FAF76B12BBC90C7B441833497F4FAAF7AFFFE22453504D1
C6C3D3F89787D8CE910F64CD7AC81F424C> |-
/y <1C60D8A8C9B7A73DDF325AF121518DD24D79A1D6297F2682F9AD5083CE90
6B71FC8BFB529DE7E11E55AF343C688ECAE2F8E1922FBFF6524D1DEA97BD39D9
CE14632F8473959D0898D7B7EF3E2B985A44859DA5885A0B7E1416032223E48B
C8A546760893052D5D557F50BFBB6793E5108395A50448013F59BB2036802753
A16DC97698BA68F4F4EAF1FDEAF39B9DD03FEBA42B0F0E35E3A4C6407754F9F9
648DF8C8F5539FA7CCFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQP+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 54 /six put
dup 58 /colon put
dup 61 /equal put
dup 62 /greater put
dup 73 /I put
dup 79 /O put
dup 107 /k put
dup 119 /w put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQP+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash /zero /one 
/two 3{/.notdef}rp /six 3{/.notdef}rp /colon 2{/.notdef}rp /equal /greater 
3{/.notdef}rp /B 6{/.notdef}rp /I /.notdef /K /.notdef /M 
/.notdef /O 2{/.notdef}rp /R /S 15{/.notdef}rp /c /.notdef 
/e /.notdef /g /.notdef /i /.notdef /k /l 
/.notdef /n /o 2{/.notdef}rp /r /s /t /u 
/v /w /.notdef /y 134{/.notdef}rp]
LTFDQP+TimesNewRomanPSMT nf
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
220.213 9.26695 mo
(KeySource)
[1.74359 1.07222 1.2075 1.34274 1.2075 1.20749 .804184 1.07222 0 ]xsh
220.604 12.027 mo
(work=112)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 1.2075 0 ]xsh
220.436 14.787 mo
(I/O: 0->16)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 1.2075 0 ]xsh
235.065 26.655 mo
235.065 24.9399 230.817 23.55 225.577 23.55 cv
220.338 23.55 216.09 24.9399 216.09 26.655 cv
216.09 28.37 220.338 29.7599 225.577 29.7599 cv
230.817 29.7599 235.065 28.37 235.065 26.655 cv
@
235.065 26.655 mo
235.065 24.9399 230.817 23.55 225.577 23.55 cv
220.338 23.55 216.09 24.9399 216.09 26.655 cv
216.09 28.37 220.338 29.7599 225.577 29.7599 cv
230.817 29.7599 235.065 28.37 235.065 26.655 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQP+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C7961C5101279ABC36EDE6472BD125007B977
158C4E9FC1695861D4B758EA0B2DA40929DA2764CDB06C7B17969E83F9B9F9DB
69731300937B8C87AE99> |-
/parenright <1C60D8A8C9B81F2C3AE115477765EA9A623E840D3901B96042A
533934EFD3574B5C656B3B3F7387587FE0D191D87B3E12F0EE70351D07A784B9
DEAB1C75708B7B3217116> |-
/comma <1C60D8A8C9B8707CDCE153BE174BF3415C26A42365D336CF0B48FBEC
E2CCCE829E5297D863F3AA9AC7B62E5A6EDE06B2E79A00ED16CF91E8C6953AD2
9D6E96EF745E730ABC2B82BE60EB1DBDD5981EF3D78237B91F6DA501> |-
/eight <1C60D8A8C9B7A73D9EB159A3CFECEE26FAC12AD4B6691842B4C84783
E84E1D8CD272AEC54014C937C15B810E403549328E3DC44B6A66E9E0AE5509A1
20FFE6F694340EC43D35C59CD7D1B2F14C1F1D5BA576A10F77E962817750FC0E
DC62627EE0E94BCE030A10C59143A015250A384C09B6A65F8572DF3FCBF68CF8
0D23E4E88D0691BD2178810DDABD5F40D8018F795B8CB5A52DDDD05F80E9A2BC
CDF3A5E14C701FBADF0447A7AE0E47FA8F86216AC25155BFF3569B19382CA905
7B18009FE630A2D7CEFDC3A4A3> |-
/b <1C60D8A8C9B7A73D9AFACE39B0C8DF9EB6083858E657E6E95D2C42AE2914
EB3C7C6FCB5E9F471C2055D213C552ACA7BC04F55BA26F3B77D8DFB74AC132BE
41DB935437CE3B007C16B65D849E2E6D1C61659F2699A17D9AEEDDD0EBC23EB8
70A7377D2AC9DB56D0296131C3A8254097E85D96> |-
/d <1C60D8A8C9B7A73DE3E5E50523E6C3667B38E45A4C51E0FEC84C813AB373
8B83F58EEDF7211177C6639AD2CCECEBC1915AB857B5701E72700D0D163B5F2F
58E5A8B520D7ED7F9880D10C1A6AAC1DEF76C68CB623039F59365031342DE694
26167CDA4201402D972AF8016480B0CF8CBDDE4940ABCEFD4C2D5F2FE77DC410
2439C361CA6330A182E6FD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQP+TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 56 /eight put
dup 98 /b put
dup 100 /d put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQP+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two 3{/.notdef}rp /six /.notdef 
/eight /.notdef /colon 2{/.notdef}rp /equal /greater 3{/.notdef}rp /B 
6{/.notdef}rp /I /.notdef /K /.notdef /M /.notdef /O 
2{/.notdef}rp /R /S 14{/.notdef}rp /b /c /d /e 
/.notdef /g /.notdef /i /.notdef /k /l /.notdef 
/n /o 2{/.notdef}rp /r /s /t /u /v 
/w /.notdef /y 134{/.notdef}rp]
LTFDQP+TimesNewRomanPSMT nf
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
217.898 27.2069 mo
(roundrobin\(8,8\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
225.577 17.34 mo
225.577 18.893 225.577 20.445 225.577 21.998 cv
@
225.232 21.825 mo
225.577 23.55 li
226.095 21.825 li
cp
@
225.232 21.825 mo
225.577 23.55 li
226.095 21.825 li
f
189.525 39.765 mo
189.525 38.05 185.277 36.66 180.038 36.66 cv
174.798 36.66 170.55 38.05 170.55 39.765 cv
170.55 41.4799 174.798 42.87 180.038 42.87 cv
185.277 42.87 189.525 41.4799 189.525 39.765 cv
@
189.525 39.765 mo
189.525 38.05 185.277 36.66 180.038 36.66 cv
174.798 36.66 170.55 38.05 170.55 39.765 cv
170.55 41.4799 174.798 42.87 180.038 42.87 cv
185.277 42.87 189.525 41.4799 189.525 39.765 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQP+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A73DB99E8D3796659F80CD8CFB6F4891658B64B2996E4
565B417E6680D9494DD50CBC7F026F985B68E97EBCD932CA0004F37BA5FD28FA
5EB6F0DC8CCF44A75B207DA88B4B0D8C53ACF90F9CAE1B04C7036C5BF682DB0A
BF0221167> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQP+TimesNewRomanPSMT /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQP+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two /.notdef /four /.notdef 
/six /.notdef /eight /.notdef /colon 2{/.notdef}rp /equal /greater 
3{/.notdef}rp /B 6{/.notdef}rp /I /.notdef /K /.notdef /M 
/.notdef /O 2{/.notdef}rp /R /S 14{/.notdef}rp /b /c 
/d /e /.notdef /g /.notdef /i /.notdef /k 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
/u /v /w /.notdef /y 134{/.notdef}rp]
LTFDQP+TimesNewRomanPSMT nf
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
172.358 40.3169 mo
(roundrobin\(4,4\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
218.332 28.725 mo
210.225 30.968 196.942 34.935 188.317 37.35 cv
@
188.662 36.832 mo
187.11 37.695 li
188.835 37.695 li
cp
@
188.662 36.832 mo
187.11 37.695 li
188.835 37.695 li
f
280.605 39.765 mo
280.605 38.05 276.357 36.66 271.117 36.66 cv
265.878 36.66 261.63 38.05 261.63 39.765 cv
261.63 41.4799 265.878 42.87 271.117 42.87 cv
276.357 42.87 280.605 41.4799 280.605 39.765 cv
@
280.605 39.765 mo
280.605 38.05 276.357 36.66 271.117 36.66 cv
265.878 36.66 261.63 38.05 261.63 39.765 cv
261.63 41.4799 265.878 42.87 271.117 42.87 cv
276.357 42.87 280.605 41.4799 280.605 39.765 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
263.438 40.3169 mo
(roundrobin\(4,4\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 0 ]xsh
232.822 28.725 mo
240.93 30.968 254.212 34.935 262.838 37.35 cv
@
262.32 37.695 mo
264.045 37.695 li
262.492 36.832 li
cp
@
262.32 37.695 mo
264.045 37.695 li
262.492 36.832 li
f
213.502 402.015 mo
213.502 400.3 209.255 398.91 204.015 398.91 cv
198.775 398.91 194.527 400.3 194.527 402.015 cv
194.527 403.73 198.775 405.12 204.015 405.12 cv
209.255 405.12 213.502 403.73 213.502 402.015 cv
@
213.502 402.015 mo
213.502 400.3 209.255 398.91 204.015 398.91 cv
198.775 398.91 194.527 400.3 194.527 402.015 cv
194.527 403.73 198.775 405.12 204.015 405.12 cv
209.255 405.12 213.502 403.73 213.502 402.015 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
196.335 402.567 mo
(roundrobin\(8,8\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
218.85 414.435 mo
218.85 412.72 212.208 411.33 204.015 411.33 cv
195.822 411.33 189.18 412.72 189.18 414.435 cv
189.18 416.15 195.822 417.54 204.015 417.54 cv
212.208 417.54 218.85 416.15 218.85 414.435 cv
@
218.85 414.435 mo
218.85 412.72 212.208 411.33 204.015 411.33 cv
195.822 411.33 189.18 412.72 189.18 414.435 cv
189.18 416.15 195.822 417.54 204.015 417.54 cv
212.208 417.54 218.85 416.15 218.85 414.435 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
190.902 414.987 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 .60376 1.20749 .60376 1.2075 .603745 1.2075 .603745 1.2075 .603745 1.2075 
.603745 1.2075 0 ]xsh
204.015 405.12 mo
204.015 406.5 204.015 408.053 204.015 409.605 cv
@
203.67 409.605 mo
204.015 411.33 li
204.532 409.605 li
cp
@
203.67 409.605 mo
204.015 411.33 li
204.532 409.605 li
f
123.975 52.8749 mo
123.975 51.16 119.727 49.77 114.488 49.77 cv
109.248 49.77 105 51.16 105 52.8749 cv
105 54.59 109.248 55.9799 114.488 55.9799 cv
119.727 55.9799 123.975 54.59 123.975 52.8749 cv
@
123.975 52.8749 mo
123.975 51.16 119.727 49.77 114.488 49.77 cv
109.248 49.77 105 51.16 105 52.8749 cv
105 54.59 109.248 55.9799 114.488 55.9799 cv
119.727 55.9799 123.975 54.59 123.975 52.8749 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
106.808 53.4269 mo
(roundrobin\(2,2\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603752 1.2075 0 ]xsh
170.722 40.455 mo
160.717 41.145 145.02 42.525 135.532 44.2499 cv
131.565 44.9399 125.7 47.528 121.215 49.598 cv
@
121.215 49.08 mo
119.835 50.288 li
121.56 49.943 li
cp
@
121.215 49.08 mo
119.835 50.288 li
121.56 49.943 li
f
189.525 52.8749 mo
189.525 51.16 185.277 49.77 180.038 49.77 cv
174.798 49.77 170.55 51.16 170.55 52.8749 cv
170.55 54.59 174.798 55.9799 180.038 55.9799 cv
185.277 55.9799 189.525 54.59 189.525 52.8749 cv
@
189.525 52.8749 mo
189.525 51.16 185.277 49.77 180.038 49.77 cv
174.798 49.77 170.55 51.16 170.55 52.8749 cv
170.55 54.59 174.798 55.9799 180.038 55.9799 cv
185.277 55.9799 189.525 54.59 189.525 52.8749 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
172.358 53.4269 mo
(roundrobin\(2,2\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
180.038 42.87 mo
180.038 44.423 180.038 46.32 180.038 48.045 cv
@
179.692 48.045 mo
180.038 49.77 li
180.555 48.045 li
cp
@
179.692 48.045 mo
180.038 49.77 li
180.555 48.045 li
f
156.75 235.725 mo
156.75 234.01 152.502 232.62 147.262 232.62 cv
142.023 232.62 137.775 234.01 137.775 235.725 cv
137.775 237.44 142.023 238.83 147.262 238.83 cv
152.502 238.83 156.75 237.44 156.75 235.725 cv
@
156.75 235.725 mo
156.75 234.01 152.502 232.62 147.262 232.62 cv
142.023 232.62 137.775 234.01 137.775 235.725 cv
137.775 237.44 142.023 238.83 147.262 238.83 cv
152.502 238.83 156.75 237.44 156.75 235.725 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
139.583 236.277 mo
(roundrobin\(4,4\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
158.475 248.145 mo
158.475 246.43 153.455 245.04 147.262 245.04 cv
141.07 245.04 136.05 246.43 136.05 248.145 cv
136.05 249.86 141.07 251.25 147.262 251.25 cv
153.455 251.25 158.475 249.86 158.475 248.145 cv
@
158.475 248.145 mo
158.475 246.43 153.455 245.04 147.262 245.04 cv
141.07 245.04 136.05 246.43 136.05 248.145 cv
136.05 249.86 141.07 251.25 147.262 251.25 cv
153.455 251.25 158.475 249.86 158.475 248.145 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
137.772 248.697 mo
(roundrobin\(1,1,1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 .60376 1.20749 .60376 1.20749 0 ]xsh
147.262 238.83 mo
147.262 240.21 147.262 241.762 147.262 243.315 cv
@
146.917 243.315 mo
147.262 245.04 li
147.78 243.315 li
cp
@
146.917 243.315 mo
147.262 245.04 li
147.78 243.315 li
f
90.855 65.985 mo
90.855 64.27 86.6073 62.8799 81.3675 62.8799 cv
76.1277 62.8799 71.88 64.27 71.88 65.985 cv
71.88 67.7 76.1277 69.09 81.3675 69.09 cv
86.6073 69.09 90.855 67.7 90.855 65.985 cv
@
90.855 65.985 mo
90.855 64.27 86.6073 62.8799 81.3675 62.8799 cv
76.1277 62.8799 71.88 64.27 71.88 65.985 cv
71.88 67.7 76.1277 69.09 81.3675 69.09 cv
86.6073 69.09 90.855 67.7 90.855 65.985 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
73.6878 66.5369 mo
(roundrobin\(1,1\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603745 1.2075 0 ]xsh
106.38 54.4279 mo
102.585 55.29 98.445 56.325 95.5125 57.36 cv
93.0975 58.395 89.475 60.6379 86.5425 62.535 cv
@
86.715 61.845 mo
85.5075 63.225 li
87.2325 62.707 li
cp
@
86.715 61.845 mo
85.5075 63.225 li
87.2325 62.707 li
f
123.975 65.985 mo
123.975 64.27 119.727 62.8799 114.488 62.8799 cv
109.248 62.8799 105 64.27 105 65.985 cv
105 67.7 109.248 69.09 114.488 69.09 cv
119.727 69.09 123.975 67.7 123.975 65.985 cv
@
123.975 65.985 mo
123.975 64.27 119.727 62.8799 114.488 62.8799 cv
109.248 62.8799 105 64.27 105 65.985 cv
105 67.7 109.248 69.09 114.488 69.09 cv
119.727 69.09 123.975 67.7 123.975 65.985 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
106.808 66.5369 mo
(roundrobin\(1,1\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603752 1.2075 0 ]xsh
114.488 55.9799 mo
114.488 57.5319 114.488 59.4299 114.488 61.155 cv
@
114.142 61.155 mo
114.488 62.8799 li
115.005 61.155 li
cp
@
114.142 61.155 mo
114.488 62.8799 li
115.005 61.155 li
f
96.72 126.705 mo
96.72 124.99 92.4723 123.6 87.2325 123.6 cv
81.9927 123.6 77.745 124.99 77.745 126.705 cv
77.745 128.42 81.9927 129.81 87.2325 129.81 cv
92.4723 129.81 96.72 128.42 96.72 126.705 cv
@
96.72 126.705 mo
96.72 124.99 92.4723 123.6 87.2325 123.6 cv
81.9927 123.6 77.745 124.99 77.745 126.705 cv
77.745 128.42 81.9927 129.81 87.2325 129.81 cv
92.4723 129.81 96.72 128.42 96.72 126.705 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
79.5529 127.257 mo
(roundrobin\(2,2\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603752 1.2075 0 ]xsh
96.72 141.885 mo
96.72 140.17 92.4723 138.78 87.2325 138.78 cv
81.9927 138.78 77.745 140.17 77.745 141.885 cv
77.745 143.6 81.9927 144.99 87.2325 144.99 cv
92.4723 144.99 96.72 143.6 96.72 141.885 cv
@
96.72 141.885 mo
96.72 140.17 92.4723 138.78 87.2325 138.78 cv
81.9927 138.78 77.745 140.17 77.745 141.885 cv
77.745 143.6 81.9927 144.99 87.2325 144.99 cv
92.4723 144.99 96.72 143.6 96.72 141.885 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
79.5529 142.437 mo
(roundrobin\(1,1\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603752 1.2075 0 ]xsh
87.2325 129.81 mo
87.2325 131.88 87.2325 134.812 87.2325 137.228 cv
@
86.8875 137.055 mo
87.2325 138.78 li
87.75 137.055 li
cp
@
86.8875 137.055 mo
87.2325 138.78 li
87.75 137.055 li
f
72.915 81.165 mo
72.915 77.926 69.594 75.3 65.4975 75.3 cv
61.4009 75.3 58.08 77.926 58.08 81.165 cv
58.08 84.404 61.4009 87.03 65.4975 87.03 cv
69.594 87.03 72.915 84.404 72.915 81.165 cv
@
72.915 81.165 mo
72.915 77.926 69.594 75.3 65.4975 75.3 cv
61.4009 75.3 58.08 77.926 58.08 81.165 cv
58.08 84.404 61.4009 87.03 65.4975 87.03 cv
69.594 87.03 72.915 84.404 72.915 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
61.741 78.9569 mo
(Identity)
[.804176 1.2075 1.07223 1.2075 .671371 .671364 .671371 0 ]xsh
61.7313 81.7169 mo
(work=6)
[1.7436 1.2075 .804176 1.2075 1.36205 0 ]xsh
60.9598 84.477 mo
(I/O: 1->1)
[.804176 .671371 1.7436 .671364 .603752 1.2075 .804176 1.36205 0 ]xsh
78.2625 68.918 mo
76.1925 70.988 73.605 73.575 71.19 75.818 cv
@
71.19 75.1279 mo
70.3275 76.6799 li
71.88 75.818 li
cp
@
71.19 75.1279 mo
70.3275 76.6799 li
71.88 75.818 li
f
90.855 81.165 mo
90.855 77.926 87.5341 75.3 83.4375 75.3 cv
79.3409 75.3 76.02 77.926 76.02 81.165 cv
76.02 84.404 79.3409 87.03 83.4375 87.03 cv
87.5341 87.03 90.855 84.404 90.855 81.165 cv
@
90.855 81.165 mo
90.855 77.926 87.5341 75.3 83.4375 75.3 cv
79.3409 75.3 76.02 77.926 76.02 81.165 cv
76.02 84.404 79.3409 87.03 83.4375 87.03 cv
87.5341 87.03 90.855 84.404 90.855 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
79.681 78.9569 mo
(Identity)
[.804176 1.2075 1.07222 1.2075 .671371 .671371 .671371 0 ]xsh
79.6713 81.7169 mo
(work=6)
[1.74359 1.2075 .804176 1.2075 1.36205 0 ]xsh
78.8997 84.477 mo
(I/O: 1->1)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
81.7125 69.09 mo
82.0575 70.47 82.23 72.368 82.4025 74.093 cv
@
81.885 73.575 mo
82.575 75.3 li
82.7475 73.575 li
cp
@
81.885 73.575 mo
82.575 75.3 li
82.7475 73.575 li
f
89.6475 96.345 mo
89.6475 94.6299 85.3998 93.2399 80.16 93.2399 cv
74.9202 93.2399 70.6725 94.6299 70.6725 96.345 cv
70.6725 98.06 74.9202 99.45 80.16 99.45 cv
85.3998 99.45 89.6475 98.06 89.6475 96.345 cv
@
89.6475 96.345 mo
89.6475 94.6299 85.3998 93.2399 80.16 93.2399 cv
74.9202 93.2399 70.6725 94.6299 70.6725 96.345 cv
70.6725 98.06 74.9202 99.45 80.16 99.45 cv
85.3998 99.45 89.6475 98.06 89.6475 96.345 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
72.4803 96.8969 mo
(roundrobin\(1,1\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603752 1.2075 0 ]xsh
92.235 111.525 mo
92.235 108.286 86.8288 105.66 80.16 105.66 cv
73.4912 105.66 68.085 108.286 68.085 111.525 cv
68.085 114.764 73.4912 117.39 80.16 117.39 cv
86.8288 117.39 92.235 114.764 92.235 111.525 cv
@
92.235 111.525 mo
92.235 108.286 86.8288 105.66 80.16 105.66 cv
73.4912 105.66 68.085 108.286 68.085 111.525 cv
68.085 114.764 73.4912 117.39 80.16 117.39 cv
86.8288 117.39 92.235 114.764 92.235 111.525 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQP+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDFB39C8FA0E3107D39E1E26D40368A6A59D36B799EDDCB
A8AF8BCAEA2E296C5BB00979C4073082C4AC62DAAE27F25BE45DFF121DF075F7
3D37111C10DFF7C6BD4BFE8AE73B4FADB84F0E8B5722DEA1CA14F5AFDC440B45
4F635F5576E82C8F45782F1EDE0EC9CA59D48E4C0F81> |-
/E <1C60D8A8C9B7D8BE1621F7F8DAEB9FA9CBAFC8F4F4D756F2191C830A0E4A
58F87E3DDE67D49AF36DDF5F1FB2D74CAA0A1A0C249C8C349E149A4722F92BF7
61EFA3C2F9EC864F14F3A3AC121B867A3642166A4B07211381D27468A1D61050
1454C0DD1325D701AB4ADD917E16E61514B3C2631A525AEC590FB4C52AA73BF6
506DADDCC92C07368DF00A34F77E6ED1C2061C6913B4C24C30A64720E240E09F
9DD8F5EF76F17E9EEAE569D41B7D8D946B46BFFC> |-
/a <1C60D8A8C9B77FE294851E8312417598C86A6256F86C70DE2C7AFF06FCE3
4BADEE28F3B8D02D3C60352D19569C8A11355E1235678015637DF6C7E4A05E8E
A8AB948BF076D376030D74D5BF1D25D6B1436CBFF068CFC521B6EF1846E35D0E
2A4D1C4888BBA14114C326082B33961EF18B6F0B661AC7CDF50B0B0D80CC5ED8
71668C27B3C878E43E83D293BA1B1F771221D32DA7404867CEA1760CC79EAA61
6682686BC92138B01A5FF6B55D314BD1AA96EE89C141B8E9EB46C16F1B31BD66
B910EA6BBA> |-
/h <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA64197CEECB76B9E4
D2E9F717E2E21BA6AFBDB9D486017DE1334EE2B8AC7E25B49C380829180892EE
A76E25D726C9DCA303C64F5FE456E4A565D8D0ED565D009BA02A6DD13A835659
5990FC1760FC10BB02F96DEC2D5390B1C4D4059132A392595F028220DA07D2CD
E701448700C9> |-
/m <1C60D8A8C9B6FF86DEBE529995F26ADC252ABAF4F8ABCE39F6B951A24C86
82F3B72A552C5D46A333AAEC49746F27474921C947B29E9EEE21EF479E8AC4CB
A64B9B4BF4B54D7069EE8C71930A689A0AC30AA5DB406CB2F2DF67D1DFA36762
A8298043AAD8738E3C2E6D8E87DCF89210EA6A7696675667850CACB8BD85BF1A
9C23A6EB480778B459116760FD79DE8BA673C0A52BBAEAA003DFFA86FA6EC61F
B9955126552099FD6C946BD155266FCC648BAFF24A5063CAAF26> |-
/p <1C60D8A8C9B7A73D9AFACE39AE6BAA6E09D7322029CE296F526808097535
692942DF193E08360A1A27EB6A08251F7D53D3FA96D22918185F2823E13833F6
44411211FB9E60C91D24768368C1EE71DFEA1AF8285D596D61CE8A067C14BC2E
E1974A4DF14D782DBEDB8D2CE5673BB9634CC4945A7FA5A5E1B87E0F2D94F438
C21548DAE429B68406206429A87E1B462DA7A9D2> |-
/x <1C60D8A8C9B7A73DD670D8CCCBFBC4E258D7CAA3ED17D069C025C1A2420A
81D4B3EAD7110946DAC3BA40217DDD18B672D1C19269266B39D87F9C1DDA90BD
8FC71EBFE3B2169703196A9FC02F9EA267A90B94DB1FAA5C105A1B22ABB76205
ADA50D456170C13F6F28FC77F3978776E97B76A3DEF1976915B787070DC57673
F3C0FA2B4E9DEFEF7147D4269144499ACAFBAFD930E1A038534DF3D883A96117
05279F3EC76B84BD5055C0FF3A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQP+TimesNewRomanPSMT /Encoding get
dup 67 /C put
dup 69 /E put
dup 97 /a put
dup 104 /h put
dup 109 /m put
dup 112 /p put
dup 120 /x put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQP+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two /.notdef /four /.notdef 
/six /.notdef /eight /.notdef /colon 2{/.notdef}rp /equal /greater 
3{/.notdef}rp /B /C /.notdef /E 3{/.notdef}rp /I /.notdef 
/K /.notdef /M /.notdef /O 2{/.notdef}rp /R /S 
13{/.notdef}rp /a /b /c /d /e /.notdef /g 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/x /y 134{/.notdef}rp]
LTFDQP+TimesNewRomanPSMT nf
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
70.9722 109.317 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
75.7901 112.077 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
75.6222 114.837 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
80.16 99.45 mo
80.16 100.657 80.16 102.382 80.16 103.935 cv
@
79.815 103.935 mo
80.16 105.66 li
80.6775 103.935 li
cp
@
79.815 103.935 mo
80.16 105.66 li
80.6775 103.935 li
f
69.9825 85.8229 mo
72.0525 87.893 74.295 90.1349 76.1925 92.205 cv
@
75.8475 92.3779 mo
77.2275 93.412 li
76.365 91.86 li
cp
@
75.8475 92.3779 mo
77.2275 93.412 li
76.365 91.86 li
f
82.23 87.03 mo
81.885 88.582 81.54 90.1349 81.195 91.6879 cv
@
80.85 91.515 mo
80.85 93.2399 li
81.7125 91.6879 li
cp
@
80.85 91.515 mo
80.85 93.2399 li
81.7125 91.6879 li
f
82.92 117.218 mo
83.61 118.77 84.4725 120.495 85.1625 122.048 cv
@
84.8175 122.22 mo
85.8525 123.6 li
85.5075 121.875 li
cp
@
84.8175 122.22 mo
85.8525 123.6 li
85.5075 121.875 li
f
112.935 81.165 mo
112.935 77.926 109.614 75.3 105.517 75.3 cv
101.421 75.3 98.1 77.926 98.1 81.165 cv
98.1 84.404 101.421 87.03 105.517 87.03 cv
109.614 87.03 112.935 84.404 112.935 81.165 cv
@
112.935 81.165 mo
112.935 77.926 109.614 75.3 105.517 75.3 cv
101.421 75.3 98.1 77.926 98.1 81.165 cv
98.1 84.404 101.421 87.03 105.517 87.03 cv
109.614 87.03 112.935 84.404 112.935 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
101.761 78.9569 mo
(Identity)
[.804176 1.2075 1.07222 1.2075 .671371 .671371 .671371 0 ]xsh
101.751 81.7169 mo
(work=6)
[1.74359 1.2075 .804176 1.2075 1.36205 0 ]xsh
100.98 84.477 mo
(I/O: 1->1)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
112.59 69.09 mo
111.727 70.643 110.52 72.54 109.485 74.265 cv
@
109.14 74.093 mo
108.622 75.818 li
109.83 74.4379 li
cp
@
109.14 74.093 mo
108.622 75.818 li
109.83 74.4379 li
f
130.875 81.165 mo
130.875 77.926 127.554 75.3 123.457 75.3 cv
119.361 75.3 116.04 77.926 116.04 81.165 cv
116.04 84.404 119.361 87.03 123.457 87.03 cv
127.554 87.03 130.875 84.404 130.875 81.165 cv
@
130.875 81.165 mo
130.875 77.926 127.554 75.3 123.457 75.3 cv
119.361 75.3 116.04 77.926 116.04 81.165 cv
116.04 84.404 119.361 87.03 123.457 87.03 cv
127.554 87.03 130.875 84.404 130.875 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
119.701 78.9569 mo
(Identity)
[.804176 1.2075 1.07222 1.2075 .671364 .671371 .671371 0 ]xsh
119.691 81.7169 mo
(work=6)
[1.74359 1.2075 .804176 1.2075 1.36205 0 ]xsh
118.92 84.477 mo
(I/O: 1->1)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
116.385 69.09 mo
117.247 70.643 118.455 72.54 119.49 74.265 cv
@
119.145 74.4379 mo
120.352 75.818 li
119.835 74.093 li
cp
@
119.145 74.4379 mo
120.352 75.818 li
119.835 74.093 li
f
118.282 96.345 mo
118.282 94.6299 114.035 93.2399 108.795 93.2399 cv
103.555 93.2399 99.3075 94.6299 99.3075 96.345 cv
99.3075 98.06 103.555 99.45 108.795 99.45 cv
114.035 99.45 118.282 98.06 118.282 96.345 cv
@
118.282 96.345 mo
118.282 94.6299 114.035 93.2399 108.795 93.2399 cv
103.555 93.2399 99.3075 94.6299 99.3075 96.345 cv
99.3075 98.06 103.555 99.45 108.795 99.45 cv
114.035 99.45 118.282 98.06 118.282 96.345 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
101.115 96.8969 mo
(roundrobin\(1,1\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603745 1.2075 0 ]xsh
120.87 111.525 mo
120.87 108.286 115.464 105.66 108.795 105.66 cv
102.126 105.66 96.72 108.286 96.72 111.525 cv
96.72 114.764 102.126 117.39 108.795 117.39 cv
115.464 117.39 120.87 114.764 120.87 111.525 cv
@
120.87 111.525 mo
120.87 108.286 115.464 105.66 108.795 105.66 cv
102.126 105.66 96.72 108.286 96.72 111.525 cv
96.72 114.764 102.126 117.39 108.795 117.39 cv
115.464 117.39 120.87 114.764 120.87 111.525 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
99.6072 109.317 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
104.425 112.077 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
104.257 114.837 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
108.795 99.45 mo
108.795 100.657 108.795 102.382 108.795 103.935 cv
@
108.45 103.935 mo
108.795 105.66 li
109.312 103.935 li
cp
@
108.45 103.935 mo
108.795 105.66 li
109.312 103.935 li
f
106.725 87.03 mo
107.07 88.582 107.415 90.1349 107.76 91.6879 cv
@
107.242 91.6879 mo
108.105 93.2399 li
108.105 91.515 li
cp
@
107.242 91.6879 mo
108.105 93.2399 li
108.105 91.515 li
f
118.972 85.8229 mo
116.902 87.893 114.66 90.1349 112.762 92.205 cv
@
112.59 91.86 mo
111.727 93.412 li
113.107 92.3779 li
cp
@
112.59 91.86 mo
111.727 93.412 li
113.107 92.3779 li
f
101.895 116.355 mo
98.9625 118.425 95.34 120.84 92.58 122.91 cv
@
92.58 122.393 mo
91.3725 123.773 li
93.0975 123.082 li
cp
@
92.58 122.393 mo
91.3725 123.773 li
93.0975 123.082 li
f
89.475 159.825 mo
89.475 156.586 84.0688 153.96 77.4 153.96 cv
70.7312 153.96 65.325 156.586 65.325 159.825 cv
65.325 163.064 70.7312 165.69 77.4 165.69 cv
84.0688 165.69 89.475 163.064 89.475 159.825 cv
@
89.475 159.825 mo
89.475 156.586 84.0688 153.96 77.4 153.96 cv
70.7312 153.96 65.325 156.586 65.325 159.825 cv
65.325 163.064 70.7312 165.69 77.4 165.69 cv
84.0688 165.69 89.475 163.064 89.475 159.825 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
68.2122 157.617 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
73.0301 160.377 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
72.8622 163.137 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
85.5075 144.99 mo
84.3 147.232 82.575 150.338 81.0225 153.098 cv
@
80.85 152.407 mo
80.505 154.132 li
81.7125 152.753 li
cp
@
80.85 152.407 mo
80.505 154.132 li
81.7125 152.753 li
f
116.73 159.825 mo
116.73 156.586 111.324 153.96 104.655 153.96 cv
97.9862 153.96 92.58 156.586 92.58 159.825 cv
92.58 163.064 97.9862 165.69 104.655 165.69 cv
111.324 165.69 116.73 163.064 116.73 159.825 cv
@
116.73 159.825 mo
116.73 156.586 111.324 153.96 104.655 153.96 cv
97.9862 153.96 92.58 156.586 92.58 159.825 cv
92.58 163.064 97.9862 165.69 104.655 165.69 cv
111.324 165.69 116.73 163.064 116.73 159.825 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
95.4672 157.617 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
100.285 160.377 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
100.117 163.137 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
90.165 144.818 mo
92.235 147.06 95.34 150.338 98.2725 153.27 cv
@
97.9275 153.615 mo
99.48 154.478 li
98.6175 152.925 li
cp
@
97.9275 153.615 mo
99.48 154.478 li
98.6175 152.925 li
f
108.967 177.765 mo
108.967 176.05 104.72 174.66 99.48 174.66 cv
94.2402 174.66 89.9925 176.05 89.9925 177.765 cv
89.9925 179.48 94.2402 180.87 99.48 180.87 cv
104.72 180.87 108.967 179.48 108.967 177.765 cv
@
108.967 177.765 mo
108.967 176.05 104.72 174.66 99.48 174.66 cv
94.2402 174.66 89.9925 176.05 89.9925 177.765 cv
89.9925 179.48 94.2402 180.87 99.48 180.87 cv
104.72 180.87 108.967 179.48 108.967 177.765 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
91.8003 178.317 mo
(roundrobin\(1,1\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603745 1.2075 0 ]xsh
108.967 192.945 mo
108.967 191.23 104.72 189.84 99.48 189.84 cv
94.2402 189.84 89.9925 191.23 89.9925 192.945 cv
89.9925 194.66 94.2402 196.05 99.48 196.05 cv
104.72 196.05 108.967 194.66 108.967 192.945 cv
@
108.967 192.945 mo
108.967 191.23 104.72 189.84 99.48 189.84 cv
94.2402 189.84 89.9925 191.23 89.9925 192.945 cv
89.9925 194.66 94.2402 196.05 99.48 196.05 cv
104.72 196.05 108.967 194.66 108.967 192.945 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
91.8003 193.497 mo
(roundrobin\(2,2\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603745 1.2075 0 ]xsh
99.48 180.87 mo
99.48 182.94 99.48 185.873 99.48 188.288 cv
@
99.135 188.115 mo
99.48 189.84 li
99.9975 188.115 li
cp
@
99.135 188.115 mo
99.48 189.84 li
99.9975 188.115 li
f
83.61 164.828 mo
87.06 167.76 91.545 171.382 94.65 173.97 cv
@
94.1325 174.143 mo
95.8575 174.832 li
94.65 173.453 li
cp
@
94.1325 174.143 mo
95.8575 174.832 li
94.65 173.453 li
f
102.93 165.69 mo
102.24 168.105 101.55 170.865 100.86 173.107 cv
@
100.515 172.935 mo
100.342 174.66 li
101.377 173.107 li
cp
@
100.515 172.935 mo
100.342 174.66 li
101.377 173.107 li
f
106.38 208.125 mo
106.38 204.886 100.974 202.26 94.305 202.26 cv
87.6362 202.26 82.23 204.886 82.23 208.125 cv
82.23 211.364 87.6362 213.99 94.305 213.99 cv
100.974 213.99 106.38 211.364 106.38 208.125 cv
@
106.38 208.125 mo
106.38 204.886 100.974 202.26 94.305 202.26 cv
87.6362 202.26 82.23 204.886 82.23 208.125 cv
82.23 211.364 87.6362 213.99 94.305 213.99 cv
100.974 213.99 106.38 211.364 106.38 208.125 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
85.1172 205.917 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
89.9351 208.677 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
89.7673 211.437 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
98.445 196.05 mo
97.9275 197.43 97.41 198.982 96.8925 200.535 cv
@
96.375 200.535 mo
96.2025 202.26 li
97.2375 200.88 li
cp
@
96.375 200.535 mo
96.2025 202.26 li
97.2375 200.88 li
f
133.635 208.125 mo
133.635 204.886 128.229 202.26 121.56 202.26 cv
114.891 202.26 109.485 204.886 109.485 208.125 cv
109.485 211.364 114.891 213.99 121.56 213.99 cv
128.229 213.99 133.635 211.364 133.635 208.125 cv
@
133.635 208.125 mo
133.635 204.886 128.229 202.26 121.56 202.26 cv
114.891 202.26 109.485 204.886 109.485 208.125 cv
109.485 211.364 114.891 213.99 121.56 213.99 cv
128.229 213.99 133.635 211.364 133.635 208.125 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
112.372 205.917 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
117.19 208.677 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
117.022 211.437 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
103.62 195.705 mo
106.38 197.603 110.002 200.19 113.28 202.26 cv
@
113.107 202.605 mo
114.66 203.295 li
113.625 201.915 li
cp
@
113.107 202.605 mo
114.66 203.295 li
113.625 201.915 li
f
131.047 223.305 mo
131.047 221.59 126.8 220.2 121.56 220.2 cv
116.32 220.2 112.072 221.59 112.072 223.305 cv
112.072 225.02 116.32 226.41 121.56 226.41 cv
126.8 226.41 131.047 225.02 131.047 223.305 cv
@
131.047 223.305 mo
131.047 221.59 126.8 220.2 121.56 220.2 cv
116.32 220.2 112.072 221.59 112.072 223.305 cv
112.072 225.02 116.32 226.41 121.56 226.41 cv
126.8 226.41 131.047 225.02 131.047 223.305 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
113.88 223.857 mo
(roundrobin\(2,2\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603745 1.2075 0 ]xsh
125.527 226.065 mo
127.252 227.273 129.15 228.48 130.53 229.17 cv
132.945 230.378 136.05 231.585 139.155 232.793 cv
@
139.155 233.31 mo
140.88 233.482 li
139.5 232.448 li
cp
@
139.155 233.31 mo
140.88 233.482 li
139.5 232.448 li
f
102.24 212.61 mo
106.38 214.853 111.555 217.785 115.35 219.855 cv
@
115.005 220.2 mo
116.73 220.545 li
115.35 219.338 li
cp
@
115.005 220.2 mo
116.73 220.545 li
115.35 219.338 li
f
121.56 213.99 mo
121.56 215.543 121.56 217.095 121.56 218.648 cv
@
121.215 218.475 mo
121.56 220.2 li
122.077 218.475 li
cp
@
121.215 218.475 mo
121.56 220.2 li
122.077 218.475 li
f
176.415 65.985 mo
176.415 64.27 172.167 62.8799 166.927 62.8799 cv
161.688 62.8799 157.44 64.27 157.44 65.985 cv
157.44 67.7 161.688 69.09 166.927 69.09 cv
172.167 69.09 176.415 67.7 176.415 65.985 cv
@
176.415 65.985 mo
176.415 64.27 172.167 62.8799 166.927 62.8799 cv
161.688 62.8799 157.44 64.27 157.44 65.985 cv
157.44 67.7 161.688 69.09 166.927 69.09 cv
172.167 69.09 176.415 67.7 176.415 65.985 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
159.248 66.5369 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
177.105 55.8069 mo
175.207 57.705 172.965 59.9479 171.067 61.845 cv
@
170.722 61.4999 mo
169.86 63.0529 li
171.412 62.1899 li
cp
@
170.722 61.4999 mo
169.86 63.0529 li
171.412 62.1899 li
f
202.635 65.985 mo
202.635 64.27 198.387 62.8799 193.147 62.8799 cv
187.908 62.8799 183.66 64.27 183.66 65.985 cv
183.66 67.7 187.908 69.09 193.147 69.09 cv
198.387 69.09 202.635 67.7 202.635 65.985 cv
@
202.635 65.985 mo
202.635 64.27 198.387 62.8799 193.147 62.8799 cv
187.908 62.8799 183.66 64.27 183.66 65.985 cv
183.66 67.7 187.908 69.09 193.147 69.09 cv
198.387 69.09 202.635 67.7 202.635 65.985 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
185.468 66.5369 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
182.97 55.8069 mo
184.867 57.705 187.11 59.9479 189.007 61.845 cv
@
188.662 62.1899 mo
190.215 63.0529 li
189.352 61.4999 li
cp
@
188.662 62.1899 mo
190.215 63.0529 li
189.352 61.4999 li
f
169.515 126.705 mo
169.515 124.99 165.267 123.6 160.027 123.6 cv
154.788 123.6 150.54 124.99 150.54 126.705 cv
150.54 128.42 154.788 129.81 160.027 129.81 cv
165.267 129.81 169.515 128.42 169.515 126.705 cv
@
169.515 126.705 mo
169.515 124.99 165.267 123.6 160.027 123.6 cv
154.788 123.6 150.54 124.99 150.54 126.705 cv
150.54 128.42 154.788 129.81 160.027 129.81 cv
165.267 129.81 169.515 128.42 169.515 126.705 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
152.348 127.257 mo
(roundrobin\(2,2\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
167.79 141.885 mo
167.79 138.646 162.384 136.02 155.715 136.02 cv
149.046 136.02 143.64 138.646 143.64 141.885 cv
143.64 145.124 149.046 147.75 155.715 147.75 cv
162.384 147.75 167.79 145.124 167.79 141.885 cv
@
167.79 141.885 mo
167.79 138.646 162.384 136.02 155.715 136.02 cv
149.046 136.02 143.64 138.646 143.64 141.885 cv
143.64 145.124 149.046 147.75 155.715 147.75 cv
162.384 147.75 167.79 145.124 167.79 141.885 cv
.455 .686 .812 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
146.527 139.677 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
151.345 142.437 mo
(work=28)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
151.177 145.197 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
159.165 129.81 mo
158.82 131.018 158.302 132.743 157.785 134.295 cv
@
157.267 134.295 mo
157.267 136.02 li
158.13 134.468 li
cp
@
157.267 134.295 mo
157.267 136.02 li
158.13 134.468 li
f
158.475 81.165 mo
158.475 77.926 155.154 75.3 151.057 75.3 cv
146.961 75.3 143.64 77.926 143.64 81.165 cv
143.64 84.404 146.961 87.03 151.057 87.03 cv
155.154 87.03 158.475 84.404 158.475 81.165 cv
@
158.475 81.165 mo
158.475 77.926 155.154 75.3 151.057 75.3 cv
146.961 75.3 143.64 77.926 143.64 81.165 cv
143.64 84.404 146.961 87.03 151.057 87.03 cv
155.154 87.03 158.475 84.404 158.475 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
147.301 78.9569 mo
(Identity)
[.804184 1.20749 1.07224 1.20749 .671371 .671371 .671371 0 ]xsh
147.291 81.7169 mo
(work=6)
[1.74359 1.2075 .804169 1.2075 1.36205 0 ]xsh
146.52 84.477 mo
(I/O: 1->1)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
163.822 68.918 mo
161.752 70.988 159.165 73.575 156.75 75.818 cv
@
156.75 75.1279 mo
155.888 76.6799 li
157.44 75.818 li
cp
@
156.75 75.1279 mo
155.888 76.6799 li
157.44 75.818 li
f
176.415 81.165 mo
176.415 77.926 173.094 75.3 168.997 75.3 cv
164.901 75.3 161.58 77.926 161.58 81.165 cv
161.58 84.404 164.901 87.03 168.997 87.03 cv
173.094 87.03 176.415 84.404 176.415 81.165 cv
@
176.415 81.165 mo
176.415 77.926 173.094 75.3 168.997 75.3 cv
164.901 75.3 161.58 77.926 161.58 81.165 cv
161.58 84.404 164.901 87.03 168.997 87.03 cv
173.094 87.03 176.415 84.404 176.415 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
165.241 78.9569 mo
(Identity)
[.804184 1.20749 1.07224 1.20749 .671371 .671371 .671371 0 ]xsh
165.231 81.7169 mo
(work=6)
[1.74359 1.2075 .804169 1.2075 1.36205 0 ]xsh
164.46 84.477 mo
(I/O: 1->1)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
167.272 69.09 mo
167.617 70.47 167.79 72.368 167.962 74.093 cv
@
167.445 73.575 mo
168.135 75.3 li
168.307 73.575 li
cp
@
167.445 73.575 mo
168.135 75.3 li
168.307 73.575 li
f
169.515 96.345 mo
169.515 94.6299 165.267 93.2399 160.027 93.2399 cv
154.788 93.2399 150.54 94.6299 150.54 96.345 cv
150.54 98.06 154.788 99.45 160.027 99.45 cv
165.267 99.45 169.515 98.06 169.515 96.345 cv
@
169.515 96.345 mo
169.515 94.6299 165.267 93.2399 160.027 93.2399 cv
154.788 93.2399 150.54 94.6299 150.54 96.345 cv
150.54 98.06 154.788 99.45 160.027 99.45 cv
165.267 99.45 169.515 98.06 169.515 96.345 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
152.348 96.8969 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
172.102 111.525 mo
172.102 108.286 166.696 105.66 160.027 105.66 cv
153.359 105.66 147.952 108.286 147.952 111.525 cv
147.952 114.764 153.359 117.39 160.027 117.39 cv
166.696 117.39 172.102 114.764 172.102 111.525 cv
@
172.102 111.525 mo
172.102 108.286 166.696 105.66 160.027 105.66 cv
153.359 105.66 147.952 108.286 147.952 111.525 cv
147.952 114.764 153.359 117.39 160.027 117.39 cv
166.696 117.39 172.102 114.764 172.102 111.525 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
150.84 109.317 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
155.658 112.077 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
155.49 114.837 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
160.027 99.45 mo
160.027 100.657 160.027 102.382 160.027 103.935 cv
@
159.682 103.935 mo
160.027 105.66 li
160.545 103.935 li
cp
@
159.682 103.935 mo
160.027 105.66 li
160.545 103.935 li
f
154.162 86.512 mo
155.197 88.238 156.405 90.1349 157.44 91.86 cv
@
156.922 91.86 mo
158.13 93.2399 li
157.785 91.515 li
cp
@
156.922 91.86 mo
158.13 93.2399 li
157.785 91.515 li
f
165.892 86.512 mo
164.857 88.238 163.65 90.1349 162.615 91.86 cv
@
162.27 91.515 mo
161.925 93.2399 li
163.132 91.86 li
cp
@
162.27 91.515 mo
161.925 93.2399 li
163.132 91.86 li
f
160.027 117.39 mo
160.027 118.943 160.027 120.495 160.027 122.048 cv
@
159.682 121.875 mo
160.027 123.6 li
160.545 121.875 li
cp
@
159.682 121.875 mo
160.027 123.6 li
160.545 121.875 li
f
198.495 81.165 mo
198.495 77.926 195.174 75.3 191.077 75.3 cv
186.981 75.3 183.66 77.926 183.66 81.165 cv
183.66 84.404 186.981 87.03 191.077 87.03 cv
195.174 87.03 198.495 84.404 198.495 81.165 cv
@
198.495 81.165 mo
198.495 77.926 195.174 75.3 191.077 75.3 cv
186.981 75.3 183.66 77.926 183.66 81.165 cv
183.66 84.404 186.981 87.03 191.077 87.03 cv
195.174 87.03 198.495 84.404 198.495 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
187.321 78.9569 mo
(Identity)
[.804184 1.20749 1.07224 1.20749 .671371 .671371 .671371 0 ]xsh
187.311 81.7169 mo
(work=6)
[1.74359 1.2075 .804169 1.2075 1.36205 0 ]xsh
186.54 84.477 mo
(I/O: 1->1)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
192.802 69.09 mo
192.457 70.47 192.285 72.368 192.112 74.093 cv
@
191.767 73.575 mo
191.94 75.3 li
192.63 73.575 li
cp
@
191.767 73.575 mo
191.94 75.3 li
192.63 73.575 li
f
216.435 81.165 mo
216.435 77.926 213.114 75.3 209.017 75.3 cv
204.921 75.3 201.6 77.926 201.6 81.165 cv
201.6 84.404 204.921 87.03 209.017 87.03 cv
213.114 87.03 216.435 84.404 216.435 81.165 cv
@
216.435 81.165 mo
216.435 77.926 213.114 75.3 209.017 75.3 cv
204.921 75.3 201.6 77.926 201.6 81.165 cv
201.6 84.404 204.921 87.03 209.017 87.03 cv
213.114 87.03 216.435 84.404 216.435 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
205.261 78.9569 mo
(Identity)
[.804184 1.20749 1.07224 1.20749 .671371 .671371 .671371 0 ]xsh
205.251 81.7169 mo
(work=6)
[1.74359 1.2075 .804169 1.2075 1.36205 0 ]xsh
204.48 84.477 mo
(I/O: 1->1)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
196.252 68.918 mo
198.15 70.8149 200.738 73.2299 202.98 75.473 cv
@
202.635 75.818 mo
204.188 76.6799 li
203.325 75.1279 li
cp
@
202.635 75.818 mo
204.188 76.6799 li
203.325 75.1279 li
f
203.842 96.345 mo
203.842 94.6299 199.595 93.2399 194.355 93.2399 cv
189.115 93.2399 184.867 94.6299 184.867 96.345 cv
184.867 98.06 189.115 99.45 194.355 99.45 cv
199.595 99.45 203.842 98.06 203.842 96.345 cv
@
203.842 96.345 mo
203.842 94.6299 199.595 93.2399 194.355 93.2399 cv
189.115 93.2399 184.867 94.6299 184.867 96.345 cv
184.867 98.06 189.115 99.45 194.355 99.45 cv
199.595 99.45 203.842 98.06 203.842 96.345 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
186.675 96.8969 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
206.43 111.525 mo
206.43 108.286 201.024 105.66 194.355 105.66 cv
187.686 105.66 182.28 108.286 182.28 111.525 cv
182.28 114.764 187.686 117.39 194.355 117.39 cv
201.024 117.39 206.43 114.764 206.43 111.525 cv
@
206.43 111.525 mo
206.43 108.286 201.024 105.66 194.355 105.66 cv
187.686 105.66 182.28 108.286 182.28 111.525 cv
182.28 114.764 187.686 117.39 194.355 117.39 cv
201.024 117.39 206.43 114.764 206.43 111.525 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
185.167 109.317 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
189.985 112.077 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
189.817 114.837 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
194.355 99.45 mo
194.355 100.657 194.355 102.382 194.355 103.935 cv
@
194.01 103.935 mo
194.355 105.66 li
194.872 103.935 li
cp
@
194.01 103.935 mo
194.355 105.66 li
194.872 103.935 li
f
192.285 87.03 mo
192.63 88.582 192.975 90.1349 193.32 91.6879 cv
@
192.802 91.6879 mo
193.665 93.2399 li
193.665 91.515 li
cp
@
192.802 91.6879 mo
193.665 93.2399 li
193.665 91.515 li
f
204.532 85.8229 mo
202.462 87.893 200.22 90.1349 198.322 92.205 cv
@
198.15 91.86 mo
197.288 93.412 li
198.667 92.3779 li
cp
@
198.15 91.86 mo
197.288 93.412 li
198.667 92.3779 li
f
186.938 116.182 mo
185.04 117.218 183.142 118.08 181.762 118.77 cv
178.312 120.495 172.447 122.565 167.79 124.118 cv
@
168.307 123.428 mo
166.755 124.462 li
168.48 124.29 li
cp
@
168.307 123.428 mo
166.755 124.462 li
168.48 124.29 li
f
154.68 147.75 mo
153.127 155.685 150.885 169.485 150.885 177.765 cv
150.885 177.765 150.885 177.765 150.885 208.125 cv
150.885 214.507 149.16 225.375 147.952 231.412 cv
@
147.607 230.895 mo
147.78 232.62 li
148.47 230.895 li
cp
@
147.607 230.895 mo
147.78 232.62 li
148.47 230.895 li
f
130.357 263.325 mo
130.357 260.086 124.951 257.46 118.282 257.46 cv
111.614 257.46 106.207 260.086 106.207 263.325 cv
106.207 266.564 111.614 269.19 118.282 269.19 cv
124.951 269.19 130.357 266.564 130.357 263.325 cv
@
130.357 263.325 mo
130.357 260.086 124.951 257.46 118.282 257.46 cv
111.614 257.46 106.207 260.086 106.207 263.325 cv
106.207 266.564 111.614 269.19 118.282 269.19 cv
124.951 269.19 130.357 266.564 130.357 263.325 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
109.095 261.117 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
113.913 263.877 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
113.745 266.637 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
142.088 250.905 mo
138.12 252.975 132.772 255.735 128.115 258.15 cv
@
127.942 257.805 mo
126.562 259.012 li
128.288 258.495 li
cp
@
127.942 257.805 mo
126.562 259.012 li
128.288 258.495 li
f
157.612 263.325 mo
157.612 260.086 152.206 257.46 145.538 257.46 cv
138.869 257.46 133.462 260.086 133.462 263.325 cv
133.462 266.564 138.869 269.19 145.538 269.19 cv
152.206 269.19 157.612 266.564 157.612 263.325 cv
@
157.612 263.325 mo
157.612 260.086 152.206 257.46 145.538 257.46 cv
138.869 257.46 133.462 260.086 133.462 263.325 cv
133.462 266.564 138.869 269.19 145.538 269.19 cv
152.206 269.19 157.612 266.564 157.612 263.325 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
136.35 261.117 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
141.168 263.877 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
141 266.637 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
146.917 251.25 mo
146.745 252.63 146.572 254.528 146.4 256.253 cv
@
146.055 255.735 mo
146.227 257.46 li
146.917 255.735 li
cp
@
146.055 255.735 mo
146.227 257.46 li
146.917 255.735 li
f
184.867 263.325 mo
184.867 260.086 179.461 257.46 172.792 257.46 cv
166.124 257.46 160.717 260.086 160.717 263.325 cv
160.717 266.564 166.124 269.19 172.792 269.19 cv
179.461 269.19 184.867 266.564 184.867 263.325 cv
@
184.867 263.325 mo
184.867 260.086 179.461 257.46 172.792 257.46 cv
166.124 257.46 160.717 260.086 160.717 263.325 cv
160.717 266.564 166.124 269.19 172.792 269.19 cv
179.461 269.19 184.867 266.564 184.867 263.325 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
163.605 261.117 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
168.423 263.877 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
168.255 266.637 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
151.92 250.905 mo
155.197 252.975 159.682 255.562 163.65 257.978 cv
@
163.305 258.323 mo
165.03 258.84 li
163.822 257.632 li
cp
@
163.305 258.323 mo
165.03 258.84 li
163.822 257.632 li
f
212.122 263.325 mo
212.122 260.086 206.716 257.46 200.047 257.46 cv
193.379 257.46 187.972 260.086 187.972 263.325 cv
187.972 266.564 193.379 269.19 200.047 269.19 cv
206.716 269.19 212.122 266.564 212.122 263.325 cv
@
212.122 263.325 mo
212.122 260.086 206.716 257.46 200.047 257.46 cv
193.379 257.46 187.972 260.086 187.972 263.325 cv
187.972 266.564 193.379 269.19 200.047 269.19 cv
206.716 269.19 212.122 266.564 212.122 263.325 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
190.86 261.117 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
195.678 263.877 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
195.51 266.637 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
154.852 250.388 mo
155.888 250.732 157.095 251.078 157.957 251.25 cv
167.617 253.665 177.45 254.873 186.938 257.46 cv
187.627 257.632 188.662 257.978 189.697 258.495 cv
@
189.697 259.012 mo
191.422 259.185 li
190.042 258.15 li
cp
@
189.697 259.012 mo
191.422 259.185 li
190.042 258.15 li
f
164.512 278.505 mo
164.512 276.79 159.492 275.4 153.3 275.4 cv
147.108 275.4 142.088 276.79 142.088 278.505 cv
142.088 280.22 147.108 281.61 153.3 281.61 cv
159.492 281.61 164.512 280.22 164.512 278.505 cv
@
164.512 278.505 mo
164.512 276.79 159.492 275.4 153.3 275.4 cv
147.108 275.4 142.088 276.79 142.088 278.505 cv
142.088 280.22 147.108 281.61 153.3 281.61 cv
159.492 281.61 164.512 280.22 164.512 278.505 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
143.809 279.057 mo
(roundrobin\(1,1,1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 .60376 1.20749 .60376 1.2075 0 ]xsh
162.788 290.925 mo
162.788 289.21 158.54 287.82 153.3 287.82 cv
148.06 287.82 143.812 289.21 143.812 290.925 cv
143.812 292.64 148.06 294.03 153.3 294.03 cv
158.54 294.03 162.788 292.64 162.788 290.925 cv
@
162.788 290.925 mo
162.788 289.21 158.54 287.82 153.3 287.82 cv
148.06 287.82 143.812 289.21 143.812 290.925 cv
143.812 292.64 148.06 294.03 153.3 294.03 cv
158.54 294.03 162.788 292.64 162.788 290.925 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
145.62 291.477 mo
(roundrobin\(4,4\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
153.3 281.61 mo
153.3 282.99 153.3 284.543 153.3 286.095 cv
@
152.955 286.095 mo
153.3 287.82 li
153.817 286.095 li
cp
@
152.955 286.095 mo
153.3 287.82 li
153.817 286.095 li
f
127.252 267.293 mo
133.117 269.88 140.707 272.985 146.055 275.4 cv
@
145.538 275.573 mo
147.262 275.918 li
145.882 274.882 li
cp
@
145.538 275.573 mo
147.262 275.918 li
145.882 274.882 li
f
148.47 269.018 mo
149.332 270.57 150.195 272.295 151.057 274.02 cv
@
150.54 274.02 mo
151.747 275.4 li
151.402 273.675 li
cp
@
150.54 274.02 mo
151.747 275.4 li
151.402 273.675 li
f
166.41 268.328 mo
163.822 270.398 160.89 272.64 158.302 274.71 cv
@
158.302 274.193 mo
157.095 275.573 li
158.82 274.882 li
cp
@
158.302 274.193 mo
157.095 275.573 li
158.82 274.882 li
f
191.422 267.465 mo
189.87 268.155 188.145 268.845 186.938 269.19 cv
179.52 271.778 171.757 273.33 163.995 275.4 cv
163.477 275.573 162.788 275.745 162.27 275.918 cv
@
162.615 275.4 mo
161.062 276.262 li
162.788 276.262 li
cp
@
162.615 275.4 mo
161.062 276.262 li
162.788 276.262 li
f
157.957 304.035 mo
157.957 302.32 153.71 300.93 148.47 300.93 cv
143.23 300.93 138.982 302.32 138.982 304.035 cv
138.982 305.75 143.23 307.14 148.47 307.14 cv
153.71 307.14 157.957 305.75 157.957 304.035 cv
@
157.957 304.035 mo
157.957 302.32 153.71 300.93 148.47 300.93 cv
143.23 300.93 138.982 302.32 138.982 304.035 cv
138.982 305.75 143.23 307.14 148.47 307.14 cv
153.71 307.14 157.957 305.75 157.957 304.035 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
140.79 304.587 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
152.092 294.03 mo
151.575 295.583 150.885 297.653 150.195 299.378 cv
@
149.85 299.205 mo
149.677 300.93 li
150.712 299.378 li
cp
@
149.85 299.205 mo
149.677 300.93 li
150.712 299.378 li
f
189.352 304.035 mo
189.352 302.32 185.105 300.93 179.865 300.93 cv
174.625 300.93 170.377 302.32 170.377 304.035 cv
170.377 305.75 174.625 307.14 179.865 307.14 cv
185.105 307.14 189.352 305.75 189.352 304.035 cv
@
189.352 304.035 mo
189.352 302.32 185.105 300.93 179.865 300.93 cv
174.625 300.93 170.377 302.32 170.377 304.035 cv
170.377 305.75 174.625 307.14 179.865 307.14 cv
185.105 307.14 189.352 305.75 189.352 304.035 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
172.185 304.587 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
158.992 293.512 mo
160.545 294.203 162.097 294.893 163.132 295.41 cv
165.892 296.79 169.86 298.86 173.138 300.585 cv
@
172.965 300.93 mo
174.69 301.448 li
173.31 300.24 li
cp
@
172.965 300.93 mo
174.69 301.448 li
173.31 300.24 li
f
202.98 389.595 mo
202.98 387.88 198.732 386.49 193.492 386.49 cv
188.253 386.49 184.005 387.88 184.005 389.595 cv
184.005 391.31 188.253 392.7 193.492 392.7 cv
198.732 392.7 202.98 391.31 202.98 389.595 cv
@
202.98 389.595 mo
202.98 387.88 198.732 386.49 193.492 386.49 cv
188.253 386.49 184.005 387.88 184.005 389.595 cv
184.005 391.31 188.253 392.7 193.492 392.7 cv
198.732 392.7 202.98 391.31 202.98 389.595 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
185.813 390.147 mo
(roundrobin\(4,4\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
196.08 392.528 mo
197.288 394.253 199.012 395.978 200.392 397.703 cv
@
200.047 397.875 mo
201.427 399.083 li
200.738 397.358 li
cp
@
200.047 397.875 mo
201.427 399.083 li
200.738 397.358 li
f
133.29 319.215 mo
133.29 315.976 127.884 313.35 121.215 313.35 cv
114.546 313.35 109.14 315.976 109.14 319.215 cv
109.14 322.454 114.546 325.08 121.215 325.08 cv
127.884 325.08 133.29 322.454 133.29 319.215 cv
@
133.29 319.215 mo
133.29 315.976 127.884 313.35 121.215 313.35 cv
114.546 313.35 109.14 315.976 109.14 319.215 cv
109.14 322.454 114.546 325.08 121.215 325.08 cv
127.884 325.08 133.29 322.454 133.29 319.215 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
112.027 317.007 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
116.845 319.767 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
116.677 322.527 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
143.64 306.795 mo
140.017 308.865 135.015 311.453 130.702 313.868 cv
@
130.53 313.523 mo
129.15 314.73 li
130.875 314.212 li
cp
@
130.53 313.523 mo
129.15 314.73 li
130.875 314.212 li
f
160.545 319.215 mo
160.545 315.976 155.139 313.35 148.47 313.35 cv
141.801 313.35 136.395 315.976 136.395 319.215 cv
136.395 322.454 141.801 325.08 148.47 325.08 cv
155.139 325.08 160.545 322.454 160.545 319.215 cv
@
160.545 319.215 mo
160.545 315.976 155.139 313.35 148.47 313.35 cv
141.801 313.35 136.395 315.976 136.395 319.215 cv
136.395 322.454 141.801 325.08 148.47 325.08 cv
155.139 325.08 160.545 322.454 160.545 319.215 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
139.282 317.007 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
144.1 319.767 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
143.932 322.527 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
148.47 307.14 mo
148.47 308.348 148.47 310.073 148.47 311.625 cv
@
148.125 311.625 mo
148.47 313.35 li
148.988 311.625 li
cp
@
148.125 311.625 mo
148.47 313.35 li
148.988 311.625 li
f
144.33 334.395 mo
144.33 332.68 140.082 331.29 134.842 331.29 cv
129.603 331.29 125.355 332.68 125.355 334.395 cv
125.355 336.11 129.603 337.5 134.842 337.5 cv
140.082 337.5 144.33 336.11 144.33 334.395 cv
@
144.33 334.395 mo
144.33 332.68 140.082 331.29 134.842 331.29 cv
129.603 331.29 125.355 332.68 125.355 334.395 cv
125.355 336.11 129.603 337.5 134.842 337.5 cv
140.082 337.5 144.33 336.11 144.33 334.395 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
127.163 334.947 mo
(roundrobin\(1,1\))
[.804176 1.2075 1.20749 1.2075 1.2075 .804169 1.2075 1.2075 .671371 1.2075 .804169 1.2075 
.603745 1.2075 0 ]xsh
144.33 346.815 mo
144.33 345.1 140.082 343.71 134.842 343.71 cv
129.603 343.71 125.355 345.1 125.355 346.815 cv
125.355 348.53 129.603 349.92 134.842 349.92 cv
140.082 349.92 144.33 348.53 144.33 346.815 cv
@
144.33 346.815 mo
144.33 345.1 140.082 343.71 134.842 343.71 cv
129.603 343.71 125.355 345.1 125.355 346.815 cv
125.355 348.53 129.603 349.92 134.842 349.92 cv
140.082 349.92 144.33 348.53 144.33 346.815 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
127.163 347.367 mo
(roundrobin\(2,2\))
[.804176 1.2075 1.20749 1.2075 1.2075 .804169 1.2075 1.2075 .671371 1.2075 .804169 1.2075 
.603745 1.2075 0 ]xsh
134.842 337.5 mo
134.842 338.88 134.842 340.433 134.842 341.985 cv
@
134.497 341.985 mo
134.842 343.71 li
135.36 341.985 li
cp
@
134.497 341.985 mo
134.842 343.71 li
135.36 341.985 li
f
126.045 324.562 mo
127.77 326.46 129.495 328.53 131.047 330.255 cv
@
130.702 330.428 mo
132.082 331.462 li
131.22 329.91 li
cp
@
130.702 330.428 mo
132.082 331.462 li
131.22 329.91 li
f
143.64 324.562 mo
141.915 326.46 140.19 328.53 138.638 330.255 cv
@
138.465 329.91 mo
137.602 331.462 li
138.982 330.428 li
cp
@
138.465 329.91 mo
137.602 331.462 li
138.982 330.428 li
f
133.29 361.995 mo
133.29 358.756 127.884 356.13 121.215 356.13 cv
114.546 356.13 109.14 358.756 109.14 361.995 cv
109.14 365.234 114.546 367.86 121.215 367.86 cv
127.884 367.86 133.29 365.234 133.29 361.995 cv
@
133.29 361.995 mo
133.29 358.756 127.884 356.13 121.215 356.13 cv
114.546 356.13 109.14 358.756 109.14 361.995 cv
109.14 365.234 114.546 367.86 121.215 367.86 cv
127.884 367.86 133.29 365.234 133.29 361.995 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
112.027 359.787 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
116.845 362.547 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
116.677 365.307 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
132.082 349.748 mo
130.702 351.3 128.977 353.198 127.252 355.268 cv
@
126.907 355.095 mo
126.045 356.648 li
127.425 355.612 li
cp
@
126.907 355.095 mo
126.045 356.648 li
127.425 355.612 li
f
160.545 361.995 mo
160.545 358.756 155.139 356.13 148.47 356.13 cv
141.801 356.13 136.395 358.756 136.395 361.995 cv
136.395 365.234 141.801 367.86 148.47 367.86 cv
155.139 367.86 160.545 365.234 160.545 361.995 cv
@
160.545 361.995 mo
160.545 358.756 155.139 356.13 148.47 356.13 cv
141.801 356.13 136.395 358.756 136.395 361.995 cv
136.395 365.234 141.801 367.86 148.47 367.86 cv
155.139 367.86 160.545 365.234 160.545 361.995 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
139.282 359.787 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
144.1 362.547 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
143.932 365.307 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
137.602 349.748 mo
138.982 351.3 140.707 353.198 142.432 355.268 cv
@
142.26 355.612 mo
143.64 356.648 li
142.777 355.095 li
cp
@
142.26 355.612 mo
143.64 356.648 li
142.777 355.095 li
f
157.957 377.175 mo
157.957 375.46 153.71 374.07 148.47 374.07 cv
143.23 374.07 138.982 375.46 138.982 377.175 cv
138.982 378.89 143.23 380.28 148.47 380.28 cv
153.71 380.28 157.957 378.89 157.957 377.175 cv
@
157.957 377.175 mo
157.957 375.46 153.71 374.07 148.47 374.07 cv
143.23 374.07 138.982 375.46 138.982 377.175 cv
138.982 378.89 143.23 380.28 148.47 380.28 cv
153.71 380.28 157.957 378.89 157.957 377.175 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
140.79 377.727 mo
(roundrobin\(2,2\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
154.68 379.59 mo
158.13 380.798 162.27 382.178 165.202 383.04 cv
170.377 384.42 178.14 386.318 184.35 387.525 cv
@
183.832 387.87 mo
185.557 387.87 li
184.005 387.008 li
cp
@
183.832 387.87 mo
185.557 387.87 li
184.005 387.008 li
f
129.15 366.48 mo
133.29 368.723 138.465 371.655 142.26 373.725 cv
@
141.915 374.07 mo
143.64 374.415 li
142.26 373.208 li
cp
@
141.915 374.07 mo
143.64 374.415 li
142.26 373.208 li
f
148.47 367.86 mo
148.47 369.412 148.47 370.965 148.47 372.518 cv
@
148.125 372.345 mo
148.47 374.07 li
148.988 372.345 li
cp
@
148.125 372.345 mo
148.47 374.07 li
148.988 372.345 li
f
191.94 319.215 mo
191.94 315.976 186.534 313.35 179.865 313.35 cv
173.196 313.35 167.79 315.976 167.79 319.215 cv
167.79 322.454 173.196 325.08 179.865 325.08 cv
186.534 325.08 191.94 322.454 191.94 319.215 cv
@
191.94 319.215 mo
191.94 315.976 186.534 313.35 179.865 313.35 cv
173.196 313.35 167.79 315.976 167.79 319.215 cv
167.79 322.454 173.196 325.08 179.865 325.08 cv
186.534 325.08 191.94 322.454 191.94 319.215 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
170.677 317.007 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
175.495 319.767 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
175.327 322.527 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
179.865 307.14 mo
179.865 308.348 179.865 310.073 179.865 311.625 cv
@
179.52 311.625 mo
179.865 313.35 li
180.382 311.625 li
cp
@
179.52 311.625 mo
179.865 313.35 li
180.382 311.625 li
f
219.195 319.215 mo
219.195 315.976 213.789 313.35 207.12 313.35 cv
200.451 313.35 195.045 315.976 195.045 319.215 cv
195.045 322.454 200.451 325.08 207.12 325.08 cv
213.789 325.08 219.195 322.454 219.195 319.215 cv
@
219.195 319.215 mo
219.195 315.976 213.789 313.35 207.12 313.35 cv
200.451 313.35 195.045 315.976 195.045 319.215 cv
195.045 322.454 200.451 325.08 207.12 325.08 cv
213.789 325.08 219.195 322.454 219.195 319.215 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
197.932 317.007 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
202.75 319.767 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
202.582 322.527 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
184.695 306.795 mo
188.317 308.865 193.32 311.453 197.632 313.868 cv
@
197.46 314.212 mo
199.185 314.73 li
197.805 313.523 li
cp
@
197.46 314.212 mo
199.185 314.73 li
197.805 313.523 li
f
202.98 334.395 mo
202.98 332.68 198.732 331.29 193.492 331.29 cv
188.253 331.29 184.005 332.68 184.005 334.395 cv
184.005 336.11 188.253 337.5 193.492 337.5 cv
198.732 337.5 202.98 336.11 202.98 334.395 cv
@
202.98 334.395 mo
202.98 332.68 198.732 331.29 193.492 331.29 cv
188.253 331.29 184.005 332.68 184.005 334.395 cv
184.005 336.11 188.253 337.5 193.492 337.5 cv
198.732 337.5 202.98 336.11 202.98 334.395 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
185.813 334.947 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
202.98 346.815 mo
202.98 345.1 198.732 343.71 193.492 343.71 cv
188.253 343.71 184.005 345.1 184.005 346.815 cv
184.005 348.53 188.253 349.92 193.492 349.92 cv
198.732 349.92 202.98 348.53 202.98 346.815 cv
@
202.98 346.815 mo
202.98 345.1 198.732 343.71 193.492 343.71 cv
188.253 343.71 184.005 345.1 184.005 346.815 cv
184.005 348.53 188.253 349.92 193.492 349.92 cv
198.732 349.92 202.98 348.53 202.98 346.815 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
185.813 347.367 mo
(roundrobin\(2,2\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
193.492 337.5 mo
193.492 338.88 193.492 340.433 193.492 341.985 cv
@
193.147 341.985 mo
193.492 343.71 li
194.01 341.985 li
cp
@
193.147 341.985 mo
193.492 343.71 li
194.01 341.985 li
f
184.695 324.562 mo
186.42 326.46 188.145 328.53 189.697 330.255 cv
@
189.352 330.428 mo
190.732 331.462 li
189.87 329.91 li
cp
@
189.352 330.428 mo
190.732 331.462 li
189.87 329.91 li
f
202.29 324.562 mo
200.565 326.46 198.84 328.53 197.288 330.255 cv
@
197.115 329.91 mo
196.252 331.462 li
197.632 330.428 li
cp
@
197.115 329.91 mo
196.252 331.462 li
197.632 330.428 li
f
191.94 361.995 mo
191.94 358.756 186.534 356.13 179.865 356.13 cv
173.196 356.13 167.79 358.756 167.79 361.995 cv
167.79 365.234 173.196 367.86 179.865 367.86 cv
186.534 367.86 191.94 365.234 191.94 361.995 cv
@
191.94 361.995 mo
191.94 358.756 186.534 356.13 179.865 356.13 cv
173.196 356.13 167.79 358.756 167.79 361.995 cv
167.79 365.234 173.196 367.86 179.865 367.86 cv
186.534 367.86 191.94 365.234 191.94 361.995 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
170.677 359.787 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
175.495 362.547 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
175.327 365.307 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
190.732 349.748 mo
189.352 351.3 187.627 353.198 185.902 355.268 cv
@
185.557 355.095 mo
184.695 356.648 li
186.075 355.612 li
cp
@
185.557 355.095 mo
184.695 356.648 li
186.075 355.612 li
f
219.195 361.995 mo
219.195 358.756 213.789 356.13 207.12 356.13 cv
200.451 356.13 195.045 358.756 195.045 361.995 cv
195.045 365.234 200.451 367.86 207.12 367.86 cv
213.789 367.86 219.195 365.234 219.195 361.995 cv
@
219.195 361.995 mo
219.195 358.756 213.789 356.13 207.12 356.13 cv
200.451 356.13 195.045 358.756 195.045 361.995 cv
195.045 365.234 200.451 367.86 207.12 367.86 cv
213.789 367.86 219.195 365.234 219.195 361.995 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
197.932 359.787 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
202.75 362.547 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
202.582 365.307 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
196.252 349.748 mo
197.632 351.3 199.357 353.198 201.082 355.268 cv
@
200.91 355.612 mo
202.29 356.648 li
201.427 355.095 li
cp
@
200.91 355.612 mo
202.29 356.648 li
201.427 355.095 li
f
202.98 377.175 mo
202.98 375.46 198.732 374.07 193.492 374.07 cv
188.253 374.07 184.005 375.46 184.005 377.175 cv
184.005 378.89 188.253 380.28 193.492 380.28 cv
198.732 380.28 202.98 378.89 202.98 377.175 cv
@
202.98 377.175 mo
202.98 375.46 198.732 374.07 193.492 374.07 cv
188.253 374.07 184.005 375.46 184.005 377.175 cv
184.005 378.89 188.253 380.28 193.492 380.28 cv
198.732 380.28 202.98 378.89 202.98 377.175 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
185.813 377.727 mo
(roundrobin\(2,2\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
193.492 380.28 mo
193.492 381.66 193.492 383.212 193.492 384.765 cv
@
193.147 384.765 mo
193.492 386.49 li
194.01 384.765 li
cp
@
193.147 384.765 mo
193.492 386.49 li
194.01 384.765 li
f
184.695 367.343 mo
186.42 369.24 188.145 371.31 189.697 373.035 cv
@
189.352 373.208 mo
190.732 374.243 li
189.87 372.69 li
cp
@
189.352 373.208 mo
190.732 374.243 li
189.87 372.69 li
f
202.29 367.343 mo
200.565 369.24 198.84 371.31 197.288 373.035 cv
@
197.115 372.69 mo
196.252 374.243 li
197.632 373.208 li
cp
@
197.115 372.69 mo
196.252 374.243 li
197.632 373.208 li
f
280.605 52.8749 mo
280.605 51.16 276.357 49.77 271.117 49.77 cv
265.878 49.77 261.63 51.16 261.63 52.8749 cv
261.63 54.59 265.878 55.9799 271.117 55.9799 cv
276.357 55.9799 280.605 54.59 280.605 52.8749 cv
@
280.605 52.8749 mo
280.605 51.16 276.357 49.77 271.117 49.77 cv
265.878 49.77 261.63 51.16 261.63 52.8749 cv
261.63 54.59 265.878 55.9799 271.117 55.9799 cv
276.357 55.9799 280.605 54.59 280.605 52.8749 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
263.438 53.4269 mo
(roundrobin\(2,2\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 0 ]xsh
271.117 42.87 mo
271.117 44.423 271.117 46.32 271.117 48.045 cv
@
270.772 48.045 mo
271.117 49.77 li
271.635 48.045 li
cp
@
270.772 48.045 mo
271.117 49.77 li
271.635 48.045 li
f
346.155 52.8749 mo
346.155 51.16 341.907 49.77 336.667 49.77 cv
331.428 49.77 327.18 51.16 327.18 52.8749 cv
327.18 54.59 331.428 55.9799 336.667 55.9799 cv
341.907 55.9799 346.155 54.59 346.155 52.8749 cv
@
346.155 52.8749 mo
346.155 51.16 341.907 49.77 336.667 49.77 cv
331.428 49.77 327.18 51.16 327.18 52.8749 cv
327.18 54.59 331.428 55.9799 336.667 55.9799 cv
341.907 55.9799 346.155 54.59 346.155 52.8749 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
328.988 53.4269 mo
(roundrobin\(2,2\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20749 .804199 1.20749 
.60376 1.20749 0 ]xsh
280.432 40.455 mo
290.438 41.145 306.307 42.525 315.622 44.2499 cv
319.59 44.9399 325.455 47.528 329.94 49.598 cv
@
329.767 49.943 mo
331.492 50.288 li
330.112 49.2529 li
cp
@
329.767 49.943 mo
331.492 50.288 li
330.112 49.2529 li
f
280.605 159.825 mo
280.605 158.11 276.357 156.72 271.117 156.72 cv
265.878 156.72 261.63 158.11 261.63 159.825 cv
261.63 161.54 265.878 162.93 271.117 162.93 cv
276.357 162.93 280.605 161.54 280.605 159.825 cv
@
280.605 159.825 mo
280.605 158.11 276.357 156.72 271.117 156.72 cv
265.878 156.72 261.63 158.11 261.63 159.825 cv
261.63 161.54 265.878 162.93 271.117 162.93 cv
276.357 162.93 280.605 161.54 280.605 159.825 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
263.438 160.377 mo
(roundrobin\(4,4\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 0 ]xsh
267.667 177.765 mo
267.667 174.526 262.261 171.9 255.592 171.9 cv
248.924 171.9 243.517 174.526 243.517 177.765 cv
243.517 181.004 248.924 183.63 255.592 183.63 cv
262.261 183.63 267.667 181.004 267.667 177.765 cv
@
267.667 177.765 mo
267.667 174.526 262.261 171.9 255.592 171.9 cv
248.924 171.9 243.517 174.526 243.517 177.765 cv
243.517 181.004 248.924 183.63 255.592 183.63 cv
262.261 183.63 267.667 181.004 267.667 177.765 cv
.882 .953 .973 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQP+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7A73DB9D92E2C498F1C8C272174C48D3E3EA8F27C6E6BA
93064621D133D030C551A42025686691A783FB90A2D496BEF06790AC79A6878D
99BC23CD14D9CFD812148CC847ABD0CF7E73A1A9D5ACE6E2E3BBFD4DD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQP+TimesNewRomanPSMT /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQP+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two /.notdef /four /five 
/six /.notdef /eight /.notdef /colon 2{/.notdef}rp /equal /greater 
3{/.notdef}rp /B /C /.notdef /E 3{/.notdef}rp /I /.notdef 
/K /.notdef /M /.notdef /O 2{/.notdef}rp /R /S 
13{/.notdef}rp /a /b /c /d /e /.notdef /g 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/x /y 134{/.notdef}rp]
LTFDQP+TimesNewRomanPSMT nf
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
246.405 175.557 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
251.223 178.317 mo
(work=56)
[1.74359 1.2075 .804169 1.2075 1.36206 1.20749 0 ]xsh
251.055 181.077 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
268.53 162.93 mo
266.632 165.173 263.872 168.105 261.457 170.865 cv
@
261.112 170.693 mo
260.25 172.245 li
261.63 171.21 li
cp
@
261.112 170.693 mo
260.25 172.245 li
261.63 171.21 li
f
267.495 65.985 mo
267.495 64.27 263.247 62.8799 258.007 62.8799 cv
252.768 62.8799 248.52 64.27 248.52 65.985 cv
248.52 67.7 252.768 69.09 258.007 69.09 cv
263.247 69.09 267.495 67.7 267.495 65.985 cv
@
267.495 65.985 mo
267.495 64.27 263.247 62.8799 258.007 62.8799 cv
252.768 62.8799 248.52 64.27 248.52 65.985 cv
248.52 67.7 252.768 69.09 258.007 69.09 cv
263.247 69.09 267.495 67.7 267.495 65.985 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
250.328 66.5369 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 0 ]xsh
268.185 55.8069 mo
266.288 57.705 264.045 59.9479 262.147 61.845 cv
@
261.802 61.4999 mo
260.94 63.0529 li
262.492 62.1899 li
cp
@
261.802 61.4999 mo
260.94 63.0529 li
262.492 62.1899 li
f
293.715 65.985 mo
293.715 64.27 289.467 62.8799 284.227 62.8799 cv
278.988 62.8799 274.74 64.27 274.74 65.985 cv
274.74 67.7 278.988 69.09 284.227 69.09 cv
289.467 69.09 293.715 67.7 293.715 65.985 cv
@
293.715 65.985 mo
293.715 64.27 289.467 62.8799 284.227 62.8799 cv
278.988 62.8799 274.74 64.27 274.74 65.985 cv
274.74 67.7 278.988 69.09 284.227 69.09 cv
289.467 69.09 293.715 67.7 293.715 65.985 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
276.548 66.5369 mo
(roundrobin\(1,1\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20749 .804199 1.20749 
.60376 1.20749 0 ]xsh
274.05 55.8069 mo
275.947 57.705 278.19 59.9479 280.088 61.845 cv
@
279.742 62.1899 mo
281.295 63.0529 li
280.432 61.4999 li
cp
@
279.742 62.1899 mo
281.295 63.0529 li
280.432 61.4999 li
f
280.605 126.705 mo
280.605 124.99 276.357 123.6 271.117 123.6 cv
265.878 123.6 261.63 124.99 261.63 126.705 cv
261.63 128.42 265.878 129.81 271.117 129.81 cv
276.357 129.81 280.605 128.42 280.605 126.705 cv
@
280.605 126.705 mo
280.605 124.99 276.357 123.6 271.117 123.6 cv
265.878 123.6 261.63 124.99 261.63 126.705 cv
261.63 128.42 265.878 129.81 271.117 129.81 cv
276.357 129.81 280.605 128.42 280.605 126.705 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
263.438 127.257 mo
(roundrobin\(2,2\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 0 ]xsh
283.192 141.885 mo
283.192 138.646 277.786 136.02 271.117 136.02 cv
264.449 136.02 259.042 138.646 259.042 141.885 cv
259.042 145.124 264.449 147.75 271.117 147.75 cv
277.786 147.75 283.192 145.124 283.192 141.885 cv
@
283.192 141.885 mo
283.192 138.646 277.786 136.02 271.117 136.02 cv
264.449 136.02 259.042 138.646 259.042 141.885 cv
259.042 145.124 264.449 147.75 271.117 147.75 cv
277.786 147.75 283.192 145.124 283.192 141.885 cv
.455 .686 .812 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
261.93 139.677 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
266.748 142.437 mo
(work=28)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
266.58 145.197 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
271.117 129.81 mo
271.117 131.018 271.117 132.743 271.117 134.295 cv
@
270.772 134.295 mo
271.117 136.02 li
271.635 134.295 li
cp
@
270.772 134.295 mo
271.117 136.02 li
271.635 134.295 li
f
249.555 81.165 mo
249.555 77.926 246.234 75.3 242.138 75.3 cv
238.041 75.3 234.72 77.926 234.72 81.165 cv
234.72 84.404 238.041 87.03 242.138 87.03 cv
246.234 87.03 249.555 84.404 249.555 81.165 cv
@
249.555 81.165 mo
249.555 77.926 246.234 75.3 242.138 75.3 cv
238.041 75.3 234.72 77.926 234.72 81.165 cv
234.72 84.404 238.041 87.03 242.138 87.03 cv
246.234 87.03 249.555 84.404 249.555 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
238.381 78.9569 mo
(Identity)
[.804184 1.20749 1.07224 1.20749 .671371 .671371 .671371 0 ]xsh
238.371 81.7169 mo
(work=6)
[1.74359 1.2075 .804169 1.2075 1.36205 0 ]xsh
237.6 84.477 mo
(I/O: 1->1)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
254.902 68.918 mo
252.832 70.988 250.245 73.575 247.83 75.818 cv
@
247.83 75.1279 mo
246.967 76.6799 li
248.52 75.818 li
cp
@
247.83 75.1279 mo
246.967 76.6799 li
248.52 75.818 li
f
267.495 81.165 mo
267.495 77.926 264.174 75.3 260.077 75.3 cv
255.981 75.3 252.66 77.926 252.66 81.165 cv
252.66 84.404 255.981 87.03 260.077 87.03 cv
264.174 87.03 267.495 84.404 267.495 81.165 cv
@
267.495 81.165 mo
267.495 77.926 264.174 75.3 260.077 75.3 cv
255.981 75.3 252.66 77.926 252.66 81.165 cv
252.66 84.404 255.981 87.03 260.077 87.03 cv
264.174 87.03 267.495 84.404 267.495 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
256.321 78.9569 mo
(Identity)
[.804169 1.20752 1.0722 1.20752 .671356 .671356 .671387 0 ]xsh
256.311 81.7169 mo
(work=6)
[1.74359 1.20749 .804199 1.20749 1.36206 0 ]xsh
255.54 84.477 mo
(I/O: 1->1)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
258.352 69.09 mo
258.697 70.47 258.87 72.368 259.042 74.093 cv
@
258.525 73.575 mo
259.215 75.3 li
259.388 73.575 li
cp
@
258.525 73.575 mo
259.215 75.3 li
259.388 73.575 li
f
266.288 96.345 mo
266.288 94.6299 262.04 93.2399 256.8 93.2399 cv
251.56 93.2399 247.312 94.6299 247.312 96.345 cv
247.312 98.06 251.56 99.45 256.8 99.45 cv
262.04 99.45 266.288 98.06 266.288 96.345 cv
@
266.288 96.345 mo
266.288 94.6299 262.04 93.2399 256.8 93.2399 cv
251.56 93.2399 247.312 94.6299 247.312 96.345 cv
247.312 98.06 251.56 99.45 256.8 99.45 cv
262.04 99.45 266.288 98.06 266.288 96.345 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
249.12 96.8969 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 0 ]xsh
268.875 111.525 mo
268.875 108.286 263.469 105.66 256.8 105.66 cv
250.131 105.66 244.725 108.286 244.725 111.525 cv
244.725 114.764 250.131 117.39 256.8 117.39 cv
263.469 117.39 268.875 114.764 268.875 111.525 cv
@
268.875 111.525 mo
268.875 108.286 263.469 105.66 256.8 105.66 cv
250.131 105.66 244.725 108.286 244.725 111.525 cv
244.725 114.764 250.131 117.39 256.8 117.39 cv
263.469 117.39 268.875 114.764 268.875 111.525 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
247.612 109.317 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07222 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
252.43 112.077 mo
(work=14)
[1.74359 1.2075 .804184 1.20749 1.36206 1.20749 0 ]xsh
252.262 114.837 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
256.8 99.45 mo
256.8 100.657 256.8 102.382 256.8 103.935 cv
@
256.455 103.935 mo
256.8 105.66 li
257.317 103.935 li
cp
@
256.455 103.935 mo
256.8 105.66 li
257.317 103.935 li
f
246.622 85.8229 mo
248.692 87.893 250.935 90.1349 252.832 92.205 cv
@
252.488 92.3779 mo
253.867 93.412 li
253.005 91.86 li
cp
@
252.488 92.3779 mo
253.867 93.412 li
253.005 91.86 li
f
258.87 87.03 mo
258.525 88.582 258.18 90.1349 257.835 91.6879 cv
@
257.49 91.515 mo
257.49 93.2399 li
258.352 91.6879 li
cp
@
257.49 91.515 mo
257.49 93.2399 li
258.352 91.6879 li
f
261.802 116.873 mo
263.7 118.77 265.597 121.012 267.15 122.738 cv
@
266.632 122.91 mo
268.185 123.773 li
267.322 122.22 li
cp
@
266.632 122.91 mo
268.185 123.773 li
267.322 122.22 li
f
289.575 81.165 mo
289.575 77.926 286.254 75.3 282.157 75.3 cv
278.061 75.3 274.74 77.926 274.74 81.165 cv
274.74 84.404 278.061 87.03 282.157 87.03 cv
286.254 87.03 289.575 84.404 289.575 81.165 cv
@
289.575 81.165 mo
289.575 77.926 286.254 75.3 282.157 75.3 cv
278.061 75.3 274.74 77.926 274.74 81.165 cv
274.74 84.404 278.061 87.03 282.157 87.03 cv
286.254 87.03 289.575 84.404 289.575 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
278.401 78.9569 mo
(Identity)
[.804169 1.20752 1.0722 1.20752 .671356 .671387 .671356 0 ]xsh
278.391 81.7169 mo
(work=6)
[1.74359 1.20749 .804199 1.20749 1.36206 0 ]xsh
277.62 84.477 mo
(I/O: 1->1)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
283.882 69.09 mo
283.538 70.47 283.365 72.368 283.192 74.093 cv
@
282.847 73.575 mo
283.02 75.3 li
283.71 73.575 li
cp
@
282.847 73.575 mo
283.02 75.3 li
283.71 73.575 li
f
307.515 81.165 mo
307.515 77.926 304.194 75.3 300.097 75.3 cv
296.001 75.3 292.68 77.926 292.68 81.165 cv
292.68 84.404 296.001 87.03 300.097 87.03 cv
304.194 87.03 307.515 84.404 307.515 81.165 cv
@
307.515 81.165 mo
307.515 77.926 304.194 75.3 300.097 75.3 cv
296.001 75.3 292.68 77.926 292.68 81.165 cv
292.68 84.404 296.001 87.03 300.097 87.03 cv
304.194 87.03 307.515 84.404 307.515 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
296.341 78.9569 mo
(Identity)
[.804169 1.20752 1.0722 1.20752 .671356 .671387 .671356 0 ]xsh
296.331 81.7169 mo
(work=6)
[1.74359 1.20749 .804199 1.20749 1.36206 0 ]xsh
295.56 84.477 mo
(I/O: 1->1)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
287.332 68.918 mo
289.23 70.8149 291.817 73.2299 294.06 75.473 cv
@
293.715 75.818 mo
295.267 76.6799 li
294.405 75.1279 li
cp
@
293.715 75.818 mo
295.267 76.6799 li
294.405 75.1279 li
f
294.922 96.345 mo
294.922 94.6299 290.675 93.2399 285.435 93.2399 cv
280.195 93.2399 275.947 94.6299 275.947 96.345 cv
275.947 98.06 280.195 99.45 285.435 99.45 cv
290.675 99.45 294.922 98.06 294.922 96.345 cv
@
294.922 96.345 mo
294.922 94.6299 290.675 93.2399 285.435 93.2399 cv
280.195 93.2399 275.947 94.6299 275.947 96.345 cv
275.947 98.06 280.195 99.45 285.435 99.45 cv
290.675 99.45 294.922 98.06 294.922 96.345 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
277.755 96.8969 mo
(roundrobin\(1,1\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 0 ]xsh
297.51 111.525 mo
297.51 108.286 292.104 105.66 285.435 105.66 cv
278.766 105.66 273.36 108.286 273.36 111.525 cv
273.36 114.764 278.766 117.39 285.435 117.39 cv
292.104 117.39 297.51 114.764 297.51 111.525 cv
@
297.51 111.525 mo
297.51 108.286 292.104 105.66 285.435 105.66 cv
278.766 105.66 273.36 108.286 273.36 111.525 cv
273.36 114.764 278.766 117.39 285.435 117.39 cv
292.104 117.39 297.51 114.764 297.51 111.525 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
276.247 109.317 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
281.065 112.077 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
280.897 114.837 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
285.435 99.45 mo
285.435 100.657 285.435 102.382 285.435 103.935 cv
@
285.09 103.935 mo
285.435 105.66 li
285.952 103.935 li
cp
@
285.09 103.935 mo
285.435 105.66 li
285.952 103.935 li
f
283.365 87.03 mo
283.71 88.582 284.055 90.1349 284.4 91.6879 cv
@
283.882 91.6879 mo
284.745 93.2399 li
284.745 91.515 li
cp
@
283.882 91.6879 mo
284.745 93.2399 li
284.745 91.515 li
f
295.612 85.8229 mo
293.542 87.893 291.3 90.1349 289.402 92.205 cv
@
289.23 91.86 mo
288.367 93.412 li
289.747 92.3779 li
cp
@
289.23 91.86 mo
288.367 93.412 li
289.747 92.3779 li
f
280.432 116.873 mo
278.535 118.77 276.638 121.012 275.085 122.738 cv
@
274.912 122.22 mo
274.05 123.773 li
275.602 122.91 li
cp
@
274.912 122.22 mo
274.05 123.773 li
275.602 122.91 li
f
271.117 147.75 mo
271.117 150.165 271.117 152.753 271.117 155.168 cv
@
270.772 154.995 mo
271.117 156.72 li
271.635 154.995 li
cp
@
270.772 154.995 mo
271.117 156.72 li
271.635 154.995 li
f
346.155 65.985 mo
346.155 64.27 341.907 62.8799 336.667 62.8799 cv
331.428 62.8799 327.18 64.27 327.18 65.985 cv
327.18 67.7 331.428 69.09 336.667 69.09 cv
341.907 69.09 346.155 67.7 346.155 65.985 cv
@
346.155 65.985 mo
346.155 64.27 341.907 62.8799 336.667 62.8799 cv
331.428 62.8799 327.18 64.27 327.18 65.985 cv
327.18 67.7 331.428 69.09 336.667 69.09 cv
341.907 69.09 346.155 67.7 346.155 65.985 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
328.988 66.5369 mo
(roundrobin\(1,1\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20749 .804199 1.20749 
.60376 1.20749 0 ]xsh
336.667 55.9799 mo
336.667 57.5319 336.667 59.4299 336.667 61.155 cv
@
336.322 61.155 mo
336.667 62.8799 li
337.185 61.155 li
cp
@
336.322 61.155 mo
336.667 62.8799 li
337.185 61.155 li
f
379.275 65.985 mo
379.275 64.27 375.027 62.8799 369.788 62.8799 cv
364.548 62.8799 360.3 64.27 360.3 65.985 cv
360.3 67.7 364.548 69.09 369.788 69.09 cv
375.027 69.09 379.275 67.7 379.275 65.985 cv
@
379.275 65.985 mo
379.275 64.27 375.027 62.8799 369.788 62.8799 cv
364.548 62.8799 360.3 64.27 360.3 65.985 cv
360.3 67.7 364.548 69.09 369.788 69.09 cv
375.027 69.09 379.275 67.7 379.275 65.985 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
362.108 66.5369 mo
(roundrobin\(1,1\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20749 .804199 1.20749 
.60376 1.20749 0 ]xsh
344.775 54.4279 mo
348.57 55.29 352.882 56.325 355.642 57.36 cv
358.057 58.395 361.507 60.465 364.267 62.362 cv
@
363.922 62.707 mo
365.647 63.225 li
364.44 62.018 li
cp
@
363.922 62.707 mo
365.647 63.225 li
364.44 62.018 li
f
346.155 126.705 mo
346.155 124.99 341.907 123.6 336.667 123.6 cv
331.428 123.6 327.18 124.99 327.18 126.705 cv
327.18 128.42 331.428 129.81 336.667 129.81 cv
341.907 129.81 346.155 128.42 346.155 126.705 cv
@
346.155 126.705 mo
346.155 124.99 341.907 123.6 336.667 123.6 cv
331.428 123.6 327.18 124.99 327.18 126.705 cv
327.18 128.42 331.428 129.81 336.667 129.81 cv
341.907 129.81 346.155 128.42 346.155 126.705 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
328.988 127.257 mo
(roundrobin\(2,2\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20749 .804199 1.20749 
.60376 1.20749 0 ]xsh
344.602 141.885 mo
344.602 138.646 339.196 136.02 332.527 136.02 cv
325.859 136.02 320.452 138.646 320.452 141.885 cv
320.452 145.124 325.859 147.75 332.527 147.75 cv
339.196 147.75 344.602 145.124 344.602 141.885 cv
@
344.602 141.885 mo
344.602 138.646 339.196 136.02 332.527 136.02 cv
325.859 136.02 320.452 138.646 320.452 141.885 cv
320.452 145.124 325.859 147.75 332.527 147.75 cv
339.196 147.75 344.602 145.124 344.602 141.885 cv
.455 .686 .812 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
323.34 139.677 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
328.158 142.437 mo
(work=28)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
327.99 145.197 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
335.805 129.81 mo
335.46 131.018 335.115 132.743 334.597 134.295 cv
@
334.08 134.295 mo
334.08 136.02 li
334.942 134.468 li
cp
@
334.08 134.295 mo
334.08 136.02 li
334.942 134.468 li
f
335.115 81.165 mo
335.115 77.926 331.794 75.3 327.697 75.3 cv
323.601 75.3 320.28 77.926 320.28 81.165 cv
320.28 84.404 323.601 87.03 327.697 87.03 cv
331.794 87.03 335.115 84.404 335.115 81.165 cv
@
335.115 81.165 mo
335.115 77.926 331.794 75.3 327.697 75.3 cv
323.601 75.3 320.28 77.926 320.28 81.165 cv
320.28 84.404 323.601 87.03 327.697 87.03 cv
331.794 87.03 335.115 84.404 335.115 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
323.941 78.9569 mo
(Identity)
[.804169 1.20752 1.0722 1.20752 .671356 .671356 .671387 0 ]xsh
323.931 81.7169 mo
(work=6)
[1.74359 1.20749 .804199 1.20749 1.36206 0 ]xsh
323.16 84.477 mo
(I/O: 1->1)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
334.77 69.09 mo
333.907 70.643 332.7 72.54 331.665 74.265 cv
@
331.32 74.093 mo
330.802 75.818 li
332.01 74.4379 li
cp
@
331.32 74.093 mo
330.802 75.818 li
332.01 74.4379 li
f
353.055 81.165 mo
353.055 77.926 349.734 75.3 345.638 75.3 cv
341.541 75.3 338.22 77.926 338.22 81.165 cv
338.22 84.404 341.541 87.03 345.638 87.03 cv
349.734 87.03 353.055 84.404 353.055 81.165 cv
@
353.055 81.165 mo
353.055 77.926 349.734 75.3 345.638 75.3 cv
341.541 75.3 338.22 77.926 338.22 81.165 cv
338.22 84.404 341.541 87.03 345.638 87.03 cv
349.734 87.03 353.055 84.404 353.055 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
341.881 78.9569 mo
(Identity)
[.804169 1.20752 1.0722 1.20752 .671356 .671356 .671387 0 ]xsh
341.871 81.7169 mo
(work=6)
[1.74359 1.20749 .804199 1.20749 1.36206 0 ]xsh
341.1 84.477 mo
(I/O: 1->1)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
338.565 69.09 mo
339.427 70.643 340.635 72.54 341.67 74.265 cv
@
341.325 74.4379 mo
342.532 75.818 li
342.015 74.093 li
cp
@
341.325 74.4379 mo
342.532 75.818 li
342.015 74.093 li
f
346.155 96.345 mo
346.155 94.6299 341.907 93.2399 336.667 93.2399 cv
331.428 93.2399 327.18 94.6299 327.18 96.345 cv
327.18 98.06 331.428 99.45 336.667 99.45 cv
341.907 99.45 346.155 98.06 346.155 96.345 cv
@
346.155 96.345 mo
346.155 94.6299 341.907 93.2399 336.667 93.2399 cv
331.428 93.2399 327.18 94.6299 327.18 96.345 cv
327.18 98.06 331.428 99.45 336.667 99.45 cv
341.907 99.45 346.155 98.06 346.155 96.345 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
328.988 96.8969 mo
(roundrobin\(1,1\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20749 .804199 1.20749 
.60376 1.20749 0 ]xsh
348.742 111.525 mo
348.742 108.286 343.336 105.66 336.667 105.66 cv
329.999 105.66 324.592 108.286 324.592 111.525 cv
324.592 114.764 329.999 117.39 336.667 117.39 cv
343.336 117.39 348.742 114.764 348.742 111.525 cv
@
348.742 111.525 mo
348.742 108.286 343.336 105.66 336.667 105.66 cv
329.999 105.66 324.592 108.286 324.592 111.525 cv
324.592 114.764 329.999 117.39 336.667 117.39 cv
343.336 117.39 348.742 114.764 348.742 111.525 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
327.48 109.317 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
332.298 112.077 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
332.13 114.837 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
336.667 99.45 mo
336.667 100.657 336.667 102.382 336.667 103.935 cv
@
336.322 103.935 mo
336.667 105.66 li
337.185 103.935 li
cp
@
336.322 103.935 mo
336.667 105.66 li
337.185 103.935 li
f
330.802 86.512 mo
331.838 88.238 333.045 90.1349 334.08 91.86 cv
@
333.562 91.86 mo
334.77 93.2399 li
334.425 91.515 li
cp
@
333.562 91.86 mo
334.77 93.2399 li
334.425 91.515 li
f
342.532 86.512 mo
341.497 88.238 340.29 90.1349 339.255 91.86 cv
@
338.91 91.515 mo
338.565 93.2399 li
339.772 91.86 li
cp
@
338.91 91.515 mo
338.565 93.2399 li
339.772 91.86 li
f
336.667 117.39 mo
336.667 118.943 336.667 120.495 336.667 122.048 cv
@
336.322 121.875 mo
336.667 123.6 li
337.185 121.875 li
cp
@
336.322 121.875 mo
336.667 123.6 li
337.185 121.875 li
f
375.135 81.165 mo
375.135 77.926 371.814 75.3 367.717 75.3 cv
363.621 75.3 360.3 77.926 360.3 81.165 cv
360.3 84.404 363.621 87.03 367.717 87.03 cv
371.814 87.03 375.135 84.404 375.135 81.165 cv
@
375.135 81.165 mo
375.135 77.926 371.814 75.3 367.717 75.3 cv
363.621 75.3 360.3 77.926 360.3 81.165 cv
360.3 84.404 363.621 87.03 367.717 87.03 cv
371.814 87.03 375.135 84.404 375.135 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
363.961 78.9569 mo
(Identity)
[.804169 1.20752 1.0722 1.20752 .671356 .671387 .671356 0 ]xsh
363.951 81.7169 mo
(work=6)
[1.74359 1.20749 .804199 1.20749 1.36206 0 ]xsh
363.18 84.477 mo
(I/O: 1->1)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
369.442 69.09 mo
369.097 70.47 368.925 72.368 368.752 74.093 cv
@
368.407 73.575 mo
368.58 75.3 li
369.27 73.575 li
cp
@
368.407 73.575 mo
368.58 75.3 li
369.27 73.575 li
f
393.075 81.165 mo
393.075 77.926 389.754 75.3 385.657 75.3 cv
381.561 75.3 378.24 77.926 378.24 81.165 cv
378.24 84.404 381.561 87.03 385.657 87.03 cv
389.754 87.03 393.075 84.404 393.075 81.165 cv
@
393.075 81.165 mo
393.075 77.926 389.754 75.3 385.657 75.3 cv
381.561 75.3 378.24 77.926 378.24 81.165 cv
378.24 84.404 381.561 87.03 385.657 87.03 cv
389.754 87.03 393.075 84.404 393.075 81.165 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
381.901 78.9569 mo
(Identity)
[.804169 1.20752 1.0722 1.20752 .671356 .671387 .671356 0 ]xsh
381.891 81.7169 mo
(work=6)
[1.74359 1.20749 .804199 1.20749 1.36206 0 ]xsh
381.12 84.477 mo
(I/O: 1->1)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
372.892 68.918 mo
374.962 70.988 377.55 73.575 379.965 75.818 cv
@
379.275 75.818 mo
380.827 76.6799 li
379.965 75.1279 li
cp
@
379.275 75.818 mo
380.827 76.6799 li
379.965 75.1279 li
f
380.482 96.345 mo
380.482 94.6299 376.235 93.2399 370.995 93.2399 cv
365.755 93.2399 361.507 94.6299 361.507 96.345 cv
361.507 98.06 365.755 99.45 370.995 99.45 cv
376.235 99.45 380.482 98.06 380.482 96.345 cv
@
380.482 96.345 mo
380.482 94.6299 376.235 93.2399 370.995 93.2399 cv
365.755 93.2399 361.507 94.6299 361.507 96.345 cv
361.507 98.06 365.755 99.45 370.995 99.45 cv
376.235 99.45 380.482 98.06 380.482 96.345 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
363.315 96.8969 mo
(roundrobin\(1,1\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 0 ]xsh
383.07 111.525 mo
383.07 108.286 377.664 105.66 370.995 105.66 cv
364.326 105.66 358.92 108.286 358.92 111.525 cv
358.92 114.764 364.326 117.39 370.995 117.39 cv
377.664 117.39 383.07 114.764 383.07 111.525 cv
@
383.07 111.525 mo
383.07 108.286 377.664 105.66 370.995 105.66 cv
364.326 105.66 358.92 108.286 358.92 111.525 cv
358.92 114.764 364.326 117.39 370.995 117.39 cv
377.664 117.39 383.07 114.764 383.07 111.525 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
361.807 109.317 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
366.625 112.077 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
366.457 114.837 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
370.995 99.45 mo
370.995 100.657 370.995 102.382 370.995 103.935 cv
@
370.65 103.935 mo
370.995 105.66 li
371.512 103.935 li
cp
@
370.65 103.935 mo
370.995 105.66 li
371.512 103.935 li
f
368.925 87.03 mo
369.27 88.582 369.615 90.1349 369.96 91.6879 cv
@
369.442 91.6879 mo
370.305 93.2399 li
370.305 91.515 li
cp
@
369.442 91.6879 mo
370.305 93.2399 li
370.305 91.515 li
f
381.172 85.8229 mo
379.102 87.893 376.86 90.1349 374.962 92.205 cv
@
374.79 91.86 mo
373.927 93.412 li
375.307 92.3779 li
cp
@
374.79 91.86 mo
373.927 93.412 li
375.307 92.3779 li
f
363.577 116.182 mo
361.68 117.218 359.782 118.08 358.402 118.77 cv
354.952 120.495 349.088 122.565 344.43 124.118 cv
@
344.947 123.428 mo
343.395 124.462 li
345.12 124.29 li
cp
@
344.947 123.428 mo
343.395 124.462 li
345.12 124.29 li
f
324.765 146.37 mo
322.522 147.578 320.28 148.612 318.382 149.13 cv
308.377 152.062 291.3 155.857 280.605 157.928 cv
@
280.777 157.41 mo
279.225 158.273 li
280.95 158.273 li
cp
@
280.777 157.41 mo
279.225 158.273 li
280.95 158.273 li
f
251.625 183.285 mo
247.312 189.84 240.93 200.707 240.93 208.125 cv
240.93 208.125 240.93 208.125 240.93 377.175 cv
240.93 384.938 233.685 391.32 227.302 395.46 cv
224.025 397.703 218.505 399.428 213.675 400.462 cv
@
214.192 399.945 mo
212.64 400.635 li
214.365 400.808 li
cp
@
214.192 399.945 mo
212.64 400.635 li
214.365 400.808 li
f
120.697 429.615 mo
120.697 426.376 115.291 423.75 108.622 423.75 cv
101.954 423.75 96.5475 426.376 96.5475 429.615 cv
96.5475 432.854 101.954 435.48 108.622 435.48 cv
115.291 435.48 120.697 432.854 120.697 429.615 cv
@
120.697 429.615 mo
120.697 426.376 115.291 423.75 108.622 423.75 cv
101.954 423.75 96.5475 426.376 96.5475 429.615 cv
96.5475 432.854 101.954 435.48 108.622 435.48 cv
115.291 435.48 120.697 432.854 120.697 429.615 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
99.4347 427.407 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
104.253 430.167 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
104.085 432.927 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
190.388 415.643 mo
172.447 417.54 140.535 420.818 121.732 423.75 cv
120.697 423.923 119.317 424.268 118.11 424.785 cv
@
118.282 424.268 mo
116.902 425.303 li
118.627 424.958 li
cp
@
118.282 424.268 mo
116.902 425.303 li
118.627 424.958 li
f
147.952 429.615 mo
147.952 426.376 142.546 423.75 135.877 423.75 cv
129.209 423.75 123.802 426.376 123.802 429.615 cv
123.802 432.854 129.209 435.48 135.877 435.48 cv
142.546 435.48 147.952 432.854 147.952 429.615 cv
@
147.952 429.615 mo
147.952 426.376 142.546 423.75 135.877 423.75 cv
129.209 423.75 123.802 426.376 123.802 429.615 cv
123.802 432.854 129.209 435.48 135.877 435.48 cv
142.546 435.48 147.952 432.854 147.952 429.615 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
126.69 427.407 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
131.508 430.167 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
131.34 432.927 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
191.94 416.333 mo
179.52 418.23 160.545 421.162 148.988 423.75 cv
147.952 424.095 146.745 424.44 145.538 424.958 cv
@
145.71 424.44 mo
144.33 425.475 li
146.055 425.13 li
cp
@
145.71 424.44 mo
144.33 425.475 li
146.055 425.13 li
f
175.207 429.615 mo
175.207 426.376 169.801 423.75 163.132 423.75 cv
156.464 423.75 151.057 426.376 151.057 429.615 cv
151.057 432.854 156.464 435.48 163.132 435.48 cv
169.801 435.48 175.207 432.854 175.207 429.615 cv
@
175.207 429.615 mo
175.207 426.376 169.801 423.75 163.132 423.75 cv
156.464 423.75 151.057 426.376 151.057 429.615 cv
151.057 432.854 156.464 435.48 163.132 435.48 cv
169.801 435.48 175.207 432.854 175.207 429.615 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
153.945 427.407 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
158.763 430.167 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
158.595 432.927 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
196.08 417.023 mo
189.87 419.093 181.59 421.853 176.242 423.75 cv
175.38 424.095 174.172 424.612 173.138 425.13 cv
@
173.31 424.612 mo
171.93 425.648 li
173.655 425.303 li
cp
@
173.31 424.612 mo
171.93 425.648 li
173.655 425.303 li
f
202.462 429.615 mo
202.462 426.376 197.056 423.75 190.388 423.75 cv
183.719 423.75 178.312 426.376 178.312 429.615 cv
178.312 432.854 183.719 435.48 190.388 435.48 cv
197.056 435.48 202.462 432.854 202.462 429.615 cv
@
202.462 429.615 mo
202.462 426.376 197.056 423.75 190.388 423.75 cv
183.719 423.75 178.312 426.376 178.312 429.615 cv
178.312 432.854 183.719 435.48 190.388 435.48 cv
197.056 435.48 202.462 432.854 202.462 429.615 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
181.2 427.407 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
186.018 430.167 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
185.85 432.927 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
201.255 417.54 mo
199.875 419.093 198.15 420.99 196.425 422.888 cv
@
196.08 422.715 mo
195.217 424.268 li
196.597 423.233 li
cp
@
196.08 422.715 mo
195.217 424.268 li
196.597 423.233 li
f
229.717 429.615 mo
229.717 426.376 224.311 423.75 217.642 423.75 cv
210.974 423.75 205.567 426.376 205.567 429.615 cv
205.567 432.854 210.974 435.48 217.642 435.48 cv
224.311 435.48 229.717 432.854 229.717 429.615 cv
@
229.717 429.615 mo
229.717 426.376 224.311 423.75 217.642 423.75 cv
210.974 423.75 205.567 426.376 205.567 429.615 cv
205.567 432.854 210.974 435.48 217.642 435.48 cv
224.311 435.48 229.717 432.854 229.717 429.615 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
208.455 427.407 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
213.273 430.167 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
213.105 432.927 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
206.775 417.54 mo
208.155 419.093 209.88 420.99 211.605 422.888 cv
@
211.432 423.233 mo
212.812 424.268 li
211.95 422.715 li
cp
@
211.432 423.233 mo
212.812 424.268 li
211.95 422.715 li
f
256.972 429.615 mo
256.972 426.376 251.566 423.75 244.897 423.75 cv
238.229 423.75 232.822 426.376 232.822 429.615 cv
232.822 432.854 238.229 435.48 244.897 435.48 cv
251.566 435.48 256.972 432.854 256.972 429.615 cv
@
256.972 429.615 mo
256.972 426.376 251.566 423.75 244.897 423.75 cv
238.229 423.75 232.822 426.376 232.822 429.615 cv
232.822 432.854 238.229 435.48 244.897 435.48 cv
251.566 435.48 256.972 432.854 256.972 429.615 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
235.71 427.407 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
240.528 430.167 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
240.36 432.927 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
212.122 417.023 mo
218.16 419.093 226.612 421.853 231.788 423.75 cv
232.477 424.095 233.512 424.44 234.375 424.785 cv
@
234.375 425.303 mo
236.1 425.475 li
234.72 424.44 li
cp
@
234.375 425.303 mo
236.1 425.475 li
234.72 424.44 li
f
284.227 429.615 mo
284.227 426.376 278.821 423.75 272.152 423.75 cv
265.484 423.75 260.077 426.376 260.077 429.615 cv
260.077 432.854 265.484 435.48 272.152 435.48 cv
278.821 435.48 284.227 432.854 284.227 429.615 cv
@
284.227 429.615 mo
284.227 426.376 278.821 423.75 272.152 423.75 cv
265.484 423.75 260.077 426.376 260.077 429.615 cv
260.077 432.854 265.484 435.48 272.152 435.48 cv
278.821 435.48 284.227 432.854 284.227 429.615 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
262.965 427.407 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
267.783 430.167 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
267.615 432.927 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
216.09 416.333 mo
228.51 418.23 247.485 421.162 259.042 423.75 cv
260.077 424.095 261.285 424.44 262.492 424.958 cv
@
261.975 425.13 mo
263.7 425.475 li
262.32 424.44 li
cp
@
261.975 425.13 mo
263.7 425.475 li
262.32 424.44 li
f
311.482 429.615 mo
311.482 426.376 306.076 423.75 299.407 423.75 cv
292.739 423.75 287.332 426.376 287.332 429.615 cv
287.332 432.854 292.739 435.48 299.407 435.48 cv
306.076 435.48 311.482 432.854 311.482 429.615 cv
@
311.482 429.615 mo
311.482 426.376 306.076 423.75 299.407 423.75 cv
292.739 423.75 287.332 426.376 287.332 429.615 cv
287.332 432.854 292.739 435.48 299.407 435.48 cv
306.076 435.48 311.482 432.854 311.482 429.615 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
290.22 427.407 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
295.038 430.167 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
294.87 432.927 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
217.47 415.643 mo
235.582 417.54 267.495 420.818 286.297 423.75 cv
287.332 423.923 288.712 424.268 289.92 424.785 cv
@
289.402 424.958 mo
291.127 425.303 li
289.747 424.268 li
cp
@
289.402 424.958 mo
291.127 425.303 li
289.747 424.268 li
f
217.297 444.795 mo
217.297 443.08 210.656 441.69 202.462 441.69 cv
194.269 441.69 187.628 443.08 187.628 444.795 cv
187.628 446.51 194.269 447.9 202.462 447.9 cv
210.656 447.9 217.297 446.51 217.297 444.795 cv
@
217.297 444.795 mo
217.297 443.08 210.656 441.69 202.462 441.69 cv
194.269 441.69 187.628 443.08 187.628 444.795 cv
187.628 446.51 194.269 447.9 202.462 447.9 cv
210.656 447.9 217.297 446.51 217.297 444.795 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
189.349 445.347 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 .60376 1.20749 .60376 1.20749 .60376 1.2075 .603745 1.2075 .603745 1.2075 
.603745 1.2075 0 ]xsh
211.95 457.215 mo
211.95 455.5 207.702 454.11 202.462 454.11 cv
197.223 454.11 192.975 455.5 192.975 457.215 cv
192.975 458.93 197.223 460.32 202.462 460.32 cv
207.702 460.32 211.95 458.93 211.95 457.215 cv
@
211.95 457.215 mo
211.95 455.5 207.702 454.11 202.462 454.11 cv
197.223 454.11 192.975 455.5 192.975 457.215 cv
192.975 458.93 197.223 460.32 202.462 460.32 cv
207.702 460.32 211.95 458.93 211.95 457.215 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
194.783 457.767 mo
(roundrobin\(8,8\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
202.462 447.9 mo
202.462 449.28 202.462 450.833 202.462 452.385 cv
@
202.117 452.385 mo
202.462 454.11 li
202.98 452.385 li
cp
@
202.117 452.385 mo
202.462 454.11 li
202.98 452.385 li
f
116.902 433.928 mo
118.627 434.618 120.352 435.308 121.732 435.48 cv
139.672 438.412 169.342 441.69 187.455 443.415 cv
@
187.282 443.76 mo
189.007 443.588 li
187.282 442.898 li
cp
@
187.282 443.76 mo
189.007 443.588 li
187.282 442.898 li
f
144.33 433.755 mo
146.055 434.618 147.607 435.135 148.988 435.48 cv
159.682 437.895 176.76 440.828 188.662 442.725 cv
@
188.662 443.07 mo
190.388 442.898 li
188.662 442.38 li
cp
@
188.662 443.07 mo
190.388 442.898 li
188.662 442.38 li
f
171.93 433.755 mo
173.482 434.445 175.035 435.135 176.242 435.48 cv
180.9 437.205 187.972 439.793 193.492 441.862 cv
@
192.975 442.208 mo
194.7 442.208 li
193.147 441.345 li
cp
@
192.975 442.208 mo
194.7 442.208 li
193.147 441.345 li
f
194.7 435.135 mo
196.08 436.86 197.632 438.758 199.012 440.483 cv
@
198.667 440.655 mo
200.047 441.69 li
199.185 440.138 li
cp
@
198.667 440.655 mo
200.047 441.69 li
199.185 440.138 li
f
212.295 434.962 mo
210.397 436.86 208.327 438.93 206.602 440.655 cv
@
206.43 440.138 mo
205.567 441.69 li
207.12 440.828 li
cp
@
206.43 440.138 mo
205.567 441.69 li
207.12 440.828 li
f
236.272 433.755 mo
234.547 434.445 232.995 435.135 231.788 435.48 cv
226.785 437.378 218.85 439.965 212.467 441.862 cv
@
212.64 441.345 mo
211.088 442.208 li
212.812 442.208 li
cp
@
212.64 441.345 mo
211.088 442.208 li
212.812 442.208 li
f
263.872 433.928 mo
262.147 434.618 260.422 435.308 259.042 435.48 cv
247.485 438.068 228.682 441 215.917 442.898 cv
@
216.435 442.38 mo
214.71 443.07 li
216.435 443.243 li
cp
@
216.435 442.38 mo
214.71 443.07 li
216.435 443.243 li
f
291.127 433.928 mo
289.402 434.618 287.677 435.308 286.297 435.48 cv
267.667 438.412 236.445 441.69 217.815 443.415 cv
@
217.815 443.07 mo
216.09 443.588 li
217.815 443.76 li
cp
@
217.815 443.07 mo
216.09 443.588 li
217.815 443.76 li
f
176.76 470.325 mo
176.76 468.61 171.74 467.22 165.547 467.22 cv
159.355 467.22 154.335 468.61 154.335 470.325 cv
154.335 472.04 159.355 473.43 165.547 473.43 cv
171.74 473.43 176.76 472.04 176.76 470.325 cv
@
176.76 470.325 mo
176.76 468.61 171.74 467.22 165.547 467.22 cv
159.355 467.22 154.335 468.61 154.335 470.325 cv
154.335 472.04 159.355 473.43 165.547 473.43 cv
171.74 473.43 176.76 472.04 176.76 470.325 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
156.057 470.877 mo
(roundrobin\(1,1,1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 .60376 1.20749 .60376 1.20749 0 ]xsh
196.08 459.458 mo
189.87 461.7 180.555 464.978 173.827 467.393 cv
@
173.827 466.875 mo
172.447 467.91 li
174.172 467.738 li
cp
@
173.827 466.875 mo
172.447 467.91 li
174.172 467.738 li
f
262.665 470.325 mo
262.665 468.61 257.645 467.22 251.452 467.22 cv
245.26 467.22 240.24 468.61 240.24 470.325 cv
240.24 472.04 245.26 473.43 251.452 473.43 cv
257.645 473.43 262.665 472.04 262.665 470.325 cv
@
262.665 470.325 mo
262.665 468.61 257.645 467.22 251.452 467.22 cv
245.26 467.22 240.24 468.61 240.24 470.325 cv
240.24 472.04 245.26 473.43 251.452 473.43 cv
257.645 473.43 262.665 472.04 262.665 470.325 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
241.962 470.877 mo
(roundrobin\(1,1,1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 .60376 1.20749 .60376 1.20749 0 ]xsh
209.88 459.112 mo
218.505 461.355 232.65 465.323 242.138 467.738 cv
@
241.62 468.083 mo
243.345 468.083 li
241.792 467.22 li
cp
@
241.62 468.083 mo
243.345 468.083 li
241.792 467.22 li
f
217.988 624.195 mo
217.988 622.48 213.74 621.09 208.5 621.09 cv
203.26 621.09 199.012 622.48 199.012 624.195 cv
199.012 625.91 203.26 627.3 208.5 627.3 cv
213.74 627.3 217.988 625.91 217.988 624.195 cv
@
217.988 624.195 mo
217.988 622.48 213.74 621.09 208.5 621.09 cv
203.26 621.09 199.012 622.48 199.012 624.195 cv
199.012 625.91 203.26 627.3 208.5 627.3 cv
213.74 627.3 217.988 625.91 217.988 624.195 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
200.82 624.747 mo
(roundrobin\(8,8\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
216.607 639.375 mo
216.607 636.136 212.978 633.51 208.5 633.51 cv
204.022 633.51 200.393 636.136 200.393 639.375 cv
200.393 642.614 204.022 645.24 208.5 645.24 cv
212.978 645.24 216.607 642.614 216.607 639.375 cv
@
216.607 639.375 mo
216.607 636.136 212.978 633.51 208.5 633.51 cv
204.022 633.51 200.393 636.136 200.393 639.375 cv
200.393 642.614 204.022 645.24 208.5 645.24 cv
212.978 645.24 216.607 642.614 216.607 639.375 cv
.843 .18 .157 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQP+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7EF322B10A2A8DE6EF0A6CE60E86B1DF5C68015667A2338DB
07BCF91C9D8DCCB5967A656E7EB6651B3E305A306DA1BB8C1BAEECFC60DC00D8
8AEC56E3DF7455D57CB9BB0CC9A32704D4F0F1C39C5B2EDC70F42754CACE7253
FF5FDAE4B675FFF987E22613E24B8956EFA9C2C5B9AC406D966F459601B2046A
C9E54A3BB37C45EDEB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQP+TimesNewRomanPSMT /Encoding get
dup 80 /P put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQP+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two /.notdef /four /five 
/six /.notdef /eight /.notdef /colon 2{/.notdef}rp /equal /greater 
3{/.notdef}rp /B /C /.notdef /E 3{/.notdef}rp /I /.notdef 
/K /.notdef /M /.notdef /O /P /.notdef /R 
/S 13{/.notdef}rp /a /b /c /d /e /.notdef 
/g /h /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /x /y 134{/.notdef}rp]
LTFDQP+TimesNewRomanPSMT nf
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
203.202 637.167 mo
(KeyPrinter)
[1.74359 1.07222 1.2075 1.34274 .804169 .671371 1.2075 .671371 1.07222 0 ]xsh
203.527 639.927 mo
(work=128)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 1.2075 0 ]xsh
203.359 642.687 mo
(I/O: 16->0)
[.804184 .671356 1.74361 .671356 .60376 1.2075 1.20749 .804184 1.36205 0 ]xsh
208.5 627.3 mo
208.5 628.507 208.5 630.232 208.5 631.785 cv
@
208.155 631.785 mo
208.5 633.51 li
209.017 631.785 li
cp
@
208.155 631.785 mo
208.5 633.51 li
209.017 631.785 li
f
123.112 485.505 mo
123.112 482.266 117.706 479.64 111.038 479.64 cv
104.369 479.64 98.9625 482.266 98.9625 485.505 cv
98.9625 488.744 104.369 491.37 111.038 491.37 cv
117.706 491.37 123.112 488.744 123.112 485.505 cv
@
123.112 485.505 mo
123.112 482.266 117.706 479.64 111.038 479.64 cv
104.369 479.64 98.9625 482.266 98.9625 485.505 cv
98.9625 488.744 104.369 491.37 111.038 491.37 cv
117.706 491.37 123.112 488.744 123.112 485.505 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
101.85 483.297 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
106.668 486.057 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
106.5 488.817 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
156.577 472.223 mo
147.262 474.12 132.772 477.398 124.147 479.64 cv
123.285 479.985 122.077 480.33 120.87 480.848 cv
@
121.042 480.33 mo
119.662 481.365 li
121.388 481.02 li
cp
@
121.042 480.33 mo
119.662 481.365 li
121.388 481.02 li
f
150.367 485.505 mo
150.367 482.266 144.961 479.64 138.292 479.64 cv
131.624 479.64 126.217 482.266 126.217 485.505 cv
126.217 488.744 131.624 491.37 138.292 491.37 cv
144.961 491.37 150.367 488.744 150.367 485.505 cv
@
150.367 485.505 mo
150.367 482.266 144.961 479.64 138.292 479.64 cv
131.624 479.64 126.217 482.266 126.217 485.505 cv
126.217 488.744 131.624 491.37 138.292 491.37 cv
144.961 491.37 150.367 488.744 150.367 485.505 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
129.105 483.297 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
133.923 486.057 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
133.755 488.817 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
160.545 473.085 mo
156.922 475.155 152.092 477.743 147.78 480.158 cv
@
147.607 479.812 mo
146.227 481.02 li
147.952 480.503 li
cp
@
147.607 479.812 mo
146.227 481.02 li
147.952 480.503 li
f
177.622 485.505 mo
177.622 482.266 172.216 479.64 165.547 479.64 cv
158.879 479.64 153.472 482.266 153.472 485.505 cv
153.472 488.744 158.879 491.37 165.547 491.37 cv
172.216 491.37 177.622 488.744 177.622 485.505 cv
@
177.622 485.505 mo
177.622 482.266 172.216 479.64 165.547 479.64 cv
158.879 479.64 153.472 482.266 153.472 485.505 cv
153.472 488.744 158.879 491.37 165.547 491.37 cv
172.216 491.37 177.622 488.744 177.622 485.505 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
156.36 483.297 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
161.178 486.057 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
161.01 488.817 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
165.547 473.43 mo
165.547 474.638 165.547 476.362 165.547 477.915 cv
@
165.202 477.915 mo
165.547 479.64 li
166.065 477.915 li
cp
@
165.202 477.915 mo
165.547 479.64 li
166.065 477.915 li
f
204.877 485.505 mo
204.877 482.266 199.471 479.64 192.802 479.64 cv
186.134 479.64 180.727 482.266 180.727 485.505 cv
180.727 488.744 186.134 491.37 192.802 491.37 cv
199.471 491.37 204.877 488.744 204.877 485.505 cv
@
204.877 485.505 mo
204.877 482.266 199.471 479.64 192.802 479.64 cv
186.134 479.64 180.727 482.266 180.727 485.505 cv
180.727 488.744 186.134 491.37 192.802 491.37 cv
199.471 491.37 204.877 488.744 204.877 485.505 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
183.615 483.297 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
188.433 486.057 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
188.265 488.817 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
170.55 473.085 mo
174.172 475.155 179.002 477.743 183.315 480.158 cv
@
183.142 480.503 mo
184.867 481.02 li
183.488 479.812 li
cp
@
183.142 480.503 mo
184.867 481.02 li
183.488 479.812 li
f
161.752 500.685 mo
161.752 498.97 156.732 497.58 150.54 497.58 cv
144.348 497.58 139.327 498.97 139.327 500.685 cv
139.327 502.4 144.348 503.79 150.54 503.79 cv
156.732 503.79 161.752 502.4 161.752 500.685 cv
@
161.752 500.685 mo
161.752 498.97 156.732 497.58 150.54 497.58 cv
144.348 497.58 139.327 498.97 139.327 500.685 cv
139.327 502.4 144.348 503.79 150.54 503.79 cv
156.732 503.79 161.752 502.4 161.752 500.685 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
141.049 501.237 mo
(roundrobin\(1,1,1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 .60376 1.20749 .60376 1.2075 0 ]xsh
160.027 513.105 mo
160.027 511.39 155.78 510 150.54 510 cv
145.3 510 141.052 511.39 141.052 513.105 cv
141.052 514.82 145.3 516.21 150.54 516.21 cv
155.78 516.21 160.027 514.82 160.027 513.105 cv
@
160.027 513.105 mo
160.027 511.39 155.78 510 150.54 510 cv
145.3 510 141.052 511.39 141.052 513.105 cv
141.052 514.82 145.3 516.21 150.54 516.21 cv
155.78 516.21 160.027 514.82 160.027 513.105 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
142.86 513.657 mo
(roundrobin\(4,4\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
150.54 503.79 mo
150.54 505.17 150.54 506.723 150.54 508.275 cv
@
150.195 508.275 mo
150.54 510 li
151.057 508.275 li
cp
@
150.195 508.275 mo
150.54 510 li
151.057 508.275 li
f
119.835 489.645 mo
121.388 490.335 122.94 491.025 124.147 491.37 cv
128.977 493.268 136.567 495.855 142.26 497.925 cv
@
141.742 498.27 mo
143.467 498.27 li
141.915 497.408 li
cp
@
141.742 498.27 mo
143.467 498.27 li
141.915 497.408 li
f
142.777 491.025 mo
144.157 492.75 145.71 494.648 147.09 496.373 cv
@
146.745 496.545 mo
148.125 497.58 li
147.262 496.028 li
cp
@
146.745 496.545 mo
148.125 497.58 li
147.262 496.028 li
f
160.372 490.853 mo
158.475 492.75 156.232 494.82 154.507 496.545 cv
@
154.335 496.028 mo
153.472 497.58 li
155.025 496.718 li
cp
@
154.335 496.028 mo
153.472 497.58 li
155.025 496.718 li
f
184.177 489.645 mo
182.452 490.335 180.9 491.025 179.692 491.37 cv
174.345 493.268 165.892 496.028 159.51 498.098 cv
@
159.682 497.58 mo
158.13 498.443 li
159.855 498.443 li
cp
@
159.682 497.58 mo
158.13 498.443 li
159.855 498.443 li
f
140.88 526.215 mo
140.88 524.5 136.632 523.11 131.392 523.11 cv
126.153 523.11 121.905 524.5 121.905 526.215 cv
121.905 527.93 126.153 529.32 131.392 529.32 cv
136.632 529.32 140.88 527.93 140.88 526.215 cv
@
140.88 526.215 mo
140.88 524.5 136.632 523.11 131.392 523.11 cv
126.153 523.11 121.905 524.5 121.905 526.215 cv
121.905 527.93 126.153 529.32 131.392 529.32 cv
136.632 529.32 140.88 527.93 140.88 526.215 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
123.713 526.767 mo
(roundrobin\(1,1\))
[.804176 1.2075 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
146.4 515.865 mo
143.64 517.762 140.017 520.35 136.912 522.593 cv
@
136.74 522.248 mo
135.532 523.455 li
137.257 522.938 li
cp
@
136.74 522.248 mo
135.532 523.455 li
137.257 522.938 li
f
172.275 526.215 mo
172.275 524.5 168.027 523.11 162.788 523.11 cv
157.548 523.11 153.3 524.5 153.3 526.215 cv
153.3 527.93 157.548 529.32 162.788 529.32 cv
168.027 529.32 172.275 527.93 172.275 526.215 cv
@
172.275 526.215 mo
172.275 524.5 168.027 523.11 162.788 523.11 cv
157.548 523.11 153.3 524.5 153.3 526.215 cv
153.3 527.93 157.548 529.32 162.788 529.32 cv
168.027 529.32 172.275 527.93 172.275 526.215 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
155.108 526.767 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
153.3 516.038 mo
155.025 517.935 157.095 520.178 158.82 522.075 cv
@
158.475 522.42 mo
160.027 523.283 li
159.165 521.73 li
cp
@
158.475 522.42 mo
160.027 523.283 li
159.165 521.73 li
f
185.902 611.775 mo
185.902 610.06 181.655 608.67 176.415 608.67 cv
171.175 608.67 166.927 610.06 166.927 611.775 cv
166.927 613.49 171.175 614.88 176.415 614.88 cv
181.655 614.88 185.902 613.49 185.902 611.775 cv
@
185.902 611.775 mo
185.902 610.06 181.655 608.67 176.415 608.67 cv
171.175 608.67 166.927 610.06 166.927 611.775 cv
166.927 613.49 171.175 614.88 176.415 614.88 cv
181.655 614.88 185.902 613.49 185.902 611.775 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
168.735 612.327 mo
(roundrobin\(4,4\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
182.625 614.19 mo
187.972 616.26 195.562 619.192 201.082 621.435 cv
@
200.565 621.78 mo
202.29 621.78 li
200.738 620.917 li
cp
@
200.565 621.78 mo
202.29 621.78 li
200.738 620.917 li
f
116.212 541.395 mo
116.212 538.156 110.806 535.53 104.138 535.53 cv
97.4687 535.53 92.0625 538.156 92.0625 541.395 cv
92.0625 544.634 97.4687 547.26 104.138 547.26 cv
110.806 547.26 116.212 544.634 116.212 541.395 cv
@
116.212 541.395 mo
116.212 538.156 110.806 535.53 104.138 535.53 cv
97.4687 535.53 92.0625 538.156 92.0625 541.395 cv
92.0625 544.634 97.4687 547.26 104.138 547.26 cv
110.806 547.26 116.212 544.634 116.212 541.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
94.9497 539.187 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
99.7676 541.947 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
99.5997 544.707 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
126.562 528.975 mo
122.94 531.045 117.938 533.633 113.625 536.048 cv
@
113.452 535.703 mo
112.072 536.91 li
113.797 536.393 li
cp
@
113.452 535.703 mo
112.072 536.91 li
113.797 536.393 li
f
143.467 541.395 mo
143.467 538.156 138.061 535.53 131.392 535.53 cv
124.724 535.53 119.317 538.156 119.317 541.395 cv
119.317 544.634 124.724 547.26 131.392 547.26 cv
138.061 547.26 143.467 544.634 143.467 541.395 cv
@
143.467 541.395 mo
143.467 538.156 138.061 535.53 131.392 535.53 cv
124.724 535.53 119.317 538.156 119.317 541.395 cv
119.317 544.634 124.724 547.26 131.392 547.26 cv
138.061 547.26 143.467 544.634 143.467 541.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
122.205 539.187 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
127.023 541.947 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
126.855 544.707 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603745 1.2075 .804184 1.36205 0 ]xsh
131.392 529.32 mo
131.392 530.528 131.392 532.253 131.392 533.805 cv
@
131.047 533.805 mo
131.392 535.53 li
131.91 533.805 li
cp
@
131.047 533.805 mo
131.392 535.53 li
131.91 533.805 li
f
127.252 556.575 mo
127.252 554.86 123.005 553.47 117.765 553.47 cv
112.525 553.47 108.277 554.86 108.277 556.575 cv
108.277 558.29 112.525 559.68 117.765 559.68 cv
123.005 559.68 127.252 558.29 127.252 556.575 cv
@
127.252 556.575 mo
127.252 554.86 123.005 553.47 117.765 553.47 cv
112.525 553.47 108.277 554.86 108.277 556.575 cv
108.277 558.29 112.525 559.68 117.765 559.68 cv
123.005 559.68 127.252 558.29 127.252 556.575 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
110.085 557.127 mo
(roundrobin\(1,1\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603745 1.2075 0 ]xsh
127.252 568.995 mo
127.252 567.28 123.005 565.89 117.765 565.89 cv
112.525 565.89 108.277 567.28 108.277 568.995 cv
108.277 570.71 112.525 572.1 117.765 572.1 cv
123.005 572.1 127.252 570.71 127.252 568.995 cv
@
127.252 568.995 mo
127.252 567.28 123.005 565.89 117.765 565.89 cv
112.525 565.89 108.277 567.28 108.277 568.995 cv
108.277 570.71 112.525 572.1 117.765 572.1 cv
123.005 572.1 127.252 570.71 127.252 568.995 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
110.085 569.547 mo
(roundrobin\(2,2\))
[.804176 1.2075 1.2075 1.2075 1.2075 .804176 1.2075 1.2075 .671371 1.2075 .804176 1.2075 
.603745 1.2075 0 ]xsh
117.765 559.68 mo
117.765 561.06 117.765 562.612 117.765 564.165 cv
@
117.42 564.165 mo
117.765 565.89 li
118.282 564.165 li
cp
@
117.42 564.165 mo
117.765 565.89 li
118.282 564.165 li
f
108.967 546.743 mo
110.692 548.64 112.417 550.71 113.97 552.435 cv
@
113.625 552.608 mo
115.005 553.643 li
114.142 552.09 li
cp
@
113.625 552.608 mo
115.005 553.643 li
114.142 552.09 li
f
126.562 546.743 mo
124.838 548.64 123.112 550.71 121.56 552.435 cv
@
121.388 552.09 mo
120.525 553.643 li
121.905 552.608 li
cp
@
121.388 552.09 mo
120.525 553.643 li
121.905 552.608 li
f
116.212 584.175 mo
116.212 580.936 110.806 578.31 104.138 578.31 cv
97.4687 578.31 92.0625 580.936 92.0625 584.175 cv
92.0625 587.414 97.4687 590.04 104.138 590.04 cv
110.806 590.04 116.212 587.414 116.212 584.175 cv
@
116.212 584.175 mo
116.212 580.936 110.806 578.31 104.138 578.31 cv
97.4687 578.31 92.0625 580.936 92.0625 584.175 cv
92.0625 587.414 97.4687 590.04 104.138 590.04 cv
110.806 590.04 116.212 587.414 116.212 584.175 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
94.9497 581.967 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07223 .804176 1.07222 1.47555 1.2075 1.07223 1.2075 1.07223 
1.2075 1.2075 0 ]xsh
99.7676 584.727 mo
(work=14)
[1.74359 1.2075 .804176 1.2075 1.36205 1.2075 0 ]xsh
99.5997 587.487 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603752 1.2075 .804176 1.36205 0 ]xsh
115.005 571.928 mo
113.625 573.48 111.9 575.378 110.175 577.448 cv
@
109.83 577.275 mo
108.967 578.828 li
110.347 577.793 li
cp
@
109.83 577.275 mo
108.967 578.828 li
110.347 577.793 li
f
143.467 584.175 mo
143.467 580.936 138.061 578.31 131.392 578.31 cv
124.724 578.31 119.317 580.936 119.317 584.175 cv
119.317 587.414 124.724 590.04 131.392 590.04 cv
138.061 590.04 143.467 587.414 143.467 584.175 cv
@
143.467 584.175 mo
143.467 580.936 138.061 578.31 131.392 578.31 cv
124.724 578.31 119.317 580.936 119.317 584.175 cv
119.317 587.414 124.724 590.04 131.392 590.04 cv
138.061 590.04 143.467 587.414 143.467 584.175 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
122.205 581.967 mo
(CompareExchange)
[1.61079 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
127.023 584.727 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
126.855 587.487 mo
(I/O: 2->2)
[.804176 .671371 1.74359 .671371 .603745 1.2075 .804184 1.36205 0 ]xsh
120.525 571.928 mo
121.905 573.48 123.63 575.378 125.355 577.448 cv
@
125.182 577.793 mo
126.562 578.828 li
125.7 577.275 li
cp
@
125.182 577.793 mo
126.562 578.828 li
125.7 577.275 li
f
140.88 599.355 mo
140.88 597.64 136.632 596.25 131.392 596.25 cv
126.153 596.25 121.905 597.64 121.905 599.355 cv
121.905 601.07 126.153 602.46 131.392 602.46 cv
136.632 602.46 140.88 601.07 140.88 599.355 cv
@
140.88 599.355 mo
140.88 597.64 136.632 596.25 131.392 596.25 cv
126.153 596.25 121.905 597.64 121.905 599.355 cv
121.905 601.07 126.153 602.46 131.392 602.46 cv
136.632 602.46 140.88 601.07 140.88 599.355 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
123.713 599.907 mo
(roundrobin\(2,2\))
[.804176 1.2075 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
137.602 601.77 mo
141.052 602.977 145.192 604.357 148.125 605.22 cv
153.3 606.6 161.062 608.497 167.272 609.705 cv
@
166.755 610.05 mo
168.48 610.05 li
166.927 609.187 li
cp
@
166.755 610.05 mo
168.48 610.05 li
166.927 609.187 li
f
112.072 588.66 mo
116.212 590.902 121.388 593.835 125.182 595.905 cv
@
124.838 596.25 mo
126.562 596.595 li
125.182 595.387 li
cp
@
124.838 596.25 mo
126.562 596.595 li
125.182 595.387 li
f
131.392 590.04 mo
131.392 591.592 131.392 593.145 131.392 594.697 cv
@
131.047 594.525 mo
131.392 596.25 li
131.91 594.525 li
cp
@
131.047 594.525 mo
131.392 596.25 li
131.91 594.525 li
f
174.862 541.395 mo
174.862 538.156 169.456 535.53 162.788 535.53 cv
156.119 535.53 150.712 538.156 150.712 541.395 cv
150.712 544.634 156.119 547.26 162.788 547.26 cv
169.456 547.26 174.862 544.634 174.862 541.395 cv
@
174.862 541.395 mo
174.862 538.156 169.456 535.53 162.788 535.53 cv
156.119 535.53 150.712 538.156 150.712 541.395 cv
150.712 544.634 156.119 547.26 162.788 547.26 cv
169.456 547.26 174.862 544.634 174.862 541.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
153.6 539.187 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
158.418 541.947 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
158.25 544.707 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
162.788 529.32 mo
162.788 530.528 162.788 532.253 162.788 533.805 cv
@
162.442 533.805 mo
162.788 535.53 li
163.305 533.805 li
cp
@
162.442 533.805 mo
162.788 535.53 li
163.305 533.805 li
f
202.117 541.395 mo
202.117 538.156 196.711 535.53 190.042 535.53 cv
183.374 535.53 177.967 538.156 177.967 541.395 cv
177.967 544.634 183.374 547.26 190.042 547.26 cv
196.711 547.26 202.117 544.634 202.117 541.395 cv
@
202.117 541.395 mo
202.117 538.156 196.711 535.53 190.042 535.53 cv
183.374 535.53 177.967 538.156 177.967 541.395 cv
177.967 544.634 183.374 547.26 190.042 547.26 cv
196.711 547.26 202.117 544.634 202.117 541.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
180.855 539.187 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
185.673 541.947 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
185.505 544.707 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
167.617 528.975 mo
171.24 531.045 176.242 533.633 180.555 536.048 cv
@
180.382 536.393 mo
182.107 536.91 li
180.727 535.703 li
cp
@
180.382 536.393 mo
182.107 536.91 li
180.727 535.703 li
f
185.902 556.575 mo
185.902 554.86 181.655 553.47 176.415 553.47 cv
171.175 553.47 166.927 554.86 166.927 556.575 cv
166.927 558.29 171.175 559.68 176.415 559.68 cv
181.655 559.68 185.902 558.29 185.902 556.575 cv
@
185.902 556.575 mo
185.902 554.86 181.655 553.47 176.415 553.47 cv
171.175 553.47 166.927 554.86 166.927 556.575 cv
166.927 558.29 171.175 559.68 176.415 559.68 cv
181.655 559.68 185.902 558.29 185.902 556.575 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
168.735 557.127 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
185.902 568.995 mo
185.902 567.28 181.655 565.89 176.415 565.89 cv
171.175 565.89 166.927 567.28 166.927 568.995 cv
166.927 570.71 171.175 572.1 176.415 572.1 cv
181.655 572.1 185.902 570.71 185.902 568.995 cv
@
185.902 568.995 mo
185.902 567.28 181.655 565.89 176.415 565.89 cv
171.175 565.89 166.927 567.28 166.927 568.995 cv
166.927 570.71 171.175 572.1 176.415 572.1 cv
181.655 572.1 185.902 570.71 185.902 568.995 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
168.735 569.547 mo
(roundrobin\(2,2\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
176.415 559.68 mo
176.415 561.06 176.415 562.612 176.415 564.165 cv
@
176.07 564.165 mo
176.415 565.89 li
176.932 564.165 li
cp
@
176.07 564.165 mo
176.415 565.89 li
176.932 564.165 li
f
167.617 546.743 mo
169.342 548.64 171.067 550.71 172.62 552.435 cv
@
172.275 552.608 mo
173.655 553.643 li
172.792 552.09 li
cp
@
172.275 552.608 mo
173.655 553.643 li
172.792 552.09 li
f
185.212 546.743 mo
183.488 548.64 181.762 550.71 180.21 552.435 cv
@
180.038 552.09 mo
179.175 553.643 li
180.555 552.608 li
cp
@
180.038 552.09 mo
179.175 553.643 li
180.555 552.608 li
f
174.862 584.175 mo
174.862 580.936 169.456 578.31 162.788 578.31 cv
156.119 578.31 150.712 580.936 150.712 584.175 cv
150.712 587.414 156.119 590.04 162.788 590.04 cv
169.456 590.04 174.862 587.414 174.862 584.175 cv
@
174.862 584.175 mo
174.862 580.936 169.456 578.31 162.788 578.31 cv
156.119 578.31 150.712 580.936 150.712 584.175 cv
150.712 587.414 156.119 590.04 162.788 590.04 cv
169.456 590.04 174.862 587.414 174.862 584.175 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
153.6 581.967 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
158.418 584.727 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
158.25 587.487 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
173.655 571.928 mo
172.275 573.48 170.55 575.378 168.825 577.448 cv
@
168.48 577.275 mo
167.617 578.828 li
168.997 577.793 li
cp
@
168.48 577.275 mo
167.617 578.828 li
168.997 577.793 li
f
202.117 584.175 mo
202.117 580.936 196.711 578.31 190.042 578.31 cv
183.374 578.31 177.967 580.936 177.967 584.175 cv
177.967 587.414 183.374 590.04 190.042 590.04 cv
196.711 590.04 202.117 587.414 202.117 584.175 cv
@
202.117 584.175 mo
202.117 580.936 196.711 578.31 190.042 578.31 cv
183.374 578.31 177.967 580.936 177.967 584.175 cv
177.967 587.414 183.374 590.04 190.042 590.04 cv
196.711 590.04 202.117 587.414 202.117 584.175 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
180.855 581.967 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
185.673 584.727 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
185.505 587.487 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
179.175 571.928 mo
180.555 573.48 182.28 575.378 184.005 577.448 cv
@
183.832 577.793 mo
185.212 578.828 li
184.35 577.275 li
cp
@
183.832 577.793 mo
185.212 578.828 li
184.35 577.275 li
f
185.902 599.355 mo
185.902 597.64 181.655 596.25 176.415 596.25 cv
171.175 596.25 166.927 597.64 166.927 599.355 cv
166.927 601.07 171.175 602.46 176.415 602.46 cv
181.655 602.46 185.902 601.07 185.902 599.355 cv
@
185.902 599.355 mo
185.902 597.64 181.655 596.25 176.415 596.25 cv
171.175 596.25 166.927 597.64 166.927 599.355 cv
166.927 601.07 171.175 602.46 176.415 602.46 cv
181.655 602.46 185.902 601.07 185.902 599.355 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
168.735 599.907 mo
(roundrobin\(2,2\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
176.415 602.46 mo
176.415 603.84 176.415 605.392 176.415 606.945 cv
@
176.07 606.945 mo
176.415 608.67 li
176.932 606.945 li
cp
@
176.07 606.945 mo
176.415 608.67 li
176.932 606.945 li
f
167.617 589.522 mo
169.342 591.42 171.067 593.49 172.62 595.215 cv
@
172.275 595.387 mo
173.655 596.422 li
172.792 594.87 li
cp
@
172.275 595.387 mo
173.655 596.422 li
172.792 594.87 li
f
185.212 589.522 mo
183.488 591.42 181.762 593.49 180.21 595.215 cv
@
180.038 594.87 mo
179.175 596.422 li
180.555 595.387 li
cp
@
180.038 594.87 mo
179.175 596.422 li
180.555 595.387 li
f
236.272 485.505 mo
236.272 482.266 230.866 479.64 224.197 479.64 cv
217.529 479.64 212.122 482.266 212.122 485.505 cv
212.122 488.744 217.529 491.37 224.197 491.37 cv
230.866 491.37 236.272 488.744 236.272 485.505 cv
@
236.272 485.505 mo
236.272 482.266 230.866 479.64 224.197 479.64 cv
217.529 479.64 212.122 482.266 212.122 485.505 cv
212.122 488.744 217.529 491.37 224.197 491.37 cv
230.866 491.37 236.272 488.744 236.272 485.505 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
215.01 483.297 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
219.828 486.057 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
219.66 488.817 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
246.45 473.085 mo
242.827 475.155 237.997 477.743 233.685 480.158 cv
@
233.512 479.812 mo
232.132 481.02 li
233.857 480.503 li
cp
@
233.512 479.812 mo
232.132 481.02 li
233.857 480.503 li
f
263.527 485.505 mo
263.527 482.266 258.121 479.64 251.452 479.64 cv
244.784 479.64 239.377 482.266 239.377 485.505 cv
239.377 488.744 244.784 491.37 251.452 491.37 cv
258.121 491.37 263.527 488.744 263.527 485.505 cv
@
263.527 485.505 mo
263.527 482.266 258.121 479.64 251.452 479.64 cv
244.784 479.64 239.377 482.266 239.377 485.505 cv
239.377 488.744 244.784 491.37 251.452 491.37 cv
258.121 491.37 263.527 488.744 263.527 485.505 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
242.265 483.297 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.0722 
1.20752 1.20749 0 ]xsh
247.083 486.057 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
246.915 488.817 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
251.452 473.43 mo
251.452 474.638 251.452 476.362 251.452 477.915 cv
@
251.107 477.915 mo
251.452 479.64 li
251.97 477.915 li
cp
@
251.107 477.915 mo
251.452 479.64 li
251.97 477.915 li
f
290.782 485.505 mo
290.782 482.266 285.376 479.64 278.707 479.64 cv
272.039 479.64 266.632 482.266 266.632 485.505 cv
266.632 488.744 272.039 491.37 278.707 491.37 cv
285.376 491.37 290.782 488.744 290.782 485.505 cv
@
290.782 485.505 mo
290.782 482.266 285.376 479.64 278.707 479.64 cv
272.039 479.64 266.632 482.266 266.632 485.505 cv
266.632 488.744 272.039 491.37 278.707 491.37 cv
285.376 491.37 290.782 488.744 290.782 485.505 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
269.52 483.297 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
274.338 486.057 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
274.17 488.817 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
256.455 473.085 mo
260.077 475.155 264.907 477.743 269.22 480.158 cv
@
269.047 480.503 mo
270.772 481.02 li
269.392 479.812 li
cp
@
269.047 480.503 mo
270.772 481.02 li
269.392 479.812 li
f
318.038 485.505 mo
318.038 482.266 312.631 479.64 305.962 479.64 cv
299.294 479.64 293.888 482.266 293.888 485.505 cv
293.888 488.744 299.294 491.37 305.962 491.37 cv
312.631 491.37 318.038 488.744 318.038 485.505 cv
@
318.038 485.505 mo
318.038 482.266 312.631 479.64 305.962 479.64 cv
299.294 479.64 293.888 482.266 293.888 485.505 cv
293.888 488.744 299.294 491.37 305.962 491.37 cv
312.631 491.37 318.038 488.744 318.038 485.505 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
296.775 483.297 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
301.593 486.057 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
301.425 488.817 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
260.422 472.223 mo
269.91 474.12 284.227 477.398 292.852 479.64 cv
293.542 479.812 294.577 480.158 295.612 480.675 cv
@
295.612 481.193 mo
297.338 481.365 li
295.957 480.33 li
cp
@
295.612 481.193 mo
297.338 481.365 li
295.957 480.33 li
f
277.672 500.685 mo
277.672 498.97 272.652 497.58 266.46 497.58 cv
260.268 497.58 255.247 498.97 255.247 500.685 cv
255.247 502.4 260.268 503.79 266.46 503.79 cv
272.652 503.79 277.672 502.4 277.672 500.685 cv
@
277.672 500.685 mo
277.672 498.97 272.652 497.58 266.46 497.58 cv
260.268 497.58 255.247 498.97 255.247 500.685 cv
255.247 502.4 260.268 503.79 266.46 503.79 cv
272.652 503.79 277.672 502.4 277.672 500.685 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
256.969 501.237 mo
(roundrobin\(1,1,1,1\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 .60376 1.20749 .60376 1.20749 0 ]xsh
275.947 513.105 mo
275.947 511.39 271.7 510 266.46 510 cv
261.22 510 256.972 511.39 256.972 513.105 cv
256.972 514.82 261.22 516.21 266.46 516.21 cv
271.7 516.21 275.947 514.82 275.947 513.105 cv
@
275.947 513.105 mo
275.947 511.39 271.7 510 266.46 510 cv
261.22 510 256.972 511.39 256.972 513.105 cv
256.972 514.82 261.22 516.21 266.46 516.21 cv
271.7 516.21 275.947 514.82 275.947 513.105 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
258.78 513.657 mo
(roundrobin\(4,4\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20749 .804199 1.20749 
.60376 1.20749 0 ]xsh
266.46 503.79 mo
266.46 505.17 266.46 506.723 266.46 508.275 cv
@
266.115 508.275 mo
266.46 510 li
266.977 508.275 li
cp
@
266.115 508.275 mo
266.46 510 li
266.977 508.275 li
f
232.822 489.645 mo
234.547 490.335 236.1 491.025 237.307 491.37 cv
242.655 493.268 251.107 496.028 257.49 498.098 cv
@
257.145 498.443 mo
258.87 498.443 li
257.317 497.58 li
cp
@
257.145 498.443 mo
258.87 498.443 li
257.317 497.58 li
f
256.627 490.853 mo
258.525 492.75 260.767 494.82 262.492 496.545 cv
@
261.975 496.718 mo
263.527 497.58 li
262.665 496.028 li
cp
@
261.975 496.718 mo
263.527 497.58 li
262.665 496.028 li
f
274.222 491.025 mo
272.842 492.75 271.29 494.648 269.91 496.373 cv
@
269.738 496.028 mo
268.875 497.58 li
270.255 496.545 li
cp
@
269.738 496.028 mo
268.875 497.58 li
270.255 496.545 li
f
297.338 489.645 mo
295.612 490.335 294.06 491.025 292.852 491.37 cv
288.195 493.268 280.605 495.855 274.912 497.925 cv
@
275.257 497.408 mo
273.705 498.27 li
275.43 498.27 li
cp
@
275.257 497.408 mo
273.705 498.27 li
275.43 498.27 li
f
263.7 526.215 mo
263.7 524.5 259.452 523.11 254.212 523.11 cv
248.973 523.11 244.725 524.5 244.725 526.215 cv
244.725 527.93 248.973 529.32 254.212 529.32 cv
259.452 529.32 263.7 527.93 263.7 526.215 cv
@
263.7 526.215 mo
263.7 524.5 259.452 523.11 254.212 523.11 cv
248.973 523.11 244.725 524.5 244.725 526.215 cv
244.725 527.93 248.973 529.32 254.212 529.32 cv
259.452 529.32 263.7 527.93 263.7 526.215 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
246.533 526.767 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671387 1.20749 .804169 1.20752 
.603729 1.20752 0 ]xsh
263.7 516.038 mo
261.975 517.935 259.905 520.178 258.18 522.075 cv
@
257.835 521.73 mo
256.972 523.283 li
258.525 522.42 li
cp
@
257.835 521.73 mo
256.972 523.283 li
258.525 522.42 li
f
295.095 526.215 mo
295.095 524.5 290.847 523.11 285.607 523.11 cv
280.368 523.11 276.12 524.5 276.12 526.215 cv
276.12 527.93 280.368 529.32 285.607 529.32 cv
290.847 529.32 295.095 527.93 295.095 526.215 cv
@
295.095 526.215 mo
295.095 524.5 290.847 523.11 285.607 523.11 cv
280.368 523.11 276.12 524.5 276.12 526.215 cv
276.12 527.93 280.368 529.32 285.607 529.32 cv
290.847 529.32 295.095 527.93 295.095 526.215 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
277.928 526.767 mo
(roundrobin\(1,1\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20749 .804199 1.20749 
.60376 1.20749 0 ]xsh
270.6 515.865 mo
273.36 517.762 276.982 520.35 280.088 522.593 cv
@
279.742 522.938 mo
281.467 523.455 li
280.26 522.248 li
cp
@
279.742 522.938 mo
281.467 523.455 li
280.26 522.248 li
f
250.072 611.775 mo
250.072 610.06 245.825 608.67 240.585 608.67 cv
235.345 608.67 231.097 610.06 231.097 611.775 cv
231.097 613.49 235.345 614.88 240.585 614.88 cv
245.825 614.88 250.072 613.49 250.072 611.775 cv
@
250.072 611.775 mo
250.072 610.06 245.825 608.67 240.585 608.67 cv
235.345 608.67 231.097 610.06 231.097 611.775 cv
231.097 613.49 235.345 614.88 240.585 614.88 cv
245.825 614.88 250.072 613.49 250.072 611.775 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
232.905 612.327 mo
(roundrobin\(4,4\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
234.375 614.19 mo
229.027 616.26 221.438 619.192 215.917 621.435 cv
@
216.262 620.917 mo
214.71 621.78 li
216.435 621.78 li
cp
@
216.262 620.917 mo
214.71 621.78 li
216.435 621.78 li
f
239.032 541.395 mo
239.032 538.156 233.626 535.53 226.957 535.53 cv
220.289 535.53 214.882 538.156 214.882 541.395 cv
214.882 544.634 220.289 547.26 226.957 547.26 cv
233.626 547.26 239.032 544.634 239.032 541.395 cv
@
239.032 541.395 mo
239.032 538.156 233.626 535.53 226.957 535.53 cv
220.289 535.53 214.882 538.156 214.882 541.395 cv
214.882 544.634 220.289 547.26 226.957 547.26 cv
233.626 547.26 239.032 544.634 239.032 541.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
217.77 539.187 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
222.588 541.947 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
222.42 544.707 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
249.382 528.975 mo
245.76 531.045 240.757 533.633 236.445 536.048 cv
@
236.272 535.703 mo
234.892 536.91 li
236.617 536.393 li
cp
@
236.272 535.703 mo
234.892 536.91 li
236.617 536.393 li
f
266.288 541.395 mo
266.288 538.156 260.881 535.53 254.212 535.53 cv
247.544 535.53 242.138 538.156 242.138 541.395 cv
242.138 544.634 247.544 547.26 254.212 547.26 cv
260.881 547.26 266.288 544.634 266.288 541.395 cv
@
266.288 541.395 mo
266.288 538.156 260.881 535.53 254.212 535.53 cv
247.544 535.53 242.138 538.156 242.138 541.395 cv
242.138 544.634 247.544 547.26 254.212 547.26 cv
260.881 547.26 266.288 544.634 266.288 541.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
245.025 539.187 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
249.843 541.947 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36206 1.20749 0 ]xsh
249.675 544.707 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804184 1.36203 0 ]xsh
254.212 529.32 mo
254.212 530.528 254.212 532.253 254.212 533.805 cv
@
253.867 533.805 mo
254.212 535.53 li
254.73 533.805 li
cp
@
253.867 533.805 mo
254.212 535.53 li
254.73 533.805 li
f
250.072 556.575 mo
250.072 554.86 245.825 553.47 240.585 553.47 cv
235.345 553.47 231.097 554.86 231.097 556.575 cv
231.097 558.29 235.345 559.68 240.585 559.68 cv
245.825 559.68 250.072 558.29 250.072 556.575 cv
@
250.072 556.575 mo
250.072 554.86 245.825 553.47 240.585 553.47 cv
235.345 553.47 231.097 554.86 231.097 556.575 cv
231.097 558.29 235.345 559.68 240.585 559.68 cv
245.825 559.68 250.072 558.29 250.072 556.575 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
232.905 557.127 mo
(roundrobin\(1,1\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
250.072 568.995 mo
250.072 567.28 245.825 565.89 240.585 565.89 cv
235.345 565.89 231.097 567.28 231.097 568.995 cv
231.097 570.71 235.345 572.1 240.585 572.1 cv
245.825 572.1 250.072 570.71 250.072 568.995 cv
@
250.072 568.995 mo
250.072 567.28 245.825 565.89 240.585 565.89 cv
235.345 565.89 231.097 567.28 231.097 568.995 cv
231.097 570.71 235.345 572.1 240.585 572.1 cv
245.825 572.1 250.072 570.71 250.072 568.995 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
232.905 569.547 mo
(roundrobin\(2,2\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
240.585 559.68 mo
240.585 561.06 240.585 562.612 240.585 564.165 cv
@
240.24 564.165 mo
240.585 565.89 li
241.102 564.165 li
cp
@
240.24 564.165 mo
240.585 565.89 li
241.102 564.165 li
f
231.788 546.743 mo
233.512 548.64 235.238 550.71 236.79 552.435 cv
@
236.445 552.608 mo
237.825 553.643 li
236.962 552.09 li
cp
@
236.445 552.608 mo
237.825 553.643 li
236.962 552.09 li
f
249.382 546.743 mo
247.657 548.64 245.932 550.71 244.38 552.435 cv
@
244.207 552.09 mo
243.345 553.643 li
244.725 552.608 li
cp
@
244.207 552.09 mo
243.345 553.643 li
244.725 552.608 li
f
239.032 584.175 mo
239.032 580.936 233.626 578.31 226.957 578.31 cv
220.289 578.31 214.882 580.936 214.882 584.175 cv
214.882 587.414 220.289 590.04 226.957 590.04 cv
233.626 590.04 239.032 587.414 239.032 584.175 cv
@
239.032 584.175 mo
239.032 580.936 233.626 578.31 226.957 578.31 cv
220.289 578.31 214.882 580.936 214.882 584.175 cv
214.882 587.414 220.289 590.04 226.957 590.04 cv
233.626 590.04 239.032 587.414 239.032 584.175 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
217.77 581.967 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.2075 1.07222 1.2075 1.07222 
1.2075 1.20749 0 ]xsh
222.588 584.727 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36205 1.2075 0 ]xsh
222.42 587.487 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804169 1.36205 0 ]xsh
237.825 571.928 mo
236.445 573.48 234.72 575.378 232.995 577.448 cv
@
232.65 577.275 mo
231.788 578.828 li
233.167 577.793 li
cp
@
232.65 577.275 mo
231.788 578.828 li
233.167 577.793 li
f
266.288 584.175 mo
266.288 580.936 260.881 578.31 254.212 578.31 cv
247.544 578.31 242.138 580.936 242.138 584.175 cv
242.138 587.414 247.544 590.04 254.212 590.04 cv
260.881 590.04 266.288 587.414 266.288 584.175 cv
@
266.288 584.175 mo
266.288 580.936 260.881 578.31 254.212 578.31 cv
247.544 578.31 242.138 580.936 242.138 584.175 cv
242.138 587.414 247.544 590.04 254.212 590.04 cv
260.881 590.04 266.288 587.414 266.288 584.175 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
245.025 581.967 mo
(CompareExchange)
[1.61078 1.2075 1.87888 1.2075 1.07222 .804169 1.07224 1.47554 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
249.843 584.727 mo
(work=14)
[1.74359 1.2075 .804169 1.2075 1.36206 1.20749 0 ]xsh
249.675 587.487 mo
(I/O: 2->2)
[.804184 .671356 1.74361 .671356 .60376 1.2075 .804184 1.36203 0 ]xsh
243.345 571.928 mo
244.725 573.48 246.45 575.378 248.175 577.448 cv
@
248.002 577.793 mo
249.382 578.828 li
248.52 577.275 li
cp
@
248.002 577.793 mo
249.382 578.828 li
248.52 577.275 li
f
250.072 599.355 mo
250.072 597.64 245.825 596.25 240.585 596.25 cv
235.345 596.25 231.097 597.64 231.097 599.355 cv
231.097 601.07 235.345 602.46 240.585 602.46 cv
245.825 602.46 250.072 601.07 250.072 599.355 cv
@
250.072 599.355 mo
250.072 597.64 245.825 596.25 240.585 596.25 cv
235.345 596.25 231.097 597.64 231.097 599.355 cv
231.097 601.07 235.345 602.46 240.585 602.46 cv
245.825 602.46 250.072 601.07 250.072 599.355 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
232.905 599.907 mo
(roundrobin\(2,2\))
[.804184 1.20749 1.2075 1.2075 1.20749 .804184 1.2075 1.20749 .671371 1.2075 .804184 1.20749 
.60376 1.20749 0 ]xsh
240.585 602.46 mo
240.585 603.84 240.585 605.392 240.585 606.945 cv
@
240.24 606.945 mo
240.585 608.67 li
241.102 606.945 li
cp
@
240.24 606.945 mo
240.585 608.67 li
241.102 606.945 li
f
231.788 589.522 mo
233.512 591.42 235.238 593.49 236.79 595.215 cv
@
236.445 595.387 mo
237.825 596.422 li
236.962 594.87 li
cp
@
236.445 595.387 mo
237.825 596.422 li
236.962 594.87 li
f
249.382 589.522 mo
247.657 591.42 245.932 593.49 244.38 595.215 cv
@
244.207 594.87 mo
243.345 596.422 li
244.725 595.387 li
cp
@
244.207 594.87 mo
243.345 596.422 li
244.725 595.387 li
f
297.682 541.395 mo
297.682 538.156 292.276 535.53 285.607 535.53 cv
278.939 535.53 273.532 538.156 273.532 541.395 cv
273.532 544.634 278.939 547.26 285.607 547.26 cv
292.276 547.26 297.682 544.634 297.682 541.395 cv
@
297.682 541.395 mo
297.682 538.156 292.276 535.53 285.607 535.53 cv
278.939 535.53 273.532 538.156 273.532 541.395 cv
273.532 544.634 278.939 547.26 285.607 547.26 cv
292.276 547.26 297.682 544.634 297.682 541.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
276.42 539.187 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
281.238 541.947 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
281.07 544.707 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
285.607 529.32 mo
285.607 530.528 285.607 532.253 285.607 533.805 cv
@
285.262 533.805 mo
285.607 535.53 li
286.125 533.805 li
cp
@
285.262 533.805 mo
285.607 535.53 li
286.125 533.805 li
f
324.938 541.395 mo
324.938 538.156 319.531 535.53 312.862 535.53 cv
306.194 535.53 300.788 538.156 300.788 541.395 cv
300.788 544.634 306.194 547.26 312.862 547.26 cv
319.531 547.26 324.938 544.634 324.938 541.395 cv
@
324.938 541.395 mo
324.938 538.156 319.531 535.53 312.862 535.53 cv
306.194 535.53 300.788 538.156 300.788 541.395 cv
300.788 544.634 306.194 547.26 312.862 547.26 cv
319.531 547.26 324.938 544.634 324.938 541.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
303.675 539.187 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
308.493 541.947 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
308.325 544.707 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
290.438 528.975 mo
294.06 531.045 299.062 533.633 303.375 536.048 cv
@
303.202 536.393 mo
304.927 536.91 li
303.547 535.703 li
cp
@
303.202 536.393 mo
304.927 536.91 li
303.547 535.703 li
f
308.722 556.575 mo
308.722 554.86 304.475 553.47 299.235 553.47 cv
293.995 553.47 289.747 554.86 289.747 556.575 cv
289.747 558.29 293.995 559.68 299.235 559.68 cv
304.475 559.68 308.722 558.29 308.722 556.575 cv
@
308.722 556.575 mo
308.722 554.86 304.475 553.47 299.235 553.47 cv
293.995 553.47 289.747 554.86 289.747 556.575 cv
289.747 558.29 293.995 559.68 299.235 559.68 cv
304.475 559.68 308.722 558.29 308.722 556.575 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
291.555 557.127 mo
(roundrobin\(1,1\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 0 ]xsh
308.722 568.995 mo
308.722 567.28 304.475 565.89 299.235 565.89 cv
293.995 565.89 289.747 567.28 289.747 568.995 cv
289.747 570.71 293.995 572.1 299.235 572.1 cv
304.475 572.1 308.722 570.71 308.722 568.995 cv
@
308.722 568.995 mo
308.722 567.28 304.475 565.89 299.235 565.89 cv
293.995 565.89 289.747 567.28 289.747 568.995 cv
289.747 570.71 293.995 572.1 299.235 572.1 cv
304.475 572.1 308.722 570.71 308.722 568.995 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
291.555 569.547 mo
(roundrobin\(2,2\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20752 .804169 1.20749 
.60376 1.20749 0 ]xsh
299.235 559.68 mo
299.235 561.06 299.235 562.612 299.235 564.165 cv
@
298.89 564.165 mo
299.235 565.89 li
299.752 564.165 li
cp
@
298.89 564.165 mo
299.235 565.89 li
299.752 564.165 li
f
290.438 546.743 mo
292.162 548.64 293.888 550.71 295.44 552.435 cv
@
295.095 552.608 mo
296.475 553.643 li
295.612 552.09 li
cp
@
295.095 552.608 mo
296.475 553.643 li
295.612 552.09 li
f
308.032 546.743 mo
306.307 548.64 304.582 550.71 303.03 552.435 cv
@
302.857 552.09 mo
301.995 553.643 li
303.375 552.608 li
cp
@
302.857 552.09 mo
301.995 553.643 li
303.375 552.608 li
f
297.682 584.175 mo
297.682 580.936 292.276 578.31 285.607 578.31 cv
278.939 578.31 273.532 580.936 273.532 584.175 cv
273.532 587.414 278.939 590.04 285.607 590.04 cv
292.276 590.04 297.682 587.414 297.682 584.175 cv
@
297.682 584.175 mo
297.682 580.936 292.276 578.31 285.607 578.31 cv
278.939 578.31 273.532 580.936 273.532 584.175 cv
273.532 587.414 278.939 590.04 285.607 590.04 cv
292.276 590.04 297.682 587.414 297.682 584.175 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
276.42 581.967 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
281.238 584.727 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
281.07 587.487 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
296.475 571.928 mo
295.095 573.48 293.37 575.378 291.645 577.448 cv
@
291.3 577.275 mo
290.438 578.828 li
291.817 577.793 li
cp
@
291.3 577.275 mo
290.438 578.828 li
291.817 577.793 li
f
324.938 584.175 mo
324.938 580.936 319.531 578.31 312.862 578.31 cv
306.194 578.31 300.788 580.936 300.788 584.175 cv
300.788 587.414 306.194 590.04 312.862 590.04 cv
319.531 590.04 324.938 587.414 324.938 584.175 cv
@
324.938 584.175 mo
324.938 580.936 319.531 578.31 312.862 578.31 cv
306.194 578.31 300.788 580.936 300.788 584.175 cv
300.788 587.414 306.194 590.04 312.862 590.04 cv
319.531 590.04 324.938 587.414 324.938 584.175 cv
.271 .467 .702 rgb
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
303.675 581.967 mo
(CompareExchange)
[1.61078 1.20752 1.87885 1.20752 1.0722 .804199 1.0722 1.47556 1.20749 1.07224 1.20749 1.07224 
1.20749 1.20752 0 ]xsh
308.493 584.727 mo
(work=14)
[1.74359 1.20749 .804199 1.20749 1.36206 1.20749 0 ]xsh
308.325 587.487 mo
(I/O: 2->2)
[.804169 .671387 1.74359 .671356 .60376 1.20749 .804199 1.36203 0 ]xsh
301.995 571.928 mo
303.375 573.48 305.1 575.378 306.825 577.448 cv
@
306.652 577.793 mo
308.032 578.828 li
307.17 577.275 li
cp
@
306.652 577.793 mo
308.032 578.828 li
307.17 577.275 li
f
295.095 599.355 mo
295.095 597.64 290.847 596.25 285.607 596.25 cv
280.368 596.25 276.12 597.64 276.12 599.355 cv
276.12 601.07 280.368 602.46 285.607 602.46 cv
290.847 602.46 295.095 601.07 295.095 599.355 cv
@
295.095 599.355 mo
295.095 597.64 290.847 596.25 285.607 596.25 cv
280.368 596.25 276.12 597.64 276.12 599.355 cv
276.12 601.07 280.368 602.46 285.607 602.46 cv
290.847 602.46 295.095 601.07 295.095 599.355 cv
1 gry
f
0 gry
LTFDQP+TimesNewRomanPSMT*1 [2.415 0 0 -2.415 0 0 ]msf
277.928 599.907 mo
(roundrobin\(2,2\))
[.804169 1.20752 1.20749 1.20749 1.20752 .804169 1.20749 1.20752 .671356 1.20749 .804199 1.20749 
.60376 1.20749 0 ]xsh
279.397 601.77 mo
275.947 602.977 271.807 604.53 268.875 605.22 cv
263.872 606.6 256.11 608.497 249.9 609.705 cv
@
250.072 609.187 mo
248.52 610.05 li
250.245 610.05 li
cp
@
250.072 609.187 mo
248.52 610.05 li
250.245 610.05 li
f
285.607 590.04 mo
285.607 591.592 285.607 593.145 285.607 594.697 cv
@
285.262 594.525 mo
285.607 596.25 li
286.125 594.525 li
cp
@
285.262 594.525 mo
285.607 596.25 li
286.125 594.525 li
f
304.927 588.66 mo
300.788 590.902 295.612 593.835 291.817 595.905 cv
@
291.817 595.387 mo
290.438 596.595 li
292.162 596.25 li
cp
@
291.817 595.387 mo
290.438 596.595 li
292.162 596.25 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
true set_gvm
/LTFDQP+TimesNewRomanPSMT*1 uf
/LTFDQP+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
