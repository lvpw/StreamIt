%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: JPEG Transcoder.pdf
%%Creator: Adobe Acrobat 8.0
%%For: Bill Thies
%%CreationDate: 12/5/2008, 11:09:17 PM
%%BoundingBox: 0 0 469 522
%%HiResBoundingBox: 0 0 469 522
%%CropBox: 0 0 469 522
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1622 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GNU Ghostscript 7.05"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -522 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 522 li
469 522 li
469 0 li
cp
clp
[1 0 0 1 -36 0 ]ct
gsave
35 523 mo
505 523 li
505 0 li
35 0 li
cp
clp
.1785 lw
0 lc
0 lj
1 ml
[] 0 dsh
true sadj
37.428 520.572 mo
502.599 520.572 li
502.599 1.49402 li
37.428 1.49402 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988, 1990, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Times New Roman is a trademark of the Monotype Corporation, registered in the US Patent and Trademark Office and may be registered in certain other jurisdictions.) def
/Weight (Roman) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
def
/UniqueID 44335 def
/FontBBox {-167 -250 1009 878} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 0 662 677 447 461 694 694] def
/OtherBlues [384 384 -216 -213] def
/FamilyBlues [-15 0 662 677 447 461 694 694] def
/FamilyOtherBlues [384 384 -216 -213] def
/StdHW [36] def
/StdVW [81] def
/StemSnapH [36 43] def
/StemSnapV [81 94] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
10 dict dup begin
/T <1C60D8A8C9B7D8BE16B2E353E3300378A32828826C127DE3D6A3769F5542
8119DC48F4B555CFAC557278838F3EC6C5F7B64F6B44DFEFCBC8AF8174185170
E165701BB15CF1CB88629A978EF6D86FB8> |-
/a <1C60D8A8C9B77FE294851E8312417598C86A6256F86C70DE2C7AFF06FCE3
4BADEE28F3B8D02D3C60352D19569C8A11355E1235678015637DF6C7E4A05E8E
A8AB948BF076D376030D74D5BF1D25D6B1436CBFF068CFC521B6EF1846E35D0E
2A4D1C4888BBA14114C326082B33961EF18B6F0B661AC7CDF50B0B0D80CC5ED8
71668C27B3C878E43E83D293BA1B1F771221D32DA7404867CEA1760CC79EAA61
6682686BC92138B01A5FF6B55D314BD1AA96EE89C141B8E9EB46C16F1B31BD66
B910EA6BBA> |-
/c <1C60D8A8C9B77FE2948016809A16C1383D80AA8513D781288589A82DC94A
5DA0D421DEC176AEE608ECA472235D24D269E725C25D06B3582797B60EEBA4C4
46D10FC22341077B09EDB4E12CA0359E24628B46BB6E10727940> |-
/d <1C60D8A8C9B7A73DE3E5E50523E6C3667B38E45A4C51E0FEC84C813AB373
8B83F58EEDF7211177C6639AD2CCECEBC1915AB857B5701E72700D0D163B5F2F
58E5A8B520D7ED7F9880D10C1A6AAC1DEF76C68CB623039F59365031342DE694
26167CDA4201402D972AF8016480B0CF8CBDDE4940ABCEFD4C2D5F2FE77DC410
2439C361CA6330A182E6FD> |-
/e <1C60D8A8C9B77FE29496D1FBB47314D6F46DA3EBFEC342F3B983185301EF
B706EB7833A9B3F14CD479AC93E43031BC63CB7FFE55CD73AABA1B6DFA935F49
683C721ECBA275DBC565AC78A07D0C5329E18D2789C058EC6367BBAECDF40AEE> |-
/n <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA6A1CED287131EA2B
D2E1E6E797441A36EF164B2E98EA0B7A662ADAA0C64D637EBFFAEDEE2D95D0C9
387D6E78EA7DBD0E03769EFADBB9E99820C3CA652E5CB84D6476DEB84D65355B
ED40D74AEE8C38DE38F7ADD1F45E132F9FCFA8357906BA1C9F825F576D022523
4E76> |-
/o <1C60D8A8C9B7A73DE3E5E50AD058CB1758CCEC8536B108DD66A8D296857C
B3303D78514A78D06E85FDA9E8085F8D9525195AE96992EAA1E95B40679F85C3
FC4165030DF121E13968768CFE641E50E297E68778A63ACC6DD3> |-
/r <1C60D8A8C9B81F2C117020CA370F4EDA9CC5786DD9DE9EF42ACF1876A05B
D63AFC335B1B675841319B03439D25E5CD3513D8B1AF7C3213243E231585FDFB
23DF1B8599146D034A4E5D6FF06CCB4811E4D5773B1A3B8F6DC7EFA556C00470
2D769BB83004181BE21F0C2BFBE9C20E97FA9275EFEA6DCC374D4BC4F2DBC112
90AFF811640F86741723DE5B9796381D4326AE431F5D9C5CAED9> |-
/s <1C60D8A8C9B7361F4A5DC306676AF4C8647FF3053FF45CCDDBEB7E9B9050
12DA1DE9402C8DB245C98EF5B89AF8B307871A82029AB9C9383D498ABA5BCF42
FD3EBA06E16095068AAD2A24F29F66CD7BEDAF75E27B9E98183114BB708CEE9F
70B53D4922DAA331AE3A4B4FD1B5CD24EA574D8FE8D1E66E3ECF87407A13A679
B23887BDCEB1C164DC6CBF6472F4BC61E5FBABA972F7976EEBF3BC4B43DEE327
20F6A1A3C1878ACCA80EBBED76DEBD40C76FFC717243DC8D6CB182005A946D70
F948846138DEF539AD5BE615B04618EEB754F0DAF886F93D007AE786FB00955E
897D78D67615B1FA609D> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/LTFDSB+TimesNewRomanPSMT*1 
[84{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e 
8{/.notdef}rp /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
38.5908 3.49291 mo
(Transcoder)
[1.52687 .83215 1.10952 1.2495 .972092 1.10952 1.2495 1.2495 1.10952 0 ]xsh
40.284 245.682 mo
499.743 245.682 li
499.743 45.405 li
40.284 45.405 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDFB39C8FA0E3107D39E1E26D40368A6A59D36B799EDDCB
A8AF8BCAEA2E296C5BB00979C4073082C4AC62DAAE27F25BE45DFF121DF075F7
3D37111C10DFF7C6BD4BFE8AE73B4FADB84F0E8B5722DEA1CA14F5AFDC440B45
4F635F5576E82C8F45782F1EDE0EC9CA59D48E4C0F81> |-
/U <1C60D8A8C9B6079F675A124E1112F68E116C07D407D6BD729F3D1467FEC9
DB1B717EDCA1CB257898FAA810DC98AD012099D6E27B9582DB9C127CF24AAE1E
5B37683D2BCD64B5A5B8A07FAB5E4A8A80CE7FE3009E0C18967F5352FF3AD65B
1392BE000C7D33B48AEC2DD2A19998C5FE8EA47D78> |-
/g <1C60D8A8C9B7A73D85D7E997B7B5DF7D7777AF52CC5562CB6E990E974840
46648599A1D9C4DB63B2EA37B7BBC0C3039255635B40FAB067F562720BFA98A6
8AA5F28640EAE52B9FE1BA9F5F2A49A2F977CAB7D5C25E3626BAA2BEB9E431EA
60B6FFDB96CDFE0161651CB3C7DDAAF79341AA1B63131C7BD07B3EF7C547B329
2DEEC810138CCDC2FA69E1A2AD41097A54F4DBBBA72B1810538F2F0FBA5B3B54
046B0BB798F435A12098BB54904B4FA0166943538B1D7B8EA5970358CDBCC48E
31C506A3AAB0AC2519075E7791339AF09F8C1F93B0D81A9E5ED3B02D4C03B817
17F61566CDC855CB444B31FBC8E71F4A79E39CF6ED7B9B21E0269B8614410251
F072B930BD3C2C0B5BE3125CE4461E97B369DD7B68AF48B8706DE7D2976BB7A8
F7FA6E1A10F519A6E8E51022609E6B7A2E822DDCD222A999CAA520FD83CCB934
D41B4EF6E07BE85DFA424019E44CA0D51152EDBDE920B3C59D4A719415BD84E9
F231F0CBEF222AB9855B090598B4D01FCC8283B4EC699D2D8EDA681DF37E56EB
75FAFC019A1A3645CA60183B64A594CD3556BA6088F7C2AF3F05FDD0875B0187
C18BC8AC2785F74D85EFAA74EA4D56B1D0576FD461BA0B37199C> |-
/h <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA64197CEECB76B9E4
D2E9F717E2E21BA6AFBDB9D486017DE1334EE2B8AC7E25B49C380829180892EE
A76E25D726C9DCA303C64F5FE456E4A565D8D0ED565D009BA02A6DD13A835659
5990FC1760FC10BB02F96DEC2D5390B1C4D4059132A392595F028220DA07D2CD
E701448700C9> |-
/i <1C60D8A8C9B854D0F11440006C203BFFD1DEDCDE7CAD1373D75DB7315CFC
49A0833FA9D881419B9BEE01885373804535A66836A5115D3B942001E4A8D676
2EBA1D3CCCC2CED3DAC862D3F0398204E81D1C72BC10727D59A156997C9269F7
F9572E03A90C988E59FECA8B3BEBEE755CF420171B> |-
/l <1C60D8A8C9B854D0F11440006C203A85DCEB221B1066666FE3EA25083329
14AA399D2F81DB0653B503D4FAECFE70883AAAA2B3345C999517D89696069E61
D192EBD1D92DDA82> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 67 /C put
dup 85 /U put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C 16{/.notdef}rp /T /U 11{/.notdef}rp /a /.notdef 
/c /d /e /.notdef /g /h /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
41.4359 47.4039 mo
(ChannelUnencoding)
[1.66681 1.2495 1.10952 1.2495 1.2495 1.10952 .694721 1.80424 1.2495 1.10952 1.2495 1.10952 
1.2495 1.2495 .694721 1.2495 0 ]xsh
43.14 232.83 mo
197.007 232.83 li
197.007 58.257 li
43.14 58.257 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Y <1C60D8A8C9B6079F6264F4C8DDC3F1487EEA19AC13B41424A9E78F0FDF92
05A588739AC8029E8253D862E9C870F33DCAED59F17DDFF066EDE3BDA3CA72E2
9EAB67D63B26C63D99BA43680717BDE9E4F738D4BE18E2DC3DEA86639EADB17A
186747A3D486EBE515CD66CBC55045390AF8B38CF858> |-
/underscore <1C60D8A8C9B7A73DCDBEB64DA5D4EE31FFCBE2EC06B4C4F1354
CB100A813> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 89 /Y put
dup 95 /underscore put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C 16{/.notdef}rp /T /U 3{/.notdef}rp /Y 5{/.notdef}rp 
/underscore /.notdef /a /.notdef /c /d /e /.notdef 
/g /h /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s 140{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
44.2836 60.256 mo
(ChannelUnencoder_Y)
[1.66681 1.2495 1.10952 1.2495 1.2495 1.10952 .694721 1.80424 1.2495 1.10952 1.2495 1.10952 
1.2495 1.2495 1.10952 .832146 1.2495 0 ]xsh
121.323 116.448 mo
175.23 116.448 li
175.23 72.894 li
121.323 72.894 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDFF4D0475F24A0512970A16CFF6BFBD1A1A12D07A62723
BF27DBD01B60ACEC3C9DB4E627348B4F9C96D245E2397B81856FE7B9149C0D88
A0B1C89901A357B578317FC0F49D1050D95CF70B7F7A7C5741B1B644F20C16DB
8F1BD7E6C45546C9302E6AD757CA73E92696A658F8A903A2E6B5FA3BE24637C3
3393411FB0E113E4BDFEBF11B4E90F57471B306273B2241C3C23457DA84CC16B
22781151F6DE159B155116967F7D53FA1DDDDF14084F0631BA1C08300F50E5BA
9DC336D8349BEA3371DCAFDF658781D6> |-
/D <1C60D8A8C9B6079F62AF7EE2124AC712AE5D5419E262A0C00C6163DFBCB2
A6FA65DDDD5062250DB8BBFB46EB35827750F9FCEE696526B20FE9266474B179
350945BBDAF7180FAB04D619EB38198FC722361E0B3B5E50F9017F19C7BDCABB
285F506A04FE32C63936689B1F9C81923B03440D57336303C59B59E8D3C0659D
33> |-
/f <1C60D8A8C9B81F2C3AAA7F9332A1FC560AB2BC70F6F61F670AD82FC8B626
674790DAFBDF46077811E1DF38721CA7CA8FBC2C5E006E567037490710BD3A02
BCB7C7EDEC00C0FF3F7CF7FF144794FA5B0DC9D77482C00E98ABF65E83ECDA1A
E1009D> |-
/k <1C60D8A8C9B7A73D926FE6D4B51E06A6595F3746ABEED643EB32E31FC5C1
56BE33D279A48C7177D38FEEE25BE39FA8184693C31C3DD98D1AF000E30B25B8
F0029B9D7DAB8132C06DAF7AF8346F39C9E4C7E69A448E350100342A6E22A322
C4DEF85ED9405E1A9FCE65A5B4B5084195D644BBC14B138BCD62C9C4EFF347DE
06C9D1F36BBC04C3531EBEE642B499C247> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 66 /B put
dup 68 /D put
dup 102 /f put
dup 107 /k put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B /C /D 15{/.notdef}rp /T /U 3{/.notdef}rp 
/Y 5{/.notdef}rp /underscore /.notdef /a /.notdef /c /d 
/e /f /g /h /i /.notdef /k /l 
/.notdef /n /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
122.558 74.8929 mo
(BlockDCDifferenceDecoder)
[1.66682 .694717 1.2495 1.10951 1.2495 1.80424 1.66681 1.80424 .694717 .832153 .832153 1.10951 
.832153 1.10951 1.2495 1.10953 1.10951 1.80424 1.10951 1.10953 1.2495 1.2495 1.10953 0 
]xsh
118.288 131.799 mo
146.848 131.799 li
146.848 117.876 li
118.288 117.876 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7D8BE1621F7F8A9A93A327F755C3E81E8F6E5B36D5D09EC27
E8352590DCF5FBB39847107CDCA7E2F69BF8A0E97E902F61DA0FFC19F5F5635E
A2E6B7FBC25C45E39802E8D22E33BC6334A08FAC75B725C0C2D4D8BA4EE1> |-
/Q <1C60D8A8C9B6079F258D65BC2331B95A48C80B9768E78495F9F852D084FE
B5569E0998B92A8C02FE98CC8756B9450AFC22EB75A028A68EEC267535515B8A
7AF5FA296BEEAF84AC729826043DC76CC7E6AEDD8E5722CD3906055C50935FC9
A9E5D884988B49C45AA5CE390B6810BD47B8089DA8CFB16CD03A129E9C7C7933
9702030A> |-
/t <1C60D8A8C9B854D0DAE0E17091F63D902F15B1C5B2DD1246F40FD3EC3264
448E2BE336EDCDEB1DFC2F9412B18B341EC1F740C5E1DC1152FC3909509AD9AD
D2933ADE9A3C5AD03C26776EECF232> |-
/u <1C60D8A8C9B7A73D96315394C03E2804B8D6B013BEE63C754B7DCD21D17D
EE183DDCCBE94C1E49FD4EEAD58EEB67E527D51D30B7569BBD690F10D18E5949
069889C638179D8480A9808D89F695AD05863E6AF7CC14732F1A0B4D904FA886
0DFB17262B8501BEF73C125F016588> |-
/z <1C60D8A8C9B77FE284EFEC4CF0FCC63CDEB1624F39F402FFE3D4A95D1F81
2924519B69F6054956BEDD472A0597A54C3034FF3538C85678A4E4FE466B514C
141F526BEAADD3E6242801DF59EF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 76 /L put
dup 81 /Q put
dup 116 /t put
dup 117 /u put
dup 122 /z put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B /C /D 7{/.notdef}rp /L 4{/.notdef}rp /Q 
2{/.notdef}rp /T /U 3{/.notdef}rp /Y 5{/.notdef}rp /underscore /.notdef 
/a /.notdef /c /d /e /f /g /h 
/i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
119.391 119.875 mo
(staticLosslessDeQuantization)
[.972092 .694725 1.10951 .694725 .694725 1.10951 1.52687 1.2495 .972084 .972092 .694733 1.10951 
.972092 .972092 1.80424 1.10951 1.80424 1.2495 1.10951 1.24951 .694717 .694717 1.10953 1.10951 
.694717 .694733 1.2495 0 ]xsh
45.996 219.621 mo
194.151 219.621 li
194.151 133.227 li
45.996 133.227 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DB9C4155FCF739F7C1974D5BF41CC3E8700100AE610
E49DF6B4C276649A8B3177B0F76FADB15EC55BD4BBD1CDF8C5F886738FFDBD44
2FF8A0594A170A20B9C3E13444FE4DC986DA862896B80FFA135FA164A257> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[50{/.notdef}rp /two 15{/.notdef}rp /B /C /D 7{/.notdef}rp /L 
4{/.notdef}rp /Q 2{/.notdef}rp /T /U 3{/.notdef}rp /Y 5{/.notdef}rp 
/underscore /.notdef /a /.notdef /c /d /e /f 
/g /h /i /.notdef /k /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t /u 4{/.notdef}rp /z 
133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
47.2455 135.226 mo
(iDCT_2D)
[.694721 1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
48.852 177.138 mo
191.295 177.138 li
191.295 137.511 li
48.852 137.511 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DB94F41466C876FCA9AF55081C1C70D8EC4AB3C9249
D700CD0FF27B669AF104FB3406E5DFE3F3B0AB0CAE2CF1998D0DA43C395891C4
7CD031071E50A5> |-
/eight <1C60D8A8C9B7A73D9EB159A3CFECEE26FAC12AD4B6691842B4C84783
E84E1D8CD272AEC54014C937C15B810E403549328E3DC44B6A66E9E0AE5509A1
20FFE6F694340EC43D35C59CD7D1B2F14C1F1D5BA576A10F77E962817750FC0E
DC62627EE0E94BCE030A10C59143A015250A384C09B6A65F8572DF3FCBF68CF8
0D23E4E88D0691BD2178810DDABD5F40D8018F795B8CB5A52DDDD05F80E9A2BC
CDF3A5E14C701FBADF0447A7AE0E47FA8F86216AC25155BFF3569B19382CA905
7B18009FE630A2D7CEFDC3A4A3> |-
/P <1C60D8A8C9B7EF322B10A2A8DE6EF0A6CE60E86B1DF5C68015667A2338DB
07BCF91C9D8DCCB5967A656E7EB6651B3E305A306DA1BB8C1BAEECFC60DC00D8
8AEC56E3DF7455D57CB9BB0CC9A32704D4F0F1C39C5B2EDC70F42754CACE7253
FF5FDAE4B675FFF987E22613E24B8956EFA9C2C5B9AC406D966F459601B2046A
C9E54A3BB37C45EDEB> |-
/p <1C60D8A8C9B7A73D9AFACE39AE6BAA6E09D7322029CE296F526808097535
692942DF193E08360A1A27EB6A08251F7D53D3FA96D22918185F2823E13833F6
44411211FB9E60C91D24768368C1EE71DFEA1AF8285D596D61CE8A067C14BC2E
E1974A4DF14D782DBEDB8D2CE5673BB9634CC4945A7FA5A5E1B87E0F2D94F438
C21548DAE429B68406206429A87E1B462DA7A9D2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 49 /one put
dup 56 /eight put
dup 80 /P put
dup 112 /p put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[49{/.notdef}rp /one /two 5{/.notdef}rp /eight 9{/.notdef}rp /B /C 
/D 7{/.notdef}rp /L 3{/.notdef}rp /P /Q 2{/.notdef}rp /T 
/U 3{/.notdef}rp /Y 5{/.notdef}rp /underscore /.notdef /a /.notdef 
/c /d /e /f /g /h /i /.notdef 
/k /l /.notdef /n /o /p /.notdef /r 
/s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
50.0246 139.51 mo
(helper_Parallel_8_iDCT_1D_Y)
[1.2495 1.10952 .694721 1.2495 1.10952 .83215 1.2495 1.38944 1.10952 .83215 1.10952 .694721 
.694721 1.10952 .694717 1.2495 1.2495 1.2495 .694717 1.80424 1.66681 1.52687 1.2495 1.2495 
1.80424 1.2495 0 ]xsh
48.852 218.193 mo
191.295 218.193 li
191.295 178.566 li
48.852 178.566 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/X <1C60D8A8C9B6079F018A6C0F7446D2B445C0985E58D9EC7255FDDA1388C8
A285E4675F402B73A97FA3A110BD20D6F3A33C58D55550E79D71619FC60E075E
E30F2C40DF9D51E2E4C2A7D2F7D91C30FB7BA0AB1C8970636A10E2B85E32118A
AA3C61730DBBB8CDA3EFEDBDBBD2FB5F93DA7A1BD9AB6E98429B78EC68619A38
39F5F8BE45E83387F989597EAE1978FFE9D1BA4DD28D4B532F48FB07EDBB5BD3
9A8C4F6225B87C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 88 /X put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[49{/.notdef}rp /one /two 5{/.notdef}rp /eight 9{/.notdef}rp /B /C 
/D 7{/.notdef}rp /L 3{/.notdef}rp /P /Q 2{/.notdef}rp /T 
/U 2{/.notdef}rp /X /Y 5{/.notdef}rp /underscore /.notdef /a 
/.notdef /c /d /e /f /g /h /i 
/.notdef /k /l /.notdef /n /o /p /.notdef 
/r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
50.0246 180.565 mo
(helper_Parallel_8_iDCT_1D_X)
[1.2495 1.10952 .694721 1.2495 1.10952 .83215 1.2495 1.38944 1.10952 .83215 1.10952 .694721 
.694721 1.10952 .694717 1.2495 1.2495 1.2495 .694717 1.80424 1.66681 1.52687 1.2495 1.2495 
1.80424 1.2495 0 ]xsh
193.08 232.83 mo
346.947 232.83 li
346.947 58.257 li
193.08 58.257 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
194.292 60.256 mo
(ChannelUnencoder_C)
[1.66681 1.24951 1.10951 1.2495 1.2495 1.10953 .694717 1.80424 1.2495 1.10951 1.24951 1.10951 
1.2495 1.24951 1.10951 .832153 1.2495 0 ]xsh
239.847 116.448 mo
293.754 116.448 li
293.754 72.894 li
239.847 72.894 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
241.082 74.8929 mo
(BlockDCDifferenceDecoder)
[1.66681 .694733 1.2495 1.10951 1.2495 1.80424 1.66681 1.80424 .694717 .832153 .832153 1.10951 
.832138 1.10953 1.24951 1.1095 1.10953 1.80423 1.10953 1.10953 1.24951 1.24948 1.10953 0 
]xsh
255.733 131.799 mo
284.293 131.799 li
284.293 117.876 li
255.733 117.876 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.836 119.875 mo
(staticLosslessDeQuantization)
[.972107 .694702 1.10953 .694702 .694733 1.10953 1.52686 1.24951 .972076 .972107 .694733 1.1095 
.972107 .972076 1.80426 1.1095 1.80426 1.24948 1.10953 1.24951 .694702 .694733 1.10953 1.1095 
.694733 .694733 1.24948 0 ]xsh
195.936 219.621 mo
344.091 219.621 li
344.091 133.227 li
195.936 133.227 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
197.186 135.226 mo
(iDCT_2D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
198.792 177.138 mo
341.235 177.138 li
341.235 137.511 li
198.792 137.511 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
199.965 139.51 mo
(helper_Parallel_8_iDCT_1D_Y)
[1.2495 1.10953 .694717 1.2495 1.10953 .832138 1.2495 1.38945 1.10951 .832153 1.10951 .694733 
.694717 1.10951 .694733 1.2495 1.2495 1.24951 .694717 1.80424 1.66681 1.52687 1.2495 1.2495 
1.80424 1.2495 0 ]xsh
198.792 218.193 mo
341.235 218.193 li
341.235 178.566 li
198.792 178.566 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
199.965 180.565 mo
(helper_Parallel_8_iDCT_1D_X)
[1.2495 1.10953 .694717 1.2495 1.10953 .832138 1.2495 1.38945 1.10951 .832153 1.10951 .694733 
.694717 1.10951 .694733 1.2495 1.2495 1.24951 .694717 1.80424 1.66681 1.52687 1.2495 1.2495 
1.80424 1.2495 0 ]xsh
343.02 232.83 mo
496.887 232.83 li
496.887 58.257 li
343.02 58.257 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
344.232 60.256 mo
(ChannelUnencoder_C)
[1.66681 1.24951 1.1095 1.24951 1.24951 1.1095 .694733 1.80423 1.24951 1.10953 1.24948 1.10953 
1.24951 1.24948 1.10953 .832153 1.24948 0 ]xsh
358.014 116.448 mo
411.921 116.448 li
411.921 72.894 li
358.014 72.894 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
359.249 74.8929 mo
(BlockDCDifferenceDecoder)
[1.66681 .694733 1.24948 1.10953 1.24951 1.80423 1.66681 1.80426 .694702 .832153 .832153 1.10953 
.832123 1.10953 1.24951 1.1095 1.10953 1.80423 1.10953 1.10953 1.24951 1.24948 1.10953 0 
]xsh
391.215 131.799 mo
419.775 131.799 li
419.775 117.876 li
391.215 117.876 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
392.318 119.875 mo
(staticLosslessDeQuantization)
[.972107 .694702 1.10953 .694702 .694733 1.10953 1.52686 1.24951 .972076 .972107 .694733 1.1095 
.972107 .972076 1.80426 1.1095 1.80426 1.24948 1.10953 1.24951 .694702 .694733 1.10953 1.1095 
.694733 .694733 1.24948 0 ]xsh
345.876 219.621 mo
494.031 219.621 li
494.031 133.227 li
345.876 133.227 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
347.126 135.226 mo
(iDCT_2D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
348.732 177.138 mo
491.175 177.138 li
491.175 137.511 li
348.732 137.511 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
349.905 139.51 mo
(helper_Parallel_8_iDCT_1D_Y)
[1.24951 1.1095 .694733 1.24951 1.1095 .832153 1.24951 1.38943 1.10953 .832153 1.1095 .694733 
.694733 1.1095 .694733 1.24948 1.24951 1.24951 .694702 1.80426 1.66681 1.52686 1.24951 1.24951 
1.80423 1.24951 0 ]xsh
348.732 218.193 mo
491.175 218.193 li
491.175 178.566 li
348.732 178.566 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
349.905 180.565 mo
(helper_Parallel_8_iDCT_1D_X)
[1.24951 1.1095 .694733 1.24951 1.1095 .832153 1.24951 1.38943 1.10953 .832153 1.1095 .694733 
.694733 1.1095 .694733 1.24948 1.24951 1.24951 .694702 1.80426 1.66681 1.52686 1.24951 1.24951 
1.80423 1.24951 0 ]xsh
44.568 476.661 mo
495.459 476.661 li
495.459 275.67 li
44.568 275.67 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B7D8BE1621F7F8DAEB9FA9CBAFC8F4F4D756F2191C830A0E4A
58F87E3DDE67D49AF36DDF5F1FB2D74CAA0A1A0C249C8C349E149A4722F92BF7
61EFA3C2F9EC864F14F3A3AC121B867A3642166A4B07211381D27468A1D61050
1454C0DD1325D701AB4ADD917E16E61514B3C2631A525AEC590FB4C52AA73BF6
506DADDCC92C07368DF00A34F77E6ED1C2061C6913B4C24C30A64720E240E09F
9DD8F5EF76F17E9EEAE569D41B7D8D946B46BFFC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 69 /E put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[49{/.notdef}rp /one /two 5{/.notdef}rp /eight 9{/.notdef}rp /B /C 
/D /E 6{/.notdef}rp /L 3{/.notdef}rp /P /Q 2{/.notdef}rp 
/T /U 2{/.notdef}rp /X /Y 5{/.notdef}rp /underscore /.notdef 
/a /.notdef /c /d /e /f /g /h 
/i /.notdef /k /l /.notdef /n /o /p 
/.notdef /r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
45.7887 277.669 mo
(ChannelEncoding)
[1.66681 1.2495 1.10952 1.2495 1.2495 1.10952 .694721 1.52687 1.2495 1.10952 1.2495 1.2495 
.694721 1.2495 0 ]xsh
47.424 463.809 mo
198.435 463.809 li
198.435 288.522 li
47.424 288.522 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
48.6363 290.521 mo
(ChannelEncoder_Y)
[1.66681 1.2495 1.10952 1.2495 1.2495 1.10952 .694721 1.52687 1.2495 1.10952 1.2495 1.2495 
1.10952 .832153 1.2495 0 ]xsh
50.28 388.839 mo
195.579 388.839 li
195.579 302.445 li
50.28 302.445 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
51.5198 304.444 mo
(DCT_2D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
53.136 346.356 mo
192.723 346.356 li
192.723 306.729 li
53.136 306.729 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
54.2989 308.728 mo
(helper_Parallel_8_DCT_1D_X)
[1.2495 1.10952 .694721 1.2495 1.10952 .83215 1.2495 1.38944 1.10952 .832153 1.10951 .694725 
.694725 1.10951 .694725 1.2495 1.2495 1.2495 1.80424 1.66681 1.52687 1.2495 1.2495 1.80424 
1.2495 0 ]xsh
53.136 387.411 mo
192.723 387.411 li
192.723 347.784 li
53.136 347.784 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
54.2989 349.783 mo
(helper_Parallel_8_DCT_1D_Y)
[1.2495 1.10952 .694721 1.2495 1.10952 .83215 1.2495 1.38944 1.10952 .832153 1.10951 .694725 
.694725 1.10951 .694725 1.2495 1.2495 1.2495 1.80424 1.66681 1.52687 1.2495 1.2495 1.80424 
1.2495 0 ]xsh
125.785 404.19 mo
151.489 404.19 li
151.489 390.267 li
125.785 390.267 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m <1C60D8A8C9B6FF86DEBE529995F26ADC252ABAF4F8ABCE39F6B951A24C86
82F3B72A552C5D46A333AAEC49746F27474921C947B29E9EEE21EF479E8AC4CB
A64B9B4BF4B54D7069EE8C71930A689A0AC30AA5DB406CB2F2DF67D1DFA36762
A8298043AAD8738E3C2E6D8E87DCF89210EA6A7696675667850CACB8BD85BF1A
9C23A6EB480778B459116760FD79DE8BA673C0A52BBAEAA003DFFA86FA6EC61F
B9955126552099FD6C946BD155266FCC648BAFF24A5063CAAF26> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[49{/.notdef}rp /one /two 5{/.notdef}rp /eight 9{/.notdef}rp /B /C 
/D /E 6{/.notdef}rp /L 3{/.notdef}rp /P /Q 2{/.notdef}rp 
/T /U 2{/.notdef}rp /X /Y 5{/.notdef}rp /underscore /.notdef 
/a /.notdef /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/.notdef /r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
126.958 392.266 mo
(staticLuminanceQuantization)
[.972092 .694725 1.10951 .694717 .694733 1.10951 1.52687 1.2495 1.94423 .694717 1.2495 1.10953 
1.2495 1.10951 1.10953 1.80423 1.24951 1.10951 1.2495 .694733 .694717 1.10951 1.10953 .694717 
.694717 1.24951 0 ]xsh
124 449.172 mo
177.907 449.172 li
177.907 405.618 li
124 405.618 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
125.126 407.617 mo
(BlockDCDifferenceEncoder)
[1.66682 .694717 1.2495 1.10953 1.2495 1.80424 1.66681 1.80424 .694717 .832153 .832138 1.10953 
.832138 1.10953 1.2495 1.10951 1.10953 1.52687 1.2495 1.10951 1.24951 1.2495 1.10951 0 
]xsh
194.508 463.809 mo
345.519 463.809 li
345.519 288.522 li
194.508 288.522 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
195.611 290.521 mo
(ChannelEncoder_C)
[1.66681 1.24951 1.10951 1.2495 1.2495 1.10953 .694717 1.52687 1.2495 1.10953 1.2495 1.2495 
1.10953 .832138 1.2495 0 ]xsh
197.364 388.839 mo
342.663 388.839 li
342.663 302.445 li
197.364 302.445 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
198.604 304.444 mo
(DCT_2D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
200.22 346.356 mo
339.807 346.356 li
339.807 306.729 li
200.22 306.729 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
201.383 308.728 mo
(helper_Parallel_8_DCT_1D_X)
[1.2495 1.10953 .694717 1.2495 1.10953 .832138 1.2495 1.38945 1.10951 .832153 1.10951 .694733 
.694717 1.10951 .694733 1.2495 1.2495 1.24951 1.80423 1.66681 1.52687 1.24951 1.2495 1.80424 
1.2495 0 ]xsh
200.22 387.411 mo
339.807 387.411 li
339.807 347.784 li
200.22 347.784 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
201.383 349.783 mo
(helper_Parallel_8_DCT_1D_Y)
[1.2495 1.10953 .694717 1.2495 1.10953 .832138 1.2495 1.38945 1.10951 .832153 1.10951 .694733 
.694717 1.10951 .694733 1.2495 1.2495 1.24951 1.80423 1.66681 1.52687 1.24951 1.2495 1.80424 
1.2495 0 ]xsh
257.161 404.19 mo
282.865 404.19 li
282.865 390.267 li
257.161 390.267 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
258.334 392.266 mo
(staticLuminanceQuantization)
[.972107 .694702 1.10953 .694702 .694733 1.10953 1.52686 1.24951 1.94421 .694733 1.24948 1.10953 
1.24951 1.1095 1.10953 1.80426 1.24948 1.10953 1.24948 .694733 .694733 1.1095 1.10953 .694733 
.694702 1.24951 0 ]xsh
239.847 449.172 mo
293.754 449.172 li
293.754 405.618 li
239.847 405.618 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
240.973 407.617 mo
(BlockDCDifferenceEncoder)
[1.66681 .694733 1.2495 1.10951 1.2495 1.80424 1.66681 1.80424 .694717 .832153 .832153 1.10951 
.832153 1.10953 1.24948 1.10953 1.10953 1.52686 1.24951 1.1095 1.24951 1.24951 1.1095 0 
]xsh
341.592 463.809 mo
492.603 463.809 li
492.603 288.522 li
341.592 288.522 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
342.695 290.521 mo
(ChannelEncoder_C)
[1.66681 1.24951 1.1095 1.24951 1.24951 1.1095 .694733 1.52689 1.24948 1.10953 1.24948 1.24951 
1.10953 .832153 1.24948 0 ]xsh
344.448 388.839 mo
489.747 388.839 li
489.747 302.445 li
344.448 302.445 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
345.688 304.444 mo
(DCT_2D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
347.304 346.356 mo
486.891 346.356 li
486.891 306.729 li
347.304 306.729 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
348.467 308.728 mo
(helper_Parallel_8_DCT_1D_X)
[1.24951 1.1095 .694733 1.24951 1.1095 .832153 1.24951 1.38943 1.10953 .832153 1.1095 .694733 
.694733 1.1095 .694733 1.24948 1.24951 1.24951 1.80423 1.66681 1.52689 1.24948 1.24951 1.80423 
1.24951 0 ]xsh
347.304 387.411 mo
486.891 387.411 li
486.891 347.784 li
347.304 347.784 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
348.467 349.783 mo
(helper_Parallel_8_DCT_1D_Y)
[1.24951 1.1095 .694733 1.24951 1.1095 .832153 1.24951 1.38943 1.10953 .832153 1.1095 .694733 
.694733 1.1095 .694733 1.24948 1.24951 1.24951 1.80423 1.66681 1.52689 1.24948 1.24951 1.80423 
1.24951 0 ]xsh
390.322 404.19 mo
416.026 404.19 li
416.026 390.267 li
390.322 390.267 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
391.495 392.266 mo
(staticLuminanceQuantization)
[.972107 .694702 1.10953 .694702 .694733 1.10953 1.52686 1.24951 1.94421 .694733 1.24948 1.10953 
1.24951 1.1095 1.10953 1.80423 1.24951 1.10953 1.24948 .694733 .694733 1.1095 1.10953 .694733 
.694702 1.24951 0 ]xsh
356.05 449.172 mo
409.957 449.172 li
409.957 405.618 li
356.05 405.618 li
cp
@
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
357.176 407.617 mo
(BlockDCDifferenceEncoder)
[1.66681 .694733 1.24948 1.10953 1.24951 1.80423 1.66681 1.80426 .694702 .832153 .832153 1.10953 
.832123 1.10953 1.24951 1.1095 1.10953 1.52689 1.24948 1.10953 1.24951 1.24948 1.10953 0 
]xsh
277.867 9.88397 mo
277.867 7.71497 274.351 5.95697 270.013 5.95697 cv
265.676 5.95697 262.159 7.71497 262.159 9.88397 cv
262.159 12.0519 265.676 13.81 270.013 13.81 cv
274.351 13.81 277.867 12.0519 277.867 9.88397 cv
@
277.867 9.88397 mo
277.867 7.71497 274.351 5.95697 270.013 5.95697 cv
265.676 5.95697 262.159 7.71497 262.159 9.88397 cv
262.159 12.0519 265.676 13.81 270.013 13.81 cv
274.351 13.81 277.867 12.0519 277.867 9.88397 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
/hyphen <1C60D8A8C9B81F2C7E673161CF52871F3F524B3A1BAC5ADA04F510A
476> |-
/slash <1C60D8A8C9B854D088EAD778FBC18D924BA165ED7CB0EB5700C3B61B
62ACF96E65C0BF> |-
/zero <1C60D8A8C9B7A73DE18CEEF4E48C6DD01FBACAA39C3CF5567D0E5C788
075445C95D6A3B6E540D57A95C2149688073A3E100742CAF1210D033AAEFAE6F
8B444349FD5782CA146EC98165CB56922017B727DFF8905922E07> |-
/colon <1C60D8A8C9B854D0E389293C42E83787A5BE0CE9B5745E40D1B32D07
F826004562E0981DB26F3EF2E2B5CD932C33C49C462F9673F306A9A8ECFFE93D
9FCE8BF4190AA3F1208FCCE1> |-
/greater <1C60D8A8C9B7E7C1C7C30B940B3D62C7A181F0EBB0723CBB160375
71F050C44CCE59A85ACB3DB6BF9B03383F> |-
/F <1C60D8A8C9B7EF322B10A2A8DE6CF647A07CB452C54BD470E6C4C389B7AB
8653B88FE6E4626649FABCEAB5DAD30BD9C2A2F1F8512C1A1DC93BDB928A3688
B193ECEDB997255AB4DCBBC4BBB3FF147299B3653B9E76139CB6E91A13A47208
F2688B5C42863D22FFBF8FD8DF09F08A1966F6652461EEB3D18F0F0CB5B8E18D
6016409AA3D413D5FA051FCF9B4DFF0734259E7DCF> |-
/I <1C60D8A8C9B81F2C3AB090E7A94305EFD59611ABFA6BAFD07A97745145D9
B0DF5E6D35DFFC117239480D5B4909BCBB653176E0149E687888D5B98137EBEA
64> |-
/O <1C60D8A8C9B6079F258D65BC2331B95A484F6FB0C89DE7976C286549CD33
A4D7316575EC038BAA234ED3FB5DEACB25E52512A7CBD428E6DBD2EB830622E8
8A44262525560702DCFFFB3478FE1A2C6113548B23F661EC01296D75C1A7D5FE
B75CD951FFE5A9> |-
/R <1C60D8A8C9B64EDFF4D0475F241567109AA60E358A72CDD6748BBE527383
3D9930EA16405C9FA084F4E606B7DF07A2CCABEF78658BA281F5D25760E71232
16C34541C223BEC48612BD7C0052F7AD27E210716125E9B30EDB889188D65976
1E4423BF9E66EB5CCCE83D82A2DB04554982E2E899847CA739A4B92152682375
567D18A66EABD5068029F8FB7424BADB87039D0F6B1530> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 58 /colon put
dup 62 /greater put
dup 70 /F put
dup 73 /I put
dup 79 /O put
dup 82 /R put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash /zero /one 
/two 5{/.notdef}rp /eight /.notdef /colon 3{/.notdef}rp /greater 3{/.notdef}rp 
/B /C /D /E /F 2{/.notdef}rp /I 2{/.notdef}rp 
/L 2{/.notdef}rp /O /P /Q /R /.notdef /T 
/U 2{/.notdef}rp /X /Y 5{/.notdef}rp /underscore /.notdef /a 
/.notdef /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /.notdef 
/r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
264.531 9.02691 mo
(FileReader)
[1.38943 .694733 .694733 1.1095 1.66681 1.10953 1.10953 1.24948 1.10953 0 ]xsh
265.318 11.8829 mo
(I/O: 0->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
284.829 24.5209 mo
284.829 22.352 278.196 20.5939 270.013 20.5939 cv
261.831 20.5939 255.198 22.352 255.198 24.5209 cv
255.198 26.689 261.831 28.4479 270.013 28.4479 cv
278.196 28.4479 284.829 26.689 284.829 24.5209 cv
@
284.829 24.5209 mo
284.829 22.352 278.196 20.5939 270.013 20.5939 cv
261.831 20.5939 255.198 22.352 255.198 24.5209 cv
255.198 26.689 261.831 28.4479 270.013 28.4479 cv
278.196 28.4479 284.829 26.689 284.829 24.5209 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/asterisk <1C60D8A8C9B7A73DB9A0737247D562C61165E8E636EE73CF26D64
F3C6728422CEE27A3F00DC7152CA3773F07EA559F0959F48B519FDEC6150629C
166D2B4FBEF2A598C45B9530847243905C1F3F150F0DD5877800507BF2B97A2E
4942336B61DB2054C6AB2AE38E3AEA192A16823CC1BE212834012F90F71E96A0
46E312361C7B9D33CA838F52208FFCDFB3B3A9B2A9728D3AFAB94EEE3598CA05
C0D62AFFA345B041C6B4E56F6827F181D11C4BECD0C9CCA67> |-
/comma <1C60D8A8C9B8707CDCE153BE174BF3415C26A42365D336CF0B48FBEC
E2CCCE829E5297D863F3AA9AC7B62E5A6EDE06B2E79A00ED16CF91E8C6953AD2
9D6E96EF745E730ABC2B82BE60EB1DBDD5981EF3D78237B91F6DA501> |-
/four <1C60D8A8C9B7A73DB99E8D3796659F80CD8CFB6F4891658B64B2996E4
565B417E6680D9494DD50CBC7F026F985B68E97EBCD932CA0004F37BA5FD28FA
5EB6F0DC8CCF44A75B207DA88B4B0D8C53ACF90F9CAE1B04C7036C5BF682DB0A
BF0221167> |-
/nine <1C60D8A8C9B7A73DFCCE6C978678EE12F2E62BD7D7FA244984C1E12F1
0EB0B8765182EBCE165DFB850DB8B03381969B80BB1CA53FFB24B5DE34530C8C
83A80415FE19B7C2B551E605143CF6469C8BCE336F9A5E5012DD932CF553D663
37837328637F50B90FF9AE8815D00BBA7EFCE6D508C5B6EBE2D> |-
/G <1C60D8A8C9B6079F258D65BC2350A422AEB94BCF2D0F96794C8438625C31
5D886EF37D4AC3C2F1E1338E25B58FA7772E0B9E5E3E726371665F3474CE0B82
EB9690B23BE3168D2BE4F6B0140B5077B79CDED50A140417505C243C7D98789B
5883DC2727B8882D3854E49A79F785598024348D171E79D4C21E1DA76E252BE9
80994299353DC669631C102ABE82C3B639BE771465159436AABE7CB91BD8812B
5152BA3433FC2701117F14E8CD24269DDA8CC4248C3859> |-
/J <1C60D8A8C9B7361F02E9DFE0B9C9639F5322575055288FA88C96DC9CB9D9
CA19F6F8F65E0BC3562823C923780B557829CF69C4889E8D8AE10C346B69E6B3
C49D8F83FB5992EF32CD5E> |-
/S <1C60D8A8C9B7EF320E2EFDBCAC7BC76D0C8C1FC222AFE4F464C56D04CD48
5F140DB725EC46F068943283C9A43A14A852E22E87331165F602FD95AC890BE8
83DAD7F63C31168B480A95AC244C28C8F37F118A399681DB4822661628FBDA87
D99D0367C013E32688035EC31A5C3FC194FEB20C4FCD84A9EB3547C0D5A421A0
1B87DFDA871D7919B7251A9EC84A645CA15425845057F189EC65A90DD4028CC5
B10853B05E6F7AF9E84AC6588CDCE11B6EF766B248A8304E38964E579F6EF2DC
2D4971ED042868564E8E982FE2B2> |-
/bracketleft <1C60D8A8C9B81F2C1004709917F1EB9E9007379BA7EA5AF509
59B358F5E16AD02BEAED61B9B4504409E46461E8> |-
/bracketright <1C60D8A8C9B81F2C3AFAFC9F3F142FA2ECABD15503EDEA70F
5D5F5146242850878F31CB4D0C10EB6BE6291805C> |-
/y <1C60D8A8C9B7A73DDF325AF121518DD24D79A1D6297F2682F9AD5083CE90
6B71FC8BFB529DE7E11E55AF343C688ECAE2F8E1922FBFF6524D1DEA97BD39D9
CE14632F8473959D0898D7B7EF3E2B985A44859DA5885A0B7E1416032223E48B
C8A546760893052D5D557F50BFBB6793E5108395A50448013F59BB2036802753
A16DC97698BA68F4F4EAF1FDEAF39B9DD03FEBA42B0F0E35E3A4C6407754F9F9
648DF8C8F5539FA7CCFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 42 /asterisk put
dup 44 /comma put
dup 52 /four put
dup 57 /nine put
dup 71 /G put
dup 74 /J put
dup 83 /S put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 9{/.notdef}rp /asterisk /.notdef /comma /hyphen /.notdef 
/slash /zero /one /two /.notdef /four 3{/.notdef}rp /eight 
/nine /colon 3{/.notdef}rp /greater 3{/.notdef}rp /B /C /D 
/E /F /G /.notdef /I /J /.notdef /L 
2{/.notdef}rp /O /P /Q /R /S /T /U 
2{/.notdef}rp /X /Y /.notdef /bracketleft /.notdef /bracketright /.notdef 
/underscore /.notdef /a /.notdef /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u 3{/.notdef}rp 
/y /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
257.52 23.6639 mo
(JPEGByteStream_Parser)
[.972107 1.38943 1.52686 1.80426 1.66681 1.24948 .694733 1.10953 1.38943 .694733 .832123 1.10953 
1.10953 1.94421 1.24951 1.38943 1.10953 .832153 .972076 1.10953 0 ]xsh
259.905 26.52 mo
(I/O: [48,*]->[192,*])
[.832153 .694702 1.80426 .694702 .624756 .832153 1.24951 1.24948 .624756 1.24951 .832153 .832123 
1.40942 .832153 1.24951 1.24951 1.24948 .624756 1.24951 0 ]xsh
270.013 13.989 mo
270.013 15.4169 270.013 17.024 270.013 18.6299 cv
@
269.656 18.6299 mo
270.013 20.415 li
270.549 18.6299 li
cp
@
269.656 18.6299 mo
270.013 20.415 li
270.549 18.6299 li
f
277.153 39.158 mo
277.153 36.989 273.957 35.231 270.013 35.231 cv
266.07 35.231 262.873 36.989 262.873 39.158 cv
262.873 41.3259 266.07 43.0839 270.013 43.0839 cv
273.957 43.0839 277.153 41.3259 277.153 39.158 cv
@
277.153 39.158 mo
277.153 36.989 273.957 35.231 270.013 35.231 cv
266.07 35.231 262.873 36.989 262.873 39.158 cv
262.873 41.3259 266.07 43.0839 270.013 43.0839 cv
273.957 43.0839 277.153 41.3259 277.153 39.158 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
266.126 38.301 mo
(Identity)
[.832153 1.24948 1.10953 1.24951 .694702 .694733 .694733 0 ]xsh
265.318 41.157 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
270.013 28.6259 mo
270.013 30.054 270.013 31.6609 270.013 33.267 cv
@
269.656 33.267 mo
270.013 35.0519 li
270.549 33.267 li
cp
@
269.656 33.267 mo
270.013 35.0519 li
270.549 33.267 li
f
282.508 52.902 mo
282.508 51.128 276.914 49.689 270.013 49.689 cv
263.113 49.689 257.518 51.128 257.518 52.902 cv
257.518 54.676 263.113 56.115 270.013 56.115 cv
276.914 56.115 282.508 54.676 282.508 52.902 cv
@
282.508 52.902 mo
282.508 51.128 276.914 49.689 270.013 49.689 cv
263.113 49.689 257.518 51.128 257.518 52.902 cv
257.518 54.676 263.113 56.115 270.013 56.115 cv
276.914 56.115 282.508 54.676 282.508 52.902 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C7961C5101279ABC36EDE6472BD125007B977
158C4E9FC1695861D4B758EA0B2DA40929DA2764CDB06C7B17969E83F9B9F9DB
69731300937B8C87AE99> |-
/parenright <1C60D8A8C9B81F2C3AE115477765EA9A623E840D3901B96042A
533934EFD3574B5C656B3B3F7387587FE0D191D87B3E12F0EE70351D07A784B9
DEAB1C75708B7B3217116> |-
/six <1C60D8A8C9B7A73DF81BACD811429F931042E1295F1D2320E46DE79DF7
47FCAABFFD92F045A475E54E15C8E93ECB3BD59C8545C0EF45BF22429615FC68
5C033A02F070B2C6D7D737838C1853D297AC8915086E73952A7A9847D6F588AB
17767CC39CB62607242BC1B7BFF5295CEB6C03755CD9B53DA2> |-
/b <1C60D8A8C9B7A73D9AFACE39B0C8DF9EB6083858E657E6E95D2C42AE2914
EB3C7C6FCB5E9F471C2055D213C552ACA7BC04F55BA26F3B77D8DFB74AC132BE
41DB935437CE3B007C16B65D849E2E6D1C61659F2699A17D9AEEDDD0EBC23EB8
70A7377D2AC9DB56D0296131C3A8254097E85D96> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 54 /six put
dup 98 /b put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /.notdef /four 
/.notdef /six /.notdef /eight /nine /colon 3{/.notdef}rp /greater 
3{/.notdef}rp /B /C /D /E /F /G /.notdef 
/I /J /.notdef /L 2{/.notdef}rp /O /P /Q 
/R /S /T /U 2{/.notdef}rp /X /Y /.notdef 
/bracketleft /.notdef /bracketright /.notdef /underscore /.notdef /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u 3{/.notdef}rp /y /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
259.255 53.4729 mo
(roundrobin\(64,64,64\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
1.24951 .624756 1.24948 1.24951 .624756 1.24948 1.24951 0 ]xsh
270.013 43.2629 mo
270.013 44.691 270.013 46.298 270.013 47.904 cv
@
269.656 47.904 mo
270.013 49.689 li
270.549 47.904 li
cp
@
269.656 47.904 mo
270.013 49.689 li
270.549 47.904 li
f
178.8 66.647 mo
178.8 64.478 173.525 62.72 167.019 62.72 cv
160.513 62.72 155.238 64.478 155.238 66.647 cv
155.238 68.815 160.513 70.573 167.019 70.573 cv
173.525 70.573 178.8 68.815 178.8 66.647 cv
@
178.8 66.647 mo
178.8 64.478 173.525 62.72 167.019 62.72 cv
160.513 62.72 155.238 64.478 155.238 66.647 cv
155.238 68.815 160.513 70.573 167.019 70.573 cv
173.525 70.573 178.8 68.815 178.8 66.647 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Z <1C60D8A8C9B7D8BE77A3BDA24C4F667A02060AD299A5EC1894B68DCAC3DB
787FE5F9D15DF76FDAF4298233CFCEF8B1E26BA6B780E4ACF507403C18EFE239
6ED23F8FD0119684BDFE54> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 90 /Z put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /.notdef /four 
/.notdef /six /.notdef /eight /nine /colon 3{/.notdef}rp /greater 
3{/.notdef}rp /B /C /D /E /F /G /.notdef 
/I /J /.notdef /L 2{/.notdef}rp /O /P /Q 
/R /S /T /U 2{/.notdef}rp /X /Y /Z 
/bracketleft /.notdef /bracketright /.notdef /underscore /.notdef /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u 3{/.notdef}rp /y /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
157.58 65.7899 mo
(ZigZagUnordering)
[1.52687 .694717 1.2495 1.52687 1.10953 1.2495 1.80424 1.2495 1.2495 .832153 1.2495 1.10953 
.832138 .694717 1.24951 0 ]xsh
161.074 68.646 mo
(I/O: 64->64)
[.832153 .694717 1.80424 .694717 .624756 1.2495 1.2495 .832153 1.40942 1.2495 0 ]xsh
257.697 53.438 mo
240.561 54.152 209.859 55.937 191.83 58.257 cv
187.368 58.971 180.942 61.113 175.587 63.2549 cv
@
176.122 62.541 mo
174.516 63.612 li
176.301 63.434 li
cp
@
176.122 62.541 mo
174.516 63.612 li
176.301 63.434 li
f
281.794 66.647 mo
281.794 64.478 276.52 62.72 270.013 62.72 cv
263.507 62.72 258.232 64.478 258.232 66.647 cv
258.232 68.815 263.507 70.573 270.013 70.573 cv
276.52 70.573 281.794 68.815 281.794 66.647 cv
@
281.794 66.647 mo
281.794 64.478 276.52 62.72 270.013 62.72 cv
263.507 62.72 258.232 64.478 258.232 66.647 cv
258.232 68.815 263.507 70.573 270.013 70.573 cv
276.52 70.573 281.794 68.815 281.794 66.647 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
260.575 65.7899 mo
(ZigZagUnordering)
[1.52686 .694733 1.24951 1.52686 1.10953 1.24951 1.80423 1.24948 1.24951 .832153 1.24951 1.1095 
.832153 .694733 1.24948 0 ]xsh
264.069 68.646 mo
(I/O: 64->64)
[.832153 .694702 1.80426 .694702 .624756 1.24951 1.24951 .832123 1.40942 1.24951 0 ]xsh
270.013 56.115 mo
270.013 57.543 270.013 59.15 270.013 60.756 cv
@
269.656 60.756 mo
270.013 62.541 li
270.549 60.756 li
cp
@
269.656 60.756 mo
270.013 62.541 li
270.549 60.756 li
f
384.789 66.647 mo
384.789 64.478 379.514 62.72 373.008 62.72 cv
366.502 62.72 361.227 64.478 361.227 66.647 cv
361.227 68.815 366.502 70.573 373.008 70.573 cv
379.514 70.573 384.789 68.815 384.789 66.647 cv
@
384.789 66.647 mo
384.789 64.478 379.514 62.72 373.008 62.72 cv
366.502 62.72 361.227 64.478 361.227 66.647 cv
361.227 68.815 366.502 70.573 373.008 70.573 cv
379.514 70.573 384.789 68.815 384.789 66.647 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
363.569 65.7899 mo
(ZigZagUnordering)
[1.52686 .694733 1.24951 1.52686 1.10953 1.24951 1.80423 1.24951 1.24948 .832153 1.24951 1.1095 
.832153 .694733 1.24948 0 ]xsh
367.063 68.646 mo
(I/O: 64->64)
[.832153 .694702 1.80426 .694702 .624756 1.24951 1.24951 .832123 1.40942 1.24951 0 ]xsh
282.33 53.438 mo
299.466 54.152 330.168 55.937 348.196 58.257 cv
352.48 58.971 358.728 60.935 363.904 62.898 cv
@
363.726 63.2549 mo
365.511 63.612 li
364.083 62.541 li
cp
@
363.726 63.2549 mo
365.511 63.612 li
364.083 62.541 li
f
278.403 241.041 mo
278.403 239.267 273.608 237.828 267.693 237.828 cv
261.778 237.828 256.983 239.267 256.983 241.041 cv
256.983 242.815 261.778 244.254 267.693 244.254 cv
273.608 244.254 278.403 242.815 278.403 241.041 cv
@
278.403 241.041 mo
278.403 239.267 273.608 237.828 267.693 237.828 cv
261.778 237.828 256.983 239.267 256.983 241.041 cv
256.983 242.815 261.778 244.254 267.693 244.254 cv
273.608 244.254 278.403 242.815 278.403 241.041 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
258.809 241.612 mo
(roundrobin\(1,1,1\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 0 ]xsh
277.153 254.786 mo
277.153 252.617 272.918 250.859 267.693 250.859 cv
262.468 250.859 258.232 252.617 258.232 254.786 cv
258.232 256.954 262.468 258.712 267.693 258.712 cv
272.918 258.712 277.153 256.954 277.153 254.786 cv
@
277.153 254.786 mo
277.153 252.617 272.918 250.859 267.693 250.859 cv
262.468 250.859 258.232 252.617 258.232 254.786 cv
258.232 256.954 262.468 258.712 267.693 258.712 cv
272.918 258.712 277.153 256.954 277.153 254.786 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73DB9E68392B0D8A76464A51F2E94D7CC8D0C2C4EA9
EB677CBC38A50658519E8BF18CD893FCF8B1BA3E22E132B8EDB4B7CD483A2AC4
23E82DF2F3816B8AE8EA5F180D3F5DFF2BF284FCE4CE5C4E107DDB61A9BE179C
50061EE6040417B0DF341D85D92A63653C2A28BA649E4CD9966C4B081E30F323
54693AC79886604480856D93C0D7CC0DE6962663CC1F198BBFA4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/.notdef /six /.notdef /eight /nine /colon 3{/.notdef}rp /greater 
3{/.notdef}rp /B /C /D /E /F /G /.notdef 
/I /J /.notdef /L 2{/.notdef}rp /O /P /Q 
/R /S /T /U 2{/.notdef}rp /X /Y /Z 
/bracketleft /.notdef /bracketright /.notdef /underscore /.notdef /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u 3{/.notdef}rp /y /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
260.542 253.929 mo
(YCbCrtoRGB)
[1.80423 1.66681 1.24951 1.66681 .832153 .694733 1.24948 1.66684 1.80423 0 ]xsh
262.997 256.785 mo
(I/O: 3->3)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
267.693 244.254 mo
267.693 245.682 267.693 247.289 267.693 248.895 cv
@
267.336 248.895 mo
267.693 250.68 li
268.228 248.895 li
cp
@
267.336 248.895 mo
267.693 250.68 li
268.228 248.895 li
f
173.802 80.391 mo
173.802 78.617 169.167 77.1779 163.449 77.1779 cv
157.731 77.1779 153.096 78.617 153.096 80.391 cv
153.096 82.165 157.731 83.604 163.449 83.604 cv
169.167 83.604 173.802 82.165 173.802 80.391 cv
@
173.802 80.391 mo
173.802 78.617 169.167 77.1779 163.449 77.1779 cv
157.731 77.1779 153.096 78.617 153.096 80.391 cv
153.096 82.165 157.731 83.604 163.449 83.604 cv
169.167 83.604 173.802 82.165 173.802 80.391 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
154.878 80.9619 mo
(roundrobin\(1,63\))
[.832153 1.2495 1.2495 1.2495 1.24951 .832138 1.24951 1.2495 .694717 1.2495 .832153 1.2495 
.624756 1.2495 1.2495 0 ]xsh
165.948 70.752 mo
165.591 72.18 165.055 73.965 164.698 75.572 cv
@
164.341 75.393 mo
164.341 77.1779 li
165.234 75.572 li
cp
@
164.341 75.393 mo
164.341 77.1779 li
165.234 75.572 li
f
156.309 96.099 mo
156.309 92.747 148.797 90.03 139.53 90.03 cv
130.263 90.03 122.751 92.747 122.751 96.099 cv
122.751 99.451 130.263 102.168 139.53 102.168 cv
148.797 102.168 156.309 99.451 156.309 96.099 cv
@
156.309 96.099 mo
156.309 92.747 148.797 90.03 139.53 90.03 cv
130.263 90.03 122.751 92.747 122.751 96.099 cv
122.751 99.451 130.263 102.168 139.53 102.168 cv
148.797 102.168 156.309 99.451 156.309 96.099 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6079F005CDFC8A94B75FD7D89F5577E741BA5E9223B5FB59E
3315C336CDEC6F323D18A178B38DCEDA9B451B37165385283368F94E5EC5086C
A620D2549B18425DA74331F96252E5D5358EE44D33B708D9B8822975F755BF6A
D18C81AA5BF9B47D39D0AFBBC3A6521D0B18D90963534584D1092363898607EF
C07B44A235786C96> |-
/H <1C60D8A8C9B6079F62AF7EE2120CD8667DDD4FA2DBFCE5E63E48B84464C1
802A269C64DF6D959EDF25835FFE2A562C206570E6F5B714FC53C2D5C307E1C8
A7B7F4078E600204C204D1FAC19490C22F80872356DF60239B84CD61D63A7DAA
1B4B4595C75AFC0D0514E00256BFA54FA5E3DE43161DB123A8A356631F> |-
/K <1C60D8A8C9B6079F62AF7EE261D2819ED7974217E7034289FA7C1BABF100
C6A5480EF2F67F33525B9F0C3A7EBEA8703E8C35FFE54D3010A9809D5E12442C
409B269A7D4346FFD3D0C882E0638FE5876FB72290B12BADDE73C28ABC60097D
5F47A0B45D92F7FD41DF8475D961E4F5A95EF6558D45744A11DE71603FC94A1B
038775E2BC960C01D2B930F2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 65 /A put
dup 72 /H put
dup 75 /K put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/.notdef /six /.notdef /eight /nine /colon 3{/.notdef}rp /greater 
2{/.notdef}rp /A /B /C /D /E /F /G 
/H /I /J /K /L 2{/.notdef}rp /O /P 
/Q /R /S /T /U 2{/.notdef}rp /X /Y 
/Z /bracketleft /.notdef /bracketright /.notdef /underscore /.notdef /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /.notdef 
/r /s /t /u 3{/.notdef}rp /y /z 133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
126.418 93.8139 mo
(IntegerDifferenceDecoder)
[.832146 1.2495 .694717 1.10953 1.2495 1.10951 .832153 1.80424 .694717 .832153 .832138 1.10953 
.832138 1.10953 1.2495 1.10951 1.10953 1.80423 1.10953 1.10951 1.2495 1.24951 1.10951 0 
]xsh
134.835 96.67 mo
(I/O: 1->1)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
125.717 99.5259 mo
(*** PEEKS 1 AHEAD ***)
[1.2495 1.2495 1.24951 .624741 1.38945 1.52687 1.52687 1.80424 1.38943 .624756 1.2495 .624741 
1.80424 1.80424 1.52687 1.80424 1.80423 .624756 1.2495 1.2495 0 ]xsh
158.986 83.247 mo
156.13 85.211 152.203 87.71 148.633 90.03 cv
@
148.812 89.316 mo
147.562 90.744 li
149.347 90.209 li
cp
@
148.812 89.316 mo
147.562 90.744 li
149.347 90.209 li
f
173.802 96.099 mo
173.802 93.93 170.605 92.172 166.662 92.172 cv
162.719 92.172 159.522 93.93 159.522 96.099 cv
159.522 98.268 162.719 100.026 166.662 100.026 cv
170.605 100.026 173.802 98.268 173.802 96.099 cv
@
173.802 96.099 mo
173.802 93.93 170.605 92.172 166.662 92.172 cv
162.719 92.172 159.522 93.93 159.522 96.099 cv
159.522 98.268 162.719 100.026 166.662 100.026 cv
170.605 100.026 173.802 98.268 173.802 96.099 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
162.775 95.2419 mo
(Identity)
[.832153 1.2495 1.10951 1.24951 .694717 .694717 .694717 0 ]xsh
161.967 98.098 mo
(I/O: 1->1)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
164.163 83.604 mo
164.52 85.568 165.055 88.067 165.412 90.387 cv
@
164.877 90.387 mo
165.769 91.994 li
165.769 90.209 li
cp
@
164.877 90.387 mo
165.769 91.994 li
165.769 90.209 li
f
149.883 111.807 mo
149.883 110.033 145.248 108.594 139.53 108.594 cv
133.812 108.594 129.177 110.033 129.177 111.807 cv
129.177 113.581 133.812 115.02 139.53 115.02 cv
145.248 115.02 149.883 113.581 149.883 111.807 cv
@
149.883 111.807 mo
149.883 110.033 145.248 108.594 139.53 108.594 cv
133.812 108.594 129.177 110.033 129.177 111.807 cv
129.177 113.581 133.812 115.02 139.53 115.02 cv
145.248 115.02 149.883 113.581 149.883 111.807 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
130.958 112.378 mo
(roundrobin\(1,63\))
[.832153 1.2495 1.2495 1.2495 1.24951 .832138 1.24951 1.2495 .694717 1.2495 .832153 1.2495 
.624756 1.2495 1.2495 0 ]xsh
145.42 126.266 mo
145.42 124.097 139.666 122.339 132.568 122.339 cv
125.471 122.339 119.717 124.097 119.717 126.266 cv
119.717 128.434 125.471 130.193 132.568 130.193 cv
139.666 130.193 145.42 128.434 145.42 126.266 cv
@
145.42 126.266 mo
145.42 124.097 139.666 122.339 132.568 122.339 cv
125.471 122.339 119.717 124.097 119.717 126.266 cv
119.717 128.434 125.471 130.193 132.568 130.193 cv
139.666 130.193 145.42 128.434 145.42 126.266 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
122.019 125.409 mo
(staticDeQuantization)
[.972092 .694725 1.10951 .694725 .694717 1.10952 1.80424 1.10953 1.80423 1.24951 1.10951 1.2495 
.694733 .694717 1.10951 1.10953 .694717 .694717 1.2495 0 ]xsh
126.623 128.265 mo
(I/O: 64->64)
[.832146 .694725 1.80424 .694717 .624756 1.2495 1.2495 .832153 1.40942 1.2495 0 ]xsh
137.923 115.02 mo
137.031 116.627 136.138 118.769 135.246 120.554 cv
@
134.889 120.375 mo
134.532 122.16 li
135.603 120.732 li
cp
@
134.889 120.375 mo
134.532 122.16 li
135.603 120.732 li
f
139.53 102.168 mo
139.53 103.775 139.53 105.381 139.53 106.988 cv
@
139.173 106.809 mo
139.53 108.594 li
140.065 106.809 li
cp
@
139.173 106.809 mo
139.53 108.594 li
140.065 106.809 li
f
162.556 99.491 mo
161.128 100.562 159.7 101.454 158.451 102.168 cv
155.416 103.953 150.597 106.274 146.848 108.416 cv
@
146.67 108.059 mo
145.242 109.13 li
147.027 108.773 li
cp
@
146.67 108.059 mo
145.242 109.13 li
147.027 108.773 li
f
144.349 145.008 mo
144.349 143.234 137.477 141.795 128.998 141.795 cv
120.52 141.795 113.648 143.234 113.648 145.008 cv
113.648 146.782 120.52 148.221 128.998 148.221 cv
137.477 148.221 144.349 146.782 144.349 145.008 cv
@
144.349 145.008 mo
144.349 143.234 137.477 141.795 128.998 141.795 cv
120.52 141.795 113.648 143.234 113.648 145.008 cv
113.648 146.782 120.52 148.221 128.998 148.221 cv
137.477 148.221 144.349 146.782 144.349 145.008 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
115.429 145.579 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832146 1.2495 1.2495 1.2495 1.2495 .832153 1.2495 1.2495 .694717 1.2495 .832153 1.2495 
.624756 1.2495 .624756 1.2495 .624741 1.24951 .624741 1.24951 .624741 1.24951 .624741 1.2495 
.624756 1.2495 0 ]xsh
131.854 130.371 mo
131.319 133.227 130.605 137.154 129.891 140.189 cv
@
129.534 140.01 mo
129.534 141.795 li
130.426 140.189 li
cp
@
129.534 140.01 mo
129.534 141.795 li
130.426 140.189 li
f
64.917 158.753 mo
64.917 156.584 61.6404 154.826 57.5985 154.826 cv
53.5566 154.826 50.28 156.584 50.28 158.753 cv
50.28 160.921 53.5566 162.679 57.5985 162.679 cv
61.6404 162.679 64.917 160.921 64.917 158.753 cv
@
64.917 158.753 mo
64.917 156.584 61.6404 154.826 57.5985 154.826 cv
53.5566 154.826 50.28 156.584 50.28 158.753 cv
50.28 160.921 53.5566 162.679 57.5985 162.679 cv
61.6404 162.679 64.917 160.921 64.917 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
52.6005 157.896 mo
(iDCT_1D)
[.694721 1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
52.9029 160.752 mo
(I/O: 8->8)
[.83215 .694721 1.80424 .694721 .624748 1.2495 .83215 1.40942 0 ]xsh
116.146 146.793 mo
102.045 148.757 79.554 152.148 65.988 154.647 cv
65.4525 154.826 64.7385 155.004 63.846 155.361 cv
@
64.203 154.647 mo
62.775 155.897 li
64.56 155.54 li
cp
@
64.203 154.647 mo
62.775 155.897 li
64.56 155.54 li
f
82.767 158.753 mo
82.767 156.584 79.4904 154.826 75.4485 154.826 cv
71.4066 154.826 68.13 156.584 68.13 158.753 cv
68.13 160.921 71.4066 162.679 75.4485 162.679 cv
79.4904 162.679 82.767 160.921 82.767 158.753 cv
@
82.767 158.753 mo
82.767 156.584 79.4904 154.826 75.4485 154.826 cv
71.4066 154.826 68.13 156.584 68.13 158.753 cv
68.13 160.921 71.4066 162.679 75.4485 162.679 cv
79.4904 162.679 82.767 160.921 82.767 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
70.4505 157.896 mo
(iDCT_1D)
[.694725 1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
70.7529 160.752 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
117.931 147.15 mo
107.757 149.292 92.9415 152.327 83.838 154.647 cv
83.3025 154.826 82.5885 155.183 81.8745 155.361 cv
@
82.053 154.826 mo
80.625 155.897 li
82.41 155.54 li
cp
@
82.053 154.826 mo
80.625 155.897 li
82.41 155.54 li
f
100.617 158.753 mo
100.617 156.584 97.3404 154.826 93.2985 154.826 cv
89.2566 154.826 85.98 156.584 85.98 158.753 cv
85.98 160.921 89.2566 162.679 93.2985 162.679 cv
97.3404 162.679 100.617 160.921 100.617 158.753 cv
@
100.617 158.753 mo
100.617 156.584 97.3404 154.826 93.2985 154.826 cv
89.2566 154.826 85.98 156.584 85.98 158.753 cv
85.98 160.921 89.2566 162.679 93.2985 162.679 cv
97.3404 162.679 100.617 160.921 100.617 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
88.3005 157.896 mo
(iDCT_1D)
[.694725 1.80424 1.66682 1.52686 1.2495 1.2495 0 ]xsh
88.6029 160.752 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
120.966 147.686 mo
114.897 149.828 106.864 152.684 101.688 154.647 cv
101.152 154.826 100.438 155.183 99.7245 155.54 cv
@
100.081 154.826 mo
98.6535 156.075 li
100.438 155.718 li
cp
@
100.081 154.826 mo
98.6535 156.075 li
100.438 155.718 li
f
118.467 158.753 mo
118.467 156.584 115.19 154.826 111.148 154.826 cv
107.107 154.826 103.83 156.584 103.83 158.753 cv
103.83 160.921 107.107 162.679 111.148 162.679 cv
115.19 162.679 118.467 160.921 118.467 158.753 cv
@
118.467 158.753 mo
118.467 156.584 115.19 154.826 111.148 154.826 cv
107.107 154.826 103.83 156.584 103.83 158.753 cv
103.83 160.921 107.107 162.679 111.148 162.679 cv
115.19 162.679 118.467 160.921 118.467 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
106.151 157.896 mo
(iDCT_1D)
[.694725 1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
106.453 160.752 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
124.893 148.043 mo
122.394 149.828 119.359 152.327 116.682 154.29 cv
@
116.503 153.933 mo
115.432 155.361 li
117.039 154.469 li
cp
@
116.503 153.933 mo
115.432 155.361 li
117.039 154.469 li
f
136.317 158.753 mo
136.317 156.584 133.04 154.826 128.998 154.826 cv
124.957 154.826 121.68 156.584 121.68 158.753 cv
121.68 160.921 124.957 162.679 128.998 162.679 cv
133.04 162.679 136.317 160.921 136.317 158.753 cv
@
136.317 158.753 mo
136.317 156.584 133.04 154.826 128.998 154.826 cv
124.957 154.826 121.68 156.584 121.68 158.753 cv
121.68 160.921 124.957 162.679 128.998 162.679 cv
133.04 162.679 136.317 160.921 136.317 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
124.001 157.896 mo
(iDCT_1D)
[.694725 1.80424 1.66682 1.52687 1.2495 1.2495 0 ]xsh
124.303 160.752 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694717 .624756 1.2495 .832153 1.40942 0 ]xsh
128.998 148.221 mo
128.998 149.649 128.998 151.256 128.998 152.862 cv
@
128.641 152.862 mo
128.998 154.647 li
129.534 152.862 li
cp
@
128.641 152.862 mo
128.998 154.647 li
129.534 152.862 li
f
154.167 158.753 mo
154.167 156.584 150.89 154.826 146.848 154.826 cv
142.807 154.826 139.53 156.584 139.53 158.753 cv
139.53 160.921 142.807 162.679 146.848 162.679 cv
150.89 162.679 154.167 160.921 154.167 158.753 cv
@
154.167 158.753 mo
154.167 156.584 150.89 154.826 146.848 154.826 cv
142.807 154.826 139.53 156.584 139.53 158.753 cv
139.53 160.921 142.807 162.679 146.848 162.679 cv
150.89 162.679 154.167 160.921 154.167 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
141.851 157.896 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
142.153 160.752 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
133.104 148.043 mo
135.603 149.828 138.637 152.327 141.315 154.29 cv
@
140.958 154.469 mo
142.564 155.361 li
141.493 153.933 li
cp
@
140.958 154.469 mo
142.564 155.361 li
141.493 153.933 li
f
172.017 158.753 mo
172.017 156.584 168.74 154.826 164.698 154.826 cv
160.657 154.826 157.38 156.584 157.38 158.753 cv
157.38 160.921 160.657 162.679 164.698 162.679 cv
168.74 162.679 172.017 160.921 172.017 158.753 cv
@
172.017 158.753 mo
172.017 156.584 168.74 154.826 164.698 154.826 cv
160.657 154.826 157.38 156.584 157.38 158.753 cv
157.38 160.921 160.657 162.679 164.698 162.679 cv
168.74 162.679 172.017 160.921 172.017 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
159.701 157.896 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
160.003 160.752 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
137.031 147.686 mo
143.1 149.828 151.311 152.684 156.309 154.647 cv
156.666 154.826 157.023 155.004 157.558 155.183 cv
@
157.38 155.54 mo
159.165 155.897 li
157.737 154.826 li
cp
@
157.38 155.54 mo
159.165 155.897 li
157.737 154.826 li
f
189.867 158.753 mo
189.867 156.584 186.59 154.826 182.548 154.826 cv
178.507 154.826 175.23 156.584 175.23 158.753 cv
175.23 160.921 178.507 162.679 182.548 162.679 cv
186.59 162.679 189.867 160.921 189.867 158.753 cv
@
189.867 158.753 mo
189.867 156.584 186.59 154.826 182.548 154.826 cv
178.507 154.826 175.23 156.584 175.23 158.753 cv
175.23 160.921 178.507 162.679 182.548 162.679 cv
186.59 162.679 189.867 160.921 189.867 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
177.551 157.896 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
177.853 160.752 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
140.244 147.15 mo
150.418 149.292 165.055 152.327 174.159 154.647 cv
174.516 154.647 175.051 154.826 175.408 155.004 cv
@
175.408 155.54 mo
177.193 155.897 li
175.765 154.647 li
cp
@
175.408 155.54 mo
177.193 155.897 li
175.765 154.647 li
f
135.424 172.497 mo
135.424 170.723 128.552 169.284 120.073 169.284 cv
111.595 169.284 104.723 170.723 104.723 172.497 cv
104.723 174.271 111.595 175.71 120.073 175.71 cv
128.552 175.71 135.424 174.271 135.424 172.497 cv
@
135.424 172.497 mo
135.424 170.723 128.552 169.284 120.073 169.284 cv
111.595 169.284 104.723 170.723 104.723 172.497 cv
104.723 174.271 111.595 175.71 120.073 175.71 cv
128.552 175.71 135.424 174.271 135.424 172.497 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
106.504 173.068 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832146 1.2495 1.2495 1.2495 1.2495 .832153 1.2495 1.2495 .694717 1.2495 .832153 1.2495 
.624756 1.2495 .624748 1.2495 .624748 1.2495 .624748 1.2495 .624748 1.2495 .624756 1.2495 
.624756 1.2495 0 ]xsh
135.424 186.063 mo
135.424 184.289 128.552 182.85 120.073 182.85 cv
111.595 182.85 104.723 184.289 104.723 186.063 cv
104.723 187.837 111.595 189.276 120.073 189.276 cv
128.552 189.276 135.424 187.837 135.424 186.063 cv
@
135.424 186.063 mo
135.424 184.289 128.552 182.85 120.073 182.85 cv
111.595 182.85 104.723 184.289 104.723 186.063 cv
104.723 187.837 111.595 189.276 120.073 189.276 cv
128.552 189.276 135.424 187.837 135.424 186.063 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
106.504 186.634 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832146 1.2495 1.2495 1.2495 1.2495 .832153 1.2495 1.2495 .694717 1.2495 .832153 1.2495 
.624756 1.2495 .624748 1.2495 .624748 1.2495 .624748 1.2495 .624748 1.2495 .624756 1.2495 
.624756 1.2495 0 ]xsh
120.073 175.71 mo
120.073 177.317 120.073 179.28 120.073 181.065 cv
@
119.716 181.065 mo
120.073 182.85 li
120.609 181.065 li
cp
@
119.716 181.065 mo
120.073 182.85 li
120.609 181.065 li
f
62.775 161.609 mo
63.846 162.144 65.0955 162.68 65.988 162.858 cv
76.698 165.179 94.0125 168.213 106.15 170.177 cv
@
105.972 170.534 mo
107.757 170.534 li
106.15 169.641 li
cp
@
105.972 170.534 mo
107.757 170.534 li
106.15 169.641 li
f
80.625 161.609 mo
81.8745 162.144 82.9455 162.501 83.838 162.858 cv
90.264 164.822 100.617 167.678 108.649 169.641 cv
@
108.471 169.998 mo
110.256 169.998 li
108.649 169.106 li
cp
@
108.471 169.998 mo
110.256 169.998 li
108.649 169.106 li
f
98.6535 161.43 mo
102.58 163.572 108.471 166.428 112.933 168.749 cv
@
112.576 169.106 mo
114.361 169.463 li
112.933 168.213 li
cp
@
112.576 169.106 mo
114.361 169.463 li
112.933 168.213 li
f
113.647 162.501 mo
114.718 164.108 115.968 166.071 117.039 167.856 cv
@
116.682 168.035 mo
117.931 169.284 li
117.396 167.499 li
cp
@
116.682 168.035 mo
117.931 169.284 li
117.396 167.499 li
f
126.499 162.501 mo
125.428 164.108 124.179 166.071 123.108 167.856 cv
@
122.751 167.499 mo
122.215 169.284 li
123.465 168.035 li
cp
@
122.751 167.499 mo
122.215 169.284 li
123.465 168.035 li
f
141.493 161.43 mo
137.566 163.572 131.676 166.428 127.213 168.749 cv
@
127.213 168.213 mo
125.785 169.463 li
127.57 169.106 li
cp
@
127.213 168.213 mo
125.785 169.463 li
127.57 169.106 li
f
159.343 161.609 mo
158.272 162.144 157.201 162.68 156.309 162.858 cv
149.704 164.822 139.173 167.678 131.14 169.641 cv
@
131.676 168.927 mo
130.069 169.998 li
131.854 169.82 li
cp
@
131.676 168.927 mo
130.069 169.998 li
131.854 169.82 li
f
177.372 161.787 mo
176.301 162.323 175.051 162.68 174.159 162.858 cv
163.27 165.357 145.599 168.392 133.461 170.355 cv
@
133.996 169.82 mo
132.39 170.534 li
134.175 170.712 li
cp
@
133.996 169.82 mo
132.39 170.534 li
134.175 170.712 li
f
64.917 199.808 mo
64.917 197.639 61.6404 195.881 57.5985 195.881 cv
53.5566 195.881 50.28 197.639 50.28 199.808 cv
50.28 201.976 53.5566 203.734 57.5985 203.734 cv
61.6404 203.734 64.917 201.976 64.917 199.808 cv
@
64.917 199.808 mo
64.917 197.639 61.6404 195.881 57.5985 195.881 cv
53.5566 195.881 50.28 197.639 50.28 199.808 cv
50.28 201.976 53.5566 203.734 57.5985 203.734 cv
61.6404 203.734 64.917 201.976 64.917 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
52.6005 198.951 mo
(iDCT_1D)
[.694721 1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
52.9029 201.807 mo
(I/O: 8->8)
[.83215 .694721 1.80424 .694721 .624748 1.2495 .83215 1.40942 0 ]xsh
107.935 188.027 mo
95.7975 189.99 77.412 193.203 65.988 195.702 cv
65.4525 195.881 64.7385 196.059 63.846 196.416 cv
@
64.203 195.702 mo
62.775 196.952 li
64.56 196.595 li
cp
@
64.203 195.702 mo
62.775 196.952 li
64.56 196.595 li
f
82.767 199.808 mo
82.767 197.639 79.4904 195.881 75.4485 195.881 cv
71.4066 195.881 68.13 197.639 68.13 199.808 cv
68.13 201.976 71.4066 203.734 75.4485 203.734 cv
79.4904 203.734 82.767 201.976 82.767 199.808 cv
@
82.767 199.808 mo
82.767 197.639 79.4904 195.881 75.4485 195.881 cv
71.4066 195.881 68.13 197.639 68.13 199.808 cv
68.13 201.976 71.4066 203.734 75.4485 203.734 cv
79.4904 203.734 82.767 201.976 82.767 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
70.4505 198.951 mo
(iDCT_1D)
[.694725 1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
70.7529 201.807 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
110.256 188.562 mo
102.223 190.704 90.7995 193.56 83.838 195.702 cv
83.3025 195.881 82.5885 196.238 81.8745 196.595 cv
@
82.2315 195.881 mo
80.8035 197.13 li
82.5885 196.773 li
cp
@
82.2315 195.881 mo
80.8035 197.13 li
82.5885 196.773 li
f
100.617 199.808 mo
100.617 197.639 97.3404 195.881 93.2985 195.881 cv
89.2566 195.881 85.98 197.639 85.98 199.808 cv
85.98 201.976 89.2566 203.734 93.2985 203.734 cv
97.3404 203.734 100.617 201.976 100.617 199.808 cv
@
100.617 199.808 mo
100.617 197.639 97.3404 195.881 93.2985 195.881 cv
89.2566 195.881 85.98 197.639 85.98 199.808 cv
85.98 201.976 89.2566 203.734 93.2985 203.734 cv
97.3404 203.734 100.617 201.976 100.617 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
88.3005 198.951 mo
(iDCT_1D)
[.694725 1.80424 1.66682 1.52686 1.2495 1.2495 0 ]xsh
88.6029 201.807 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
114.183 189.098 mo
110.077 191.24 104.365 194.096 100.081 196.416 cv
@
100.081 195.881 mo
98.6535 197.13 li
100.438 196.773 li
cp
@
100.081 195.881 mo
98.6535 197.13 li
100.438 196.773 li
f
118.467 199.808 mo
118.467 197.639 115.19 195.881 111.148 195.881 cv
107.107 195.881 103.83 197.639 103.83 199.808 cv
103.83 201.976 107.107 203.734 111.148 203.734 cv
115.19 203.734 118.467 201.976 118.467 199.808 cv
@
118.467 199.808 mo
118.467 197.639 115.19 195.881 111.148 195.881 cv
107.107 195.881 103.83 197.639 103.83 199.808 cv
103.83 201.976 107.107 203.734 111.148 203.734 cv
115.19 203.734 118.467 201.976 118.467 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
106.151 198.951 mo
(iDCT_1D)
[.694725 1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
106.453 201.807 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
117.931 189.276 mo
117.039 190.883 115.789 192.846 114.54 194.631 cv
@
114.183 194.274 mo
113.647 196.059 li
114.897 194.81 li
cp
@
114.183 194.274 mo
113.647 196.059 li
114.897 194.81 li
f
136.317 199.808 mo
136.317 197.639 133.04 195.881 128.998 195.881 cv
124.957 195.881 121.68 197.639 121.68 199.808 cv
121.68 201.976 124.957 203.734 128.998 203.734 cv
133.04 203.734 136.317 201.976 136.317 199.808 cv
@
136.317 199.808 mo
136.317 197.639 133.04 195.881 128.998 195.881 cv
124.957 195.881 121.68 197.639 121.68 199.808 cv
121.68 201.976 124.957 203.734 128.998 203.734 cv
133.04 203.734 136.317 201.976 136.317 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
124.001 198.951 mo
(iDCT_1D)
[.694725 1.80424 1.66682 1.52687 1.2495 1.2495 0 ]xsh
124.303 201.807 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694717 .624756 1.2495 .832153 1.40942 0 ]xsh
122.215 189.276 mo
123.108 190.883 124.357 192.846 125.607 194.631 cv
@
125.25 194.81 mo
126.499 196.059 li
125.964 194.274 li
cp
@
125.25 194.81 mo
126.499 196.059 li
125.964 194.274 li
f
154.167 199.808 mo
154.167 197.639 150.89 195.881 146.848 195.881 cv
142.807 195.881 139.53 197.639 139.53 199.808 cv
139.53 201.976 142.807 203.734 146.848 203.734 cv
150.89 203.734 154.167 201.976 154.167 199.808 cv
@
154.167 199.808 mo
154.167 197.639 150.89 195.881 146.848 195.881 cv
142.807 195.881 139.53 197.639 139.53 199.808 cv
139.53 201.976 142.807 203.734 146.848 203.734 cv
150.89 203.734 154.167 201.976 154.167 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
141.851 198.951 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
142.153 201.807 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
125.964 189.098 mo
130.069 191.24 135.781 194.096 140.065 196.416 cv
@
139.708 196.773 mo
141.493 197.13 li
140.065 195.881 li
cp
@
139.708 196.773 mo
141.493 197.13 li
140.065 195.881 li
f
172.017 199.808 mo
172.017 197.639 168.74 195.881 164.698 195.881 cv
160.657 195.881 157.38 197.639 157.38 199.808 cv
157.38 201.976 160.657 203.734 164.698 203.734 cv
168.74 203.734 172.017 201.976 172.017 199.808 cv
@
172.017 199.808 mo
172.017 197.639 168.74 195.881 164.698 195.881 cv
160.657 195.881 157.38 197.639 157.38 199.808 cv
157.38 201.976 160.657 203.734 164.698 203.734 cv
168.74 203.734 172.017 201.976 172.017 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
159.701 198.951 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
160.003 201.807 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
129.891 188.562 mo
138.102 190.704 149.347 193.56 156.309 195.702 cv
156.666 195.881 157.201 196.059 157.558 196.238 cv
@
157.558 196.773 mo
159.343 196.952 li
157.915 195.881 li
cp
@
157.558 196.773 mo
159.343 196.952 li
157.915 195.881 li
f
189.867 199.808 mo
189.867 197.639 186.59 195.881 182.548 195.881 cv
178.507 195.881 175.23 197.639 175.23 199.808 cv
175.23 201.976 178.507 203.734 182.548 203.734 cv
186.59 203.734 189.867 201.976 189.867 199.808 cv
@
189.867 199.808 mo
189.867 197.639 186.59 195.881 182.548 195.881 cv
178.507 195.881 175.23 197.639 175.23 199.808 cv
175.23 201.976 178.507 203.734 182.548 203.734 cv
186.59 203.734 189.867 201.976 189.867 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
177.551 198.951 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
177.853 201.807 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
132.211 188.027 mo
144.349 189.99 162.913 193.203 174.159 195.702 cv
174.516 195.702 175.051 195.881 175.587 196.238 cv
@
175.587 196.773 mo
177.372 196.952 li
175.944 195.881 li
cp
@
175.587 196.773 mo
177.372 196.952 li
175.944 195.881 li
f
144.349 213.552 mo
144.349 211.778 137.477 210.339 128.998 210.339 cv
120.52 210.339 113.648 211.778 113.648 213.552 cv
113.648 215.326 120.52 216.765 128.998 216.765 cv
137.477 216.765 144.349 215.326 144.349 213.552 cv
@
144.349 213.552 mo
144.349 211.778 137.477 210.339 128.998 210.339 cv
120.52 210.339 113.648 211.778 113.648 213.552 cv
113.648 215.326 120.52 216.765 128.998 216.765 cv
137.477 216.765 144.349 215.326 144.349 213.552 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
115.429 214.123 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832146 1.2495 1.2495 1.2495 1.2495 .832153 1.2495 1.2495 .694717 1.2495 .832153 1.2495 
.624756 1.2495 .624756 1.2495 .624741 1.24951 .624741 1.24951 .624741 1.24951 .624741 1.2495 
.624756 1.2495 0 ]xsh
164.341 227.297 mo
164.341 225.128 161.145 223.37 157.201 223.37 cv
153.258 223.37 150.061 225.128 150.061 227.297 cv
150.061 229.465 153.258 231.223 157.201 231.223 cv
161.145 231.223 164.341 229.465 164.341 227.297 cv
@
164.341 227.297 mo
164.341 225.128 161.145 223.37 157.201 223.37 cv
153.258 223.37 150.061 225.128 150.061 227.297 cv
150.061 229.465 153.258 231.223 157.201 231.223 cv
161.145 231.223 164.341 229.465 164.341 227.297 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
155.05 226.44 mo
(Add)
[1.80424 1.2495 0 ]xsh
152.506 229.296 mo
(I/O: 1->1)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
135.067 216.587 mo
139.53 218.729 145.599 221.585 150.418 223.905 cv
@
150.061 224.262 mo
151.846 224.619 li
150.418 223.37 li
cp
@
150.061 224.262 mo
151.846 224.619 li
150.418 223.37 li
f
62.775 202.664 mo
63.846 203.199 65.0955 203.735 65.988 203.913 cv
79.197 206.591 100.617 209.625 114.897 211.589 cv
@
114.361 211.946 mo
116.146 211.767 li
114.361 211.053 li
cp
@
114.361 211.946 mo
116.146 211.767 li
114.361 211.053 li
f
80.625 202.664 mo
81.8745 203.199 82.9455 203.735 83.838 203.913 cv
92.5845 206.055 106.329 208.911 116.325 211.053 cv
@
115.968 211.41 mo
117.753 211.41 li
116.146 210.518 li
cp
@
115.968 211.41 mo
117.753 211.41 li
116.146 210.518 li
f
98.6535 202.485 mo
99.7245 203.021 100.795 203.556 101.688 203.913 cv
106.507 205.698 113.826 208.376 119.716 210.518 cv
@
119.181 210.875 mo
120.966 210.875 li
119.359 209.982 li
cp
@
119.181 210.875 mo
120.966 210.875 li
119.359 209.982 li
f
115.432 203.021 mo
117.931 204.984 121.144 207.305 123.643 209.268 cv
@
123.286 209.447 mo
124.893 210.339 li
123.822 208.911 li
cp
@
123.286 209.447 mo
124.893 210.339 li
123.822 208.911 li
f
128.998 203.913 mo
128.998 205.341 128.998 206.948 128.998 208.554 cv
@
128.641 208.554 mo
128.998 210.339 li
129.534 208.554 li
cp
@
128.641 208.554 mo
128.998 210.339 li
129.534 208.554 li
f
142.564 203.021 mo
140.065 204.984 136.852 207.305 134.353 209.268 cv
@
134.175 208.911 mo
133.104 210.339 li
134.71 209.447 li
cp
@
134.175 208.911 mo
133.104 210.339 li
134.71 209.447 li
f
159.343 202.664 mo
158.272 203.199 157.201 203.556 156.309 203.913 cv
151.668 205.698 144.349 208.376 138.459 210.518 cv
@
138.816 209.982 mo
137.209 210.875 li
138.994 210.875 li
cp
@
138.816 209.982 mo
137.209 210.875 li
138.994 210.875 li
f
177.372 202.664 mo
176.301 203.199 175.051 203.735 174.159 203.913 cv
165.591 206.055 151.668 208.911 141.672 211.053 cv
@
141.85 210.518 mo
140.244 211.41 li
142.029 211.41 li
cp
@
141.85 210.518 mo
140.244 211.41 li
142.029 211.41 li
f
164.163 228.546 mo
171.838 229.796 184.333 231.938 191.83 232.83 cv
209.502 235.151 239.668 238.185 256.09 239.792 cv
@
255.733 240.149 mo
257.518 239.97 li
255.733 239.256 li
cp
@
255.733 240.149 mo
257.518 239.97 li
255.733 239.256 li
f
280.366 80.391 mo
280.366 78.617 275.731 77.1779 270.013 77.1779 cv
264.296 77.1779 259.66 78.617 259.66 80.391 cv
259.66 82.165 264.296 83.604 270.013 83.604 cv
275.731 83.604 280.366 82.165 280.366 80.391 cv
@
280.366 80.391 mo
280.366 78.617 275.731 77.1779 270.013 77.1779 cv
264.296 77.1779 259.66 78.617 259.66 80.391 cv
259.66 82.165 264.296 83.604 270.013 83.604 cv
275.731 83.604 280.366 82.165 280.366 80.391 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
261.442 80.9619 mo
(roundrobin\(1,63\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 1.24948 0 ]xsh
270.013 70.752 mo
270.013 72.18 270.013 73.787 270.013 75.393 cv
@
269.656 75.393 mo
270.013 77.1779 li
270.549 75.393 li
cp
@
269.656 75.393 mo
270.013 77.1779 li
270.549 75.393 li
f
274.833 96.099 mo
274.833 92.747 267.321 90.03 258.054 90.03 cv
248.787 90.03 241.275 92.747 241.275 96.099 cv
241.275 99.451 248.787 102.168 258.054 102.168 cv
267.321 102.168 274.833 99.451 274.833 96.099 cv
@
274.833 96.099 mo
274.833 92.747 267.321 90.03 258.054 90.03 cv
248.787 90.03 241.275 92.747 241.275 96.099 cv
241.275 99.451 248.787 102.168 258.054 102.168 cv
267.321 102.168 274.833 99.451 274.833 96.099 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
244.942 93.8139 mo
(IntegerDifferenceDecoder)
[.832153 1.2495 .694717 1.10953 1.2495 1.10951 .832153 1.80424 .694717 .832153 .832138 1.10953 
.832153 1.1095 1.24951 1.10953 1.1095 1.80426 1.1095 1.10953 1.24951 1.24948 1.10953 0 
]xsh
253.359 96.67 mo
(I/O: 1->1)
[.832153 .694717 1.80424 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
244.241 99.5259 mo
(*** PEEKS 1 AHEAD ***)
[1.2495 1.2495 1.24951 .624741 1.38945 1.52687 1.52687 1.80423 1.38947 .624725 1.24951 .624756 
1.80423 1.80423 1.52689 1.80423 1.80426 .624725 1.24951 1.24951 0 ]xsh
267.514 83.604 mo
266.443 85.211 265.015 86.996 263.587 88.781 cv
@
263.23 88.424 mo
262.516 90.209 li
263.944 88.959 li
cp
@
263.23 88.424 mo
262.516 90.209 li
263.944 88.959 li
f
292.326 96.099 mo
292.326 93.93 289.129 92.172 285.186 92.172 cv
281.243 92.172 278.046 93.93 278.046 96.099 cv
278.046 98.268 281.243 100.026 285.186 100.026 cv
289.129 100.026 292.326 98.268 292.326 96.099 cv
@
292.326 96.099 mo
292.326 93.93 289.129 92.172 285.186 92.172 cv
281.243 92.172 278.046 93.93 278.046 96.099 cv
278.046 98.268 281.243 100.026 285.186 100.026 cv
289.129 100.026 292.326 98.268 292.326 96.099 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
281.299 95.2419 mo
(Identity)
[.832153 1.24948 1.10953 1.24951 .694702 .694733 .694733 0 ]xsh
280.491 98.098 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
273.048 83.426 mo
275.19 85.746 278.046 88.781 280.545 91.28 cv
@
280.188 91.637 mo
281.794 92.529 li
280.902 90.923 li
cp
@
280.188 91.637 mo
281.794 92.529 li
280.902 90.923 li
f
280.366 111.807 mo
280.366 110.033 275.731 108.594 270.013 108.594 cv
264.296 108.594 259.66 110.033 259.66 111.807 cv
259.66 113.581 264.296 115.02 270.013 115.02 cv
275.731 115.02 280.366 113.581 280.366 111.807 cv
@
280.366 111.807 mo
280.366 110.033 275.731 108.594 270.013 108.594 cv
264.296 108.594 259.66 110.033 259.66 111.807 cv
259.66 113.581 264.296 115.02 270.013 115.02 cv
275.731 115.02 280.366 113.581 280.366 111.807 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
261.442 112.378 mo
(roundrobin\(1,63\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 1.24948 0 ]xsh
282.865 126.266 mo
282.865 124.097 277.111 122.339 270.013 122.339 cv
262.916 122.339 257.161 124.097 257.161 126.266 cv
257.161 128.434 262.916 130.193 270.013 130.193 cv
277.111 130.193 282.865 128.434 282.865 126.266 cv
@
282.865 126.266 mo
282.865 124.097 277.111 122.339 270.013 122.339 cv
262.916 122.339 257.161 124.097 257.161 126.266 cv
257.161 128.434 262.916 130.193 270.013 130.193 cv
277.111 130.193 282.865 128.434 282.865 126.266 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
259.464 125.409 mo
(staticDeQuantization)
[.972107 .694702 1.10953 .694702 .694733 1.10953 1.80423 1.10953 1.80423 1.24951 1.10953 1.24948 
.694733 .694702 1.10953 1.10953 .694733 .694702 1.24951 0 ]xsh
264.068 128.265 mo
(I/O: 64->64)
[.832153 .694702 1.80426 .694702 .624756 1.24951 1.24951 .832123 1.40942 1.24951 0 ]xsh
270.013 115.02 mo
270.013 116.627 270.013 118.59 270.013 120.375 cv
@
269.656 120.375 mo
270.013 122.16 li
270.549 120.375 li
cp
@
269.656 120.375 mo
270.013 122.16 li
270.549 120.375 li
f
262.516 101.99 mo
263.944 103.775 265.372 105.738 266.622 107.345 cv
@
266.265 107.523 mo
267.693 108.594 li
266.8 106.988 li
cp
@
266.265 107.523 mo
267.693 108.594 li
266.8 106.988 li
f
281.794 99.669 mo
279.474 101.99 276.618 105.024 274.119 107.523 cv
@
273.94 107.166 mo
273.048 108.773 li
274.476 107.702 li
cp
@
273.94 107.166 mo
273.048 108.773 li
274.476 107.702 li
f
285.364 145.008 mo
285.364 143.234 278.492 141.795 270.013 141.795 cv
261.535 141.795 254.662 143.234 254.662 145.008 cv
254.662 146.782 261.535 148.221 270.013 148.221 cv
278.492 148.221 285.364 146.782 285.364 145.008 cv
@
285.364 145.008 mo
285.364 143.234 278.492 141.795 270.013 141.795 cv
261.535 141.795 254.662 143.234 254.662 145.008 cv
254.662 146.782 261.535 148.221 270.013 148.221 cv
278.492 148.221 285.364 146.782 285.364 145.008 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.444 145.579 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
270.013 130.371 mo
270.013 133.227 270.013 137.154 270.013 140.189 cv
@
269.656 140.01 mo
270.013 141.795 li
270.549 140.01 li
cp
@
269.656 140.01 mo
270.013 141.795 li
270.549 140.01 li
f
214.857 158.753 mo
214.857 156.584 211.58 154.826 207.538 154.826 cv
203.497 154.826 200.22 156.584 200.22 158.753 cv
200.22 160.921 203.497 162.679 207.538 162.679 cv
211.58 162.679 214.857 160.921 214.857 158.753 cv
@
214.857 158.753 mo
214.857 156.584 211.58 154.826 207.538 154.826 cv
203.497 154.826 200.22 156.584 200.22 158.753 cv
200.22 160.921 203.497 162.679 207.538 162.679 cv
211.58 162.679 214.857 160.921 214.857 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
202.541 157.896 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
202.843 160.752 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
257.875 146.972 mo
245.737 148.935 227.352 152.148 215.928 154.647 cv
215.392 154.826 214.678 155.004 213.786 155.361 cv
@
214.143 154.647 mo
212.715 155.897 li
214.5 155.54 li
cp
@
214.143 154.647 mo
212.715 155.897 li
214.5 155.54 li
f
232.707 158.753 mo
232.707 156.584 229.43 154.826 225.388 154.826 cv
221.347 154.826 218.07 156.584 218.07 158.753 cv
218.07 160.921 221.347 162.679 225.388 162.679 cv
229.43 162.679 232.707 160.921 232.707 158.753 cv
@
232.707 158.753 mo
232.707 156.584 229.43 154.826 225.388 154.826 cv
221.347 154.826 218.07 156.584 218.07 158.753 cv
218.07 160.921 221.347 162.679 225.388 162.679 cv
229.43 162.679 232.707 160.921 232.707 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
220.391 157.896 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
220.693 160.752 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
260.196 147.507 mo
252.163 149.649 240.739 152.505 233.778 154.647 cv
233.242 154.826 232.528 155.183 231.814 155.54 cv
@
232.171 154.826 mo
230.743 156.075 li
232.528 155.718 li
cp
@
232.171 154.826 mo
230.743 156.075 li
232.528 155.718 li
f
250.557 158.753 mo
250.557 156.584 247.28 154.826 243.238 154.826 cv
239.197 154.826 235.92 156.584 235.92 158.753 cv
235.92 160.921 239.197 162.679 243.238 162.679 cv
247.28 162.679 250.557 160.921 250.557 158.753 cv
@
250.557 158.753 mo
250.557 156.584 247.28 154.826 243.238 154.826 cv
239.197 154.826 235.92 156.584 235.92 158.753 cv
235.92 160.921 239.197 162.679 243.238 162.679 cv
247.28 162.679 250.557 160.921 250.557 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
238.241 157.896 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
238.543 160.752 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
264.123 148.043 mo
260.017 150.185 254.305 153.041 250.021 155.361 cv
@
250.021 154.826 mo
248.593 156.075 li
250.378 155.718 li
cp
@
250.021 154.826 mo
248.593 156.075 li
250.378 155.718 li
f
268.407 158.753 mo
268.407 156.584 265.13 154.826 261.088 154.826 cv
257.047 154.826 253.77 156.584 253.77 158.753 cv
253.77 160.921 257.047 162.679 261.088 162.679 cv
265.13 162.679 268.407 160.921 268.407 158.753 cv
@
268.407 158.753 mo
268.407 156.584 265.13 154.826 261.088 154.826 cv
257.047 154.826 253.77 156.584 253.77 158.753 cv
253.77 160.921 257.047 162.679 261.088 162.679 cv
265.13 162.679 268.407 160.921 268.407 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.091 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
256.393 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
267.871 148.221 mo
266.979 149.828 265.729 151.791 264.48 153.576 cv
@
264.123 153.219 mo
263.587 155.004 li
264.837 153.755 li
cp
@
264.123 153.219 mo
263.587 155.004 li
264.837 153.755 li
f
286.257 158.753 mo
286.257 156.584 282.98 154.826 278.938 154.826 cv
274.897 154.826 271.62 156.584 271.62 158.753 cv
271.62 160.921 274.897 162.679 278.938 162.679 cv
282.98 162.679 286.257 160.921 286.257 158.753 cv
@
286.257 158.753 mo
286.257 156.584 282.98 154.826 278.938 154.826 cv
274.897 154.826 271.62 156.584 271.62 158.753 cv
271.62 160.921 274.897 162.679 278.938 162.679 cv
282.98 162.679 286.257 160.921 286.257 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
273.941 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
274.243 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
272.155 148.221 mo
273.048 149.828 274.297 151.791 275.547 153.576 cv
@
275.19 153.755 mo
276.439 155.004 li
275.904 153.219 li
cp
@
275.19 153.755 mo
276.439 155.004 li
275.904 153.219 li
f
304.107 158.753 mo
304.107 156.584 300.83 154.826 296.788 154.826 cv
292.747 154.826 289.47 156.584 289.47 158.753 cv
289.47 160.921 292.747 162.679 296.788 162.679 cv
300.83 162.679 304.107 160.921 304.107 158.753 cv
@
304.107 158.753 mo
304.107 156.584 300.83 154.826 296.788 154.826 cv
292.747 154.826 289.47 156.584 289.47 158.753 cv
289.47 160.921 292.747 162.679 296.788 162.679 cv
300.83 162.679 304.107 160.921 304.107 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
291.791 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
292.093 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
275.904 148.043 mo
280.009 150.185 285.721 153.041 290.005 155.361 cv
@
289.648 155.718 mo
291.433 156.075 li
290.005 154.826 li
cp
@
289.648 155.718 mo
291.433 156.075 li
290.005 154.826 li
f
321.957 158.753 mo
321.957 156.584 318.68 154.826 314.638 154.826 cv
310.597 154.826 307.32 156.584 307.32 158.753 cv
307.32 160.921 310.597 162.679 314.638 162.679 cv
318.68 162.679 321.957 160.921 321.957 158.753 cv
@
321.957 158.753 mo
321.957 156.584 318.68 154.826 314.638 154.826 cv
310.597 154.826 307.32 156.584 307.32 158.753 cv
307.32 160.921 310.597 162.679 314.638 162.679 cv
318.68 162.679 321.957 160.921 321.957 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
309.641 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
309.943 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
279.831 147.507 mo
288.042 149.649 299.287 152.505 306.249 154.647 cv
306.606 154.826 307.141 155.004 307.498 155.183 cv
@
307.498 155.718 mo
309.283 155.897 li
307.855 154.826 li
cp
@
307.498 155.718 mo
309.283 155.897 li
307.855 154.826 li
f
339.807 158.753 mo
339.807 156.584 336.53 154.826 332.488 154.826 cv
328.447 154.826 325.17 156.584 325.17 158.753 cv
325.17 160.921 328.447 162.679 332.488 162.679 cv
336.53 162.679 339.807 160.921 339.807 158.753 cv
@
339.807 158.753 mo
339.807 156.584 336.53 154.826 332.488 154.826 cv
328.447 154.826 325.17 156.584 325.17 158.753 cv
325.17 160.921 328.447 162.679 332.488 162.679 cv
336.53 162.679 339.807 160.921 339.807 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
327.491 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
327.793 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
282.151 146.972 mo
294.289 148.935 312.853 152.148 324.099 154.647 cv
324.456 154.647 324.991 154.826 325.527 155.183 cv
@
325.527 155.718 mo
327.312 155.897 li
325.884 154.826 li
cp
@
325.527 155.718 mo
327.312 155.897 li
325.884 154.826 li
f
285.364 172.497 mo
285.364 170.723 278.492 169.284 270.013 169.284 cv
261.535 169.284 254.662 170.723 254.662 172.497 cv
254.662 174.271 261.535 175.71 270.013 175.71 cv
278.492 175.71 285.364 174.271 285.364 172.497 cv
@
285.364 172.497 mo
285.364 170.723 278.492 169.284 270.013 169.284 cv
261.535 169.284 254.662 170.723 254.662 172.497 cv
254.662 174.271 261.535 175.71 270.013 175.71 cv
278.492 175.71 285.364 174.271 285.364 172.497 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.444 173.068 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
285.364 186.063 mo
285.364 184.289 278.492 182.85 270.013 182.85 cv
261.535 182.85 254.662 184.289 254.662 186.063 cv
254.662 187.837 261.535 189.276 270.013 189.276 cv
278.492 189.276 285.364 187.837 285.364 186.063 cv
@
285.364 186.063 mo
285.364 184.289 278.492 182.85 270.013 182.85 cv
261.535 182.85 254.662 184.289 254.662 186.063 cv
254.662 187.837 261.535 189.276 270.013 189.276 cv
278.492 189.276 285.364 187.837 285.364 186.063 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.444 186.634 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
270.013 175.71 mo
270.013 177.317 270.013 179.28 270.013 181.065 cv
@
269.656 181.065 mo
270.013 182.85 li
270.549 181.065 li
cp
@
269.656 181.065 mo
270.013 182.85 li
270.549 181.065 li
f
212.715 161.609 mo
213.786 162.144 215.035 162.68 215.928 162.858 cv
226.638 165.179 243.952 168.213 256.09 170.177 cv
@
255.912 170.534 mo
257.697 170.534 li
256.09 169.641 li
cp
@
255.912 170.534 mo
257.697 170.534 li
256.09 169.641 li
f
230.565 161.609 mo
231.814 162.144 232.885 162.501 233.778 162.858 cv
240.204 164.822 250.557 167.678 258.589 169.641 cv
@
258.411 169.998 mo
260.196 169.998 li
258.589 169.106 li
cp
@
258.411 169.998 mo
260.196 169.998 li
258.589 169.106 li
f
248.593 161.43 mo
252.52 163.572 258.411 166.428 262.873 168.749 cv
@
262.516 169.106 mo
264.301 169.463 li
262.873 168.213 li
cp
@
262.516 169.106 mo
264.301 169.463 li
262.873 168.213 li
f
263.587 162.501 mo
264.658 164.108 265.908 166.071 266.979 167.856 cv
@
266.622 168.035 mo
267.871 169.284 li
267.336 167.499 li
cp
@
266.622 168.035 mo
267.871 169.284 li
267.336 167.499 li
f
276.439 162.501 mo
275.368 164.108 274.119 166.071 273.048 167.856 cv
@
272.691 167.499 mo
272.155 169.284 li
273.405 168.035 li
cp
@
272.691 167.499 mo
272.155 169.284 li
273.405 168.035 li
f
291.433 161.43 mo
287.506 163.572 281.616 166.428 277.153 168.749 cv
@
277.153 168.213 mo
275.725 169.463 li
277.51 169.106 li
cp
@
277.153 168.213 mo
275.725 169.463 li
277.51 169.106 li
f
309.283 161.609 mo
308.212 162.144 307.141 162.68 306.249 162.858 cv
299.644 164.822 289.113 167.678 281.08 169.641 cv
@
281.616 168.927 mo
280.009 169.998 li
281.794 169.82 li
cp
@
281.616 168.927 mo
280.009 169.998 li
281.794 169.82 li
f
327.312 161.787 mo
326.241 162.323 324.991 162.68 324.099 162.858 cv
313.21 165.357 295.539 168.392 283.401 170.355 cv
@
283.936 169.82 mo
282.33 170.534 li
284.115 170.712 li
cp
@
283.936 169.82 mo
282.33 170.534 li
284.115 170.712 li
f
214.857 199.808 mo
214.857 197.639 211.58 195.881 207.538 195.881 cv
203.497 195.881 200.22 197.639 200.22 199.808 cv
200.22 201.976 203.497 203.734 207.538 203.734 cv
211.58 203.734 214.857 201.976 214.857 199.808 cv
@
214.857 199.808 mo
214.857 197.639 211.58 195.881 207.538 195.881 cv
203.497 195.881 200.22 197.639 200.22 199.808 cv
200.22 201.976 203.497 203.734 207.538 203.734 cv
211.58 203.734 214.857 201.976 214.857 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
202.541 198.951 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
202.843 201.807 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
257.875 188.027 mo
245.737 189.99 227.352 193.203 215.928 195.702 cv
215.392 195.881 214.678 196.059 213.786 196.416 cv
@
214.143 195.702 mo
212.715 196.952 li
214.5 196.595 li
cp
@
214.143 195.702 mo
212.715 196.952 li
214.5 196.595 li
f
232.707 199.808 mo
232.707 197.639 229.43 195.881 225.388 195.881 cv
221.347 195.881 218.07 197.639 218.07 199.808 cv
218.07 201.976 221.347 203.734 225.388 203.734 cv
229.43 203.734 232.707 201.976 232.707 199.808 cv
@
232.707 199.808 mo
232.707 197.639 229.43 195.881 225.388 195.881 cv
221.347 195.881 218.07 197.639 218.07 199.808 cv
218.07 201.976 221.347 203.734 225.388 203.734 cv
229.43 203.734 232.707 201.976 232.707 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
220.391 198.951 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
220.693 201.807 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
260.196 188.562 mo
252.163 190.704 240.739 193.56 233.778 195.702 cv
233.242 195.881 232.528 196.238 231.814 196.595 cv
@
232.171 195.881 mo
230.743 197.13 li
232.528 196.773 li
cp
@
232.171 195.881 mo
230.743 197.13 li
232.528 196.773 li
f
250.557 199.808 mo
250.557 197.639 247.28 195.881 243.238 195.881 cv
239.197 195.881 235.92 197.639 235.92 199.808 cv
235.92 201.976 239.197 203.734 243.238 203.734 cv
247.28 203.734 250.557 201.976 250.557 199.808 cv
@
250.557 199.808 mo
250.557 197.639 247.28 195.881 243.238 195.881 cv
239.197 195.881 235.92 197.639 235.92 199.808 cv
235.92 201.976 239.197 203.734 243.238 203.734 cv
247.28 203.734 250.557 201.976 250.557 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
238.241 198.951 mo
(iDCT_1D)
[.694717 1.80424 1.66681 1.52687 1.2495 1.24951 0 ]xsh
238.543 201.807 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
264.123 189.098 mo
260.017 191.24 254.305 194.096 250.021 196.416 cv
@
250.021 195.881 mo
248.593 197.13 li
250.378 196.773 li
cp
@
250.021 195.881 mo
248.593 197.13 li
250.378 196.773 li
f
268.407 199.808 mo
268.407 197.639 265.13 195.881 261.088 195.881 cv
257.047 195.881 253.77 197.639 253.77 199.808 cv
253.77 201.976 257.047 203.734 261.088 203.734 cv
265.13 203.734 268.407 201.976 268.407 199.808 cv
@
268.407 199.808 mo
268.407 197.639 265.13 195.881 261.088 195.881 cv
257.047 195.881 253.77 197.639 253.77 199.808 cv
253.77 201.976 257.047 203.734 261.088 203.734 cv
265.13 203.734 268.407 201.976 268.407 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.091 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
256.393 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
267.871 189.276 mo
266.979 190.883 265.729 192.846 264.48 194.631 cv
@
264.123 194.274 mo
263.587 196.059 li
264.837 194.81 li
cp
@
264.123 194.274 mo
263.587 196.059 li
264.837 194.81 li
f
286.257 199.808 mo
286.257 197.639 282.98 195.881 278.938 195.881 cv
274.897 195.881 271.62 197.639 271.62 199.808 cv
271.62 201.976 274.897 203.734 278.938 203.734 cv
282.98 203.734 286.257 201.976 286.257 199.808 cv
@
286.257 199.808 mo
286.257 197.639 282.98 195.881 278.938 195.881 cv
274.897 195.881 271.62 197.639 271.62 199.808 cv
271.62 201.976 274.897 203.734 278.938 203.734 cv
282.98 203.734 286.257 201.976 286.257 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
273.941 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
274.243 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
272.155 189.276 mo
273.048 190.883 274.297 192.846 275.547 194.631 cv
@
275.19 194.81 mo
276.439 196.059 li
275.904 194.274 li
cp
@
275.19 194.81 mo
276.439 196.059 li
275.904 194.274 li
f
304.107 199.808 mo
304.107 197.639 300.83 195.881 296.788 195.881 cv
292.747 195.881 289.47 197.639 289.47 199.808 cv
289.47 201.976 292.747 203.734 296.788 203.734 cv
300.83 203.734 304.107 201.976 304.107 199.808 cv
@
304.107 199.808 mo
304.107 197.639 300.83 195.881 296.788 195.881 cv
292.747 195.881 289.47 197.639 289.47 199.808 cv
289.47 201.976 292.747 203.734 296.788 203.734 cv
300.83 203.734 304.107 201.976 304.107 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
291.791 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
292.093 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
275.904 189.098 mo
280.009 191.24 285.721 194.096 290.005 196.416 cv
@
289.648 196.773 mo
291.433 197.13 li
290.005 195.881 li
cp
@
289.648 196.773 mo
291.433 197.13 li
290.005 195.881 li
f
321.957 199.808 mo
321.957 197.639 318.68 195.881 314.638 195.881 cv
310.597 195.881 307.32 197.639 307.32 199.808 cv
307.32 201.976 310.597 203.734 314.638 203.734 cv
318.68 203.734 321.957 201.976 321.957 199.808 cv
@
321.957 199.808 mo
321.957 197.639 318.68 195.881 314.638 195.881 cv
310.597 195.881 307.32 197.639 307.32 199.808 cv
307.32 201.976 310.597 203.734 314.638 203.734 cv
318.68 203.734 321.957 201.976 321.957 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
309.641 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
309.943 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
279.831 188.562 mo
288.042 190.704 299.287 193.56 306.249 195.702 cv
306.606 195.881 307.141 196.059 307.498 196.238 cv
@
307.498 196.773 mo
309.283 196.952 li
307.855 195.881 li
cp
@
307.498 196.773 mo
309.283 196.952 li
307.855 195.881 li
f
339.807 199.808 mo
339.807 197.639 336.53 195.881 332.488 195.881 cv
328.447 195.881 325.17 197.639 325.17 199.808 cv
325.17 201.976 328.447 203.734 332.488 203.734 cv
336.53 203.734 339.807 201.976 339.807 199.808 cv
@
339.807 199.808 mo
339.807 197.639 336.53 195.881 332.488 195.881 cv
328.447 195.881 325.17 197.639 325.17 199.808 cv
325.17 201.976 328.447 203.734 332.488 203.734 cv
336.53 203.734 339.807 201.976 339.807 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
327.491 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
327.793 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
282.151 188.027 mo
294.289 189.99 312.853 193.203 324.099 195.702 cv
324.456 195.702 324.991 195.881 325.527 196.238 cv
@
325.527 196.773 mo
327.312 196.952 li
325.884 195.881 li
cp
@
325.527 196.773 mo
327.312 196.952 li
325.884 195.881 li
f
283.044 213.552 mo
283.044 211.778 276.171 210.339 267.693 210.339 cv
259.215 210.339 252.342 211.778 252.342 213.552 cv
252.342 215.326 259.215 216.765 267.693 216.765 cv
276.171 216.765 283.044 215.326 283.044 213.552 cv
@
283.044 213.552 mo
283.044 211.778 276.171 210.339 267.693 210.339 cv
259.215 210.339 252.342 211.778 252.342 213.552 cv
252.342 215.326 259.215 216.765 267.693 216.765 cv
276.171 216.765 283.044 215.326 283.044 213.552 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
254.124 214.123 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
274.833 227.297 mo
274.833 225.128 271.636 223.37 267.693 223.37 cv
263.75 223.37 260.553 225.128 260.553 227.297 cv
260.553 229.465 263.75 231.223 267.693 231.223 cv
271.636 231.223 274.833 229.465 274.833 227.297 cv
@
274.833 227.297 mo
274.833 225.128 271.636 223.37 267.693 223.37 cv
263.75 223.37 260.553 225.128 260.553 227.297 cv
260.553 229.465 263.75 231.223 267.693 231.223 cv
271.636 231.223 274.833 229.465 274.833 227.297 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
265.541 226.44 mo
(Add)
[1.80423 1.24951 0 ]xsh
262.997 229.296 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
267.693 216.765 mo
267.693 218.193 267.693 219.8 267.693 221.406 cv
@
267.336 221.406 mo
267.693 223.191 li
268.228 221.406 li
cp
@
267.336 221.406 mo
267.693 223.191 li
268.228 221.406 li
f
212.715 202.664 mo
213.786 203.199 215.035 203.735 215.928 203.913 cv
226.102 206.234 242.524 209.09 254.127 211.232 cv
@
253.948 211.589 mo
255.733 211.589 li
254.127 210.696 li
cp
@
253.948 211.589 mo
255.733 211.589 li
254.127 210.696 li
f
230.565 202.664 mo
231.814 203.199 232.885 203.556 233.778 203.913 cv
239.847 205.877 249.129 208.554 256.626 210.696 cv
@
256.447 211.053 mo
258.232 211.053 li
256.626 210.161 li
cp
@
256.447 211.053 mo
258.232 211.053 li
256.626 210.161 li
f
248.415 202.664 mo
251.985 204.806 256.804 207.483 260.731 209.625 cv
@
260.374 209.982 mo
262.159 210.518 li
260.91 209.268 li
cp
@
260.374 209.982 mo
262.159 210.518 li
260.91 209.268 li
f
263.052 203.735 mo
263.766 205.341 264.658 207.126 265.372 208.733 cv
@
265.015 208.911 mo
266.086 210.339 li
265.729 208.554 li
cp
@
265.015 208.911 mo
266.086 210.339 li
265.729 208.554 li
f
275.904 203.556 mo
274.476 205.341 272.869 207.305 271.263 209.09 cv
@
271.084 208.733 mo
270.192 210.339 li
271.62 209.268 li
cp
@
271.084 208.733 mo
270.192 210.339 li
271.62 209.268 li
f
291.255 202.485 mo
286.614 204.627 280.009 207.662 275.011 209.982 cv
@
275.368 209.268 mo
273.94 210.518 li
275.725 210.161 li
cp
@
275.368 209.268 mo
273.94 210.518 li
275.725 210.161 li
f
309.462 202.664 mo
308.391 203.199 307.141 203.735 306.249 203.913 cv
299.109 205.877 287.685 208.733 279.295 210.875 cv
@
279.652 210.339 mo
278.046 211.232 li
279.831 211.232 li
cp
@
279.652 210.339 mo
278.046 211.232 li
279.831 211.232 li
f
327.312 202.842 mo
326.241 203.378 324.991 203.735 324.099 203.913 cv
312.675 206.591 293.932 209.447 281.259 211.41 cv
@
281.794 210.875 mo
280.188 211.589 li
281.973 211.767 li
cp
@
281.794 210.875 mo
280.188 211.589 li
281.973 211.767 li
f
267.693 231.402 mo
267.693 232.83 267.693 234.437 267.693 236.043 cv
@
267.336 236.043 mo
267.693 237.828 li
268.228 236.043 li
cp
@
267.336 236.043 mo
267.693 237.828 li
268.228 236.043 li
f
386.574 80.391 mo
386.574 78.617 381.939 77.1779 376.221 77.1779 cv
370.503 77.1779 365.868 78.617 365.868 80.391 cv
365.868 82.165 370.503 83.604 376.221 83.604 cv
381.939 83.604 386.574 82.165 386.574 80.391 cv
@
386.574 80.391 mo
386.574 78.617 381.939 77.1779 376.221 77.1779 cv
370.503 77.1779 365.868 78.617 365.868 80.391 cv
365.868 82.165 370.503 83.604 376.221 83.604 cv
381.939 83.604 386.574 82.165 386.574 80.391 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
367.65 80.9619 mo
(roundrobin\(1,63\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 1.24948 0 ]xsh
373.9 70.752 mo
374.257 72.18 374.614 73.965 375.15 75.572 cv
@
374.614 75.572 mo
375.507 77.1779 li
375.507 75.393 li
cp
@
374.614 75.572 mo
375.507 77.1779 li
375.507 75.393 li
f
393 96.099 mo
393 92.747 385.488 90.03 376.221 90.03 cv
366.954 90.03 359.442 92.747 359.442 96.099 cv
359.442 99.451 366.954 102.168 376.221 102.168 cv
385.488 102.168 393 99.451 393 96.099 cv
@
393 96.099 mo
393 92.747 385.488 90.03 376.221 90.03 cv
366.954 90.03 359.442 92.747 359.442 96.099 cv
359.442 99.451 366.954 102.168 376.221 102.168 cv
385.488 102.168 393 99.451 393 96.099 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
363.109 93.8139 mo
(IntegerDifferenceDecoder)
[.832153 1.24948 .694733 1.10953 1.24948 1.10953 .832153 1.80423 .694733 .832153 .832153 1.1095 
.832153 1.10953 1.24948 1.10953 1.10953 1.80423 1.10953 1.10953 1.24948 1.24951 1.10953 0 
]xsh
371.526 96.67 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
362.408 99.5259 mo
(*** PEEKS 1 AHEAD ***)
[1.24951 1.24948 1.24951 .624756 1.38943 1.52686 1.52689 1.80423 1.38947 .624725 1.24951 .624756 
1.80423 1.80423 1.52689 1.80423 1.80426 .624725 1.24951 1.24951 0 ]xsh
376.221 83.604 mo
376.221 84.854 376.221 86.639 376.221 88.245 cv
@
375.864 88.245 mo
376.221 90.03 li
376.756 88.245 li
cp
@
375.864 88.245 mo
376.221 90.03 li
376.756 88.245 li
f
410.493 96.099 mo
410.493 93.93 407.296 92.172 403.353 92.172 cv
399.41 92.172 396.213 93.93 396.213 96.099 cv
396.213 98.268 399.41 100.026 403.353 100.026 cv
407.296 100.026 410.493 98.268 410.493 96.099 cv
@
410.493 96.099 mo
410.493 93.93 407.296 92.172 403.353 92.172 cv
399.41 92.172 396.213 93.93 396.213 96.099 cv
396.213 98.268 399.41 100.026 403.353 100.026 cv
407.296 100.026 410.493 98.268 410.493 96.099 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
399.466 95.2419 mo
(Identity)
[.832153 1.24948 1.10953 1.24951 .694702 .694733 .694733 0 ]xsh
398.658 98.098 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
381.754 83.069 mo
385.86 85.211 391.572 88.067 395.142 90.03 cv
396.034 90.566 396.927 91.28 397.998 92.172 cv
@
397.284 92.351 mo
399.069 92.886 li
397.819 91.458 li
cp
@
397.284 92.351 mo
399.069 92.886 li
397.819 91.458 li
f
410.493 111.807 mo
410.493 110.033 405.858 108.594 400.14 108.594 cv
394.422 108.594 389.787 110.033 389.787 111.807 cv
389.787 113.581 394.422 115.02 400.14 115.02 cv
405.858 115.02 410.493 113.581 410.493 111.807 cv
@
410.493 111.807 mo
410.493 110.033 405.858 108.594 400.14 108.594 cv
394.422 108.594 389.787 110.033 389.787 111.807 cv
389.787 113.581 394.422 115.02 400.14 115.02 cv
405.858 115.02 410.493 113.581 410.493 111.807 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
391.569 112.378 mo
(roundrobin\(1,63\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 1.24948 0 ]xsh
418.347 126.266 mo
418.347 124.097 412.593 122.339 405.495 122.339 cv
398.397 122.339 392.643 124.097 392.643 126.266 cv
392.643 128.434 398.397 130.193 405.495 130.193 cv
412.593 130.193 418.347 128.434 418.347 126.266 cv
@
418.347 126.266 mo
418.347 124.097 412.593 122.339 405.495 122.339 cv
398.397 122.339 392.643 124.097 392.643 126.266 cv
392.643 128.434 398.397 130.193 405.495 130.193 cv
412.593 130.193 418.347 128.434 418.347 126.266 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
394.946 125.409 mo
(staticDeQuantization)
[.972107 .694702 1.10953 .694702 .694733 1.10953 1.80423 1.10953 1.80423 1.24951 1.10953 1.24948 
.694733 .694702 1.10953 1.10953 .694702 .694733 1.24951 0 ]xsh
399.55 128.265 mo
(I/O: 64->64)
[.832153 .694702 1.80426 .694702 .624756 1.24951 1.24951 .832123 1.40942 1.24951 0 ]xsh
401.389 115.02 mo
401.925 116.627 402.639 118.769 403.353 120.554 cv
@
402.996 120.732 mo
404.067 122.16 li
403.71 120.375 li
cp
@
402.996 120.732 mo
404.067 122.16 li
403.71 120.375 li
f
384.253 101.454 mo
387.466 103.596 391.215 106.095 394.428 107.88 cv
@
393.892 108.059 mo
395.677 108.773 li
394.428 107.345 li
cp
@
393.892 108.059 mo
395.677 108.773 li
394.428 107.345 li
f
402.46 100.205 mo
402.103 102.347 401.568 104.846 401.032 106.988 cv
@
400.675 106.809 mo
400.854 108.594 li
401.568 106.809 li
cp
@
400.675 106.809 mo
400.854 108.594 li
401.568 106.809 li
f
426.379 145.008 mo
426.379 143.234 419.507 141.795 411.028 141.795 cv
402.55 141.795 395.678 143.234 395.678 145.008 cv
395.678 146.782 402.55 148.221 411.028 148.221 cv
419.507 148.221 426.379 146.782 426.379 145.008 cv
@
426.379 145.008 mo
426.379 143.234 419.507 141.795 411.028 141.795 cv
402.55 141.795 395.678 143.234 395.678 145.008 cv
395.678 146.782 402.55 148.221 411.028 148.221 cv
419.507 148.221 426.379 146.782 426.379 145.008 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
397.459 145.579 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
406.744 130.371 mo
407.637 133.227 408.886 137.154 409.779 140.189 cv
@
409.243 140.189 mo
410.136 141.795 li
410.136 140.01 li
cp
@
409.243 140.189 mo
410.136 141.795 li
410.136 140.01 li
f
364.797 158.753 mo
364.797 156.584 361.52 154.826 357.478 154.826 cv
353.437 154.826 350.16 156.584 350.16 158.753 cv
350.16 160.921 353.437 162.679 357.478 162.679 cv
361.52 162.679 364.797 160.921 364.797 158.753 cv
@
364.797 158.753 mo
364.797 156.584 361.52 154.826 357.478 154.826 cv
353.437 154.826 350.16 156.584 350.16 158.753 cv
350.16 160.921 353.437 162.679 357.478 162.679 cv
361.52 162.679 364.797 160.921 364.797 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
352.481 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
352.783 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
399.783 147.15 mo
389.608 149.292 374.971 152.327 365.868 154.647 cv
365.332 154.826 364.618 155.183 363.904 155.361 cv
@
364.083 154.826 mo
362.655 155.897 li
364.44 155.54 li
cp
@
364.083 154.826 mo
362.655 155.897 li
364.44 155.54 li
f
382.647 158.753 mo
382.647 156.584 379.37 154.826 375.328 154.826 cv
371.287 154.826 368.01 156.584 368.01 158.753 cv
368.01 160.921 371.287 162.679 375.328 162.679 cv
379.37 162.679 382.647 160.921 382.647 158.753 cv
@
382.647 158.753 mo
382.647 156.584 379.37 154.826 375.328 154.826 cv
371.287 154.826 368.01 156.584 368.01 158.753 cv
368.01 160.921 371.287 162.679 375.328 162.679 cv
379.37 162.679 382.647 160.921 382.647 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
370.331 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
370.633 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
402.996 147.686 mo
396.927 149.828 388.716 152.684 383.718 154.647 cv
383.361 154.826 383.004 155.004 382.468 155.183 cv
@
382.29 154.826 mo
380.862 155.897 li
382.647 155.54 li
cp
@
382.29 154.826 mo
380.862 155.897 li
382.647 155.54 li
f
400.497 158.753 mo
400.497 156.584 397.22 154.826 393.178 154.826 cv
389.137 154.826 385.86 156.584 385.86 158.753 cv
385.86 160.921 389.137 162.679 393.178 162.679 cv
397.22 162.679 400.497 160.921 400.497 158.753 cv
@
400.497 158.753 mo
400.497 156.584 397.22 154.826 393.178 154.826 cv
389.137 154.826 385.86 156.584 385.86 158.753 cv
385.86 160.921 389.137 162.679 393.178 162.679 cv
397.22 162.679 400.497 160.921 400.497 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
388.181 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
388.483 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
406.923 148.043 mo
404.424 149.828 401.389 152.327 398.712 154.29 cv
@
398.533 153.933 mo
397.462 155.361 li
399.069 154.469 li
cp
@
398.533 153.933 mo
397.462 155.361 li
399.069 154.469 li
f
418.347 158.753 mo
418.347 156.584 415.07 154.826 411.028 154.826 cv
406.987 154.826 403.71 156.584 403.71 158.753 cv
403.71 160.921 406.987 162.679 411.028 162.679 cv
415.07 162.679 418.347 160.921 418.347 158.753 cv
@
418.347 158.753 mo
418.347 156.584 415.07 154.826 411.028 154.826 cv
406.987 154.826 403.71 156.584 403.71 158.753 cv
403.71 160.921 406.987 162.679 411.028 162.679 cv
415.07 162.679 418.347 160.921 418.347 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
406.031 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
406.333 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
411.028 148.221 mo
411.028 149.649 411.028 151.256 411.028 152.862 cv
@
410.671 152.862 mo
411.028 154.647 li
411.564 152.862 li
cp
@
410.671 152.862 mo
411.028 154.647 li
411.564 152.862 li
f
436.197 158.753 mo
436.197 156.584 432.92 154.826 428.878 154.826 cv
424.837 154.826 421.56 156.584 421.56 158.753 cv
421.56 160.921 424.837 162.679 428.878 162.679 cv
432.92 162.679 436.197 160.921 436.197 158.753 cv
@
436.197 158.753 mo
436.197 156.584 432.92 154.826 428.878 154.826 cv
424.837 154.826 421.56 156.584 421.56 158.753 cv
421.56 160.921 424.837 162.679 428.878 162.679 cv
432.92 162.679 436.197 160.921 436.197 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
423.881 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
424.183 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
415.134 148.043 mo
417.633 149.828 420.667 152.327 423.345 154.29 cv
@
422.988 154.469 mo
424.594 155.361 li
423.523 153.933 li
cp
@
422.988 154.469 mo
424.594 155.361 li
423.523 153.933 li
f
454.047 158.753 mo
454.047 156.584 450.77 154.826 446.728 154.826 cv
442.687 154.826 439.41 156.584 439.41 158.753 cv
439.41 160.921 442.687 162.679 446.728 162.679 cv
450.77 162.679 454.047 160.921 454.047 158.753 cv
@
454.047 158.753 mo
454.047 156.584 450.77 154.826 446.728 154.826 cv
442.687 154.826 439.41 156.584 439.41 158.753 cv
439.41 160.921 442.687 162.679 446.728 162.679 cv
450.77 162.679 454.047 160.921 454.047 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
441.731 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
442.033 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
419.061 147.686 mo
425.13 149.828 433.162 152.684 438.339 154.647 cv
438.874 154.826 439.588 155.183 440.302 155.54 cv
@
439.588 155.718 mo
441.373 156.075 li
439.945 154.826 li
cp
@
439.588 155.718 mo
441.373 156.075 li
439.945 154.826 li
f
471.897 158.753 mo
471.897 156.584 468.62 154.826 464.578 154.826 cv
460.537 154.826 457.26 156.584 457.26 158.753 cv
457.26 160.921 460.537 162.679 464.578 162.679 cv
468.62 162.679 471.897 160.921 471.897 158.753 cv
@
471.897 158.753 mo
471.897 156.584 468.62 154.826 464.578 154.826 cv
460.537 154.826 457.26 156.584 457.26 158.753 cv
457.26 160.921 460.537 162.679 464.578 162.679 cv
468.62 162.679 471.897 160.921 471.897 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
459.581 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
459.883 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
422.095 147.15 mo
432.27 149.292 447.085 152.327 456.189 154.647 cv
456.724 154.826 457.438 155.183 458.152 155.361 cv
@
457.617 155.54 mo
459.402 155.897 li
457.974 154.826 li
cp
@
457.617 155.54 mo
459.402 155.897 li
457.974 154.826 li
f
489.747 158.753 mo
489.747 156.584 486.47 154.826 482.428 154.826 cv
478.387 154.826 475.11 156.584 475.11 158.753 cv
475.11 160.921 478.387 162.679 482.428 162.679 cv
486.47 162.679 489.747 160.921 489.747 158.753 cv
@
489.747 158.753 mo
489.747 156.584 486.47 154.826 482.428 154.826 cv
478.387 154.826 475.11 156.584 475.11 158.753 cv
475.11 160.921 478.387 162.679 482.428 162.679 cv
486.47 162.679 489.747 160.921 489.747 158.753 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
477.431 157.896 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
477.733 160.752 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
423.88 146.793 mo
437.982 148.757 460.473 152.148 474.039 154.647 cv
474.574 154.826 475.288 155.004 476.181 155.361 cv
@
475.467 155.54 mo
477.252 155.897 li
475.824 154.647 li
cp
@
475.467 155.54 mo
477.252 155.897 li
475.824 154.647 li
f
435.304 172.497 mo
435.304 170.723 428.432 169.284 419.953 169.284 cv
411.475 169.284 404.603 170.723 404.603 172.497 cv
404.603 174.271 411.475 175.71 419.953 175.71 cv
428.432 175.71 435.304 174.271 435.304 172.497 cv
@
435.304 172.497 mo
435.304 170.723 428.432 169.284 419.953 169.284 cv
411.475 169.284 404.603 170.723 404.603 172.497 cv
404.603 174.271 411.475 175.71 419.953 175.71 cv
428.432 175.71 435.304 174.271 435.304 172.497 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
406.384 173.068 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
435.304 186.063 mo
435.304 184.289 428.432 182.85 419.953 182.85 cv
411.475 182.85 404.603 184.289 404.603 186.063 cv
404.603 187.837 411.475 189.276 419.953 189.276 cv
428.432 189.276 435.304 187.837 435.304 186.063 cv
@
435.304 186.063 mo
435.304 184.289 428.432 182.85 419.953 182.85 cv
411.475 182.85 404.603 184.289 404.603 186.063 cv
404.603 187.837 411.475 189.276 419.953 189.276 cv
428.432 189.276 435.304 187.837 435.304 186.063 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
406.384 186.634 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
419.953 175.71 mo
419.953 177.317 419.953 179.28 419.953 181.065 cv
@
419.596 181.065 mo
419.953 182.85 li
420.489 181.065 li
cp
@
419.596 181.065 mo
419.953 182.85 li
420.489 181.065 li
f
362.655 161.609 mo
363.726 162.144 364.975 162.68 365.868 162.858 cv
376.756 165.357 394.428 168.392 406.566 170.355 cv
@
405.852 170.712 mo
407.637 170.534 li
406.03 169.82 li
cp
@
405.852 170.712 mo
407.637 170.534 li
406.03 169.82 li
f
380.683 161.609 mo
381.754 162.144 382.825 162.68 383.718 162.858 cv
390.322 164.822 400.854 167.678 408.886 169.641 cv
@
408.172 169.82 mo
409.957 169.998 li
408.351 168.927 li
cp
@
408.172 169.82 mo
409.957 169.998 li
408.351 168.927 li
f
398.533 161.43 mo
402.46 163.572 408.351 166.428 412.813 168.749 cv
@
412.456 169.106 mo
414.241 169.463 li
412.813 168.213 li
cp
@
412.456 169.106 mo
414.241 169.463 li
412.813 168.213 li
f
413.527 162.501 mo
414.598 164.108 415.848 166.071 416.919 167.856 cv
@
416.562 168.035 mo
417.811 169.284 li
417.276 167.499 li
cp
@
416.562 168.035 mo
417.811 169.284 li
417.276 167.499 li
f
426.379 162.501 mo
425.308 164.108 424.059 166.071 422.988 167.856 cv
@
422.631 167.499 mo
422.095 169.284 li
423.345 168.035 li
cp
@
422.631 167.499 mo
422.095 169.284 li
423.345 168.035 li
f
441.373 161.43 mo
437.446 163.572 431.556 166.428 427.093 168.749 cv
@
427.093 168.213 mo
425.665 169.463 li
427.45 169.106 li
cp
@
427.093 168.213 mo
425.665 169.463 li
427.45 169.106 li
f
459.402 161.609 mo
458.152 162.144 457.081 162.501 456.189 162.858 cv
449.763 164.822 439.41 167.678 431.377 169.641 cv
@
431.377 169.106 mo
429.771 169.998 li
431.556 169.998 li
cp
@
431.377 169.106 mo
429.771 169.998 li
431.556 169.998 li
f
477.252 161.609 mo
476.181 162.144 474.931 162.68 474.039 162.858 cv
463.329 165.179 446.014 168.213 433.876 170.177 cv
@
433.876 169.641 mo
432.27 170.534 li
434.055 170.534 li
cp
@
433.876 169.641 mo
432.27 170.534 li
434.055 170.534 li
f
364.797 199.808 mo
364.797 197.639 361.52 195.881 357.478 195.881 cv
353.437 195.881 350.16 197.639 350.16 199.808 cv
350.16 201.976 353.437 203.734 357.478 203.734 cv
361.52 203.734 364.797 201.976 364.797 199.808 cv
@
364.797 199.808 mo
364.797 197.639 361.52 195.881 357.478 195.881 cv
353.437 195.881 350.16 197.639 350.16 199.808 cv
350.16 201.976 353.437 203.734 357.478 203.734 cv
361.52 203.734 364.797 201.976 364.797 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
352.481 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
352.783 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
407.815 188.027 mo
395.677 189.99 377.113 193.203 365.868 195.702 cv
365.332 195.881 364.618 196.059 363.726 196.416 cv
@
364.083 195.702 mo
362.655 196.952 li
364.44 196.595 li
cp
@
364.083 195.702 mo
362.655 196.952 li
364.44 196.595 li
f
382.647 199.808 mo
382.647 197.639 379.37 195.881 375.328 195.881 cv
371.287 195.881 368.01 197.639 368.01 199.808 cv
368.01 201.976 371.287 203.734 375.328 203.734 cv
379.37 203.734 382.647 201.976 382.647 199.808 cv
@
382.647 199.808 mo
382.647 197.639 379.37 195.881 375.328 195.881 cv
371.287 195.881 368.01 197.639 368.01 199.808 cv
368.01 201.976 371.287 203.734 375.328 203.734 cv
379.37 203.734 382.647 201.976 382.647 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
370.331 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
370.633 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
410.136 188.562 mo
401.925 190.704 390.679 193.56 383.718 195.702 cv
383.361 195.881 382.825 196.059 382.468 196.238 cv
@
382.111 195.881 mo
380.683 196.952 li
382.468 196.773 li
cp
@
382.111 195.881 mo
380.683 196.952 li
382.468 196.773 li
f
400.497 199.808 mo
400.497 197.639 397.22 195.881 393.178 195.881 cv
389.137 195.881 385.86 197.639 385.86 199.808 cv
385.86 201.976 389.137 203.734 393.178 203.734 cv
397.22 203.734 400.497 201.976 400.497 199.808 cv
@
400.497 199.808 mo
400.497 197.639 397.22 195.881 393.178 195.881 cv
389.137 195.881 385.86 197.639 385.86 199.808 cv
385.86 201.976 389.137 203.734 393.178 203.734 cv
397.22 203.734 400.497 201.976 400.497 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
388.181 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
388.483 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
414.063 189.098 mo
409.957 191.24 404.245 194.096 399.961 196.416 cv
@
399.961 195.881 mo
398.533 197.13 li
400.318 196.773 li
cp
@
399.961 195.881 mo
398.533 197.13 li
400.318 196.773 li
f
418.347 199.808 mo
418.347 197.639 415.07 195.881 411.028 195.881 cv
406.987 195.881 403.71 197.639 403.71 199.808 cv
403.71 201.976 406.987 203.734 411.028 203.734 cv
415.07 203.734 418.347 201.976 418.347 199.808 cv
@
418.347 199.808 mo
418.347 197.639 415.07 195.881 411.028 195.881 cv
406.987 195.881 403.71 197.639 403.71 199.808 cv
403.71 201.976 406.987 203.734 411.028 203.734 cv
415.07 203.734 418.347 201.976 418.347 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
406.031 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
406.333 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
417.811 189.276 mo
416.919 190.883 415.669 192.846 414.42 194.631 cv
@
414.063 194.274 mo
413.527 196.059 li
414.777 194.81 li
cp
@
414.063 194.274 mo
413.527 196.059 li
414.777 194.81 li
f
436.197 199.808 mo
436.197 197.639 432.92 195.881 428.878 195.881 cv
424.837 195.881 421.56 197.639 421.56 199.808 cv
421.56 201.976 424.837 203.734 428.878 203.734 cv
432.92 203.734 436.197 201.976 436.197 199.808 cv
@
436.197 199.808 mo
436.197 197.639 432.92 195.881 428.878 195.881 cv
424.837 195.881 421.56 197.639 421.56 199.808 cv
421.56 201.976 424.837 203.734 428.878 203.734 cv
432.92 203.734 436.197 201.976 436.197 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
423.881 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
424.183 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
422.095 189.276 mo
422.988 190.883 424.237 192.846 425.487 194.631 cv
@
425.13 194.81 mo
426.379 196.059 li
425.844 194.274 li
cp
@
425.13 194.81 mo
426.379 196.059 li
425.844 194.274 li
f
454.047 199.808 mo
454.047 197.639 450.77 195.881 446.728 195.881 cv
442.687 195.881 439.41 197.639 439.41 199.808 cv
439.41 201.976 442.687 203.734 446.728 203.734 cv
450.77 203.734 454.047 201.976 454.047 199.808 cv
@
454.047 199.808 mo
454.047 197.639 450.77 195.881 446.728 195.881 cv
442.687 195.881 439.41 197.639 439.41 199.808 cv
439.41 201.976 442.687 203.734 446.728 203.734 cv
450.77 203.734 454.047 201.976 454.047 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
441.731 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
442.033 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
425.844 189.098 mo
429.949 191.24 435.661 194.096 439.945 196.416 cv
@
439.588 196.773 mo
441.373 197.13 li
439.945 195.881 li
cp
@
439.588 196.773 mo
441.373 197.13 li
439.945 195.881 li
f
471.897 199.808 mo
471.897 197.639 468.62 195.881 464.578 195.881 cv
460.537 195.881 457.26 197.639 457.26 199.808 cv
457.26 201.976 460.537 203.734 464.578 203.734 cv
468.62 203.734 471.897 201.976 471.897 199.808 cv
@
471.897 199.808 mo
471.897 197.639 468.62 195.881 464.578 195.881 cv
460.537 195.881 457.26 197.639 457.26 199.808 cv
457.26 201.976 460.537 203.734 464.578 203.734 cv
468.62 203.734 471.897 201.976 471.897 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
459.581 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
459.883 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
429.771 188.562 mo
437.803 190.704 449.227 193.56 456.189 195.702 cv
456.724 195.881 457.438 196.238 458.152 196.595 cv
@
457.438 196.773 mo
459.223 197.13 li
457.795 195.881 li
cp
@
457.438 196.773 mo
459.223 197.13 li
457.795 195.881 li
f
489.747 199.808 mo
489.747 197.639 486.47 195.881 482.428 195.881 cv
478.387 195.881 475.11 197.639 475.11 199.808 cv
475.11 201.976 478.387 203.734 482.428 203.734 cv
486.47 203.734 489.747 201.976 489.747 199.808 cv
@
489.747 199.808 mo
489.747 197.639 486.47 195.881 482.428 195.881 cv
478.387 195.881 475.11 197.639 475.11 199.808 cv
475.11 201.976 478.387 203.734 482.428 203.734 cv
486.47 203.734 489.747 201.976 489.747 199.808 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
477.431 198.951 mo
(iDCT_1D)
[.694733 1.80423 1.66681 1.52689 1.24948 1.24951 0 ]xsh
477.733 201.807 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
432.091 188.027 mo
444.229 189.99 462.615 193.203 474.039 195.702 cv
474.574 195.881 475.288 196.059 476.181 196.416 cv
@
475.467 196.595 mo
477.252 196.952 li
475.824 195.702 li
cp
@
475.467 196.595 mo
477.252 196.952 li
475.824 195.702 li
f
426.379 213.552 mo
426.379 211.778 419.507 210.339 411.028 210.339 cv
402.55 210.339 395.678 211.778 395.678 213.552 cv
395.678 215.326 402.55 216.765 411.028 216.765 cv
419.507 216.765 426.379 215.326 426.379 213.552 cv
@
426.379 213.552 mo
426.379 211.778 419.507 210.339 411.028 210.339 cv
402.55 210.339 395.678 211.778 395.678 213.552 cv
395.678 215.326 402.55 216.765 411.028 216.765 cv
419.507 216.765 426.379 215.326 426.379 213.552 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
397.459 214.123 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
389.787 227.297 mo
389.787 225.128 386.59 223.37 382.647 223.37 cv
378.704 223.37 375.507 225.128 375.507 227.297 cv
375.507 229.465 378.704 231.223 382.647 231.223 cv
386.59 231.223 389.787 229.465 389.787 227.297 cv
@
389.787 227.297 mo
389.787 225.128 386.59 223.37 382.647 223.37 cv
378.704 223.37 375.507 225.128 375.507 227.297 cv
375.507 229.465 378.704 231.223 382.647 231.223 cv
386.59 231.223 389.787 229.465 389.787 227.297 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
380.495 226.44 mo
(Add)
[1.80423 1.24951 0 ]xsh
377.951 229.296 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
404.781 216.587 mo
400.318 218.729 394.249 221.585 389.43 223.905 cv
@
389.43 223.37 mo
388.002 224.619 li
389.787 224.262 li
cp
@
389.43 223.37 mo
388.002 224.619 li
389.787 224.262 li
f
362.655 202.664 mo
363.904 203.199 364.975 203.735 365.868 203.913 cv
374.436 206.055 388.359 208.911 398.355 211.053 cv
@
397.998 211.41 mo
399.783 211.41 li
398.176 210.518 li
cp
@
397.998 211.41 mo
399.783 211.41 li
398.176 210.518 li
f
380.683 202.664 mo
381.754 203.199 382.825 203.556 383.718 203.913 cv
388.359 205.698 395.677 208.376 401.568 210.518 cv
@
401.032 210.875 mo
402.817 210.875 li
401.211 209.982 li
cp
@
401.032 210.875 mo
402.817 210.875 li
401.211 209.982 li
f
397.462 203.021 mo
399.961 204.984 403.174 207.305 405.673 209.268 cv
@
405.316 209.447 mo
406.923 210.339 li
405.852 208.911 li
cp
@
405.316 209.447 mo
406.923 210.339 li
405.852 208.911 li
f
411.028 203.913 mo
411.028 205.341 411.028 206.948 411.028 208.554 cv
@
410.671 208.554 mo
411.028 210.339 li
411.564 208.554 li
cp
@
410.671 208.554 mo
411.028 210.339 li
411.564 208.554 li
f
424.594 203.021 mo
422.095 204.984 418.882 207.305 416.383 209.268 cv
@
416.205 208.911 mo
415.134 210.339 li
416.74 209.447 li
cp
@
416.205 208.911 mo
415.134 210.339 li
416.74 209.447 li
f
441.373 202.485 mo
440.302 203.021 439.231 203.556 438.339 203.913 cv
433.519 205.698 426.201 208.376 420.31 210.518 cv
@
420.667 209.982 mo
419.061 210.875 li
420.846 210.875 li
cp
@
420.667 209.982 mo
419.061 210.875 li
420.846 210.875 li
f
459.402 202.664 mo
458.152 203.199 457.081 203.735 456.189 203.913 cv
447.442 206.055 433.698 208.911 423.702 211.053 cv
@
423.88 210.518 mo
422.274 211.41 li
424.059 211.41 li
cp
@
423.88 210.518 mo
422.274 211.41 li
424.059 211.41 li
f
477.252 202.664 mo
476.181 203.199 474.931 203.735 474.039 203.913 cv
460.83 206.591 439.41 209.625 425.13 211.589 cv
@
425.665 211.053 mo
423.88 211.767 li
425.665 211.946 li
cp
@
425.665 211.053 mo
423.88 211.767 li
425.665 211.946 li
f
375.864 228.546 mo
368.188 229.974 355.693 231.938 348.196 232.83 cv
329.275 235.151 296.788 238.364 279.652 239.97 cv
@
279.831 239.435 mo
278.046 240.149 li
279.831 240.327 li
cp
@
279.831 239.435 mo
278.046 240.149 li
279.831 240.327 li
f
277.153 269.423 mo
277.153 267.254 272.918 265.496 267.693 265.496 cv
262.468 265.496 258.232 267.254 258.232 269.423 cv
258.232 271.591 262.468 273.349 267.693 273.349 cv
272.918 273.349 277.153 271.591 277.153 269.423 cv
@
277.153 269.423 mo
277.153 267.254 272.918 265.496 267.693 265.496 cv
262.468 265.496 258.232 267.254 258.232 269.423 cv
258.232 271.591 262.468 273.349 267.693 273.349 cv
272.918 273.349 277.153 271.591 277.153 269.423 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
260.542 268.566 mo
(RGBtoYCbCr)
[1.66681 1.80423 1.66684 .694702 1.24951 1.80423 1.66681 1.24951 1.66681 0 ]xsh
262.997 271.422 mo
(I/O: 3->3)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
267.693 258.891 mo
267.693 260.319 267.693 261.926 267.693 263.532 cv
@
267.336 263.532 mo
267.693 265.317 li
268.228 263.532 li
cp
@
267.336 263.532 mo
267.693 265.317 li
268.228 263.532 li
f
278.403 283.167 mo
278.403 281.393 273.608 279.954 267.693 279.954 cv
261.778 279.954 256.983 281.393 256.983 283.167 cv
256.983 284.941 261.778 286.38 267.693 286.38 cv
273.608 286.38 278.403 284.941 278.403 283.167 cv
@
278.403 283.167 mo
278.403 281.393 273.608 279.954 267.693 279.954 cv
261.778 279.954 256.983 281.393 256.983 283.167 cv
256.983 284.941 261.778 286.38 267.693 286.38 cv
273.608 286.38 278.403 284.941 278.403 283.167 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
258.809 283.738 mo
(roundrobin\(1,1,1\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 0 ]xsh
267.693 273.528 mo
267.693 274.956 267.693 276.563 267.693 278.169 cv
@
267.336 278.169 mo
267.693 279.954 li
268.228 278.169 li
cp
@
267.336 278.169 mo
267.693 279.954 li
268.228 278.169 li
f
166.483 296.912 mo
166.483 294.743 163.287 292.985 159.343 292.985 cv
155.4 292.985 152.203 294.743 152.203 296.912 cv
152.203 299.08 155.4 300.839 159.343 300.839 cv
163.287 300.839 166.483 299.08 166.483 296.912 cv
@
166.483 296.912 mo
166.483 294.743 163.287 292.985 159.343 292.985 cv
155.4 292.985 152.203 294.743 152.203 296.912 cv
152.203 299.08 155.4 300.839 159.343 300.839 cv
163.287 300.839 166.483 299.08 166.483 296.912 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
157.192 296.055 mo
(Add)
[1.80424 1.2495 0 ]xsh
154.648 298.911 mo
(I/O: 1->1)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
257.161 283.703 mo
241.096 284.595 210.93 286.38 193.258 288.522 cv
186.297 289.593 174.873 292.628 167.376 294.77 cv
@
167.376 294.234 mo
165.769 295.127 li
167.554 295.127 li
cp
@
167.376 294.234 mo
165.769 295.127 li
167.554 295.127 li
f
274.833 296.912 mo
274.833 294.743 271.636 292.985 267.693 292.985 cv
263.75 292.985 260.553 294.743 260.553 296.912 cv
260.553 299.08 263.75 300.839 267.693 300.839 cv
271.636 300.839 274.833 299.08 274.833 296.912 cv
@
274.833 296.912 mo
274.833 294.743 271.636 292.985 267.693 292.985 cv
263.75 292.985 260.553 294.743 260.553 296.912 cv
260.553 299.08 263.75 300.839 267.693 300.839 cv
271.636 300.839 274.833 299.08 274.833 296.912 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
265.541 296.055 mo
(Add)
[1.80423 1.24951 0 ]xsh
262.997 298.911 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
267.693 286.38 mo
267.693 287.808 267.693 289.415 267.693 291.021 cv
@
267.336 291.021 mo
267.693 292.806 li
268.228 291.021 li
cp
@
267.336 291.021 mo
267.693 292.806 li
268.228 291.021 li
f
387.823 296.912 mo
387.823 294.743 384.627 292.985 380.683 292.985 cv
376.74 292.985 373.543 294.743 373.543 296.912 cv
373.543 299.08 376.74 300.839 380.683 300.839 cv
384.627 300.839 387.823 299.08 387.823 296.912 cv
@
387.823 296.912 mo
387.823 294.743 384.627 292.985 380.683 292.985 cv
376.74 292.985 373.543 294.743 373.543 296.912 cv
373.543 299.08 376.74 300.839 380.683 300.839 cv
384.627 300.839 387.823 299.08 387.823 296.912 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
378.532 296.055 mo
(Add)
[1.80423 1.24951 0 ]xsh
375.988 298.911 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
278.224 283.703 mo
295.182 284.595 328.026 286.38 346.768 288.522 cv
353.908 289.415 365.154 292.449 372.651 294.591 cv
@
372.472 294.948 mo
374.257 294.948 li
372.651 294.056 li
cp
@
372.472 294.948 mo
374.257 294.948 li
372.651 294.056 li
f
282.508 472.02 mo
282.508 470.246 276.914 468.807 270.013 468.807 cv
263.113 468.807 257.518 470.246 257.518 472.02 cv
257.518 473.794 263.113 475.233 270.013 475.233 cv
276.914 475.233 282.508 473.794 282.508 472.02 cv
@
282.508 472.02 mo
282.508 470.246 276.914 468.807 270.013 468.807 cv
263.113 468.807 257.518 470.246 257.518 472.02 cv
257.518 473.794 263.113 475.233 270.013 475.233 cv
276.914 475.233 282.508 473.794 282.508 472.02 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
259.255 472.591 mo
(roundrobin\(64,64,64\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
1.24951 .624756 1.24948 1.24951 .624756 1.24948 1.24951 0 ]xsh
277.153 485.764 mo
277.153 483.596 273.957 481.837 270.013 481.837 cv
266.07 481.837 262.873 483.596 262.873 485.764 cv
262.873 487.933 266.07 489.691 270.013 489.691 cv
273.957 489.691 277.153 487.933 277.153 485.764 cv
@
277.153 485.764 mo
277.153 483.596 273.957 481.837 270.013 481.837 cv
266.07 481.837 262.873 483.596 262.873 485.764 cv
262.873 487.933 266.07 489.691 270.013 489.691 cv
273.957 489.691 277.153 487.933 277.153 485.764 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
266.126 484.908 mo
(Identity)
[.832153 1.24948 1.10953 1.24951 .694702 .694733 .694733 0 ]xsh
265.318 487.764 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
270.013 475.233 mo
270.013 476.661 270.013 478.267 270.013 479.874 cv
@
269.656 479.874 mo
270.013 481.659 li
270.549 479.874 li
cp
@
269.656 479.874 mo
270.013 481.659 li
270.549 479.874 li
f
147.027 314.226 mo
147.027 312.452 140.154 311.013 131.676 311.013 cv
123.198 311.013 116.325 312.452 116.325 314.226 cv
116.325 316 123.198 317.439 131.676 317.439 cv
140.154 317.439 147.027 316 147.027 314.226 cv
@
147.027 314.226 mo
147.027 312.452 140.154 311.013 131.676 311.013 cv
123.198 311.013 116.325 312.452 116.325 314.226 cv
116.325 316 123.198 317.439 131.676 317.439 cv
140.154 317.439 147.027 316 147.027 314.226 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
118.107 314.797 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832146 1.2495 1.2495 1.2495 1.2495 .832153 1.2495 1.2495 .694725 1.2495 .832138 1.24951 
.624741 1.24951 .624741 1.2495 .624756 1.2495 .624756 1.2495 .624756 1.2495 .624756 1.2495 
.624741 1.24951 0 ]xsh
154.524 299.946 mo
149.883 302.981 142.743 307.265 137.745 310.478 cv
@
137.923 309.764 mo
136.674 311.192 li
138.459 310.656 li
cp
@
137.923 309.764 mo
136.674 311.192 li
138.459 310.656 li
f
68.844 327.971 mo
68.844 325.802 65.6473 324.044 61.704 324.044 cv
57.7607 324.044 54.564 325.802 54.564 327.971 cv
54.564 330.139 57.7607 331.897 61.704 331.897 cv
65.6473 331.897 68.844 330.139 68.844 327.971 cv
@
68.844 327.971 mo
68.844 325.802 65.6473 324.044 61.704 324.044 cv
57.7607 324.044 54.564 325.802 54.564 327.971 cv
54.564 330.139 57.7607 331.897 61.704 331.897 cv
65.6473 331.897 68.844 330.139 68.844 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
57.0534 327.114 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
57.0085 329.97 mo
(I/O: 8->8)
[.83215 .694721 1.80424 .694721 .624748 1.2495 .83215 1.40942 0 ]xsh
119.002 316.011 mo
105.079 317.975 83.124 321.366 69.915 323.865 cv
69.3795 324.044 68.6655 324.222 67.9515 324.579 cv
@
68.3085 323.865 mo
66.8805 325.115 li
68.6655 324.758 li
cp
@
68.3085 323.865 mo
66.8805 325.115 li
68.6655 324.758 li
f
86.337 327.971 mo
86.337 325.802 83.1403 324.044 79.197 324.044 cv
75.2537 324.044 72.057 325.802 72.057 327.971 cv
72.057 330.139 75.2537 331.897 79.197 331.897 cv
83.1403 331.897 86.337 330.139 86.337 327.971 cv
@
86.337 327.971 mo
86.337 325.802 83.1403 324.044 79.197 324.044 cv
75.2537 324.044 72.057 325.802 72.057 327.971 cv
72.057 330.139 75.2537 331.897 79.197 331.897 cv
83.1403 331.897 86.337 330.139 86.337 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
74.5464 327.114 mo
(DCT_1D)
[1.80424 1.66682 1.52687 1.2495 1.2495 0 ]xsh
74.5015 329.97 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
120.609 316.547 mo
110.613 318.51 96.333 321.545 87.408 323.865 cv
86.8725 324.044 86.1585 324.401 85.4445 324.579 cv
@
85.8015 323.865 mo
84.3735 325.115 li
86.1585 324.758 li
cp
@
85.8015 323.865 mo
84.3735 325.115 li
86.1585 324.758 li
f
103.83 327.971 mo
103.83 325.802 100.633 324.044 96.69 324.044 cv
92.7467 324.044 89.55 325.802 89.55 327.971 cv
89.55 330.139 92.7467 331.897 96.69 331.897 cv
100.633 331.897 103.83 330.139 103.83 327.971 cv
@
103.83 327.971 mo
103.83 325.802 100.633 324.044 96.69 324.044 cv
92.7467 324.044 89.55 325.802 89.55 327.971 cv
89.55 330.139 92.7467 331.897 96.69 331.897 cv
100.633 331.897 103.83 330.139 103.83 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
92.0394 327.114 mo
(DCT_1D)
[1.80424 1.66682 1.52687 1.2495 1.2495 0 ]xsh
91.9945 329.97 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
123.822 317.082 mo
117.931 319.046 109.899 321.902 104.901 323.865 cv
104.365 324.044 103.83 324.401 103.294 324.758 cv
@
103.473 324.222 mo
102.045 325.293 li
103.83 324.936 li
cp
@
103.473 324.222 mo
102.045 325.293 li
103.83 324.936 li
f
121.323 327.971 mo
121.323 325.802 118.126 324.044 114.183 324.044 cv
110.24 324.044 107.043 325.802 107.043 327.971 cv
107.043 330.139 110.24 331.897 114.183 331.897 cv
118.126 331.897 121.323 330.139 121.323 327.971 cv
@
121.323 327.971 mo
121.323 325.802 118.126 324.044 114.183 324.044 cv
110.24 324.044 107.043 325.802 107.043 327.971 cv
107.043 330.139 110.24 331.897 114.183 331.897 cv
118.126 331.897 121.323 330.139 121.323 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
109.532 327.114 mo
(DCT_1D)
[1.80424 1.66682 1.52687 1.2495 1.2495 0 ]xsh
109.487 329.97 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
127.749 317.261 mo
125.25 319.046 122.215 321.545 119.538 323.687 cv
@
119.359 323.33 mo
118.288 324.758 li
119.895 323.865 li
cp
@
119.359 323.33 mo
118.288 324.758 li
119.895 323.865 li
f
138.816 327.971 mo
138.816 325.802 135.619 324.044 131.676 324.044 cv
127.733 324.044 124.536 325.802 124.536 327.971 cv
124.536 330.139 127.733 331.897 131.676 331.897 cv
135.619 331.897 138.816 330.139 138.816 327.971 cv
@
138.816 327.971 mo
138.816 325.802 135.619 324.044 131.676 324.044 cv
127.733 324.044 124.536 325.802 124.536 327.971 cv
124.536 330.139 127.733 331.897 131.676 331.897 cv
135.619 331.897 138.816 330.139 138.816 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
127.025 327.114 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.24951 1.2495 0 ]xsh
126.98 329.97 mo
(I/O: 8->8)
[.832146 .694717 1.80424 .694717 .624756 1.2495 .832153 1.40942 0 ]xsh
131.676 317.439 mo
131.676 318.867 131.676 320.474 131.676 322.08 cv
@
131.319 322.08 mo
131.676 323.865 li
132.211 322.08 li
cp
@
131.319 322.08 mo
131.676 323.865 li
132.211 322.08 li
f
156.309 327.971 mo
156.309 325.802 153.112 324.044 149.169 324.044 cv
145.226 324.044 142.029 325.802 142.029 327.971 cv
142.029 330.139 145.226 331.897 149.169 331.897 cv
153.112 331.897 156.309 330.139 156.309 327.971 cv
@
156.309 327.971 mo
156.309 325.802 153.112 324.044 149.169 324.044 cv
145.226 324.044 142.029 325.802 142.029 327.971 cv
142.029 330.139 145.226 331.897 149.169 331.897 cv
153.112 331.897 156.309 330.139 156.309 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
144.518 327.114 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
144.473 329.97 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
135.603 317.261 mo
138.102 319.046 141.136 321.545 143.814 323.687 cv
@
143.457 323.865 mo
145.063 324.758 li
143.992 323.33 li
cp
@
143.457 323.865 mo
145.063 324.758 li
143.992 323.33 li
f
173.802 327.971 mo
173.802 325.802 170.605 324.044 166.662 324.044 cv
162.719 324.044 159.522 325.802 159.522 327.971 cv
159.522 330.139 162.719 331.897 166.662 331.897 cv
170.605 331.897 173.802 330.139 173.802 327.971 cv
@
173.802 327.971 mo
173.802 325.802 170.605 324.044 166.662 324.044 cv
162.719 324.044 159.522 325.802 159.522 327.971 cv
159.522 330.139 162.719 331.897 166.662 331.897 cv
170.605 331.897 173.802 330.139 173.802 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
162.011 327.114 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
161.966 329.97 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
139.53 316.904 mo
145.599 319.046 153.453 321.902 158.451 323.865 cv
158.808 324.044 159.165 324.222 159.7 324.401 cv
@
159.522 324.758 mo
161.307 325.293 li
159.879 324.044 li
cp
@
159.522 324.758 mo
161.307 325.293 li
159.879 324.044 li
f
191.295 327.971 mo
191.295 325.802 188.098 324.044 184.155 324.044 cv
180.212 324.044 177.015 325.802 177.015 327.971 cv
177.015 330.139 180.212 331.897 184.155 331.897 cv
188.098 331.897 191.295 330.139 191.295 327.971 cv
@
191.295 327.971 mo
191.295 325.802 188.098 324.044 184.155 324.044 cv
180.212 324.044 177.015 325.802 177.015 327.971 cv
177.015 330.139 180.212 331.897 184.155 331.897 cv
188.098 331.897 191.295 330.139 191.295 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
179.504 327.114 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
179.459 329.97 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
142.743 316.547 mo
152.739 318.51 167.197 321.545 175.944 323.865 cv
176.301 323.865 176.836 324.044 177.193 324.222 cv
@
177.193 324.758 mo
178.978 325.115 li
177.55 323.865 li
cp
@
177.193 324.758 mo
178.978 325.115 li
177.55 323.865 li
f
138.28 341.715 mo
138.28 339.941 131.408 338.502 122.929 338.502 cv
114.451 338.502 107.579 339.941 107.579 341.715 cv
107.579 343.489 114.451 344.928 122.929 344.928 cv
131.408 344.928 138.28 343.489 138.28 341.715 cv
@
138.28 341.715 mo
138.28 339.941 131.408 338.502 122.929 338.502 cv
114.451 338.502 107.579 339.941 107.579 341.715 cv
107.579 343.489 114.451 344.928 122.929 344.928 cv
131.408 344.928 138.28 343.489 138.28 341.715 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
109.36 342.286 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832146 1.2495 1.2495 1.2495 1.2495 .832153 1.2495 1.2495 .694717 1.2495 .832153 1.2495 
.624756 1.2495 .624748 1.2495 .624748 1.2495 .624741 1.24951 .624741 1.24951 .624741 1.2495 
.624756 1.2495 0 ]xsh
138.28 355.281 mo
138.28 353.507 131.408 352.068 122.929 352.068 cv
114.451 352.068 107.579 353.507 107.579 355.281 cv
107.579 357.055 114.451 358.494 122.929 358.494 cv
131.408 358.494 138.28 357.055 138.28 355.281 cv
@
138.28 355.281 mo
138.28 353.507 131.408 352.068 122.929 352.068 cv
114.451 352.068 107.579 353.507 107.579 355.281 cv
107.579 357.055 114.451 358.494 122.929 358.494 cv
131.408 358.494 138.28 357.055 138.28 355.281 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
109.36 355.852 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832146 1.2495 1.2495 1.2495 1.2495 .832153 1.2495 1.2495 .694717 1.2495 .832153 1.2495 
.624756 1.2495 .624748 1.2495 .624748 1.2495 .624741 1.24951 .624741 1.24951 .624741 1.2495 
.624756 1.2495 0 ]xsh
122.929 344.928 mo
122.929 346.535 122.929 348.498 122.929 350.283 cv
@
122.572 350.283 mo
122.929 352.068 li
123.465 350.283 li
cp
@
122.572 350.283 mo
122.929 352.068 li
123.465 350.283 li
f
66.702 330.827 mo
67.9515 331.362 69.0225 331.898 69.915 332.076 cv
80.4465 334.397 97.2255 337.431 109.185 339.395 cv
@
109.006 339.752 mo
110.791 339.752 li
109.185 338.859 li
cp
@
109.006 339.752 mo
110.791 339.752 li
109.185 338.859 li
f
84.3735 330.827 mo
85.4445 331.362 86.5155 331.719 87.408 332.076 cv
93.6555 334.04 103.83 336.896 111.505 338.859 cv
@
111.327 339.216 mo
113.112 339.216 li
111.505 338.324 li
cp
@
111.327 339.216 mo
113.112 339.216 li
111.505 338.324 li
f
101.866 330.648 mo
105.793 332.79 111.327 335.646 115.789 337.967 cv
@
115.432 338.324 mo
117.217 338.681 li
115.789 337.431 li
cp
@
115.432 338.324 mo
117.217 338.681 li
115.789 337.431 li
f
116.682 331.719 mo
117.574 333.326 118.824 335.289 120.073 337.074 cv
@
119.716 337.253 mo
120.966 338.502 li
120.43 336.717 li
cp
@
119.716 337.253 mo
120.966 338.502 li
120.43 336.717 li
f
129.177 331.719 mo
128.284 333.326 127.035 335.289 125.785 337.074 cv
@
125.428 336.717 mo
124.893 338.502 li
126.142 337.253 li
cp
@
125.428 336.717 mo
124.893 338.502 li
126.142 337.253 li
f
143.992 330.648 mo
140.065 332.79 134.532 335.646 130.069 337.967 cv
@
130.069 337.431 mo
128.641 338.681 li
130.426 338.324 li
cp
@
130.069 337.431 mo
128.641 338.681 li
130.426 338.324 li
f
161.485 330.827 mo
160.414 331.362 159.343 331.898 158.451 332.076 cv
152.025 334.04 141.672 336.896 133.818 338.859 cv
@
134.353 338.145 mo
132.747 339.216 li
134.532 339.038 li
cp
@
134.353 338.145 mo
132.747 339.216 li
134.532 339.038 li
f
179.157 330.827 mo
178.086 331.362 176.836 331.898 175.944 332.076 cv
165.412 334.575 148.098 337.61 136.138 339.573 cv
@
136.674 339.038 mo
135.067 339.752 li
136.852 339.93 li
cp
@
136.674 339.038 mo
135.067 339.752 li
136.852 339.93 li
f
68.844 369.026 mo
68.844 366.857 65.6473 365.099 61.704 365.099 cv
57.7607 365.099 54.564 366.857 54.564 369.026 cv
54.564 371.194 57.7607 372.952 61.704 372.952 cv
65.6473 372.952 68.844 371.194 68.844 369.026 cv
@
68.844 369.026 mo
68.844 366.857 65.6473 365.099 61.704 365.099 cv
57.7607 365.099 54.564 366.857 54.564 369.026 cv
54.564 371.194 57.7607 372.952 61.704 372.952 cv
65.6473 372.952 68.844 371.194 68.844 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
57.0534 368.169 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
57.0085 371.025 mo
(I/O: 8->8)
[.83215 .694721 1.80424 .694721 .624748 1.2495 .83215 1.40942 0 ]xsh
110.791 357.245 mo
99.0105 359.387 80.982 362.421 69.915 364.92 cv
69.3795 365.099 68.6655 365.277 67.9515 365.634 cv
@
68.3085 364.92 mo
66.8805 366.17 li
68.6655 365.813 li
cp
@
68.3085 364.92 mo
66.8805 366.17 li
68.6655 365.813 li
f
86.337 369.026 mo
86.337 366.857 83.1403 365.099 79.197 365.099 cv
75.2537 365.099 72.057 366.857 72.057 369.026 cv
72.057 371.194 75.2537 372.952 79.197 372.952 cv
83.1403 372.952 86.337 371.194 86.337 369.026 cv
@
86.337 369.026 mo
86.337 366.857 83.1403 365.099 79.197 365.099 cv
75.2537 365.099 72.057 366.857 72.057 369.026 cv
72.057 371.194 75.2537 372.952 79.197 372.952 cv
83.1403 372.952 86.337 371.194 86.337 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
74.5464 368.169 mo
(DCT_1D)
[1.80424 1.66682 1.52687 1.2495 1.2495 0 ]xsh
74.5015 371.025 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
113.29 357.78 mo
105.258 359.922 94.3695 362.778 87.408 364.92 cv
86.8725 365.099 86.1585 365.456 85.4445 365.813 cv
@
85.8015 365.099 mo
84.3735 366.348 li
86.1585 365.991 li
cp
@
85.8015 365.099 mo
84.3735 366.348 li
86.1585 365.991 li
f
103.83 369.026 mo
103.83 366.857 100.633 365.099 96.69 365.099 cv
92.7467 365.099 89.55 366.857 89.55 369.026 cv
89.55 371.194 92.7467 372.952 96.69 372.952 cv
100.633 372.952 103.83 371.194 103.83 369.026 cv
@
103.83 369.026 mo
103.83 366.857 100.633 365.099 96.69 365.099 cv
92.7467 365.099 89.55 366.857 89.55 369.026 cv
89.55 371.194 92.7467 372.952 96.69 372.952 cv
100.633 372.952 103.83 371.194 103.83 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
92.0394 368.169 mo
(DCT_1D)
[1.80424 1.66682 1.52687 1.2495 1.2495 0 ]xsh
91.9945 371.025 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
117.217 358.316 mo
113.112 360.458 107.578 363.314 103.473 365.634 cv
@
103.473 365.099 mo
102.045 366.348 li
103.83 365.991 li
cp
@
103.473 365.099 mo
102.045 366.348 li
103.83 365.991 li
f
121.323 369.026 mo
121.323 366.857 118.126 365.099 114.183 365.099 cv
110.24 365.099 107.043 366.857 107.043 369.026 cv
107.043 371.194 110.24 372.952 114.183 372.952 cv
118.126 372.952 121.323 371.194 121.323 369.026 cv
@
121.323 369.026 mo
121.323 366.857 118.126 365.099 114.183 365.099 cv
110.24 365.099 107.043 366.857 107.043 369.026 cv
107.043 371.194 110.24 372.952 114.183 372.952 cv
118.126 372.952 121.323 371.194 121.323 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
109.532 368.169 mo
(DCT_1D)
[1.80424 1.66682 1.52687 1.2495 1.2495 0 ]xsh
109.487 371.025 mo
(I/O: 8->8)
[.832146 .694725 1.80424 .694725 .624748 1.2495 .832146 1.40942 0 ]xsh
120.966 358.494 mo
120.073 360.101 118.645 362.064 117.574 363.849 cv
@
117.217 363.492 mo
116.682 365.277 li
117.931 364.028 li
cp
@
117.217 363.492 mo
116.682 365.277 li
117.931 364.028 li
f
138.816 369.026 mo
138.816 366.857 135.619 365.099 131.676 365.099 cv
127.733 365.099 124.536 366.857 124.536 369.026 cv
124.536 371.194 127.733 372.952 131.676 372.952 cv
135.619 372.952 138.816 371.194 138.816 369.026 cv
@
138.816 369.026 mo
138.816 366.857 135.619 365.099 131.676 365.099 cv
127.733 365.099 124.536 366.857 124.536 369.026 cv
124.536 371.194 127.733 372.952 131.676 372.952 cv
135.619 372.952 138.816 371.194 138.816 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
127.025 368.169 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.24951 1.2495 0 ]xsh
126.98 371.025 mo
(I/O: 8->8)
[.832146 .694717 1.80424 .694717 .624756 1.2495 .832153 1.40942 0 ]xsh
124.893 358.494 mo
125.785 360.101 127.213 362.064 128.284 363.849 cv
@
127.927 364.028 mo
129.177 365.277 li
128.641 363.492 li
cp
@
127.927 364.028 mo
129.177 365.277 li
128.641 363.492 li
f
156.309 369.026 mo
156.309 366.857 153.112 365.099 149.169 365.099 cv
145.226 365.099 142.029 366.857 142.029 369.026 cv
142.029 371.194 145.226 372.952 149.169 372.952 cv
153.112 372.952 156.309 371.194 156.309 369.026 cv
@
156.309 369.026 mo
156.309 366.857 153.112 365.099 149.169 365.099 cv
145.226 365.099 142.029 366.857 142.029 369.026 cv
142.029 371.194 145.226 372.952 149.169 372.952 cv
153.112 372.952 156.309 371.194 156.309 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
144.518 368.169 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
144.473 371.025 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
128.641 358.316 mo
132.747 360.458 138.28 363.314 142.386 365.634 cv
@
142.029 365.991 mo
143.814 366.348 li
142.386 365.099 li
cp
@
142.029 365.991 mo
143.814 366.348 li
142.386 365.099 li
f
173.802 369.026 mo
173.802 366.857 170.605 365.099 166.662 365.099 cv
162.719 365.099 159.522 366.857 159.522 369.026 cv
159.522 371.194 162.719 372.952 166.662 372.952 cv
170.605 372.952 173.802 371.194 173.802 369.026 cv
@
173.802 369.026 mo
173.802 366.857 170.605 365.099 166.662 365.099 cv
162.719 365.099 159.522 366.857 159.522 369.026 cv
159.522 371.194 162.719 372.952 166.662 372.952 cv
170.605 372.952 173.802 371.194 173.802 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
162.011 368.169 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
161.966 371.025 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
132.747 357.78 mo
140.601 359.922 151.668 362.778 158.451 364.92 cv
158.808 365.099 159.343 365.277 159.7 365.456 cv
@
159.7 365.991 mo
161.485 366.17 li
160.057 365.099 li
cp
@
159.7 365.991 mo
161.485 366.17 li
160.057 365.099 li
f
191.295 369.026 mo
191.295 366.857 188.098 365.099 184.155 365.099 cv
180.212 365.099 177.015 366.857 177.015 369.026 cv
177.015 371.194 180.212 372.952 184.155 372.952 cv
188.098 372.952 191.295 371.194 191.295 369.026 cv
@
191.295 369.026 mo
191.295 366.857 188.098 365.099 184.155 365.099 cv
180.212 365.099 177.015 366.857 177.015 369.026 cv
177.015 371.194 180.212 372.952 184.155 372.952 cv
188.098 372.952 191.295 371.194 191.295 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
179.504 368.169 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
179.459 371.025 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
135.067 357.245 mo
146.848 359.208 165.055 362.421 175.944 364.92 cv
176.479 365.099 177.193 365.277 177.907 365.634 cv
@
177.372 365.813 mo
179.157 366.17 li
177.729 365.099 li
cp
@
177.372 365.813 mo
179.157 366.17 li
177.729 365.099 li
f
147.027 382.77 mo
147.027 380.996 140.154 379.557 131.676 379.557 cv
123.198 379.557 116.325 380.996 116.325 382.77 cv
116.325 384.544 123.198 385.983 131.676 385.983 cv
140.154 385.983 147.027 384.544 147.027 382.77 cv
@
147.027 382.77 mo
147.027 380.996 140.154 379.557 131.676 379.557 cv
123.198 379.557 116.325 380.996 116.325 382.77 cv
116.325 384.544 123.198 385.983 131.676 385.983 cv
140.154 385.983 147.027 384.544 147.027 382.77 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
118.107 383.341 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832146 1.2495 1.2495 1.2495 1.2495 .832153 1.2495 1.2495 .694725 1.2495 .832138 1.24951 
.624741 1.24951 .624741 1.2495 .624756 1.2495 .624756 1.2495 .624756 1.2495 .624756 1.2495 
.624741 1.24951 0 ]xsh
150.061 398.657 mo
150.061 396.488 144.947 394.73 138.637 394.73 cv
132.328 394.73 127.213 396.488 127.213 398.657 cv
127.213 400.825 132.328 402.583 138.637 402.583 cv
144.947 402.583 150.061 400.825 150.061 398.657 cv
@
150.061 398.657 mo
150.061 396.488 144.947 394.73 138.637 394.73 cv
132.328 394.73 127.213 396.488 127.213 398.657 cv
127.213 400.825 132.328 402.583 138.637 402.583 cv
144.947 402.583 150.061 400.825 150.061 398.657 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
129.545 397.8 mo
(staticQuantization)
[.972092 .694717 1.10953 .694717 .694717 1.10953 1.80423 1.24951 1.10951 1.2495 .694717 .694733 
1.10951 1.10953 .694717 .694717 1.2495 0 ]xsh
132.692 400.656 mo
(I/O: 64->64)
[.832153 .694717 1.80424 .694717 .624756 1.2495 1.2495 .832153 1.40942 1.2495 0 ]xsh
133.104 385.983 mo
133.996 387.947 135.067 390.803 136.138 393.123 cv
@
135.781 393.302 mo
136.852 394.73 li
136.495 392.945 li
cp
@
135.781 393.302 mo
136.852 394.73 li
136.495 392.945 li
f
66.702 371.882 mo
67.9515 372.417 69.0225 372.953 69.915 373.131 cv
82.767 375.809 103.651 378.843 117.574 380.807 cv
@
117.039 381.164 mo
118.824 380.985 li
117.039 380.271 li
cp
@
117.039 381.164 mo
118.824 380.985 li
117.039 380.271 li
f
84.3735 371.882 mo
85.4445 372.417 86.5155 372.953 87.408 373.131 cv
95.976 375.273 109.363 378.129 119.181 380.271 cv
@
118.824 380.628 mo
120.609 380.628 li
119.002 379.736 li
cp
@
118.824 380.628 mo
120.609 380.628 li
119.002 379.736 li
f
102.045 371.703 mo
103.116 372.239 104.187 372.774 104.901 373.131 cv
109.542 374.916 116.682 377.594 122.394 379.557 cv
@
121.858 379.914 mo
123.643 379.914 li
122.037 379.022 li
cp
@
121.858 379.914 mo
123.643 379.914 li
122.037 379.022 li
f
118.467 372.417 mo
120.966 374.202 124 376.523 126.499 378.486 cv
@
126.142 378.665 mo
127.749 379.557 li
126.678 378.129 li
cp
@
126.142 378.665 mo
127.749 379.557 li
126.678 378.129 li
f
131.676 373.131 mo
131.676 374.559 131.676 376.166 131.676 377.772 cv
@
131.319 377.772 mo
131.676 379.557 li
132.211 377.772 li
cp
@
131.319 377.772 mo
131.676 379.557 li
132.211 377.772 li
f
144.885 372.417 mo
142.386 374.202 139.351 376.523 136.852 378.486 cv
@
136.674 378.129 mo
135.603 379.557 li
137.209 378.665 li
cp
@
136.674 378.129 mo
135.603 379.557 li
137.209 378.665 li
f
161.485 371.703 mo
160.414 372.239 159.343 372.774 158.451 373.131 cv
153.81 374.916 146.67 377.594 140.958 379.736 cv
@
141.315 379.2 mo
139.708 380.093 li
141.493 380.093 li
cp
@
141.315 379.2 mo
139.708 380.093 li
141.493 380.093 li
f
179.157 371.882 mo
177.907 372.417 176.836 372.953 175.944 373.131 cv
167.554 375.273 154.167 378.129 144.349 380.271 cv
@
144.528 379.736 mo
142.921 380.628 li
144.706 380.628 li
cp
@
144.528 379.736 mo
142.921 380.628 li
144.706 380.628 li
f
152.56 413.115 mo
152.56 411.341 147.925 409.902 142.207 409.902 cv
136.49 409.902 131.855 411.341 131.855 413.115 cv
131.855 414.889 136.49 416.328 142.207 416.328 cv
147.925 416.328 152.56 414.889 152.56 413.115 cv
@
152.56 413.115 mo
152.56 411.341 147.925 409.902 142.207 409.902 cv
136.49 409.902 131.855 411.341 131.855 413.115 cv
131.855 414.889 136.49 416.328 142.207 416.328 cv
147.925 416.328 152.56 414.889 152.56 413.115 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
133.636 413.686 mo
(roundrobin\(1,63\))
[.832153 1.2495 1.2495 1.2495 1.24951 .832138 1.24951 1.2495 .694717 1.2495 .832153 1.2495 
.624756 1.2495 1.2495 0 ]xsh
139.708 402.762 mo
140.065 404.547 140.601 406.511 140.958 408.296 cv
@
140.422 408.296 mo
141.315 409.902 li
141.315 408.117 li
cp
@
140.422 408.296 mo
141.315 409.902 li
141.315 408.117 li
f
158.986 428.823 mo
158.986 425.471 151.474 422.754 142.207 422.754 cv
132.941 422.754 125.429 425.471 125.429 428.823 cv
125.429 432.175 132.941 434.892 142.207 434.892 cv
151.474 434.892 158.986 432.175 158.986 428.823 cv
@
158.986 428.823 mo
158.986 425.471 151.474 422.754 142.207 422.754 cv
132.941 422.754 125.429 425.471 125.429 428.823 cv
125.429 432.175 132.941 434.892 142.207 434.892 cv
151.474 434.892 158.986 432.175 158.986 428.823 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
129.164 426.538 mo
(IntegerDifferenceEncoder)
[.832153 1.2495 .694717 1.10953 1.2495 1.10951 .832153 1.80424 .694717 .832153 .832138 1.10953 
.832138 1.10953 1.2495 1.10951 1.10953 1.52687 1.2495 1.10951 1.24951 1.2495 1.10951 0 
]xsh
137.512 429.394 mo
(I/O: 1->1)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
128.394 432.25 mo
(*** PEEKS 1 AHEAD ***)
[1.2495 1.2495 1.24951 .624741 1.38945 1.52687 1.52687 1.80424 1.38943 .624756 1.2495 .624741 
1.80424 1.80424 1.52687 1.80424 1.80423 .624756 1.2495 1.2495 0 ]xsh
142.207 416.328 mo
142.207 417.578 142.207 419.363 142.207 420.969 cv
@
141.85 420.969 mo
142.207 422.754 li
142.743 420.969 li
cp
@
141.85 420.969 mo
142.207 422.754 li
142.743 420.969 li
f
176.479 428.823 mo
176.479 426.654 173.283 424.896 169.339 424.896 cv
165.396 424.896 162.199 426.654 162.199 428.823 cv
162.199 430.992 165.396 432.75 169.339 432.75 cv
173.283 432.75 176.479 430.992 176.479 428.823 cv
@
176.479 428.823 mo
176.479 426.654 173.283 424.896 169.339 424.896 cv
165.396 424.896 162.199 426.654 162.199 428.823 cv
162.199 430.992 165.396 432.75 169.339 432.75 cv
173.283 432.75 176.479 430.992 176.479 428.823 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
165.452 427.966 mo
(Identity)
[.832153 1.2495 1.10951 1.24951 .694717 .694717 .694717 0 ]xsh
164.644 430.822 mo
(I/O: 1->1)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
147.741 415.793 mo
152.025 417.935 157.737 420.791 161.128 422.754 cv
161.842 423.29 162.735 423.825 163.627 424.539 cv
@
163.449 424.896 mo
165.055 425.61 li
163.984 424.182 li
cp
@
163.449 424.896 mo
165.055 425.61 li
163.984 424.182 li
f
176.479 444.531 mo
176.479 442.757 171.844 441.318 166.126 441.318 cv
160.409 441.318 155.774 442.757 155.774 444.531 cv
155.774 446.305 160.409 447.744 166.126 447.744 cv
171.844 447.744 176.479 446.305 176.479 444.531 cv
@
176.479 444.531 mo
176.479 442.757 171.844 441.318 166.126 441.318 cv
160.409 441.318 155.774 442.757 155.774 444.531 cv
155.774 446.305 160.409 447.744 166.126 447.744 cv
171.844 447.744 176.479 446.305 176.479 444.531 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
157.555 445.102 mo
(roundrobin\(1,63\))
[.832153 1.2495 1.2495 1.2495 1.24951 .832138 1.24951 1.2495 .694717 1.2495 .832153 1.2495 
.624756 1.2495 1.2495 0 ]xsh
190.581 458.275 mo
190.581 456.107 185.866 454.349 180.049 454.349 cv
174.233 454.349 169.518 456.107 169.518 458.275 cv
169.518 460.444 174.233 462.202 180.049 462.202 cv
185.866 462.202 190.581 460.444 190.581 458.275 cv
@
190.581 458.275 mo
190.581 456.107 185.866 454.349 180.049 454.349 cv
174.233 454.349 169.518 456.107 169.518 458.275 cv
169.518 460.444 174.233 462.202 180.049 462.202 cv
185.866 462.202 190.581 460.444 190.581 458.275 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
171.86 457.419 mo
(ZigZagOrdering)
[1.52687 .694717 1.2495 1.52687 1.10953 1.2495 1.80424 .832138 1.24951 1.10951 .832153 .694717 
1.2495 0 ]xsh
174.104 460.275 mo
(I/O: 64->64)
[.832153 .694717 1.80424 .694717 .624756 1.2495 1.2495 .832153 1.40942 1.2495 0 ]xsh
169.339 447.566 mo
171.124 449.351 173.266 451.493 175.051 453.278 cv
@
174.694 453.635 mo
176.301 454.527 li
175.408 452.921 li
cp
@
174.694 453.635 mo
176.301 454.527 li
175.408 452.921 li
f
150.24 434.178 mo
153.453 436.32 157.201 438.819 160.414 440.604 cv
@
159.879 440.783 mo
161.664 441.497 li
160.414 440.069 li
cp
@
159.879 440.783 mo
161.664 441.497 li
160.414 440.069 li
f
168.447 432.929 mo
168.09 435.071 167.554 437.57 167.019 439.712 cv
@
166.662 439.533 mo
166.84 441.318 li
167.554 439.533 li
cp
@
166.662 439.533 mo
166.84 441.318 li
167.554 439.533 li
f
186.475 461.488 mo
188.796 462.559 191.295 463.452 193.258 463.809 cv
210.573 466.486 239.668 469.342 256.626 470.77 cv
@
256.269 471.127 mo
258.054 470.949 li
256.269 470.235 li
cp
@
256.269 471.127 mo
258.054 470.949 li
256.269 470.235 li
f
283.044 314.226 mo
283.044 312.452 276.171 311.013 267.693 311.013 cv
259.215 311.013 252.342 312.452 252.342 314.226 cv
252.342 316 259.215 317.439 267.693 317.439 cv
276.171 317.439 283.044 316 283.044 314.226 cv
@
283.044 314.226 mo
283.044 312.452 276.171 311.013 267.693 311.013 cv
259.215 311.013 252.342 312.452 252.342 314.226 cv
252.342 316 259.215 317.439 267.693 317.439 cv
276.171 317.439 283.044 316 283.044 314.226 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
254.124 314.797 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
267.693 301.017 mo
267.693 303.516 267.693 306.729 267.693 309.407 cv
@
267.336 309.228 mo
267.693 311.013 li
268.228 309.228 li
cp
@
267.336 309.228 mo
267.693 311.013 li
268.228 309.228 li
f
215.928 327.971 mo
215.928 325.802 212.731 324.044 208.788 324.044 cv
204.845 324.044 201.648 325.802 201.648 327.971 cv
201.648 330.139 204.845 331.897 208.788 331.897 cv
212.731 331.897 215.928 330.139 215.928 327.971 cv
@
215.928 327.971 mo
215.928 325.802 212.731 324.044 208.788 324.044 cv
204.845 324.044 201.648 325.802 201.648 327.971 cv
201.648 330.139 204.845 331.897 208.788 331.897 cv
212.731 331.897 215.928 330.139 215.928 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
204.137 327.114 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
204.092 329.97 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
255.912 316.368 mo
244.488 318.332 227.53 321.545 216.999 323.865 cv
216.463 324.044 215.749 324.222 215.035 324.579 cv
@
215.392 323.865 mo
213.964 325.115 li
215.749 324.758 li
cp
@
215.392 323.865 mo
213.964 325.115 li
215.749 324.758 li
f
233.421 327.971 mo
233.421 325.802 230.224 324.044 226.281 324.044 cv
222.338 324.044 219.141 325.802 219.141 327.971 cv
219.141 330.139 222.338 331.897 226.281 331.897 cv
230.224 331.897 233.421 330.139 233.421 327.971 cv
@
233.421 327.971 mo
233.421 325.802 230.224 324.044 226.281 324.044 cv
222.338 324.044 219.141 325.802 219.141 327.971 cv
219.141 330.139 222.338 331.897 226.281 331.897 cv
230.224 331.897 233.421 330.139 233.421 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
221.63 327.114 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
221.585 329.97 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
258.411 316.725 mo
251.092 318.867 240.918 321.723 234.492 323.865 cv
233.956 324.044 233.242 324.401 232.528 324.758 cv
@
232.885 324.044 mo
231.457 325.293 li
233.242 324.936 li
cp
@
232.885 324.044 mo
231.457 325.293 li
233.242 324.936 li
f
250.914 327.971 mo
250.914 325.802 247.717 324.044 243.774 324.044 cv
239.831 324.044 236.634 325.802 236.634 327.971 cv
236.634 330.139 239.831 331.897 243.774 331.897 cv
247.717 331.897 250.914 330.139 250.914 327.971 cv
@
250.914 327.971 mo
250.914 325.802 247.717 324.044 243.774 324.044 cv
239.831 324.044 236.634 325.802 236.634 327.971 cv
236.634 330.139 239.831 331.897 243.774 331.897 cv
247.717 331.897 250.914 330.139 250.914 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
239.123 327.114 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
239.078 329.97 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
262.338 317.261 mo
258.946 319.403 254.127 322.08 250.2 324.222 cv
@
250.021 323.865 mo
248.772 325.115 li
250.557 324.579 li
cp
@
250.021 323.865 mo
248.772 325.115 li
250.557 324.579 li
f
268.407 327.971 mo
268.407 325.802 265.21 324.044 261.267 324.044 cv
257.324 324.044 254.127 325.802 254.127 327.971 cv
254.127 330.139 257.324 331.897 261.267 331.897 cv
265.21 331.897 268.407 330.139 268.407 327.971 cv
@
268.407 327.971 mo
268.407 325.802 265.21 324.044 261.267 324.044 cv
257.324 324.044 254.127 325.802 254.127 327.971 cv
254.127 330.139 257.324 331.897 261.267 331.897 cv
265.21 331.897 268.407 330.139 268.407 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.616 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
256.571 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
266.086 317.439 mo
265.372 319.046 264.48 321.009 263.587 322.973 cv
@
263.409 322.259 mo
263.052 324.044 li
264.301 322.616 li
cp
@
263.409 322.259 mo
263.052 324.044 li
264.301 322.616 li
f
285.9 327.971 mo
285.9 325.802 282.703 324.044 278.76 324.044 cv
274.817 324.044 271.62 325.802 271.62 327.971 cv
271.62 330.139 274.817 331.897 278.76 331.897 cv
282.703 331.897 285.9 330.139 285.9 327.971 cv
@
285.9 327.971 mo
285.9 325.802 282.703 324.044 278.76 324.044 cv
274.817 324.044 271.62 325.802 271.62 327.971 cv
271.62 330.139 274.817 331.897 278.76 331.897 cv
282.703 331.897 285.9 330.139 285.9 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
274.109 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
274.064 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
270.192 317.439 mo
271.62 319.224 273.226 321.009 274.654 322.794 cv
@
274.297 322.973 mo
275.725 324.222 li
275.011 322.437 li
cp
@
274.297 322.973 mo
275.725 324.222 li
275.011 322.437 li
f
303.393 327.971 mo
303.393 325.802 300.196 324.044 296.253 324.044 cv
292.31 324.044 289.113 325.802 289.113 327.971 cv
289.113 330.139 292.31 331.897 296.253 331.897 cv
300.196 331.897 303.393 330.139 303.393 327.971 cv
@
303.393 327.971 mo
303.393 325.802 300.196 324.044 296.253 324.044 cv
292.31 324.044 289.113 325.802 289.113 327.971 cv
289.113 330.139 292.31 331.897 296.253 331.897 cv
300.196 331.897 303.393 330.139 303.393 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
291.602 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
291.557 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
273.762 317.261 mo
278.224 319.403 284.472 322.259 289.291 324.579 cv
@
288.934 324.936 mo
290.719 325.293 li
289.291 324.044 li
cp
@
288.934 324.936 mo
290.719 325.293 li
289.291 324.044 li
f
320.886 327.971 mo
320.886 325.802 317.689 324.044 313.746 324.044 cv
309.803 324.044 306.606 325.802 306.606 327.971 cv
306.606 330.139 309.803 331.897 313.746 331.897 cv
317.689 331.897 320.886 330.139 320.886 327.971 cv
@
320.886 327.971 mo
320.886 325.802 317.689 324.044 313.746 324.044 cv
309.803 324.044 306.606 325.802 306.606 327.971 cv
306.606 330.139 309.803 331.897 313.746 331.897 cv
317.689 331.897 320.886 330.139 320.886 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
309.095 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
309.05 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
277.689 316.725 mo
286.257 318.689 298.216 321.723 305.535 323.865 cv
305.892 323.865 306.427 324.044 306.784 324.222 cv
@
306.784 324.758 mo
308.569 325.115 li
307.141 323.865 li
cp
@
306.784 324.758 mo
308.569 325.115 li
307.141 323.865 li
f
338.379 327.971 mo
338.379 325.802 335.182 324.044 331.239 324.044 cv
327.296 324.044 324.099 325.802 324.099 327.971 cv
324.099 330.139 327.296 331.897 331.239 331.897 cv
335.182 331.897 338.379 330.139 338.379 327.971 cv
@
338.379 327.971 mo
338.379 325.802 335.182 324.044 331.239 324.044 cv
327.296 324.044 324.099 325.802 324.099 327.971 cv
324.099 330.139 327.296 331.897 331.239 331.897 cv
335.182 331.897 338.379 330.139 338.379 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
326.588 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
326.543 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
280.009 316.19 mo
292.326 318.153 311.425 321.366 323.028 323.865 cv
323.563 324.044 324.277 324.222 324.991 324.579 cv
@
324.456 324.758 mo
326.241 325.115 li
324.813 324.044 li
cp
@
324.456 324.758 mo
326.241 325.115 li
324.813 324.044 li
f
285.364 341.715 mo
285.364 339.941 278.492 338.502 270.013 338.502 cv
261.535 338.502 254.662 339.941 254.662 341.715 cv
254.662 343.489 261.535 344.928 270.013 344.928 cv
278.492 344.928 285.364 343.489 285.364 341.715 cv
@
285.364 341.715 mo
285.364 339.941 278.492 338.502 270.013 338.502 cv
261.535 338.502 254.662 339.941 254.662 341.715 cv
254.662 343.489 261.535 344.928 270.013 344.928 cv
278.492 344.928 285.364 343.489 285.364 341.715 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.444 342.286 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
285.364 355.281 mo
285.364 353.507 278.492 352.068 270.013 352.068 cv
261.535 352.068 254.662 353.507 254.662 355.281 cv
254.662 357.055 261.535 358.494 270.013 358.494 cv
278.492 358.494 285.364 357.055 285.364 355.281 cv
@
285.364 355.281 mo
285.364 353.507 278.492 352.068 270.013 352.068 cv
261.535 352.068 254.662 353.507 254.662 355.281 cv
254.662 357.055 261.535 358.494 270.013 358.494 cv
278.492 358.494 285.364 357.055 285.364 355.281 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.444 355.852 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
270.013 344.928 mo
270.013 346.535 270.013 348.498 270.013 350.283 cv
@
269.656 350.283 mo
270.013 352.068 li
270.549 350.283 li
cp
@
269.656 350.283 mo
270.013 352.068 li
270.549 350.283 li
f
213.786 330.827 mo
215.035 331.362 216.106 331.898 216.999 332.076 cv
227.53 334.397 244.309 337.431 256.269 339.395 cv
@
256.09 339.752 mo
257.875 339.752 li
256.269 338.859 li
cp
@
256.09 339.752 mo
257.875 339.752 li
256.269 338.859 li
f
231.457 330.827 mo
232.528 331.362 233.599 331.719 234.492 332.076 cv
240.739 334.04 250.914 336.896 258.589 338.859 cv
@
258.411 339.216 mo
260.196 339.216 li
258.589 338.324 li
cp
@
258.411 339.216 mo
260.196 339.216 li
258.589 338.324 li
f
248.95 330.648 mo
252.877 332.79 258.411 335.646 262.873 337.967 cv
@
262.516 338.324 mo
264.301 338.681 li
262.873 337.431 li
cp
@
262.516 338.324 mo
264.301 338.681 li
262.873 337.431 li
f
263.766 331.719 mo
264.658 333.326 265.908 335.289 267.157 337.074 cv
@
266.8 337.253 mo
268.05 338.502 li
267.514 336.717 li
cp
@
266.8 337.253 mo
268.05 338.502 li
267.514 336.717 li
f
276.261 331.719 mo
275.368 333.326 274.119 335.289 272.869 337.074 cv
@
272.512 336.717 mo
271.977 338.502 li
273.226 337.253 li
cp
@
272.512 336.717 mo
271.977 338.502 li
273.226 337.253 li
f
291.076 330.648 mo
287.149 332.79 281.616 335.646 277.153 337.967 cv
@
277.153 337.431 mo
275.725 338.681 li
277.51 338.324 li
cp
@
277.153 337.431 mo
275.725 338.681 li
277.51 338.324 li
f
308.569 330.827 mo
307.498 331.362 306.427 331.898 305.535 332.076 cv
299.109 334.04 288.756 336.896 280.902 338.859 cv
@
281.437 338.145 mo
279.831 339.216 li
281.616 339.038 li
cp
@
281.437 338.145 mo
279.831 339.216 li
281.616 339.038 li
f
326.241 330.827 mo
325.17 331.362 323.92 331.898 323.028 332.076 cv
312.496 334.575 295.182 337.61 283.222 339.573 cv
@
283.758 339.038 mo
282.151 339.752 li
283.936 339.93 li
cp
@
283.758 339.038 mo
282.151 339.752 li
283.936 339.93 li
f
215.928 369.026 mo
215.928 366.857 212.731 365.099 208.788 365.099 cv
204.845 365.099 201.648 366.857 201.648 369.026 cv
201.648 371.194 204.845 372.952 208.788 372.952 cv
212.731 372.952 215.928 371.194 215.928 369.026 cv
@
215.928 369.026 mo
215.928 366.857 212.731 365.099 208.788 365.099 cv
204.845 365.099 201.648 366.857 201.648 369.026 cv
201.648 371.194 204.845 372.952 208.788 372.952 cv
212.731 372.952 215.928 371.194 215.928 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
204.137 368.169 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
204.092 371.025 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
257.875 357.245 mo
246.094 359.387 228.066 362.421 216.999 364.92 cv
216.463 365.099 215.749 365.277 215.035 365.634 cv
@
215.392 364.92 mo
213.964 366.17 li
215.749 365.813 li
cp
@
215.392 364.92 mo
213.964 366.17 li
215.749 365.813 li
f
233.421 369.026 mo
233.421 366.857 230.224 365.099 226.281 365.099 cv
222.338 365.099 219.141 366.857 219.141 369.026 cv
219.141 371.194 222.338 372.952 226.281 372.952 cv
230.224 372.952 233.421 371.194 233.421 369.026 cv
@
233.421 369.026 mo
233.421 366.857 230.224 365.099 226.281 365.099 cv
222.338 365.099 219.141 366.857 219.141 369.026 cv
219.141 371.194 222.338 372.952 226.281 372.952 cv
230.224 372.952 233.421 371.194 233.421 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
221.63 368.169 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
221.585 371.025 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40944 0 ]xsh
260.374 357.78 mo
252.342 359.922 241.453 362.778 234.492 364.92 cv
233.956 365.099 233.242 365.456 232.528 365.813 cv
@
232.885 365.099 mo
231.457 366.348 li
233.242 365.991 li
cp
@
232.885 365.099 mo
231.457 366.348 li
233.242 365.991 li
f
250.914 369.026 mo
250.914 366.857 247.717 365.099 243.774 365.099 cv
239.831 365.099 236.634 366.857 236.634 369.026 cv
236.634 371.194 239.831 372.952 243.774 372.952 cv
247.717 372.952 250.914 371.194 250.914 369.026 cv
@
250.914 369.026 mo
250.914 366.857 247.717 365.099 243.774 365.099 cv
239.831 365.099 236.634 366.857 236.634 369.026 cv
236.634 371.194 239.831 372.952 243.774 372.952 cv
247.717 372.952 250.914 371.194 250.914 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
239.123 368.169 mo
(DCT_1D)
[1.80424 1.66681 1.52687 1.2495 1.2495 0 ]xsh
239.078 371.025 mo
(I/O: 8->8)
[.832153 .694717 1.80424 .694717 .624756 1.2495 .832138 1.40942 0 ]xsh
264.301 358.316 mo
260.196 360.458 254.662 363.314 250.557 365.634 cv
@
250.557 365.099 mo
249.129 366.348 li
250.914 365.991 li
cp
@
250.557 365.099 mo
249.129 366.348 li
250.914 365.991 li
f
268.407 369.026 mo
268.407 366.857 265.21 365.099 261.267 365.099 cv
257.324 365.099 254.127 366.857 254.127 369.026 cv
254.127 371.194 257.324 372.952 261.267 372.952 cv
265.21 372.952 268.407 371.194 268.407 369.026 cv
@
268.407 369.026 mo
268.407 366.857 265.21 365.099 261.267 365.099 cv
257.324 365.099 254.127 366.857 254.127 369.026 cv
254.127 371.194 257.324 372.952 261.267 372.952 cv
265.21 372.952 268.407 371.194 268.407 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.616 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
256.571 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
268.05 358.494 mo
267.157 360.101 265.729 362.064 264.658 363.849 cv
@
264.301 363.492 mo
263.766 365.277 li
265.015 364.028 li
cp
@
264.301 363.492 mo
263.766 365.277 li
265.015 364.028 li
f
285.9 369.026 mo
285.9 366.857 282.703 365.099 278.76 365.099 cv
274.817 365.099 271.62 366.857 271.62 369.026 cv
271.62 371.194 274.817 372.952 278.76 372.952 cv
282.703 372.952 285.9 371.194 285.9 369.026 cv
@
285.9 369.026 mo
285.9 366.857 282.703 365.099 278.76 365.099 cv
274.817 365.099 271.62 366.857 271.62 369.026 cv
271.62 371.194 274.817 372.952 278.76 372.952 cv
282.703 372.952 285.9 371.194 285.9 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
274.109 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
274.064 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
271.977 358.494 mo
272.869 360.101 274.297 362.064 275.368 363.849 cv
@
275.011 364.028 mo
276.261 365.277 li
275.725 363.492 li
cp
@
275.011 364.028 mo
276.261 365.277 li
275.725 363.492 li
f
303.393 369.026 mo
303.393 366.857 300.196 365.099 296.253 365.099 cv
292.31 365.099 289.113 366.857 289.113 369.026 cv
289.113 371.194 292.31 372.952 296.253 372.952 cv
300.196 372.952 303.393 371.194 303.393 369.026 cv
@
303.393 369.026 mo
303.393 366.857 300.196 365.099 296.253 365.099 cv
292.31 365.099 289.113 366.857 289.113 369.026 cv
289.113 371.194 292.31 372.952 296.253 372.952 cv
300.196 372.952 303.393 371.194 303.393 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
291.602 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
291.557 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
275.725 358.316 mo
279.831 360.458 285.364 363.314 289.47 365.634 cv
@
289.113 365.991 mo
290.898 366.348 li
289.47 365.099 li
cp
@
289.113 365.991 mo
290.898 366.348 li
289.47 365.099 li
f
320.886 369.026 mo
320.886 366.857 317.689 365.099 313.746 365.099 cv
309.803 365.099 306.606 366.857 306.606 369.026 cv
306.606 371.194 309.803 372.952 313.746 372.952 cv
317.689 372.952 320.886 371.194 320.886 369.026 cv
@
320.886 369.026 mo
320.886 366.857 317.689 365.099 313.746 365.099 cv
309.803 365.099 306.606 366.857 306.606 369.026 cv
306.606 371.194 309.803 372.952 313.746 372.952 cv
317.689 372.952 320.886 371.194 320.886 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
309.095 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
309.05 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
279.831 357.78 mo
287.685 359.922 298.752 362.778 305.535 364.92 cv
305.892 365.099 306.427 365.277 306.784 365.456 cv
@
306.784 365.991 mo
308.569 366.17 li
307.141 365.099 li
cp
@
306.784 365.991 mo
308.569 366.17 li
307.141 365.099 li
f
338.379 369.026 mo
338.379 366.857 335.182 365.099 331.239 365.099 cv
327.296 365.099 324.099 366.857 324.099 369.026 cv
324.099 371.194 327.296 372.952 331.239 372.952 cv
335.182 372.952 338.379 371.194 338.379 369.026 cv
@
338.379 369.026 mo
338.379 366.857 335.182 365.099 331.239 365.099 cv
327.296 365.099 324.099 366.857 324.099 369.026 cv
324.099 371.194 327.296 372.952 331.239 372.952 cv
335.182 372.952 338.379 371.194 338.379 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
326.588 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
326.543 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
282.151 357.245 mo
293.932 359.208 312.139 362.421 323.028 364.92 cv
323.563 365.099 324.277 365.277 324.991 365.634 cv
@
324.456 365.813 mo
326.241 366.17 li
324.813 365.099 li
cp
@
324.456 365.813 mo
326.241 366.17 li
324.813 365.099 li
f
285.364 382.77 mo
285.364 380.996 278.492 379.557 270.013 379.557 cv
261.535 379.557 254.662 380.996 254.662 382.77 cv
254.662 384.544 261.535 385.983 270.013 385.983 cv
278.492 385.983 285.364 384.544 285.364 382.77 cv
@
285.364 382.77 mo
285.364 380.996 278.492 379.557 270.013 379.557 cv
261.535 379.557 254.662 380.996 254.662 382.77 cv
254.662 384.544 261.535 385.983 270.013 385.983 cv
278.492 385.983 285.364 384.544 285.364 382.77 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.444 383.341 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
281.437 398.657 mo
281.437 396.488 276.323 394.73 270.013 394.73 cv
263.704 394.73 258.589 396.488 258.589 398.657 cv
258.589 400.825 263.704 402.583 270.013 402.583 cv
276.323 402.583 281.437 400.825 281.437 398.657 cv
@
281.437 398.657 mo
281.437 396.488 276.323 394.73 270.013 394.73 cv
263.704 394.73 258.589 396.488 258.589 398.657 cv
258.589 400.825 263.704 402.583 270.013 402.583 cv
276.323 402.583 281.437 400.825 281.437 398.657 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
260.921 397.8 mo
(staticQuantization)
[.972107 .694702 1.10953 .694702 .694733 1.10953 1.80423 1.24951 1.10953 1.24948 .694733 .694702 
1.10953 1.10953 .694702 .694733 1.24951 0 ]xsh
264.068 400.656 mo
(I/O: 64->64)
[.832153 .694702 1.80426 .694702 .624756 1.24951 1.24951 .832123 1.40942 1.24951 0 ]xsh
270.013 385.983 mo
270.013 387.947 270.013 390.446 270.013 392.766 cv
@
269.656 392.766 mo
270.013 394.551 li
270.549 392.766 li
cp
@
269.656 392.766 mo
270.013 394.551 li
270.549 392.766 li
f
213.786 371.882 mo
215.035 372.417 216.106 372.953 216.999 373.131 cv
227.53 375.452 244.309 378.486 256.269 380.45 cv
@
256.09 380.807 mo
257.875 380.807 li
256.269 379.914 li
cp
@
256.09 380.807 mo
257.875 380.807 li
256.269 379.914 li
f
231.457 371.882 mo
232.528 372.417 233.599 372.774 234.492 373.131 cv
240.739 375.095 250.914 377.951 258.589 379.914 cv
@
258.411 380.271 mo
260.196 380.271 li
258.589 379.379 li
cp
@
258.411 380.271 mo
260.196 380.271 li
258.589 379.379 li
f
248.95 371.703 mo
252.877 373.845 258.411 376.701 262.873 379.022 cv
@
262.516 379.379 mo
264.301 379.736 li
262.873 378.486 li
cp
@
262.516 379.379 mo
264.301 379.736 li
262.873 378.486 li
f
263.766 372.774 mo
264.658 374.381 265.908 376.344 267.157 378.129 cv
@
266.8 378.308 mo
268.05 379.557 li
267.514 377.772 li
cp
@
266.8 378.308 mo
268.05 379.557 li
267.514 377.772 li
f
276.261 372.774 mo
275.368 374.381 274.119 376.344 272.869 378.129 cv
@
272.512 377.772 mo
271.977 379.557 li
273.226 378.308 li
cp
@
272.512 377.772 mo
271.977 379.557 li
273.226 378.308 li
f
291.076 371.703 mo
287.149 373.845 281.616 376.701 277.153 379.022 cv
@
277.153 378.486 mo
275.725 379.736 li
277.51 379.379 li
cp
@
277.153 378.486 mo
275.725 379.736 li
277.51 379.379 li
f
308.569 371.882 mo
307.498 372.417 306.427 372.953 305.535 373.131 cv
299.109 375.095 288.756 377.951 280.902 379.914 cv
@
281.437 379.2 mo
279.831 380.271 li
281.616 380.093 li
cp
@
281.437 379.2 mo
279.831 380.271 li
281.616 380.093 li
f
326.241 371.882 mo
325.17 372.417 323.92 372.953 323.028 373.131 cv
312.496 375.63 295.182 378.665 283.222 380.628 cv
@
283.758 380.093 mo
282.151 380.807 li
283.936 380.985 li
cp
@
283.758 380.093 mo
282.151 380.807 li
283.936 380.985 li
f
280.366 413.115 mo
280.366 411.341 275.731 409.902 270.013 409.902 cv
264.296 409.902 259.66 411.341 259.66 413.115 cv
259.66 414.889 264.296 416.328 270.013 416.328 cv
275.731 416.328 280.366 414.889 280.366 413.115 cv
@
280.366 413.115 mo
280.366 411.341 275.731 409.902 270.013 409.902 cv
264.296 409.902 259.66 411.341 259.66 413.115 cv
259.66 414.889 264.296 416.328 270.013 416.328 cv
275.731 416.328 280.366 414.889 280.366 413.115 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
261.442 413.686 mo
(roundrobin\(1,63\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 1.24948 0 ]xsh
270.013 402.762 mo
270.013 404.547 270.013 406.511 270.013 408.296 cv
@
269.656 408.117 mo
270.013 409.902 li
270.549 408.117 li
cp
@
269.656 408.117 mo
270.013 409.902 li
270.549 408.117 li
f
274.833 428.823 mo
274.833 425.471 267.321 422.754 258.054 422.754 cv
248.787 422.754 241.275 425.471 241.275 428.823 cv
241.275 432.175 248.787 434.892 258.054 434.892 cv
267.321 434.892 274.833 432.175 274.833 428.823 cv
@
274.833 428.823 mo
274.833 425.471 267.321 422.754 258.054 422.754 cv
248.787 422.754 241.275 425.471 241.275 428.823 cv
241.275 432.175 248.787 434.892 258.054 434.892 cv
267.321 434.892 274.833 432.175 274.833 428.823 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
245.011 426.538 mo
(IntegerDifferenceEncoder)
[.832153 1.2495 .694717 1.10953 1.2495 1.10951 .832153 1.80424 .694717 .832153 .832138 1.10953 
.832153 1.1095 1.24951 1.10953 1.1095 1.52689 1.24951 1.1095 1.24951 1.24948 1.10953 0 
]xsh
253.359 429.394 mo
(I/O: 1->1)
[.832153 .694717 1.80424 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
244.241 432.25 mo
(*** PEEKS 1 AHEAD ***)
[1.2495 1.2495 1.24951 .624741 1.38945 1.52687 1.52687 1.80423 1.38947 .624725 1.24951 .624756 
1.80423 1.80423 1.52689 1.80423 1.80426 .624725 1.24951 1.24951 0 ]xsh
267.514 416.328 mo
266.443 417.935 265.015 419.72 263.587 421.505 cv
@
263.23 421.148 mo
262.516 422.933 li
263.944 421.683 li
cp
@
263.23 421.148 mo
262.516 422.933 li
263.944 421.683 li
f
292.326 428.823 mo
292.326 426.654 289.129 424.896 285.186 424.896 cv
281.243 424.896 278.046 426.654 278.046 428.823 cv
278.046 430.992 281.243 432.75 285.186 432.75 cv
289.129 432.75 292.326 430.992 292.326 428.823 cv
@
292.326 428.823 mo
292.326 426.654 289.129 424.896 285.186 424.896 cv
281.243 424.896 278.046 426.654 278.046 428.823 cv
278.046 430.992 281.243 432.75 285.186 432.75 cv
289.129 432.75 292.326 430.992 292.326 428.823 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
281.299 427.966 mo
(Identity)
[.832153 1.24948 1.10953 1.24951 .694702 .694733 .694733 0 ]xsh
280.491 430.822 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
273.048 416.15 mo
275.19 418.47 278.046 421.505 280.545 424.004 cv
@
280.188 424.361 mo
281.794 425.253 li
280.902 423.647 li
cp
@
280.188 424.361 mo
281.794 425.253 li
280.902 423.647 li
f
280.366 444.531 mo
280.366 442.757 275.731 441.318 270.013 441.318 cv
264.296 441.318 259.66 442.757 259.66 444.531 cv
259.66 446.305 264.296 447.744 270.013 447.744 cv
275.731 447.744 280.366 446.305 280.366 444.531 cv
@
280.366 444.531 mo
280.366 442.757 275.731 441.318 270.013 441.318 cv
264.296 441.318 259.66 442.757 259.66 444.531 cv
259.66 446.305 264.296 447.744 270.013 447.744 cv
275.731 447.744 280.366 446.305 280.366 444.531 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
261.442 445.102 mo
(roundrobin\(1,63\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 1.24948 0 ]xsh
280.545 458.275 mo
280.545 456.107 275.83 454.349 270.013 454.349 cv
264.197 454.349 259.482 456.107 259.482 458.275 cv
259.482 460.444 264.197 462.202 270.013 462.202 cv
275.83 462.202 280.545 460.444 280.545 458.275 cv
@
280.545 458.275 mo
280.545 456.107 275.83 454.349 270.013 454.349 cv
264.197 454.349 259.482 456.107 259.482 458.275 cv
259.482 460.444 264.197 462.202 270.013 462.202 cv
275.83 462.202 280.545 460.444 280.545 458.275 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
261.824 457.419 mo
(ZigZagOrdering)
[1.52686 .694733 1.24951 1.52686 1.10953 1.24951 1.80423 .832153 1.24948 1.10953 .832153 .694733 
1.24948 0 ]xsh
264.068 460.275 mo
(I/O: 64->64)
[.832153 .694702 1.80426 .694702 .624756 1.24951 1.24951 .832123 1.40942 1.24951 0 ]xsh
270.013 447.744 mo
270.013 449.172 270.013 450.779 270.013 452.385 cv
@
269.656 452.385 mo
270.013 454.17 li
270.549 452.385 li
cp
@
269.656 452.385 mo
270.013 454.17 li
270.549 452.385 li
f
262.516 434.714 mo
263.944 436.499 265.372 438.462 266.622 440.069 cv
@
266.265 440.247 mo
267.693 441.318 li
266.8 439.712 li
cp
@
266.265 440.247 mo
267.693 441.318 li
266.8 439.712 li
f
281.794 432.393 mo
279.474 434.714 276.618 437.748 274.119 440.247 cv
@
273.94 439.89 mo
273.048 441.497 li
274.476 440.426 li
cp
@
273.94 439.89 mo
273.048 441.497 li
274.476 440.426 li
f
270.013 462.381 mo
270.013 463.809 270.013 465.415 270.013 467.022 cv
@
269.656 467.022 mo
270.013 468.807 li
270.549 467.022 li
cp
@
269.656 467.022 mo
270.013 468.807 li
270.549 467.022 li
f
423.702 314.226 mo
423.702 312.452 416.829 311.013 408.351 311.013 cv
399.873 311.013 393 312.452 393 314.226 cv
393 316 399.873 317.439 408.351 317.439 cv
416.829 317.439 423.702 316 423.702 314.226 cv
@
423.702 314.226 mo
423.702 312.452 416.829 311.013 408.351 311.013 cv
399.873 311.013 393 312.452 393 314.226 cv
393 316 399.873 317.439 408.351 317.439 cv
416.829 317.439 423.702 316 423.702 314.226 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
394.782 314.797 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
385.503 299.946 mo
390.144 302.981 397.284 307.265 402.282 310.478 cv
@
401.568 310.656 mo
403.353 311.192 li
402.103 309.764 li
cp
@
401.568 310.656 mo
403.353 311.192 li
402.103 309.764 li
f
363.012 327.971 mo
363.012 325.802 359.815 324.044 355.872 324.044 cv
351.929 324.044 348.732 325.802 348.732 327.971 cv
348.732 330.139 351.929 331.897 355.872 331.897 cv
359.815 331.897 363.012 330.139 363.012 327.971 cv
@
363.012 327.971 mo
363.012 325.802 359.815 324.044 355.872 324.044 cv
351.929 324.044 348.732 325.802 348.732 327.971 cv
348.732 330.139 351.929 331.897 355.872 331.897 cv
359.815 331.897 363.012 330.139 363.012 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
351.221 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
351.176 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
397.284 316.547 mo
387.288 318.51 372.829 321.545 364.083 323.865 cv
363.547 324.044 362.833 324.401 362.119 324.579 cv
@
362.476 323.865 mo
361.048 325.115 li
362.833 324.758 li
cp
@
362.476 323.865 mo
361.048 325.115 li
362.833 324.758 li
f
380.505 327.971 mo
380.505 325.802 377.308 324.044 373.365 324.044 cv
369.422 324.044 366.225 325.802 366.225 327.971 cv
366.225 330.139 369.422 331.897 373.365 331.897 cv
377.308 331.897 380.505 330.139 380.505 327.971 cv
@
380.505 327.971 mo
380.505 325.802 377.308 324.044 373.365 324.044 cv
369.422 324.044 366.225 325.802 366.225 327.971 cv
366.225 330.139 369.422 331.897 373.365 331.897 cv
377.308 331.897 380.505 330.139 380.505 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
368.714 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
368.669 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
400.497 316.904 mo
394.428 319.046 386.574 321.902 381.576 323.865 cv
381.219 324.044 380.862 324.222 380.326 324.401 cv
@
380.148 324.044 mo
378.72 325.293 li
380.505 324.758 li
cp
@
380.148 324.044 mo
378.72 325.293 li
380.505 324.758 li
f
397.998 327.971 mo
397.998 325.802 394.801 324.044 390.858 324.044 cv
386.915 324.044 383.718 325.802 383.718 327.971 cv
383.718 330.139 386.915 331.897 390.858 331.897 cv
394.801 331.897 397.998 330.139 397.998 327.971 cv
@
397.998 327.971 mo
397.998 325.802 394.801 324.044 390.858 324.044 cv
386.915 324.044 383.718 325.802 383.718 327.971 cv
383.718 330.139 386.915 331.897 390.858 331.897 cv
394.801 331.897 397.998 330.139 397.998 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
386.207 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
386.162 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
404.424 317.261 mo
401.925 319.046 398.89 321.545 396.213 323.687 cv
@
396.034 323.33 mo
394.963 324.758 li
396.57 323.865 li
cp
@
396.034 323.33 mo
394.963 324.758 li
396.57 323.865 li
f
415.491 327.971 mo
415.491 325.802 412.294 324.044 408.351 324.044 cv
404.408 324.044 401.211 325.802 401.211 327.971 cv
401.211 330.139 404.408 331.897 408.351 331.897 cv
412.294 331.897 415.491 330.139 415.491 327.971 cv
@
415.491 327.971 mo
415.491 325.802 412.294 324.044 408.351 324.044 cv
404.408 324.044 401.211 325.802 401.211 327.971 cv
401.211 330.139 404.408 331.897 408.351 331.897 cv
412.294 331.897 415.491 330.139 415.491 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
403.7 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
403.655 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
408.351 317.439 mo
408.351 318.867 408.351 320.474 408.351 322.08 cv
@
407.994 322.08 mo
408.351 323.865 li
408.886 322.08 li
cp
@
407.994 322.08 mo
408.351 323.865 li
408.886 322.08 li
f
432.984 327.971 mo
432.984 325.802 429.787 324.044 425.844 324.044 cv
421.901 324.044 418.704 325.802 418.704 327.971 cv
418.704 330.139 421.901 331.897 425.844 331.897 cv
429.787 331.897 432.984 330.139 432.984 327.971 cv
@
432.984 327.971 mo
432.984 325.802 429.787 324.044 425.844 324.044 cv
421.901 324.044 418.704 325.802 418.704 327.971 cv
418.704 330.139 421.901 331.897 425.844 331.897 cv
429.787 331.897 432.984 330.139 432.984 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
421.193 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
421.148 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
412.278 317.261 mo
414.777 319.046 417.811 321.545 420.489 323.687 cv
@
420.132 323.865 mo
421.738 324.758 li
420.667 323.33 li
cp
@
420.132 323.865 mo
421.738 324.758 li
420.667 323.33 li
f
450.477 327.971 mo
450.477 325.802 447.28 324.044 443.337 324.044 cv
439.394 324.044 436.197 325.802 436.197 327.971 cv
436.197 330.139 439.394 331.897 443.337 331.897 cv
447.28 331.897 450.477 330.139 450.477 327.971 cv
@
450.477 327.971 mo
450.477 325.802 447.28 324.044 443.337 324.044 cv
439.394 324.044 436.197 325.802 436.197 327.971 cv
436.197 330.139 439.394 331.897 443.337 331.897 cv
447.28 331.897 450.477 330.139 450.477 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
438.686 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
438.641 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
416.205 317.082 mo
422.095 319.046 430.128 321.902 435.126 323.865 cv
435.661 324.044 436.197 324.401 436.732 324.758 cv
@
436.197 324.936 mo
437.982 325.293 li
436.554 324.222 li
cp
@
436.197 324.936 mo
437.982 325.293 li
436.554 324.222 li
f
467.97 327.971 mo
467.97 325.802 464.773 324.044 460.83 324.044 cv
456.887 324.044 453.69 325.802 453.69 327.971 cv
453.69 330.139 456.887 331.897 460.83 331.897 cv
464.773 331.897 467.97 330.139 467.97 327.971 cv
@
467.97 327.971 mo
467.97 325.802 464.773 324.044 460.83 324.044 cv
456.887 324.044 453.69 325.802 453.69 327.971 cv
453.69 330.139 456.887 331.897 460.83 331.897 cv
464.773 331.897 467.97 330.139 467.97 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
456.179 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
456.134 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
419.418 316.547 mo
429.414 318.51 443.694 321.545 452.619 323.865 cv
453.154 324.044 453.868 324.401 454.582 324.579 cv
@
453.868 324.758 mo
455.653 325.115 li
454.225 323.865 li
cp
@
453.868 324.758 mo
455.653 325.115 li
454.225 323.865 li
f
485.463 327.971 mo
485.463 325.802 482.266 324.044 478.323 324.044 cv
474.38 324.044 471.183 325.802 471.183 327.971 cv
471.183 330.139 474.38 331.897 478.323 331.897 cv
482.266 331.897 485.463 330.139 485.463 327.971 cv
@
485.463 327.971 mo
485.463 325.802 482.266 324.044 478.323 324.044 cv
474.38 324.044 471.183 325.802 471.183 327.971 cv
471.183 330.139 474.38 331.897 478.323 331.897 cv
482.266 331.897 485.463 330.139 485.463 327.971 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
473.672 327.114 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
473.627 329.97 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
421.024 316.011 mo
434.947 317.975 456.903 321.366 470.112 323.865 cv
470.647 324.044 471.361 324.222 472.075 324.579 cv
@
471.361 324.758 mo
473.146 325.115 li
471.718 323.865 li
cp
@
471.361 324.758 mo
473.146 325.115 li
471.718 323.865 li
f
432.448 341.715 mo
432.448 339.941 425.576 338.502 417.097 338.502 cv
408.619 338.502 401.747 339.941 401.747 341.715 cv
401.747 343.489 408.619 344.928 417.097 344.928 cv
425.576 344.928 432.448 343.489 432.448 341.715 cv
@
432.448 341.715 mo
432.448 339.941 425.576 338.502 417.097 338.502 cv
408.619 338.502 401.747 339.941 401.747 341.715 cv
401.747 343.489 408.619 344.928 417.097 344.928 cv
425.576 344.928 432.448 343.489 432.448 341.715 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
403.528 342.286 mo
(roundrobin\(8,8,8,8,8,8,8,8\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
432.448 355.281 mo
432.448 353.507 425.576 352.068 417.097 352.068 cv
408.619 352.068 401.747 353.507 401.747 355.281 cv
401.747 357.055 408.619 358.494 417.097 358.494 cv
425.576 358.494 432.448 357.055 432.448 355.281 cv
@
432.448 355.281 mo
432.448 353.507 425.576 352.068 417.097 352.068 cv
408.619 352.068 401.747 353.507 401.747 355.281 cv
401.747 357.055 408.619 358.494 417.097 358.494 cv
425.576 358.494 432.448 357.055 432.448 355.281 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
403.528 355.852 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
417.097 344.928 mo
417.097 346.535 417.097 348.498 417.097 350.283 cv
@
416.74 350.283 mo
417.097 352.068 li
417.633 350.283 li
cp
@
416.74 350.283 mo
417.097 352.068 li
417.633 350.283 li
f
360.87 330.827 mo
362.119 331.362 363.19 331.898 364.083 332.076 cv
374.614 334.575 391.929 337.61 403.888 339.573 cv
@
403.174 339.93 mo
404.959 339.752 li
403.353 339.038 li
cp
@
403.174 339.93 mo
404.959 339.752 li
403.353 339.038 li
f
378.541 330.827 mo
379.612 331.362 380.683 331.898 381.576 332.076 cv
388.002 334.04 398.355 336.896 406.209 338.859 cv
@
405.495 339.038 mo
407.28 339.216 li
405.673 338.145 li
cp
@
405.495 339.038 mo
407.28 339.216 li
405.673 338.145 li
f
396.034 330.648 mo
399.961 332.79 405.495 335.646 409.957 337.967 cv
@
409.6 338.324 mo
411.385 338.681 li
409.957 337.431 li
cp
@
409.6 338.324 mo
411.385 338.681 li
409.957 337.431 li
f
410.85 331.719 mo
411.742 333.326 412.992 335.289 414.241 337.074 cv
@
413.884 337.253 mo
415.134 338.502 li
414.598 336.717 li
cp
@
413.884 337.253 mo
415.134 338.502 li
414.598 336.717 li
f
423.345 331.719 mo
422.452 333.326 421.203 335.289 419.953 337.074 cv
@
419.596 336.717 mo
419.061 338.502 li
420.31 337.253 li
cp
@
419.596 336.717 mo
419.061 338.502 li
420.31 337.253 li
f
438.16 330.648 mo
434.233 332.79 428.7 335.646 424.237 337.967 cv
@
424.237 337.431 mo
422.809 338.681 li
424.594 338.324 li
cp
@
424.237 337.431 mo
422.809 338.681 li
424.594 338.324 li
f
455.653 330.827 mo
454.582 331.362 453.511 331.719 452.619 332.076 cv
446.371 334.04 436.197 336.896 428.521 338.859 cv
@
428.521 338.324 mo
426.915 339.216 li
428.7 339.216 li
cp
@
428.521 338.324 mo
426.915 339.216 li
428.7 339.216 li
f
473.325 330.827 mo
472.075 331.362 471.004 331.898 470.112 332.076 cv
459.58 334.397 442.801 337.431 430.842 339.395 cv
@
430.842 338.859 mo
429.235 339.752 li
431.02 339.752 li
cp
@
430.842 338.859 mo
429.235 339.752 li
431.02 339.752 li
f
363.012 369.026 mo
363.012 366.857 359.815 365.099 355.872 365.099 cv
351.929 365.099 348.732 366.857 348.732 369.026 cv
348.732 371.194 351.929 372.952 355.872 372.952 cv
359.815 372.952 363.012 371.194 363.012 369.026 cv
@
363.012 369.026 mo
363.012 366.857 359.815 365.099 355.872 365.099 cv
351.929 365.099 348.732 366.857 348.732 369.026 cv
348.732 371.194 351.929 372.952 355.872 372.952 cv
359.815 372.952 363.012 371.194 363.012 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
351.221 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
351.176 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
404.959 357.245 mo
393.178 359.208 374.971 362.421 364.083 364.92 cv
363.547 365.099 362.833 365.277 362.119 365.634 cv
@
362.476 364.92 mo
361.048 366.17 li
362.833 365.813 li
cp
@
362.476 364.92 mo
361.048 366.17 li
362.833 365.813 li
f
380.505 369.026 mo
380.505 366.857 377.308 365.099 373.365 365.099 cv
369.422 365.099 366.225 366.857 366.225 369.026 cv
366.225 371.194 369.422 372.952 373.365 372.952 cv
377.308 372.952 380.505 371.194 380.505 369.026 cv
@
380.505 369.026 mo
380.505 366.857 377.308 365.099 373.365 365.099 cv
369.422 365.099 366.225 366.857 366.225 369.026 cv
366.225 371.194 369.422 372.952 373.365 372.952 cv
377.308 372.952 380.505 371.194 380.505 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
368.714 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
368.669 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
407.28 357.78 mo
399.426 359.922 388.359 362.778 381.576 364.92 cv
381.219 365.099 380.683 365.277 380.326 365.456 cv
@
379.969 365.099 mo
378.541 366.17 li
380.326 365.991 li
cp
@
379.969 365.099 mo
378.541 366.17 li
380.326 365.991 li
f
397.998 369.026 mo
397.998 366.857 394.801 365.099 390.858 365.099 cv
386.915 365.099 383.718 366.857 383.718 369.026 cv
383.718 371.194 386.915 372.952 390.858 372.952 cv
394.801 372.952 397.998 371.194 397.998 369.026 cv
@
397.998 369.026 mo
397.998 366.857 394.801 365.099 390.858 365.099 cv
386.915 365.099 383.718 366.857 383.718 369.026 cv
383.718 371.194 386.915 372.952 390.858 372.952 cv
394.801 372.952 397.998 371.194 397.998 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
386.207 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
386.162 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
411.385 358.316 mo
407.28 360.458 401.746 363.314 397.641 365.634 cv
@
397.641 365.099 mo
396.213 366.348 li
397.998 365.991 li
cp
@
397.641 365.099 mo
396.213 366.348 li
397.998 365.991 li
f
415.491 369.026 mo
415.491 366.857 412.294 365.099 408.351 365.099 cv
404.408 365.099 401.211 366.857 401.211 369.026 cv
401.211 371.194 404.408 372.952 408.351 372.952 cv
412.294 372.952 415.491 371.194 415.491 369.026 cv
@
415.491 369.026 mo
415.491 366.857 412.294 365.099 408.351 365.099 cv
404.408 365.099 401.211 366.857 401.211 369.026 cv
401.211 371.194 404.408 372.952 408.351 372.952 cv
412.294 372.952 415.491 371.194 415.491 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
403.7 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
403.655 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
415.134 358.494 mo
414.241 360.101 412.813 362.064 411.742 363.849 cv
@
411.385 363.492 mo
410.85 365.277 li
412.099 364.028 li
cp
@
411.385 363.492 mo
410.85 365.277 li
412.099 364.028 li
f
432.984 369.026 mo
432.984 366.857 429.787 365.099 425.844 365.099 cv
421.901 365.099 418.704 366.857 418.704 369.026 cv
418.704 371.194 421.901 372.952 425.844 372.952 cv
429.787 372.952 432.984 371.194 432.984 369.026 cv
@
432.984 369.026 mo
432.984 366.857 429.787 365.099 425.844 365.099 cv
421.901 365.099 418.704 366.857 418.704 369.026 cv
418.704 371.194 421.901 372.952 425.844 372.952 cv
429.787 372.952 432.984 371.194 432.984 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
421.193 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
421.148 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
419.061 358.494 mo
419.953 360.101 421.381 362.064 422.452 363.849 cv
@
422.095 364.028 mo
423.345 365.277 li
422.809 363.492 li
cp
@
422.095 364.028 mo
423.345 365.277 li
422.809 363.492 li
f
450.477 369.026 mo
450.477 366.857 447.28 365.099 443.337 365.099 cv
439.394 365.099 436.197 366.857 436.197 369.026 cv
436.197 371.194 439.394 372.952 443.337 372.952 cv
447.28 372.952 450.477 371.194 450.477 369.026 cv
@
450.477 369.026 mo
450.477 366.857 447.28 365.099 443.337 365.099 cv
439.394 365.099 436.197 366.857 436.197 369.026 cv
436.197 371.194 439.394 372.952 443.337 372.952 cv
447.28 372.952 450.477 371.194 450.477 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
438.686 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
438.641 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
422.809 358.316 mo
426.915 360.458 432.448 363.314 436.554 365.634 cv
@
436.197 365.991 mo
437.982 366.348 li
436.554 365.099 li
cp
@
436.197 365.991 mo
437.982 366.348 li
436.554 365.099 li
f
467.97 369.026 mo
467.97 366.857 464.773 365.099 460.83 365.099 cv
456.887 365.099 453.69 366.857 453.69 369.026 cv
453.69 371.194 456.887 372.952 460.83 372.952 cv
464.773 372.952 467.97 371.194 467.97 369.026 cv
@
467.97 369.026 mo
467.97 366.857 464.773 365.099 460.83 365.099 cv
456.887 365.099 453.69 366.857 453.69 369.026 cv
453.69 371.194 456.887 372.952 460.83 372.952 cv
464.773 372.952 467.97 371.194 467.97 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
456.179 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
456.134 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
426.736 357.78 mo
434.769 359.922 445.657 362.778 452.619 364.92 cv
453.154 365.099 453.868 365.456 454.582 365.813 cv
@
453.868 365.991 mo
455.653 366.348 li
454.225 365.099 li
cp
@
453.868 365.991 mo
455.653 366.348 li
454.225 365.099 li
f
485.463 369.026 mo
485.463 366.857 482.266 365.099 478.323 365.099 cv
474.38 365.099 471.183 366.857 471.183 369.026 cv
471.183 371.194 474.38 372.952 478.323 372.952 cv
482.266 372.952 485.463 371.194 485.463 369.026 cv
@
485.463 369.026 mo
485.463 366.857 482.266 365.099 478.323 365.099 cv
474.38 365.099 471.183 366.857 471.183 369.026 cv
471.183 371.194 474.38 372.952 478.323 372.952 cv
482.266 372.952 485.463 371.194 485.463 369.026 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
473.672 368.169 mo
(DCT_1D)
[1.80423 1.66681 1.52689 1.24951 1.24948 0 ]xsh
473.627 371.025 mo
(I/O: 8->8)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
429.235 357.245 mo
441.016 359.387 459.045 362.421 470.112 364.92 cv
470.647 365.099 471.361 365.277 472.075 365.634 cv
@
471.361 365.813 mo
473.146 366.17 li
471.718 364.92 li
cp
@
471.361 365.813 mo
473.146 366.17 li
471.718 364.92 li
f
423.702 382.77 mo
423.702 380.996 416.829 379.557 408.351 379.557 cv
399.873 379.557 393 380.996 393 382.77 cv
393 384.544 399.873 385.983 408.351 385.983 cv
416.829 385.983 423.702 384.544 423.702 382.77 cv
@
423.702 382.77 mo
423.702 380.996 416.829 379.557 408.351 379.557 cv
399.873 379.557 393 380.996 393 382.77 cv
393 384.544 399.873 385.983 408.351 385.983 cv
416.829 385.983 423.702 384.544 423.702 382.77 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
394.782 383.341 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 .624725 1.24951 .624756 1.24948 .624756 1.24951 .624756 1.24948 .624756 1.24951 
.624725 1.24951 0 ]xsh
414.598 398.657 mo
414.598 396.488 409.484 394.73 403.174 394.73 cv
396.865 394.73 391.75 396.488 391.75 398.657 cv
391.75 400.825 396.865 402.583 403.174 402.583 cv
409.484 402.583 414.598 400.825 414.598 398.657 cv
@
414.598 398.657 mo
414.598 396.488 409.484 394.73 403.174 394.73 cv
396.865 394.73 391.75 396.488 391.75 398.657 cv
391.75 400.825 396.865 402.583 403.174 402.583 cv
409.484 402.583 414.598 400.825 414.598 398.657 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
394.082 397.8 mo
(staticQuantization)
[.972107 .694702 1.10953 .694702 .694733 1.10953 1.80423 1.24951 1.10953 1.24948 .694733 .694702 
1.10953 1.10953 .694702 .694733 1.24951 0 ]xsh
397.229 400.656 mo
(I/O: 64->64)
[.832153 .694702 1.80426 .694702 .624756 1.24951 1.24951 .832123 1.40942 1.24951 0 ]xsh
407.28 385.983 mo
406.744 387.947 405.852 390.624 404.959 393.123 cv
@
404.602 392.945 mo
404.424 394.73 li
405.495 393.123 li
cp
@
404.602 392.945 mo
404.424 394.73 li
405.495 393.123 li
f
361.048 371.882 mo
362.119 372.417 363.19 372.953 364.083 373.131 cv
372.472 375.273 385.86 378.129 395.677 380.271 cv
@
395.32 380.628 mo
397.105 380.628 li
395.499 379.736 li
cp
@
395.32 380.628 mo
397.105 380.628 li
395.499 379.736 li
f
378.541 371.703 mo
379.612 372.239 380.683 372.774 381.576 373.131 cv
386.217 374.916 393.357 377.594 399.069 379.736 cv
@
398.533 380.093 mo
400.318 380.093 li
398.712 379.2 li
cp
@
398.533 380.093 mo
400.318 380.093 li
398.712 379.2 li
f
395.142 372.417 mo
397.641 374.202 400.675 376.523 403.174 378.486 cv
@
402.817 378.665 mo
404.424 379.557 li
403.353 378.129 li
cp
@
402.817 378.665 mo
404.424 379.557 li
403.353 378.129 li
f
408.351 373.131 mo
408.351 374.559 408.351 376.166 408.351 377.772 cv
@
407.994 377.772 mo
408.351 379.557 li
408.886 377.772 li
cp
@
407.994 377.772 mo
408.351 379.557 li
408.886 377.772 li
f
421.56 372.417 mo
419.061 374.202 416.026 376.523 413.527 378.486 cv
@
413.349 378.129 mo
412.278 379.557 li
413.884 378.665 li
cp
@
413.349 378.129 mo
412.278 379.557 li
413.884 378.665 li
f
437.982 371.703 mo
436.911 372.239 435.84 372.774 435.126 373.131 cv
430.485 374.916 423.345 377.594 417.633 379.557 cv
@
417.99 379.022 mo
416.383 379.914 li
418.168 379.914 li
cp
@
417.99 379.022 mo
416.383 379.914 li
418.168 379.914 li
f
455.653 371.882 mo
454.582 372.417 453.511 372.953 452.619 373.131 cv
444.051 375.273 430.663 378.129 420.846 380.271 cv
@
421.024 379.736 mo
419.418 380.628 li
421.203 380.628 li
cp
@
421.024 379.736 mo
419.418 380.628 li
421.203 380.628 li
f
473.325 371.882 mo
472.075 372.417 471.004 372.953 470.112 373.131 cv
457.26 375.809 436.375 378.843 422.452 380.807 cv
@
422.988 380.271 mo
421.203 380.985 li
422.988 381.164 li
cp
@
422.988 380.271 mo
421.203 380.985 li
422.988 381.164 li
f
408.529 413.115 mo
408.529 411.341 403.894 409.902 398.176 409.902 cv
392.459 409.902 387.824 411.341 387.824 413.115 cv
387.824 414.889 392.459 416.328 398.176 416.328 cv
403.894 416.328 408.529 414.889 408.529 413.115 cv
@
408.529 413.115 mo
408.529 411.341 403.894 409.902 398.176 409.902 cv
392.459 409.902 387.824 411.341 387.824 413.115 cv
387.824 414.889 392.459 416.328 398.176 416.328 cv
403.894 416.328 408.529 414.889 408.529 413.115 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
389.605 413.686 mo
(roundrobin\(1,63\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 1.24948 0 ]xsh
401.746 402.762 mo
401.211 404.547 400.497 406.511 399.783 408.296 cv
@
399.426 408.117 mo
399.247 409.902 li
400.318 408.296 li
cp
@
399.426 408.117 mo
399.247 409.902 li
400.318 408.296 li
f
391.036 428.823 mo
391.036 425.471 383.524 422.754 374.257 422.754 cv
364.991 422.754 357.478 425.471 357.478 428.823 cv
357.478 432.175 364.991 434.892 374.257 434.892 cv
383.524 434.892 391.036 432.175 391.036 428.823 cv
@
391.036 428.823 mo
391.036 425.471 383.524 422.754 374.257 422.754 cv
364.991 422.754 357.478 425.471 357.478 428.823 cv
357.478 432.175 364.991 434.892 374.257 434.892 cv
383.524 434.892 391.036 432.175 391.036 428.823 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
361.214 426.538 mo
(IntegerDifferenceEncoder)
[.832153 1.24948 .694733 1.10953 1.24948 1.10953 .832153 1.80423 .694733 .832153 .832153 1.1095 
.832153 1.10953 1.24948 1.10953 1.10953 1.52686 1.24951 1.10953 1.24948 1.24951 1.10953 0 
]xsh
369.562 429.394 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
360.444 432.25 mo
(*** PEEKS 1 AHEAD ***)
[1.24951 1.24948 1.24951 .624756 1.38943 1.52686 1.52689 1.80423 1.38947 .624725 1.24951 .624756 
1.80423 1.80423 1.52689 1.80423 1.80426 .624725 1.24951 1.24951 0 ]xsh
393.714 415.971 mo
390.858 417.756 387.288 420.255 383.896 422.397 cv
@
383.539 422.04 mo
382.29 423.468 li
384.075 422.933 li
cp
@
383.539 422.04 mo
382.29 423.468 li
384.075 422.933 li
f
408.529 428.823 mo
408.529 426.654 405.333 424.896 401.389 424.896 cv
397.446 424.896 394.249 426.654 394.249 428.823 cv
394.249 430.992 397.446 432.75 401.389 432.75 cv
405.333 432.75 408.529 430.992 408.529 428.823 cv
@
408.529 428.823 mo
408.529 426.654 405.333 424.896 401.389 424.896 cv
397.446 424.896 394.249 426.654 394.249 428.823 cv
394.249 430.992 397.446 432.75 401.389 432.75 cv
405.333 432.75 408.529 430.992 408.529 428.823 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
397.502 427.966 mo
(Identity)
[.832153 1.24948 1.10953 1.24951 .694702 .694733 .694733 0 ]xsh
396.694 430.822 mo
(I/O: 1->1)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
398.89 416.328 mo
399.247 418.292 399.783 420.791 400.14 423.111 cv
@
399.604 423.111 mo
400.497 424.718 li
400.497 422.933 li
cp
@
399.604 423.111 mo
400.497 424.718 li
400.497 422.933 li
f
384.61 444.531 mo
384.61 442.757 379.975 441.318 374.257 441.318 cv
368.54 441.318 363.904 442.757 363.904 444.531 cv
363.904 446.305 368.54 447.744 374.257 447.744 cv
379.975 447.744 384.61 446.305 384.61 444.531 cv
@
384.61 444.531 mo
384.61 442.757 379.975 441.318 374.257 441.318 cv
368.54 441.318 363.904 442.757 363.904 444.531 cv
363.904 446.305 368.54 447.744 374.257 447.744 cv
379.975 447.744 384.61 446.305 384.61 444.531 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
365.686 445.102 mo
(roundrobin\(1,63\))
[.832153 1.24948 1.24951 1.24951 1.24948 .832153 1.24951 1.24948 .694733 1.24951 .832123 1.24951 
.624756 1.24951 1.24948 0 ]xsh
370.687 458.275 mo
370.687 456.107 365.972 454.349 360.156 454.349 cv
354.34 454.349 349.624 456.107 349.624 458.275 cv
349.624 460.444 354.34 462.202 360.156 462.202 cv
365.972 462.202 370.687 460.444 370.687 458.275 cv
@
370.687 458.275 mo
370.687 456.107 365.972 454.349 360.156 454.349 cv
354.34 454.349 349.624 456.107 349.624 458.275 cv
349.624 460.444 354.34 462.202 360.156 462.202 cv
365.972 462.202 370.687 460.444 370.687 458.275 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
351.967 457.419 mo
(ZigZagOrdering)
[1.52686 .694733 1.24951 1.52686 1.10953 1.24951 1.80423 .832153 1.24948 1.10953 .832153 .694733 
1.24948 0 ]xsh
354.211 460.275 mo
(I/O: 64->64)
[.832153 .694702 1.80426 .694702 .624756 1.24951 1.24951 .832123 1.40942 1.24951 0 ]xsh
371.044 447.566 mo
369.259 449.351 367.117 451.493 365.332 453.278 cv
@
364.975 452.921 mo
364.083 454.527 li
365.689 453.635 li
cp
@
364.975 452.921 mo
364.083 454.527 li
365.689 453.635 li
f
374.257 434.892 mo
374.257 436.499 374.257 438.105 374.257 439.712 cv
@
373.9 439.533 mo
374.257 441.318 li
374.793 439.533 li
cp
@
373.9 439.533 mo
374.257 441.318 li
374.793 439.533 li
f
397.284 432.215 mo
395.856 433.286 394.249 434.178 393.178 434.892 cv
389.965 436.677 385.324 438.998 381.397 441.14 cv
@
381.219 440.783 mo
379.791 441.854 li
381.576 441.497 li
cp
@
381.219 440.783 mo
379.791 441.854 li
381.576 441.497 li
f
353.73 461.488 mo
351.409 462.559 348.732 463.452 346.768 463.809 cv
329.632 466.486 300.358 469.342 283.401 470.77 cv
@
283.579 470.235 mo
281.794 470.949 li
283.579 471.127 li
cp
@
283.579 470.235 mo
281.794 470.949 li
283.579 471.127 li
f
285.543 500.401 mo
285.543 498.233 278.59 496.474 270.013 496.474 cv
261.437 496.474 254.484 498.233 254.484 500.401 cv
254.484 502.57 261.437 504.328 270.013 504.328 cv
278.59 504.328 285.543 502.57 285.543 500.401 cv
@
285.543 500.401 mo
285.543 498.233 278.59 496.474 270.013 496.474 cv
261.437 496.474 254.484 498.233 254.484 500.401 cv
254.484 502.57 261.437 504.328 270.013 504.328 cv
278.59 504.328 285.543 502.57 285.543 500.401 cv
1 gry
f
0 gry
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
256.895 499.545 mo
(JPEGByteStream_Creator)
[.972107 1.38943 1.52686 1.80426 1.66681 1.24948 .694733 1.10953 1.38943 .694733 .832123 1.10953 
1.10953 1.94421 1.24951 1.66681 .832153 1.1095 1.10953 .694733 1.24948 0 ]xsh
259.905 502.401 mo
(I/O: [192,*]->[48,*])
[.832153 .694702 1.80426 .694702 .624756 .832153 1.24951 1.24948 1.24951 .624756 1.24948 .832153 
.832153 1.40942 .832153 1.24951 1.24948 .624756 1.24951 0 ]xsh
270.013 489.87 mo
270.013 491.298 270.013 492.904 270.013 494.511 cv
@
269.656 494.511 mo
270.013 496.296 li
270.549 494.511 li
cp
@
269.656 494.511 mo
270.013 496.296 li
270.549 494.511 li
f
277.51 515.038 mo
277.51 512.87 274.154 511.111 270.013 511.111 cv
265.873 511.111 262.516 512.87 262.516 515.038 cv
262.516 517.207 265.873 518.965 270.013 518.965 cv
274.154 518.965 277.51 517.207 277.51 515.038 cv
@
277.51 515.038 mo
277.51 512.87 274.154 511.111 270.013 511.111 cv
265.873 511.111 262.516 512.87 262.516 515.038 cv
262.516 517.207 265.873 518.965 270.013 518.965 cv
274.154 518.965 277.51 517.207 277.51 515.038 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSB+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B5D6EF221D1F535C4E993C98F3C3E8C6F16C822BD2743EB782
1EB7D4579AED89E03CEC92EC38206B161850892F887AD5C7930EF4023F5FCBE1
1EE2208AD3E1BD1F677AACB74B3CC3710F142D0BA108A85A0E4D5D852306CED1
4B5207F2E46DF8D6DC78FEF21F895C03164E67E0D168BBFB54CA35ABBA9BABB6
1C9F3A4AAD762B0057729986D9DB719BDE2CE08FDB5B50F7244A0094B314415C
47AAC538D3C6C8E1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSB+TimesNewRomanPSMT /Encoding get
dup 87 /W put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSB+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/.notdef /six /.notdef /eight /nine /colon 3{/.notdef}rp /greater 
2{/.notdef}rp /A /B /C /D /E /F /G 
/H /I /J /K /L 2{/.notdef}rp /O /P 
/Q /R /S /T /U /.notdef /W /X 
/Y /Z /bracketleft /.notdef /bracketright /.notdef /underscore /.notdef 
/a /b /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/.notdef /r /s /t /u 3{/.notdef}rp /y /z 
133{/.notdef}rp]
LTFDSB+TimesNewRomanPSMT nf
LTFDSB+TimesNewRomanPSMT*1 [2.499 0 0 -2.499 0 0 ]msf
264.808 514.182 mo
(FileWriter)
[1.38943 .694733 .694733 1.1095 2.35904 .832123 .694733 .694733 1.1095 0 ]xsh
265.318 517.038 mo
(I/O: 1->0)
[.832153 .694702 1.80426 .694702 .624756 1.24951 .832153 1.40942 0 ]xsh
270.013 504.507 mo
270.013 505.935 270.013 507.541 270.013 509.148 cv
@
269.656 509.148 mo
270.013 510.933 li
270.549 509.148 li
cp
@
269.656 509.148 mo
270.013 510.933 li
270.549 509.148 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
true set_gvm
/LTFDSB+TimesNewRomanPSMT*1 uf
/LTFDSB+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
