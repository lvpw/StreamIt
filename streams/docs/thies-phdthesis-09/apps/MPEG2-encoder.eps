%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: MPEG2 encoder.pdf
%%Creator: Adobe Acrobat 8.0
%%For: Bill Thies
%%CreationDate: 12/5/2008, 11:09:40 PM
%%BoundingBox: 0 0 468 426
%%HiResBoundingBox: 0 0 468 426
%%CropBox: 0 0 468 426
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1622 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GNU Ghostscript 7.05"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -426 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 426 li
468 426 li
468 0 li
cp
clp
[1 0 0 1 -36 0 ]ct
gsave
35 427 mo
504 427 li
504 0 li
35 0 li
cp
clp
.0887 lw
0 lc
0 lj
1 ml
[] 0 dsh
true sadj
36.7096 425.29 mo
503.538 425.29 li
503.538 .949341 li
36.7096 .949341 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988, 1990, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Times New Roman is a trademark of the Monotype Corporation, registered in the US Patent and Trademark Office and may be registered in certain other jurisdictions.) def
/Weight (Roman) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 66 /B put
dup 69 /E put
dup 71 /G put
dup 77 /M put
dup 80 /P put
dup 111 /o put
dup 116 /t put
def
/UniqueID 44335 def
/FontBBox {-167 -250 1009 878} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 0 662 677 447 461 694 694] def
/OtherBlues [384 384 -216 -213] def
/FamilyBlues [-15 0 662 677 447 461 694 694] def
/FamilyOtherBlues [384 384 -216 -213] def
/StdHW [36] def
/StdVW [81] def
/StemSnapH [36 43] def
/StemSnapV [81 94] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/B <1C60D8A8C9B64EDFF4D0475F24A0512970A16CFF6BFBD1A1A12D07A62723
BF27DBD01B60ACEC3C9DB4E627348B4F9C96D245E2397B81856FE7B9149C0D88
A0B1C89901A357B578317FC0F49D1050D95CF70B7F7A7C5741B1B644F20C16DB
8F1BD7E6C45546C9302E6AD757CA73E92696A658F8A903A2E6B5FA3BE24637C3
3393411FB0E113E4BDFEBF11B4E90F57471B306273B2241C3C23457DA84CC16B
22781151F6DE159B155116967F7D53FA1DDDDF14084F0631BA1C08300F50E5BA
9DC336D8349BEA3371DCAFDF658781D6> |-
/E <1C60D8A8C9B7D8BE1621F7F8DAEB9FA9CBAFC8F4F4D756F2191C830A0E4A
58F87E3DDE67D49AF36DDF5F1FB2D74CAA0A1A0C249C8C349E149A4722F92BF7
61EFA3C2F9EC864F14F3A3AC121B867A3642166A4B07211381D27468A1D61050
1454C0DD1325D701AB4ADD917E16E61514B3C2631A525AEC590FB4C52AA73BF6
506DADDCC92C07368DF00A34F77E6ED1C2061C6913B4C24C30A64720E240E09F
9DD8F5EF76F17E9EEAE569D41B7D8D946B46BFFC> |-
/G <1C60D8A8C9B6079F258D65BC2350A422AEB94BCF2D0F96794C8438625C31
5D886EF37D4AC3C2F1E1338E25B58FA7772E0B9E5E3E726371665F3474CE0B82
EB9690B23BE3168D2BE4F6B0140B5077B79CDED50A140417505C243C7D98789B
5883DC2727B8882D3854E49A79F785598024348D171E79D4C21E1DA76E252BE9
80994299353DC669631C102ABE82C3B639BE771465159436AABE7CB91BD8812B
5152BA3433FC2701117F14E8CD24269DDA8CC4248C3859> |-
/M <1C60D8A8C9B59F85E7C3D982C036A83A051CFEB65CDD644D44695DA87381
2F9E0DA4474B3DF6D63B3341F86CDE23D0512CA425D085DC5BA255E6B3240439
E201FEC100F452F18CDA5E088317BF79F4C8FC952A839FE77A57A286C006FAF4
6CE1F964CD62165C424C020FEAD96AC86FEFFC256D> |-
/P <1C60D8A8C9B7EF322B10A2A8DE6EF0A6CE60E86B1DF5C68015667A2338DB
07BCF91C9D8DCCB5967A656E7EB6651B3E305A306DA1BB8C1BAEECFC60DC00D8
8AEC56E3DF7455D57CB9BB0CC9A32704D4F0F1C39C5B2EDC70F42754CACE7253
FF5FDAE4B675FFF987E22613E24B8956EFA9C2C5B9AC406D966F459601B2046A
C9E54A3BB37C45EDEB> |-
/o <1C60D8A8C9B7A73DE3E5E50AD058CB1758CCEC8536B108DD66A8D296857C
B3303D78514A78D06E85FDA9E8085F8D9525195AE96992EAA1E95B40679F85C3
FC4165030DF121E13968768CFE641E50E297E68778A63ACC6DD3> |-
/t <1C60D8A8C9B854D0DAE0E17091F63D902F15B1C5B2DD1246F40FD3EC3264
448E2BE336EDCDEB1DFC2F9412B18B341EC1F740C5E1DC1152FC3909509AD9AD
D2933ADE9A3C5AD03C26776EECF232> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/LTFDSK+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 2{/.notdef}rp /E /.notdef /G 5{/.notdef}rp /M 
2{/.notdef}rp /P 30{/.notdef}rp /o 4{/.notdef}rp /t 139{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
37.3593 1.94294 mo
(BMPtoMPEG)
[.82827 1.10395 .690441 .345219 .620903 1.10395 .690437 .758732 0 ]xsh
188.741 50.444 mo
264.491 50.444 li
264.491 3.07816 li
188.741 3.07816 li
cp
1 gry
@
190.161 44.058 mo
207.724 44.058 li
207.724 9.46497 li
190.161 9.46497 li
cp
@
208.61 44.058 mo
226.173 44.058 li
226.173 9.46497 li
208.61 9.46497 li
cp
@
227.06 44.058 mo
244.623 44.058 li
244.623 9.46497 li
227.06 9.46497 li
cp
@
245.509 44.058 mo
263.072 44.058 li
263.072 9.46497 li
245.509 9.46497 li
cp
@
38.1288 130.097 mo
502.119 130.097 li
502.119 51.154 li
38.1288 51.154 li
cp
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77FE2948016809A16C1383D80AA8513D781288589A82DC94A
5DA0D421DEC176AEE608ECA472235D24D269E725C25D06B3582797B60EEBA4C4
46D10FC22341077B09EDB4E12CA0359E24628B46BB6E10727940> |-
/e <1C60D8A8C9B77FE29496D1FBB47314D6F46DA3EBFEC342F3B983185301EF
B706EB7833A9B3F14CD479AC93E43031BC63CB7FFE55CD73AABA1B6DFA935F49
683C721ECBA275DBC565AC78A07D0C5329E18D2789C058EC6367BBAECDF40AEE> |-
/g <1C60D8A8C9B7A73D85D7E997B7B5DF7D7777AF52CC5562CB6E990E974840
46648599A1D9C4DB63B2EA37B7BBC0C3039255635B40FAB067F562720BFA98A6
8AA5F28640EAE52B9FE1BA9F5F2A49A2F977CAB7D5C25E3626BAA2BEB9E431EA
60B6FFDB96CDFE0161651CB3C7DDAAF79341AA1B63131C7BD07B3EF7C547B329
2DEEC810138CCDC2FA69E1A2AD41097A54F4DBBBA72B1810538F2F0FBA5B3B54
046B0BB798F435A12098BB54904B4FA0166943538B1D7B8EA5970358CDBCC48E
31C506A3AAB0AC2519075E7791339AF09F8C1F93B0D81A9E5ED3B02D4C03B817
17F61566CDC855CB444B31FBC8E71F4A79E39CF6ED7B9B21E0269B8614410251
F072B930BD3C2C0B5BE3125CE4461E97B369DD7B68AF48B8706DE7D2976BB7A8
F7FA6E1A10F519A6E8E51022609E6B7A2E822DDCD222A999CAA520FD83CCB934
D41B4EF6E07BE85DFA424019E44CA0D51152EDBDE920B3C59D4A719415BD84E9
F231F0CBEF222AB9855B090598B4D01FCC8283B4EC699D2D8EDA681DF37E56EB
75FAFC019A1A3645CA60183B64A594CD3556BA6088F7C2AF3F05FDD0875B0187
C18BC8AC2785F74D85EFAA74EA4D56B1D0576FD461BA0B37199C> |-
/i <1C60D8A8C9B854D0F11440006C203BFFD1DEDCDE7CAD1373D75DB7315CFC
49A0833FA9D881419B9BEE01885373804535A66836A5115D3B942001E4A8D676
2EBA1D3CCCC2CED3DAC862D3F0398204E81D1C72BC10727D59A156997C9269F7
F9572E03A90C988E59FECA8B3BEBEE755CF420171B> |-
/n <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA6A1CED287131EA2B
D2E1E6E797441A36EF164B2E98EA0B7A662ADAA0C64D637EBFFAEDEE2D95D0C9
387D6E78EA7DBD0E03769EFADBB9E99820C3CA652E5CB84D6476DEB84D65355B
ED40D74AEE8C38DE38F7ADD1F45E132F9FCFA8357906BA1C9F825F576D022523
4E76> |-
/p <1C60D8A8C9B7A73D9AFACE39AE6BAA6E09D7322029CE296F526808097535
692942DF193E08360A1A27EB6A08251F7D53D3FA96D22918185F2823E13833F6
44411211FB9E60C91D24768368C1EE71DFEA1AF8285D596D61CE8A067C14BC2E
E1974A4DF14D782DBEDB8D2CE5673BB9634CC4945A7FA5A5E1B87E0F2D94F438
C21548DAE429B68406206429A87E1B462DA7A9D2> |-
/r <1C60D8A8C9B81F2C117020CA370F4EDA9CC5786DD9DE9EF42ACF1876A05B
D63AFC335B1B675841319B03439D25E5CD3513D8B1AF7C3213243E231585FDFB
23DF1B8599146D034A4E5D6FF06CCB4811E4D5773B1A3B8F6DC7EFA556C00470
2D769BB83004181BE21F0C2BFBE9C20E97FA9275EFEA6DCC374D4BC4F2DBC112
90AFF811640F86741723DE5B9796381D4326AE431F5D9C5CAED9> |-
/s <1C60D8A8C9B7361F4A5DC306676AF4C8647FF3053FF45CCDDBEB7E9B9050
12DA1DE9402C8DB245C98EF5B89AF8B307871A82029AB9C9383D498ABA5BCF42
FD3EBA06E16095068AAD2A24F29F66CD7BEDAF75E27B9E98183114BB708CEE9F
70B53D4922DAA331AE3A4B4FD1B5CD24EA574D8FE8D1E66E3ECF87407A13A679
B23887BDCEB1C164DC6CBF6472F4BC61E5FBABA972F7976EEBF3BC4B43DEE327
20F6A1A3C1878ACCA80EBBED76DEBD40C76FFC717243DC8D6CB182005A946D70
F948846138DEF539AD5BE615B04618EEB754F0DAF886F93D007AE786FB00955E
897D78D67615B1FA609D> |-
/u <1C60D8A8C9B7A73D96315394C03E2804B8D6B013BEE63C754B7DCD21D17D
EE183DDCCBE94C1E49FD4EEAD58EEB67E527D51D30B7569BBD690F10D18E5949
069889C638179D8480A9808D89F695AD05863E6AF7CC14732F1A0B4D904FA886
0DFB17262B8501BEF73C125F016588> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 117 /u put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 2{/.notdef}rp /E /.notdef /G 5{/.notdef}rp /M 
2{/.notdef}rp /P 18{/.notdef}rp /c /.notdef /e /.notdef /g 
/.notdef /i 4{/.notdef}rp /n /o /p /.notdef /r 
/s /t /u 138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
38.7408 52.147 mo
(PicturePreprocessing)
[.690441 .345219 .551342 .345219 .620899 .413513 .551338 .690441 .413509 .551342 .620899 .413509 
.620903 .551338 .551342 .483051 .483047 .345222 .620899 0 ]xsh
50.9903 124.42 mo
500.699 124.42 li
500.699 57.5402 li
50.9903 57.5402 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7D8BE16B2E353E3300378A32828826C127DE3D6A3769F5542
8119DC48F4B555CFAC557278838F3EC6C5F7B64F6B44DFEFCBC8AF8174185170
E165701BB15CF1CB88629A978EF6D86FB8> |-
/a <1C60D8A8C9B77FE294851E8312417598C86A6256F86C70DE2C7AFF06FCE3
4BADEE28F3B8D02D3C60352D19569C8A11355E1235678015637DF6C7E4A05E8E
A8AB948BF076D376030D74D5BF1D25D6B1436CBFF068CFC521B6EF1846E35D0E
2A4D1C4888BBA14114C326082B33961EF18B6F0B661AC7CDF50B0B0D80CC5ED8
71668C27B3C878E43E83D293BA1B1F771221D32DA7404867CEA1760CC79EAA61
6682686BC92138B01A5FF6B55D314BD1AA96EE89C141B8E9EB46C16F1B31BD66
B910EA6BBA> |-
/f <1C60D8A8C9B81F2C3AAA7F9332A1FC560AB2BC70F6F61F670AD82FC8B626
674790DAFBDF46077811E1DF38721CA7CA8FBC2C5E006E567037490710BD3A02
BCB7C7EDEC00C0FF3F7CF7FF144794FA5B0DC9D77482C00E98ABF65E83ECDA1A
E1009D> |-
/m <1C60D8A8C9B6FF86DEBE529995F26ADC252ABAF4F8ABCE39F6B951A24C86
82F3B72A552C5D46A333AAEC49746F27474921C947B29E9EEE21EF479E8AC4CB
A64B9B4BF4B54D7069EE8C71930A689A0AC30AA5DB406CB2F2DF67D1DFA36762
A8298043AAD8738E3C2E6D8E87DCF89210EA6A7696675667850CACB8BD85BF1A
9C23A6EB480778B459116760FD79DE8BA673C0A52BBAEAA003DFFA86FA6EC61F
B9955126552099FD6C946BD155266FCC648BAFF24A5063CAAF26> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 84 /T put
dup 97 /a put
dup 102 /f put
dup 109 /m put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 2{/.notdef}rp /E /.notdef /G 5{/.notdef}rp /M 
2{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 
/.notdef /e /f /g /.notdef /i 3{/.notdef}rp /m 
/n /o /p /.notdef /r /s /t /u 
138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
51.5778 58.5339 mo
(TransformPicture)
[.758732 .413509 .551338 .620903 .483047 .413513 .620899 .413509 .966122 .690437 .345222 .551338 
.345222 .620899 .413509 0 ]xsh
52.4095 123.71 mo
499.28 123.71 li
499.28 67.6516 li
52.4095 67.6516 li
cp
1 gry
@
53.8287 109.607 mo
461.672 109.607 li
461.672 74.4818 li
53.8287 74.4818 li
cp
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7EF320E2EFDBCAC7BC76D0C8C1FC222AFE4F464C56D04CD48
5F140DB725EC46F068943283C9A43A14A852E22E87331165F602FD95AC890BE8
83DAD7F63C31168B480A95AC244C28C8F37F118A399681DB4822661628FBDA87
D99D0367C013E32688035EC31A5C3FC194FEB20C4FCD84A9EB3547C0D5A421A0
1B87DFDA871D7919B7251A9EC84A645CA15425845057F189EC65A90DD4028CC5
B10853B05E6F7AF9E84AC6588CDCE11B6EF766B248A8304E38964E579F6EF2DC
2D4971ED042868564E8E982FE2B2> |-
/b <1C60D8A8C9B7A73D9AFACE39B0C8DF9EB6083858E657E6E95D2C42AE2914
EB3C7C6FCB5E9F471C2055D213C552ACA7BC04F55BA26F3B77D8DFB74AC132BE
41DB935437CE3B007C16B65D849E2E6D1C61659F2699A17D9AEEDDD0EBC23EB8
70A7377D2AC9DB56D0296131C3A8254097E85D96> |-
/k <1C60D8A8C9B7A73D926FE6D4B51E06A6595F3746ABEED643EB32E31FC5C1
56BE33D279A48C7177D38FEEE25BE39FA8184693C31C3DD98D1AF000E30B25B8
F0029B9D7DAB8132C06DAF7AF8346F39C9E4C7E69A448E350100342A6E22A322
C4DEF85ED9405E1A9FCE65A5B4B5084195D644BBC14B138BCD62C9C4EFF347DE
06C9D1F36BBC04C3531EBEE642B499C247> |-
/l <1C60D8A8C9B854D0F11440006C203A85DCEB221B1066666FE3EA25083329
14AA399D2F81DB0653B503D4FAECFE70883AAAA2B3345C999517D89696069E61
D192EBD1D92DDA82> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 83 /S put
dup 98 /b put
dup 107 /k put
dup 108 /l put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 2{/.notdef}rp /E /.notdef /G 5{/.notdef}rp /M 
2{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b 
/c /.notdef /e /f /g /.notdef /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u 138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
54.382 75.475 mo
(MacroBlockScrambler)
[1.10395 .551342 .551338 .413509 .620903 .82827 .345219 .620903 .551338 .620899 .690441 .551342 
.413509 .551338 .966122 .620899 .345222 .551338 0 ]xsh
55.2479 102.777 mo
72.8105 102.777 li
72.8105 81.3116 li
55.2479 81.3116 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDFB39C8FA0E3107D39E1E26D40368A6A59D36B799EDDCB
A8AF8BCAEA2E296C5BB00979C4073082C4AC62DAAE27F25BE45DFF121DF075F7
3D37111C10DFF7C6BD4BFE8AE73B4FADB84F0E8B5722DEA1CA14F5AFDC440B45
4F635F5576E82C8F45782F1EDE0EC9CA59D48E4C0F81> |-
/D <1C60D8A8C9B6079F62AF7EE2124AC712AE5D5419E262A0C00C6163DFBCB2
A6FA65DDDD5062250DB8BBFB46EB35827750F9FCEE696526B20FE9266474B179
350945BBDAF7180FAB04D619EB38198FC722361E0B3B5E50F9017F19C7BDCABB
285F506A04FE32C63936689B1F9C81923B03440D57336303C59B59E8D3C0659D
33> |-
/d <1C60D8A8C9B7A73DE3E5E50523E6C3667B38E45A4C51E0FEC84C813AB373
8B83F58EEDF7211177C6639AD2CCECEBC1915AB857B5701E72700D0D163B5F2F
58E5A8B520D7ED7F9880D10C1A6AAC1DEF76C68CB623039F59365031342DE694
26167CDA4201402D972AF8016480B0CF8CBDDE4940ABCEFD4C2D5F2FE77DC410
2439C361CA6330A182E6FD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 67 /C put
dup 68 /D put
dup 100 /d put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B /C /D /E /.notdef /G 5{/.notdef}rp 
/M 2{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a 
/b /c /d /e /f /g /.notdef /i 
/.notdef /k /l /m /n /o /p /.notdef 
/r /s /t /u 138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
55.8156 82.3049 mo
(CollapsedDataParallel)
[.82827 .620899 .345222 .345219 .551342 .620899 .483051 .551338 .620903 .896561 .551338 .345222 
.551338 .690441 .551342 .413513 .551338 .345222 .345215 .551346 0 ]xsh
73.6975 102.777 mo
91.2601 102.777 li
91.2601 81.3116 li
73.6975 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
74.2652 82.3049 mo
(CollapsedDataParallel)
[.82827 .620903 .345215 .345222 .551338 .620903 .483047 .551346 .620895 .896561 .551346 .345215 
.551346 .690437 .551338 .413513 .551338 .345222 .345222 .551338 0 ]xsh
92.1471 102.777 mo
109.71 102.777 li
109.71 81.3116 li
92.1471 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
92.7148 82.3049 mo
(CollapsedDataParallel)
[.82827 .620903 .345215 .345222 .551338 .620903 .483047 .551346 .620895 .896561 .551346 .345215 
.551346 .690437 .551338 .413513 .551338 .345222 .345222 .551338 0 ]xsh
110.597 102.777 mo
128.16 102.777 li
128.16 81.3116 li
110.597 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
111.164 82.3049 mo
(CollapsedDataParallel)
[.82827 .620903 .345215 .345222 .551338 .620903 .483047 .551346 .620895 .896561 .551346 .345215 
.551346 .690437 .551338 .413513 .551338 .345222 .345222 .551338 0 ]xsh
129.046 102.777 mo
146.609 102.777 li
146.609 81.3116 li
129.046 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
129.614 82.3049 mo
(CollapsedDataParallel)
[.828278 .620895 .345215 .34523 .551331 .620911 .483047 .551331 .620911 .896561 .551331 .34523 
.551331 .690445 .551346 .413513 .551331 .345215 .34523 .551346 0 ]xsh
147.496 102.777 mo
165.059 102.777 li
165.059 81.3116 li
147.496 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
148.064 82.3049 mo
(CollapsedDataParallel)
[.828278 .620895 .345215 .34523 .551331 .620911 .483047 .551331 .620911 .896561 .551331 .34523 
.551331 .690445 .551346 .413498 .551346 .34523 .345215 .551331 0 ]xsh
165.945 102.777 mo
183.508 102.777 li
183.508 81.3116 li
165.945 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
166.513 82.3049 mo
(CollapsedDataParallel)
[.828278 .620895 .345215 .34523 .551331 .620911 .483047 .551331 .620911 .896561 .551331 .34523 
.551331 .690445 .551346 .413498 .551346 .34523 .345215 .551331 0 ]xsh
184.395 102.777 mo
201.958 102.777 li
201.958 81.3116 li
184.395 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
184.963 82.3049 mo
(CollapsedDataParallel)
[.828278 .620895 .345215 .34523 .551331 .620911 .483047 .551331 .620911 .896561 .551331 .34523 
.551331 .690445 .551346 .413513 .551331 .345215 .34523 .551346 0 ]xsh
202.845 102.777 mo
220.408 102.777 li
220.408 81.3116 li
202.845 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
203.412 82.3049 mo
(CollapsedDataParallel)
[.828278 .620895 .345215 .34523 .551331 .620911 .483047 .551331 .620911 .896561 .551331 .34523 
.551331 .690445 .551346 .413513 .551331 .345215 .34523 .551346 0 ]xsh
221.294 102.777 mo
238.857 102.777 li
238.857 81.3116 li
221.294 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
221.862 82.3049 mo
(CollapsedDataParallel)
[.828278 .620895 .345215 .34523 .551331 .620911 .483047 .551331 .620911 .896561 .551331 .34523 
.551331 .690445 .551346 .413498 .551346 .34523 .345215 .551331 0 ]xsh
239.744 102.777 mo
257.307 102.777 li
257.307 81.3116 li
239.744 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
240.312 82.3049 mo
(CollapsedDataParallel)
[.828278 .620895 .345215 .34523 .551331 .620911 .483047 .551331 .620911 .896561 .551331 .34523 
.551331 .690445 .551346 .413513 .551331 .345215 .34523 .551346 0 ]xsh
258.193 102.777 mo
275.756 102.777 li
275.756 81.3116 li
258.193 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
258.761 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
276.643 102.777 mo
294.206 102.777 li
294.206 81.3116 li
276.643 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
277.211 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
295.093 102.777 mo
312.656 102.777 li
312.656 81.3116 li
295.093 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
295.66 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
313.542 102.777 mo
331.105 102.777 li
331.105 81.3116 li
313.542 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
314.11 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
331.992 102.777 mo
349.555 102.777 li
349.555 81.3116 li
331.992 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
332.56 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
350.441 102.777 mo
368.004 102.777 li
368.004 81.3116 li
350.441 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
351.009 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
368.891 102.777 mo
386.454 102.777 li
386.454 81.3116 li
368.891 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
369.459 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
387.341 102.777 mo
404.904 102.777 li
404.904 81.3116 li
387.341 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
387.908 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
405.79 102.777 mo
423.353 102.777 li
423.353 81.3116 li
405.79 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
406.358 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
424.24 102.777 mo
441.803 102.777 li
441.803 81.3116 li
424.24 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
424.808 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
442.689 102.777 mo
460.252 102.777 li
460.252 81.3116 li
442.689 81.3116 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
443.257 82.3049 mo
(CollapsedDataParallel)
[.828278 .62088 .345245 .345215 .551331 .620911 .483032 .551361 .62088 .896576 .551331 .345215 
.551361 .69043 .551331 .413513 .551361 .345215 .345215 .551331 0 ]xsh
461.849 117.324 mo
479.412 117.324 li
479.412 75.4576 li
461.849 75.4576 li
cp
1 gry
@
480.298 117.324 mo
497.861 117.324 li
497.861 75.4576 li
480.298 75.4576 li
cp
@
78.2212 166.641 mo
123.281 166.641 li
123.281 146.417 li
78.2212 146.417 li
cp
@
71.8348 272.726 mo
195.394 272.726 li
195.394 177.64 li
71.8348 177.64 li
cp
@
73.254 267.05 mo
103.678 267.05 li
103.678 182.253 li
73.254 182.253 li
cp
0 gry
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
73.8762 183.246 mo
(MacroBlockEncode)
[1.10395 .551338 .551346 .413506 .620903 .82827 .345222 .620895 .551346 .620895 .758736 .620895 
.551338 .620903 .620903 0 ]xsh
74.6732 239.02 mo
102.259 239.02 li
102.259 184.381 li
74.6732 184.381 li
cp
1 gry
@
83.2771 232.634 mo
100.84 232.634 li
100.84 189.348 li
83.2771 189.348 li
cp
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DB9C4155FCF739F7C1974D5BF41CC3E8700100AE610
E49DF6B4C276649A8B3177B0F76FADB15EC55BD4BBD1CDF8C5F886738FFDBD44
2FF8A0594A170A20B9C3E13444FE4DC986DA862896B80FFA135FA164A257> |-
/underscore <1C60D8A8C9B7A73DCDBEB64DA5D4EE31FFCBE2EC06B4C4F1354
CB100A813> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 50 /two put
dup 95 /underscore put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[50{/.notdef}rp /two 15{/.notdef}rp /B /C /D /E /.notdef 
/G 5{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S /T 
10{/.notdef}rp /underscore /.notdef /a /b /c /d /e 
/f /g /.notdef /i /.notdef /k /l /m 
/n /o /p /.notdef /r /s /t /u 
138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
83.8119 190.342 mo
(DCT_2D_reference_fine)
[.896561 .82827 .758728 .620903 .620903 .896561 .620895 .413513 .551338 .413513 .551338 .413513 
.551338 .620903 .551338 .551338 .620903 .413506 .345222 .620903 0 ]xsh
80.9709 266.34 mo
101.549 266.34 li
101.549 248.068 li
80.9709 248.068 li
cp
1 gry
@
101.727 239.73 mo
193.975 239.73 li
193.975 182.252 li
101.727 182.252 li
cp
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B6079F005CDC6370483696E1EAFC944BD4E06D86DBD18EB735
2F45C381C0DF5B906978D128771DD089E21DCCBC0592B3A6BE45DFF941B3D9AF
82C0E5BBEE832081C600F8D424981C94A7921155A8C74A96B13AD2AF06E82571
B4060A57A3D45E0E99876FCE9C38AE3E4A7F8C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 86 /V put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[50{/.notdef}rp /two 15{/.notdef}rp /B /C /D /E /.notdef 
/G 5{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S /T 
/.notdef /V 8{/.notdef}rp /underscore /.notdef /a /b /c 
/d /e /f /g /.notdef /i /.notdef /k 
/l /m /n /o /p /.notdef /r /s 
/t /u 138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
102.29 183.246 mo
(MotionVectorEncode)
[1.10395 .620903 .345215 .345222 .620903 .620895 .896561 .551346 .551338 .345222 .620895 .413513 
.758728 .620903 .551338 .620903 .620895 0 ]xsh
113.258 203.097 mo
130.466 203.097 li
130.466 184.381 li
113.258 184.381 li
cp
1 gry
@
103.146 239.02 mo
192.556 239.02 li
192.556 205.757 li
103.146 205.757 li
cp
@
104.565 232.191 mo
183.863 232.191 li
183.863 213.032 li
104.565 213.032 li
cp
@
43.6282 385.021 mo
149.536 385.021 li
149.536 274.501 li
43.6282 274.501 li
cp
@
49.3937 378.634 mo
148.117 378.634 li
148.117 279.113 li
49.3937 279.113 li
cp
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6079F005CDFC8A94B75FD7D89F5577E741BA5E9223B5FB59E
3315C336CDEC6F323D18A178B38DCEDA9B451B37165385283368F94E5EC5086C
A620D2549B18425DA74331F96252E5D5358EE44D33B708D9B8822975F755BF6A
D18C81AA5BF9B47D39D0AFBBC3A6521D0B18D90963534584D1092363898607EF
C07B44A235786C96> |-
/F <1C60D8A8C9B7EF322B10A2A8DE6CF647A07CB452C54BD470E6C4C389B7AB
8653B88FE6E4626649FABCEAB5DAD30BD9C2A2F1F8512C1A1DC93BDB928A3688
B193ECEDB997255AB4DCBBC4BBB3FF147299B3653B9E76139CB6E91A13A47208
F2688B5C42863D22FFBF8FD8DF09F08A1966F6652461EEB3D18F0F0CB5B8E18D
6016409AA3D413D5FA051FCF9B4DFF0734259E7DCF> |-
/R <1C60D8A8C9B64EDFF4D0475F241567109AA60E358A72CDD6748BBE527383
3D9930EA16405C9FA084F4E606B7DF07A2CCABEF78658BA281F5D25760E71232
16C34541C223BEC48612BD7C0052F7AD27E210716125E9B30EDB889188D65976
1E4423BF9E66EB5CCCE83D82A2DB04554982E2E899847CA739A4B92152682375
567D18A66EABD5068029F8FB7424BADB87039D0F6B1530> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 65 /A put
dup 70 /F put
dup 82 /R put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[50{/.notdef}rp /two 14{/.notdef}rp /A /B /C /D /E 
/F /G 5{/.notdef}rp /M 2{/.notdef}rp /P /.notdef /R 
/S /T /.notdef /V 8{/.notdef}rp /underscore /.notdef /a 
/b /c /d /e /f /g /.notdef /i 
/.notdef /k /l /m /n /o /p /.notdef 
/r /s /t /u 138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
49.9196 280.106 mo
(DecodeAndSendBackReferenceFrame)
[.896561 .551342 .551338 .620899 .620903 .551338 .896561 .620903 .620899 .690441 .551338 .620899 
.620899 .828274 .551342 .551338 .620899 .828274 .551338 .413509 .551342 .413509 .551342 .620903 
.551338 .551338 .690445 .413506 .551338 .966125 0 ]xsh
50.8129 369.409 mo
146.698 369.409 li
146.698 281.242 li
50.8129 281.242 li
cp
@
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
51.4262 282.235 mo
(MacroBlockAndMotionVectorDecode)
[1.10395 .551342 .551338 .413509 .620903 .82827 .345219 .620899 .551342 .620899 .896561 .620903 
.620899 1.10395 .620899 .345222 .345219 .620899 .620899 .896564 .551338 .551338 .345222 .620895 
.413513 .896561 .551346 .551338 .620895 .620903 0 ]xsh
52.2321 363.023 mo
120.531 363.023 li
120.531 289.047 li
52.2321 289.047 li
cp
1 gry
@
53.6513 339.251 mo
119.112 339.251 li
119.112 304.037 li
53.6513 304.037 li
cp
@
55.0705 332.422 mo
98.7109 332.422 li
98.7109 311.311 li
55.0705 311.311 li
cp
@
233.446 5.38498 mo
233.446 4.50296 230.865 3.78796 227.681 3.78796 cv
224.497 3.78796 221.915 4.50296 221.915 5.38498 cv
221.915 6.26599 224.497 6.98099 227.681 6.98099 cv
230.865 6.98099 233.446 6.26599 233.446 5.38498 cv
0 gry
@
233.446 5.38498 mo
233.446 4.50296 230.865 3.78796 227.681 3.78796 cv
224.497 3.78796 221.915 4.50296 221.915 5.38498 cv
221.915 6.26599 224.497 6.98099 227.681 6.98099 cv
230.865 6.98099 233.446 6.26599 233.446 5.38498 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C7961C5101279ABC36EDE6472BD125007B977
158C4E9FC1695861D4B758EA0B2DA40929DA2764CDB06C7B17969E83F9B9F9DB
69731300937B8C87AE99> |-
/parenright <1C60D8A8C9B81F2C3AE115477765EA9A623E840D3901B96042A
533934EFD3574B5C656B3B3F7387587FE0D191D87B3E12F0EE70351D07A784B9
DEAB1C75708B7B3217116> |-
/comma <1C60D8A8C9B8707CDCE153BE174BF3415C26A42365D336CF0B48FBEC
E2CCCE829E5297D863F3AA9AC7B62E5A6EDE06B2E79A00ED16CF91E8C6953AD2
9D6E96EF745E730ABC2B82BE60EB1DBDD5981EF3D78237B91F6DA501> |-
/zero <1C60D8A8C9B7A73DE18CEEF4E48C6DD01FBACAA39C3CF5567D0E5C788
075445C95D6A3B6E540D57A95C2149688073A3E100742CAF1210D033AAEFAE6F
8B444349FD5782CA146EC98165CB56922017B727DFF8905922E07> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 48 /zero put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 3{/.notdef}rp /zero /.notdef 
/two 14{/.notdef}rp /A /B /C /D /E /F 
/G 5{/.notdef}rp /M 2{/.notdef}rp /P /.notdef /R /S 
/T /.notdef /V 8{/.notdef}rp /underscore /.notdef /a /b 
/c /d /e /f /g /.notdef /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u 138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
222.8 5.66794 mo
(roundrobin\(0,0,0,0\))
[.413513 .620895 .620895 .620911 .620895 .413513 .620895 .620895 .34523 .620895 .413513 .620895 
.310455 .620895 .310455 .620895 .310455 .620895 0 ]xsh
204.973 12.215 mo
204.973 11.137 203.226 10.263 201.071 10.263 cv
198.915 10.263 197.168 11.137 197.168 12.215 cv
197.168 13.292 198.915 14.166 201.071 14.166 cv
203.226 14.166 204.973 13.292 204.973 12.215 cv
@
204.973 12.215 mo
204.973 11.137 203.226 10.263 201.071 10.263 cv
198.915 10.263 197.168 11.137 197.168 12.215 cv
197.168 13.292 198.915 14.166 201.071 14.166 cv
203.226 14.166 204.973 13.292 204.973 12.215 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
/hyphen <1C60D8A8C9B81F2C7E673161CF52871F3F524B3A1BAC5ADA04F510A
476> |-
/slash <1C60D8A8C9B854D088EAD778FBC18D924BA165ED7CB0EB5700C3B61B
62ACF96E65C0BF> |-
/one <1C60D8A8C9B7A73DB94F41466C876FCA9AF55081C1C70D8EC4AB3C9249
D700CD0FF27B669AF104FB3406E5DFE3F3B0AB0CAE2CF1998D0DA43C395891C4
7CD031071E50A5> |-
/colon <1C60D8A8C9B854D0E389293C42E83787A5BE0CE9B5745E40D1B32D07
F826004562E0981DB26F3EF2E2B5CD932C33C49C462F9673F306A9A8ECFFE93D
9FCE8BF4190AA3F1208FCCE1> |-
/greater <1C60D8A8C9B7E7C1C7C30B940B3D62C7A181F0EBB0723CBB160375
71F050C44CCE59A85ACB3DB6BF9B03383F> |-
/I <1C60D8A8C9B81F2C3AB090E7A94305EFD59611ABFA6BAFD07A97745145D9
B0DF5E6D35DFFC117239480D5B4909BCBB653176E0149E687888D5B98137EBEA
64> |-
/O <1C60D8A8C9B6079F258D65BC2331B95A484F6FB0C89DE7976C286549CD33
A4D7316575EC038BAA234ED3FB5DEACB25E52512A7CBD428E6DBD2EB830622E8
8A44262525560702DCFFFB3478FE1A2C6113548B23F661EC01296D75C1A7D5FE
B75CD951FFE5A9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 47 /slash put
dup 49 /one put
dup 58 /colon put
dup 62 /greater put
dup 73 /I put
dup 79 /O put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two 7{/.notdef}rp /colon 3{/.notdef}rp 
/greater 2{/.notdef}rp /A /B /C /D /E /F 
/G /.notdef /I 3{/.notdef}rp /M /.notdef /O /P 
/.notdef /R /S /T /.notdef /V 8{/.notdef}rp /underscore 
/.notdef /a /b /c /d /e /f /g 
/.notdef /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u 138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
198.346 11.7889 mo
(FileReader)
[.690445 .345215 .345215 .551346 .828278 .551331 .551346 .620895 .551346 0 ]xsh
198.737 13.2081 mo
(I/O: 0->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
222.891 6.272 mo
218.545 7.15897 211.981 8.48898 207.989 9.46497 cv
207.102 9.73099 205.86 10.174 204.619 10.618 cv
@
204.707 10.352 mo
203.998 10.884 li
204.885 10.707 li
cp
@
204.707 10.352 mo
203.998 10.884 li
204.885 10.707 li
f
224.487 12.215 mo
224.487 11.137 222.74 10.263 220.585 10.263 cv
218.429 10.263 216.682 11.137 216.682 12.215 cv
216.682 13.292 218.429 14.166 220.585 14.166 cv
222.74 14.166 224.487 13.292 224.487 12.215 cv
@
224.487 12.215 mo
224.487 11.137 222.74 10.263 220.585 10.263 cv
218.429 10.263 216.682 11.137 216.682 12.215 cv
216.682 13.292 218.429 14.166 220.585 14.166 cv
222.74 14.166 224.487 13.292 224.487 12.215 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
217.86 11.7889 mo
(FileReader)
[.690445 .345215 .345215 .551346 .828278 .551331 .551346 .620895 .551346 0 ]xsh
218.251 13.2081 mo
(I/O: 0->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
226.084 6.89301 mo
225.197 7.77997 224.044 8.93298 223.068 9.82001 cv
@
222.891 9.64197 mo
222.447 10.441 li
223.246 9.99701 li
cp
@
222.891 9.64197 mo
222.447 10.441 li
223.246 9.99701 li
f
236.462 12.215 mo
236.462 11.137 234.715 10.263 232.559 10.263 cv
230.404 10.263 228.656 11.137 228.656 12.215 cv
228.656 13.292 230.404 14.166 232.559 14.166 cv
234.715 14.166 236.462 13.292 236.462 12.215 cv
@
236.462 12.215 mo
236.462 11.137 234.715 10.263 232.559 10.263 cv
230.404 10.263 228.656 11.137 228.656 12.215 cv
228.656 13.292 230.404 14.166 232.559 14.166 cv
234.715 14.166 236.462 13.292 236.462 12.215 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
229.835 11.7889 mo
(FileReader)
[.690445 .345215 .345215 .551346 .828278 .551331 .551346 .620895 .551346 0 ]xsh
230.226 13.2081 mo
(I/O: 0->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
228.834 6.98099 mo
229.366 7.77997 230.076 8.75494 230.696 9.64197 cv
@
230.519 9.73099 mo
231.229 10.352 li
230.874 9.46497 li
cp
@
230.519 9.73099 mo
231.229 10.352 li
230.874 9.46497 li
f
254.912 12.215 mo
254.912 11.137 253.164 10.263 251.009 10.263 cv
248.853 10.263 247.106 11.137 247.106 12.215 cv
247.106 13.292 248.853 14.166 251.009 14.166 cv
253.164 14.166 254.912 13.292 254.912 12.215 cv
@
254.912 12.215 mo
254.912 11.137 253.164 10.263 251.009 10.263 cv
248.853 10.263 247.106 11.137 247.106 12.215 cv
247.106 13.292 248.853 14.166 251.009 14.166 cv
253.164 14.166 254.912 13.292 254.912 12.215 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
248.284 11.7889 mo
(FileReader)
[.690445 .345215 .345215 .551346 .828278 .551331 .551346 .620895 .551346 0 ]xsh
248.675 13.2081 mo
(I/O: 0->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
232.293 6.35999 mo
236.196 7.24701 241.784 8.48898 245.243 9.46497 cv
245.864 9.64197 246.662 9.99701 247.461 10.352 cv
@
247.372 10.529 mo
248.259 10.795 li
247.549 10.174 li
cp
@
247.372 10.529 mo
248.259 10.795 li
247.549 10.174 li
f
238.591 48.138 mo
238.591 47.256 233.23 46.541 226.616 46.541 cv
220.003 46.541 214.642 47.256 214.642 48.138 cv
214.642 49.02 220.003 49.735 226.616 49.735 cv
233.23 49.735 238.591 49.02 238.591 48.138 cv
@
238.591 48.138 mo
238.591 47.256 233.23 46.541 226.616 46.541 cv
220.003 46.541 214.642 47.256 214.642 48.138 cv
214.642 49.02 220.003 49.735 226.616 49.735 cv
233.23 49.735 238.591 49.02 238.591 48.138 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73DB9E68392B0D8A76464A51F2E94D7CC8D0C2C4EA9
EB677CBC38A50658519E8BF18CD893FCF8B1BA3E22E132B8EDB4B7CD483A2AC4
23E82DF2F3816B8AE8EA5F180D3F5DFF2BF284FCE4CE5C4E107DDB61A9BE179C
50061EE6040417B0DF341D85D92A63653C2A28BA649E4CD9966C4B081E30F323
54693AC79886604480856D93C0D7CC0DE6962663CC1F198BBFA4> |-
/four <1C60D8A8C9B7A73DB99E8D3796659F80CD8CFB6F4891658B64B2996E4
565B417E6680D9494DD50CBC7F026F985B68E97EBCD932CA0004F37BA5FD28FA
5EB6F0DC8CCF44A75B207DA88B4B0D8C53ACF90F9CAE1B04C7036C5BF682DB0A
BF0221167> |-
/five <1C60D8A8C9B7A73DB9D92E2C498F1C8C272174C48D3E3EA8F27C6E6BA
93064621D133D030C551A42025686691A783FB90A2D496BEF06790AC79A6878D
99BC23CD14D9CFD812148CC847ABD0CF7E73A1A9D5ACE6E2E3BBFD4DD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 51 /three put
dup 52 /four put
dup 53 /five put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two /three /four /five 
4{/.notdef}rp /colon 3{/.notdef}rp /greater 2{/.notdef}rp /A /B /C 
/D /E /F /G /.notdef /I 3{/.notdef}rp /M 
/.notdef /O /P /.notdef /R /S /T /.notdef 
/V 8{/.notdef}rp /underscore /.notdef /a /b /c /d 
/e /f /g /.notdef /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u 138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
215.527 48.4219 mo
(roundrobin\(253440,253440,253440,253440\))
[.413513 .620895 .620895 .620911 .620895 .413513 .620895 .620895 .34523 .620895 .413513 .620895 
.620895 .620911 .620895 .620895 .620911 .31044 .620911 .620895 .620895 .620895 .620911 .620895 
.310455 .620895 .620895 .620911 .620895 .620895 .620911 .31044 .620911 .620895 .620895 .620895 
.620911 .620895 0 ]xsh
230.963 54.879 mo
230.963 53.997 229.017 53.283 226.616 53.283 cv
224.216 53.283 222.27 53.997 222.27 54.879 cv
222.27 55.761 224.216 56.476 226.616 56.476 cv
229.017 56.476 230.963 55.761 230.963 54.879 cv
@
230.963 54.879 mo
230.963 53.997 229.017 53.283 226.616 53.283 cv
224.216 53.283 222.27 53.997 222.27 54.879 cv
222.27 55.761 224.216 56.476 226.616 56.476 cv
229.017 56.476 230.963 55.761 230.963 54.879 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
223.15 55.1629 mo
(duplicate\(1,1\))
[.620895 .620911 .620895 .345215 .34523 .551331 .551346 .345215 .551346 .413513 .620895 .310455 
.620895 0 ]xsh
226.616 49.735 mo
226.616 50.533 226.616 51.509 226.616 52.396 cv
@
226.439 52.396 mo
226.616 53.283 li
226.882 52.396 li
cp
@
226.439 52.396 mo
226.616 53.283 li
226.882 52.396 li
f
205.86 19.488 mo
205.86 18.41 203.279 17.537 200.095 17.537 cv
196.911 17.537 194.329 18.41 194.329 19.488 cv
194.329 20.566 196.911 21.439 200.095 21.439 cv
203.279 21.439 205.86 20.566 205.86 19.488 cv
@
205.86 19.488 mo
205.86 18.41 203.279 17.537 200.095 17.537 cv
196.911 17.537 194.329 18.41 194.329 19.488 cv
194.329 20.566 196.911 21.439 200.095 21.439 cv
203.279 21.439 205.86 20.566 205.86 19.488 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/asterisk <1C60D8A8C9B7A73DB9A0737247D562C61165E8E636EE73CF26D64
F3C6728422CEE27A3F00DC7152CA3773F07EA559F0959F48B519FDEC6150629C
166D2B4FBEF2A598C45B9530847243905C1F3F150F0DD5877800507BF2B97A2E
4942336B61DB2054C6AB2AE38E3AEA192A16823CC1BE212834012F90F71E96A0
46E312361C7B9D33CA838F52208FFCDFB3B3A9B2A9728D3AFAB94EEE3598CA05
C0D62AFFA345B041C6B4E56F6827F181D11C4BECD0C9CCA67> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 42 /asterisk put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five 4{/.notdef}rp /colon 3{/.notdef}rp /greater 2{/.notdef}rp /A /B 
/C /D /E /F /G /.notdef /I 3{/.notdef}rp 
/M /.notdef /O /P /.notdef /R /S /T 
/.notdef /V 8{/.notdef}rp /underscore /.notdef /a /b /c 
/d /e /f /g /.notdef /i /.notdef /k 
/l /m /n /o /p /.notdef /r /s 
/t /u 138{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
195.473 19.062 mo
(BMPStreamParser)
[.828278 1.10394 .690445 .69043 .34523 .413513 .551331 .551346 .966125 .69043 .551346 .413513 
.483047 .551346 0 ]xsh
197.762 20.4812 mo
(I/O: *->*)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
200.805 14.2549 mo
200.716 14.964 200.627 15.851 200.538 16.561 cv
@
200.361 16.561 mo
200.361 17.448 li
200.716 16.65 li
cp
@
200.361 16.561 mo
200.361 17.448 li
200.716 16.65 li
f
206.925 26.761 mo
206.925 25.684 203.39 24.81 199.031 24.81 cv
194.671 24.81 191.136 25.684 191.136 26.761 cv
191.136 27.839 194.671 28.713 199.031 28.713 cv
203.39 28.713 206.925 27.839 206.925 26.761 cv
@
206.925 26.761 mo
206.925 25.684 203.39 24.81 199.031 24.81 cv
194.671 24.81 191.136 25.684 191.136 26.761 cv
191.136 27.839 194.671 28.713 199.031 28.713 cv
203.39 28.713 206.925 27.839 206.925 26.761 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
192.34 26.3359 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .69043 .551346 .413513 .551346 .345215 .345215 .551346 
0 ]xsh
193.593 27.7552 mo
(I/O: 253440->253440)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .620895 .620911 .620895 .413513 
.700363 .620895 .620911 .620895 .620895 .620911 0 ]xsh
199.829 21.528 mo
199.74 22.238 199.563 23.125 199.474 23.834 cv
@
199.297 23.834 mo
199.297 24.721 li
199.651 23.923 li
cp
@
199.297 23.834 mo
199.297 24.721 li
199.651 23.923 li
f
204.885 34.035 mo
204.885 32.957 202.224 32.083 198.942 32.083 cv
195.66 32.083 192.999 32.957 192.999 34.035 cv
192.999 35.112 195.66 35.986 198.942 35.986 cv
202.224 35.986 204.885 35.112 204.885 34.035 cv
@
204.885 34.035 mo
204.885 32.957 202.224 32.083 198.942 32.083 cv
195.66 32.083 192.999 32.957 192.999 34.035 cv
192.999 35.112 195.66 35.986 198.942 35.986 cv
202.224 35.986 204.885 35.112 204.885 34.035 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7A73DFE313D538903D2D688A80497AF19F58251B88346
588CB5A8F94928A032E7AE04ED687068FF5EFE684F47125CC227938E> |-
/v <1C60D8A8C9B7A73DDA3AE0A055993EE6BE7DFD4A4A2DB6881516C07791ED
230086728F5F7B4242AB79AA3E9EFA40308C16768E728C96C19C447086D3AC82
2F0AB1C43C44A30591856370C72E911DB5FEBBFD365EF7E42462BF4A23A3EEAE
F504CBF5C917EC0A44C5B6D735> |-
/x <1C60D8A8C9B7A73DD670D8CCCBFBC4E258D7CAA3ED17D069C025C1A2420A
81D4B3EAD7110946DAC3BA40217DDD18B672D1C19269266B39D87F9C1DDA90BD
8FC71EBFE3B2169703196A9FC02F9EA267A90B94DB1FAA5C105A1B22ABB76205
ADA50D456170C13F6F28FC77F3978776E97B76A3DEF1976915B787070DC57673
F3C0FA2B4E9DEFEF7147D4269144499ACAFBAFD930E1A038534DF3D883A96117
05279F3EC76B84BD5055C0FF3A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 55 /seven put
dup 118 /v put
dup 120 /x put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /.notdef /seven 2{/.notdef}rp /colon 3{/.notdef}rp /greater 2{/.notdef}rp 
/A /B /C /D /E /F /G /.notdef 
/I 3{/.notdef}rp /M /.notdef /O /P /.notdef /R 
/S /T /.notdef /V 8{/.notdef}rp /underscore /.notdef /a 
/b /c /d /e /f /g /.notdef /i 
/.notdef /k /l /m /n /o /p /.notdef 
/r /s /t /u /v /.notdef /x 135{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
194.218 33.609 mo
(ReversePixelOrder)
[.828278 .551331 .620911 .551331 .413513 .483047 .551346 .690445 .345215 .620895 .551346 .345215 
.896561 .413513 .620895 .551346 0 ]xsh
195.367 35.0282 mo
(I/O: 720->720)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620911 .620895 
0 ]xsh
199.031 28.801 mo
199.031 29.511 198.942 30.309 198.942 31.108 cv
@
198.764 31.108 mo
198.942 31.995 li
199.208 31.108 li
cp
@
198.764 31.108 mo
198.942 31.995 li
199.208 31.108 li
f
207.014 41.308 mo
207.014 40.2299 203.4 39.357 198.942 39.357 cv
194.484 39.357 190.87 40.2299 190.87 41.308 cv
190.87 42.386 194.484 43.26 198.942 43.26 cv
203.4 43.26 207.014 42.386 207.014 41.308 cv
@
207.014 41.308 mo
207.014 40.2299 203.4 39.357 198.942 39.357 cv
194.484 39.357 190.87 40.2299 190.87 41.308 cv
190.87 42.386 194.484 43.26 198.942 43.26 cv
203.4 43.26 207.014 42.386 207.014 41.308 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
192.009 40.8819 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551331 .34523 .551331 .690445 .551346 .413498 .551346 .345215 .34523 
.551331 0 ]xsh
193.504 42.3011 mo
(I/O: 253440->253440)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .620895 .620911 .620895 .413513 
.700363 .620895 .620911 .620895 .620895 .620911 0 ]xsh
198.942 36.075 mo
198.942 36.784 198.942 37.583 198.942 38.381 cv
@
198.764 38.381 mo
198.942 39.268 li
199.208 38.381 li
cp
@
198.764 38.381 mo
198.942 39.268 li
199.208 38.381 li
f
203.909 42.905 mo
205.328 43.348 206.836 43.792 207.989 44.058 cv
211.005 44.767 215.529 45.743 219.343 46.6299 cv
@
219.254 46.808 mo
220.141 46.808 li
219.343 46.364 li
cp
@
219.254 46.808 mo
220.141 46.808 li
219.343 46.364 li
f
224.31 19.488 mo
224.31 18.41 221.729 17.537 218.545 17.537 cv
215.36 17.537 212.779 18.41 212.779 19.488 cv
212.779 20.566 215.36 21.439 218.545 21.439 cv
221.729 21.439 224.31 20.566 224.31 19.488 cv
@
224.31 19.488 mo
224.31 18.41 221.729 17.537 218.545 17.537 cv
215.36 17.537 212.779 18.41 212.779 19.488 cv
212.779 20.566 215.36 21.439 218.545 21.439 cv
221.729 21.439 224.31 20.566 224.31 19.488 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
213.923 19.062 mo
(BMPStreamParser)
[.828278 1.10394 .690445 .69043 .34523 .413513 .551331 .551346 .966125 .69043 .551346 .413513 
.483047 .551346 0 ]xsh
216.212 20.4812 mo
(I/O: *->*)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
220.052 14.166 mo
219.875 14.964 219.609 15.851 219.343 16.65 cv
@
219.165 16.561 mo
219.077 17.448 li
219.609 16.65 li
cp
@
219.165 16.561 mo
219.077 17.448 li
219.609 16.65 li
f
225.374 26.761 mo
225.374 25.684 221.84 24.81 217.48 24.81 cv
213.12 24.81 209.586 25.684 209.586 26.761 cv
209.586 27.839 213.12 28.713 217.48 28.713 cv
221.84 28.713 225.374 27.839 225.374 26.761 cv
@
225.374 26.761 mo
225.374 25.684 221.84 24.81 217.48 24.81 cv
213.12 24.81 209.586 25.684 209.586 26.761 cv
209.586 27.839 213.12 28.713 217.48 28.713 cv
221.84 28.713 225.374 27.839 225.374 26.761 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
210.789 26.3359 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .69043 .551346 .413513 .551346 .345215 .345215 .551346 
0 ]xsh
212.042 27.7552 mo
(I/O: 253440->253440)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .620895 .620911 .620895 .413513 
.700363 .620895 .620911 .620895 .620895 .620911 0 ]xsh
218.278 21.528 mo
218.19 22.238 218.012 23.125 217.924 23.834 cv
@
217.746 23.834 mo
217.746 24.721 li
218.101 23.923 li
cp
@
217.746 23.834 mo
217.746 24.721 li
218.101 23.923 li
f
223.334 34.035 mo
223.334 32.957 220.674 32.083 217.391 32.083 cv
214.109 32.083 211.449 32.957 211.449 34.035 cv
211.449 35.112 214.109 35.986 217.391 35.986 cv
220.674 35.986 223.334 35.112 223.334 34.035 cv
@
223.334 34.035 mo
223.334 32.957 220.674 32.083 217.391 32.083 cv
214.109 32.083 211.449 32.957 211.449 34.035 cv
211.449 35.112 214.109 35.986 217.391 35.986 cv
220.674 35.986 223.334 35.112 223.334 34.035 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
212.667 33.609 mo
(ReversePixelOrder)
[.828278 .551331 .620911 .551331 .413513 .483047 .551346 .690445 .345215 .620895 .551346 .345215 
.896561 .413513 .620895 .551346 0 ]xsh
213.816 35.0282 mo
(I/O: 720->720)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620911 .620895 
0 ]xsh
217.48 28.801 mo
217.48 29.511 217.391 30.309 217.391 31.108 cv
@
217.214 31.108 mo
217.391 31.995 li
217.658 31.108 li
cp
@
217.214 31.108 mo
217.391 31.995 li
217.658 31.108 li
f
225.463 41.308 mo
225.463 40.2299 221.849 39.357 217.391 39.357 cv
212.934 39.357 209.32 40.2299 209.32 41.308 cv
209.32 42.386 212.934 43.26 217.391 43.26 cv
221.849 43.26 225.463 42.386 225.463 41.308 cv
@
225.463 41.308 mo
225.463 40.2299 221.849 39.357 217.391 39.357 cv
212.934 39.357 209.32 40.2299 209.32 41.308 cv
209.32 42.386 212.934 43.26 217.391 43.26 cv
221.849 43.26 225.463 42.386 225.463 41.308 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
210.459 40.8819 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551331 .34523 .551331 .690445 .551346 .413498 .551346 .345215 .34523 
.551331 0 ]xsh
211.954 42.3011 mo
(I/O: 253440->253440)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .620895 .620911 .620895 .413513 
.700363 .620895 .620911 .620895 .620895 .620911 0 ]xsh
217.391 36.075 mo
217.391 36.784 217.391 37.583 217.391 38.381 cv
@
217.214 38.381 mo
217.391 39.268 li
217.658 38.381 li
cp
@
217.214 38.381 mo
217.391 39.268 li
217.658 38.381 li
f
219.964 43.171 mo
221.117 44.058 222.625 45.122 223.867 46.098 cv
@
223.6 46.187 mo
224.487 46.541 li
223.867 45.832 li
cp
@
223.6 46.187 mo
224.487 46.541 li
223.867 45.832 li
f
240.365 19.488 mo
240.365 18.41 237.783 17.537 234.599 17.537 cv
231.415 17.537 228.834 18.41 228.834 19.488 cv
228.834 20.566 231.415 21.439 234.599 21.439 cv
237.783 21.439 240.365 20.566 240.365 19.488 cv
@
240.365 19.488 mo
240.365 18.41 237.783 17.537 234.599 17.537 cv
231.415 17.537 228.834 18.41 228.834 19.488 cv
228.834 20.566 231.415 21.439 234.599 21.439 cv
237.783 21.439 240.365 20.566 240.365 19.488 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
229.977 19.062 mo
(BMPStreamParser)
[.828278 1.10394 .690445 .69043 .34523 .413513 .551331 .551346 .966125 .69043 .551346 .413513 
.483047 .551346 0 ]xsh
232.266 20.4812 mo
(I/O: *->*)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
233.091 14.166 mo
233.269 14.964 233.535 15.851 233.801 16.65 cv
@
233.535 16.65 mo
234.067 17.448 li
233.978 16.561 li
cp
@
233.535 16.65 mo
234.067 17.448 li
233.978 16.561 li
f
243.647 26.761 mo
243.647 25.684 240.112 24.81 235.752 24.81 cv
231.392 24.81 227.858 25.684 227.858 26.761 cv
227.858 27.839 231.392 28.713 235.752 28.713 cv
240.112 28.713 243.647 27.839 243.647 26.761 cv
@
243.647 26.761 mo
243.647 25.684 240.112 24.81 235.752 24.81 cv
231.392 24.81 227.858 25.684 227.858 26.761 cv
227.858 27.839 231.392 28.713 235.752 28.713 cv
240.112 28.713 243.647 27.839 243.647 26.761 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
229.062 26.3359 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .690445 .551331 .413513 .551346 .345215 .345215 .551346 
0 ]xsh
230.315 27.7552 mo
(I/O: 253440->253440)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .620895 .620911 .620895 .413513 
.700363 .620895 .620911 .620895 .620895 .620911 0 ]xsh
234.954 21.528 mo
235.043 22.238 235.131 23.125 235.22 23.834 cv
@
235.043 23.923 mo
235.398 24.721 li
235.398 23.834 li
cp
@
235.043 23.923 mo
235.398 24.721 li
235.398 23.834 li
f
241.695 34.035 mo
241.695 32.957 239.035 32.083 235.752 32.083 cv
232.47 32.083 229.809 32.957 229.809 34.035 cv
229.809 35.112 232.47 35.986 235.752 35.986 cv
239.035 35.986 241.695 35.112 241.695 34.035 cv
@
241.695 34.035 mo
241.695 32.957 239.035 32.083 235.752 32.083 cv
232.47 32.083 229.809 32.957 229.809 34.035 cv
229.809 35.112 232.47 35.986 235.752 35.986 cv
239.035 35.986 241.695 35.112 241.695 34.035 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
231.028 33.609 mo
(ReversePixelOrder)
[.828278 .551331 .620911 .551331 .413513 .483047 .551346 .690445 .345215 .620895 .551346 .345215 
.896561 .413513 .620895 .551346 0 ]xsh
232.177 35.0282 mo
(I/O: 720->720)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620911 .620895 
0 ]xsh
235.752 28.801 mo
235.752 29.511 235.752 30.309 235.752 31.108 cv
@
235.575 31.108 mo
235.752 31.995 li
236.018 31.108 li
cp
@
235.575 31.108 mo
235.752 31.995 li
236.018 31.108 li
f
243.913 41.308 mo
243.913 40.2299 240.299 39.357 235.841 39.357 cv
231.383 39.357 227.769 40.2299 227.769 41.308 cv
227.769 42.386 231.383 43.26 235.841 43.26 cv
240.299 43.26 243.913 42.386 243.913 41.308 cv
@
243.913 41.308 mo
243.913 40.2299 240.299 39.357 235.841 39.357 cv
231.383 39.357 227.769 40.2299 227.769 41.308 cv
227.769 42.386 231.383 43.26 235.841 43.26 cv
240.299 43.26 243.913 42.386 243.913 41.308 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
228.908 40.8819 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551331 .34523 .551331 .690445 .551346 .413498 .551346 .345215 .34523 
.551331 0 ]xsh
230.403 42.3011 mo
(I/O: 253440->253440)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .620895 .620911 .620895 .413513 
.700363 .620895 .620911 .620895 .620895 .620911 0 ]xsh
235.752 36.075 mo
235.752 36.784 235.841 37.583 235.841 38.381 cv
@
235.664 38.381 mo
235.841 39.268 li
236.107 38.381 li
cp
@
235.664 38.381 mo
235.841 39.268 li
236.107 38.381 li
f
233.269 43.171 mo
232.116 44.058 230.608 45.122 229.366 46.098 cv
@
229.366 45.832 mo
228.745 46.541 li
229.632 46.187 li
cp
@
229.366 45.832 mo
228.745 46.541 li
229.632 46.187 li
f
258.814 19.488 mo
258.814 18.41 256.233 17.537 253.049 17.537 cv
249.865 17.537 247.283 18.41 247.283 19.488 cv
247.283 20.566 249.865 21.439 253.049 21.439 cv
256.233 21.439 258.814 20.566 258.814 19.488 cv
@
258.814 19.488 mo
258.814 18.41 256.233 17.537 253.049 17.537 cv
249.865 17.537 247.283 18.41 247.283 19.488 cv
247.283 20.566 249.865 21.439 253.049 21.439 cv
256.233 21.439 258.814 20.566 258.814 19.488 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
248.427 19.062 mo
(BMPStreamParser)
[.828278 1.10394 .690445 .69043 .34523 .413513 .551331 .551346 .966125 .69043 .551346 .413513 
.483032 .551361 0 ]xsh
250.716 20.4812 mo
(I/O: *->*)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
251.541 14.166 mo
251.718 14.964 251.984 15.851 252.251 16.65 cv
@
251.984 16.65 mo
252.517 17.448 li
252.428 16.561 li
cp
@
251.984 16.65 mo
252.517 17.448 li
252.428 16.561 li
f
262.096 26.761 mo
262.096 25.684 258.562 24.81 254.202 24.81 cv
249.842 24.81 246.308 25.684 246.308 26.761 cv
246.308 27.839 249.842 28.713 254.202 28.713 cv
258.562 28.713 262.096 27.839 262.096 26.761 cv
@
262.096 26.761 mo
262.096 25.684 258.562 24.81 254.202 24.81 cv
249.842 24.81 246.308 25.684 246.308 26.761 cv
246.308 27.839 249.842 28.713 254.202 28.713 cv
258.562 28.713 262.096 27.839 262.096 26.761 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
247.511 26.3359 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551331 .69046 .551331 .413513 .551331 .345215 .345245 .551331 
0 ]xsh
248.764 27.7552 mo
(I/O: 253440->253440)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .620895 .620911 .620895 .413513 
.700363 .620911 .62088 .620911 .620911 .62088 0 ]xsh
253.404 21.528 mo
253.492 22.238 253.581 23.125 253.67 23.834 cv
@
253.492 23.923 mo
253.847 24.721 li
253.847 23.834 li
cp
@
253.492 23.923 mo
253.847 24.721 li
253.847 23.834 li
f
260.145 34.035 mo
260.145 32.957 257.484 32.083 254.202 32.083 cv
250.92 32.083 248.259 32.957 248.259 34.035 cv
248.259 35.112 250.92 35.986 254.202 35.986 cv
257.484 35.986 260.145 35.112 260.145 34.035 cv
@
260.145 34.035 mo
260.145 32.957 257.484 32.083 254.202 32.083 cv
250.92 32.083 248.259 32.957 248.259 34.035 cv
248.259 35.112 250.92 35.986 254.202 35.986 cv
257.484 35.986 260.145 35.112 260.145 34.035 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
249.478 33.609 mo
(ReversePixelOrder)
[.828278 .551331 .620911 .551331 .413513 .483047 .551346 .690445 .345215 .620895 .551346 .34523 
.896545 .413513 .620911 .551331 0 ]xsh
250.627 35.0282 mo
(I/O: 720->720)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620895 .620911 
0 ]xsh
254.202 28.801 mo
254.202 29.511 254.202 30.309 254.202 31.108 cv
@
254.025 31.108 mo
254.202 31.995 li
254.468 31.108 li
cp
@
254.025 31.108 mo
254.202 31.995 li
254.468 31.108 li
f
262.362 41.308 mo
262.362 40.2299 258.749 39.357 254.291 39.357 cv
249.833 39.357 246.219 40.2299 246.219 41.308 cv
246.219 42.386 249.833 43.26 254.291 43.26 cv
258.749 43.26 262.362 42.386 262.362 41.308 cv
@
262.362 41.308 mo
262.362 40.2299 258.749 39.357 254.291 39.357 cv
249.833 39.357 246.219 40.2299 246.219 41.308 cv
246.219 42.386 249.833 43.26 254.291 43.26 cv
258.749 43.26 262.362 42.386 262.362 41.308 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
247.358 40.8819 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551346 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
248.853 42.3011 mo
(I/O: 253440->253440)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .620895 .620911 .620895 .413513 
.700378 .62088 .620911 .620911 .62088 .620911 0 ]xsh
254.202 36.075 mo
254.202 36.784 254.291 37.583 254.291 38.381 cv
@
254.113 38.381 mo
254.291 39.268 li
254.557 38.381 li
cp
@
254.113 38.381 mo
254.291 39.268 li
254.557 38.381 li
f
249.412 42.905 mo
247.904 43.348 246.396 43.792 245.243 44.058 cv
242.227 44.856 237.615 45.832 233.712 46.719 cv
@
233.978 46.4529 mo
233.18 46.808 li
234.067 46.896 li
cp
@
233.978 46.4529 mo
233.18 46.808 li
234.067 46.896 li
f
52.3208 69.958 mo
52.3208 68.293 49.3026 66.942 45.5796 66.942 cv
41.8565 66.942 38.8384 68.293 38.8384 69.958 cv
38.8384 71.624 41.8565 72.974 45.5796 72.974 cv
49.3026 72.974 52.3208 71.624 52.3208 69.958 cv
@
52.3208 69.958 mo
52.3208 68.293 49.3026 66.942 45.5796 66.942 cv
41.8565 66.942 38.8384 68.293 38.8384 69.958 cv
38.8384 71.624 41.8565 72.974 45.5796 72.974 cv
49.3026 72.974 52.3208 71.624 52.3208 69.958 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7D8BE1621F7F8A9A93A327F755C3E81E8F6E5B36D5D09EC27
E8352590DCF5FBB39847107CDCA7E2F69BF8A0E97E902F61DA0FFC19F5F5635E
A2E6B7FBC25C45E39802E8D22E33BC6334A08FAC75B725C0C2D4D8BA4EE1> |-
/U <1C60D8A8C9B6079F675A124E1112F68E116C07D407D6BD729F3D1467FEC9
DB1B717EDCA1CB257898FAA810DC98AD012099D6E27B9582DB9C127CF24AAE1E
5B37683D2BCD64B5A5B8A07FAB5E4A8A80CE7FE3009E0C18967F5352FF3AD65B
1392BE000C7D33B48AEC2DD2A19998C5FE8EA47D78> |-
/y <1C60D8A8C9B7A73DDF325AF121518DD24D79A1D6297F2682F9AD5083CE90
6B71FC8BFB529DE7E11E55AF343C688ECAE2F8E1922FBFF6524D1DEA97BD39D9
CE14632F8473959D0898D7B7EF3E2B985A44859DA5885A0B7E1416032223E48B
C8A546760893052D5D557F50BFBB6793E5108395A50448013F59BB2036802753
A16DC97698BA68F4F4EAF1FDEAF39B9DD03FEBA42B0F0E35E3A4C6407754F9F9
648DF8C8F5539FA7CCFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 76 /L put
dup 85 /U put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /.notdef /seven 2{/.notdef}rp /colon 3{/.notdef}rp /greater 2{/.notdef}rp 
/A /B /C /D /E /F /G /.notdef 
/I 2{/.notdef}rp /L /M /.notdef /O /P /.notdef 
/R /S /T /U /V 8{/.notdef}rp /underscore /.notdef 
/a /b /c /d /e /f /g /.notdef 
/i /.notdef /k /l /m /n /o /p 
/.notdef /r /s /t /u /v /.notdef /x 
/y 134{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
40.8198 68.8229 mo
(AssignPictureType)
[.896561 .483051 .483051 .345219 .620899 .620903 .690437 .345222 .551338 .345222 .620899 .413509 
.551342 .758728 .620899 .620903 0 ]xsh
41.694 70.2422 mo
(I/O: 253440->2)
[.413509 .345222 .896561 .345219 .310452 .620899 .620899 .620899 .620899 .620903 .620899 .413509 
.700371 0 ]xsh
40.302 71.6614 mo
(*** STATEFUL ***)
[.620899 .620899 .620903 .310448 .690441 .758732 .896561 .758728 .758732 .690441 .896561 .758728 
.310452 .620899 .620899 0 ]xsh
222.27 54.879 mo
197.7 54.968 76.7133 55.411 50.3694 57.54 cv
47.6197 57.806 46.4666 62.596 45.9344 66.233 cv
@
45.757 66.055 mo
45.8457 66.942 li
46.2005 66.055 li
cp
@
45.757 66.055 mo
45.8457 66.942 li
46.2005 66.055 li
f
306.978 61.709 mo
306.978 60.631 304.874 59.758 302.277 59.758 cv
299.681 59.758 297.576 60.631 297.576 61.709 cv
297.576 62.787 299.681 63.661 302.277 63.661 cv
304.874 63.661 306.978 62.787 306.978 61.709 cv
@
306.978 61.709 mo
306.978 60.631 304.874 59.758 302.277 59.758 cv
299.681 59.758 297.576 60.631 297.576 61.709 cv
297.576 62.787 299.681 63.661 302.277 63.661 cv
304.874 63.661 306.978 62.787 306.978 61.709 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Y <1C60D8A8C9B6079F6264F4C8DDC3F1487EEA19AC13B41424A9E78F0FDF92
05A588739AC8029E8253D862E9C870F33DCAED59F17DDFF066EDE3BDA3CA72E2
9EAB67D63B26C63D99BA43680717BDE9E4F738D4BE18E2DC3DEA86639EADB17A
186747A3D486EBE515CD66CBC55045390AF8B38CF858> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 89 /Y put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /.notdef /seven 2{/.notdef}rp /colon 3{/.notdef}rp /greater 2{/.notdef}rp 
/A /B /C /D /E /F /G /.notdef 
/I 2{/.notdef}rp /L /M /.notdef /O /P /.notdef 
/R /S /T /U /V 2{/.notdef}rp /Y 5{/.notdef}rp 
/underscore /.notdef /a /b /c /d /e /f 
/g /.notdef /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/.notdef /x /y 134{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
298.724 61.2829 mo
(RGBtoYCbCr)
[.828278 .896545 .828278 .345215 .620911 .896545 .828278 .620911 .828278 0 ]xsh
299.944 62.7022 mo
(I/O: 3->3)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
230.963 54.968 mo
243.292 55.145 278.594 55.766 297.842 57.54 cv
298.641 57.718 299.528 58.339 300.237 59.048 cv
@
300.149 59.226 mo
300.858 59.758 li
300.415 58.959 li
cp
@
300.149 59.226 mo
300.858 59.758 li
300.415 58.959 li
f
107.137 127.791 mo
107.137 126.909 104.278 126.194 100.751 126.194 cv
97.2239 126.194 94.3646 126.909 94.3646 127.791 cv
94.3646 128.672 97.2239 129.387 100.751 129.387 cv
104.278 129.387 107.137 128.672 107.137 127.791 cv
@
107.137 127.791 mo
107.137 126.909 104.278 126.194 100.751 126.194 cv
97.2239 126.194 94.3646 126.909 94.3646 127.791 cv
94.3646 128.672 97.2239 129.387 100.751 129.387 cv
104.278 129.387 107.137 128.672 107.137 127.791 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7A73DF81BACD811429F931042E1295F1D2320E46DE79DF7
47FCAABFFD92F045A475E54E15C8E93ECB3BD59C8545C0EF45BF22429615FC68
5C033A02F070B2C6D7D737838C1853D297AC8915086E73952A7A9847D6F588AB
17767CC39CB62607242BC1B7BFF5295CEB6C03755CD9B53DA2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven 2{/.notdef}rp /colon 3{/.notdef}rp /greater 2{/.notdef}rp 
/A /B /C /D /E /F /G /.notdef 
/I 2{/.notdef}rp /L /M /.notdef /O /P /.notdef 
/R /S /T /U /V 2{/.notdef}rp /Y 5{/.notdef}rp 
/underscore /.notdef /a /b /c /d /e /f 
/g /.notdef /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/.notdef /x /y 134{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
95.2498 128.074 mo
(roundrobin\(2,126720\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.310455 .620895 .620903 .620895 .620903 .620903 .620895 0 ]xsh
105.009 134.621 mo
105.009 133.543 103.102 132.669 100.751 132.669 cv
98.3996 132.669 96.4934 133.543 96.4934 134.621 cv
96.4934 135.698 98.3996 136.572 100.751 136.572 cv
103.102 136.572 105.009 135.698 105.009 134.621 cv
@
105.009 134.621 mo
105.009 133.543 103.102 132.669 100.751 132.669 cv
98.3996 132.669 96.4934 133.543 96.4934 134.621 cv
96.4934 135.698 98.3996 136.572 100.751 136.572 cv
103.102 136.572 105.009 135.698 105.009 134.621 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
97.7154 134.195 mo
(Anonymous)
[.896561 .620903 .620895 .620903 .620895 .966125 .620895 .620903 0 ]xsh
98.4176 135.614 mo
(I/O: *->*)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
100.751 129.387 mo
100.751 130.097 100.751 130.895 100.751 131.693 cv
@
100.574 131.693 mo
100.751 132.58 li
101.017 131.693 li
cp
@
100.574 131.693 mo
100.751 132.58 li
101.017 131.693 li
f
46.4666 72.974 mo
47.4423 76.433 48.8615 82.021 48.8615 85.481 cv
48.8615 85.481 48.8615 85.481 48.8615 114.574 cv
48.8615 118.034 48.5067 123.622 51.7886 124.42 cv
57.7315 125.928 81.6805 126.992 93.7437 127.525 cv
@
93.5663 127.702 mo
94.4533 127.525 li
93.5663 127.258 li
cp
@
93.5663 127.702 mo
94.4533 127.525 li
93.5663 127.258 li
f
374.124 69.958 mo
374.124 69.076 371.742 68.362 368.802 68.362 cv
365.863 68.362 363.48 69.076 363.48 69.958 cv
363.48 70.84 365.863 71.555 368.802 71.555 cv
371.742 71.555 374.124 70.84 374.124 69.958 cv
@
374.124 69.958 mo
374.124 69.076 371.742 68.362 368.802 68.362 cv
365.863 68.362 363.48 69.076 363.48 69.958 cv
363.48 70.84 365.863 71.555 368.802 71.555 cv
371.742 71.555 374.124 70.84 374.124 69.958 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
364.388 70.242 mo
(roundrobin\(1,1,1\))
[.413513 .620911 .62088 .620911 .62088 .413513 .620911 .620911 .345215 .620911 .413483 .620911 
.310455 .620911 .310425 .620911 0 ]xsh
306.89 62.064 mo
318.243 62.862 347.514 64.991 363.746 66.942 cv
364.456 67.031 365.343 67.386 366.053 67.918 cv
@
365.964 68.184 mo
366.851 68.45 li
366.23 67.741 li
cp
@
365.964 68.184 mo
366.851 68.45 li
366.23 67.741 li
f
287.997 78.207 mo
287.997 77.326 278.585 76.611 266.975 76.611 cv
255.365 76.611 245.953 77.326 245.953 78.207 cv
245.953 79.089 255.365 79.804 266.975 79.804 cv
278.585 79.804 287.997 79.089 287.997 78.207 cv
@
287.997 78.207 mo
287.997 77.326 278.585 76.611 266.975 76.611 cv
255.365 76.611 245.953 77.326 245.953 78.207 cv
245.953 79.089 255.365 79.804 266.975 79.804 cv
278.585 79.804 287.997 79.089 287.997 78.207 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
246.883 78.491 mo
(roundrobin\(16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16\))
[.413513 .620895 .620895 .620911 .620895 .413513 .620895 .620895 .34523 .620895 .413513 .620895 
.620895 .310455 .620895 .620911 .31044 .620895 .620911 .310455 .62088 .620911 .310455 .620911 
.62088 .310455 .620911 .62088 .310455 .620911 .620911 .310425 .620911 .620911 .310425 .620911 
.620911 .310455 .62088 .620911 .310455 .62088 .620911 .310455 .62088 .620911 .310455 .620911 
.62088 .310455 .620911 .62088 .310455 .620911 .62088 .310455 .620911 .620911 .310425 .620911 
.620911 .310455 .62088 .620911 .310455 .62088 .620911 .310455 .620911 .62088 .310455 .620911 
.62088 .310455 .620911 .62088 0 ]xsh
367.028 71.466 mo
365.964 72.176 364.722 72.974 363.746 72.974 cv
342.636 74.748 307.865 76.345 286.223 77.409 cv
@
286.223 77.143 mo
285.336 77.409 li
286.223 77.586 li
cp
@
286.223 77.143 mo
285.336 77.409 li
286.223 77.586 li
f
478.702 78.207 mo
478.702 77.13 475.088 76.256 470.63 76.256 cv
466.172 76.256 462.558 77.13 462.558 78.207 cv
462.558 79.285 466.172 80.159 470.63 80.159 cv
475.088 80.159 478.702 79.285 478.702 78.207 cv
@
478.702 78.207 mo
478.702 77.13 475.088 76.256 470.63 76.256 cv
466.172 76.256 462.558 77.13 462.558 78.207 cv
462.558 79.285 466.172 80.159 470.63 80.159 cv
475.088 80.159 478.702 79.285 478.702 78.207 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
463.697 77.782 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
467.055 79.2011 mo
(I/O: 352->352)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
374.124 70.136 mo
389.824 70.668 436.747 72.442 462.292 74.482 cv
463.534 74.571 465.219 75.192 466.638 75.901 cv
@
466.55 76.079 mo
467.437 76.345 li
466.727 75.724 li
cp
@
466.55 76.079 mo
467.437 76.345 li
466.727 75.724 li
f
497.151 78.207 mo
497.151 77.13 493.537 76.256 489.08 76.256 cv
484.622 76.256 481.008 77.13 481.008 78.207 cv
481.008 79.285 484.622 80.159 489.08 80.159 cv
493.537 80.159 497.151 79.285 497.151 78.207 cv
@
497.151 78.207 mo
497.151 77.13 493.537 76.256 489.08 76.256 cv
484.622 76.256 481.008 77.13 481.008 78.207 cv
481.008 79.285 484.622 80.159 489.08 80.159 cv
493.537 80.159 497.151 79.285 497.151 78.207 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
482.147 77.782 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
485.505 79.2011 mo
(I/O: 352->352)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
374.124 69.958 mo
409.516 70.136 444.818 72.087 480.032 74.482 cv
481.363 74.571 483.225 75.28 484.822 75.99 cv
@
484.733 76.167 mo
485.62 76.345 li
484.911 75.812 li
cp
@
484.733 76.167 mo
485.62 76.345 li
484.911 75.812 li
f
426.014 121.404 mo
426.014 120.522 423.075 119.808 419.45 119.808 cv
415.825 119.808 412.886 120.522 412.886 121.404 cv
412.886 122.286 415.825 123.001 419.45 123.001 cv
423.075 123.001 426.014 122.286 426.014 121.404 cv
@
426.014 121.404 mo
426.014 120.522 423.075 119.808 419.45 119.808 cv
415.825 119.808 412.886 120.522 412.886 121.404 cv
412.886 122.286 415.825 123.001 419.45 123.001 cv
423.075 123.001 426.014 122.286 426.014 121.404 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
413.794 121.688 mo
(roundrobin\(256,64,64\))
[.413513 .620911 .62088 .620911 .62088 .413513 .620911 .620911 .345215 .620911 .413483 .620911 
.620911 .62088 .310455 .620911 .62088 .310455 .620911 .620911 0 ]xsh
417.233 122.912 mo
415.902 123.622 414.305 124.42 413.152 124.42 cv
320.461 126.371 145.012 127.525 107.758 127.791 cv
@
108.024 127.525 mo
107.137 127.791 li
108.024 127.968 li
cp
@
108.024 127.525 mo
107.137 127.791 li
108.024 127.968 li
f
72.1009 85.481 mo
72.1009 84.403 68.487 83.529 64.0292 83.529 cv
59.5713 83.529 55.9575 84.403 55.9575 85.481 cv
55.9575 86.558 59.5713 87.432 64.0292 87.432 cv
68.487 87.432 72.1009 86.558 72.1009 85.481 cv
@
72.1009 85.481 mo
72.1009 84.403 68.487 83.529 64.0292 83.529 cv
59.5713 83.529 55.9575 84.403 55.9575 85.481 cv
55.9575 86.558 59.5713 87.432 64.0292 87.432 cv
68.487 87.432 72.1009 86.558 72.1009 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
57.0963 85.0549 mo
(Post_CollapsedDataParallel)
[.690441 .620899 .483051 .345219 .620903 .82827 .620899 .345219 .345222 .551338 .620903 .483047 
.551338 .620903 .896561 .551338 .345222 .551338 .690445 .551338 .413513 .551338 .345222 .345222 
.551338 0 ]xsh
61.075 86.4742 mo
(I/O: 16->16)
[.413509 .345222 .896561 .345219 .310452 .620899 .620903 .413506 .700371 .620903 0 ]xsh
254.113 79.449 mo
249.856 79.893 246.219 80.247 246.219 80.247 cv
188.564 81.223 130.82 79.715 73.0766 81.312 cv
71.5687 81.401 69.4399 82.376 67.5772 83.352 cv
@
67.7546 82.997 mo
67.045 83.618 li
67.932 83.441 li
cp
@
67.7546 82.997 mo
67.045 83.618 li
67.932 83.441 li
f
90.5505 85.481 mo
90.5505 84.403 86.9366 83.529 82.4788 83.529 cv
78.0209 83.529 74.4071 84.403 74.4071 85.481 cv
74.4071 86.558 78.0209 87.432 82.4788 87.432 cv
86.9366 87.432 90.5505 86.558 90.5505 85.481 cv
@
90.5505 85.481 mo
90.5505 84.403 86.9366 83.529 82.4788 83.529 cv
78.0209 83.529 74.4071 84.403 74.4071 85.481 cv
74.4071 86.558 78.0209 87.432 82.4788 87.432 cv
86.9366 87.432 90.5505 86.558 90.5505 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
75.5459 85.0549 mo
(Post_CollapsedDataParallel)
[.690437 .620903 .483047 .345222 .620903 .82827 .620895 .345222 .345222 .551338 .620903 .483047 
.551338 .620903 .896561 .551338 .345222 .551338 .690445 .551338 .413513 .551338 .345222 .345222 
.551338 0 ]xsh
79.5246 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
254.557 79.538 mo
251.807 79.893 248.969 80.247 246.219 80.247 cv
194.684 81.223 143.15 79.715 91.5262 81.312 cv
90.0183 81.401 87.8895 82.376 86.0268 83.352 cv
@
86.2042 82.997 mo
85.4946 83.618 li
86.3816 83.441 li
cp
@
86.2042 82.997 mo
85.4946 83.618 li
86.3816 83.441 li
f
109 85.481 mo
109 84.403 105.386 83.529 100.928 83.529 cv
96.4705 83.529 92.8567 84.403 92.8567 85.481 cv
92.8567 86.558 96.4705 87.432 100.928 87.432 cv
105.386 87.432 109 86.558 109 85.481 cv
@
109 85.481 mo
109 84.403 105.386 83.529 100.928 83.529 cv
96.4705 83.529 92.8567 84.403 92.8567 85.481 cv
92.8567 86.558 96.4705 87.432 100.928 87.432 cv
105.386 87.432 109 86.558 109 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
93.9955 85.0549 mo
(Post_CollapsedDataParallel)
[.690437 .620903 .483047 .345222 .620903 .82827 .620895 .345222 .345222 .551338 .620903 .483047 
.551338 .620903 .896561 .551338 .345222 .551338 .690445 .551338 .413513 .551338 .345222 .345222 
.551338 0 ]xsh
97.9742 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
254.113 79.449 mo
249.856 79.893 246.219 80.247 246.219 80.247 cv
200.893 81.223 155.39 79.715 109.976 81.312 cv
108.468 81.401 106.339 82.376 104.476 83.352 cv
@
104.654 82.997 mo
103.944 83.618 li
104.831 83.441 li
cp
@
104.654 82.997 mo
103.944 83.618 li
104.831 83.441 li
f
127.45 85.481 mo
127.45 84.403 123.836 83.529 119.378 83.529 cv
114.92 83.529 111.306 84.403 111.306 85.481 cv
111.306 86.558 114.92 87.432 119.378 87.432 cv
123.836 87.432 127.45 86.558 127.45 85.481 cv
@
127.45 85.481 mo
127.45 84.403 123.836 83.529 119.378 83.529 cv
114.92 83.529 111.306 84.403 111.306 85.481 cv
111.306 86.558 114.92 87.432 119.378 87.432 cv
123.836 87.432 127.45 86.558 127.45 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
112.445 85.0549 mo
(Post_CollapsedDataParallel)
[.690437 .620903 .483047 .345222 .620903 .82827 .620895 .345222 .345222 .551338 .620903 .483047 
.551346 .620895 .896561 .551338 .345222 .551338 .690445 .551338 .413513 .551338 .345222 .345215 
.551346 0 ]xsh
116.424 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
254.557 79.538 mo
251.807 79.893 248.969 80.247 246.219 80.247 cv
207.014 81.134 167.719 79.715 128.425 81.312 cv
126.917 81.401 124.789 82.376 122.926 83.352 cv
@
123.103 82.997 mo
122.394 83.618 li
123.281 83.441 li
cp
@
123.103 82.997 mo
122.394 83.618 li
123.281 83.441 li
f
145.899 85.481 mo
145.899 84.403 142.285 83.529 137.828 83.529 cv
133.37 83.529 129.756 84.403 129.756 85.481 cv
129.756 86.558 133.37 87.432 137.828 87.432 cv
142.285 87.432 145.899 86.558 145.899 85.481 cv
@
145.899 85.481 mo
145.899 84.403 142.285 83.529 137.828 83.529 cv
133.37 83.529 129.756 84.403 129.756 85.481 cv
129.756 86.558 133.37 87.432 137.828 87.432 cv
142.285 87.432 145.899 86.558 145.899 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
130.895 85.0549 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551331 .34523 .551331 .690445 .551346 .413498 .551346 .345215 .34523 
.551331 0 ]xsh
134.874 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
254.291 79.449 mo
251.63 79.893 248.969 80.159 246.219 80.247 cv
213.134 81.134 179.96 79.715 146.875 81.312 cv
145.367 81.401 143.238 82.376 141.376 83.352 cv
@
141.553 82.997 mo
140.843 83.618 li
141.73 83.441 li
cp
@
141.553 82.997 mo
140.843 83.618 li
141.73 83.441 li
f
164.349 85.481 mo
164.349 84.403 160.735 83.529 156.277 83.529 cv
151.819 83.529 148.205 84.403 148.205 85.481 cv
148.205 86.558 151.819 87.432 156.277 87.432 cv
160.735 87.432 164.349 86.558 164.349 85.481 cv
@
164.349 85.481 mo
164.349 84.403 160.735 83.529 156.277 83.529 cv
151.819 83.529 148.205 84.403 148.205 85.481 cv
148.205 86.558 151.819 87.432 156.277 87.432 cv
160.735 87.432 164.349 86.558 164.349 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
149.344 85.0549 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551331 .34523 .551331 .690445 .551346 .413498 .551346 .345215 .34523 
.551331 0 ]xsh
153.323 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
254.291 79.449 mo
251.63 79.893 248.969 80.159 246.219 80.247 cv
219.343 81.134 192.289 79.804 165.325 81.312 cv
163.905 81.489 161.865 82.288 160.18 83.175 cv
@
160.091 82.997 mo
159.382 83.618 li
160.269 83.352 li
cp
@
160.091 82.997 mo
159.382 83.618 li
160.269 83.352 li
f
182.798 85.481 mo
182.798 84.403 179.185 83.529 174.727 83.529 cv
170.269 83.529 166.655 84.403 166.655 85.481 cv
166.655 86.558 170.269 87.432 174.727 87.432 cv
179.185 87.432 182.798 86.558 182.798 85.481 cv
@
182.798 85.481 mo
182.798 84.403 179.185 83.529 174.727 83.529 cv
170.269 83.529 166.655 84.403 166.655 85.481 cv
166.655 86.558 170.269 87.432 174.727 87.432 cv
179.185 87.432 182.798 86.558 182.798 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
167.794 85.0549 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551331 .34523 .551331 .690445 .551346 .413498 .551346 .345215 .34523 
.551331 0 ]xsh
171.773 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
254.291 79.449 mo
251.63 79.893 248.969 80.159 246.219 80.247 cv
225.463 81.046 204.619 79.804 183.774 81.312 cv
182.355 81.489 180.315 82.288 178.63 83.175 cv
@
178.541 82.997 mo
177.831 83.618 li
178.718 83.352 li
cp
@
178.541 82.997 mo
177.831 83.618 li
178.718 83.352 li
f
201.248 85.481 mo
201.248 84.403 197.634 83.529 193.176 83.529 cv
188.719 83.529 185.105 84.403 185.105 85.481 cv
185.105 86.558 188.719 87.432 193.176 87.432 cv
197.634 87.432 201.248 86.558 201.248 85.481 cv
@
201.248 85.481 mo
201.248 84.403 197.634 83.529 193.176 83.529 cv
188.719 83.529 185.105 84.403 185.105 85.481 cv
185.105 86.558 188.719 87.432 193.176 87.432 cv
197.634 87.432 201.248 86.558 201.248 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
186.244 85.0549 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551331 .34523 .551331 .690445 .551346 .413498 .551346 .345215 .34523 
.551331 0 ]xsh
190.223 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
254.113 79.449 mo
251.541 79.804 248.88 80.159 246.219 80.247 cv
231.583 80.957 216.859 79.893 202.224 81.312 cv
200.805 81.489 198.764 82.288 197.079 83.175 cv
@
196.99 82.997 mo
196.281 83.618 li
197.168 83.352 li
cp
@
196.99 82.997 mo
196.281 83.618 li
197.168 83.352 li
f
219.698 85.481 mo
219.698 84.403 216.084 83.529 211.626 83.529 cv
207.168 83.529 203.554 84.403 203.554 85.481 cv
203.554 86.558 207.168 87.432 211.626 87.432 cv
216.084 87.432 219.698 86.558 219.698 85.481 cv
@
219.698 85.481 mo
219.698 84.403 216.084 83.529 211.626 83.529 cv
207.168 83.529 203.554 84.403 203.554 85.481 cv
203.554 86.558 207.168 87.432 211.626 87.432 cv
216.084 87.432 219.698 86.558 219.698 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
204.693 85.0549 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551331 .34523 .551331 .690445 .551346 .413498 .551346 .345215 .34523 
.551331 0 ]xsh
208.672 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
253.758 79.449 mo
251.275 79.804 248.703 80.07 246.219 80.247 cv
237.792 80.868 229.189 80.07 220.673 81.312 cv
219.165 81.578 217.125 82.465 215.351 83.352 cv
@
215.529 82.997 mo
214.819 83.618 li
215.706 83.441 li
cp
@
215.529 82.997 mo
214.819 83.618 li
215.706 83.441 li
f
238.147 85.481 mo
238.147 84.403 234.533 83.529 230.076 83.529 cv
225.618 83.529 222.004 84.403 222.004 85.481 cv
222.004 86.558 225.618 87.432 230.076 87.432 cv
234.533 87.432 238.147 86.558 238.147 85.481 cv
@
238.147 85.481 mo
238.147 84.403 234.533 83.529 230.076 83.529 cv
225.618 83.529 222.004 84.403 222.004 85.481 cv
222.004 86.558 225.618 87.432 230.076 87.432 cv
234.533 87.432 238.147 86.558 238.147 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
223.143 85.0549 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551331 .34523 .551331 .690445 .551346 .413498 .551346 .345215 .34523 
.551331 0 ]xsh
227.122 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
253.226 79.449 mo
248.259 79.893 242.937 80.602 239.123 81.312 cv
237.704 81.667 235.752 82.554 233.978 83.352 cv
@
234.156 82.997 mo
233.446 83.618 li
234.333 83.441 li
cp
@
234.156 82.997 mo
233.446 83.618 li
234.333 83.441 li
f
256.597 85.481 mo
256.597 84.403 252.983 83.529 248.525 83.529 cv
244.067 83.529 240.453 84.403 240.453 85.481 cv
240.453 86.558 244.067 87.432 248.525 87.432 cv
252.983 87.432 256.597 86.558 256.597 85.481 cv
@
256.597 85.481 mo
256.597 84.403 252.983 83.529 248.525 83.529 cv
244.067 83.529 240.453 84.403 240.453 85.481 cv
240.453 86.558 244.067 87.432 248.525 87.432 cv
252.983 87.432 256.597 86.558 256.597 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
241.592 85.0549 mo
(Post_CollapsedDataParallel)
[.690445 .620895 .483047 .34523 .620895 .828262 .620911 .345215 .345215 .551346 .620895 .483063 
.551331 .620911 .896561 .551331 .34523 .551331 .690445 .551346 .413498 .551346 .345215 .34523 
.551331 0 ]xsh
245.571 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
262.096 79.804 mo
260.5 80.336 258.814 80.868 257.573 81.312 cv
256.331 81.844 254.468 82.642 252.783 83.441 cv
@
252.96 83.086 mo
252.251 83.707 li
253.138 83.529 li
cp
@
252.96 83.086 mo
252.251 83.707 li
253.138 83.529 li
f
275.046 85.481 mo
275.046 84.403 271.433 83.529 266.975 83.529 cv
262.517 83.529 258.903 84.403 258.903 85.481 cv
258.903 86.558 262.517 87.432 266.975 87.432 cv
271.433 87.432 275.046 86.558 275.046 85.481 cv
@
275.046 85.481 mo
275.046 84.403 271.433 83.529 266.975 83.529 cv
262.517 83.529 258.903 84.403 258.903 85.481 cv
258.903 86.558 262.517 87.432 266.975 87.432 cv
271.433 87.432 275.046 86.558 275.046 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
260.042 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
264.021 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
266.975 79.804 mo
266.975 80.602 266.975 81.578 266.975 82.554 cv
@
266.797 82.554 mo
266.975 83.441 li
267.241 82.554 li
cp
@
266.797 82.554 mo
266.975 83.441 li
267.241 82.554 li
f
293.496 85.481 mo
293.496 84.403 289.882 83.529 285.424 83.529 cv
280.967 83.529 277.353 84.403 277.353 85.481 cv
277.353 86.558 280.967 87.432 285.424 87.432 cv
289.882 87.432 293.496 86.558 293.496 85.481 cv
@
293.496 85.481 mo
293.496 84.403 289.882 83.529 285.424 83.529 cv
280.967 83.529 277.353 84.403 277.353 85.481 cv
277.353 86.558 280.967 87.432 285.424 87.432 cv
289.882 87.432 293.496 86.558 293.496 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
278.492 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
282.471 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
271.942 79.804 mo
273.539 80.336 275.224 80.868 276.377 81.312 cv
277.619 81.844 279.304 82.554 280.901 83.263 cv
@
280.812 83.441 mo
281.699 83.707 li
280.989 83.086 li
cp
@
280.812 83.441 mo
281.699 83.707 li
280.989 83.086 li
f
311.946 85.481 mo
311.946 84.403 308.332 83.529 303.874 83.529 cv
299.416 83.529 295.802 84.403 295.802 85.481 cv
295.802 86.558 299.416 87.432 303.874 87.432 cv
308.332 87.432 311.946 86.558 311.946 85.481 cv
@
311.946 85.481 mo
311.946 84.403 308.332 83.529 303.874 83.529 cv
299.416 83.529 295.802 84.403 295.802 85.481 cv
295.802 86.558 299.416 87.432 303.874 87.432 cv
308.332 87.432 311.946 86.558 311.946 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
296.941 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
300.92 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
280.723 79.449 mo
285.779 79.893 291.101 80.602 294.827 81.312 cv
296.157 81.578 298.108 82.465 299.705 83.263 cv
@
299.616 83.441 mo
300.503 83.618 li
299.794 83.086 li
cp
@
299.616 83.441 mo
300.503 83.618 li
299.794 83.086 li
f
330.395 85.481 mo
330.395 84.403 326.781 83.529 322.324 83.529 cv
317.866 83.529 314.252 84.403 314.252 85.481 cv
314.252 86.558 317.866 87.432 322.324 87.432 cv
326.781 87.432 330.395 86.558 330.395 85.481 cv
@
330.395 85.481 mo
330.395 84.403 326.781 83.529 322.324 83.529 cv
317.866 83.529 314.252 84.403 314.252 85.481 cv
314.252 86.558 317.866 87.432 322.324 87.432 cv
326.781 87.432 330.395 86.558 330.395 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
315.391 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
319.37 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
283.739 79.183 mo
295.181 79.893 309.019 80.78 313.276 81.312 cv
314.695 81.578 316.735 82.376 318.421 83.175 cv
@
318.332 83.352 mo
319.219 83.618 li
318.509 82.997 li
cp
@
318.332 83.352 mo
319.219 83.618 li
318.509 82.997 li
f
348.845 85.481 mo
348.845 84.403 345.231 83.529 340.773 83.529 cv
336.315 83.529 332.701 84.403 332.701 85.481 cv
332.701 86.558 336.315 87.432 340.773 87.432 cv
345.231 87.432 348.845 86.558 348.845 85.481 cv
@
348.845 85.481 mo
348.845 84.403 345.231 83.529 340.773 83.529 cv
336.315 83.529 332.701 84.403 332.701 85.481 cv
332.701 86.558 336.315 87.432 340.773 87.432 cv
345.231 87.432 348.845 86.558 348.845 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
333.84 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
337.819 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
285.424 79.006 mo
302.189 79.715 325.162 80.691 331.726 81.312 cv
333.234 81.489 335.185 82.288 336.87 83.175 cv
@
336.782 83.352 mo
337.669 83.618 li
336.959 82.997 li
cp
@
336.782 83.352 mo
337.669 83.618 li
336.959 82.997 li
f
367.294 85.481 mo
367.294 84.403 363.681 83.529 359.223 83.529 cv
354.765 83.529 351.151 84.403 351.151 85.481 cv
351.151 86.558 354.765 87.432 359.223 87.432 cv
363.681 87.432 367.294 86.558 367.294 85.481 cv
@
367.294 85.481 mo
367.294 84.403 363.681 83.529 359.223 83.529 cv
354.765 83.529 351.151 84.403 351.151 85.481 cv
351.151 86.558 354.765 87.432 359.223 87.432 cv
363.681 87.432 367.294 86.558 367.294 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
352.29 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
356.269 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
286.134 78.828 mo
309.285 79.627 345.563 80.957 350.175 81.312 cv
351.683 81.489 353.723 82.288 355.409 83.175 cv
@
355.32 83.352 mo
356.207 83.618 li
355.497 82.997 li
cp
@
355.32 83.352 mo
356.207 83.618 li
355.497 82.997 li
f
385.744 85.481 mo
385.744 84.403 382.13 83.529 377.672 83.529 cv
373.215 83.529 369.601 84.403 369.601 85.481 cv
369.601 86.558 373.215 87.432 377.672 87.432 cv
382.13 87.432 385.744 86.558 385.744 85.481 cv
@
385.744 85.481 mo
385.744 84.403 382.13 83.529 377.672 83.529 cv
373.215 83.529 369.601 84.403 369.601 85.481 cv
369.601 86.558 373.215 87.432 377.672 87.432 cv
382.13 87.432 385.744 86.558 385.744 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
370.74 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
374.719 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
286.577 78.74 mo
315.316 79.627 365.698 81.134 368.625 81.312 cv
370.133 81.489 372.173 82.288 373.858 83.175 cv
@
373.77 83.352 mo
374.657 83.618 li
373.947 82.997 li
cp
@
373.77 83.352 mo
374.657 83.618 li
373.947 82.997 li
f
404.194 85.481 mo
404.194 84.403 400.58 83.529 396.122 83.529 cv
391.664 83.529 388.05 84.403 388.05 85.481 cv
388.05 86.558 391.664 87.432 396.122 87.432 cv
400.58 87.432 404.194 86.558 404.194 85.481 cv
@
404.194 85.481 mo
404.194 84.403 400.58 83.529 396.122 83.529 cv
391.664 83.529 388.05 84.403 388.05 85.481 cv
388.05 86.558 391.664 87.432 396.122 87.432 cv
400.58 87.432 404.194 86.558 404.194 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
389.189 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
393.168 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
287.021 78.74 mo
320.195 79.538 383.438 81.134 387.075 81.312 cv
388.582 81.489 390.623 82.288 392.308 83.175 cv
@
392.219 83.352 mo
393.106 83.618 li
392.397 82.997 li
cp
@
392.219 83.352 mo
393.106 83.618 li
392.397 82.997 li
f
422.643 85.481 mo
422.643 84.403 419.029 83.529 414.572 83.529 cv
410.114 83.529 406.5 84.403 406.5 85.481 cv
406.5 86.558 410.114 87.432 414.572 87.432 cv
419.029 87.432 422.643 86.558 422.643 85.481 cv
@
422.643 85.481 mo
422.643 84.403 419.029 83.529 414.572 83.529 cv
410.114 83.529 406.5 84.403 406.5 85.481 cv
406.5 86.558 410.114 87.432 414.572 87.432 cv
419.029 87.432 422.643 86.558 422.643 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
407.639 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
411.618 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
287.287 78.651 mo
323.654 79.36 396.92 80.957 405.524 81.312 cv
407.032 81.401 409.072 82.288 410.757 83.175 cv
@
410.669 83.352 mo
411.556 83.618 li
410.846 82.997 li
cp
@
410.669 83.352 mo
411.556 83.618 li
410.846 82.997 li
f
441.093 85.481 mo
441.093 84.403 437.479 83.529 433.021 83.529 cv
428.563 83.529 424.949 84.403 424.949 85.481 cv
424.949 86.558 428.563 87.432 433.021 87.432 cv
437.479 87.432 441.093 86.558 441.093 85.481 cv
@
441.093 85.481 mo
441.093 84.403 437.479 83.529 433.021 83.529 cv
428.563 83.529 424.949 84.403 424.949 85.481 cv
424.949 86.558 428.563 87.432 433.021 87.432 cv
437.479 87.432 441.093 86.558 441.093 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
426.088 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
430.067 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
287.464 78.562 mo
327.646 79.272 414.039 80.868 423.974 81.312 cv
425.482 81.401 427.522 82.288 429.207 83.175 cv
@
429.118 83.352 mo
430.005 83.618 li
429.296 82.997 li
cp
@
429.118 83.352 mo
430.005 83.618 li
429.296 82.997 li
f
459.542 85.481 mo
459.542 84.403 455.929 83.529 451.471 83.529 cv
447.013 83.529 443.399 84.403 443.399 85.481 cv
443.399 86.558 447.013 87.432 451.471 87.432 cv
455.929 87.432 459.542 86.558 459.542 85.481 cv
@
459.542 85.481 mo
459.542 84.403 455.929 83.529 451.471 83.529 cv
447.013 83.529 443.399 84.403 443.399 85.481 cv
443.399 86.558 447.013 87.432 451.471 87.432 cv
455.929 87.432 459.542 86.558 459.542 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
444.538 85.0549 mo
(Post_CollapsedDataParallel)
[.69043 .620911 .483063 .345215 .62088 .828278 .620911 .345215 .345215 .551361 .62088 .483063 
.551331 .620911 .896545 .551361 .345215 .551331 .69043 .551361 .413513 .551331 .345215 .345215 
.551361 0 ]xsh
448.517 86.4742 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
287.997 78.207 mo
339.531 78.473 391.066 79.36 442.423 81.312 cv
443.931 81.401 445.971 82.288 447.657 83.175 cv
@
447.568 83.352 mo
448.455 83.618 li
447.745 82.997 li
cp
@
447.568 83.352 mo
448.455 83.618 li
447.745 82.997 li
f
294.827 107.301 mo
294.827 106.419 282.357 105.704 266.975 105.704 cv
251.593 105.704 239.123 106.419 239.123 107.301 cv
239.123 108.183 251.593 108.898 266.975 108.898 cv
282.357 108.898 294.827 108.183 294.827 107.301 cv
@
294.827 107.301 mo
294.827 106.419 282.357 105.704 266.975 105.704 cv
251.593 105.704 239.123 106.419 239.123 107.301 cv
239.123 108.183 251.593 108.898 266.975 108.898 cv
282.357 108.898 294.827 108.183 294.827 107.301 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
240.053 107.585 mo
(roundrobin\(256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256\))
[.413513 .620895 .620895 .620911 .620895 .413513 .620895 .620895 .34523 .620895 .413513 .620895 
.620895 .620911 .31044 .620911 .620895 .620895 .310455 .620895 .620911 .620895 .31044 .620911 
.620895 .620895 .310455 .620895 .620911 .620895 .310455 .62088 .620911 .620911 .310455 .62088 
.620911 .620911 .310425 .620911 .620911 .62088 .310455 .620911 .62088 .620911 .310455 .620911 
.62088 .620911 .310455 .62088 .620911 .620911 .310455 .62088 .620911 .62088 .310455 .620911 
.62088 .620911 .310455 .620911 .62088 .620911 .310455 .62088 .620911 .620911 .310455 .62088 
.620911 .620911 .310425 .620911 .620911 .62088 .310455 .620911 .62088 .620911 .310455 .620911 
.62088 .620911 .310455 .62088 .620911 .620911 .310455 .62088 .620911 .62088 .310455 .620911 
.62088 .620911 0 ]xsh
282.763 108.631 mo
312.478 111.115 376.608 116.437 413.152 119.808 cv
413.596 119.896 414.128 119.896 414.572 120.074 cv
@
414.305 120.251 mo
415.192 120.162 li
414.305 119.808 li
cp
@
414.305 120.251 mo
415.192 120.162 li
414.305 119.808 li
f
67.5772 92.754 mo
67.5772 91.676 65.9887 90.803 64.0292 90.803 cv
62.0697 90.803 60.4812 91.676 60.4812 92.754 cv
60.4812 93.832 62.0697 94.706 64.0292 94.706 cv
65.9887 94.706 67.5772 93.832 67.5772 92.754 cv
@
67.5772 92.754 mo
67.5772 91.676 65.9887 90.803 64.0292 90.803 cv
62.0697 90.803 60.4812 91.676 60.4812 92.754 cv
60.4812 93.832 62.0697 94.706 64.0292 94.706 cv
65.9887 94.706 67.5772 93.832 67.5772 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
62.0976 92.328 mo
(Identity)
[.413509 .620899 .551342 .620903 .345215 .345222 .345222 0 ]xsh
61.6959 93.7472 mo
(I/O: 1->1)
[.413509 .345222 .896561 .345219 .310452 .620895 .413513 .700371 0 ]xsh
64.0292 87.521 mo
64.0292 88.23 64.0292 89.029 64.0292 89.827 cv
@
63.8518 89.827 mo
64.0292 90.714 li
64.2953 89.827 li
cp
@
63.8518 89.827 mo
64.0292 90.714 li
64.2953 89.827 li
f
72.0122 100.028 mo
72.0122 98.95 68.4778 98.076 64.1179 98.076 cv
59.758 98.076 56.2236 98.95 56.2236 100.028 cv
56.2236 101.105 59.758 101.979 64.1179 101.979 cv
68.4778 101.979 72.0122 101.105 72.0122 100.028 cv
@
72.0122 100.028 mo
72.0122 98.95 68.4778 98.076 64.1179 98.076 cv
59.758 98.076 56.2236 98.95 56.2236 100.028 cv
56.2236 101.105 59.758 101.979 64.1179 101.979 cv
68.4778 101.979 72.0122 101.105 72.0122 100.028 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A73D9EB159A3CFECEE26FAC12AD4B6691842B4C84783
E84E1D8CD272AEC54014C937C15B810E403549328E3DC44B6A66E9E0AE5509A1
20FFE6F694340EC43D35C59CD7D1B2F14C1F1D5BA576A10F77E962817750FC0E
DC62627EE0E94BCE030A10C59143A015250A384C09B6A65F8572DF3FCBF68CF8
0D23E4E88D0691BD2178810DDABD5F40D8018F795B8CB5A52DDDD05F80E9A2BC
CDF3A5E14C701FBADF0447A7AE0E47FA8F86216AC25155BFF3569B19382CA905
7B18009FE630A2D7CEFDC3A4A3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /.notdef /colon 3{/.notdef}rp /greater 
2{/.notdef}rp /A /B /C /D /E /F /G 
/.notdef /I 2{/.notdef}rp /L /M /.notdef /O /P 
/.notdef /R /S /T /U /V 2{/.notdef}rp /Y 
5{/.notdef}rp /underscore /.notdef /a /b /c /d /e 
/f /g /.notdef /i /.notdef /k /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /.notdef /x /y 134{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
57.4272 99.6019 mo
(Pre_CollapsedDataParallel)
[.690441 .413509 .551342 .620899 .82827 .620899 .345222 .345219 .551342 .620899 .483051 .551342 
.620895 .896561 .551346 .345215 .551346 .690437 .551338 .413513 .551338 .345222 .345222 .551338 
0 ]xsh
60.5428 101.021 mo
(I/O: 128->128)
[.413509 .345222 .896561 .345219 .310452 .620899 .620899 .620903 .413506 .700371 .620903 .620895 
0 ]xsh
64.0292 94.794 mo
64.0292 95.504 64.1179 96.302 64.1179 97.1 cv
@
63.9405 97.1 mo
64.1179 97.987 li
64.384 97.1 li
cp
@
63.9405 97.1 mo
64.1179 97.987 li
64.384 97.1 li
f
68.3755 101.713 mo
70.0608 102.245 71.7461 102.777 73.0766 102.777 cv
128.514 104.463 184.04 104.019 239.389 105.261 cv
242.671 105.35 245.953 105.616 249.146 105.97 cv
@
248.969 106.148 mo
249.856 106.059 li
248.969 105.704 li
cp
@
248.969 106.148 mo
249.856 106.059 li
248.969 105.704 li
f
86.0268 92.754 mo
86.0268 91.676 84.4383 90.803 82.4788 90.803 cv
80.5193 90.803 78.9308 91.676 78.9308 92.754 cv
78.9308 93.832 80.5193 94.706 82.4788 94.706 cv
84.4383 94.706 86.0268 93.832 86.0268 92.754 cv
@
86.0268 92.754 mo
86.0268 91.676 84.4383 90.803 82.4788 90.803 cv
80.5193 90.803 78.9308 91.676 78.9308 92.754 cv
78.9308 93.832 80.5193 94.706 82.4788 94.706 cv
84.4383 94.706 86.0268 93.832 86.0268 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
80.5472 92.328 mo
(Identity)
[.413513 .620895 .551346 .620895 .345222 .345222 .345215 0 ]xsh
80.1455 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
82.4788 87.521 mo
82.4788 88.23 82.4788 89.029 82.4788 89.827 cv
@
82.3014 89.827 mo
82.4788 90.714 li
82.7449 89.827 li
cp
@
82.3014 89.827 mo
82.4788 90.714 li
82.7449 89.827 li
f
90.4618 100.028 mo
90.4618 98.95 86.9274 98.076 82.5675 98.076 cv
78.2076 98.076 74.6732 98.95 74.6732 100.028 cv
74.6732 101.105 78.2076 101.979 82.5675 101.979 cv
86.9274 101.979 90.4618 101.105 90.4618 100.028 cv
@
90.4618 100.028 mo
90.4618 98.95 86.9274 98.076 82.5675 98.076 cv
78.2076 98.076 74.6732 98.95 74.6732 100.028 cv
74.6732 101.105 78.2076 101.979 82.5675 101.979 cv
86.9274 101.979 90.4618 101.105 90.4618 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
75.8768 99.6019 mo
(Pre_CollapsedDataParallel)
[.690437 .413513 .551338 .620903 .82827 .620903 .345215 .345222 .551338 .620903 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .690437 .551338 .413513 .551338 .345222 .345222 .551338 
0 ]xsh
78.9924 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .413513 .700371 .620895 .620903 
0 ]xsh
82.4788 94.794 mo
82.4788 95.504 82.5675 96.302 82.5675 97.1 cv
@
82.3901 97.1 mo
82.5675 97.987 li
82.8336 97.1 li
cp
@
82.3901 97.1 mo
82.5675 97.987 li
82.8336 97.1 li
f
86.8251 101.713 mo
88.5104 102.245 90.1957 102.777 91.5262 102.777 cv
140.843 104.463 190.161 104.019 239.389 105.261 cv
242.671 105.35 245.953 105.616 249.146 105.97 cv
@
248.969 106.148 mo
249.856 106.059 li
248.969 105.704 li
cp
@
248.969 106.148 mo
249.856 106.059 li
248.969 105.704 li
f
104.565 92.754 mo
104.565 91.676 102.977 90.803 101.017 90.803 cv
99.0576 90.803 97.4691 91.676 97.4691 92.754 cv
97.4691 93.832 99.0576 94.706 101.017 94.706 cv
102.977 94.706 104.565 93.832 104.565 92.754 cv
@
104.565 92.754 mo
104.565 91.676 102.977 90.803 101.017 90.803 cv
99.0576 90.803 97.4691 91.676 97.4691 92.754 cv
97.4691 93.832 99.0576 94.706 101.017 94.706 cv
102.977 94.706 104.565 93.832 104.565 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
99.0855 92.328 mo
(Identity)
[.413513 .620895 .551346 .620895 .345222 .345222 .345215 0 ]xsh
98.6838 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
100.928 87.521 mo
100.928 88.23 101.017 89.029 101.017 89.827 cv
@
100.84 89.827 mo
101.017 90.714 li
101.283 89.827 li
cp
@
100.84 89.827 mo
101.017 90.714 li
101.283 89.827 li
f
109 100.028 mo
109 98.95 105.466 98.076 101.106 98.076 cv
96.7459 98.076 93.2115 98.95 93.2115 100.028 cv
93.2115 101.105 96.7459 101.979 101.106 101.979 cv
105.466 101.979 109 101.105 109 100.028 cv
@
109 100.028 mo
109 98.95 105.466 98.076 101.106 98.076 cv
96.7459 98.076 93.2115 98.95 93.2115 100.028 cv
93.2115 101.105 96.7459 101.979 101.106 101.979 cv
105.466 101.979 109 101.105 109 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
94.4151 99.6019 mo
(Pre_CollapsedDataParallel)
[.690437 .413513 .551338 .620903 .82827 .620903 .345215 .345222 .551338 .620903 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .690437 .551338 .413513 .551338 .345222 .345222 .551338 
0 ]xsh
97.5307 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .413513 .700371 .620895 .620903 
0 ]xsh
101.017 94.794 mo
101.017 95.504 101.106 96.302 101.106 97.1 cv
@
100.928 97.1 mo
101.106 97.987 li
101.372 97.1 li
cp
@
100.928 97.1 mo
101.106 97.987 li
101.372 97.1 li
f
105.363 101.713 mo
106.96 102.245 108.734 102.777 109.976 102.777 cv
153.173 104.463 196.281 104.019 239.389 105.261 cv
242.671 105.35 245.953 105.616 249.146 105.97 cv
@
248.969 106.148 mo
249.856 106.059 li
248.969 105.704 li
cp
@
248.969 106.148 mo
249.856 106.059 li
248.969 105.704 li
f
123.015 92.754 mo
123.015 91.676 121.426 90.803 119.467 90.803 cv
117.507 90.803 115.919 91.676 115.919 92.754 cv
115.919 93.832 117.507 94.706 119.467 94.706 cv
121.426 94.706 123.015 93.832 123.015 92.754 cv
@
123.015 92.754 mo
123.015 91.676 121.426 90.803 119.467 90.803 cv
117.507 90.803 115.919 91.676 115.919 92.754 cv
115.919 93.832 117.507 94.706 119.467 94.706 cv
121.426 94.706 123.015 93.832 123.015 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
117.535 92.328 mo
(Identity)
[.413513 .620895 .551346 .620895 .345222 .345222 .345215 0 ]xsh
117.133 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
119.378 87.521 mo
119.378 88.23 119.467 89.029 119.467 89.827 cv
@
119.289 89.827 mo
119.467 90.714 li
119.733 89.827 li
cp
@
119.289 89.827 mo
119.467 90.714 li
119.733 89.827 li
f
127.45 100.028 mo
127.45 98.95 123.915 98.076 119.555 98.076 cv
115.196 98.076 111.661 98.95 111.661 100.028 cv
111.661 101.105 115.196 101.979 119.555 101.979 cv
123.915 101.979 127.45 101.105 127.45 100.028 cv
@
127.45 100.028 mo
127.45 98.95 123.915 98.076 119.555 98.076 cv
115.196 98.076 111.661 98.95 111.661 100.028 cv
111.661 101.105 115.196 101.979 119.555 101.979 cv
123.915 101.979 127.45 101.105 127.45 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
112.865 99.6019 mo
(Pre_CollapsedDataParallel)
[.690437 .413513 .551338 .620903 .82827 .620903 .345215 .345222 .551338 .620903 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .690437 .551338 .413513 .551338 .345222 .345222 .551338 
0 ]xsh
115.981 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .413513 .700371 .620895 .620903 
0 ]xsh
119.467 94.794 mo
119.467 95.504 119.555 96.302 119.555 97.1 cv
@
119.378 97.1 mo
119.555 97.987 li
119.821 97.1 li
cp
@
119.378 97.1 mo
119.555 97.987 li
119.821 97.1 li
f
123.813 101.713 mo
125.41 102.245 127.184 102.777 128.425 102.777 cv
165.413 104.463 202.49 104.108 239.389 105.261 cv
242.494 105.35 245.775 105.616 248.88 105.97 cv
@
248.703 106.148 mo
249.59 106.059 li
248.703 105.704 li
cp
@
248.703 106.148 mo
249.59 106.059 li
248.703 105.704 li
f
141.464 92.754 mo
141.464 91.676 139.876 90.803 137.916 90.803 cv
135.957 90.803 134.368 91.676 134.368 92.754 cv
134.368 93.832 135.957 94.706 137.916 94.706 cv
139.876 94.706 141.464 93.832 141.464 92.754 cv
@
141.464 92.754 mo
141.464 91.676 139.876 90.803 137.916 90.803 cv
135.957 90.803 134.368 91.676 134.368 92.754 cv
134.368 93.832 135.957 94.706 137.916 94.706 cv
139.876 94.706 141.464 93.832 141.464 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
135.985 92.328 mo
(Identity)
[.413513 .620895 .551346 .620895 .345215 .34523 .345215 0 ]xsh
135.583 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
137.828 87.521 mo
137.828 88.23 137.916 89.029 137.916 89.827 cv
@
137.739 89.827 mo
137.916 90.714 li
138.182 89.827 li
cp
@
137.739 89.827 mo
137.916 90.714 li
138.182 89.827 li
f
145.899 100.028 mo
145.899 98.95 142.365 98.076 138.005 98.076 cv
133.645 98.076 130.111 98.95 130.111 100.028 cv
130.111 101.105 133.645 101.979 138.005 101.979 cv
142.365 101.979 145.899 101.105 145.899 100.028 cv
@
145.899 100.028 mo
145.899 98.95 142.365 98.076 138.005 98.076 cv
133.645 98.076 130.111 98.95 130.111 100.028 cv
130.111 101.105 133.645 101.979 138.005 101.979 cv
142.365 101.979 145.899 101.105 145.899 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
131.314 99.6019 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .69043 .551346 .413513 .551346 .345215 .345215 .551346 
0 ]xsh
134.43 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620911 .620895 
0 ]xsh
137.916 94.794 mo
137.916 95.504 138.005 96.302 138.005 97.1 cv
@
137.828 97.1 mo
138.005 97.987 li
138.271 97.1 li
cp
@
137.828 97.1 mo
138.005 97.987 li
138.271 97.1 li
f
142.263 101.713 mo
143.859 102.245 145.633 102.777 146.875 102.777 cv
177.743 104.374 208.61 104.108 239.389 105.261 cv
242.494 105.35 245.775 105.616 248.88 105.97 cv
@
248.703 106.148 mo
249.59 106.059 li
248.703 105.704 li
cp
@
248.703 106.148 mo
249.59 106.059 li
248.703 105.704 li
f
159.914 92.754 mo
159.914 91.676 158.325 90.803 156.366 90.803 cv
154.406 90.803 152.818 91.676 152.818 92.754 cv
152.818 93.832 154.406 94.706 156.366 94.706 cv
158.325 94.706 159.914 93.832 159.914 92.754 cv
@
159.914 92.754 mo
159.914 91.676 158.325 90.803 156.366 90.803 cv
154.406 90.803 152.818 91.676 152.818 92.754 cv
152.818 93.832 154.406 94.706 156.366 94.706 cv
158.325 94.706 159.914 93.832 159.914 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
154.434 92.328 mo
(Identity)
[.413513 .620895 .551346 .620895 .345215 .34523 .345215 0 ]xsh
154.032 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
156.277 87.521 mo
156.277 88.23 156.366 89.029 156.366 89.827 cv
@
156.188 89.827 mo
156.366 90.714 li
156.632 89.827 li
cp
@
156.188 89.827 mo
156.366 90.714 li
156.632 89.827 li
f
164.349 100.028 mo
164.349 98.95 160.814 98.076 156.455 98.076 cv
152.095 98.076 148.56 98.95 148.56 100.028 cv
148.56 101.105 152.095 101.979 156.455 101.979 cv
160.814 101.979 164.349 101.105 164.349 100.028 cv
@
164.349 100.028 mo
164.349 98.95 160.814 98.076 156.455 98.076 cv
152.095 98.076 148.56 98.95 148.56 100.028 cv
148.56 101.105 152.095 101.979 156.455 101.979 cv
160.814 101.979 164.349 101.105 164.349 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
149.764 99.6019 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .69043 .551346 .413513 .551346 .345215 .345215 .551346 
0 ]xsh
152.88 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620911 .620895 
0 ]xsh
156.366 94.794 mo
156.366 95.504 156.455 96.302 156.455 97.1 cv
@
156.277 97.1 mo
156.455 97.987 li
156.721 97.1 li
cp
@
156.277 97.1 mo
156.455 97.987 li
156.721 97.1 li
f
160.801 101.713 mo
162.397 102.245 164.083 102.689 165.325 102.777 cv
189.983 104.374 214.73 104.196 239.389 105.261 cv
242.494 105.438 245.598 105.704 248.703 105.97 cv
@
248.436 106.148 mo
249.323 106.059 li
248.436 105.704 li
cp
@
248.436 106.148 mo
249.323 106.059 li
248.436 105.704 li
f
178.363 92.754 mo
178.363 91.676 176.775 90.803 174.815 90.803 cv
172.856 90.803 171.267 91.676 171.267 92.754 cv
171.267 93.832 172.856 94.706 174.815 94.706 cv
176.775 94.706 178.363 93.832 178.363 92.754 cv
@
178.363 92.754 mo
178.363 91.676 176.775 90.803 174.815 90.803 cv
172.856 90.803 171.267 91.676 171.267 92.754 cv
171.267 93.832 172.856 94.706 174.815 94.706 cv
176.775 94.706 178.363 93.832 178.363 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
172.884 92.328 mo
(Identity)
[.413513 .620895 .551346 .620895 .345215 .34523 .345215 0 ]xsh
172.482 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
174.727 87.521 mo
174.727 88.23 174.815 89.029 174.815 89.827 cv
@
174.638 89.827 mo
174.815 90.714 li
175.082 89.827 li
cp
@
174.638 89.827 mo
174.815 90.714 li
175.082 89.827 li
f
182.798 100.028 mo
182.798 98.95 179.264 98.076 174.904 98.076 cv
170.544 98.076 167.01 98.95 167.01 100.028 cv
167.01 101.105 170.544 101.979 174.904 101.979 cv
179.264 101.979 182.798 101.105 182.798 100.028 cv
@
182.798 100.028 mo
182.798 98.95 179.264 98.076 174.904 98.076 cv
170.544 98.076 167.01 98.95 167.01 100.028 cv
167.01 101.105 170.544 101.979 174.904 101.979 cv
179.264 101.979 182.798 101.105 182.798 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
168.213 99.6019 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .690445 .551331 .413513 .551346 .345215 .345215 .551346 
0 ]xsh
171.329 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620911 .620895 
0 ]xsh
174.815 94.794 mo
174.815 95.504 174.904 96.302 174.904 97.1 cv
@
174.727 97.1 mo
174.904 97.987 li
175.17 97.1 li
cp
@
174.727 97.1 mo
174.904 97.987 li
175.17 97.1 li
f
179.25 101.713 mo
180.847 102.245 182.532 102.689 183.774 102.777 cv
202.312 104.285 220.939 104.285 239.389 105.261 cv
242.227 105.438 245.243 105.704 248.082 105.97 cv
@
248.17 106.237 mo
249.057 106.059 li
248.17 105.793 li
cp
@
248.17 106.237 mo
249.057 106.059 li
248.17 105.793 li
f
196.813 92.754 mo
196.813 91.676 195.225 90.803 193.265 90.803 cv
191.306 90.803 189.717 91.676 189.717 92.754 cv
189.717 93.832 191.306 94.706 193.265 94.706 cv
195.225 94.706 196.813 93.832 196.813 92.754 cv
@
196.813 92.754 mo
196.813 91.676 195.225 90.803 193.265 90.803 cv
191.306 90.803 189.717 91.676 189.717 92.754 cv
189.717 93.832 191.306 94.706 193.265 94.706 cv
195.225 94.706 196.813 93.832 196.813 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
191.333 92.328 mo
(Identity)
[.413513 .620895 .551346 .620895 .345215 .34523 .345215 0 ]xsh
190.931 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
193.176 87.521 mo
193.176 88.23 193.265 89.029 193.265 89.827 cv
@
193.088 89.827 mo
193.265 90.714 li
193.531 89.827 li
cp
@
193.088 89.827 mo
193.265 90.714 li
193.531 89.827 li
f
201.248 100.028 mo
201.248 98.95 197.714 98.076 193.354 98.076 cv
188.994 98.076 185.459 98.95 185.459 100.028 cv
185.459 101.105 188.994 101.979 193.354 101.979 cv
197.714 101.979 201.248 101.105 201.248 100.028 cv
@
201.248 100.028 mo
201.248 98.95 197.714 98.076 193.354 98.076 cv
188.994 98.076 185.459 98.95 185.459 100.028 cv
185.459 101.105 188.994 101.979 193.354 101.979 cv
197.714 101.979 201.248 101.105 201.248 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
186.663 99.6019 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .69043 .551346 .413513 .551346 .345215 .345215 .551346 
0 ]xsh
189.779 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620911 .620895 
0 ]xsh
193.265 94.794 mo
193.265 95.504 193.354 96.302 193.354 97.1 cv
@
193.176 97.1 mo
193.354 97.987 li
193.62 97.1 li
cp
@
193.176 97.1 mo
193.354 97.987 li
193.62 97.1 li
f
197.789 101.713 mo
199.297 102.245 200.982 102.689 202.224 102.777 cv
214.642 104.196 227.06 104.463 239.389 105.261 cv
242.05 105.438 245.509 105.704 249.057 105.97 cv
@
248.88 106.148 mo
249.767 106.059 li
248.88 105.704 li
cp
@
248.88 106.148 mo
249.767 106.059 li
248.88 105.704 li
f
215.263 92.754 mo
215.263 91.676 213.674 90.803 211.715 90.803 cv
209.755 90.803 208.167 91.676 208.167 92.754 cv
208.167 93.832 209.755 94.706 211.715 94.706 cv
213.674 94.706 215.263 93.832 215.263 92.754 cv
@
215.263 92.754 mo
215.263 91.676 213.674 90.803 211.715 90.803 cv
209.755 90.803 208.167 91.676 208.167 92.754 cv
208.167 93.832 209.755 94.706 211.715 94.706 cv
213.674 94.706 215.263 93.832 215.263 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
209.783 92.328 mo
(Identity)
[.413513 .620895 .551346 .620895 .345215 .34523 .345215 0 ]xsh
209.381 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
211.626 87.521 mo
211.626 88.23 211.715 89.029 211.715 89.827 cv
@
211.537 89.827 mo
211.715 90.714 li
211.981 89.827 li
cp
@
211.537 89.827 mo
211.715 90.714 li
211.981 89.827 li
f
219.698 100.028 mo
219.698 98.95 216.163 98.076 211.803 98.076 cv
207.443 98.076 203.909 98.95 203.909 100.028 cv
203.909 101.105 207.443 101.979 211.803 101.979 cv
216.163 101.979 219.698 101.105 219.698 100.028 cv
@
219.698 100.028 mo
219.698 98.95 216.163 98.076 211.803 98.076 cv
207.443 98.076 203.909 98.95 203.909 100.028 cv
203.909 101.105 207.443 101.979 211.803 101.979 cv
216.163 101.979 219.698 101.105 219.698 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
205.113 99.6019 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .69043 .551346 .413513 .551346 .345215 .345215 .551346 
0 ]xsh
208.229 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620911 .620895 
0 ]xsh
211.715 94.794 mo
211.715 95.504 211.803 96.302 211.803 97.1 cv
@
211.626 97.1 mo
211.803 97.987 li
212.069 97.1 li
cp
@
211.626 97.1 mo
211.803 97.987 li
212.069 97.1 li
f
216.327 101.713 mo
217.835 102.156 219.52 102.6 220.673 102.777 cv
228.656 103.842 240.808 104.995 250.565 105.882 cv
@
250.565 106.059 mo
251.452 105.97 li
250.565 105.704 li
cp
@
250.565 106.059 mo
251.452 105.97 li
250.565 105.704 li
f
233.712 92.754 mo
233.712 91.676 232.124 90.803 230.164 90.803 cv
228.205 90.803 226.616 91.676 226.616 92.754 cv
226.616 93.832 228.205 94.706 230.164 94.706 cv
232.124 94.706 233.712 93.832 233.712 92.754 cv
@
233.712 92.754 mo
233.712 91.676 232.124 90.803 230.164 90.803 cv
228.205 90.803 226.616 91.676 226.616 92.754 cv
226.616 93.832 228.205 94.706 230.164 94.706 cv
232.124 94.706 233.712 93.832 233.712 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
228.233 92.328 mo
(Identity)
[.413513 .620895 .551346 .620895 .345215 .34523 .345215 0 ]xsh
227.831 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
230.076 87.521 mo
230.076 88.23 230.164 89.029 230.164 89.827 cv
@
229.987 89.827 mo
230.164 90.714 li
230.43 89.827 li
cp
@
229.987 89.827 mo
230.164 90.714 li
230.43 89.827 li
f
238.147 100.028 mo
238.147 98.95 234.613 98.076 230.253 98.076 cv
225.893 98.076 222.359 98.95 222.359 100.028 cv
222.359 101.105 225.893 101.979 230.253 101.979 cv
234.613 101.979 238.147 101.105 238.147 100.028 cv
@
238.147 100.028 mo
238.147 98.95 234.613 98.076 230.253 98.076 cv
225.893 98.076 222.359 98.95 222.359 100.028 cv
222.359 101.105 225.893 101.979 230.253 101.979 cv
234.613 101.979 238.147 101.105 238.147 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
223.562 99.6019 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .690445 .551331 .413513 .551346 .345215 .345215 .551346 
0 ]xsh
226.678 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620911 .620895 
0 ]xsh
230.164 94.794 mo
230.164 95.504 230.253 96.302 230.253 97.1 cv
@
230.076 97.1 mo
230.253 97.987 li
230.519 97.1 li
cp
@
230.076 97.1 mo
230.253 97.987 li
230.519 97.1 li
f
234.865 101.624 mo
236.373 102.156 237.97 102.6 239.123 102.777 cv
243.735 103.753 250.477 104.817 256.153 105.704 cv
@
256.065 105.882 mo
256.952 105.793 li
256.065 105.438 li
cp
@
256.065 105.882 mo
256.952 105.793 li
256.065 105.438 li
f
252.073 92.754 mo
252.073 91.676 250.485 90.803 248.525 90.803 cv
246.566 90.803 244.977 91.676 244.977 92.754 cv
244.977 93.832 246.566 94.706 248.525 94.706 cv
250.485 94.706 252.073 93.832 252.073 92.754 cv
@
252.073 92.754 mo
252.073 91.676 250.485 90.803 248.525 90.803 cv
246.566 90.803 244.977 91.676 244.977 92.754 cv
244.977 93.832 246.566 94.706 248.525 94.706 cv
250.485 94.706 252.073 93.832 252.073 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
246.594 92.328 mo
(Identity)
[.413513 .620895 .551346 .620895 .345215 .34523 .345215 0 ]xsh
246.192 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
248.525 87.521 mo
248.525 88.23 248.525 89.029 248.525 89.827 cv
@
248.348 89.827 mo
248.525 90.714 li
248.791 89.827 li
cp
@
248.348 89.827 mo
248.525 90.714 li
248.791 89.827 li
f
256.508 100.028 mo
256.508 98.95 252.974 98.076 248.614 98.076 cv
244.254 98.076 240.72 98.95 240.72 100.028 cv
240.72 101.105 244.254 101.979 248.614 101.979 cv
252.974 101.979 256.508 101.105 256.508 100.028 cv
@
256.508 100.028 mo
256.508 98.95 252.974 98.076 248.614 98.076 cv
244.254 98.076 240.72 98.95 240.72 100.028 cv
240.72 101.105 244.254 101.979 248.614 101.979 cv
252.974 101.979 256.508 101.105 256.508 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
241.923 99.6019 mo
(Pre_CollapsedDataParallel)
[.690445 .413513 .551331 .620895 .828278 .620895 .34523 .345215 .551346 .620895 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .69043 .551346 .413513 .551346 .345215 .345215 .551346 
0 ]xsh
245.039 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .620895 .413513 .700363 .620911 .620895 
0 ]xsh
248.525 94.794 mo
248.525 95.504 248.614 96.302 248.614 97.1 cv
@
248.436 97.1 mo
248.614 97.987 li
248.88 97.1 li
cp
@
248.436 97.1 mo
248.614 97.987 li
248.88 97.1 li
f
252.871 101.713 mo
255.71 102.777 259.435 104.285 262.362 105.438 cv
@
262.096 105.527 mo
262.983 105.704 li
262.274 105.172 li
cp
@
262.096 105.527 mo
262.983 105.704 li
262.274 105.172 li
f
270.523 92.754 mo
270.523 91.676 268.934 90.803 266.975 90.803 cv
265.015 90.803 263.427 91.676 263.427 92.754 cv
263.427 93.832 265.015 94.706 266.975 94.706 cv
268.934 94.706 270.523 93.832 270.523 92.754 cv
@
270.523 92.754 mo
270.523 91.676 268.934 90.803 266.975 90.803 cv
265.015 90.803 263.427 91.676 263.427 92.754 cv
263.427 93.832 265.015 94.706 266.975 94.706 cv
268.934 94.706 270.523 93.832 270.523 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
265.043 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
264.641 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
266.975 87.521 mo
266.975 88.23 266.975 89.029 266.975 89.827 cv
@
266.797 89.827 mo
266.975 90.714 li
267.241 89.827 li
cp
@
266.797 89.827 mo
266.975 90.714 li
267.241 89.827 li
f
274.869 100.028 mo
274.869 98.95 271.335 98.076 266.975 98.076 cv
262.615 98.076 259.08 98.95 259.08 100.028 cv
259.08 101.105 262.615 101.979 266.975 101.979 cv
271.335 101.979 274.869 101.105 274.869 100.028 cv
@
274.869 100.028 mo
274.869 98.95 271.335 98.076 266.975 98.076 cv
262.615 98.076 259.08 98.95 259.08 100.028 cv
259.08 101.105 262.615 101.979 266.975 101.979 cv
271.335 101.979 274.869 101.105 274.869 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
260.284 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551331 
0 ]xsh
263.4 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
266.975 94.794 mo
266.975 95.504 266.975 96.302 266.975 97.1 cv
@
266.797 97.1 mo
266.975 97.987 li
267.241 97.1 li
cp
@
266.797 97.1 mo
266.975 97.987 li
267.241 97.1 li
f
266.975 102.068 mo
266.975 102.955 266.975 103.93 266.975 104.906 cv
@
266.797 104.817 mo
266.975 105.704 li
267.241 104.817 li
cp
@
266.797 104.817 mo
266.975 105.704 li
267.241 104.817 li
f
288.884 92.754 mo
288.884 91.676 287.295 90.803 285.336 90.803 cv
283.376 90.803 281.788 91.676 281.788 92.754 cv
281.788 93.832 283.376 94.706 285.336 94.706 cv
287.295 94.706 288.884 93.832 288.884 92.754 cv
@
288.884 92.754 mo
288.884 91.676 287.295 90.803 285.336 90.803 cv
283.376 90.803 281.788 91.676 281.788 92.754 cv
281.788 93.832 283.376 94.706 285.336 94.706 cv
287.295 94.706 288.884 93.832 288.884 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
283.404 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
283.002 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
285.424 87.521 mo
285.424 88.23 285.336 89.029 285.336 89.827 cv
@
285.158 89.827 mo
285.336 90.714 li
285.602 89.827 li
cp
@
285.158 89.827 mo
285.336 90.714 li
285.602 89.827 li
f
293.141 100.028 mo
293.141 98.95 289.607 98.076 285.247 98.076 cv
280.887 98.076 277.353 98.95 277.353 100.028 cv
277.353 101.105 280.887 101.979 285.247 101.979 cv
289.607 101.979 293.141 101.105 293.141 100.028 cv
@
293.141 100.028 mo
293.141 98.95 289.607 98.076 285.247 98.076 cv
280.887 98.076 277.353 98.95 277.353 100.028 cv
277.353 101.105 280.887 101.979 285.247 101.979 cv
289.607 101.979 293.141 101.105 293.141 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
278.556 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
281.672 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
285.336 94.794 mo
285.336 95.504 285.247 96.302 285.247 97.1 cv
@
285.07 97.1 mo
285.247 97.987 li
285.513 97.1 li
cp
@
285.07 97.1 mo
285.247 97.987 li
285.513 97.1 li
f
280.989 101.713 mo
278.151 102.777 274.426 104.285 271.587 105.438 cv
@
271.676 105.172 mo
270.966 105.704 li
271.853 105.527 li
cp
@
271.676 105.172 mo
270.966 105.704 li
271.853 105.527 li
f
307.333 92.754 mo
307.333 91.676 305.745 90.803 303.785 90.803 cv
301.826 90.803 300.237 91.676 300.237 92.754 cv
300.237 93.832 301.826 94.706 303.785 94.706 cv
305.745 94.706 307.333 93.832 307.333 92.754 cv
@
307.333 92.754 mo
307.333 91.676 305.745 90.803 303.785 90.803 cv
301.826 90.803 300.237 91.676 300.237 92.754 cv
300.237 93.832 301.826 94.706 303.785 94.706 cv
305.745 94.706 307.333 93.832 307.333 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
301.854 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
301.452 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
303.874 87.521 mo
303.874 88.23 303.785 89.029 303.785 89.827 cv
@
303.608 89.827 mo
303.785 90.714 li
304.051 89.827 li
cp
@
303.608 89.827 mo
303.785 90.714 li
304.051 89.827 li
f
311.591 100.028 mo
311.591 98.95 308.056 98.076 303.697 98.076 cv
299.337 98.076 295.802 98.95 295.802 100.028 cv
295.802 101.105 299.337 101.979 303.697 101.979 cv
308.056 101.979 311.591 101.105 311.591 100.028 cv
@
311.591 100.028 mo
311.591 98.95 308.056 98.076 303.697 98.076 cv
299.337 98.076 295.802 98.95 295.802 100.028 cv
295.802 101.105 299.337 101.979 303.697 101.979 cv
308.056 101.979 311.591 101.105 311.591 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
297.006 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
300.122 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
303.785 94.794 mo
303.785 95.504 303.697 96.302 303.697 97.1 cv
@
303.519 97.1 mo
303.697 97.987 li
303.963 97.1 li
cp
@
303.519 97.1 mo
303.697 97.987 li
303.963 97.1 li
f
299.084 101.624 mo
297.576 102.156 295.98 102.6 294.827 102.777 cv
290.303 103.753 283.473 104.817 277.796 105.704 cv
@
277.885 105.438 mo
276.998 105.793 li
277.885 105.882 li
cp
@
277.885 105.438 mo
276.998 105.793 li
277.885 105.882 li
f
325.783 92.754 mo
325.783 91.676 324.194 90.803 322.235 90.803 cv
320.275 90.803 318.687 91.676 318.687 92.754 cv
318.687 93.832 320.275 94.706 322.235 94.706 cv
324.194 94.706 325.783 93.832 325.783 92.754 cv
@
325.783 92.754 mo
325.783 91.676 324.194 90.803 322.235 90.803 cv
320.275 90.803 318.687 91.676 318.687 92.754 cv
318.687 93.832 320.275 94.706 322.235 94.706 cv
324.194 94.706 325.783 93.832 325.783 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
320.303 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
319.901 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
322.324 87.521 mo
322.324 88.23 322.235 89.029 322.235 89.827 cv
@
322.057 89.827 mo
322.235 90.714 li
322.501 89.827 li
cp
@
322.057 89.827 mo
322.235 90.714 li
322.501 89.827 li
f
330.04 100.028 mo
330.04 98.95 326.506 98.076 322.146 98.076 cv
317.786 98.076 314.252 98.95 314.252 100.028 cv
314.252 101.105 317.786 101.979 322.146 101.979 cv
326.506 101.979 330.04 101.105 330.04 100.028 cv
@
330.04 100.028 mo
330.04 98.95 326.506 98.076 322.146 98.076 cv
317.786 98.076 314.252 98.95 314.252 100.028 cv
314.252 101.105 317.786 101.979 322.146 101.979 cv
326.506 101.979 330.04 101.105 330.04 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
315.455 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
318.571 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
322.235 94.794 mo
322.235 95.504 322.146 96.302 322.146 97.1 cv
@
321.969 97.1 mo
322.146 97.987 li
322.412 97.1 li
cp
@
321.969 97.1 mo
322.146 97.987 li
322.412 97.1 li
f
317.711 101.713 mo
316.115 102.156 314.518 102.6 313.276 102.777 cv
305.293 103.842 293.053 104.995 283.118 105.882 cv
@
283.384 105.616 mo
282.497 105.97 li
283.384 106.059 li
cp
@
283.384 105.616 mo
282.497 105.97 li
283.384 106.059 li
f
344.232 92.754 mo
344.232 91.676 342.644 90.803 340.684 90.803 cv
338.725 90.803 337.136 91.676 337.136 92.754 cv
337.136 93.832 338.725 94.706 340.684 94.706 cv
342.644 94.706 344.232 93.832 344.232 92.754 cv
@
344.232 92.754 mo
344.232 91.676 342.644 90.803 340.684 90.803 cv
338.725 90.803 337.136 91.676 337.136 92.754 cv
337.136 93.832 338.725 94.706 340.684 94.706 cv
342.644 94.706 344.232 93.832 344.232 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
338.753 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
338.351 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
340.773 87.521 mo
340.773 88.23 340.684 89.029 340.684 89.827 cv
@
340.507 89.827 mo
340.684 90.714 li
340.951 89.827 li
cp
@
340.507 89.827 mo
340.684 90.714 li
340.951 89.827 li
f
348.49 100.028 mo
348.49 98.95 344.956 98.076 340.596 98.076 cv
336.236 98.076 332.701 98.95 332.701 100.028 cv
332.701 101.105 336.236 101.979 340.596 101.979 cv
344.956 101.979 348.49 101.105 348.49 100.028 cv
@
348.49 100.028 mo
348.49 98.95 344.956 98.076 340.596 98.076 cv
336.236 98.076 332.701 98.95 332.701 100.028 cv
332.701 101.105 336.236 101.979 340.596 101.979 cv
344.956 101.979 348.49 101.105 348.49 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
333.905 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
337.021 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
340.684 94.794 mo
340.684 95.504 340.596 96.302 340.596 97.1 cv
@
340.418 97.1 mo
340.596 97.987 li
340.862 97.1 li
cp
@
340.418 97.1 mo
340.596 97.987 li
340.862 97.1 li
f
336.161 101.713 mo
334.653 102.245 332.968 102.689 331.726 102.777 cv
319.929 104.019 301.39 105.172 287.198 106.059 cv
@
287.198 105.882 mo
286.311 106.148 li
287.198 106.237 li
cp
@
287.198 105.882 mo
286.311 106.148 li
287.198 106.237 li
f
362.682 92.754 mo
362.682 91.676 361.094 90.803 359.134 90.803 cv
357.175 90.803 355.586 91.676 355.586 92.754 cv
355.586 93.832 357.175 94.706 359.134 94.706 cv
361.094 94.706 362.682 93.832 362.682 92.754 cv
@
362.682 92.754 mo
362.682 91.676 361.094 90.803 359.134 90.803 cv
357.175 90.803 355.586 91.676 355.586 92.754 cv
355.586 93.832 357.175 94.706 359.134 94.706 cv
361.094 94.706 362.682 93.832 362.682 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
357.203 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
356.801 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
359.223 87.521 mo
359.223 88.23 359.134 89.029 359.134 89.827 cv
@
358.957 89.827 mo
359.134 90.714 li
359.4 89.827 li
cp
@
358.957 89.827 mo
359.134 90.714 li
359.4 89.827 li
f
366.94 100.028 mo
366.94 98.95 363.405 98.076 359.045 98.076 cv
354.685 98.076 351.151 98.95 351.151 100.028 cv
351.151 101.105 354.685 101.979 359.045 101.979 cv
363.405 101.979 366.94 101.105 366.94 100.028 cv
@
366.94 100.028 mo
366.94 98.95 363.405 98.076 359.045 98.076 cv
354.685 98.076 351.151 98.95 351.151 100.028 cv
351.151 101.105 354.685 101.979 359.045 101.979 cv
363.405 101.979 366.94 101.105 366.94 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
352.355 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
355.471 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
359.134 94.794 mo
359.134 95.504 359.045 96.302 359.045 97.1 cv
@
358.868 97.1 mo
359.045 97.987 li
359.311 97.1 li
cp
@
358.868 97.1 mo
359.045 97.987 li
359.311 97.1 li
f
354.699 101.713 mo
353.191 102.245 351.417 102.689 350.175 102.777 cv
333.943 104.108 308.22 105.438 289.593 106.325 cv
@
289.771 106.059 mo
288.884 106.325 li
289.771 106.503 li
cp
@
289.771 106.059 mo
288.884 106.325 li
289.771 106.503 li
f
381.132 92.754 mo
381.132 91.676 379.543 90.803 377.584 90.803 cv
375.624 90.803 374.036 91.676 374.036 92.754 cv
374.036 93.832 375.624 94.706 377.584 94.706 cv
379.543 94.706 381.132 93.832 381.132 92.754 cv
@
381.132 92.754 mo
381.132 91.676 379.543 90.803 377.584 90.803 cv
375.624 90.803 374.036 91.676 374.036 92.754 cv
374.036 93.832 375.624 94.706 377.584 94.706 cv
379.543 94.706 381.132 93.832 381.132 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
375.652 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
375.25 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
377.672 87.521 mo
377.672 88.23 377.584 89.029 377.584 89.827 cv
@
377.406 89.827 mo
377.584 90.714 li
377.85 89.827 li
cp
@
377.406 89.827 mo
377.584 90.714 li
377.85 89.827 li
f
385.389 100.028 mo
385.389 98.95 381.855 98.076 377.495 98.076 cv
373.135 98.076 369.601 98.95 369.601 100.028 cv
369.601 101.105 373.135 101.979 377.495 101.979 cv
381.855 101.979 385.389 101.105 385.389 100.028 cv
@
385.389 100.028 mo
385.389 98.95 381.855 98.076 377.495 98.076 cv
373.135 98.076 369.601 98.95 369.601 100.028 cv
369.601 101.105 373.135 101.979 377.495 101.979 cv
381.855 101.979 385.389 101.105 385.389 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
370.804 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
373.92 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
377.584 94.794 mo
377.584 95.504 377.495 96.302 377.495 97.1 cv
@
377.318 97.1 mo
377.495 97.987 li
377.761 97.1 li
cp
@
377.318 97.1 mo
377.495 97.987 li
377.761 97.1 li
f
373.149 101.713 mo
371.641 102.245 369.867 102.689 368.625 102.777 cv
347.78 104.196 314.163 105.616 291.279 106.503 cv
@
291.545 106.237 mo
290.658 106.503 li
291.545 106.68 li
cp
@
291.545 106.237 mo
290.658 106.503 li
291.545 106.68 li
f
399.581 92.754 mo
399.581 91.676 397.993 90.803 396.033 90.803 cv
394.074 90.803 392.485 91.676 392.485 92.754 cv
392.485 93.832 394.074 94.706 396.033 94.706 cv
397.993 94.706 399.581 93.832 399.581 92.754 cv
@
399.581 92.754 mo
399.581 91.676 397.993 90.803 396.033 90.803 cv
394.074 90.803 392.485 91.676 392.485 92.754 cv
392.485 93.832 394.074 94.706 396.033 94.706 cv
397.993 94.706 399.581 93.832 399.581 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
394.102 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
393.7 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
396.122 87.521 mo
396.122 88.23 396.033 89.029 396.033 89.827 cv
@
395.856 89.827 mo
396.033 90.714 li
396.299 89.827 li
cp
@
395.856 89.827 mo
396.033 90.714 li
396.299 89.827 li
f
403.839 100.028 mo
403.839 98.95 400.304 98.076 395.945 98.076 cv
391.585 98.076 388.05 98.95 388.05 100.028 cv
388.05 101.105 391.585 101.979 395.945 101.979 cv
400.304 101.979 403.839 101.105 403.839 100.028 cv
@
403.839 100.028 mo
403.839 98.95 400.304 98.076 395.945 98.076 cv
391.585 98.076 388.05 98.95 388.05 100.028 cv
388.05 101.105 391.585 101.979 395.945 101.979 cv
400.304 101.979 403.839 101.105 403.839 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
389.254 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
392.37 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
396.033 94.794 mo
396.033 95.504 395.945 96.302 395.945 97.1 cv
@
395.767 97.1 mo
395.945 97.987 li
396.211 97.1 li
cp
@
395.767 97.1 mo
395.945 97.987 li
396.211 97.1 li
f
391.687 101.713 mo
390.09 102.245 388.316 102.777 387.075 102.777 cv
361.529 104.285 319.308 105.704 292.432 106.591 cv
@
292.609 106.325 mo
291.722 106.591 li
292.609 106.769 li
cp
@
292.609 106.325 mo
291.722 106.591 li
292.609 106.769 li
f
418.031 92.754 mo
418.031 91.676 416.442 90.803 414.483 90.803 cv
412.523 90.803 410.935 91.676 410.935 92.754 cv
410.935 93.832 412.523 94.706 414.483 94.706 cv
416.442 94.706 418.031 93.832 418.031 92.754 cv
@
418.031 92.754 mo
418.031 91.676 416.442 90.803 414.483 90.803 cv
412.523 90.803 410.935 91.676 410.935 92.754 cv
410.935 93.832 412.523 94.706 414.483 94.706 cv
416.442 94.706 418.031 93.832 418.031 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
412.551 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
412.149 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
414.572 87.521 mo
414.572 88.23 414.483 89.029 414.483 89.827 cv
@
414.305 89.827 mo
414.483 90.714 li
414.749 89.827 li
cp
@
414.305 89.827 mo
414.483 90.714 li
414.749 89.827 li
f
422.288 100.028 mo
422.288 98.95 418.754 98.076 414.394 98.076 cv
410.034 98.076 406.5 98.95 406.5 100.028 cv
406.5 101.105 410.034 101.979 414.394 101.979 cv
418.754 101.979 422.288 101.105 422.288 100.028 cv
@
422.288 100.028 mo
422.288 98.95 418.754 98.076 414.394 98.076 cv
410.034 98.076 406.5 98.95 406.5 100.028 cv
406.5 101.105 410.034 101.979 414.394 101.979 cv
418.754 101.979 422.288 101.105 422.288 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
407.703 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551331 
0 ]xsh
410.819 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
414.483 94.794 mo
414.483 95.504 414.394 96.302 414.394 97.1 cv
@
414.217 97.1 mo
414.394 97.987 li
414.66 97.1 li
cp
@
414.217 97.1 mo
414.394 97.987 li
414.66 97.1 li
f
410.137 101.713 mo
408.54 102.245 406.766 102.777 405.524 102.777 cv
374.923 104.285 324.098 105.793 293.23 106.68 cv
@
293.319 106.414 mo
292.432 106.68 li
293.319 106.857 li
cp
@
293.319 106.414 mo
292.432 106.68 li
293.319 106.857 li
f
436.48 92.754 mo
436.48 91.676 434.892 90.803 432.932 90.803 cv
430.973 90.803 429.384 91.676 429.384 92.754 cv
429.384 93.832 430.973 94.706 432.932 94.706 cv
434.892 94.706 436.48 93.832 436.48 92.754 cv
@
436.48 92.754 mo
436.48 91.676 434.892 90.803 432.932 90.803 cv
430.973 90.803 429.384 91.676 429.384 92.754 cv
429.384 93.832 430.973 94.706 432.932 94.706 cv
434.892 94.706 436.48 93.832 436.48 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
431.001 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
430.599 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
433.021 87.521 mo
433.021 88.23 432.932 89.029 432.932 89.827 cv
@
432.755 89.827 mo
432.932 90.714 li
433.199 89.827 li
cp
@
432.755 89.827 mo
432.932 90.714 li
433.199 89.827 li
f
440.738 100.028 mo
440.738 98.95 437.204 98.076 432.844 98.076 cv
428.484 98.076 424.949 98.95 424.949 100.028 cv
424.949 101.105 428.484 101.979 432.844 101.979 cv
437.204 101.979 440.738 101.105 440.738 100.028 cv
@
440.738 100.028 mo
440.738 98.95 437.204 98.076 432.844 98.076 cv
428.484 98.076 424.949 98.95 424.949 100.028 cv
424.949 101.105 428.484 101.979 432.844 101.979 cv
437.204 101.979 440.738 101.105 440.738 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
426.153 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551331 
0 ]xsh
429.269 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
432.932 94.794 mo
432.932 95.504 432.844 96.302 432.844 97.1 cv
@
432.666 97.1 mo
432.844 97.987 li
433.11 97.1 li
cp
@
432.666 97.1 mo
432.844 97.987 li
433.11 97.1 li
f
428.586 101.713 mo
426.99 102.245 425.216 102.777 423.974 102.777 cv
388.228 104.374 328.089 105.882 293.496 106.68 cv
@
293.762 106.414 mo
292.875 106.68 li
293.762 106.857 li
cp
@
293.762 106.414 mo
292.875 106.68 li
293.762 106.857 li
f
454.93 92.754 mo
454.93 91.676 453.342 90.803 451.382 90.803 cv
449.423 90.803 447.834 91.676 447.834 92.754 cv
447.834 93.832 449.423 94.706 451.382 94.706 cv
453.342 94.706 454.93 93.832 454.93 92.754 cv
@
454.93 92.754 mo
454.93 91.676 453.342 90.803 451.382 90.803 cv
449.423 90.803 447.834 91.676 447.834 92.754 cv
447.834 93.832 449.423 94.706 451.382 94.706 cv
453.342 94.706 454.93 93.832 454.93 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
449.45 92.328 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
449.048 93.7472 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
451.471 87.521 mo
451.471 88.23 451.382 89.029 451.382 89.827 cv
@
451.205 89.827 mo
451.382 90.714 li
451.648 89.827 li
cp
@
451.205 89.827 mo
451.382 90.714 li
451.648 89.827 li
f
459.188 100.028 mo
459.188 98.95 455.653 98.076 451.293 98.076 cv
446.933 98.076 443.399 98.95 443.399 100.028 cv
443.399 101.105 446.933 101.979 451.293 101.979 cv
455.653 101.979 459.188 101.105 459.188 100.028 cv
@
459.188 100.028 mo
459.188 98.95 455.653 98.076 451.293 98.076 cv
446.933 98.076 443.399 98.95 443.399 100.028 cv
443.399 101.105 446.933 101.979 451.293 101.979 cv
455.653 101.979 459.188 101.105 459.188 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
444.603 99.6019 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
447.719 101.021 mo
(I/O: 128->128)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .413483 .700378 .620911 .62088 
0 ]xsh
451.382 94.794 mo
451.382 95.504 451.293 96.302 451.293 97.1 cv
@
451.116 97.1 mo
451.293 97.987 li
451.559 97.1 li
cp
@
451.116 97.1 mo
451.293 97.987 li
451.559 97.1 li
f
447.036 101.713 mo
445.439 102.245 443.665 102.777 442.423 102.777 cv
401.621 104.463 332.169 105.97 294.028 106.769 cv
@
294.206 106.503 mo
293.319 106.769 li
294.206 106.946 li
cp
@
294.206 106.503 mo
293.319 106.769 li
294.206 106.946 li
f
474.089 85.481 mo
474.089 84.403 472.501 83.529 470.541 83.529 cv
468.582 83.529 466.993 84.403 466.993 85.481 cv
466.993 86.558 468.582 87.432 470.541 87.432 cv
472.501 87.432 474.089 86.558 474.089 85.481 cv
@
474.089 85.481 mo
474.089 84.403 472.501 83.529 470.541 83.529 cv
468.582 83.529 466.993 84.403 466.993 85.481 cv
466.993 86.558 468.582 87.432 470.541 87.432 cv
472.501 87.432 474.089 86.558 474.089 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
468.61 85.0549 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
468.208 86.4742 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
470.63 80.247 mo
470.63 80.957 470.541 81.755 470.541 82.554 cv
@
470.364 82.554 mo
470.541 83.441 li
470.807 82.554 li
cp
@
470.364 82.554 mo
470.541 83.441 li
470.807 82.554 li
f
478.347 92.754 mo
478.347 91.676 474.812 90.803 470.453 90.803 cv
466.093 90.803 462.558 91.676 462.558 92.754 cv
462.558 93.832 466.093 94.706 470.453 94.706 cv
474.812 94.706 478.347 93.832 478.347 92.754 cv
@
478.347 92.754 mo
478.347 91.676 474.812 90.803 470.453 90.803 cv
466.093 90.803 462.558 91.676 462.558 92.754 cv
462.558 93.832 466.093 94.706 470.453 94.706 cv
474.812 94.706 478.347 93.832 478.347 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
463.762 92.328 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
466.257 93.7472 mo
(I/O: 5632->5632)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .62088 .413513 .700378 .62088 
.620911 .620911 0 ]xsh
470.541 87.521 mo
470.541 88.23 470.453 89.029 470.453 89.827 cv
@
470.275 89.827 mo
470.453 90.714 li
470.719 89.827 li
cp
@
470.275 89.827 mo
470.453 90.714 li
470.719 89.827 li
f
474.71 100.028 mo
474.71 98.95 472.804 98.076 470.453 98.076 cv
468.101 98.076 466.195 98.95 466.195 100.028 cv
466.195 101.105 468.101 101.979 470.453 101.979 cv
472.804 101.979 474.71 101.105 474.71 100.028 cv
@
474.71 100.028 mo
474.71 98.95 472.804 98.076 470.453 98.076 cv
468.101 98.076 466.195 98.95 466.195 100.028 cv
466.195 101.105 468.101 101.979 470.453 101.979 cv
472.804 101.979 474.71 101.105 474.71 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
467.349 99.6019 mo
(DropSecond)
[.896576 .413483 .620911 .620911 .69043 .551331 .551361 .62088 .620911 0 ]xsh
468.12 101.021 mo
(I/O: 2->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
470.453 94.794 mo
470.453 95.504 470.453 96.302 470.453 97.1 cv
@
470.275 97.1 mo
470.453 97.987 li
470.719 97.1 li
cp
@
470.275 97.1 mo
470.453 97.987 li
470.719 97.1 li
f
478.347 107.301 mo
478.347 106.223 474.812 105.35 470.453 105.35 cv
466.093 105.35 462.558 106.223 462.558 107.301 cv
462.558 108.379 466.093 109.252 470.453 109.252 cv
474.812 109.252 478.347 108.379 478.347 107.301 cv
@
478.347 107.301 mo
478.347 106.223 474.812 105.35 470.453 105.35 cv
466.093 105.35 462.558 106.223 462.558 107.301 cv
462.558 108.379 466.093 109.252 470.453 109.252 cv
474.812 109.252 478.347 108.379 478.347 107.301 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
463.762 106.875 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
467.498 108.294 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
470.453 102.068 mo
470.453 102.777 470.453 103.576 470.453 104.374 cv
@
470.275 104.374 mo
470.453 105.261 li
470.719 104.374 li
cp
@
470.275 104.374 mo
470.453 105.261 li
470.719 104.374 li
f
477.903 114.574 mo
477.903 113.497 474.488 112.623 470.275 112.623 cv
466.062 112.623 462.647 113.497 462.647 114.574 cv
462.647 115.652 466.062 116.526 470.275 116.526 cv
474.488 116.526 477.903 115.652 477.903 114.574 cv
@
477.903 114.574 mo
477.903 113.497 474.488 112.623 470.275 112.623 cv
466.062 112.623 462.647 113.497 462.647 114.574 cv
462.647 115.652 466.062 116.526 470.275 116.526 cv
474.488 116.526 477.903 115.652 477.903 114.574 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/h <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA64197CEECB76B9E4
D2E9F717E2E21BA6AFBDB9D486017DE1334EE2B8AC7E25B49C380829180892EE
A76E25D726C9DCA303C64F5FE456E4A565D8D0ED565D009BA02A6DD13A835659
5990FC1760FC10BB02F96DEC2D5390B1C4D4059132A392595F028220DA07D2CD
E701448700C9> |-
/w <1C60D8A8C9B6079F6CBBA5F366E947F933D60DF598D919B1B7650559D736
37DABDC1EE55BCEC17305D792CEB494E24BD853631335C74FFCA113C4D914522
6940D65B0FA636B78B1332922431C88D4DDF20C0A3C1C91D0C3F0EC21F67A6EF
80D94D8DD0BC64DA8FAF76B12BBC90C7B441833497F4FAAF7AFFFE22453504D1
C6C3D3F89787D8CE910F64CD7AC81F424C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 104 /h put
dup 119 /w put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /.notdef /colon 3{/.notdef}rp /greater 
2{/.notdef}rp /A /B /C /D /E /F /G 
/.notdef /I 2{/.notdef}rp /L /M /.notdef /O /P 
/.notdef /R /S /T /U /V 2{/.notdef}rp /Y 
5{/.notdef}rp /underscore /.notdef /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /w /x /y 134{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
463.86 114.149 mo
(ChannelDownsample_1D)
[.828278 .62088 .551361 .62088 .620911 .551331 .345245 .896545 .620911 .896545 .620911 .483032 
.551361 .966125 .62088 .345215 .551361 .62088 .620911 0 ]xsh
467.942 115.568 mo
(I/O: 2->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
470.364 109.341 mo
470.364 110.051 470.364 110.849 470.364 111.647 cv
@
470.186 111.647 mo
470.364 112.534 li
470.63 111.647 li
cp
@
470.186 111.647 mo
470.364 112.534 li
470.63 111.647 li
f
466.461 116.348 mo
465.219 116.792 463.889 117.235 462.913 117.324 cv
452.979 118.743 436.126 120.074 426.635 120.872 cv
@
426.635 120.695 mo
425.748 120.961 li
426.635 121.049 li
cp
@
426.635 120.695 mo
425.748 120.961 li
426.635 121.049 li
f
492.539 85.481 mo
492.539 84.403 490.95 83.529 488.991 83.529 cv
487.031 83.529 485.443 84.403 485.443 85.481 cv
485.443 86.558 487.031 87.432 488.991 87.432 cv
490.95 87.432 492.539 86.558 492.539 85.481 cv
@
492.539 85.481 mo
492.539 84.403 490.95 83.529 488.991 83.529 cv
487.031 83.529 485.443 84.403 485.443 85.481 cv
485.443 86.558 487.031 87.432 488.991 87.432 cv
490.95 87.432 492.539 86.558 492.539 85.481 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
487.059 85.0549 mo
(Identity)
[.413513 .620911 .551331 .620911 .345215 .345215 .345215 0 ]xsh
486.657 86.4742 mo
(I/O: 1->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
489.08 80.247 mo
489.08 80.957 488.991 81.755 488.991 82.554 cv
@
488.813 82.554 mo
488.991 83.441 li
489.257 82.554 li
cp
@
488.813 82.554 mo
488.991 83.441 li
489.257 82.554 li
f
496.796 92.754 mo
496.796 91.676 493.262 90.803 488.902 90.803 cv
484.542 90.803 481.008 91.676 481.008 92.754 cv
481.008 93.832 484.542 94.706 488.902 94.706 cv
493.262 94.706 496.796 93.832 496.796 92.754 cv
@
496.796 92.754 mo
496.796 91.676 493.262 90.803 488.902 90.803 cv
484.542 90.803 481.008 91.676 481.008 92.754 cv
481.008 93.832 484.542 94.706 488.902 94.706 cv
493.262 94.706 496.796 93.832 496.796 92.754 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
482.212 92.328 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
484.707 93.7472 mo
(I/O: 5632->5632)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .620911 .62088 .413513 .700378 .62088 
.620911 .620911 0 ]xsh
488.991 87.521 mo
488.991 88.23 488.902 89.029 488.902 89.827 cv
@
488.725 89.827 mo
488.902 90.714 li
489.168 89.827 li
cp
@
488.725 89.827 mo
488.902 90.714 li
489.168 89.827 li
f
493.16 100.028 mo
493.16 98.95 491.254 98.076 488.902 98.076 cv
486.551 98.076 484.645 98.95 484.645 100.028 cv
484.645 101.105 486.551 101.979 488.902 101.979 cv
491.254 101.979 493.16 101.105 493.16 100.028 cv
@
493.16 100.028 mo
493.16 98.95 491.254 98.076 488.902 98.076 cv
486.551 98.076 484.645 98.95 484.645 100.028 cv
484.645 101.105 486.551 101.979 488.902 101.979 cv
491.254 101.979 493.16 101.105 493.16 100.028 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
485.798 99.6019 mo
(DropSecond)
[.896576 .413483 .620911 .620911 .69043 .551331 .551361 .62088 .620911 0 ]xsh
486.569 101.021 mo
(I/O: 2->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
488.902 94.794 mo
488.902 95.504 488.902 96.302 488.902 97.1 cv
@
488.725 97.1 mo
488.902 97.987 li
489.168 97.1 li
cp
@
488.725 97.1 mo
488.902 97.987 li
489.168 97.1 li
f
496.796 107.301 mo
496.796 106.223 493.262 105.35 488.902 105.35 cv
484.542 105.35 481.008 106.223 481.008 107.301 cv
481.008 108.379 484.542 109.252 488.902 109.252 cv
493.262 109.252 496.796 108.379 496.796 107.301 cv
@
496.796 107.301 mo
496.796 106.223 493.262 105.35 488.902 105.35 cv
484.542 105.35 481.008 106.223 481.008 107.301 cv
481.008 108.379 484.542 109.252 488.902 109.252 cv
493.262 109.252 496.796 108.379 496.796 107.301 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
482.212 106.875 mo
(Pre_CollapsedDataParallel)
[.69043 .413513 .551361 .62088 .828278 .620911 .345215 .345215 .551331 .620911 .483063 .551331 
.620911 .896545 .551331 .345245 .551331 .69043 .551361 .413483 .551361 .345215 .345215 .551361 
0 ]xsh
485.948 108.294 mo
(I/O: 16->16)
[.413513 .345215 .896576 .345215 .310455 .62088 .620911 .413513 .700348 .620911 0 ]xsh
488.902 102.068 mo
488.902 102.777 488.902 103.576 488.902 104.374 cv
@
488.725 104.374 mo
488.902 105.261 li
489.168 104.374 li
cp
@
488.725 104.374 mo
488.902 105.261 li
489.168 104.374 li
f
496.353 114.574 mo
496.353 113.497 492.938 112.623 488.725 112.623 cv
484.512 112.623 481.097 113.497 481.097 114.574 cv
481.097 115.652 484.512 116.526 488.725 116.526 cv
492.938 116.526 496.353 115.652 496.353 114.574 cv
@
496.353 114.574 mo
496.353 113.497 492.938 112.623 488.725 112.623 cv
484.512 112.623 481.097 113.497 481.097 114.574 cv
481.097 115.652 484.512 116.526 488.725 116.526 cv
492.938 116.526 496.353 115.652 496.353 114.574 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
482.31 114.149 mo
(ChannelDownsample_1D)
[.828278 .62088 .551361 .62088 .620911 .551331 .345245 .896545 .620911 .896545 .620911 .483032 
.551361 .966125 .62088 .345215 .551361 .62088 .620911 0 ]xsh
486.392 115.568 mo
(I/O: 2->1)
[.413513 .345215 .896576 .345215 .310455 .62088 .413513 .700378 0 ]xsh
488.813 109.341 mo
488.813 110.051 488.813 110.849 488.813 111.647 cv
@
488.636 111.647 mo
488.813 112.534 li
489.08 111.647 li
cp
@
488.636 111.647 mo
488.813 112.534 li
489.08 111.647 li
f
484.467 116.26 mo
482.959 116.792 481.274 117.235 480.032 117.324 cv
465.131 118.832 439.141 120.34 426.546 121.049 cv
@
426.723 120.783 mo
425.836 121.049 li
426.723 121.227 li
cp
@
426.723 120.783 mo
425.836 121.049 li
426.723 121.227 li
f
107.403 141.894 mo
107.403 140.816 104.425 139.943 100.751 139.943 cv
97.0769 139.943 94.0985 140.816 94.0985 141.894 cv
94.0985 142.972 97.0769 143.845 100.751 143.845 cv
104.425 143.845 107.403 142.972 107.403 141.894 cv
@
107.403 141.894 mo
107.403 140.816 104.425 139.943 100.751 139.943 cv
97.0769 139.943 94.0985 140.816 94.0985 141.894 cv
94.0985 142.972 97.0769 143.845 100.751 143.845 cv
104.425 143.845 107.403 142.972 107.403 141.894 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
97.7154 141.468 mo
(Anonymous)
[.896561 .620903 .620895 .620903 .620895 .966125 .620895 .620903 0 ]xsh
95.3132 142.887 mo
(I/O: 126722->126720)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .620903 .620895 .620903 .413513 
.700363 .620903 .620895 .620903 .620903 .620895 0 ]xsh
100.751 136.661 mo
100.751 137.37 100.751 138.169 100.751 138.967 cv
@
100.574 138.967 mo
100.751 139.854 li
101.017 138.967 li
cp
@
100.574 138.967 mo
100.751 139.854 li
101.017 138.967 li
f
105.541 148.724 mo
105.541 147.842 103.396 147.127 100.751 147.127 cv
98.1057 147.127 95.9612 147.842 95.9612 148.724 cv
95.9612 149.606 98.1057 150.32 100.751 150.32 cv
103.396 150.32 105.541 149.606 105.541 148.724 cv
@
105.541 148.724 mo
105.541 147.842 103.396 147.127 100.751 147.127 cv
98.1057 147.127 95.9612 147.842 95.9612 148.724 cv
95.9612 149.606 98.1057 150.32 100.751 150.32 cv
103.396 150.32 105.541 149.606 105.541 148.724 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
96.8195 149.008 mo
(duplicate\(1,1,1\))
[.620903 .620895 .620903 .345215 .345222 .551346 .551338 .345222 .551338 .413506 .620903 .310448 
.620903 .310448 .620903 0 ]xsh
100.751 143.934 mo
100.751 144.644 100.751 145.442 100.751 146.24 cv
@
100.574 146.24 mo
100.751 147.127 li
101.017 146.24 li
cp
@
100.574 146.24 mo
100.751 147.127 li
101.017 146.24 li
f
92.4132 156.529 mo
92.4132 155.452 89.395 154.578 85.672 154.578 cv
81.949 154.578 78.9308 155.452 78.9308 156.529 cv
78.9308 157.607 81.949 158.481 85.672 158.481 cv
89.395 158.481 92.4132 157.607 92.4132 156.529 cv
@
92.4132 156.529 mo
92.4132 155.452 89.395 154.578 85.672 154.578 cv
81.949 154.578 78.9308 155.452 78.9308 156.529 cv
78.9308 157.607 81.949 158.481 85.672 158.481 cv
89.395 158.481 92.4132 157.607 92.4132 156.529 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7A73DFCCE6C978678EE12F2E62BD7D7FA244984C1E12F1
0EB0B8765182EBCE165DFB850DB8B03381969B80BB1CA53FFB24B5DE34530C8C
83A80415FE19B7C2B551E605143CF6469C8BCE336F9A5E5012DD932CF553D663
37837328637F50B90FF9AE8815D00BBA7EFCE6D508C5B6EBE2D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 3{/.notdef}rp /greater 
2{/.notdef}rp /A /B /C /D /E /F /G 
/.notdef /I 2{/.notdef}rp /L /M /.notdef /O /P 
/.notdef /R /S /T /U /V 2{/.notdef}rp /Y 
5{/.notdef}rp /underscore /.notdef /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /w /x /y 134{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
80.1188 156.104 mo
(IntraMotionPrediction)
[.413513 .620895 .345222 .413513 .551338 1.10395 .620895 .345222 .345222 .620895 .620903 .690437 
.413513 .551338 .620903 .345222 .551338 .345222 .345215 .620903 0 ]xsh
82.0969 157.523 mo
(I/O: 384->389)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .413513 .700371 .620895 .620903 
0 ]xsh
98.09 150.054 mo
95.7838 151.296 92.3245 153.159 89.5748 154.489 cv
@
89.7522 154.135 mo
89.0426 154.755 li
89.9296 154.578 li
cp
@
89.7522 154.135 mo
89.0426 154.755 li
89.9296 154.578 li
f
107.492 156.529 mo
107.492 154.864 104.474 153.514 100.751 153.514 cv
97.0279 153.514 94.0098 154.864 94.0098 156.529 cv
94.0098 158.195 97.0279 159.545 100.751 159.545 cv
104.474 159.545 107.492 158.195 107.492 156.529 cv
@
107.492 156.529 mo
107.492 154.864 104.474 153.514 100.751 153.514 cv
97.0279 153.514 94.0098 154.864 94.0098 156.529 cv
94.0098 158.195 97.0279 159.545 100.751 159.545 cv
104.474 159.545 107.492 158.195 107.492 156.529 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
96.2315 155.394 mo
(MotionEstimation)
[1.10395 .620903 .345215 .345222 .620903 .620895 .758736 .483047 .345222 .345215 .966125 .551338 
.345222 .345215 .620903 0 ]xsh
97.1759 156.813 mo
(I/O: 384->389)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .413513 .700371 .620895 .620903 
0 ]xsh
95.4734 158.232 mo
(*** STATEFUL ***)
[.620903 .620895 .620903 .310448 .690445 .758728 .896561 .758728 .758728 .690445 .896561 .758728 
.310455 .620895 .620903 0 ]xsh
100.751 150.32 mo
100.751 150.941 100.751 151.828 100.751 152.627 cv
@
100.574 152.627 mo
100.751 153.514 li
101.017 152.627 li
cp
@
100.574 152.627 mo
100.751 153.514 li
101.017 152.627 li
f
122.571 156.529 mo
122.571 154.864 119.553 153.514 115.83 153.514 cv
112.107 153.514 109.089 154.864 109.089 156.529 cv
109.089 158.195 112.107 159.545 115.83 159.545 cv
119.553 159.545 122.571 158.195 122.571 156.529 cv
@
122.571 156.529 mo
122.571 154.864 119.553 153.514 115.83 153.514 cv
112.107 153.514 109.089 154.864 109.089 156.529 cv
109.089 158.195 112.107 159.545 115.83 159.545 cv
119.553 159.545 122.571 158.195 122.571 156.529 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
111.31 155.394 mo
(MotionEstimation)
[1.10395 .620903 .345215 .345222 .620903 .620895 .758736 .483047 .345222 .345215 .966125 .551338 
.345222 .345215 .620903 0 ]xsh
112.254 156.813 mo
(I/O: 384->389)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .413513 .700371 .620895 .620903 
0 ]xsh
110.552 158.232 mo
(*** STATEFUL ***)
[.620903 .620895 .620903 .310448 .690445 .758728 .896561 .758728 .758728 .690445 .896561 .758728 
.310448 .620903 .620903 0 ]xsh
103.412 150.054 mo
105.363 151.119 108.202 152.538 110.597 153.78 cv
@
110.508 153.957 mo
111.395 154.223 li
110.685 153.602 li
cp
@
110.508 153.957 mo
111.395 154.223 li
110.685 153.602 li
f
107.936 164.335 mo
107.936 163.453 104.719 162.738 100.751 162.738 cv
96.783 162.738 93.5663 163.453 93.5663 164.335 cv
93.5663 165.217 96.783 165.932 100.751 165.932 cv
104.719 165.932 107.936 165.217 107.936 164.335 cv
@
107.936 164.335 mo
107.936 163.453 104.719 162.738 100.751 162.738 cv
96.783 162.738 93.5663 163.453 93.5663 164.335 cv
93.5663 165.217 96.783 165.932 100.751 165.932 cv
104.719 165.932 107.936 165.217 107.936 164.335 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
94.4737 164.619 mo
(roundrobin\(389,389,389\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345215 .620903 .413513 .620895 
.620903 .620895 .310455 .620895 .620903 .620903 .310448 .620903 .620895 .620903 0 ]xsh
108.823 172.141 mo
108.823 170.475 105.209 169.125 100.751 169.125 cv
96.2931 169.125 92.6793 170.475 92.6793 172.141 cv
92.6793 173.806 96.2931 175.156 100.751 175.156 cv
105.209 175.156 108.823 173.806 108.823 172.141 cv
@
108.823 172.141 mo
108.823 170.475 105.209 169.125 100.751 169.125 cv
96.2931 169.125 92.6793 170.475 92.6793 172.141 cv
92.6793 173.806 96.2931 175.156 100.751 175.156 cv
105.209 175.156 108.823 173.806 108.823 172.141 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
94.1627 171.005 mo
(MotionPredictionDecision)
[1.10395 .620903 .345215 .345222 .620903 .620895 .690445 .413506 .551346 .620895 .345222 .551338 
.345222 .345222 .620895 .620903 .896561 .551338 .551338 .345222 .483047 .345222 .620903 0 
]xsh
96.8654 172.424 mo
(I/O: 1167->390)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .620903 .413506 .700371 .620903 
.620895 0 ]xsh
95.4734 173.843 mo
(*** STATEFUL ***)
[.620903 .620895 .620903 .310448 .690445 .758728 .896561 .758728 .758728 .690445 .896561 .758728 
.310448 .620903 .620903 0 ]xsh
100.751 165.932 mo
100.751 166.553 100.751 167.44 100.751 168.238 cv
@
100.574 168.238 mo
100.751 169.125 li
101.017 168.238 li
cp
@
100.574 168.238 mo
100.751 169.125 li
101.017 168.238 li
f
89.0426 158.303 mo
91.4375 159.545 94.6307 161.231 97.1143 162.472 cv
@
97.0256 162.65 mo
97.9126 162.827 li
97.203 162.295 li
cp
@
97.0256 162.65 mo
97.9126 162.827 li
97.203 162.295 li
f
100.751 159.545 mo
100.751 160.344 100.751 161.142 100.751 161.94 cv
@
100.574 161.851 mo
100.751 162.738 li
101.017 161.851 li
cp
@
100.574 161.851 mo
100.751 162.738 li
101.017 161.851 li
f
111.395 158.836 mo
109.177 159.989 106.428 161.408 104.299 162.472 cv
@
104.299 162.206 mo
103.589 162.827 li
104.476 162.65 li
cp
@
104.299 162.206 mo
103.589 162.827 li
104.476 162.65 li
f
106.25 179.946 mo
106.25 179.064 103.788 178.35 100.751 178.35 cv
97.7138 178.35 95.2516 179.064 95.2516 179.946 cv
95.2516 180.828 97.7138 181.543 100.751 181.543 cv
103.788 181.543 106.25 180.828 106.25 179.946 cv
@
106.25 179.946 mo
106.25 179.064 103.788 178.35 100.751 178.35 cv
97.7138 178.35 95.2516 179.064 95.2516 179.946 cv
95.2516 180.828 97.7138 181.543 100.751 181.543 cv
103.788 181.543 106.25 180.828 106.25 179.946 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
96.1812 180.23 mo
(roundrobin\(385,5\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.620903 .620903 .310448 .620895 0 ]xsh
100.751 175.156 mo
100.751 175.955 100.751 176.753 100.751 177.551 cv
@
100.574 177.463 mo
100.751 178.35 li
101.017 177.463 li
cp
@
100.574 177.463 mo
100.751 178.35 li
101.017 177.463 li
f
97.5578 186.687 mo
97.5578 185.806 95.0956 185.091 92.0584 185.091 cv
89.0212 185.091 86.559 185.806 86.559 186.687 cv
86.559 187.569 89.0212 188.284 92.0584 188.284 cv
95.0956 188.284 97.5578 187.569 97.5578 186.687 cv
@
97.5578 186.687 mo
97.5578 185.806 95.0956 185.091 92.0584 185.091 cv
89.0212 185.091 86.559 185.806 86.559 186.687 cv
86.559 187.569 89.0212 188.284 92.0584 188.284 cv
95.0956 188.284 97.5578 187.569 97.5578 186.687 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
87.4886 186.971 mo
(roundrobin\(1,384\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.310455 .620895 .620903 .620895 0 ]xsh
98.7996 181.454 mo
97.5578 182.341 95.9612 183.583 94.6307 184.647 cv
@
94.542 184.47 mo
94.0098 185.18 li
94.8081 184.736 li
cp
@
94.542 184.47 mo
94.0098 185.18 li
94.8081 184.736 li
f
123.724 186.687 mo
123.724 185.806 121.54 185.091 118.846 185.091 cv
116.151 185.091 113.967 185.806 113.967 186.687 cv
113.967 187.569 116.151 188.284 118.846 188.284 cv
121.54 188.284 123.724 187.569 123.724 186.687 cv
@
123.724 186.687 mo
123.724 185.806 121.54 185.091 118.846 185.091 cv
116.151 185.091 113.967 185.806 113.967 186.687 cv
113.967 187.569 116.151 188.284 118.846 188.284 cv
121.54 188.284 123.724 187.569 123.724 186.687 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
114.897 186.971 mo
(roundrobin\(4,1\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.310455 .620895 0 ]xsh
104.122 181.188 mo
107.226 182.341 111.75 184.026 114.943 185.18 cv
@
114.766 185.357 mo
115.653 185.446 li
114.943 184.913 li
cp
@
114.766 185.357 mo
115.653 185.446 li
114.943 184.913 li
f
104.742 270.42 mo
104.742 269.538 102.28 268.824 99.2431 268.824 cv
96.2059 268.824 93.7437 269.538 93.7437 270.42 cv
93.7437 271.302 96.2059 272.017 99.2431 272.017 cv
102.28 272.017 104.742 271.302 104.742 270.42 cv
@
104.742 270.42 mo
104.742 269.538 102.28 268.824 99.2431 268.824 cv
96.2059 268.824 93.7437 269.538 93.7437 270.42 cv
93.7437 271.302 96.2059 272.017 99.2431 272.017 cv
102.28 272.017 104.742 271.302 104.742 270.42 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
94.6733 270.704 mo
(roundrobin\(389,9\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345215 .620903 .413513 .620895 
.620903 .620895 .310455 .620895 0 ]xsh
103.589 276.807 mo
103.589 275.925 101.643 275.21 99.2431 275.21 cv
96.8427 275.21 94.8968 275.925 94.8968 276.807 cv
94.8968 277.688 96.8427 278.403 99.2431 278.403 cv
101.643 278.403 103.589 277.688 103.589 276.807 cv
@
103.589 276.807 mo
103.589 275.925 101.643 275.21 99.2431 275.21 cv
96.8427 275.21 94.8968 275.925 94.8968 276.807 cv
94.8968 277.688 96.8427 278.403 99.2431 278.403 cv
101.643 278.403 103.589 277.688 103.589 276.807 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
95.7773 277.09 mo
(duplicate\(1,1\))
[.620903 .620895 .620903 .345215 .345222 .551346 .551338 .345222 .551338 .413506 .620903 .310448 
.620903 0 ]xsh
99.2431 272.017 mo
99.2431 272.726 99.2431 273.525 99.2431 274.323 cv
@
99.0657 274.323 mo
99.2431 275.21 li
99.5092 274.323 li
cp
@
99.0657 274.323 mo
99.2431 275.21 li
99.5092 274.323 li
f
82.4788 200.791 mo
82.4788 199.713 80.8903 198.839 78.9308 198.839 cv
76.9713 198.839 75.3828 199.713 75.3828 200.791 cv
75.3828 201.868 76.9713 202.742 78.9308 202.742 cv
80.8903 202.742 82.4788 201.868 82.4788 200.791 cv
@
82.4788 200.791 mo
82.4788 199.713 80.8903 198.839 78.9308 198.839 cv
76.9713 198.839 75.3828 199.713 75.3828 200.791 cv
75.3828 201.868 76.9713 202.742 78.9308 202.742 cv
80.8903 202.742 82.4788 201.868 82.4788 200.791 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
76.9992 200.365 mo
(Identity)
[.413513 .620895 .551346 .620895 .345222 .345222 .345215 0 ]xsh
76.5975 201.784 mo
(I/O: 1->1)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
87.0912 187.397 mo
85.3172 187.752 83.6319 188.373 82.6562 189.348 cv
80.9709 191.3 79.9065 195.203 79.463 197.864 cv
@
79.2856 197.864 mo
79.2856 198.751 li
79.6404 197.952 li
cp
@
79.2856 197.864 mo
79.2856 198.751 li
79.6404 197.952 li
f
96.316 193.517 mo
96.316 192.44 94.4098 191.566 92.0584 191.566 cv
89.707 191.566 87.8008 192.44 87.8008 193.517 cv
87.8008 194.595 89.707 195.469 92.0584 195.469 cv
94.4098 195.469 96.316 194.595 96.316 193.517 cv
@
96.316 193.517 mo
96.316 192.44 94.4098 191.566 92.0584 191.566 cv
89.707 191.566 87.8008 192.44 87.8008 193.517 cv
87.8008 194.595 89.707 195.469 92.0584 195.469 cv
94.4098 195.469 96.316 194.595 96.316 193.517 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
89.0228 193.092 mo
(Anonymous)
[.896561 .620903 .620895 .620903 .620895 .966125 .620895 .620903 0 ]xsh
89.725 194.511 mo
(I/O: 1->1)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
92.0584 188.284 mo
92.0584 188.994 92.0584 189.792 92.0584 190.59 cv
@
91.881 190.59 mo
92.0584 191.477 li
92.3245 190.59 li
cp
@
91.881 190.59 mo
92.0584 191.477 li
92.3245 190.59 li
f
94.0985 236.714 mo
94.0985 235.832 91.6363 235.118 88.5991 235.118 cv
85.5619 235.118 83.0997 235.832 83.0997 236.714 cv
83.0997 237.596 85.5619 238.311 88.5991 238.311 cv
91.6363 238.311 94.0985 237.596 94.0985 236.714 cv
@
94.0985 236.714 mo
94.0985 235.832 91.6363 235.118 88.5991 235.118 cv
85.5619 235.118 83.0997 235.832 83.0997 236.714 cv
83.0997 237.596 85.5619 238.311 88.5991 238.311 cv
91.6363 238.311 94.0985 237.596 94.0985 236.714 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
84.0293 236.998 mo
(roundrobin\(1,384\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.310455 .620895 .620903 .620895 0 ]xsh
93.3889 243.544 mo
93.3889 242.466 91.2444 241.593 88.5991 241.593 cv
85.9538 241.593 83.8093 242.466 83.8093 243.544 cv
83.8093 244.622 85.9538 245.496 88.5991 245.496 cv
91.2444 245.496 93.3889 244.622 93.3889 243.544 cv
@
93.3889 243.544 mo
93.3889 242.466 91.2444 241.593 88.5991 241.593 cv
85.9538 241.593 83.8093 242.466 83.8093 243.544 cv
83.8093 244.622 85.9538 245.496 88.5991 245.496 cv
91.2444 245.496 93.3889 244.622 93.3889 243.544 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Q <1C60D8A8C9B6079F258D65BC2331B95A48C80B9768E78495F9F852D084FE
B5569E0998B92A8C02FE98CC8756B9450AFC22EB75A028A68EEC267535515B8A
7AF5FA296BEEAF84AC729826043DC76CC7E6AEDD8E5722CD3906055C50935FC9
A9E5D884988B49C45AA5CE390B6810BD47B8089DA8CFB16CD03A129E9C7C7933
9702030A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 81 /Q put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 3{/.notdef}rp /greater 
2{/.notdef}rp /A /B /C /D /E /F /G 
/.notdef /I 2{/.notdef}rp /L /M /.notdef /O /P 
/Q /R /S /T /U /V 2{/.notdef}rp /Y 
5{/.notdef}rp /underscore /.notdef /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /w /x /y 134{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
85.4257 243.118 mo
(Quantisation)
[.896561 .620903 .551338 .620903 .345215 .345222 .483047 .551346 .345215 .345222 .620903 0 
]xsh
85.024 244.537 mo
(I/O: 385->389)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .413513 .700371 .620895 .620903 
0 ]xsh
88.5991 238.311 mo
88.5991 239.02 88.5991 239.819 88.5991 240.617 cv
@
88.4217 240.617 mo
88.5991 241.504 li
88.8652 240.617 li
cp
@
88.4217 240.617 mo
88.5991 241.504 li
88.8652 240.617 li
f
79.2856 202.831 mo
79.7291 205.847 80.6161 211.878 80.6161 215.338 cv
80.6161 215.338 80.6161 215.338 80.6161 222.611 cv
80.6161 226.07 81.0596 229.707 82.6562 232.634 cv
83.1884 233.432 84.0754 234.142 85.0511 234.852 cv
@
84.9624 235.029 mo
85.8494 235.295 li
85.1398 234.674 li
cp
@
84.9624 235.029 mo
85.8494 235.295 li
85.1398 234.674 li
f
99.4205 200.791 mo
99.4205 199.713 96.1243 198.839 92.0584 198.839 cv
87.9924 198.839 84.6963 199.713 84.6963 200.791 cv
84.6963 201.868 87.9924 202.742 92.0584 202.742 cv
96.1243 202.742 99.4205 201.868 99.4205 200.791 cv
@
99.4205 200.791 mo
99.4205 199.713 96.1243 198.839 92.0584 198.839 cv
87.9924 198.839 84.6963 199.713 84.6963 200.791 cv
84.6963 201.868 87.9924 202.742 92.0584 202.742 cv
96.1243 202.742 99.4205 201.868 99.4205 200.791 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
85.852 200.365 mo
(DCT_1D_reference_fine)
[.896561 .82827 .758728 .620903 .620903 .896561 .620895 .413513 .551338 .413513 .551338 .413513 
.551338 .620903 .551338 .551338 .620903 .413506 .345222 .620903 0 ]xsh
89.7251 201.784 mo
(I/O: 8->8)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
92.0584 195.557 mo
92.0584 196.267 92.0584 197.065 92.0584 197.864 cv
@
91.881 197.864 mo
92.0584 198.751 li
92.3245 197.864 li
cp
@
91.881 197.864 mo
92.0584 198.751 li
92.3245 197.864 li
f
99.9527 208.064 mo
99.9527 206.986 96.4183 206.113 92.0584 206.113 cv
87.6985 206.113 84.1641 206.986 84.1641 208.064 cv
84.1641 209.142 87.6985 210.016 92.0584 210.016 cv
96.4183 210.016 99.9527 209.142 99.9527 208.064 cv
@
99.9527 208.064 mo
99.9527 206.986 96.4183 206.113 92.0584 206.113 cv
87.6985 206.113 84.1641 206.986 84.1641 208.064 cv
84.1641 209.142 87.6985 210.016 92.0584 210.016 cv
96.4183 210.016 99.9527 209.142 99.9527 208.064 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
85.3677 207.638 mo
(Pre_CollapsedDataParallel)
[.690437 .413513 .551338 .620903 .82827 .620903 .345215 .345222 .551338 .620903 .483047 .551346 
.620895 .896561 .551346 .345215 .551346 .690437 .551338 .413513 .551338 .345222 .345222 .551338 
0 ]xsh
89.1042 209.057 mo
(I/O: 64->64)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
92.0584 202.831 mo
92.0584 203.54 92.0584 204.339 92.0584 205.137 cv
@
91.881 205.137 mo
92.0584 206.024 li
92.3245 205.137 li
cp
@
91.881 205.137 mo
92.0584 206.024 li
92.3245 205.137 li
f
99.4205 215.338 mo
99.4205 214.26 96.1243 213.386 92.0584 213.386 cv
87.9924 213.386 84.6963 214.26 84.6963 215.338 cv
84.6963 216.415 87.9924 217.289 92.0584 217.289 cv
96.1243 217.289 99.4205 216.415 99.4205 215.338 cv
@
99.4205 215.338 mo
99.4205 214.26 96.1243 213.386 92.0584 213.386 cv
87.9924 213.386 84.6963 214.26 84.6963 215.338 cv
84.6963 216.415 87.9924 217.289 92.0584 217.289 cv
96.1243 217.289 99.4205 216.415 99.4205 215.338 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
85.852 214.912 mo
(DCT_1D_reference_fine)
[.896561 .82827 .758728 .620903 .620903 .896561 .620895 .413513 .551338 .413513 .551338 .413513 
.551338 .620903 .551338 .551338 .620903 .413506 .345222 .620903 0 ]xsh
89.7251 216.331 mo
(I/O: 8->8)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
92.0584 210.104 mo
92.0584 210.814 92.0584 211.612 92.0584 212.41 cv
@
91.881 212.41 mo
92.0584 213.297 li
92.3245 212.41 li
cp
@
91.881 212.41 mo
92.0584 213.297 li
92.3245 212.41 li
f
100.13 222.611 mo
100.13 221.533 96.5162 220.66 92.0584 220.66 cv
87.6005 220.66 83.9867 221.533 83.9867 222.611 cv
83.9867 223.689 87.6005 224.562 92.0584 224.562 cv
96.5162 224.562 100.13 223.689 100.13 222.611 cv
@
100.13 222.611 mo
100.13 221.533 96.5162 220.66 92.0584 220.66 cv
87.6005 220.66 83.9867 221.533 83.9867 222.611 cv
83.9867 223.689 87.6005 224.562 92.0584 224.562 cv
96.5162 224.562 100.13 223.689 100.13 222.611 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
85.1255 222.185 mo
(Post_CollapsedDataParallel)
[.690437 .620903 .483047 .345222 .620903 .82827 .620895 .345222 .345222 .551338 .620903 .483047 
.551338 .620903 .896561 .551338 .345222 .551338 .690445 .551338 .413513 .551338 .345222 .345222 
.551338 0 ]xsh
89.1042 223.604 mo
(I/O: 64->64)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
92.0584 217.378 mo
92.0584 218.087 92.0584 218.886 92.0584 219.684 cv
@
91.881 219.684 mo
92.0584 220.571 li
92.3245 219.684 li
cp
@
91.881 219.684 mo
92.0584 220.571 li
92.3245 219.684 li
f
94.3646 229.884 mo
94.3646 228.807 92.4584 227.933 90.107 227.933 cv
87.7556 227.933 85.8494 228.807 85.8494 229.884 cv
85.8494 230.962 87.7556 231.836 90.107 231.836 cv
92.4584 231.836 94.3646 230.962 94.3646 229.884 cv
@
94.3646 229.884 mo
94.3646 228.807 92.4584 227.933 90.107 227.933 cv
87.7556 227.933 85.8494 228.807 85.8494 229.884 cv
85.8494 230.962 87.7556 231.836 90.107 231.836 cv
92.4584 231.836 94.3646 230.962 94.3646 229.884 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
87.0714 229.459 mo
(Anonymous)
[.896561 .620903 .620895 .620903 .620895 .966125 .620895 .620903 0 ]xsh
87.7737 230.878 mo
(I/O: 1->1)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
91.5262 224.651 mo
91.3488 225.361 91.0827 226.248 90.9053 227.046 cv
@
90.6392 227.046 mo
90.6392 227.933 li
91.0827 227.135 li
cp
@
90.6392 227.046 mo
90.6392 227.933 li
91.0827 227.135 li
f
89.6635 231.924 mo
89.4861 232.634 89.3087 233.521 89.1313 234.319 cv
@
88.9539 234.231 mo
88.9539 235.118 li
89.3974 234.319 li
cp
@
88.9539 234.231 mo
88.9539 235.118 li
89.3974 234.319 li
f
94.0985 250.374 mo
94.0985 249.492 91.6363 248.777 88.5991 248.777 cv
85.5619 248.777 83.0997 249.492 83.0997 250.374 cv
83.0997 251.256 85.5619 251.971 88.5991 251.971 cv
91.6363 251.971 94.0985 251.256 94.0985 250.374 cv
@
94.0985 250.374 mo
94.0985 249.492 91.6363 248.777 88.5991 248.777 cv
85.5619 248.777 83.0997 249.492 83.0997 250.374 cv
83.0997 251.256 85.5619 251.971 88.5991 251.971 cv
91.6363 251.971 94.0985 251.256 94.0985 250.374 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
84.0293 250.658 mo
(roundrobin\(5,384\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.310455 .620895 .620903 .620895 0 ]xsh
88.5991 245.584 mo
88.5991 246.294 88.5991 247.092 88.5991 247.89 cv
@
88.4217 247.89 mo
88.5991 248.777 li
88.8652 247.89 li
cp
@
88.4217 247.89 mo
88.5991 248.777 li
88.8652 247.89 li
f
88.7765 257.204 mo
88.7765 256.126 87.188 255.253 85.2285 255.253 cv
83.269 255.253 81.6805 256.126 81.6805 257.204 cv
81.6805 258.282 83.269 259.155 85.2285 259.155 cv
87.188 259.155 88.7765 258.282 88.7765 257.204 cv
@
88.7765 257.204 mo
88.7765 256.126 87.188 255.253 85.2285 255.253 cv
83.269 255.253 81.6805 256.126 81.6805 257.204 cv
81.6805 258.282 83.269 259.155 85.2285 259.155 cv
87.188 259.155 88.7765 258.282 88.7765 257.204 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
83.2969 256.778 mo
(Identity)
[.413513 .620895 .551346 .620895 .345222 .345222 .345215 0 ]xsh
82.8952 258.197 mo
(I/O: 1->1)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
87.8008 251.971 mo
87.446 252.68 87.0025 253.656 86.6477 254.454 cv
@
86.4703 254.366 mo
86.2042 255.253 li
86.8251 254.543 li
cp
@
86.4703 254.366 mo
86.2042 255.253 li
86.8251 254.543 li
f
100.84 257.204 mo
100.84 256.126 98.4966 255.253 95.6064 255.253 cv
92.7162 255.253 90.3731 256.126 90.3731 257.204 cv
90.3731 258.282 92.7162 259.155 95.6064 259.155 cv
98.4966 259.155 100.84 258.282 100.84 257.204 cv
@
100.84 257.204 mo
100.84 256.126 98.4966 255.253 95.6064 255.253 cv
92.7162 255.253 90.3731 256.126 90.3731 257.204 cv
90.3731 258.282 92.7162 259.155 95.6064 259.155 cv
98.4966 259.155 100.84 258.282 100.84 257.204 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Z <1C60D8A8C9B7D8BE77A3BDA24C4F667A02060AD299A5EC1894B68DCAC3DB
787FE5F9D15DF76FDAF4298233CFCEF8B1E26BA6B780E4ACF507403C18EFE239
6ED23F8FD0119684BDFE54> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 90 /Z put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 3{/.notdef}rp /greater 
2{/.notdef}rp /A /B /C /D /E /F /G 
/.notdef /I 2{/.notdef}rp /L /M /.notdef /O /P 
/Q /R /S /T /U /V 2{/.notdef}rp /Y 
/Z 4{/.notdef}rp /underscore /.notdef /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /x /y 134{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
91.5371 256.778 mo
(ZigZagOrdering)
[.758728 .345222 .620903 .758728 .551338 .620903 .896561 .413506 .620903 .551338 .413513 .345222 
.620895 0 ]xsh
92.6522 258.197 mo
(I/O: 64->64)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
90.1957 251.882 mo
91.0827 252.769 92.1471 253.833 93.0341 254.72 cv
@
92.8567 254.898 mo
93.655 255.341 li
93.2115 254.543 li
cp
@
92.8567 254.898 mo
93.655 255.341 li
93.2115 254.543 li
f
100.84 264.034 mo
100.84 263.152 98.3775 262.437 95.3403 262.437 cv
92.3031 262.437 89.8409 263.152 89.8409 264.034 cv
89.8409 264.916 92.3031 265.63 95.3403 265.63 cv
98.3775 265.63 100.84 264.916 100.84 264.034 cv
@
100.84 264.034 mo
100.84 263.152 98.3775 262.437 95.3403 262.437 cv
92.3031 262.437 89.8409 263.152 89.8409 264.034 cv
89.8409 264.916 92.3031 265.63 95.3403 265.63 cv
98.3775 265.63 100.84 264.916 100.84 264.034 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
90.7705 264.318 mo
(roundrobin\(5,384\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345215 .620903 .413513 .620895 
.310455 .620895 .620903 .620895 0 ]xsh
96.316 265.63 mo
96.7595 266.34 97.2917 267.316 97.8239 268.114 cv
@
97.6465 268.203 mo
98.2674 268.824 li
98.0013 267.937 li
cp
@
97.6465 268.203 mo
98.2674 268.824 li
98.0013 267.937 li
f
87.5347 258.712 mo
89.0426 259.688 90.9053 261.018 92.5019 262.082 cv
@
92.3245 262.26 mo
93.2115 262.526 li
92.5906 261.905 li
cp
@
92.3245 262.26 mo
93.2115 262.526 li
92.5906 261.905 li
f
95.5177 259.244 mo
95.429 259.954 95.429 260.752 95.429 261.55 cv
@
95.2516 261.55 mo
95.429 262.437 li
95.6951 261.55 li
cp
@
95.2516 261.55 mo
95.429 262.437 li
95.6951 261.55 li
f
121.063 193.517 mo
121.063 192.44 119.475 191.566 117.515 191.566 cv
115.556 191.566 113.967 192.44 113.967 193.517 cv
113.967 194.595 115.556 195.469 117.515 195.469 cv
119.475 195.469 121.063 194.595 121.063 193.517 cv
@
121.063 193.517 mo
121.063 192.44 119.475 191.566 117.515 191.566 cv
115.556 191.566 113.967 192.44 113.967 193.517 cv
113.967 194.595 115.556 195.469 117.515 195.469 cv
119.475 195.469 121.063 194.595 121.063 193.517 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
115.584 193.092 mo
(Identity)
[.413513 .620895 .551346 .620895 .345222 .345222 .345215 0 ]xsh
115.182 194.511 mo
(I/O: 1->1)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
118.491 188.284 mo
118.402 188.994 118.225 189.881 118.047 190.59 cv
@
117.87 190.59 mo
117.87 191.477 li
118.225 190.679 li
cp
@
117.87 190.59 mo
117.87 191.477 li
118.225 190.679 li
f
129.756 193.517 mo
129.756 192.44 128.167 191.566 126.208 191.566 cv
124.248 191.566 122.66 192.44 122.66 193.517 cv
122.66 194.595 124.248 195.469 126.208 195.469 cv
128.167 195.469 129.756 194.595 129.756 193.517 cv
@
129.756 193.517 mo
129.756 192.44 128.167 191.566 126.208 191.566 cv
124.248 191.566 122.66 192.44 122.66 193.517 cv
122.66 194.595 124.248 195.469 126.208 195.469 cv
128.167 195.469 129.756 194.595 129.756 193.517 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
124.484 193.092 mo
(Repeat)
[.82827 .551338 .620903 .551338 .551346 0 ]xsh
123.875 194.511 mo
(I/O: 1->5)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
120.708 188.195 mo
121.241 188.639 121.773 188.994 122.128 189.348 cv
122.66 189.792 123.281 190.413 123.902 191.034 cv
@
123.813 191.211 mo
124.523 191.743 li
124.079 190.945 li
cp
@
123.813 191.211 mo
124.523 191.743 li
124.079 190.945 li
f
129.756 200.791 mo
129.756 199.909 127.572 199.194 124.877 199.194 cv
122.183 199.194 119.999 199.909 119.999 200.791 cv
119.999 201.672 122.183 202.387 124.877 202.387 cv
127.572 202.387 129.756 201.672 129.756 200.791 cv
@
129.756 200.791 mo
129.756 199.909 127.572 199.194 124.877 199.194 cv
122.183 199.194 119.999 199.909 119.999 200.791 cv
119.999 201.672 122.183 202.387 124.877 202.387 cv
127.572 202.387 129.756 201.672 129.756 200.791 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
120.929 201.075 mo
(roundrobin\(4,5\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.310455 .620895 0 ]xsh
149.092 208.064 mo
149.092 207.182 146.908 206.468 144.214 206.468 cv
141.52 206.468 139.335 207.182 139.335 208.064 cv
139.335 208.946 141.52 209.661 144.214 209.661 cv
146.908 209.661 149.092 208.946 149.092 208.064 cv
@
149.092 208.064 mo
149.092 207.182 146.908 206.468 144.214 206.468 cv
141.52 206.468 139.335 207.182 139.335 208.064 cv
139.335 208.946 141.52 209.661 144.214 209.661 cv
146.908 209.661 149.092 208.946 149.092 208.064 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
140.265 208.348 mo
(roundrobin\(8,1\))
[.413513 .620895 .620895 .620911 .620895 .413513 .620895 .620895 .34523 .620895 .413513 .620895 
.310455 .620895 0 ]xsh
128.071 202.033 mo
131.441 203.274 136.674 205.226 140.311 206.556 cv
@
140.134 206.734 mo
141.021 206.822 li
140.311 206.29 li
cp
@
140.134 206.734 mo
141.021 206.822 li
140.311 206.29 li
f
119.289 195.291 mo
120.354 196.356 121.684 197.686 122.749 198.751 cv
@
122.571 198.839 mo
123.369 199.283 li
122.837 198.573 li
cp
@
122.571 198.839 mo
123.369 199.283 li
122.837 198.573 li
f
125.853 195.469 mo
125.676 196.356 125.41 197.42 125.321 198.396 cv
@
125.143 198.307 mo
125.143 199.194 li
125.587 198.396 li
cp
@
125.143 198.307 mo
125.143 199.194 li
125.587 198.396 li
f
149.979 215.338 mo
149.979 214.456 147.398 213.741 144.214 213.741 cv
141.03 213.741 138.449 214.456 138.449 215.338 cv
138.449 216.219 141.03 216.934 144.214 216.934 cv
147.398 216.934 149.979 216.219 149.979 215.338 cv
@
149.979 215.338 mo
149.979 214.456 147.398 213.741 144.214 213.741 cv
141.03 213.741 138.449 214.456 138.449 215.338 cv
138.449 216.219 141.03 216.934 144.214 216.934 cv
147.398 216.934 149.979 216.219 149.979 215.338 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
139.334 215.621 mo
(roundrobin\(1,1,1,1\))
[.413513 .620895 .620895 .620911 .620895 .413513 .620895 .620895 .34523 .620895 .413513 .620895 
.310455 .620895 .310455 .620895 .310455 .620895 0 ]xsh
144.214 209.661 mo
144.214 210.548 144.214 211.79 144.214 212.854 cv
@
144.037 212.854 mo
144.214 213.741 li
144.48 212.854 li
cp
@
144.037 212.854 mo
144.214 213.741 li
144.48 212.854 li
f
191.846 222.611 mo
191.846 221.533 190.257 220.66 188.298 220.66 cv
186.338 220.66 184.75 221.533 184.75 222.611 cv
184.75 223.689 186.338 224.562 188.298 224.562 cv
190.257 224.562 191.846 223.689 191.846 222.611 cv
@
191.846 222.611 mo
191.846 221.533 190.257 220.66 188.298 220.66 cv
186.338 220.66 184.75 221.533 184.75 222.611 cv
184.75 223.689 186.338 224.562 188.298 224.562 cv
190.257 224.562 191.846 223.689 191.846 222.611 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
186.366 222.185 mo
(Identity)
[.413513 .620895 .551346 .620895 .345215 .34523 .345215 0 ]xsh
185.964 223.604 mo
(I/O: 1->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
149.092 208.242 mo
157.519 208.685 175.082 209.927 184.484 213.031 cv
186.435 213.741 187.5 217.2 187.943 219.773 cv
@
187.677 219.684 mo
188.032 220.571 li
188.12 219.684 li
cp
@
187.677 219.684 mo
188.032 220.571 li
188.12 219.684 li
f
149.092 236.714 mo
149.092 235.832 146.908 235.118 144.214 235.118 cv
141.52 235.118 139.335 235.832 139.335 236.714 cv
139.335 237.596 141.52 238.311 144.214 238.311 cv
146.908 238.311 149.092 237.596 149.092 236.714 cv
@
149.092 236.714 mo
149.092 235.832 146.908 235.118 144.214 235.118 cv
141.52 235.118 139.335 235.832 139.335 236.714 cv
139.335 237.596 141.52 238.311 144.214 238.311 cv
146.908 238.311 149.092 237.596 149.092 236.714 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
140.265 236.998 mo
(roundrobin\(8,1\))
[.413513 .620895 .620895 .620911 .620895 .413513 .620895 .620895 .34523 .620895 .413513 .620895 
.310455 .620895 0 ]xsh
140.045 237.513 mo
132.772 239.198 118.668 243.278 118.668 250.374 cv
118.668 250.374 118.668 250.374 118.668 257.204 cv
118.668 262.615 109.444 266.872 103.767 269.001 cv
@
103.767 268.735 mo
102.968 269.267 li
103.855 269.178 li
cp
@
103.767 268.735 mo
102.968 269.267 li
103.855 269.178 li
f
123.547 222.611 mo
123.547 221.533 119.456 220.66 114.411 220.66 cv
109.365 220.66 105.275 221.533 105.275 222.611 cv
105.275 223.689 109.365 224.562 114.411 224.562 cv
119.456 224.562 123.547 223.689 123.547 222.611 cv
@
123.547 222.611 mo
123.547 221.533 119.456 220.66 114.411 220.66 cv
109.365 220.66 105.275 221.533 105.275 222.611 cv
105.275 223.689 109.365 224.562 114.411 224.562 cv
119.456 224.562 123.547 223.689 123.547 222.611 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
106.478 222.185 mo
(IndividualMotionVectorEncode)
[.413513 .620895 .620903 .345222 .620895 .345222 .620895 .620903 .551338 .345222 1.10395 .620903 
.345215 .345222 .620903 .620895 .896561 .551346 .551338 .345222 .620895 .413513 .758728 .620903 
.551338 .620903 .620895 0 ]xsh
111.456 223.604 mo
(I/O: 44->44)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
139.868 216.402 mo
135.078 217.555 127.006 219.506 121.329 220.926 cv
@
121.329 220.66 mo
120.531 221.103 li
121.418 221.103 li
cp
@
121.329 220.66 mo
120.531 221.103 li
121.418 221.103 li
f
143.416 222.611 mo
143.416 221.533 139.325 220.66 134.28 220.66 cv
129.234 220.66 125.144 221.533 125.144 222.611 cv
125.144 223.689 129.234 224.562 134.28 224.562 cv
139.325 224.562 143.416 223.689 143.416 222.611 cv
@
143.416 222.611 mo
143.416 221.533 139.325 220.66 134.28 220.66 cv
129.234 220.66 125.144 221.533 125.144 222.611 cv
125.144 223.689 129.234 224.562 134.28 224.562 cv
139.325 224.562 143.416 223.689 143.416 222.611 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
126.347 222.185 mo
(IndividualMotionVectorEncode)
[.413513 .620895 .620895 .34523 .620895 .345215 .620911 .620895 .551346 .345215 1.10396 .620895 
.345215 .34523 .620895 .620895 .896561 .551346 .551331 .34523 .620895 .413513 .758728 .620895 
.551346 .620895 .620911 0 ]xsh
131.325 223.604 mo
(I/O: 44->44)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
142.174 216.845 mo
140.843 217.821 139.069 219.063 137.65 220.127 cv
@
137.561 219.95 mo
136.941 220.66 li
137.828 220.305 li
cp
@
137.561 219.95 mo
136.941 220.66 li
137.828 220.305 li
f
163.284 222.611 mo
163.284 221.533 159.194 220.66 154.148 220.66 cv
149.103 220.66 145.012 221.533 145.012 222.611 cv
145.012 223.689 149.103 224.562 154.148 224.562 cv
159.194 224.562 163.284 223.689 163.284 222.611 cv
@
163.284 222.611 mo
163.284 221.533 159.194 220.66 154.148 220.66 cv
149.103 220.66 145.012 221.533 145.012 222.611 cv
145.012 223.689 149.103 224.562 154.148 224.562 cv
159.194 224.562 163.284 223.689 163.284 222.611 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
146.216 222.185 mo
(IndividualMotionVectorEncode)
[.413513 .620895 .620895 .34523 .620895 .345215 .620911 .620895 .551346 .345215 1.10396 .620895 
.345215 .34523 .620895 .620895 .896561 .551346 .551331 .34523 .620895 .413513 .758728 .620895 
.551346 .620895 .620911 0 ]xsh
151.194 223.604 mo
(I/O: 44->44)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
146.254 216.845 mo
147.585 217.821 149.359 219.063 150.778 220.127 cv
@
150.689 220.305 mo
151.487 220.66 li
150.955 219.95 li
cp
@
150.689 220.305 mo
151.487 220.66 li
150.955 219.95 li
f
183.153 222.611 mo
183.153 221.533 179.063 220.66 174.017 220.66 cv
168.971 220.66 164.881 221.533 164.881 222.611 cv
164.881 223.689 168.971 224.562 174.017 224.562 cv
179.063 224.562 183.153 223.689 183.153 222.611 cv
@
183.153 222.611 mo
183.153 221.533 179.063 220.66 174.017 220.66 cv
168.971 220.66 164.881 221.533 164.881 222.611 cv
164.881 223.689 168.971 224.562 174.017 224.562 cv
179.063 224.562 183.153 223.689 183.153 222.611 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
166.085 222.185 mo
(IndividualMotionVectorEncode)
[.413513 .620895 .620895 .34523 .620895 .345215 .620911 .620895 .551346 .345215 1.10396 .620895 
.345215 .34523 .620895 .620895 .896561 .551346 .551331 .34523 .620895 .413513 .758728 .620895 
.551346 .620895 .620911 0 ]xsh
171.063 223.604 mo
(I/O: 44->44)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
147.496 216.668 mo
148.294 216.934 149.092 217.2 149.713 217.378 cv
154.237 218.442 161.244 219.95 166.566 221.103 cv
@
166.389 221.28 mo
167.276 221.28 li
166.478 220.837 li
cp
@
166.389 221.28 mo
167.276 221.28 li
166.478 220.837 li
f
149.979 229.884 mo
149.979 229.003 147.398 228.288 144.214 228.288 cv
141.03 228.288 138.449 229.003 138.449 229.884 cv
138.449 230.766 141.03 231.481 144.214 231.481 cv
147.398 231.481 149.979 230.766 149.979 229.884 cv
@
149.979 229.884 mo
149.979 229.003 147.398 228.288 144.214 228.288 cv
141.03 228.288 138.449 229.003 138.449 229.884 cv
138.449 230.766 141.03 231.481 144.214 231.481 cv
147.398 231.481 149.979 230.766 149.979 229.884 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
139.334 230.168 mo
(roundrobin\(2,2,2,2\))
[.413513 .620895 .620895 .620911 .620895 .413513 .620895 .620895 .34523 .620895 .413513 .620895 
.310455 .620895 .310455 .620895 .310455 .620895 0 ]xsh
144.214 231.481 mo
144.214 232.279 144.214 233.344 144.214 234.231 cv
@
144.037 234.231 mo
144.214 235.118 li
144.48 234.231 li
cp
@
144.037 234.231 mo
144.214 235.118 li
144.48 234.231 li
f
120.531 224.119 mo
126.03 225.449 134.102 227.401 139.158 228.643 cv
@
138.981 228.82 mo
139.868 228.82 li
139.069 228.376 li
cp
@
138.981 228.82 mo
139.868 228.82 li
139.069 228.376 li
f
136.941 224.562 mo
138.36 225.538 140.134 226.869 141.553 227.933 cv
@
141.287 228.022 mo
142.174 228.376 li
141.553 227.667 li
cp
@
141.287 228.022 mo
142.174 228.376 li
141.553 227.667 li
f
151.487 224.562 mo
150.068 225.538 148.294 226.869 146.875 227.933 cv
@
146.875 227.667 mo
146.254 228.376 li
147.141 228.022 li
cp
@
146.875 227.667 mo
146.254 228.376 li
147.141 228.022 li
f
167.365 223.941 mo
161.954 225.095 154.414 226.691 149.713 227.844 cv
149.27 227.933 148.738 228.11 148.117 228.376 cv
@
148.383 228.022 mo
147.585 228.554 li
148.472 228.465 li
cp
@
148.383 228.022 mo
147.585 228.554 li
148.472 228.465 li
f
188.12 224.562 mo
187.766 227.312 186.879 231.924 184.484 232.634 cv
175.348 235.65 158.672 236.448 149.891 236.626 cv
@
149.979 236.359 mo
149.092 236.626 li
149.979 236.803 li
cp
@
149.979 236.359 mo
149.092 236.626 li
149.979 236.803 li
f
51.4338 291.797 mo
51.4338 290.719 49.8453 289.846 47.8858 289.846 cv
45.9263 289.846 44.3378 290.719 44.3378 291.797 cv
44.3378 292.875 45.9263 293.748 47.8858 293.748 cv
49.8453 293.748 51.4338 292.875 51.4338 291.797 cv
@
51.4338 291.797 mo
51.4338 290.719 49.8453 289.846 47.8858 289.846 cv
45.9263 289.846 44.3378 290.719 44.3378 291.797 cv
44.3378 292.875 45.9263 293.748 47.8858 293.748 cv
49.8453 293.748 51.4338 292.875 51.4338 291.797 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
45.9542 291.371 mo
(Identity)
[.413509 .620899 .551342 .620899 .345222 .345219 .345219 0 ]xsh
45.5525 292.79 mo
(I/O: 1->1)
[.413509 .345222 .896561 .345219 .310452 .620899 .413509 .700371 0 ]xsh
94.8968 276.807 mo
84.0754 276.895 56.4897 277.339 50.192 279.113 cv
47.3536 279.911 47.3536 285.677 47.531 289.047 cv
@
47.2649 288.87 mo
47.6197 289.757 li
47.7084 288.87 li
cp
@
47.2649 288.87 mo
47.6197 289.757 li
47.7084 288.87 li
f
145.988 284.967 mo
145.988 284.085 142.692 283.37 138.626 283.37 cv
134.56 283.37 131.264 284.085 131.264 284.967 cv
131.264 285.849 134.56 286.564 138.626 286.564 cv
142.692 286.564 145.988 285.849 145.988 284.967 cv
@
145.988 284.967 mo
145.988 284.085 142.692 283.37 138.626 283.37 cv
134.56 283.37 131.264 284.085 131.264 284.967 cv
131.264 285.849 134.56 286.564 138.626 286.564 cv
142.692 286.564 145.988 285.849 145.988 284.967 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
132.193 285.251 mo
(roundrobin\(389,2,2,2,2,1\))
[.413513 .620895 .620895 .620911 .620895 .413513 .620895 .620895 .34523 .620895 .413513 .620895 
.620895 .620911 .31044 .620911 .31044 .620911 .31044 .620911 .31044 .620911 .31044 .620911 
0 ]xsh
103.589 276.895 mo
110.508 277.073 123.902 277.605 131.53 279.113 cv
133.215 279.468 135.255 281.242 136.763 282.75 cv
@
136.586 282.838 mo
137.295 283.37 li
136.852 282.572 li
cp
@
136.586 282.838 mo
137.295 283.37 li
136.852 282.572 li
f
62.61 382.714 mo
62.61 381.833 59.7507 381.118 56.2236 381.118 cv
52.6965 381.118 49.8372 381.833 49.8372 382.714 cv
49.8372 383.596 52.6965 384.311 56.2236 384.311 cv
59.7507 384.311 62.61 383.596 62.61 382.714 cv
@
62.61 382.714 mo
62.61 381.833 59.7507 381.118 56.2236 381.118 cv
52.6965 381.118 49.8372 381.833 49.8372 382.714 cv
49.8372 383.596 52.6965 384.311 56.2236 384.311 cv
59.7507 384.311 62.61 383.596 62.61 382.714 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
50.7225 382.998 mo
(roundrobin\(131340,1\))
[.413509 .620899 .620903 .620899 .620899 .413509 .620899 .620903 .345219 .620899 .413509 .620903 
.620899 .620899 .620899 .620899 .620903 .310448 .620903 0 ]xsh
62.8761 389.544 mo
62.8761 388.467 59.8976 387.593 56.2236 387.593 cv
52.5495 387.593 49.5711 388.467 49.5711 389.544 cv
49.5711 390.622 52.5495 391.496 56.2236 391.496 cv
59.8976 391.496 62.8761 390.622 62.8761 389.544 cv
@
62.8761 389.544 mo
62.8761 388.467 59.8976 387.593 56.2236 387.593 cv
52.5495 387.593 49.5711 388.467 49.5711 389.544 cv
49.5711 390.622 52.5495 391.496 56.2236 391.496 cv
59.8976 391.496 62.8761 390.622 62.8761 389.544 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
53.188 389.119 mo
(Anonymous)
[.896561 .620899 .620899 .620903 .620899 .966118 .620903 .620899 0 ]xsh
50.7858 390.538 mo
(I/O: 131341->131340)
[.413509 .345222 .896561 .345219 .310452 .620899 .620899 .620899 .620899 .620903 .620899 .413509 
.700371 .620899 .620899 .620899 .620899 .620903 0 ]xsh
56.2236 384.311 mo
56.2236 385.021 56.2236 385.819 56.2236 386.617 cv
@
56.0462 386.617 mo
56.2236 387.504 li
56.4897 386.617 li
cp
@
56.0462 386.617 mo
56.2236 387.504 li
56.4897 386.617 li
f
48.1519 293.837 mo
48.5954 296.942 49.305 302.884 49.305 306.344 cv
49.305 306.344 49.305 306.344 49.305 367.103 cv
49.305 371.006 47.0875 375.441 49.1276 378.634 cv
49.7485 379.521 50.8129 380.319 52.0547 380.94 cv
@
51.966 381.118 mo
52.853 381.384 li
52.1434 380.763 li
cp
@
51.966 381.118 mo
52.853 381.384 li
52.1434 380.763 li
f
117.781 291.797 mo
117.781 290.719 115.637 289.846 112.992 289.846 cv
110.346 289.846 108.202 290.719 108.202 291.797 cv
108.202 292.875 110.346 293.748 112.992 293.748 cv
115.637 293.748 117.781 292.875 117.781 291.797 cv
@
117.781 291.797 mo
117.781 290.719 115.637 289.846 112.992 289.846 cv
110.346 289.846 108.202 290.719 108.202 291.797 cv
108.202 292.875 110.346 293.748 112.992 293.748 cv
115.637 293.748 117.781 292.875 117.781 291.797 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
109.956 291.371 mo
(Anonymous)
[.896561 .620903 .620895 .620903 .620895 .966125 .620895 .620903 0 ]xsh
109.416 292.79 mo
(I/O: 389->384)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .413513 .700371 .620895 .620903 
0 ]xsh
133.57 286.12 mo
132.86 286.298 132.151 286.475 131.53 286.564 cv
126.917 287.539 122.128 287.805 117.515 289.047 cv
117.072 289.136 116.54 289.491 116.007 289.757 cv
@
116.096 289.402 mo
115.475 290.112 li
116.362 289.846 li
cp
@
116.096 289.402 mo
115.475 290.112 li
116.362 289.846 li
f
138.892 299.07 mo
138.892 297.993 134.802 297.119 129.756 297.119 cv
124.71 297.119 120.62 297.993 120.62 299.07 cv
120.62 300.148 124.71 301.022 129.756 301.022 cv
134.802 301.022 138.892 300.148 138.892 299.07 cv
@
138.892 299.07 mo
138.892 297.993 134.802 297.119 129.756 297.119 cv
124.71 297.119 120.62 297.993 120.62 299.07 cv
120.62 300.148 124.71 301.022 129.756 301.022 cv
134.802 301.022 138.892 300.148 138.892 299.07 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
121.789 298.645 mo
(IndividualMotionVectorDecode)
[.413513 .620895 .620903 .345222 .620895 .345222 .620895 .620903 .551338 .345222 1.10395 .620903 
.345215 .34523 .620895 .620895 .896561 .551346 .551331 .34523 .620895 .413513 .896561 .551346 
.551331 .620895 .620911 0 ]xsh
126.801 300.064 mo
(I/O: 44->22)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
137.65 286.564 mo
136.142 288.959 133.215 293.571 131.352 296.498 cv
@
131.264 296.232 mo
130.998 297.119 li
131.619 296.498 li
cp
@
131.264 296.232 mo
130.998 297.119 li
131.619 296.498 li
f
140.666 306.344 mo
140.666 305.266 136.576 304.392 131.53 304.392 cv
126.484 304.392 122.394 305.266 122.394 306.344 cv
122.394 307.421 126.484 308.295 131.53 308.295 cv
136.576 308.295 140.666 307.421 140.666 306.344 cv
@
140.666 306.344 mo
140.666 305.266 136.576 304.392 131.53 304.392 cv
126.484 304.392 122.394 305.266 122.394 306.344 cv
122.394 307.421 126.484 308.295 131.53 308.295 cv
136.576 308.295 140.666 307.421 140.666 306.344 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
123.563 305.918 mo
(IndividualMotionVectorDecode)
[.413513 .620895 .620903 .345222 .620895 .345222 .620895 .620903 .551346 .345215 1.10396 .620895 
.345215 .34523 .620895 .620895 .896561 .551346 .551331 .34523 .620895 .413513 .896561 .551346 
.551331 .620911 .620895 0 ]xsh
128.575 307.337 mo
(I/O: 44->22)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
139.247 286.564 mo
140.4 290.023 142.795 298.006 139.956 301.11 cv
138.981 302.175 137.295 303.239 135.787 304.215 cv
@
135.965 303.86 mo
135.255 304.481 li
136.142 304.304 li
cp
@
135.965 303.86 mo
135.255 304.481 li
136.142 304.304 li
f
142.44 313.617 mo
142.44 312.539 138.35 311.666 133.304 311.666 cv
128.258 311.666 124.168 312.539 124.168 313.617 cv
124.168 314.695 128.258 315.569 133.304 315.569 cv
138.35 315.569 142.44 314.695 142.44 313.617 cv
@
142.44 313.617 mo
142.44 312.539 138.35 311.666 133.304 311.666 cv
128.258 311.666 124.168 312.539 124.168 313.617 cv
124.168 314.695 128.258 315.569 133.304 315.569 cv
138.35 315.569 142.44 314.695 142.44 313.617 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
125.337 313.191 mo
(IndividualMotionVectorDecode)
[.413513 .620895 .620903 .345215 .620903 .345222 .620895 .620895 .551346 .34523 1.10394 .620895 
.34523 .345215 .620895 .620911 .896561 .551331 .551346 .345215 .620911 .413498 .896561 .551346 
.551346 .620895 .620895 0 ]xsh
130.349 314.61 mo
(I/O: 44->22)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
140.045 286.564 mo
140.577 287.362 141.198 288.338 141.287 289.047 cv
141.819 292.24 143.948 305.989 141.73 308.384 cv
140.843 309.448 139.069 310.513 137.473 311.488 cv
@
137.65 311.134 mo
136.941 311.754 li
137.828 311.577 li
cp
@
137.65 311.134 mo
136.941 311.754 li
137.828 311.577 li
f
144.214 321.866 mo
144.214 320.789 140.124 319.915 135.078 319.915 cv
130.032 319.915 125.942 320.789 125.942 321.866 cv
125.942 322.944 130.032 323.818 135.078 323.818 cv
140.124 323.818 144.214 322.944 144.214 321.866 cv
@
144.214 321.866 mo
144.214 320.789 140.124 319.915 135.078 319.915 cv
130.032 319.915 125.942 320.789 125.942 321.866 cv
125.942 322.944 130.032 323.818 135.078 323.818 cv
140.124 323.818 144.214 322.944 144.214 321.866 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
127.111 321.44 mo
(IndividualMotionVectorDecode)
[.413513 .620903 .620895 .345215 .620911 .345215 .620895 .620911 .551331 .34523 1.10394 .620895 
.34523 .345215 .620895 .620911 .896561 .551331 .551346 .345215 .620911 .413498 .896561 .551346 
.551346 .620895 .620895 0 ]xsh
132.123 322.859 mo
(I/O: 44->22)
[.413513 .345215 .896561 .34523 .31044 .620895 .620911 .413513 .700363 .620895 0 ]xsh
140.4 286.564 mo
141.198 287.273 142.085 288.249 142.351 289.047 cv
143.593 292.24 144.125 295.7 144.125 299.07 cv
144.125 299.07 144.125 299.07 144.125 306.344 cv
144.125 309.537 145.101 312.996 143.504 315.657 cv
142.706 317.076 140.755 318.584 138.981 319.737 cv
@
139.158 319.383 mo
138.448 320.004 li
139.335 319.826 li
cp
@
139.158 319.383 mo
138.448 320.004 li
139.335 319.826 li
f
143.15 330.115 mo
143.15 329.038 141.561 328.164 139.602 328.164 cv
137.642 328.164 136.054 329.038 136.054 330.115 cv
136.054 331.193 137.642 332.067 139.602 332.067 cv
141.561 332.067 143.15 331.193 143.15 330.115 cv
@
143.15 330.115 mo
143.15 329.038 141.561 328.164 139.602 328.164 cv
137.642 328.164 136.054 329.038 136.054 330.115 cv
136.054 331.193 137.642 332.067 139.602 332.067 cv
141.561 332.067 143.15 331.193 143.15 330.115 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
137.67 329.69 mo
(Identity)
[.413513 .620895 .551346 .620895 .345215 .34523 .345215 0 ]xsh
137.268 331.109 mo
(I/O: 1->1)
[.413513 .345215 .896561 .34523 .31044 .620895 .413513 .700378 0 ]xsh
141.109 286.475 mo
142.174 287.273 143.327 288.16 143.77 289.047 cv
145.367 292.152 145.899 295.7 145.899 299.07 cv
145.899 299.07 145.899 299.07 145.899 313.617 cv
145.899 317.431 146.698 321.423 145.278 324.882 cv
144.924 325.946 143.77 327.1 142.617 328.075 cv
@
142.529 327.898 mo
141.908 328.607 li
142.795 328.253 li
cp
@
142.529 327.898 mo
141.908 328.607 li
142.795 328.253 li
f
129.845 367.103 mo
129.845 366.221 126.548 365.507 122.482 365.507 cv
118.417 365.507 115.12 366.221 115.12 367.103 cv
115.12 367.985 118.417 368.7 122.482 368.7 cv
126.548 368.7 129.845 367.985 129.845 367.103 cv
@
129.845 367.103 mo
129.845 366.221 126.548 365.507 122.482 365.507 cv
118.417 365.507 115.12 366.221 115.12 367.103 cv
115.12 367.985 118.417 368.7 122.482 368.7 cv
126.548 368.7 129.845 367.985 129.845 367.103 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
116.05 367.387 mo
(roundrobin\(384,1,1,1,1,1\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.620903 .620903 .310448 .620895 .310455 .620895 .310455 .620895 .310448 .620903 .310448 .620895 
0 ]xsh
102.88 374.909 mo
102.88 373.243 98.3526 371.893 92.768 371.893 cv
87.1834 371.893 82.6562 373.243 82.6562 374.909 cv
82.6562 376.574 87.1834 377.925 92.768 377.925 cv
98.3526 377.925 102.88 376.574 102.88 374.909 cv
@
102.88 374.909 mo
102.88 373.243 98.3526 371.893 92.768 371.893 cv
87.1834 371.893 82.6562 373.243 82.6562 374.909 cv
82.6562 376.574 87.1834 377.925 92.768 377.925 cv
98.3526 377.925 102.88 376.574 102.88 374.909 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
84.0787 373.773 mo
(SendBackReferenceFrameEncoder)
[.690437 .551346 .620895 .620903 .82827 .551338 .551346 .620895 .82827 .551346 .413506 .551346 
.413506 .551346 .620895 .551338 .551346 .690437 .413513 .551338 .966118 .551346 .758728 .620895 
.551346 .620895 .620903 .551338 0 ]xsh
88.8825 375.193 mo
(I/O: 128370->1)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .620903 .620895 .620903 .413513 
.700363 0 ]xsh
87.4904 376.612 mo
(*** STATEFUL ***)
[.620903 .620895 .620903 .310448 .690445 .758728 .896561 .758728 .758728 .690445 .896561 .758728 
.310448 .620903 .620903 0 ]xsh
118.58 368.434 mo
117.427 368.877 116.273 369.232 115.386 369.409 cv
111.661 370.385 106.073 371.804 101.372 372.869 cv
@
101.549 372.603 mo
100.751 373.046 li
101.638 373.046 li
cp
@
101.549 372.603 mo
100.751 373.046 li
101.638 373.046 li
f
116.185 299.07 mo
116.185 297.993 113.564 297.119 110.331 297.119 cv
107.097 297.119 104.476 297.993 104.476 299.07 cv
104.476 300.148 107.097 301.022 110.331 301.022 cv
113.564 301.022 116.185 300.148 116.185 299.07 cv
@
116.185 299.07 mo
116.185 297.993 113.564 297.119 110.331 297.119 cv
107.097 297.119 104.476 297.993 104.476 299.07 cv
104.476 300.148 107.097 301.022 110.331 301.022 cv
113.564 301.022 116.185 300.148 116.185 299.07 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
105.64 298.645 mo
(ZigZagUnordering)
[.758728 .345222 .620903 .758728 .551338 .620903 .896561 .620895 .620903 .413513 .620895 .551346 
.413506 .345222 .620903 0 ]xsh
107.376 300.064 mo
(I/O: 64->64)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
112.282 293.748 mo
112.016 294.547 111.661 295.434 111.395 296.232 cv
@
111.218 296.143 mo
111.04 297.03 li
111.572 296.321 li
cp
@
111.218 296.143 mo
111.04 297.03 li
111.572 296.321 li
f
113.346 306.344 mo
113.346 305.462 111.4 304.747 109 304.747 cv
106.6 304.747 104.654 305.462 104.654 306.344 cv
104.654 307.225 106.6 307.94 109 307.94 cv
111.4 307.94 113.346 307.225 113.346 306.344 cv
@
113.346 306.344 mo
113.346 305.462 111.4 304.747 109 304.747 cv
106.6 304.747 104.654 305.462 104.654 306.344 cv
104.654 307.225 106.6 307.94 109 307.94 cv
111.4 307.94 113.346 307.225 113.346 306.344 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
105.534 306.628 mo
(duplicate\(1,1\))
[.620903 .620895 .620903 .345215 .345222 .551346 .551338 .345222 .551338 .413506 .620903 .310448 
.620903 0 ]xsh
109.976 301.11 mo
109.798 301.997 109.532 303.062 109.444 303.949 cv
@
109.266 303.86 mo
109.266 304.747 li
109.71 303.949 li
cp
@
109.266 303.86 mo
109.266 304.747 li
109.71 303.949 li
f
93.7437 313.617 mo
93.7437 312.735 91.4404 312.021 88.5991 312.021 cv
85.7578 312.021 83.4545 312.735 83.4545 313.617 cv
83.4545 314.499 85.7578 315.214 88.5991 315.214 cv
91.4404 315.214 93.7437 314.499 93.7437 313.617 cv
@
93.7437 313.617 mo
93.7437 312.735 91.4404 312.021 88.5991 312.021 cv
85.7578 312.021 83.4545 312.735 83.4545 313.617 cv
83.4545 314.499 85.7578 315.214 88.5991 315.214 cv
91.4404 315.214 93.7437 314.499 93.7437 313.617 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
84.3398 313.901 mo
(roundrobin\(1,63\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.310455 .620895 .620903 0 ]xsh
106.605 307.674 mo
105.984 307.94 105.363 308.206 104.92 308.384 cv
101.194 309.626 97.2917 310.158 93.4776 311.311 cv
93.0341 311.4 92.4132 311.666 91.881 311.932 cv
@
91.9697 311.577 mo
91.3488 312.287 li
92.2358 312.021 li
cp
@
91.9697 311.577 mo
91.3488 312.287 li
92.2358 312.021 li
f
118.402 321.866 mo
118.402 320.201 114.193 318.85 109 318.85 cv
103.807 318.85 99.5979 320.201 99.5979 321.866 cv
99.5979 323.532 103.807 324.882 109 324.882 cv
114.193 324.882 118.402 323.532 118.402 321.866 cv
@
118.402 321.866 mo
118.402 320.201 114.193 318.85 109 318.85 cv
103.807 318.85 99.5979 320.201 99.5979 321.866 cv
99.5979 323.532 103.807 324.882 109 324.882 cv
114.193 324.882 118.402 323.532 118.402 321.866 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/z <1C60D8A8C9B77FE284EFEC4CF0FCC63CDEB1624F39F402FFE3D4A95D1F81
2924519B69F6054956BEDD472A0597A54C3034FF3538C85678A4E4FE466B514C
141F526BEAADD3E6242801DF59EF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 122 /z put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 3{/.notdef}rp /greater 
2{/.notdef}rp /A /B /C /D /E /F /G 
/.notdef /I 2{/.notdef}rp /L /M /.notdef /O /P 
/Q /R /S /T /U /V 2{/.notdef}rp /Y 
/Z 4{/.notdef}rp /underscore /.notdef /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /x /y /z 133{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
101.068 320.731 mo
(InverseQuantization_AC_Coeff)
[.413513 .620895 .620903 .551338 .413513 .483047 .551338 .896561 .620903 .551338 .620903 .345222 
.345215 .551346 .551338 .345222 .345215 .620903 .620903 .620895 .896561 .82827 .620903 .82827 
.620903 .551338 .413506 0 ]xsh
106.046 322.15 mo
(I/O: 64->64)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
103.722 323.569 mo
(*** STATEFUL ***)
[.620903 .620895 .620903 .310448 .690445 .758728 .896561 .758728 .758728 .690445 .896561 .758728 
.310448 .620903 .620903 0 ]xsh
109 307.94 mo
109 310.335 109 314.948 109 318.141 cv
@
108.823 317.963 mo
109 318.85 li
109.266 317.963 li
cp
@
108.823 317.963 mo
109 318.85 li
109.266 317.963 li
f
114.056 336.945 mo
114.056 336.063 111.594 335.349 108.557 335.349 cv
105.519 335.349 103.057 336.063 103.057 336.945 cv
103.057 337.827 105.519 338.542 108.557 338.542 cv
111.594 338.542 114.056 337.827 114.056 336.945 cv
@
114.056 336.945 mo
114.056 336.063 111.594 335.349 108.557 335.349 cv
105.519 335.349 103.057 336.063 103.057 336.945 cv
103.057 337.827 105.519 338.542 108.557 338.542 cv
111.594 338.542 114.056 337.827 114.056 336.945 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
103.987 337.229 mo
(roundrobin\(64,64\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.620903 .310448 .620903 .620895 0 ]xsh
119.023 344.751 mo
119.023 343.085 114.337 341.735 108.557 341.735 cv
102.776 341.735 98.09 343.085 98.09 344.751 cv
98.09 346.416 102.776 347.767 108.557 347.767 cv
114.337 347.767 119.023 346.416 119.023 344.751 cv
@
119.023 344.751 mo
119.023 343.085 114.337 341.735 108.557 341.735 cv
102.776 341.735 98.09 343.085 98.09 344.751 cv
98.09 346.416 102.776 347.767 108.557 347.767 cv
114.337 347.767 119.023 346.416 119.023 344.751 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/J <1C60D8A8C9B7361F02E9DFE0B9C9639F5322575055288FA88C96DC9CB9D9
CA19F6F8F65E0BC3562823C923780B557829CF69C4889E8D8AE10C346B69E6B3
C49D8F83FB5992EF32CD5E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 74 /J put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 3{/.notdef}rp /greater 
2{/.notdef}rp /A /B /C /D /E /F /G 
/.notdef /I /J /.notdef /L /M /.notdef /O 
/P /Q /R /S /T /U /V 2{/.notdef}rp 
/Y /Z 4{/.notdef}rp /underscore /.notdef /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /x /y /z 133{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
99.5201 343.615 mo
(InverseQuantizationJoinerSubstitute)
[.413513 .620895 .620903 .551338 .413513 .483047 .551338 .896561 .620903 .551338 .620903 .345222 
.345215 .551346 .551338 .345222 .345215 .620903 .620903 .483047 .620903 .345215 .620903 .551338 
.413513 .690437 .620903 .620903 .483047 .345215 .345222 .345222 .620895 .345222 0 ]xsh
105.292 345.034 mo
(I/O: 128->64)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .620895 .413513 .700371 .620895 0 
]xsh
103.279 346.453 mo
(*** STATEFUL ***)
[.620903 .620895 .620903 .310448 .690445 .758728 .896561 .758728 .758728 .690445 .896561 .758728 
.310448 .620903 .620903 0 ]xsh
108.557 338.542 mo
108.557 339.163 108.557 340.05 108.557 340.848 cv
@
108.379 340.848 mo
108.557 341.735 li
108.823 340.848 li
cp
@
108.379 340.848 mo
108.557 341.735 li
108.823 340.848 li
f
77.6003 321.866 mo
77.6003 320.201 72.7156 318.85 66.6902 318.85 cv
60.6647 318.85 55.7801 320.201 55.7801 321.866 cv
55.7801 323.532 60.6647 324.882 66.6902 324.882 cv
72.7156 324.882 77.6003 323.532 77.6003 321.866 cv
@
77.6003 321.866 mo
77.6003 320.201 72.7156 318.85 66.6902 318.85 cv
60.6647 318.85 55.7801 320.201 55.7801 321.866 cv
55.7801 323.532 60.6647 324.882 66.6902 324.882 cv
72.7156 324.882 77.6003 323.532 77.6003 321.866 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
57.2756 320.731 mo
(InverseQuantization_DC_Intra_Coeff)
[.413509 .620899 .620903 .551338 .413509 .483051 .551342 .896561 .620899 .551342 .620899 .345219 
.345222 .551338 .551346 .345215 .345222 .620903 .620895 .620903 .896561 .82827 .620895 .413513 
.620903 .345215 .413513 .551338 .620903 .82827 .620895 .551346 .413513 0 ]xsh
64.3568 322.15 mo
(I/O: 1->1)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
61.4126 323.569 mo
(*** STATEFUL ***)
[.620899 .620899 .620903 .310448 .690445 .758728 .896561 .758728 .758728 .690445 .896561 .758728 
.310448 .620903 .620903 0 ]xsh
85.5833 314.948 mo
84.8737 315.214 84.2528 315.48 83.7206 315.657 cv
81.1483 316.633 77.4229 318.052 74.141 319.205 cv
@
74.141 318.939 mo
73.4314 319.471 li
74.3184 319.383 li
cp
@
74.141 318.939 mo
73.4314 319.471 li
74.3184 319.383 li
f
98.0013 321.866 mo
98.0013 320.201 93.7918 318.85 88.5991 318.85 cv
83.4064 318.85 79.1969 320.201 79.1969 321.866 cv
79.1969 323.532 83.4064 324.882 88.5991 324.882 cv
93.7918 324.882 98.0013 323.532 98.0013 321.866 cv
@
98.0013 321.866 mo
98.0013 320.201 93.7918 318.85 88.5991 318.85 cv
83.4064 318.85 79.1969 320.201 79.1969 321.866 cv
79.1969 323.532 83.4064 324.882 88.5991 324.882 cv
93.7918 324.882 98.0013 323.532 98.0013 321.866 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
80.6673 320.731 mo
(InverseQuantization_AC_Coeff)
[.413513 .620895 .620903 .551338 .413513 .483047 .551338 .896561 .620903 .551338 .620903 .345222 
.345215 .551346 .551338 .345222 .345215 .620903 .620903 .620895 .896561 .82827 .620903 .82827 
.620903 .551338 .413513 0 ]xsh
85.645 322.15 mo
(I/O: 63->63)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
83.3216 323.569 mo
(*** STATEFUL ***)
[.620903 .620895 .620903 .310448 .690445 .758728 .896561 .758728 .758728 .690445 .896561 .758728 
.310455 .620895 .620903 0 ]xsh
88.5991 315.214 mo
88.5991 316.012 88.5991 316.988 88.5991 317.963 cv
@
88.4217 317.963 mo
88.5991 318.85 li
88.8652 317.963 li
cp
@
88.4217 317.963 mo
88.5991 318.85 li
88.8652 317.963 li
f
93.7437 330.115 mo
93.7437 329.234 91.4404 328.519 88.5991 328.519 cv
85.7578 328.519 83.4545 329.234 83.4545 330.115 cv
83.4545 330.997 85.7578 331.712 88.5991 331.712 cv
91.4404 331.712 93.7437 330.997 93.7437 330.115 cv
@
93.7437 330.115 mo
93.7437 329.234 91.4404 328.519 88.5991 328.519 cv
85.7578 328.519 83.4545 329.234 83.4545 330.115 cv
83.4545 330.997 85.7578 331.712 88.5991 331.712 cv
91.4404 331.712 93.7437 330.997 93.7437 330.115 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
84.3398 330.399 mo
(roundrobin\(1,63\))
[.413513 .620895 .620903 .620895 .620903 .413513 .620895 .620903 .345222 .620895 .413513 .620895 
.310455 .620895 .620903 0 ]xsh
91.2601 331.535 mo
92.0584 331.889 92.8567 332.244 93.4776 332.422 cv
94.9855 332.954 100.041 334.462 103.855 335.526 cv
@
103.767 335.703 mo
104.654 335.792 li
103.855 335.26 li
cp
@
103.767 335.703 mo
104.654 335.792 li
103.855 335.26 li
f
73.3427 324.261 mo
76.8907 325.503 80.9709 327.011 83.7206 328.075 cv
83.9867 328.164 84.3415 328.253 84.6963 328.43 cv
@
84.6076 328.607 mo
85.4946 328.874 li
84.785 328.253 li
cp
@
84.6076 328.607 mo
85.4946 328.874 li
84.785 328.253 li
f
88.5991 324.882 mo
88.5991 325.858 88.5991 326.833 88.5991 327.72 cv
@
88.4217 327.632 mo
88.5991 328.519 li
88.8652 327.632 li
cp
@
88.4217 327.632 mo
88.5991 328.519 li
88.8652 327.632 li
f
108.911 324.882 mo
108.823 327.72 108.734 331.889 108.645 334.55 cv
@
108.468 334.462 mo
108.645 335.349 li
108.911 334.462 li
cp
@
108.468 334.462 mo
108.645 335.349 li
108.911 334.462 li
f
117.338 353 mo
117.338 351.922 114.161 351.049 110.242 351.049 cv
106.323 351.049 103.146 351.922 103.146 353 cv
103.146 354.078 106.323 354.951 110.242 354.951 cv
114.161 354.951 117.338 354.078 117.338 353 cv
@
117.338 353 mo
117.338 351.922 114.161 351.049 110.242 351.049 cv
106.323 351.049 103.146 351.922 103.146 353 cv
103.146 354.078 106.323 354.951 110.242 354.951 cv
114.161 354.951 117.338 354.078 117.338 353 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
104.344 352.574 mo
(iDCT8x8_1D_row_fast)
[.345222 .896561 .82827 .758728 .620903 .620895 .620903 .620903 .620895 .896561 .620903 .413506 
.620903 .896561 .620903 .413506 .551338 .483055 0 ]xsh
107.909 353.993 mo
(I/O: 8->8)
[.413513 .345215 .896561 .345222 .310448 .620903 .413513 .700363 0 ]xsh
109.177 347.767 mo
109.266 348.565 109.444 349.363 109.621 350.162 cv
@
109.355 350.162 mo
109.798 350.96 li
109.798 350.073 li
cp
@
109.355 350.162 mo
109.798 350.96 li
109.798 350.073 li
f
118.047 360.273 mo
118.047 359.196 114.99 358.322 111.218 358.322 cv
107.446 358.322 104.388 359.196 104.388 360.273 cv
104.388 361.351 107.446 362.225 111.218 362.225 cv
114.99 362.225 118.047 361.351 118.047 360.273 cv
@
118.047 360.273 mo
118.047 359.196 114.99 358.322 111.218 358.322 cv
107.446 358.322 104.388 359.196 104.388 360.273 cv
104.388 361.351 107.446 362.225 111.218 362.225 cv
114.99 362.225 118.047 361.351 118.047 360.273 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
105.526 359.848 mo
(iDCT8x8_1D_col_fast)
[.345222 .896561 .82827 .758728 .620903 .620895 .620903 .620903 .620895 .896561 .620903 .551338 
.620903 .345215 .620903 .413513 .551338 .483047 0 ]xsh
108.263 361.267 mo
(I/O: 64->64)
[.413513 .345215 .896561 .345222 .310448 .620903 .620903 .413506 .700371 .620903 0 ]xsh
110.508 355.04 mo
110.597 355.75 110.685 356.637 110.774 357.346 cv
@
110.597 357.435 mo
110.951 358.233 li
110.951 357.346 li
cp
@
110.597 357.435 mo
110.951 358.233 li
110.951 357.346 li
f
114.233 362.047 mo
115.741 362.934 117.693 364.176 119.289 365.152 cv
@
119.112 365.329 mo
119.999 365.595 li
119.378 364.974 li
cp
@
119.112 365.329 mo
119.999 365.595 li
119.378 364.974 li
f
125.498 300.844 mo
123.813 301.731 122.128 302.796 121.329 304.038 cv
119.644 306.787 120.708 310.424 120.708 313.617 cv
120.708 313.617 120.708 313.617 120.708 353 cv
120.708 356.282 121.595 361.87 122.128 364.886 cv
@
121.862 364.62 mo
122.216 365.507 li
122.305 364.62 li
cp
@
121.862 364.62 mo
122.216 365.507 li
122.305 364.62 li
f
127.272 308.118 mo
125.587 309.005 123.813 310.069 123.103 311.311 cv
121.329 314.415 122.482 318.407 122.482 321.866 cv
122.482 321.866 122.482 321.866 122.482 353 cv
122.482 356.104 122.482 361.338 122.482 364.531 cv
@
122.305 364.62 mo
122.482 365.507 li
122.749 364.62 li
cp
@
122.305 364.62 mo
122.482 365.507 li
122.749 364.62 li
f
129.224 315.391 mo
127.45 316.367 125.587 317.52 124.877 318.85 cv
123.103 322.221 124.256 326.39 124.256 330.115 cv
124.256 330.115 124.256 330.115 124.256 353 cv
124.256 356.282 123.369 361.87 122.837 364.886 cv
@
122.66 364.62 mo
122.749 365.507 li
123.103 364.62 li
cp
@
122.66 364.62 mo
122.749 365.507 li
123.103 364.62 li
f
133.836 323.818 mo
132.062 327.011 128.78 333.042 128.78 336.945 cv
128.78 336.945 128.78 336.945 128.78 353 cv
128.78 356.637 125.764 361.87 123.902 364.886 cv
@
123.813 364.62 mo
123.547 365.507 li
124.168 364.886 li
cp
@
123.813 364.62 mo
123.547 365.507 li
124.168 364.886 li
f
138.715 332.067 mo
137.384 335.171 135.078 341.114 135.078 344.751 cv
135.078 344.751 135.078 344.751 135.078 353 cv
135.078 356.903 132.062 360.185 129.49 363.023 cv
128.78 363.91 127.45 364.62 126.208 365.418 cv
@
126.385 365.063 mo
125.676 365.684 li
126.563 365.507 li
cp
@
126.385 365.063 mo
125.676 365.684 li
126.563 365.507 li
f
86.9138 377.392 mo
85.4946 377.925 84.0754 378.368 82.9223 378.634 cv
77.5116 379.876 68.4642 381.118 62.4326 381.916 cv
@
62.6987 381.65 mo
61.9004 382.005 li
62.7874 382.093 li
cp
@
62.6987 381.65 mo
61.9004 382.005 li
62.7874 382.093 li
f
64.5614 397.793 mo
64.5614 396.128 60.8284 394.778 56.2236 394.778 cv
51.6188 394.778 47.8858 396.128 47.8858 397.793 cv
47.8858 399.459 51.6188 400.809 56.2236 400.809 cv
60.8284 400.809 64.5614 399.459 64.5614 397.793 cv
@
64.5614 397.793 mo
64.5614 396.128 60.8284 394.778 56.2236 394.778 cv
51.6188 394.778 47.8858 396.128 47.8858 397.793 cv
47.8858 399.459 51.6188 400.809 56.2236 400.809 cv
60.8284 400.809 64.5614 399.459 64.5614 397.793 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
49.3622 396.658 mo
(GeneratorMessageReceiver)
[.896561 .551342 .620899 .551338 .413513 .551338 .345222 .620899 .413509 1.10395 .551342 .483047 
.483051 .551342 .620899 .551342 .82827 .551342 .551338 .551342 .345219 .620899 .551342 0 
]xsh
50.7858 398.077 mo
(I/O: 131340->131342)
[.413509 .345222 .896561 .345219 .310452 .620899 .620899 .620899 .620899 .620903 .620899 .413509 
.700371 .620899 .620899 .620899 .620899 .620903 0 ]xsh
50.946 399.496 mo
(*** STATEFUL ***)
[.620899 .620899 .620903 .310448 .690441 .758732 .896561 .758728 .758732 .690441 .896561 .758728 
.310452 .620899 .620903 0 ]xsh
56.2236 391.584 mo
56.2236 392.294 56.2236 393.092 56.2236 393.891 cv
@
56.0462 393.891 mo
56.2236 394.778 li
56.4897 393.891 li
cp
@
56.0462 393.891 mo
56.2236 394.778 li
56.4897 393.891 li
f
63.4083 406.042 mo
63.4083 404.965 60.1916 404.091 56.2236 404.091 cv
52.2556 404.091 49.0389 404.965 49.0389 406.042 cv
49.0389 407.12 52.2556 407.994 56.2236 407.994 cv
60.1916 407.994 63.4083 407.12 63.4083 406.042 cv
@
63.4083 406.042 mo
63.4083 404.965 60.1916 404.091 56.2236 404.091 cv
52.2556 404.091 49.0389 404.965 49.0389 406.042 cv
49.0389 407.12 52.2556 407.994 56.2236 407.994 cv
60.1916 407.994 63.4083 407.12 63.4083 406.042 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
50.2575 405.617 mo
(MPEGStreamGenerator)
[1.10395 .690441 .758728 .896564 .690437 .345222 .413509 .551342 .551338 .966122 .896561 .551342 
.620895 .551342 .413509 .551342 .345219 .620903 0 ]xsh
53.8903 407.036 mo
(I/O: *->*)
[.413509 .345222 .896561 .345219 .310452 .620899 .413509 .700371 0 ]xsh
56.2236 400.809 mo
56.2236 401.607 56.2236 402.406 56.2236 403.115 cv
@
56.0462 403.115 mo
56.2236 404.002 li
56.4897 403.115 li
cp
@
56.0462 403.115 mo
56.2236 404.002 li
56.4897 403.115 li
f
62.9648 414.292 mo
62.9648 412.626 59.9466 411.276 56.2236 411.276 cv
52.5005 411.276 49.4824 412.626 49.4824 414.292 cv
49.4824 415.957 52.5005 417.307 56.2236 417.307 cv
59.9466 417.307 62.9648 415.957 62.9648 414.292 cv
@
62.9648 414.292 mo
62.9648 412.626 59.9466 411.276 56.2236 411.276 cv
52.5005 411.276 49.4824 412.626 49.4824 414.292 cv
49.4824 415.957 52.5005 417.307 56.2236 417.307 cv
59.9466 417.307 62.9648 415.957 62.9648 414.292 cv
1 gry
f
0 gry
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
51.3248 413.156 mo
(BitAlignStartCodes)
[.82827 .345222 .345219 .896561 .345219 .345222 .620899 .620899 .690441 .345219 .551342 .413509 
.345222 .82827 .620899 .620899 .551342 0 ]xsh
53.8903 414.575 mo
(I/O: *->*)
[.413509 .345222 .896561 .345219 .310452 .620899 .413509 .700371 0 ]xsh
50.946 415.995 mo
(*** STATEFUL ***)
[.620899 .620899 .620903 .310448 .690441 .758732 .896561 .758728 .758732 .690441 .896561 .758728 
.310452 .620899 .620903 0 ]xsh
56.2236 408.083 mo
56.2236 408.792 56.2236 409.59 56.2236 410.389 cv
@
56.0462 410.389 mo
56.2236 411.276 li
56.4897 410.389 li
cp
@
56.0462 410.389 mo
56.2236 411.276 li
56.4897 410.389 li
f
59.949 422.541 mo
59.949 421.463 58.2811 420.589 56.2236 420.589 cv
54.1661 420.589 52.4982 421.463 52.4982 422.541 cv
52.4982 423.618 54.1661 424.492 56.2236 424.492 cv
58.2811 424.492 59.949 423.618 59.949 422.541 cv
@
59.949 422.541 mo
59.949 421.463 58.2811 420.589 56.2236 420.589 cv
54.1661 420.589 52.4982 421.463 52.4982 422.541 cv
52.4982 423.618 54.1661 424.492 56.2236 424.492 cv
58.2811 424.492 59.949 423.618 59.949 422.541 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B5D6EF221D1F535C4E993C98F3C3E8C6F16C822BD2743EB782
1EB7D4579AED89E03CEC92EC38206B161850892F887AD5C7930EF4023F5FCBE1
1EE2208AD3E1BD1F677AACB74B3CC3710F142D0BA108A85A0E4D5D852306CED1
4B5207F2E46DF8D6DC78FEF21F895C03164E67E0D168BBFB54CA35ABBA9BABB6
1C9F3A4AAD762B0057729986D9DB719BDE2CE08FDB5B50F7244A0094B314415C
47AAC538D3C6C8E1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSK+TimesNewRomanPSMT /Encoding get
dup 87 /W put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSK+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 3{/.notdef}rp /greater 
2{/.notdef}rp /A /B /C /D /E /F /G 
/.notdef /I /J /.notdef /L /M /.notdef /O 
/P /Q /R /S /T /U /V /W 
/.notdef /Y /Z 4{/.notdef}rp /underscore /.notdef /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u /v /w /x /y /z 
133{/.notdef}rp]
LTFDSK+TimesNewRomanPSMT nf
LTFDSK+TimesNewRomanPSMT*1 [1.2418 0 0 -1.2418 0 0 ]msf
53.637 422.115 mo
(FileWriter)
[.690441 .345219 .345222 .551338 1.17224 .413509 .345222 .345219 .551342 0 ]xsh
53.8903 423.534 mo
(I/O: 1->0)
[.413509 .345222 .896561 .345219 .310452 .620899 .413509 .700371 0 ]xsh
56.2236 417.307 mo
56.2236 418.106 56.2236 418.904 56.2236 419.614 cv
@
56.0462 419.614 mo
56.2236 420.501 li
56.4897 419.614 li
cp
@
56.0462 419.614 mo
56.2236 420.501 li
56.4897 419.614 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
true set_gvm
/LTFDSK+TimesNewRomanPSMT*1 uf
/LTFDSK+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
