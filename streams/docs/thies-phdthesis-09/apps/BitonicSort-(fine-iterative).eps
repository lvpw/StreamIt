%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: BitonicSort - iterative.pdf
%%Creator: Adobe Acrobat 8.0
%%For: Bill Thies
%%CreationDate: 12/5/2008, 11:07:16 PM
%%BoundingBox: 0 0 206 649
%%HiResBoundingBox: 0 0 206 649
%%CropBox: 0 0 206 649
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1622 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GNU Ghostscript 7.05"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -649 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 649 li
206 649 li
206 0 li
cp
clp
[1 0 0 1 -36 0 ]ct
gsave
35 650 mo
242 650 li
242 0 li
35 0 li
cp
clp
.1452 lw
0 lc
0 lj
1 ml
[] 0 dsh
true sadj
37.1616 647.838 mo
240.152 647.838 li
240.152 1.98834 li
37.1616 1.98834 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988, 1990, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Times New Roman is a trademark of the Monotype Corporation, registered in the US Patent and Trademark Office and may be registered in certain other jurisdictions.) def
/Weight (Roman) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 66 /B put
dup 83 /S put
dup 99 /c put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
def
/UniqueID 44335 def
/FontBBox {-167 -250 1009 878} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 0 662 677 447 461 694 694] def
/OtherBlues [384 384 -216 -213] def
/FamilyBlues [-15 0 662 677 447 461 694 694] def
/FamilyOtherBlues [384 384 -216 -213] def
/StdHW [36] def
/StdVW [81] def
/StemSnapH [36 43] def
/StemSnapV [81 94] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/B <1C60D8A8C9B64EDFF4D0475F24A0512970A16CFF6BFBD1A1A12D07A62723
BF27DBD01B60ACEC3C9DB4E627348B4F9C96D245E2397B81856FE7B9149C0D88
A0B1C89901A357B578317FC0F49D1050D95CF70B7F7A7C5741B1B644F20C16DB
8F1BD7E6C45546C9302E6AD757CA73E92696A658F8A903A2E6B5FA3BE24637C3
3393411FB0E113E4BDFEBF11B4E90F57471B306273B2241C3C23457DA84CC16B
22781151F6DE159B155116967F7D53FA1DDDDF14084F0631BA1C08300F50E5BA
9DC336D8349BEA3371DCAFDF658781D6> |-
/S <1C60D8A8C9B7EF320E2EFDBCAC7BC76D0C8C1FC222AFE4F464C56D04CD48
5F140DB725EC46F068943283C9A43A14A852E22E87331165F602FD95AC890BE8
83DAD7F63C31168B480A95AC244C28C8F37F118A399681DB4822661628FBDA87
D99D0367C013E32688035EC31A5C3FC194FEB20C4FCD84A9EB3547C0D5A421A0
1B87DFDA871D7919B7251A9EC84A645CA15425845057F189EC65A90DD4028CC5
B10853B05E6F7AF9E84AC6588CDCE11B6EF766B248A8304E38964E579F6EF2DC
2D4971ED042868564E8E982FE2B2> |-
/c <1C60D8A8C9B77FE2948016809A16C1383D80AA8513D781288589A82DC94A
5DA0D421DEC176AEE608ECA472235D24D269E725C25D06B3582797B60EEBA4C4
46D10FC22341077B09EDB4E12CA0359E24628B46BB6E10727940> |-
/i <1C60D8A8C9B854D0F11440006C203BFFD1DEDCDE7CAD1373D75DB7315CFC
49A0833FA9D881419B9BEE01885373804535A66836A5115D3B942001E4A8D676
2EBA1D3CCCC2CED3DAC862D3F0398204E81D1C72BC10727D59A156997C9269F7
F9572E03A90C988E59FECA8B3BEBEE755CF420171B> |-
/n <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA6A1CED287131EA2B
D2E1E6E797441A36EF164B2E98EA0B7A662ADAA0C64D637EBFFAEDEE2D95D0C9
387D6E78EA7DBD0E03769EFADBB9E99820C3CA652E5CB84D6476DEB84D65355B
ED40D74AEE8C38DE38F7ADD1F45E132F9FCFA8357906BA1C9F825F576D022523
4E76> |-
/o <1C60D8A8C9B7A73DE3E5E50AD058CB1758CCEC8536B108DD66A8D296857C
B3303D78514A78D06E85FDA9E8085F8D9525195AE96992EAA1E95B40679F85C3
FC4165030DF121E13968768CFE641E50E297E68778A63ACC6DD3> |-
/r <1C60D8A8C9B81F2C117020CA370F4EDA9CC5786DD9DE9EF42ACF1876A05B
D63AFC335B1B675841319B03439D25E5CD3513D8B1AF7C3213243E231585FDFB
23DF1B8599146D034A4E5D6FF06CCB4811E4D5773B1A3B8F6DC7EFA556C00470
2D769BB83004181BE21F0C2BFBE9C20E97FA9275EFEA6DCC374D4BC4F2DBC112
90AFF811640F86741723DE5B9796381D4326AE431F5D9C5CAED9> |-
/t <1C60D8A8C9B854D0DAE0E17091F63D902F15B1C5B2DD1246F40FD3EC3264
448E2BE336EDCDEB1DFC2F9412B18B341EC1F740C5E1DC1152FC3909509AD9AD
D2933ADE9A3C5AD03C26776EECF232> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LTFDQO+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/LTFDQO+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 16{/.notdef}rp /S 15{/.notdef}rp /c 5{/.notdef}rp /i 
4{/.notdef}rp /n /o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
LTFDQO+TimesNewRomanPSMT nf
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
38.1368 3.61491 mo
(BitonicSort)
[1.35586 .565117 .565121 1.0164 1.0164 .565117 .902534 1.13024 1.0164 .676907 0 ]xsh
44.1312 73.4269 mo
235.505 73.4269 li
235.505 17.0894 li
44.1312 17.0894 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQO+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6079F62AF7EE2120CD8667DDD4FA2DBFCE5E63E48B84464C1
802A269C64DF6D959EDF25835FFE2A562C206570E6F5B714FC53C2D5C307E1C8
A7B7F4078E600204C204D1FAC19490C22F80872356DF60239B84CD61D63A7DAA
1B4B4595C75AFC0D0514E00256BFA54FA5E3DE43161DB123A8A356631F> |-
/M <1C60D8A8C9B59F85E7C3D982C036A83A051CFEB65CDD644D44695DA87381
2F9E0DA4474B3DF6D63B3341F86CDE23D0512CA425D085DC5BA255E6B3240439
E201FEC100F452F18CDA5E088317BF79F4C8FC952A839FE77A57A286C006FAF4
6CE1F964CD62165C424C020FEAD96AC86FEFFC256D> |-
/O <1C60D8A8C9B6079F258D65BC2331B95A484F6FB0C89DE7976C286549CD33
A4D7316575EC038BAA234ED3FB5DEACB25E52512A7CBD428E6DBD2EB830622E8
8A44262525560702DCFFFB3478FE1A2C6113548B23F661EC01296D75C1A7D5FE
B75CD951FFE5A9> |-
/underscore <1C60D8A8C9B7A73DCDBEB64DA5D4EE31FFCBE2EC06B4C4F1354
CB100A813> |-
/e <1C60D8A8C9B77FE29496D1FBB47314D6F46DA3EBFEC342F3B983185301EF
B706EB7833A9B3F14CD479AC93E43031BC63CB7FFE55CD73AABA1B6DFA935F49
683C721ECBA275DBC565AC78A07D0C5329E18D2789C058EC6367BBAECDF40AEE> |-
/f <1C60D8A8C9B81F2C3AAA7F9332A1FC560AB2BC70F6F61F670AD82FC8B626
674790DAFBDF46077811E1DF38721CA7CA8FBC2C5E006E567037490710BD3A02
BCB7C7EDEC00C0FF3F7CF7FF144794FA5B0DC9D77482C00E98ABF65E83ECDA1A
E1009D> |-
/g <1C60D8A8C9B7A73D85D7E997B7B5DF7D7777AF52CC5562CB6E990E974840
46648599A1D9C4DB63B2EA37B7BBC0C3039255635B40FAB067F562720BFA98A6
8AA5F28640EAE52B9FE1BA9F5F2A49A2F977CAB7D5C25E3626BAA2BEB9E431EA
60B6FFDB96CDFE0161651CB3C7DDAAF79341AA1B63131C7BD07B3EF7C547B329
2DEEC810138CCDC2FA69E1A2AD41097A54F4DBBBA72B1810538F2F0FBA5B3B54
046B0BB798F435A12098BB54904B4FA0166943538B1D7B8EA5970358CDBCC48E
31C506A3AAB0AC2519075E7791339AF09F8C1F93B0D81A9E5ED3B02D4C03B817
17F61566CDC855CB444B31FBC8E71F4A79E39CF6ED7B9B21E0269B8614410251
F072B930BD3C2C0B5BE3125CE4461E97B369DD7B68AF48B8706DE7D2976BB7A8
F7FA6E1A10F519A6E8E51022609E6B7A2E822DDCD222A999CAA520FD83CCB934
D41B4EF6E07BE85DFA424019E44CA0D51152EDBDE920B3C59D4A719415BD84E9
F231F0CBEF222AB9855B090598B4D01FCC8283B4EC699D2D8EDA681DF37E56EB
75FAFC019A1A3645CA60183B64A594CD3556BA6088F7C2AF3F05FDD0875B0187
C18BC8AC2785F74D85EFAA74EA4D56B1D0576FD461BA0B37199C> |-
/p <1C60D8A8C9B7A73D9AFACE39AE6BAA6E09D7322029CE296F526808097535
692942DF193E08360A1A27EB6A08251F7D53D3FA96D22918185F2823E13833F6
44411211FB9E60C91D24768368C1EE71DFEA1AF8285D596D61CE8A067C14BC2E
E1974A4DF14D782DBEDB8D2CE5673BB9634CC4945A7FA5A5E1B87E0F2D94F438
C21548DAE429B68406206429A87E1B462DA7A9D2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQO+TimesNewRomanPSMT /Encoding get
dup 72 /H put
dup 77 /M put
dup 79 /O put
dup 95 /underscore put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 112 /p put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQO+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 5{/.notdef}rp /H 4{/.notdef}rp /M /.notdef /O 
3{/.notdef}rp /S 11{/.notdef}rp /underscore 3{/.notdef}rp /c /.notdef /e 
/f /g /.notdef /i 4{/.notdef}rp /n /o /p 
/.notdef /r /.notdef /t 139{/.notdef}rp]
LTFDQO+TimesNewRomanPSMT nf
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
45.1508 18.7159 mo
(StepOfMerge_Hier_Hier)
[1.13024 .565117 .902534 1.0164 1.46765 .67691 1.80714 .902531 .676907 1.0164 .902531 1.0164 
1.46765 .565117 .902534 .676907 1.0164 1.46765 .565117 .902534 0 ]xsh
46.4544 62.973 mo
92.0472 62.973 li
92.0472 27.5441 li
46.4544 27.5441 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQO+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B7A73DE3E5E50523E6C3667B38E45A4C51E0FEC84C813AB373
8B83F58EEDF7211177C6639AD2CCECEBC1915AB857B5701E72700D0D163B5F2F
58E5A8B520D7ED7F9880D10C1A6AAC1DEF76C68CB623039F59365031342DE694
26167CDA4201402D972AF8016480B0CF8CBDDE4940ABCEFD4C2D5F2FE77DC410
2439C361CA6330A182E6FD> |-
/h <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA64197CEECB76B9E4
D2E9F717E2E21BA6AFBDB9D486017DE1334EE2B8AC7E25B49C380829180892EE
A76E25D726C9DCA303C64F5FE456E4A565D8D0ED565D009BA02A6DD13A835659
5990FC1760FC10BB02F96DEC2D5390B1C4D4059132A392595F028220DA07D2CD
E701448700C9> |-
/l <1C60D8A8C9B854D0F11440006C203A85DCEB221B1066666FE3EA25083329
14AA399D2F81DB0653B503D4FAECFE70883AAAA2B3345C999517D89696069E61
D192EBD1D92DDA82> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQO+TimesNewRomanPSMT /Encoding get
dup 100 /d put
dup 104 /h put
dup 108 /l put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQO+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 5{/.notdef}rp /H 4{/.notdef}rp /M /.notdef /O 
3{/.notdef}rp /S 11{/.notdef}rp /underscore 3{/.notdef}rp /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /.notdef /n 
/o /p /.notdef /r /.notdef /t 139{/.notdef}rp]
LTFDQO+TimesNewRomanPSMT nf
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
47.3925 29.1699 mo
(StepOfMerge_Hier_child)
[1.13024 .565117 .902531 1.0164 1.46765 .676907 1.80714 .902534 .676907 1.0164 .902534 1.0164 
1.46765 .565117 .902534 .676907 1.0164 .902534 1.0164 .565117 .565117 0 ]xsh
93.4992 62.973 mo
139.092 62.973 li
139.092 27.5441 li
93.4992 27.5441 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
94.4373 29.1699 mo
(StepOfMerge_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .676903 1.80714 .902534 .67691 1.0164 .902534 1.0164 
1.46765 .565117 .902527 .67691 1.0164 .902534 1.0164 .565117 .565117 0 ]xsh
140.544 62.973 mo
186.137 62.973 li
186.137 27.5441 li
140.544 27.5441 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
141.482 29.1699 mo
(StepOfMerge_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .67691 1.80714 .902527 .67691 1.0164 .902527 1.0164 
1.46765 .565109 .902542 .676895 1.0164 .902542 1.01639 .565125 .565125 0 ]xsh
187.589 62.973 mo
233.182 62.973 li
233.182 27.5441 li
187.589 27.5441 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
188.527 29.1699 mo
(StepOfMerge_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .67691 1.80714 .902527 .67691 1.0164 .902527 1.0164 
1.46765 .565109 .902542 .67691 1.01639 .902542 1.0164 .565109 .565125 0 ]xsh
41.808 130.926 mo
233.182 130.926 li
233.182 74.5883 li
41.808 74.5883 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
42.8098 76.215 mo
(StepOfMerge)
[1.13024 .565117 .902531 1.0164 1.46765 .676907 1.80714 .902534 .676907 1.0164 0 ]xsh
44.1312 120.472 mo
89.724 120.472 li
89.724 85.0432 li
44.1312 85.0432 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQO+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7EF322B10A2A8DE6EF0A6CE60E86B1DF5C68015667A2338DB
07BCF91C9D8DCCB5967A656E7EB6651B3E305A306DA1BB8C1BAEECFC60DC00D8
8AEC56E3DF7455D57CB9BB0CC9A32704D4F0F1C39C5B2EDC70F42754CACE7253
FF5FDAE4B675FFF987E22613E24B8956EFA9C2C5B9AC406D966F459601B2046A
C9E54A3BB37C45EDEB> |-
/a <1C60D8A8C9B77FE294851E8312417598C86A6256F86C70DE2C7AFF06FCE3
4BADEE28F3B8D02D3C60352D19569C8A11355E1235678015637DF6C7E4A05E8E
A8AB948BF076D376030D74D5BF1D25D6B1436CBFF068CFC521B6EF1846E35D0E
2A4D1C4888BBA14114C326082B33961EF18B6F0B661AC7CDF50B0B0D80CC5ED8
71668C27B3C878E43E83D293BA1B1F771221D32DA7404867CEA1760CC79EAA61
6682686BC92138B01A5FF6B55D314BD1AA96EE89C141B8E9EB46C16F1B31BD66
B910EA6BBA> |-
/q <1C60D8A8C9B7A73DE3E34A36AF308D9ABC2F853844620EFD6CFFC4104749
3EE51F7C308065648397927D7AD6C567446138547A09DCE7C6CBE01088E3BD40
921D1BC9722A4A2AD8CAF55B6AA098CBAC7B1D2247D5938BD377626CB643F290
71771A6930DFA9EFF073665E2FEAD391B9A34CF8E9679A4514BB495B1253C227
E51E84> |-
/u <1C60D8A8C9B7A73D96315394C03E2804B8D6B013BEE63C754B7DCD21D17D
EE183DDCCBE94C1E49FD4EEAD58EEB67E527D51D30B7569BBD690F10D18E5949
069889C638179D8480A9808D89F695AD05863E6AF7CC14732F1A0B4D904FA886
0DFB17262B8501BEF73C125F016588> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQO+TimesNewRomanPSMT /Encoding get
dup 80 /P put
dup 97 /a put
dup 113 /q put
dup 117 /u put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQO+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 5{/.notdef}rp /H 4{/.notdef}rp /M /.notdef /O 
/P 2{/.notdef}rp /S 11{/.notdef}rp /underscore /.notdef /a /.notdef 
/c /d /e /f /g /h /i 2{/.notdef}rp 
/l /.notdef /n /o /p /q /r /.notdef 
/t /u 138{/.notdef}rp]
LTFDQO+TimesNewRomanPSMT nf
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
45.0673 86.6689 mo
(PartitionBitonicSequence)
[1.13024 .902531 .676907 .565121 .565117 .565117 .565121 1.0164 1.0164 1.35586 .565117 .565121 
1.0164 1.0164 .565117 .902534 1.13024 .902531 1.0164 1.0164 .902531 1.0164 .902534 0 
]xsh
91.176 120.472 mo
136.769 120.472 li
136.769 85.0432 li
91.176 85.0432 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
92.1122 86.6689 mo
(PartitionBitonicSequence)
[1.13023 .902534 .67691 .565117 .565117 .565117 .565117 1.0164 1.0164 1.35587 .565117 .565117 
1.0164 1.0164 .565117 .902527 1.13024 .902527 1.0164 1.0164 .902527 1.0164 .902534 0 
]xsh
138.221 120.472 mo
183.814 120.472 li
183.814 85.0432 li
138.221 85.0432 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
139.157 86.6689 mo
(PartitionBitonicSequence)
[1.13023 .902542 .676895 .565125 .565125 .565109 .565125 1.01639 1.0164 1.35587 .565125 .565109 
1.0164 1.0164 .565109 .902542 1.13023 .902527 1.0164 1.0164 .902527 1.0164 .902527 0 
]xsh
185.266 120.472 mo
230.859 120.472 li
230.859 85.0432 li
185.266 85.0432 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
186.202 86.6689 mo
(PartitionBitonicSequence)
[1.13023 .902542 .676895 .565125 .565109 .565125 .565125 1.01639 1.0164 1.35587 .565125 .565109 
1.0164 1.0164 .565109 .902542 1.13023 .902527 1.0164 1.0164 .902527 1.0164 .902527 0 
]xsh
39.4848 209.334 mo
237.828 209.334 li
237.828 132.088 li
39.4848 132.088 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
40.377 133.714 mo
(StepOfMerge_Hier_Hier_Hier_Hier)
[1.13024 .565117 .902531 1.0164 1.46765 .676907 1.80714 .902534 .676907 1.0164 .902534 1.0164 
1.46765 .565117 .902534 .676907 1.0164 1.46765 .565121 .902531 .676907 1.0164 1.46765 .565121 
.902534 .676903 1.0164 1.46765 .565125 .902527 0 ]xsh
41.808 198.88 mo
139.092 198.88 li
139.092 142.542 li
41.808 142.542 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
42.7639 144.169 mo
(StepOfMerge_Hier_Hier_Hier_child)
[1.13024 .565117 .902531 1.0164 1.46765 .676907 1.80714 .902534 .676907 1.0164 .902534 1.0164 
1.46765 .565117 .902534 .676907 1.0164 1.46765 .565121 .902531 .676907 1.0164 1.46765 .565117 
.902534 .676903 1.0164 .902534 1.0164 .565117 .565117 0 ]xsh
44.1312 188.426 mo
89.724 188.426 li
89.724 152.997 li
44.1312 152.997 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
45.0782 154.623 mo
(StepOfMerge_Hier_Hier_child)
[1.13024 .565117 .902531 1.0164 1.46765 .676907 1.80714 .902534 .676907 1.0164 .902534 1.0164 
1.46765 .565117 .902534 .676907 1.0164 1.46765 .565121 .902527 .67691 1.0164 .902527 1.0164 
.565117 .565117 0 ]xsh
91.176 188.426 mo
136.769 188.426 li
136.769 152.997 li
91.176 152.997 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
92.123 154.623 mo
(StepOfMerge_Hier_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .676903 1.80714 .902534 .67691 1.0164 .902534 1.0164 
1.46765 .565117 .902527 .67691 1.0164 1.46765 .565125 .902527 .67691 1.0164 .902527 1.0164 
.565117 .565117 0 ]xsh
138.221 198.88 mo
235.505 198.88 li
235.505 142.542 li
138.221 142.542 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
139.177 144.169 mo
(StepOfMerge_Hier_Hier_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .67691 1.80714 .902527 .67691 1.0164 .902527 1.0164 
1.46765 .565109 .902542 .676895 1.0164 1.46765 .565125 .902527 .67691 1.0164 1.46765 .565109 
.902542 .67691 1.01639 .902542 1.0164 .565109 .565125 0 ]xsh
140.544 188.426 mo
186.137 188.426 li
186.137 152.997 li
140.544 152.997 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
141.491 154.623 mo
(StepOfMerge_Hier_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .67691 1.80714 .902527 .67691 1.0164 .902527 1.0164 
1.46765 .565109 .902542 .676895 1.0164 1.46765 .565125 .902527 .67691 1.0164 .902527 1.0164 
.565109 .565125 0 ]xsh
187.589 188.426 mo
233.182 188.426 li
233.182 152.997 li
187.589 152.997 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
188.536 154.623 mo
(StepOfMerge_Hier_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .67691 1.80714 .902527 .67691 1.0164 .902527 1.0164 
1.46765 .565109 .902542 .67691 1.01639 1.46765 .565125 .902527 .67691 1.0164 .902527 1.0164 
.565125 .565109 0 ]xsh
46.164 266.834 mo
235.214 266.834 li
235.214 210.496 li
46.164 210.496 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
47.1658 212.122 mo
(StepOfMerge)
[1.13024 .565117 .902534 1.0164 1.46765 .67691 1.80714 .902531 .676907 1.0164 0 ]xsh
48.4872 256.379 mo
139.963 256.379 li
139.963 220.95 li
48.4872 220.95 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
49.4234 222.577 mo
(PartitionBitonicSequence)
[1.13024 .902531 .676907 .565121 .565117 .565117 .565121 1.0164 1.0164 1.35586 .565117 .565121 
1.0164 1.0164 .565117 .902534 1.13024 .902527 1.0164 1.0164 .902527 1.0164 .902534 0 
]xsh
141.415 256.379 mo
232.891 256.379 li
232.891 220.95 li
141.415 220.95 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
142.351 222.577 mo
(PartitionBitonicSequence)
[1.13023 .902542 .676895 .565125 .565125 .565109 .565125 1.01639 1.0164 1.35587 .565125 .565109 
1.0164 1.0164 .565109 .902542 1.13023 .902527 1.0164 1.0164 .902527 1.0164 .902527 0 
]xsh
39.4848 345.242 mo
237.828 345.242 li
237.828 267.996 li
39.4848 267.996 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
40.5044 269.621 mo
(StepOfMerge_Hier_Hier)
[1.13024 .565117 .902534 1.0164 1.46765 .67691 1.80714 .902531 .676907 1.0164 .902531 1.0164 
1.46765 .565117 .902534 .676907 1.0164 1.46765 .565117 .902534 0 ]xsh
41.808 334.787 mo
139.092 334.787 li
139.092 278.449 li
41.808 278.449 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
42.7461 280.076 mo
(StepOfMerge_Hier_child)
[1.13024 .565117 .902531 1.0164 1.46765 .676907 1.80714 .902534 .676907 1.0164 .902534 1.0164 
1.46765 .565117 .902534 .676907 1.0164 .902531 1.0164 .565117 .565117 0 ]xsh
44.1312 324.333 mo
89.724 324.333 li
89.724 288.904 li
44.1312 288.904 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
45.0673 290.53 mo
(PartitionBitonicSequence)
[1.13024 .902531 .676907 .565121 .565117 .565117 .565121 1.0164 1.0164 1.35586 .565117 .565121 
1.0164 1.0164 .565117 .902534 1.13024 .902531 1.0164 1.0164 .902531 1.0164 .902534 0 
]xsh
91.176 324.333 mo
136.769 324.333 li
136.769 288.904 li
91.176 288.904 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
92.1122 290.53 mo
(PartitionBitonicSequence)
[1.13023 .902534 .67691 .565117 .565117 .565117 .565117 1.0164 1.0164 1.35587 .565117 .565117 
1.0164 1.0164 .565117 .902527 1.13024 .902527 1.0164 1.0164 .902527 1.0164 .902534 0 
]xsh
138.221 334.787 mo
235.505 334.787 li
235.505 278.449 li
138.221 278.449 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
139.159 280.076 mo
(StepOfMerge_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .67691 1.80714 .902527 .67691 1.0164 .902527 1.0164 
1.46765 .565109 .902542 .676895 1.0164 .902542 1.01639 .565125 .565125 0 ]xsh
140.544 324.333 mo
186.137 324.333 li
186.137 288.904 li
140.544 288.904 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
141.48 290.53 mo
(PartitionBitonicSequence)
[1.13023 .902542 .676895 .565125 .565125 .565109 .565125 1.01639 1.0164 1.35587 .565125 .565109 
1.0164 1.0164 .565109 .902542 1.13023 .902527 1.0164 1.0164 .902527 1.0164 .902527 0 
]xsh
187.589 324.333 mo
233.182 324.333 li
233.182 288.904 li
187.589 288.904 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
188.525 290.53 mo
(PartitionBitonicSequence)
[1.13023 .902542 .676895 .565125 .565109 .565125 .565125 1.01639 1.0164 1.35587 .565125 .565109 
1.0164 1.0164 .565109 .902542 1.13023 .902527 1.0164 1.0164 .902527 1.0164 .902527 0 
]xsh
44.1312 402.741 mo
233.181 402.741 li
233.181 346.403 li
44.1312 346.403 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
45.1508 348.029 mo
(StepOfMerge_Hier_Hier)
[1.13024 .565117 .902534 1.0164 1.46765 .67691 1.80714 .902531 .676907 1.0164 .902531 1.0164 
1.46765 .565117 .902534 .676907 1.0164 1.46765 .565117 .902534 0 ]xsh
46.4544 392.286 mo
137.93 392.286 li
137.93 356.857 li
46.4544 356.857 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
47.3925 358.484 mo
(StepOfMerge_Hier_child)
[1.13024 .565117 .902531 1.0164 1.46765 .676907 1.80714 .902534 .676907 1.0164 .902534 1.0164 
1.46765 .565117 .902534 .676907 1.0164 .902534 1.0164 .565117 .565117 0 ]xsh
139.382 392.286 mo
230.858 392.286 li
230.858 356.857 li
139.382 356.857 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
140.321 358.484 mo
(StepOfMerge_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .67691 1.80714 .902527 .67691 1.0164 .902527 1.0164 
1.46765 .565109 .902542 .67691 1.01639 .902542 1.0164 .565109 .565125 0 ]xsh
47.0352 439.331 mo
230.277 439.331 li
230.277 403.902 li
47.0352 403.902 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
47.9714 405.529 mo
(PartitionBitonicSequence)
[1.13024 .902531 .676907 .565121 .565117 .565117 .565121 1.0164 1.0164 1.35586 .565117 .565121 
1.0164 1.0164 .565117 .902534 1.13023 .902534 1.0164 1.0164 .902534 1.0164 .902527 0 
]xsh
46.164 496.83 mo
235.214 496.83 li
235.214 440.492 li
46.164 440.492 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQO+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7D8BE1621F7F8A9A93A327F755C3E81E8F6E5B36D5D09EC27
E8352590DCF5FBB39847107CDCA7E2F69BF8A0E97E902F61DA0FFC19F5F5635E
A2E6B7FBC25C45E39802E8D22E33BC6334A08FAC75B725C0C2D4D8BA4EE1> |-
/s <1C60D8A8C9B7361F4A5DC306676AF4C8647FF3053FF45CCDDBEB7E9B9050
12DA1DE9402C8DB245C98EF5B89AF8B307871A82029AB9C9383D498ABA5BCF42
FD3EBA06E16095068AAD2A24F29F66CD7BEDAF75E27B9E98183114BB708CEE9F
70B53D4922DAA331AE3A4B4FD1B5CD24EA574D8FE8D1E66E3ECF87407A13A679
B23887BDCEB1C164DC6CBF6472F4BC61E5FBABA972F7976EEBF3BC4B43DEE327
20F6A1A3C1878ACCA80EBBED76DEBD40C76FFC717243DC8D6CB182005A946D70
F948846138DEF539AD5BE615B04618EEB754F0DAF886F93D007AE786FB00955E
897D78D67615B1FA609D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQO+TimesNewRomanPSMT /Encoding get
dup 76 /L put
dup 115 /s put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQO+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B 5{/.notdef}rp /H 3{/.notdef}rp /L /M /.notdef 
/O /P 2{/.notdef}rp /S 11{/.notdef}rp /underscore /.notdef /a 
/.notdef /c /d /e /f /g /h /i 
2{/.notdef}rp /l /.notdef /n /o /p /q /r 
/s /t /u 138{/.notdef}rp]
LTFDQO+TimesNewRomanPSMT nf
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
47.158 442.119 mo
(StepOfLastMerge)
[1.13024 .565117 .902534 1.0164 1.46765 .67691 1.24202 .902534 .790745 .565117 1.80714 .902531 
.676907 1.0164 0 ]xsh
48.4872 486.376 mo
139.963 486.376 li
139.963 450.947 li
48.4872 450.947 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
49.4234 452.573 mo
(PartitionBitonicSequence)
[1.13024 .902531 .676907 .565121 .565117 .565117 .565121 1.0164 1.0164 1.35586 .565117 .565121 
1.0164 1.0164 .565117 .902534 1.13024 .902527 1.0164 1.0164 .902527 1.0164 .902534 0 
]xsh
141.415 486.376 mo
232.891 486.376 li
232.891 450.947 li
141.415 450.947 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
142.351 452.573 mo
(PartitionBitonicSequence)
[1.13023 .902542 .676895 .565125 .565125 .565109 .565125 1.01639 1.0164 1.35587 .565125 .565109 
1.0164 1.0164 .565109 .902542 1.13023 .902527 1.0164 1.0164 .902527 1.0164 .902527 0 
]xsh
39.4848 575.238 mo
237.828 575.238 li
237.828 497.992 li
39.4848 497.992 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
40.4966 499.618 mo
(StepOfLastMerge_Hier_Hier)
[1.13024 .565117 .902534 1.0164 1.46765 .67691 1.24202 .902534 .790745 .565117 1.80714 .902531 
.676907 1.0164 .902531 1.0164 1.46765 .565117 .902534 .676907 1.0164 1.46765 .565117 .902534 
0 ]xsh
41.808 564.784 mo
139.092 564.784 li
139.092 508.446 li
41.808 508.446 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
42.7383 510.073 mo
(StepOfLastMerge_Hier_child)
[1.13024 .565117 .902534 1.0164 1.46765 .67691 1.24202 .902534 .790745 .565117 1.80714 .902531 
.676907 1.0164 .902531 1.0164 1.46765 .565117 .902534 .676907 1.0164 .902534 1.0164 .565125 
.565117 0 ]xsh
44.1312 554.33 mo
89.724 554.33 li
89.724 518.901 li
44.1312 518.901 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
45.0673 520.527 mo
(PartitionBitonicSequence)
[1.13024 .902531 .676907 .565121 .565117 .565117 .565121 1.0164 1.0164 1.35586 .565117 .565121 
1.0164 1.0164 .565117 .902534 1.13024 .902531 1.0164 1.0164 .902531 1.0164 .902534 0 
]xsh
91.176 554.33 mo
136.769 554.33 li
136.769 518.901 li
91.176 518.901 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
92.1122 520.527 mo
(PartitionBitonicSequence)
[1.13023 .902534 .67691 .565117 .565117 .565117 .565117 1.0164 1.0164 1.35587 .565117 .565117 
1.0164 1.0164 .565117 .902527 1.13024 .902527 1.0164 1.0164 .902527 1.0164 .902534 0 
]xsh
138.221 564.784 mo
235.505 564.784 li
235.505 508.446 li
138.221 508.446 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
139.151 510.073 mo
(StepOfLastMerge_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .67691 1.24202 .902527 .790756 .565109 1.80714 .902527 
.67691 1.0164 .902542 1.01639 1.46765 .565125 .902527 .67691 1.0164 .902527 1.0164 .565125 
.565109 0 ]xsh
140.544 554.33 mo
186.137 554.33 li
186.137 518.901 li
140.544 518.901 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
141.48 520.527 mo
(PartitionBitonicSequence)
[1.13023 .902542 .676895 .565125 .565125 .565109 .565125 1.01639 1.0164 1.35587 .565125 .565109 
1.0164 1.0164 .565109 .902542 1.13023 .902527 1.0164 1.0164 .902527 1.0164 .902527 0 
]xsh
187.589 554.33 mo
233.182 554.33 li
233.182 518.901 li
187.589 518.901 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
188.525 520.527 mo
(PartitionBitonicSequence)
[1.13023 .902542 .676895 .565125 .565109 .565125 .565125 1.01639 1.0164 1.35587 .565125 .565109 
1.0164 1.0164 .565109 .902542 1.13023 .902527 1.0164 1.0164 .902527 1.0164 .902527 0 
]xsh
44.1312 632.738 mo
233.181 632.738 li
233.181 576.4 li
44.1312 576.4 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
45.143 578.026 mo
(StepOfLastMerge_Hier_Hier)
[1.13024 .565117 .902534 1.0164 1.46765 .67691 1.24202 .902534 .790745 .565117 1.80714 .902531 
.676907 1.0164 .902531 1.0164 1.46765 .565117 .902534 .67691 1.0164 1.46765 .565117 .902534 
0 ]xsh
46.4544 622.283 mo
137.93 622.283 li
137.93 586.854 li
46.4544 586.854 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
47.3847 588.481 mo
(StepOfLastMerge_Hier_child)
[1.13024 .565117 .902534 1.0164 1.46765 .67691 1.24202 .902534 .790745 .565117 1.80714 .902531 
.676907 1.0164 .902531 1.0164 1.46765 .565117 .902534 .67691 1.0164 .902534 1.0164 .565109 
.565125 0 ]xsh
139.382 622.283 mo
230.858 622.283 li
230.858 586.854 li
139.382 586.854 li
cp
@
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
140.313 588.481 mo
(StepOfLastMerge_Hier_child)
[1.13023 .565125 .902527 1.0164 1.46765 .67691 1.24202 .902527 .790756 .565109 1.80714 .902542 
.676895 1.0164 .902527 1.0164 1.46765 .565125 .902527 .67691 1.0164 .902527 1.0164 .565109 
.565125 0 ]xsh
146.788 10.41 mo
146.788 7.68396 143.667 5.474 139.818 5.474 cv
135.969 5.474 132.848 7.68396 132.848 10.41 cv
132.848 13.137 135.969 15.347 139.818 15.347 cv
143.667 15.347 146.788 13.137 146.788 10.41 cv
@
146.788 10.41 mo
146.788 7.68396 143.667 5.474 139.818 5.474 cv
135.969 5.474 132.848 7.68396 132.848 10.41 cv
132.848 13.137 135.969 15.347 139.818 15.347 cv
143.667 15.347 146.788 13.137 146.788 10.41 cv
/1 
[/DeviceRGB] /CSA add_res
.953 .424 .267 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQO+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
/hyphen <1C60D8A8C9B81F2C7E673161CF52871F3F524B3A1BAC5ADA04F510A
476> |-
/slash <1C60D8A8C9B854D088EAD778FBC18D924BA165ED7CB0EB5700C3B61B
62ACF96E65C0BF> |-
/zero <1C60D8A8C9B7A73DE18CEEF4E48C6DD01FBACAA39C3CF5567D0E5C788
075445C95D6A3B6E540D57A95C2149688073A3E100742CAF1210D033AAEFAE6F
8B444349FD5782CA146EC98165CB56922017B727DFF8905922E07> |-
/one <1C60D8A8C9B7A73DB94F41466C876FCA9AF55081C1C70D8EC4AB3C9249
D700CD0FF27B669AF104FB3406E5DFE3F3B0AB0CAE2CF1998D0DA43C395891C4
7CD031071E50A5> |-
/two <1C60D8A8C9B7A73DB9C4155FCF739F7C1974D5BF41CC3E8700100AE610
E49DF6B4C276649A8B3177B0F76FADB15EC55BD4BBD1CDF8C5F886738FFDBD44
2FF8A0594A170A20B9C3E13444FE4DC986DA862896B80FFA135FA164A257> |-
/six <1C60D8A8C9B7A73DF81BACD811429F931042E1295F1D2320E46DE79DF7
47FCAABFFD92F045A475E54E15C8E93ECB3BD59C8545C0EF45BF22429615FC68
5C033A02F070B2C6D7D737838C1853D297AC8915086E73952A7A9847D6F588AB
17767CC39CB62607242BC1B7BFF5295CEB6C03755CD9B53DA2> |-
/colon <1C60D8A8C9B854D0E389293C42E83787A5BE0CE9B5745E40D1B32D07
F826004562E0981DB26F3EF2E2B5CD932C33C49C462F9673F306A9A8ECFFE93D
9FCE8BF4190AA3F1208FCCE1> |-
/equal <1C60D8A8C9B7E7C1C7C30B941AA047473EBF9655DE246137CE0666A3
DD27E47997A26319529C8C4FF5C38D266AE0> |-
/greater <1C60D8A8C9B7E7C1C7C30B940B3D62C7A181F0EBB0723CBB160375
71F050C44CCE59A85ACB3DB6BF9B03383F> |-
/I <1C60D8A8C9B81F2C3AB090E7A94305EFD59611ABFA6BAFD07A97745145D9
B0DF5E6D35DFFC117239480D5B4909BCBB653176E0149E687888D5B98137EBEA
64> |-
/K <1C60D8A8C9B6079F62AF7EE261D2819ED7974217E7034289FA7C1BABF100
C6A5480EF2F67F33525B9F0C3A7EBEA8703E8C35FFE54D3010A9809D5E12442C
409B269A7D4346FFD3D0C882E0638FE5876FB72290B12BADDE73C28ABC60097D
5F47A0B45D92F7FD41DF8475D961E4F5A95EF6558D45744A11DE71603FC94A1B
038775E2BC960C01D2B930F2> |-
/k <1C60D8A8C9B7A73D926FE6D4B51E06A6595F3746ABEED643EB32E31FC5C1
56BE33D279A48C7177D38FEEE25BE39FA8184693C31C3DD98D1AF000E30B25B8
F0029B9D7DAB8132C06DAF7AF8346F39C9E4C7E69A448E350100342A6E22A322
C4DEF85ED9405E1A9FCE65A5B4B5084195D644BBC14B138BCD62C9C4EFF347DE
06C9D1F36BBC04C3531EBEE642B499C247> |-
/w <1C60D8A8C9B6079F6CBBA5F366E947F933D60DF598D919B1B7650559D736
37DABDC1EE55BCEC17305D792CEB494E24BD853631335C74FFCA113C4D914522
6940D65B0FA636B78B1332922431C88D4DDF20C0A3C1C91D0C3F0EC21F67A6EF
80D94D8DD0BC64DA8FAF76B12BBC90C7B441833497F4FAAF7AFFFE22453504D1
C6C3D3F89787D8CE910F64CD7AC81F424C> |-
/y <1C60D8A8C9B7A73DDF325AF121518DD24D79A1D6297F2682F9AD5083CE90
6B71FC8BFB529DE7E11E55AF343C688ECAE2F8E1922FBFF6524D1DEA97BD39D9
CE14632F8473959D0898D7B7EF3E2B985A44859DA5885A0B7E1416032223E48B
C8A546760893052D5D557F50BFBB6793E5108395A50448013F59BB2036802753
A16DC97698BA68F4F4EAF1FDEAF39B9DD03FEBA42B0F0E35E3A4C6407754F9F9
648DF8C8F5539FA7CCFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQO+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 54 /six put
dup 58 /colon put
dup 61 /equal put
dup 62 /greater put
dup 73 /I put
dup 75 /K put
dup 107 /k put
dup 119 /w put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQO+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash /zero /one 
/two 3{/.notdef}rp /six 3{/.notdef}rp /colon 2{/.notdef}rp /equal /greater 
3{/.notdef}rp /B 5{/.notdef}rp /H /I /.notdef /K /L 
/M /.notdef /O /P 2{/.notdef}rp /S 11{/.notdef}rp /underscore 
/.notdef /a /.notdef /c /d /e /f /g 
/h /i /.notdef /k /l /.notdef /n /o 
/p /q /r /s /t /u /.notdef /w 
/.notdef /y 134{/.notdef}rp]
LTFDQO+TimesNewRomanPSMT nf
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
135.302 8.55192 mo
(KeySource)
[1.46765 .902527 1.0164 1.13023 1.0164 1.0164 .67691 .902527 0 ]xsh
135.631 10.8751 mo
(work=112)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 1.0164 0 ]xsh
135.49 13.1983 mo
(I/O: 0->16)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 1.0164 0 ]xsh
149.256 23.1879 mo
149.256 21.745 145.03 20.574 139.818 20.574 cv
134.606 20.574 130.38 21.745 130.38 23.1879 cv
130.38 24.631 134.606 25.8019 139.818 25.8019 cv
145.03 25.8019 149.256 24.631 149.256 23.1879 cv
@
149.256 23.1879 mo
149.256 21.745 145.03 20.574 139.818 20.574 cv
134.606 20.574 130.38 21.745 130.38 23.1879 cv
130.38 24.631 134.606 25.8019 139.818 25.8019 cv
145.03 25.8019 149.256 24.631 149.256 23.1879 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQO+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C7961C5101279ABC36EDE6472BD125007B977
158C4E9FC1695861D4B758EA0B2DA40929DA2764CDB06C7B17969E83F9B9F9DB
69731300937B8C87AE99> |-
/parenright <1C60D8A8C9B81F2C3AE115477765EA9A623E840D3901B96042A
533934EFD3574B5C656B3B3F7387587FE0D191D87B3E12F0EE70351D07A784B9
DEAB1C75708B7B3217116> |-
/comma <1C60D8A8C9B8707CDCE153BE174BF3415C26A42365D336CF0B48FBEC
E2CCCE829E5297D863F3AA9AC7B62E5A6EDE06B2E79A00ED16CF91E8C6953AD2
9D6E96EF745E730ABC2B82BE60EB1DBDD5981EF3D78237B91F6DA501> |-
/four <1C60D8A8C9B7A73DB99E8D3796659F80CD8CFB6F4891658B64B2996E4
565B417E6680D9494DD50CBC7F026F985B68E97EBCD932CA0004F37BA5FD28FA
5EB6F0DC8CCF44A75B207DA88B4B0D8C53ACF90F9CAE1B04C7036C5BF682DB0A
BF0221167> |-
/b <1C60D8A8C9B7A73D9AFACE39B0C8DF9EB6083858E657E6E95D2C42AE2914
EB3C7C6FCB5E9F471C2055D213C552ACA7BC04F55BA26F3B77D8DFB74AC132BE
41DB935437CE3B007C16B65D849E2E6D1C61659F2699A17D9AEEDDD0EBC23EB8
70A7377D2AC9DB56D0296131C3A8254097E85D96> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQO+TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 52 /four put
dup 98 /b put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQO+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two /.notdef /four /.notdef 
/six 3{/.notdef}rp /colon 2{/.notdef}rp /equal /greater 3{/.notdef}rp /B 
5{/.notdef}rp /H /I /.notdef /K /L /M /.notdef 
/O /P 2{/.notdef}rp /S 11{/.notdef}rp /underscore /.notdef /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /.notdef /n /o /p /q 
/r /s /t /u /.notdef /w /.notdef /y 
134{/.notdef}rp]
LTFDQO+TimesNewRomanPSMT nf
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
131.829 23.6529 mo
(roundrobin\(4,4,4,4\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
139.818 15.347 mo
139.818 16.654 139.818 17.9609 139.818 19.268 cv
@
139.528 19.122 mo
139.818 20.574 li
140.254 19.122 li
cp
@
139.528 19.122 mo
139.818 20.574 li
140.254 19.122 li
f
88.7076 33.642 mo
88.7076 32.199 85.1321 31.029 80.7216 31.029 cv
76.3111 31.029 72.7356 32.199 72.7356 33.642 cv
72.7356 35.0859 76.3111 36.256 80.7216 36.256 cv
85.1321 36.256 88.7076 35.0859 88.7076 33.642 cv
@
88.7076 33.642 mo
88.7076 32.199 85.1321 31.029 80.7216 31.029 cv
76.3111 31.029 72.7356 32.199 72.7356 33.642 cv
72.7356 35.0859 76.3111 36.256 80.7216 36.256 cv
85.1321 36.256 88.7076 35.0859 88.7076 33.642 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
74.2574 34.1069 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .67691 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508202 1.0164 0 ]xsh
130.525 23.769 mo
119.926 24.35 102.792 25.8019 92.4828 27.5439 cv
90.5952 27.9799 87.8364 29.2859 85.6584 30.593 cv
@
85.5132 30.3029 mo
84.3516 31.319 li
85.8036 30.884 li
cp
@
85.5132 30.3029 mo
84.3516 31.319 li
85.8036 30.884 li
f
135.752 33.642 mo
135.752 32.199 132.177 31.029 127.766 31.029 cv
123.356 31.029 119.78 32.199 119.78 33.642 cv
119.78 35.0859 123.356 36.256 127.766 36.256 cv
132.177 36.256 135.752 35.0859 135.752 33.642 cv
@
135.752 33.642 mo
135.752 32.199 132.177 31.029 127.766 31.029 cv
123.356 31.029 119.78 32.199 119.78 33.642 cv
119.78 35.0859 123.356 36.256 127.766 36.256 cv
132.177 36.256 135.752 35.0859 135.752 33.642 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
121.302 34.1069 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .67691 1.0164 1.0164 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
136.914 25.6559 mo
135.317 27.108 133.429 28.851 131.687 30.3029 cv
@
131.542 30.012 mo
130.67 31.174 li
131.977 30.4479 li
cp
@
131.542 30.012 mo
130.67 31.174 li
131.977 30.4479 li
f
159.856 33.642 mo
159.856 32.199 156.28 31.029 151.87 31.029 cv
147.459 31.029 143.884 32.199 143.884 33.642 cv
143.884 35.0859 147.459 36.256 151.87 36.256 cv
156.28 36.256 159.856 35.0859 159.856 33.642 cv
@
159.856 33.642 mo
159.856 32.199 156.28 31.029 151.87 31.029 cv
147.459 31.029 143.884 32.199 143.884 33.642 cv
143.884 35.0859 147.459 36.256 151.87 36.256 cv
156.28 36.256 159.856 35.0859 159.856 33.642 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
145.405 34.1069 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
142.722 25.6559 mo
144.319 27.108 146.207 28.851 147.949 30.3029 cv
@
147.659 30.4479 mo
148.966 31.174 li
148.094 30.012 li
cp
@
147.659 30.4479 mo
148.966 31.174 li
148.094 30.012 li
f
206.9 33.642 mo
206.9 32.199 203.325 31.029 198.914 31.029 cv
194.504 31.029 190.928 32.199 190.928 33.642 cv
190.928 35.0859 194.504 36.256 198.914 36.256 cv
203.325 36.256 206.9 35.0859 206.9 33.642 cv
@
206.9 33.642 mo
206.9 32.199 203.325 31.029 198.914 31.029 cv
194.504 31.029 190.928 32.199 190.928 33.642 cv
190.928 35.0859 194.504 36.256 198.914 36.256 cv
203.325 36.256 206.9 35.0859 206.9 33.642 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
192.45 34.1069 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
149.111 23.769 mo
159.71 24.35 176.989 25.8019 187.153 27.5439 cv
189.041 27.9799 191.8 29.141 193.978 30.593 cv
@
193.832 30.884 mo
195.284 31.319 li
194.123 30.3029 li
cp
@
193.832 30.884 mo
195.284 31.319 li
194.123 30.3029 li
f
137.204 69.652 mo
137.204 68.2089 132.979 67.038 127.766 67.038 cv
122.554 67.038 118.328 68.2089 118.328 69.652 cv
118.328 71.095 122.554 72.266 127.766 72.266 cv
132.979 72.266 137.204 71.095 137.204 69.652 cv
@
137.204 69.652 mo
137.204 68.2089 132.979 67.038 127.766 67.038 cv
122.554 67.038 118.328 68.2089 118.328 69.652 cv
118.328 71.095 122.554 72.266 127.766 72.266 cv
132.979 72.266 137.204 71.095 137.204 69.652 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
119.778 70.1169 mo
(roundrobin\(4,4,4,4\))
[.67691 1.0164 1.0164 1.0164 1.0164 .67691 1.0164 1.0164 .565117 1.0164 .67691 1.01639 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
137.204 80.687 mo
137.204 79.244 132.979 78.074 127.766 78.074 cv
122.554 78.074 118.328 79.244 118.328 80.687 cv
118.328 82.131 122.554 83.301 127.766 83.301 cv
132.979 83.301 137.204 82.131 137.204 80.687 cv
@
137.204 80.687 mo
137.204 79.244 132.979 78.074 127.766 78.074 cv
122.554 78.074 118.328 79.244 118.328 80.687 cv
118.328 82.131 122.554 83.301 127.766 83.301 cv
132.979 83.301 137.204 82.131 137.204 80.687 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
119.778 81.1519 mo
(roundrobin\(4,4,4,4\))
[.67691 1.0164 1.0164 1.0164 1.0164 .67691 1.0164 1.0164 .565117 1.0164 .67691 1.01639 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
127.766 72.266 mo
127.766 73.572 127.766 75.17 127.766 76.622 cv
@
127.476 76.622 mo
127.766 78.074 li
128.202 76.622 li
cp
@
127.476 76.622 mo
127.766 78.074 li
128.202 76.622 li
f
67.944 46.42 mo
67.944 43.693 63.3934 41.483 57.78 41.483 cv
52.1666 41.483 47.616 43.693 47.616 46.42 cv
47.616 49.147 52.1666 51.3569 57.78 51.3569 cv
63.3934 51.3569 67.944 49.147 67.944 46.42 cv
@
67.944 46.42 mo
67.944 43.693 63.3934 41.483 57.78 41.483 cv
52.1666 41.483 47.616 43.693 47.616 46.42 cv
47.616 49.147 52.1666 51.3569 57.78 51.3569 cv
63.3934 51.3569 67.944 49.147 67.944 46.42 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQO+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDFB39C8FA0E3107D39E1E26D40368A6A59D36B799EDDCB
A8AF8BCAEA2E296C5BB00979C4073082C4AC62DAAE27F25BE45DFF121DF075F7
3D37111C10DFF7C6BD4BFE8AE73B4FADB84F0E8B5722DEA1CA14F5AFDC440B45
4F635F5576E82C8F45782F1EDE0EC9CA59D48E4C0F81> |-
/E <1C60D8A8C9B7D8BE1621F7F8DAEB9FA9CBAFC8F4F4D756F2191C830A0E4A
58F87E3DDE67D49AF36DDF5F1FB2D74CAA0A1A0C249C8C349E149A4722F92BF7
61EFA3C2F9EC864F14F3A3AC121B867A3642166A4B07211381D27468A1D61050
1454C0DD1325D701AB4ADD917E16E61514B3C2631A525AEC590FB4C52AA73BF6
506DADDCC92C07368DF00A34F77E6ED1C2061C6913B4C24C30A64720E240E09F
9DD8F5EF76F17E9EEAE569D41B7D8D946B46BFFC> |-
/m <1C60D8A8C9B6FF86DEBE529995F26ADC252ABAF4F8ABCE39F6B951A24C86
82F3B72A552C5D46A333AAEC49746F27474921C947B29E9EEE21EF479E8AC4CB
A64B9B4BF4B54D7069EE8C71930A689A0AC30AA5DB406CB2F2DF67D1DFA36762
A8298043AAD8738E3C2E6D8E87DCF89210EA6A7696675667850CACB8BD85BF1A
9C23A6EB480778B459116760FD79DE8BA673C0A52BBAEAA003DFFA86FA6EC61F
B9955126552099FD6C946BD155266FCC648BAFF24A5063CAAF26> |-
/x <1C60D8A8C9B7A73DD670D8CCCBFBC4E258D7CAA3ED17D069C025C1A2420A
81D4B3EAD7110946DAC3BA40217DDD18B672D1C19269266B39D87F9C1DDA90BD
8FC71EBFE3B2169703196A9FC02F9EA267A90B94DB1FAA5C105A1B22ABB76205
ADA50D456170C13F6F28FC77F3978776E97B76A3DEF1976915B787070DC57673
F3C0FA2B4E9DEFEF7147D4269144499ACAFBAFD930E1A038534DF3D883A96117
05279F3EC76B84BD5055C0FF3A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQO+TimesNewRomanPSMT /Encoding get
dup 67 /C put
dup 69 /E put
dup 109 /m put
dup 120 /x put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQO+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two /.notdef /four /.notdef 
/six 3{/.notdef}rp /colon 2{/.notdef}rp /equal /greater 3{/.notdef}rp /B 
/C /.notdef /E 2{/.notdef}rp /H /I /.notdef /K 
/L /M /.notdef /O /P 2{/.notdef}rp /S 11{/.notdef}rp 
/underscore /.notdef /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /q /r /s /t /u /.notdef 
/w /x /y 134{/.notdef}rp]
LTFDQO+TimesNewRomanPSMT nf
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
50.0463 44.5609 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902531 .676907 .902534 1.24203 1.0164 .902531 1.0164 .902534 
1.0164 1.0164 0 ]xsh
54.1016 46.8841 mo
(work=14)
[1.46765 1.0164 .676907 1.0164 1.14649 1.0164 0 ]xsh
53.9604 49.2073 mo
(I/O: 2->2)
[.676907 .565117 1.46765 .565121 .508198 1.0164 .67691 1.14649 0 ]xsh
76.656 35.966 mo
73.6068 37.7079 69.396 39.8859 65.766 41.9189 cv
@
65.6208 41.6279 mo
64.4592 42.645 li
65.9112 42.2089 li
cp
@
65.6208 41.6279 mo
64.4592 42.645 li
65.9112 42.2089 li
f
90.8856 46.42 mo
90.8856 43.693 86.335 41.483 80.7216 41.483 cv
75.1082 41.483 70.5576 43.693 70.5576 46.42 cv
70.5576 49.147 75.1082 51.3569 80.7216 51.3569 cv
86.335 51.3569 90.8856 49.147 90.8856 46.42 cv
@
90.8856 46.42 mo
90.8856 43.693 86.335 41.483 80.7216 41.483 cv
75.1082 41.483 70.5576 43.693 70.5576 46.42 cv
70.5576 49.147 75.1082 51.3569 80.7216 51.3569 cv
86.335 51.3569 90.8856 49.147 90.8856 46.42 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
72.988 44.5609 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
77.0433 46.8841 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
76.9021 49.2073 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
80.7216 36.256 mo
80.7216 37.272 80.7216 38.724 80.7216 40.0309 cv
@
80.4312 40.0309 mo
80.7216 41.483 li
81.1572 40.0309 li
cp
@
80.4312 40.0309 mo
80.7216 41.483 li
81.1572 40.0309 li
f
88.7076 59.1979 mo
88.7076 57.754 85.1321 56.5839 80.7216 56.5839 cv
76.3111 56.5839 72.7356 57.754 72.7356 59.1979 cv
72.7356 60.641 76.3111 61.811 80.7216 61.811 cv
85.1321 61.811 88.7076 60.641 88.7076 59.1979 cv
@
88.7076 59.1979 mo
88.7076 57.754 85.1321 56.5839 80.7216 56.5839 cv
76.3111 56.5839 72.7356 57.754 72.7356 59.1979 cv
72.7356 60.641 76.3111 61.811 80.7216 61.811 cv
85.1321 61.811 88.7076 60.641 88.7076 59.1979 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
74.2574 59.6619 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .67691 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508202 1.0164 0 ]xsh
86.2392 61.085 mo
88.4172 61.811 90.7404 62.537 92.4828 62.973 cv
99.5976 64.57 110.778 66.748 118.764 68.0549 cv
@
118.328 68.345 mo
119.78 68.2 li
118.328 67.619 li
cp
@
118.328 68.345 mo
119.78 68.2 li
118.328 67.619 li
f
64.4592 50.195 mo
67.944 52.0829 72.3 54.551 75.4944 56.2939 cv
@
75.204 56.5839 mo
76.656 56.874 li
75.4944 55.858 li
cp
@
75.204 56.5839 mo
76.656 56.874 li
75.4944 55.858 li
f
80.7216 51.3569 mo
80.7216 52.664 80.7216 53.97 80.7216 55.277 cv
@
80.4312 55.132 mo
80.7216 56.5839 li
81.1572 55.132 li
cp
@
80.4312 55.132 mo
80.7216 56.5839 li
81.1572 55.132 li
f
114.989 46.42 mo
114.989 43.693 110.438 41.483 104.825 41.483 cv
99.2114 41.483 94.6608 43.693 94.6608 46.42 cv
94.6608 49.147 99.2114 51.3569 104.825 51.3569 cv
110.438 51.3569 114.989 49.147 114.989 46.42 cv
@
114.989 46.42 mo
114.989 43.693 110.438 41.483 104.825 41.483 cv
99.2114 41.483 94.6608 43.693 94.6608 46.42 cv
94.6608 49.147 99.2114 51.3569 104.825 51.3569 cv
110.438 51.3569 114.989 49.147 114.989 46.42 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.0911 44.5609 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
101.146 46.8841 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
101.005 49.2073 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
123.701 35.966 mo
120.652 37.7079 116.441 39.8859 112.811 41.9189 cv
@
112.666 41.6279 mo
111.504 42.645 li
112.956 42.2089 li
cp
@
112.666 41.6279 mo
111.504 42.645 li
112.956 42.2089 li
f
137.93 46.42 mo
137.93 43.693 133.38 41.483 127.766 41.483 cv
122.153 41.483 117.602 43.693 117.602 46.42 cv
117.602 49.147 122.153 51.3569 127.766 51.3569 cv
133.38 51.3569 137.93 49.147 137.93 46.42 cv
@
137.93 46.42 mo
137.93 43.693 133.38 41.483 127.766 41.483 cv
122.153 41.483 117.602 43.693 117.602 46.42 cv
117.602 49.147 122.153 51.3569 127.766 51.3569 cv
133.38 51.3569 137.93 49.147 137.93 46.42 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
120.033 44.5609 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902527 1.0164 .902527 
1.0164 1.0164 0 ]xsh
124.088 46.8841 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.1465 1.01639 0 ]xsh
123.947 49.2073 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .676895 1.1465 0 ]xsh
127.766 36.256 mo
127.766 37.272 127.766 38.724 127.766 40.0309 cv
@
127.476 40.0309 mo
127.766 41.483 li
128.202 40.0309 li
cp
@
127.476 40.0309 mo
127.766 41.483 li
128.202 40.0309 li
f
135.752 59.1979 mo
135.752 57.754 132.177 56.5839 127.766 56.5839 cv
123.356 56.5839 119.78 57.754 119.78 59.1979 cv
119.78 60.641 123.356 61.811 127.766 61.811 cv
132.177 61.811 135.752 60.641 135.752 59.1979 cv
@
135.752 59.1979 mo
135.752 57.754 132.177 56.5839 127.766 56.5839 cv
123.356 56.5839 119.78 57.754 119.78 59.1979 cv
119.78 60.641 123.356 61.811 127.766 61.811 cv
132.177 61.811 135.752 60.641 135.752 59.1979 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
121.302 59.6619 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .67691 1.0164 1.0164 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
127.766 61.811 mo
127.766 62.973 127.766 64.28 127.766 65.5859 cv
@
127.476 65.5859 mo
127.766 67.038 li
128.202 65.5859 li
cp
@
127.476 65.5859 mo
127.766 67.038 li
128.202 65.5859 li
f
111.504 50.195 mo
114.989 52.0829 119.345 54.551 122.539 56.2939 cv
@
122.249 56.5839 mo
123.701 56.874 li
122.539 55.858 li
cp
@
122.249 56.5839 mo
123.701 56.874 li
122.539 55.858 li
f
127.766 51.3569 mo
127.766 52.664 127.766 53.97 127.766 55.277 cv
@
127.476 55.132 mo
127.766 56.5839 li
128.202 55.132 li
cp
@
127.476 55.132 mo
127.766 56.5839 li
128.202 55.132 li
f
162.034 46.42 mo
162.034 43.693 157.483 41.483 151.87 41.483 cv
146.256 41.483 141.706 43.693 141.706 46.42 cv
141.706 49.147 146.256 51.3569 151.87 51.3569 cv
157.483 51.3569 162.034 49.147 162.034 46.42 cv
@
162.034 46.42 mo
162.034 43.693 157.483 41.483 151.87 41.483 cv
146.256 41.483 141.706 43.693 141.706 46.42 cv
141.706 49.147 146.256 51.3569 151.87 51.3569 cv
157.483 51.3569 162.034 49.147 162.034 46.42 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
144.136 44.5609 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
148.191 46.8841 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
148.05 49.2073 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
151.87 36.256 mo
151.87 37.272 151.87 38.724 151.87 40.0309 cv
@
151.579 40.0309 mo
151.87 41.483 li
152.305 40.0309 li
cp
@
151.579 40.0309 mo
151.87 41.483 li
152.305 40.0309 li
f
184.975 46.42 mo
184.975 43.693 180.425 41.483 174.811 41.483 cv
169.198 41.483 164.647 43.693 164.647 46.42 cv
164.647 49.147 169.198 51.3569 174.811 51.3569 cv
180.425 51.3569 184.975 49.147 184.975 46.42 cv
@
184.975 46.42 mo
184.975 43.693 180.425 41.483 174.811 41.483 cv
169.198 41.483 164.647 43.693 164.647 46.42 cv
164.647 49.147 169.198 51.3569 174.811 51.3569 cv
180.425 51.3569 184.975 49.147 184.975 46.42 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
167.078 44.5609 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
171.133 46.8841 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
170.992 49.2073 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
155.935 35.966 mo
158.984 37.7079 163.195 39.8859 166.825 41.9189 cv
@
166.68 42.2089 mo
168.132 42.645 li
166.97 41.6279 li
cp
@
166.68 42.2089 mo
168.132 42.645 li
166.97 41.6279 li
f
159.856 59.1979 mo
159.856 57.754 156.28 56.5839 151.87 56.5839 cv
147.459 56.5839 143.884 57.754 143.884 59.1979 cv
143.884 60.641 147.459 61.811 151.87 61.811 cv
156.28 61.811 159.856 60.641 159.856 59.1979 cv
@
159.856 59.1979 mo
159.856 57.754 156.28 56.5839 151.87 56.5839 cv
147.459 56.5839 143.884 57.754 143.884 59.1979 cv
143.884 60.641 147.459 61.811 151.87 61.811 cv
156.28 61.811 159.856 60.641 159.856 59.1979 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
145.405 59.6619 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
147.078 61.2299 mo
143.158 62.8279 137.785 65.296 133.72 67.038 cv
@
134.01 66.4579 mo
132.848 67.474 li
134.3 67.184 li
cp
@
134.01 66.4579 mo
132.848 67.474 li
134.3 67.184 li
f
151.87 51.3569 mo
151.87 52.664 151.87 53.97 151.87 55.277 cv
@
151.579 55.132 mo
151.87 56.5839 li
152.305 55.132 li
cp
@
151.579 55.132 mo
151.87 56.5839 li
152.305 55.132 li
f
168.132 50.195 mo
164.647 52.0829 160.291 54.551 157.097 56.2939 cv
@
157.097 55.858 mo
155.935 56.874 li
157.387 56.5839 li
cp
@
157.097 55.858 mo
155.935 56.874 li
157.387 56.5839 li
f
209.078 46.42 mo
209.078 43.693 204.528 41.483 198.914 41.483 cv
193.301 41.483 188.75 43.693 188.75 46.42 cv
188.75 49.147 193.301 51.3569 198.914 51.3569 cv
204.528 51.3569 209.078 49.147 209.078 46.42 cv
@
209.078 46.42 mo
209.078 43.693 204.528 41.483 198.914 41.483 cv
193.301 41.483 188.75 43.693 188.75 46.42 cv
188.75 49.147 193.301 51.3569 198.914 51.3569 cv
204.528 51.3569 209.078 49.147 209.078 46.42 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
191.181 44.5609 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
195.236 46.8841 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
195.095 49.2073 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
198.914 36.256 mo
198.914 37.272 198.914 38.724 198.914 40.0309 cv
@
198.624 40.0309 mo
198.914 41.483 li
199.35 40.0309 li
cp
@
198.624 40.0309 mo
198.914 41.483 li
199.35 40.0309 li
f
232.02 46.42 mo
232.02 43.693 227.469 41.483 221.856 41.483 cv
216.243 41.483 211.692 43.693 211.692 46.42 cv
211.692 49.147 216.243 51.3569 221.856 51.3569 cv
227.469 51.3569 232.02 49.147 232.02 46.42 cv
@
232.02 46.42 mo
232.02 43.693 227.469 41.483 221.856 41.483 cv
216.243 41.483 211.692 43.693 211.692 46.42 cv
211.692 49.147 216.243 51.3569 221.856 51.3569 cv
227.469 51.3569 232.02 49.147 232.02 46.42 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
214.122 44.5609 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
218.177 46.8841 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
218.036 49.2073 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
202.98 35.966 mo
206.029 37.7079 210.24 39.8859 213.87 41.9189 cv
@
213.725 42.2089 mo
215.177 42.645 li
214.015 41.6279 li
cp
@
213.725 42.2089 mo
215.177 42.645 li
214.015 41.6279 li
f
206.9 59.1979 mo
206.9 57.754 203.325 56.5839 198.914 56.5839 cv
194.504 56.5839 190.928 57.754 190.928 59.1979 cv
190.928 60.641 194.504 61.811 198.914 61.811 cv
203.325 61.811 206.9 60.641 206.9 59.1979 cv
@
206.9 59.1979 mo
206.9 57.754 203.325 56.5839 198.914 56.5839 cv
194.504 56.5839 190.928 57.754 190.928 59.1979 cv
190.928 60.641 194.504 61.811 198.914 61.811 cv
203.325 61.811 206.9 60.641 206.9 59.1979 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
192.45 59.6619 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
193.687 61.2299 mo
191.509 61.956 189.041 62.6819 187.153 62.973 cv
173.795 65.006 150.998 67.329 137.93 68.6359 cv
@
138.221 68.2 mo
136.769 68.7809 li
138.221 68.926 li
cp
@
138.221 68.2 mo
136.769 68.7809 li
138.221 68.926 li
f
198.914 51.3569 mo
198.914 52.664 198.914 53.97 198.914 55.277 cv
@
198.624 55.132 mo
198.914 56.5839 li
199.35 55.132 li
cp
@
198.624 55.132 mo
198.914 56.5839 li
199.35 55.132 li
f
215.177 50.195 mo
211.692 52.0829 207.336 54.551 204.142 56.2939 cv
@
204.142 55.858 mo
202.98 56.874 li
204.432 56.5839 li
cp
@
204.142 55.858 mo
202.98 56.874 li
204.432 56.5839 li
f
86.3844 91.142 mo
86.3844 89.6979 82.8089 88.528 78.3984 88.528 cv
73.9879 88.528 70.4124 89.6979 70.4124 91.142 cv
70.4124 92.585 73.9879 93.7549 78.3984 93.7549 cv
82.8089 93.7549 86.3844 92.585 86.3844 91.142 cv
@
86.3844 91.142 mo
86.3844 89.6979 82.8089 88.528 78.3984 88.528 cv
73.9879 88.528 70.4124 89.6979 70.4124 91.142 cv
70.4124 92.585 73.9879 93.7549 78.3984 93.7549 cv
82.8089 93.7549 86.3844 92.585 86.3844 91.142 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
71.9342 91.6059 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
118.619 81.413 mo
110.197 82.139 97.8552 83.446 90.1596 85.043 cv
88.1268 85.624 85.368 86.931 83.0448 88.383 cv
@
83.3352 87.8019 mo
82.1736 88.818 li
83.6256 88.528 li
cp
@
83.3352 87.8019 mo
82.1736 88.818 li
83.6256 88.528 li
f
133.429 91.142 mo
133.429 89.6979 129.854 88.528 125.443 88.528 cv
121.033 88.528 117.457 89.6979 117.457 91.142 cv
117.457 92.585 121.033 93.7549 125.443 93.7549 cv
129.854 93.7549 133.429 92.585 133.429 91.142 cv
@
133.429 91.142 mo
133.429 89.6979 129.854 88.528 125.443 88.528 cv
121.033 88.528 117.457 89.6979 117.457 91.142 cv
117.457 92.585 121.033 93.7549 125.443 93.7549 cv
129.854 93.7549 133.429 92.585 133.429 91.142 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
118.979 91.6059 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
127.186 83.301 mo
126.895 84.462 126.605 85.914 126.314 87.2209 cv
@
126.024 87.0759 mo
126.024 88.528 li
126.75 87.2209 li
cp
@
126.024 87.0759 mo
126.024 88.528 li
126.75 87.2209 li
f
157.532 91.142 mo
157.532 89.6979 153.957 88.528 149.546 88.528 cv
145.136 88.528 141.56 89.6979 141.56 91.142 cv
141.56 92.585 145.136 93.7549 149.546 93.7549 cv
153.957 93.7549 157.532 92.585 157.532 91.142 cv
@
157.532 91.142 mo
157.532 89.6979 153.957 88.528 149.546 88.528 cv
145.136 88.528 141.56 89.6979 141.56 91.142 cv
141.56 92.585 145.136 93.7549 149.546 93.7549 cv
153.957 93.7549 157.532 92.585 157.532 91.142 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
143.082 91.6059 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
132.848 82.8649 mo
134.591 83.591 136.478 84.462 137.785 85.043 cv
139.528 85.914 141.851 87.0759 144.029 88.238 cv
@
143.884 88.528 mo
145.336 88.964 li
144.174 87.947 li
cp
@
143.884 88.528 mo
145.336 88.964 li
144.174 87.947 li
f
204.577 91.142 mo
204.577 89.6979 201.002 88.528 196.591 88.528 cv
192.181 88.528 188.605 89.6979 188.605 91.142 cv
188.605 92.585 192.181 93.7549 196.591 93.7549 cv
201.002 93.7549 204.577 92.585 204.577 91.142 cv
@
204.577 91.142 mo
204.577 89.6979 201.002 88.528 196.591 88.528 cv
192.181 88.528 188.605 89.6979 188.605 91.142 cv
188.605 92.585 192.181 93.7549 196.591 93.7549 cv
201.002 93.7549 204.577 92.585 204.577 91.142 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
190.127 91.6059 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
137.059 81.123 mo
149.692 81.849 171.907 83.1559 184.83 85.043 cv
186.863 85.4789 189.622 86.64 191.945 88.092 cv
@
191.654 88.383 mo
193.106 88.818 li
192.09 87.8019 li
cp
@
191.654 88.383 mo
193.106 88.818 li
192.09 87.8019 li
f
146.933 127.151 mo
146.933 125.708 142.707 124.538 137.495 124.538 cv
132.282 124.538 128.057 125.708 128.057 127.151 cv
128.057 128.595 132.282 129.765 137.495 129.765 cv
142.707 129.765 146.933 128.595 146.933 127.151 cv
@
146.933 127.151 mo
146.933 125.708 142.707 124.538 137.495 124.538 cv
132.282 124.538 128.057 125.708 128.057 127.151 cv
128.057 128.595 132.282 129.765 137.495 129.765 cv
142.707 129.765 146.933 128.595 146.933 127.151 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
129.506 127.616 mo
(roundrobin\(4,4,4,4\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
145.481 138.186 mo
145.481 136.743 141.905 135.573 137.495 135.573 cv
133.084 135.573 129.509 136.743 129.509 138.186 cv
129.509 139.63 133.084 140.8 137.495 140.8 cv
141.905 140.8 145.481 139.63 145.481 138.186 cv
@
145.481 138.186 mo
145.481 136.743 141.905 135.573 137.495 135.573 cv
133.084 135.573 129.509 136.743 129.509 138.186 cv
129.509 139.63 133.084 140.8 137.495 140.8 cv
141.905 140.8 145.481 139.63 145.481 138.186 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDQO+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A73D9EB159A3CFECEE26FAC12AD4B6691842B4C84783
E84E1D8CD272AEC54014C937C15B810E403549328E3DC44B6A66E9E0AE5509A1
20FFE6F694340EC43D35C59CD7D1B2F14C1F1D5BA576A10F77E962817750FC0E
DC62627EE0E94BCE030A10C59143A015250A384C09B6A65F8572DF3FCBF68CF8
0D23E4E88D0691BD2178810DDABD5F40D8018F795B8CB5A52DDDD05F80E9A2BC
CDF3A5E14C701FBADF0447A7AE0E47FA8F86216AC25155BFF3569B19382CA905
7B18009FE630A2D7CEFDC3A4A3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDQO+TimesNewRomanPSMT /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDQO+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two /.notdef /four /.notdef 
/six /.notdef /eight /.notdef /colon 2{/.notdef}rp /equal /greater 
3{/.notdef}rp /B /C /.notdef /E 2{/.notdef}rp /H /I 
/.notdef /K /L /M /.notdef /O /P 2{/.notdef}rp 
/S 11{/.notdef}rp /underscore /.notdef /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /q /r /s /t 
/u /.notdef /w /x /y 134{/.notdef}rp]
LTFDQO+TimesNewRomanPSMT nf
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
131.031 138.651 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
137.495 129.765 mo
137.495 131.072 137.495 132.669 137.495 134.121 cv
@
137.204 134.121 mo
137.495 135.573 li
137.93 134.121 li
cp
@
137.204 134.121 mo
137.495 135.573 li
137.93 134.121 li
f
65.6208 103.919 mo
65.6208 101.193 61.0702 98.9819 55.4568 98.9819 cv
49.8434 98.9819 45.2928 101.193 45.2928 103.919 cv
45.2928 106.646 49.8434 108.856 55.4568 108.856 cv
61.0702 108.856 65.6208 106.646 65.6208 103.919 cv
@
65.6208 103.919 mo
65.6208 101.193 61.0702 98.9819 55.4568 98.9819 cv
49.8434 98.9819 45.2928 101.193 45.2928 103.919 cv
45.2928 106.646 49.8434 108.856 55.4568 108.856 cv
61.0702 108.856 65.6208 106.646 65.6208 103.919 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
47.7231 102.061 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902531 .67691 .902531 1.24202 1.0164 .902531 1.0164 .902534 
1.0164 1.0164 0 ]xsh
51.7784 104.384 mo
(work=14)
[1.46765 1.0164 .676907 1.0164 1.14649 1.0164 0 ]xsh
51.6372 106.707 mo
(I/O: 2->2)
[.676907 .565121 1.46765 .565121 .508198 1.0164 .67691 1.14649 0 ]xsh
74.3328 93.465 mo
71.2836 95.207 67.0728 97.3849 63.4428 99.418 cv
@
63.2976 99.1279 mo
62.136 100.144 li
63.588 99.7079 li
cp
@
63.2976 99.1279 mo
62.136 100.144 li
63.588 99.7079 li
f
88.5624 103.919 mo
88.5624 101.193 84.0118 98.9819 78.3984 98.9819 cv
72.785 98.9819 68.2344 101.193 68.2344 103.919 cv
68.2344 106.646 72.785 108.856 78.3984 108.856 cv
84.0118 108.856 88.5624 106.646 88.5624 103.919 cv
@
88.5624 103.919 mo
88.5624 101.193 84.0118 98.9819 78.3984 98.9819 cv
72.785 98.9819 68.2344 101.193 68.2344 103.919 cv
68.2344 106.646 72.785 108.856 78.3984 108.856 cv
84.0118 108.856 88.5624 106.646 88.5624 103.919 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
70.6647 102.061 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
74.72 104.384 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
74.5788 106.707 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
78.3984 93.7549 mo
78.3984 94.772 78.3984 96.224 78.3984 97.53 cv
@
78.108 97.53 mo
78.3984 98.9819 li
78.834 97.53 li
cp
@
78.108 97.53 mo
78.3984 98.9819 li
78.834 97.53 li
f
86.3844 116.697 mo
86.3844 115.253 82.8089 114.083 78.3984 114.083 cv
73.9879 114.083 70.4124 115.253 70.4124 116.697 cv
70.4124 118.14 73.9879 119.31 78.3984 119.31 cv
82.8089 119.31 86.3844 118.14 86.3844 116.697 cv
@
86.3844 116.697 mo
86.3844 115.253 82.8089 114.083 78.3984 114.083 cv
73.9879 114.083 70.4124 115.253 70.4124 116.697 cv
70.4124 118.14 73.9879 119.31 78.3984 119.31 cv
82.8089 119.31 86.3844 118.14 86.3844 116.697 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
71.9342 117.161 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
83.6256 118.73 mo
85.9488 119.456 88.4172 120.182 90.1596 120.472 cv
100.324 122.214 116.731 124.538 127.331 125.99 cv
@
127.331 126.28 mo
128.783 126.135 li
127.331 125.699 li
cp
@
127.331 126.28 mo
128.783 126.135 li
127.331 125.699 li
f
62.136 107.694 mo
65.6208 109.582 69.9768 112.05 73.1712 113.793 cv
@
72.8808 114.083 mo
74.3328 114.374 li
73.1712 113.357 li
cp
@
72.8808 114.083 mo
74.3328 114.374 li
73.1712 113.357 li
f
78.3984 108.856 mo
78.3984 110.163 78.3984 111.47 78.3984 112.776 cv
@
78.108 112.631 mo
78.3984 114.083 li
78.834 112.631 li
cp
@
78.108 112.631 mo
78.3984 114.083 li
78.834 112.631 li
f
112.666 103.919 mo
112.666 101.193 108.115 98.9819 102.502 98.9819 cv
96.8882 98.9819 92.3376 101.193 92.3376 103.919 cv
92.3376 106.646 96.8882 108.856 102.502 108.856 cv
108.115 108.856 112.666 106.646 112.666 103.919 cv
@
112.666 103.919 mo
112.666 101.193 108.115 98.9819 102.502 98.9819 cv
96.8882 98.9819 92.3376 101.193 92.3376 103.919 cv
92.3376 106.646 96.8882 108.856 102.502 108.856 cv
108.115 108.856 112.666 106.646 112.666 103.919 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
94.768 102.061 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
98.8233 104.384 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
98.6821 106.707 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
121.378 93.465 mo
118.328 95.207 114.118 97.3849 110.488 99.418 cv
@
110.342 99.1279 mo
109.181 100.144 li
110.633 99.7079 li
cp
@
110.342 99.1279 mo
109.181 100.144 li
110.633 99.7079 li
f
135.607 103.919 mo
135.607 101.193 131.057 98.9819 125.443 98.9819 cv
119.83 98.9819 115.279 101.193 115.279 103.919 cv
115.279 106.646 119.83 108.856 125.443 108.856 cv
131.057 108.856 135.607 106.646 135.607 103.919 cv
@
135.607 103.919 mo
135.607 101.193 131.057 98.9819 125.443 98.9819 cv
119.83 98.9819 115.279 101.193 115.279 103.919 cv
115.279 106.646 119.83 108.856 125.443 108.856 cv
131.057 108.856 135.607 106.646 135.607 103.919 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
117.71 102.061 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902527 1.0164 .902527 
1.0164 1.0164 0 ]xsh
121.765 104.384 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
121.624 106.707 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
125.443 93.7549 mo
125.443 94.772 125.443 96.224 125.443 97.53 cv
@
125.153 97.53 mo
125.443 98.9819 li
125.879 97.53 li
cp
@
125.153 97.53 mo
125.443 98.9819 li
125.879 97.53 li
f
133.429 116.697 mo
133.429 115.253 129.854 114.083 125.443 114.083 cv
121.033 114.083 117.457 115.253 117.457 116.697 cv
117.457 118.14 121.033 119.31 125.443 119.31 cv
129.854 119.31 133.429 118.14 133.429 116.697 cv
@
133.429 116.697 mo
133.429 115.253 129.854 114.083 125.443 114.083 cv
121.033 114.083 117.457 115.253 117.457 116.697 cv
117.457 118.14 121.033 119.31 125.443 119.31 cv
129.854 119.31 133.429 118.14 133.429 116.697 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
118.979 117.161 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
128.347 119.165 mo
129.944 120.472 131.832 122.214 133.574 123.666 cv
@
133.284 123.957 mo
134.591 124.683 li
133.865 123.376 li
cp
@
133.284 123.957 mo
134.591 124.683 li
133.865 123.376 li
f
109.181 107.694 mo
112.666 109.582 117.022 112.05 120.216 113.793 cv
@
119.926 114.083 mo
121.378 114.374 li
120.216 113.357 li
cp
@
119.926 114.083 mo
121.378 114.374 li
120.216 113.357 li
f
125.443 108.856 mo
125.443 110.163 125.443 111.47 125.443 112.776 cv
@
125.153 112.631 mo
125.443 114.083 li
125.879 112.631 li
cp
@
125.153 112.631 mo
125.443 114.083 li
125.879 112.631 li
f
159.71 103.919 mo
159.71 101.193 155.16 98.9819 149.546 98.9819 cv
143.933 98.9819 139.382 101.193 139.382 103.919 cv
139.382 106.646 143.933 108.856 149.546 108.856 cv
155.16 108.856 159.71 106.646 159.71 103.919 cv
@
159.71 103.919 mo
159.71 101.193 155.16 98.9819 149.546 98.9819 cv
143.933 98.9819 139.382 101.193 139.382 103.919 cv
139.382 106.646 143.933 108.856 149.546 108.856 cv
155.16 108.856 159.71 106.646 159.71 103.919 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
141.813 102.061 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
145.868 104.384 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
145.727 106.707 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
149.546 93.7549 mo
149.546 94.772 149.546 96.224 149.546 97.53 cv
@
149.256 97.53 mo
149.546 98.9819 li
149.982 97.53 li
cp
@
149.256 97.53 mo
149.546 98.9819 li
149.982 97.53 li
f
182.652 103.919 mo
182.652 101.193 178.101 98.9819 172.488 98.9819 cv
166.875 98.9819 162.324 101.193 162.324 103.919 cv
162.324 106.646 166.875 108.856 172.488 108.856 cv
178.101 108.856 182.652 106.646 182.652 103.919 cv
@
182.652 103.919 mo
182.652 101.193 178.101 98.9819 172.488 98.9819 cv
166.875 98.9819 162.324 101.193 162.324 103.919 cv
162.324 106.646 166.875 108.856 172.488 108.856 cv
178.101 108.856 182.652 106.646 182.652 103.919 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
164.754 102.061 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
168.809 104.384 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
168.668 106.707 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
153.612 93.465 mo
156.661 95.207 160.872 97.3849 164.502 99.418 cv
@
164.357 99.7079 mo
165.809 100.144 li
164.647 99.1279 li
cp
@
164.357 99.7079 mo
165.809 100.144 li
164.647 99.1279 li
f
157.532 116.697 mo
157.532 115.253 153.957 114.083 149.546 114.083 cv
145.136 114.083 141.56 115.253 141.56 116.697 cv
141.56 118.14 145.136 119.31 149.546 119.31 cv
153.957 119.31 157.532 118.14 157.532 116.697 cv
@
157.532 116.697 mo
157.532 115.253 153.957 114.083 149.546 114.083 cv
145.136 114.083 141.56 115.253 141.56 116.697 cv
141.56 118.14 145.136 119.31 149.546 119.31 cv
153.957 119.31 157.532 118.14 157.532 116.697 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
143.082 117.161 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
146.642 119.165 mo
145.045 120.472 143.158 122.214 141.415 123.666 cv
@
141.125 123.376 mo
140.399 124.683 li
141.706 123.957 li
cp
@
141.125 123.376 mo
140.399 124.683 li
141.706 123.957 li
f
149.546 108.856 mo
149.546 110.163 149.546 111.47 149.546 112.776 cv
@
149.256 112.631 mo
149.546 114.083 li
149.982 112.631 li
cp
@
149.256 112.631 mo
149.546 114.083 li
149.982 112.631 li
f
165.809 107.694 mo
162.324 109.582 157.968 112.05 154.774 113.793 cv
@
154.774 113.357 mo
153.612 114.374 li
155.064 114.083 li
cp
@
154.774 113.357 mo
153.612 114.374 li
155.064 114.083 li
f
206.755 103.919 mo
206.755 101.193 202.205 98.9819 196.591 98.9819 cv
190.978 98.9819 186.427 101.193 186.427 103.919 cv
186.427 106.646 190.978 108.856 196.591 108.856 cv
202.205 108.856 206.755 106.646 206.755 103.919 cv
@
206.755 103.919 mo
206.755 101.193 202.205 98.9819 196.591 98.9819 cv
190.978 98.9819 186.427 101.193 186.427 103.919 cv
186.427 106.646 190.978 108.856 196.591 108.856 cv
202.205 108.856 206.755 106.646 206.755 103.919 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
188.858 102.061 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
192.913 104.384 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
192.772 106.707 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
196.591 93.7549 mo
196.591 94.772 196.591 96.224 196.591 97.53 cv
@
196.301 97.53 mo
196.591 98.9819 li
197.027 97.53 li
cp
@
196.301 97.53 mo
196.591 98.9819 li
197.027 97.53 li
f
229.697 103.919 mo
229.697 101.193 225.146 98.9819 219.533 98.9819 cv
213.919 98.9819 209.369 101.193 209.369 103.919 cv
209.369 106.646 213.919 108.856 219.533 108.856 cv
225.146 108.856 229.697 106.646 229.697 103.919 cv
@
229.697 103.919 mo
229.697 101.193 225.146 98.9819 219.533 98.9819 cv
213.919 98.9819 209.369 101.193 209.369 103.919 cv
209.369 106.646 213.919 108.856 219.533 108.856 cv
225.146 108.856 229.697 106.646 229.697 103.919 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
211.799 102.061 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
215.854 104.384 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
215.713 106.707 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
200.657 93.465 mo
203.706 95.207 207.917 97.3849 211.547 99.418 cv
@
211.402 99.7079 mo
212.854 100.144 li
211.692 99.1279 li
cp
@
211.402 99.7079 mo
212.854 100.144 li
211.692 99.1279 li
f
204.577 116.697 mo
204.577 115.253 201.002 114.083 196.591 114.083 cv
192.181 114.083 188.605 115.253 188.605 116.697 cv
188.605 118.14 192.181 119.31 196.591 119.31 cv
201.002 119.31 204.577 118.14 204.577 116.697 cv
@
204.577 116.697 mo
204.577 115.253 201.002 114.083 196.591 114.083 cv
192.181 114.083 188.605 115.253 188.605 116.697 cv
188.605 118.14 192.181 119.31 196.591 119.31 cv
201.002 119.31 204.577 118.14 204.577 116.697 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
190.127 117.161 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
191.364 118.73 mo
189.186 119.456 186.572 120.182 184.83 120.472 cv
174.666 122.36 157.678 124.538 147.078 125.99 cv
@
147.514 125.554 mo
146.062 126.135 li
147.514 126.28 li
cp
@
147.514 125.554 mo
146.062 126.135 li
147.514 126.28 li
f
196.591 108.856 mo
196.591 110.163 196.591 111.47 196.591 112.776 cv
@
196.301 112.631 mo
196.591 114.083 li
197.027 112.631 li
cp
@
196.301 112.631 mo
196.591 114.083 li
197.027 112.631 li
f
212.854 107.694 mo
209.369 109.582 205.013 112.05 201.818 113.793 cv
@
201.818 113.357 mo
200.657 114.374 li
202.109 114.083 li
cp
@
201.818 113.357 mo
200.657 114.374 li
202.109 114.083 li
f
121.378 148.641 mo
121.378 147.197 117.802 146.027 113.392 146.027 cv
108.981 146.027 105.406 147.197 105.406 148.641 cv
105.406 150.084 108.981 151.254 113.392 151.254 cv
117.802 151.254 121.378 150.084 121.378 148.641 cv
@
121.378 148.641 mo
121.378 147.197 117.802 146.027 113.392 146.027 cv
108.981 146.027 105.406 147.197 105.406 148.641 cv
105.406 150.084 108.981 151.254 113.392 151.254 cv
117.802 151.254 121.378 150.084 121.378 148.641 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
106.927 149.105 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.0164 1.0164 1.0164 .67691 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508202 1.0164 0 ]xsh
132.703 140.219 mo
128.783 141.962 123.265 144.43 119.054 146.172 cv
@
119.49 145.592 mo
118.183 146.463 li
119.635 146.318 li
cp
@
119.49 145.592 mo
118.183 146.463 li
119.635 146.318 li
f
171.326 148.641 mo
171.326 147.197 167.751 146.027 163.34 146.027 cv
158.93 146.027 155.354 147.197 155.354 148.641 cv
155.354 150.084 158.93 151.254 163.34 151.254 cv
167.751 151.254 171.326 150.084 171.326 148.641 cv
@
171.326 148.641 mo
171.326 147.197 167.751 146.027 163.34 146.027 cv
158.93 146.027 155.354 147.197 155.354 148.641 cv
155.354 150.084 158.93 151.254 163.34 151.254 cv
167.751 151.254 171.326 150.084 171.326 148.641 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 149.105 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
142.577 140.219 mo
146.642 141.962 152.45 144.14 156.806 146.027 cv
@
156.806 146.463 mo
158.258 146.608 li
157.097 145.737 li
cp
@
156.806 146.463 mo
158.258 146.608 li
157.097 145.737 li
f
146.642 205.559 mo
146.642 204.116 143.067 202.946 138.656 202.946 cv
134.246 202.946 130.67 204.116 130.67 205.559 cv
130.67 207.003 134.246 208.173 138.656 208.173 cv
143.067 208.173 146.642 207.003 146.642 205.559 cv
@
146.642 205.559 mo
146.642 204.116 143.067 202.946 138.656 202.946 cv
134.246 202.946 130.67 204.116 130.67 205.559 cv
130.67 207.003 134.246 208.173 138.656 208.173 cv
143.067 208.173 146.642 207.003 146.642 205.559 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
132.192 206.024 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
146.642 216.594 mo
146.642 215.151 143.067 213.981 138.656 213.981 cv
134.246 213.981 130.67 215.151 130.67 216.594 cv
130.67 218.038 134.246 219.208 138.656 219.208 cv
143.067 219.208 146.642 218.038 146.642 216.594 cv
@
146.642 216.594 mo
146.642 215.151 143.067 213.981 138.656 213.981 cv
134.246 213.981 130.67 215.151 130.67 216.594 cv
130.67 218.038 134.246 219.208 138.656 219.208 cv
143.067 219.208 146.642 218.038 146.642 216.594 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
132.192 217.059 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
138.656 208.173 mo
138.656 209.48 138.656 211.077 138.656 212.529 cv
@
138.366 212.529 mo
138.656 213.981 li
139.092 212.529 li
cp
@
138.366 212.529 mo
138.656 213.981 li
139.092 212.529 li
f
86.3844 159.095 mo
86.3844 157.652 82.8089 156.482 78.3984 156.482 cv
73.9879 156.482 70.4124 157.652 70.4124 159.095 cv
70.4124 160.539 73.9879 161.709 78.3984 161.709 cv
82.8089 161.709 86.3844 160.539 86.3844 159.095 cv
@
86.3844 159.095 mo
86.3844 157.652 82.8089 156.482 78.3984 156.482 cv
73.9879 156.482 70.4124 157.652 70.4124 159.095 cv
70.4124 160.539 73.9879 161.709 78.3984 161.709 cv
82.8089 161.709 86.3844 160.539 86.3844 159.095 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
71.9342 159.56 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
106.132 149.802 mo
101.05 150.528 94.3704 151.835 90.1596 152.997 cv
88.272 153.578 85.5132 155.03 83.19 156.336 cv
@
83.4804 155.756 mo
82.3188 156.772 li
83.7708 156.482 li
cp
@
83.4804 155.756 mo
82.3188 156.772 li
83.7708 156.482 li
f
121.378 159.095 mo
121.378 157.652 117.802 156.482 113.392 156.482 cv
108.981 156.482 105.406 157.652 105.406 159.095 cv
105.406 160.539 108.981 161.709 113.392 161.709 cv
117.802 161.709 121.378 160.539 121.378 159.095 cv
@
121.378 159.095 mo
121.378 157.652 117.802 156.482 113.392 156.482 cv
108.981 156.482 105.406 157.652 105.406 159.095 cv
105.406 160.539 108.981 161.709 113.392 161.709 cv
117.802 161.709 121.378 160.539 121.378 159.095 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
106.927 159.56 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .67691 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508202 1.0164 0 ]xsh
113.392 151.254 mo
113.392 152.416 113.392 153.723 113.392 155.03 cv
@
113.101 155.03 mo
113.392 156.482 li
113.827 155.03 li
cp
@
113.101 155.03 mo
113.392 156.482 li
113.827 155.03 li
f
121.958 195.105 mo
121.958 193.661 118.383 192.491 113.972 192.491 cv
109.562 192.491 105.986 193.661 105.986 195.105 cv
105.986 196.548 109.562 197.718 113.972 197.718 cv
118.383 197.718 121.958 196.548 121.958 195.105 cv
@
121.958 195.105 mo
121.958 193.661 118.383 192.491 113.972 192.491 cv
109.562 192.491 105.986 193.661 105.986 195.105 cv
105.986 196.548 109.562 197.718 113.972 197.718 cv
118.383 197.718 121.958 196.548 121.958 195.105 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
107.508 195.569 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
118.909 197.138 mo
122.83 198.88 128.347 201.058 132.413 202.946 cv
@
132.268 203.236 mo
133.72 203.526 li
132.558 202.655 li
cp
@
132.268 203.236 mo
133.72 203.526 li
132.558 202.655 li
f
65.6208 171.873 mo
65.6208 169.146 61.0702 166.936 55.4568 166.936 cv
49.8434 166.936 45.2928 169.146 45.2928 171.873 cv
45.2928 174.599 49.8434 176.81 55.4568 176.81 cv
61.0702 176.81 65.6208 174.599 65.6208 171.873 cv
@
65.6208 171.873 mo
65.6208 169.146 61.0702 166.936 55.4568 166.936 cv
49.8434 166.936 45.2928 169.146 45.2928 171.873 cv
45.2928 174.599 49.8434 176.81 55.4568 176.81 cv
61.0702 176.81 65.6208 174.599 65.6208 171.873 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
47.7231 170.014 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902531 .67691 .902531 1.24202 1.0164 .902531 1.0164 .902534 
1.0164 1.0164 0 ]xsh
51.7784 172.337 mo
(work=14)
[1.46765 1.0164 .676907 1.0164 1.14649 1.0164 0 ]xsh
51.6372 174.66 mo
(I/O: 2->2)
[.676907 .565121 1.46765 .565121 .508198 1.0164 .67691 1.14649 0 ]xsh
74.3328 161.418 mo
71.2836 163.161 67.0728 165.339 63.4428 167.372 cv
@
63.2976 167.081 mo
62.136 168.098 li
63.588 167.662 li
cp
@
63.2976 167.081 mo
62.136 168.098 li
63.588 167.662 li
f
88.5624 171.873 mo
88.5624 169.146 84.0118 166.936 78.3984 166.936 cv
72.785 166.936 68.2344 169.146 68.2344 171.873 cv
68.2344 174.599 72.785 176.81 78.3984 176.81 cv
84.0118 176.81 88.5624 174.599 88.5624 171.873 cv
@
88.5624 171.873 mo
88.5624 169.146 84.0118 166.936 78.3984 166.936 cv
72.785 166.936 68.2344 169.146 68.2344 171.873 cv
68.2344 174.599 72.785 176.81 78.3984 176.81 cv
84.0118 176.81 88.5624 174.599 88.5624 171.873 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
70.6647 170.014 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
74.72 172.337 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
74.5788 174.66 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
78.3984 161.709 mo
78.3984 162.725 78.3984 164.177 78.3984 165.484 cv
@
78.108 165.484 mo
78.3984 166.936 li
78.834 165.484 li
cp
@
78.108 165.484 mo
78.3984 166.936 li
78.834 165.484 li
f
86.3844 184.65 mo
86.3844 183.207 82.8089 182.037 78.3984 182.037 cv
73.9879 182.037 70.4124 183.207 70.4124 184.65 cv
70.4124 186.094 73.9879 187.264 78.3984 187.264 cv
82.8089 187.264 86.3844 186.094 86.3844 184.65 cv
@
86.3844 184.65 mo
86.3844 183.207 82.8089 182.037 78.3984 182.037 cv
73.9879 182.037 70.4124 183.207 70.4124 184.65 cv
70.4124 186.094 73.9879 187.264 78.3984 187.264 cv
82.8089 187.264 86.3844 186.094 86.3844 184.65 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
71.9342 185.115 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
83.916 186.538 mo
86.094 187.264 88.5624 187.99 90.1596 188.426 cv
94.6608 189.732 101.485 191.765 106.712 193.072 cv
@
106.277 193.362 mo
107.729 193.362 li
106.422 192.636 li
cp
@
106.277 193.362 mo
107.729 193.362 li
106.422 192.636 li
f
62.136 175.648 mo
65.6208 177.536 69.9768 180.004 73.1712 181.746 cv
@
72.8808 182.037 mo
74.3328 182.327 li
73.1712 181.311 li
cp
@
72.8808 182.037 mo
74.3328 182.327 li
73.1712 181.311 li
f
78.3984 176.81 mo
78.3984 178.116 78.3984 179.423 78.3984 180.73 cv
@
78.108 180.585 mo
78.3984 182.037 li
78.834 180.585 li
cp
@
78.108 180.585 mo
78.3984 182.037 li
78.834 180.585 li
f
112.666 171.873 mo
112.666 169.146 108.115 166.936 102.502 166.936 cv
96.8882 166.936 92.3376 169.146 92.3376 171.873 cv
92.3376 174.599 96.8882 176.81 102.502 176.81 cv
108.115 176.81 112.666 174.599 112.666 171.873 cv
@
112.666 171.873 mo
112.666 169.146 108.115 166.936 102.502 166.936 cv
96.8882 166.936 92.3376 169.146 92.3376 171.873 cv
92.3376 174.599 96.8882 176.81 102.502 176.81 cv
108.115 176.81 112.666 174.599 112.666 171.873 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
94.768 170.014 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
98.8233 172.337 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
98.6821 174.66 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
111.214 161.564 mo
110.052 162.87 108.745 164.468 107.438 166.065 cv
@
107.148 165.92 mo
106.422 167.226 li
107.584 166.355 li
cp
@
107.148 165.92 mo
106.422 167.226 li
107.584 166.355 li
f
135.607 171.873 mo
135.607 169.146 131.057 166.936 125.443 166.936 cv
119.83 166.936 115.279 169.146 115.279 171.873 cv
115.279 174.599 119.83 176.81 125.443 176.81 cv
131.057 176.81 135.607 174.599 135.607 171.873 cv
@
135.607 171.873 mo
135.607 169.146 131.057 166.936 125.443 166.936 cv
119.83 166.936 115.279 169.146 115.279 171.873 cv
115.279 174.599 119.83 176.81 125.443 176.81 cv
131.057 176.81 135.607 174.599 135.607 171.873 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
117.71 170.014 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902527 1.0164 .902527 
1.0164 1.0164 0 ]xsh
121.765 172.337 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
121.624 174.66 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
115.715 161.564 mo
117.022 162.87 118.619 164.613 120.216 166.355 cv
@
119.926 166.646 mo
121.232 167.372 li
120.506 166.065 li
cp
@
119.926 166.646 mo
121.232 167.372 li
120.506 166.065 li
f
121.958 184.65 mo
121.958 183.207 118.383 182.037 113.972 182.037 cv
109.562 182.037 105.986 183.207 105.986 184.65 cv
105.986 186.094 109.562 187.264 113.972 187.264 cv
118.383 187.264 121.958 186.094 121.958 184.65 cv
@
121.958 184.65 mo
121.958 183.207 118.383 182.037 113.972 182.037 cv
109.562 182.037 105.986 183.207 105.986 184.65 cv
105.986 186.094 109.562 187.264 113.972 187.264 cv
118.383 187.264 121.958 186.094 121.958 184.65 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
107.508 185.115 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
113.972 187.264 mo
113.972 188.426 113.972 189.732 113.972 191.039 cv
@
113.682 191.039 mo
113.972 192.491 li
114.408 191.039 li
cp
@
113.682 191.039 mo
113.972 192.491 li
114.408 191.039 li
f
106.567 176.374 mo
108.019 177.971 109.471 179.714 110.778 181.166 cv
@
110.488 181.311 mo
111.649 182.182 li
110.923 180.875 li
cp
@
110.488 181.311 mo
111.649 182.182 li
110.923 180.875 li
f
121.378 176.374 mo
119.926 177.971 118.474 179.714 117.167 181.166 cv
@
117.022 180.875 mo
116.296 182.182 li
117.457 181.311 li
cp
@
117.022 180.875 mo
116.296 182.182 li
117.457 181.311 li
f
171.326 159.095 mo
171.326 157.652 167.751 156.482 163.34 156.482 cv
158.93 156.482 155.354 157.652 155.354 159.095 cv
155.354 160.539 158.93 161.709 163.34 161.709 cv
167.751 161.709 171.326 160.539 171.326 159.095 cv
@
171.326 159.095 mo
171.326 157.652 167.751 156.482 163.34 156.482 cv
158.93 156.482 155.354 157.652 155.354 159.095 cv
155.354 160.539 158.93 161.709 163.34 161.709 cv
167.751 161.709 171.326 160.539 171.326 159.095 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 159.56 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
163.34 151.254 mo
163.34 152.416 163.34 153.723 163.34 155.03 cv
@
163.05 155.03 mo
163.34 156.482 li
163.776 155.03 li
cp
@
163.05 155.03 mo
163.34 156.482 li
163.776 155.03 li
f
206.9 159.095 mo
206.9 157.652 203.325 156.482 198.914 156.482 cv
194.504 156.482 190.928 157.652 190.928 159.095 cv
190.928 160.539 194.504 161.709 198.914 161.709 cv
203.325 161.709 206.9 160.539 206.9 159.095 cv
@
206.9 159.095 mo
206.9 157.652 203.325 156.482 198.914 156.482 cv
194.504 156.482 190.928 157.652 190.928 159.095 cv
190.928 160.539 194.504 161.709 198.914 161.709 cv
203.325 161.709 206.9 160.539 206.9 159.095 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
192.45 159.56 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
170.6 149.657 mo
175.973 150.528 182.797 151.835 187.153 152.997 cv
189.041 153.578 191.654 154.884 193.832 156.046 cv
@
193.687 156.336 mo
195.139 156.772 li
193.978 155.756 li
cp
@
193.687 156.336 mo
195.139 156.772 li
193.978 155.756 li
f
171.326 195.105 mo
171.326 193.661 167.751 192.491 163.34 192.491 cv
158.93 192.491 155.354 193.661 155.354 195.105 cv
155.354 196.548 158.93 197.718 163.34 197.718 cv
167.751 197.718 171.326 196.548 171.326 195.105 cv
@
171.326 195.105 mo
171.326 193.661 167.751 192.491 163.34 192.491 cv
158.93 192.491 155.354 193.661 155.354 195.105 cv
155.354 196.548 158.93 197.718 163.34 197.718 cv
167.751 197.718 171.326 196.548 171.326 195.105 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 195.569 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
158.404 197.138 mo
154.338 198.88 148.675 201.348 144.464 203.091 cv
@
144.755 202.51 mo
143.593 203.526 li
145.045 203.236 li
cp
@
144.755 202.51 mo
143.593 203.526 li
145.045 203.236 li
f
162.034 171.873 mo
162.034 169.146 157.483 166.936 151.87 166.936 cv
146.256 166.936 141.706 169.146 141.706 171.873 cv
141.706 174.599 146.256 176.81 151.87 176.81 cv
157.483 176.81 162.034 174.599 162.034 171.873 cv
@
162.034 171.873 mo
162.034 169.146 157.483 166.936 151.87 166.936 cv
146.256 166.936 141.706 169.146 141.706 171.873 cv
141.706 174.599 146.256 176.81 151.87 176.81 cv
157.483 176.81 162.034 174.599 162.034 171.873 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
144.136 170.014 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
148.191 172.337 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
148.05 174.66 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
161.017 161.564 mo
159.856 162.87 158.404 164.468 156.952 166.21 cv
@
156.661 166.065 mo
155.935 167.372 li
157.097 166.5 li
cp
@
156.661 166.065 mo
155.935 167.372 li
157.097 166.5 li
f
184.975 171.873 mo
184.975 169.146 180.425 166.936 174.811 166.936 cv
169.198 166.936 164.647 169.146 164.647 171.873 cv
164.647 174.599 169.198 176.81 174.811 176.81 cv
180.425 176.81 184.975 174.599 184.975 171.873 cv
@
184.975 171.873 mo
184.975 169.146 180.425 166.936 174.811 166.936 cv
169.198 166.936 164.647 169.146 164.647 171.873 cv
164.647 174.599 169.198 176.81 174.811 176.81 cv
180.425 176.81 184.975 174.599 184.975 171.873 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
167.078 170.014 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
171.133 172.337 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
170.992 174.66 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
165.664 161.564 mo
166.825 162.87 168.277 164.468 169.729 166.21 cv
@
169.584 166.5 mo
170.746 167.372 li
170.02 166.065 li
cp
@
169.584 166.5 mo
170.746 167.372 li
170.02 166.065 li
f
171.326 184.65 mo
171.326 183.207 167.751 182.037 163.34 182.037 cv
158.93 182.037 155.354 183.207 155.354 184.65 cv
155.354 186.094 158.93 187.264 163.34 187.264 cv
167.751 187.264 171.326 186.094 171.326 184.65 cv
@
171.326 184.65 mo
171.326 183.207 167.751 182.037 163.34 182.037 cv
158.93 182.037 155.354 183.207 155.354 184.65 cv
155.354 186.094 158.93 187.264 163.34 187.264 cv
167.751 187.264 171.326 186.094 171.326 184.65 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 185.115 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
163.34 187.264 mo
163.34 188.426 163.34 189.732 163.34 191.039 cv
@
163.05 191.039 mo
163.34 192.491 li
163.776 191.039 li
cp
@
163.05 191.039 mo
163.34 192.491 li
163.776 191.039 li
f
155.935 176.374 mo
157.387 177.971 158.839 179.714 160.146 181.166 cv
@
159.856 181.311 mo
161.017 182.182 li
160.291 180.875 li
cp
@
159.856 181.311 mo
161.017 182.182 li
160.291 180.875 li
f
170.746 176.374 mo
169.294 177.971 167.842 179.714 166.535 181.166 cv
@
166.39 180.875 mo
165.664 182.182 li
166.825 181.311 li
cp
@
166.39 180.875 mo
165.664 182.182 li
166.825 181.311 li
f
209.078 171.873 mo
209.078 169.146 204.528 166.936 198.914 166.936 cv
193.301 166.936 188.75 169.146 188.75 171.873 cv
188.75 174.599 193.301 176.81 198.914 176.81 cv
204.528 176.81 209.078 174.599 209.078 171.873 cv
@
209.078 171.873 mo
209.078 169.146 204.528 166.936 198.914 166.936 cv
193.301 166.936 188.75 169.146 188.75 171.873 cv
188.75 174.599 193.301 176.81 198.914 176.81 cv
204.528 176.81 209.078 174.599 209.078 171.873 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
191.181 170.014 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
195.236 172.337 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
195.095 174.66 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
198.914 161.709 mo
198.914 162.725 198.914 164.177 198.914 165.484 cv
@
198.624 165.484 mo
198.914 166.936 li
199.35 165.484 li
cp
@
198.624 165.484 mo
198.914 166.936 li
199.35 165.484 li
f
232.02 171.873 mo
232.02 169.146 227.469 166.936 221.856 166.936 cv
216.243 166.936 211.692 169.146 211.692 171.873 cv
211.692 174.599 216.243 176.81 221.856 176.81 cv
227.469 176.81 232.02 174.599 232.02 171.873 cv
@
232.02 171.873 mo
232.02 169.146 227.469 166.936 221.856 166.936 cv
216.243 166.936 211.692 169.146 211.692 171.873 cv
211.692 174.599 216.243 176.81 221.856 176.81 cv
227.469 176.81 232.02 174.599 232.02 171.873 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
214.122 170.014 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
218.177 172.337 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
218.036 174.66 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
202.98 161.418 mo
206.029 163.161 210.24 165.339 213.87 167.372 cv
@
213.725 167.662 mo
215.177 168.098 li
214.015 167.081 li
cp
@
213.725 167.662 mo
215.177 168.098 li
214.015 167.081 li
f
206.9 184.65 mo
206.9 183.207 203.325 182.037 198.914 182.037 cv
194.504 182.037 190.928 183.207 190.928 184.65 cv
190.928 186.094 194.504 187.264 198.914 187.264 cv
203.325 187.264 206.9 186.094 206.9 184.65 cv
@
206.9 184.65 mo
206.9 183.207 203.325 182.037 198.914 182.037 cv
194.504 182.037 190.928 183.207 190.928 184.65 cv
190.928 186.094 194.504 187.264 198.914 187.264 cv
203.325 187.264 206.9 186.094 206.9 184.65 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
192.45 185.115 mo
(roundrobin\(2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
193.397 186.538 mo
191.219 187.264 188.896 187.99 187.153 188.426 cv
182.797 189.732 175.828 191.765 170.6 193.217 cv
@
170.891 192.782 mo
169.584 193.508 li
171.036 193.508 li
cp
@
170.891 192.782 mo
169.584 193.508 li
171.036 193.508 li
f
198.914 176.81 mo
198.914 178.116 198.914 179.423 198.914 180.73 cv
@
198.624 180.585 mo
198.914 182.037 li
199.35 180.585 li
cp
@
198.624 180.585 mo
198.914 182.037 li
199.35 180.585 li
f
215.177 175.648 mo
211.692 177.536 207.336 180.004 204.142 181.746 cv
@
204.142 181.311 mo
202.98 182.327 li
204.432 182.037 li
cp
@
204.142 181.311 mo
202.98 182.327 li
204.432 182.037 li
f
115.134 227.049 mo
115.134 225.605 110.908 224.435 105.696 224.435 cv
100.484 224.435 96.258 225.605 96.258 227.049 cv
96.258 228.492 100.484 229.662 105.696 229.662 cv
110.908 229.662 115.134 228.492 115.134 227.049 cv
@
115.134 227.049 mo
115.134 225.605 110.908 224.435 105.696 224.435 cv
100.484 224.435 96.258 225.605 96.258 227.049 cv
96.258 228.492 100.484 229.662 105.696 229.662 cv
110.908 229.662 115.134 228.492 115.134 227.049 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.7073 227.513 mo
(roundrobin\(1,1,1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 .508202 1.0164 .508202 1.0164 0 ]xsh
132.848 218.482 mo
127.476 220.079 119.054 222.693 113.101 224.58 cv
@
113.101 224.145 mo
111.94 225.016 li
113.392 224.871 li
cp
@
113.101 224.145 mo
111.94 225.016 li
113.392 224.871 li
f
185.12 227.049 mo
185.12 225.605 180.895 224.435 175.682 224.435 cv
170.47 224.435 166.244 225.605 166.244 227.049 cv
166.244 228.492 170.47 229.662 175.682 229.662 cv
180.895 229.662 185.12 228.492 185.12 227.049 cv
@
185.12 227.049 mo
185.12 225.605 180.895 224.435 175.682 224.435 cv
170.47 224.435 166.244 225.605 166.244 227.049 cv
166.244 228.492 170.47 229.662 175.682 229.662 cv
180.895 229.662 185.12 228.492 185.12 227.049 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
167.694 227.513 mo
(roundrobin\(1,1,1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
144.755 218.337 mo
150.998 220.079 160.727 222.838 167.551 224.726 cv
@
167.551 225.161 mo
169.003 225.161 li
167.696 224.435 li
cp
@
167.551 225.161 mo
169.003 225.161 li
167.696 224.435 li
f
114.844 263.058 mo
114.844 261.615 111.268 260.445 106.858 260.445 cv
102.447 260.445 98.8716 261.615 98.8716 263.058 cv
98.8716 264.502 102.447 265.672 106.858 265.672 cv
111.268 265.672 114.844 264.502 114.844 263.058 cv
@
114.844 263.058 mo
114.844 261.615 111.268 260.445 106.858 260.445 cv
102.447 260.445 98.8716 261.615 98.8716 263.058 cv
98.8716 264.502 102.447 265.672 106.858 265.672 cv
111.268 265.672 114.844 264.502 114.844 263.058 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
100.393 263.523 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
114.844 274.094 mo
114.844 272.65 111.268 271.48 106.858 271.48 cv
102.447 271.48 98.8716 272.65 98.8716 274.094 cv
98.8716 275.537 102.447 276.707 106.858 276.707 cv
111.268 276.707 114.844 275.537 114.844 274.094 cv
@
114.844 274.094 mo
114.844 272.65 111.268 271.48 106.858 271.48 cv
102.447 271.48 98.8716 272.65 98.8716 274.094 cv
98.8716 275.537 102.447 276.707 106.858 276.707 cv
111.268 276.707 114.844 275.537 114.844 274.094 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
100.393 274.558 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
106.858 265.672 mo
106.858 266.979 106.858 268.576 106.858 270.028 cv
@
106.567 270.028 mo
106.858 271.48 li
107.293 270.028 li
cp
@
106.567 270.028 mo
106.858 271.48 li
107.293 270.028 li
f
69.9768 239.826 mo
69.9768 237.1 65.4262 234.89 59.8128 234.89 cv
54.1994 234.89 49.6488 237.1 49.6488 239.826 cv
49.6488 242.553 54.1994 244.763 59.8128 244.763 cv
65.4262 244.763 69.9768 242.553 69.9768 239.826 cv
@
69.9768 239.826 mo
69.9768 237.1 65.4262 234.89 59.8128 234.89 cv
54.1994 234.89 49.6488 237.1 49.6488 239.826 cv
49.6488 242.553 54.1994 244.763 59.8128 244.763 cv
65.4262 244.763 69.9768 242.553 69.9768 239.826 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
52.0792 237.968 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902531 .67691 .902531 1.24202 1.0164 .902531 1.0164 .902534 
1.0164 1.0164 0 ]xsh
56.1345 240.291 mo
(work=14)
[1.46765 1.0164 .676907 1.0164 1.14649 1.0164 0 ]xsh
55.9933 242.614 mo
(I/O: 2->2)
[.676907 .565121 1.46765 .565121 .508198 1.0164 .67691 1.14649 0 ]xsh
98.1456 228.646 mo
90.3048 230.243 78.108 233.002 70.848 234.89 cv
70.122 235.18 69.1056 235.47 68.0892 235.906 cv
@
68.2344 235.47 mo
67.0728 236.342 li
68.5248 236.051 li
cp
@
68.2344 235.47 mo
67.0728 236.342 li
68.5248 236.051 li
f
92.9184 239.826 mo
92.9184 237.1 88.3678 234.89 82.7544 234.89 cv
77.141 234.89 72.5904 237.1 72.5904 239.826 cv
72.5904 242.553 77.141 244.763 82.7544 244.763 cv
88.3678 244.763 92.9184 242.553 92.9184 239.826 cv
@
92.9184 239.826 mo
92.9184 237.1 88.3678 234.89 82.7544 234.89 cv
77.141 234.89 72.5904 237.1 72.5904 239.826 cv
72.5904 242.553 77.141 244.763 82.7544 244.763 cv
88.3678 244.763 92.9184 242.553 92.9184 239.826 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
75.0208 237.968 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
79.0761 240.291 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
78.9349 242.614 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
101.485 229.372 mo
98.436 231.114 94.3704 233.292 90.7404 235.325 cv
@
90.5952 235.035 mo
89.4336 236.051 li
90.8856 235.616 li
cp
@
90.5952 235.035 mo
89.4336 236.051 li
90.8856 235.616 li
f
115.86 239.826 mo
115.86 237.1 111.309 234.89 105.696 234.89 cv
100.083 234.89 95.532 237.1 95.532 239.826 cv
95.532 242.553 100.083 244.763 105.696 244.763 cv
111.309 244.763 115.86 242.553 115.86 239.826 cv
@
115.86 239.826 mo
115.86 237.1 111.309 234.89 105.696 234.89 cv
100.083 234.89 95.532 237.1 95.532 239.826 cv
95.532 242.553 100.083 244.763 105.696 244.763 cv
111.309 244.763 115.86 242.553 115.86 239.826 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.9624 237.968 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
102.018 240.291 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
101.876 242.614 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
105.696 229.662 mo
105.696 230.679 105.696 232.131 105.696 233.438 cv
@
105.406 233.438 mo
105.696 234.89 li
106.132 233.438 li
cp
@
105.406 233.438 mo
105.696 234.89 li
106.132 233.438 li
f
138.802 239.826 mo
138.802 237.1 134.251 234.89 128.638 234.89 cv
123.024 234.89 118.474 237.1 118.474 239.826 cv
118.474 242.553 123.024 244.763 128.638 244.763 cv
134.251 244.763 138.802 242.553 138.802 239.826 cv
@
138.802 239.826 mo
138.802 237.1 134.251 234.89 128.638 234.89 cv
123.024 234.89 118.474 237.1 118.474 239.826 cv
118.474 242.553 123.024 244.763 128.638 244.763 cv
134.251 244.763 138.802 242.553 138.802 239.826 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
120.904 237.968 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902527 1.0164 .902527 
1.0164 1.0164 0 ]xsh
124.959 240.291 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
124.818 242.614 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565109 .508209 1.0164 .676895 1.1465 0 ]xsh
109.907 229.372 mo
112.956 231.114 117.022 233.292 120.652 235.325 cv
@
120.506 235.616 mo
121.958 236.051 li
120.797 235.035 li
cp
@
120.506 235.616 mo
121.958 236.051 li
120.797 235.035 li
f
115.134 252.604 mo
115.134 251.161 110.908 249.99 105.696 249.99 cv
100.484 249.99 96.258 251.161 96.258 252.604 cv
96.258 254.047 100.484 255.218 105.696 255.218 cv
110.908 255.218 115.134 254.047 115.134 252.604 cv
@
115.134 252.604 mo
115.134 251.161 110.908 249.99 105.696 249.99 cv
100.484 249.99 96.258 251.161 96.258 252.604 cv
96.258 254.047 100.484 255.218 105.696 255.218 cv
110.908 255.218 115.134 254.047 115.134 252.604 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.7073 253.069 mo
(roundrobin\(1,1,1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 .508202 1.0164 .508202 1.0164 0 ]xsh
105.986 255.218 mo
106.132 256.379 106.277 257.831 106.422 258.993 cv
@
106.132 258.993 mo
106.567 260.445 li
106.712 258.993 li
cp
@
106.132 258.993 mo
106.567 260.445 li
106.712 258.993 li
f
67.0728 243.311 mo
68.3796 243.892 69.8316 244.473 70.848 244.763 cv
77.8176 246.651 89.1432 249.119 96.984 250.716 cv
@
96.5484 251.007 mo
98.0004 251.007 li
96.6936 250.281 li
cp
@
96.5484 251.007 mo
98.0004 251.007 li
96.6936 250.281 li
f
89.4336 243.602 mo
92.9184 245.489 96.984 247.812 100.324 249.7 cv
@
100.033 249.99 mo
101.485 250.281 li
100.324 249.264 li
cp
@
100.033 249.99 mo
101.485 250.281 li
100.324 249.264 li
f
105.696 244.763 mo
105.696 246.07 105.696 247.377 105.696 248.684 cv
@
105.406 248.538 mo
105.696 249.99 li
106.132 248.538 li
cp
@
105.406 248.538 mo
105.696 249.99 li
106.132 248.538 li
f
121.958 243.602 mo
118.474 245.489 114.408 247.812 111.068 249.7 cv
@
111.068 249.264 mo
109.907 250.281 li
111.359 249.99 li
cp
@
111.068 249.264 mo
109.907 250.281 li
111.359 249.99 li
f
162.905 239.826 mo
162.905 237.1 158.354 234.89 152.741 234.89 cv
147.127 234.89 142.577 237.1 142.577 239.826 cv
142.577 242.553 147.127 244.763 152.741 244.763 cv
158.354 244.763 162.905 242.553 162.905 239.826 cv
@
162.905 239.826 mo
162.905 237.1 158.354 234.89 152.741 234.89 cv
147.127 234.89 142.577 237.1 142.577 239.826 cv
142.577 242.553 147.127 244.763 152.741 244.763 cv
158.354 244.763 162.905 242.553 162.905 239.826 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
145.007 237.968 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
149.062 240.291 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
148.921 242.614 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
171.472 229.372 mo
168.422 231.114 164.357 233.292 160.727 235.325 cv
@
160.582 235.035 mo
159.42 236.051 li
160.872 235.616 li
cp
@
160.582 235.035 mo
159.42 236.051 li
160.872 235.616 li
f
185.846 239.826 mo
185.846 237.1 181.296 234.89 175.682 234.89 cv
170.069 234.89 165.518 237.1 165.518 239.826 cv
165.518 242.553 170.069 244.763 175.682 244.763 cv
181.296 244.763 185.846 242.553 185.846 239.826 cv
@
185.846 239.826 mo
185.846 237.1 181.296 234.89 175.682 234.89 cv
170.069 234.89 165.518 237.1 165.518 239.826 cv
165.518 242.553 170.069 244.763 175.682 244.763 cv
181.296 244.763 185.846 242.553 185.846 239.826 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
167.949 237.968 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
172.004 240.291 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
171.863 242.614 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
175.682 229.662 mo
175.682 230.679 175.682 232.131 175.682 233.438 cv
@
175.392 233.438 mo
175.682 234.89 li
176.118 233.438 li
cp
@
175.392 233.438 mo
175.682 234.89 li
176.118 233.438 li
f
208.788 239.826 mo
208.788 237.1 204.237 234.89 198.624 234.89 cv
193.011 234.89 188.46 237.1 188.46 239.826 cv
188.46 242.553 193.011 244.763 198.624 244.763 cv
204.237 244.763 208.788 242.553 208.788 239.826 cv
@
208.788 239.826 mo
208.788 237.1 204.237 234.89 198.624 234.89 cv
193.011 234.89 188.46 237.1 188.46 239.826 cv
188.46 242.553 193.011 244.763 198.624 244.763 cv
204.237 244.763 208.788 242.553 208.788 239.826 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
190.89 237.968 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
194.945 240.291 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
194.804 242.614 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
179.893 229.372 mo
182.942 231.114 187.008 233.292 190.638 235.325 cv
@
190.493 235.616 mo
191.945 236.051 li
190.783 235.035 li
cp
@
190.493 235.616 mo
191.945 236.051 li
190.783 235.035 li
f
231.73 239.826 mo
231.73 237.1 227.179 234.89 221.566 234.89 cv
215.952 234.89 211.402 237.1 211.402 239.826 cv
211.402 242.553 215.952 244.763 221.566 244.763 cv
227.179 244.763 231.73 242.553 231.73 239.826 cv
@
231.73 239.826 mo
231.73 237.1 227.179 234.89 221.566 234.89 cv
215.952 234.89 211.402 237.1 211.402 239.826 cv
211.402 242.553 215.952 244.763 221.566 244.763 cv
227.179 244.763 231.73 242.553 231.73 239.826 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
213.832 237.968 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
217.887 240.291 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
217.746 242.614 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
183.233 228.646 mo
191.074 230.243 203.27 233.002 210.53 234.89 cv
211.256 235.18 212.273 235.47 213.289 235.906 cv
@
212.854 236.051 mo
214.306 236.342 li
213.144 235.47 li
cp
@
212.854 236.051 mo
214.306 236.342 li
213.144 235.47 li
f
185.12 252.604 mo
185.12 251.161 180.895 249.99 175.682 249.99 cv
170.47 249.99 166.244 251.161 166.244 252.604 cv
166.244 254.047 170.47 255.218 175.682 255.218 cv
180.895 255.218 185.12 254.047 185.12 252.604 cv
@
185.12 252.604 mo
185.12 251.161 180.895 249.99 175.682 249.99 cv
170.47 249.99 166.244 251.161 166.244 252.604 cv
166.244 254.047 170.47 255.218 175.682 255.218 cv
180.895 255.218 185.12 254.047 185.12 252.604 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
167.694 253.069 mo
(roundrobin\(1,1,1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
167.406 253.911 mo
154.193 255.944 128.638 259.719 115.279 261.752 cv
@
115.57 261.316 mo
114.118 261.897 li
115.57 262.042 li
cp
@
115.57 261.316 mo
114.118 261.897 li
115.57 262.042 li
f
159.42 243.602 mo
162.905 245.489 166.97 247.812 170.31 249.7 cv
@
170.02 249.99 mo
171.472 250.281 li
170.31 249.264 li
cp
@
170.02 249.99 mo
171.472 250.281 li
170.31 249.264 li
f
175.682 244.763 mo
175.682 246.07 175.682 247.377 175.682 248.684 cv
@
175.392 248.538 mo
175.682 249.99 li
176.118 248.538 li
cp
@
175.392 248.538 mo
175.682 249.99 li
176.118 248.538 li
f
191.945 243.602 mo
188.46 245.489 184.394 247.812 181.055 249.7 cv
@
181.055 249.264 mo
179.893 250.281 li
181.345 249.99 li
cp
@
181.055 249.264 mo
179.893 250.281 li
181.345 249.99 li
f
214.306 243.311 mo
212.999 243.892 211.547 244.473 210.53 244.763 cv
203.561 246.651 192.235 249.119 184.394 250.716 cv
@
184.685 250.281 mo
183.378 251.007 li
184.83 251.007 li
cp
@
184.685 250.281 mo
183.378 251.007 li
184.83 251.007 li
f
111.94 284.548 mo
111.94 283.105 108.364 281.934 103.954 281.934 cv
99.5431 281.934 95.9676 283.105 95.9676 284.548 cv
95.9676 285.991 99.5431 287.162 103.954 287.162 cv
108.364 287.162 111.94 285.991 111.94 284.548 cv
@
111.94 284.548 mo
111.94 283.105 108.364 281.934 103.954 281.934 cv
99.5431 281.934 95.9676 283.105 95.9676 284.548 cv
95.9676 285.991 99.5431 287.162 103.954 287.162 cv
108.364 287.162 111.94 285.991 111.94 284.548 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.4894 285.013 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
106.132 276.707 mo
105.841 277.869 105.406 279.321 105.115 280.628 cv
@
104.825 280.482 mo
104.68 281.934 li
105.551 280.628 li
cp
@
104.825 280.482 mo
104.68 281.934 li
105.551 280.628 li
f
171.326 284.548 mo
171.326 283.105 167.751 281.934 163.34 281.934 cv
158.93 281.934 155.354 283.105 155.354 284.548 cv
155.354 285.991 158.93 287.162 163.34 287.162 cv
167.751 287.162 171.326 285.991 171.326 284.548 cv
@
171.326 284.548 mo
171.326 283.105 167.751 281.934 163.34 281.934 cv
158.93 281.934 155.354 283.105 155.354 284.548 cv
155.354 285.991 158.93 287.162 163.34 287.162 cv
167.751 287.162 171.326 285.991 171.326 284.548 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 285.013 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
114.408 274.965 mo
121.958 275.836 133.284 277.143 140.108 278.45 cv
144.61 279.466 151.144 281.063 156.226 282.515 cv
@
155.79 282.806 mo
157.242 282.806 li
155.935 282.08 li
cp
@
155.79 282.806 mo
157.242 282.806 li
155.935 282.08 li
f
134.01 341.466 mo
134.01 340.023 130.435 338.853 126.024 338.853 cv
121.613 338.853 118.038 340.023 118.038 341.466 cv
118.038 342.91 121.613 344.08 126.024 344.08 cv
130.435 344.08 134.01 342.91 134.01 341.466 cv
@
134.01 341.466 mo
134.01 340.023 130.435 338.853 126.024 338.853 cv
121.613 338.853 118.038 340.023 118.038 341.466 cv
118.038 342.91 121.613 344.08 126.024 344.08 cv
130.435 344.08 134.01 342.91 134.01 341.466 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
119.56 341.931 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.0164 1.0164 1.0164 .67691 1.0164 1.0164 .565117 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
134.01 352.502 mo
134.01 351.058 130.435 349.888 126.024 349.888 cv
121.613 349.888 118.038 351.058 118.038 352.502 cv
118.038 353.945 121.613 355.115 126.024 355.115 cv
130.435 355.115 134.01 353.945 134.01 352.502 cv
@
134.01 352.502 mo
134.01 351.058 130.435 349.888 126.024 349.888 cv
121.613 349.888 118.038 351.058 118.038 352.502 cv
118.038 353.945 121.613 355.115 126.024 355.115 cv
130.435 355.115 134.01 353.945 134.01 352.502 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
119.56 352.966 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.0164 1.0164 1.0164 .67691 1.0164 1.0164 .565117 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
126.024 344.08 mo
126.024 345.387 126.024 346.984 126.024 348.436 cv
@
125.734 348.436 mo
126.024 349.888 li
126.46 348.436 li
cp
@
125.734 348.436 mo
126.024 349.888 li
126.46 348.436 li
f
86.3844 295.002 mo
86.3844 293.559 82.8089 292.389 78.3984 292.389 cv
73.9879 292.389 70.4124 293.559 70.4124 295.002 cv
70.4124 296.446 73.9879 297.616 78.3984 297.616 cv
82.8089 297.616 86.3844 296.446 86.3844 295.002 cv
@
86.3844 295.002 mo
86.3844 293.559 82.8089 292.389 78.3984 292.389 cv
73.9879 292.389 70.4124 293.559 70.4124 295.002 cv
70.4124 296.446 73.9879 297.616 78.3984 297.616 cv
82.8089 297.616 86.3844 296.446 86.3844 295.002 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
71.9342 295.467 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
98.0004 286.29 mo
95.2416 287.162 92.1924 288.178 90.1596 288.904 cv
88.4172 289.63 85.6584 291.082 83.3352 292.244 cv
@
83.6256 291.663 mo
82.464 292.679 li
83.916 292.389 li
cp
@
83.6256 291.663 mo
82.464 292.679 li
83.916 292.389 li
f
111.94 295.002 mo
111.94 293.559 108.364 292.389 103.954 292.389 cv
99.5431 292.389 95.9676 293.559 95.9676 295.002 cv
95.9676 296.446 99.5431 297.616 103.954 297.616 cv
108.364 297.616 111.94 296.446 111.94 295.002 cv
@
111.94 295.002 mo
111.94 293.559 108.364 292.389 103.954 292.389 cv
99.5431 292.389 95.9676 293.559 95.9676 295.002 cv
95.9676 296.446 99.5431 297.616 103.954 297.616 cv
108.364 297.616 111.94 296.446 111.94 295.002 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.4894 295.467 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
103.954 287.162 mo
103.954 288.323 103.954 289.63 103.954 290.937 cv
@
103.663 290.937 mo
103.954 292.389 li
104.389 290.937 li
cp
@
103.663 290.937 mo
103.954 292.389 li
104.389 290.937 li
f
121.958 331.012 mo
121.958 329.569 118.383 328.398 113.972 328.398 cv
109.562 328.398 105.986 329.569 105.986 331.012 cv
105.986 332.455 109.562 333.626 113.972 333.626 cv
118.383 333.626 121.958 332.455 121.958 331.012 cv
@
121.958 331.012 mo
121.958 329.569 118.383 328.398 113.972 328.398 cv
109.562 328.398 105.986 329.569 105.986 331.012 cv
105.986 332.455 109.562 333.626 113.972 333.626 cv
118.383 333.626 121.958 332.455 121.958 331.012 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
107.508 331.477 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
116.876 333.48 mo
118.474 334.787 120.361 336.53 122.104 337.982 cv
@
121.813 338.272 mo
123.12 338.998 li
122.394 337.691 li
cp
@
121.813 338.272 mo
123.12 338.998 li
122.394 337.691 li
f
65.6208 307.78 mo
65.6208 305.053 61.0702 302.843 55.4568 302.843 cv
49.8434 302.843 45.2928 305.053 45.2928 307.78 cv
45.2928 310.507 49.8434 312.717 55.4568 312.717 cv
61.0702 312.717 65.6208 310.507 65.6208 307.78 cv
@
65.6208 307.78 mo
65.6208 305.053 61.0702 302.843 55.4568 302.843 cv
49.8434 302.843 45.2928 305.053 45.2928 307.78 cv
45.2928 310.507 49.8434 312.717 55.4568 312.717 cv
61.0702 312.717 65.6208 310.507 65.6208 307.78 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
47.7231 305.921 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902531 .67691 .902531 1.24202 1.0164 .902531 1.0164 .902534 
1.0164 1.0164 0 ]xsh
51.7784 308.244 mo
(work=14)
[1.46765 1.0164 .676907 1.0164 1.14649 1.0164 0 ]xsh
51.6372 310.567 mo
(I/O: 2->2)
[.676907 .565121 1.46765 .565121 .508198 1.0164 .67691 1.14649 0 ]xsh
74.3328 297.326 mo
71.2836 299.068 67.0728 301.246 63.4428 303.279 cv
@
63.2976 302.988 mo
62.136 304.005 li
63.588 303.569 li
cp
@
63.2976 302.988 mo
62.136 304.005 li
63.588 303.569 li
f
88.5624 307.78 mo
88.5624 305.053 84.0118 302.843 78.3984 302.843 cv
72.785 302.843 68.2344 305.053 68.2344 307.78 cv
68.2344 310.507 72.785 312.717 78.3984 312.717 cv
84.0118 312.717 88.5624 310.507 88.5624 307.78 cv
@
88.5624 307.78 mo
88.5624 305.053 84.0118 302.843 78.3984 302.843 cv
72.785 302.843 68.2344 305.053 68.2344 307.78 cv
68.2344 310.507 72.785 312.717 78.3984 312.717 cv
84.0118 312.717 88.5624 310.507 88.5624 307.78 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
70.6647 305.921 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
74.72 308.244 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
74.5788 310.567 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
78.3984 297.616 mo
78.3984 298.632 78.3984 300.084 78.3984 301.391 cv
@
78.108 301.391 mo
78.3984 302.843 li
78.834 301.391 li
cp
@
78.108 301.391 mo
78.3984 302.843 li
78.834 301.391 li
f
86.3844 320.558 mo
86.3844 319.114 82.8089 317.944 78.3984 317.944 cv
73.9879 317.944 70.4124 319.114 70.4124 320.558 cv
70.4124 322.001 73.9879 323.171 78.3984 323.171 cv
82.8089 323.171 86.3844 322.001 86.3844 320.558 cv
@
86.3844 320.558 mo
86.3844 319.114 82.8089 317.944 78.3984 317.944 cv
73.9879 317.944 70.4124 319.114 70.4124 320.558 cv
70.4124 322.001 73.9879 323.171 78.3984 323.171 cv
82.8089 323.171 86.3844 322.001 86.3844 320.558 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
71.9342 321.022 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
83.916 322.445 mo
86.094 323.171 88.5624 323.897 90.1596 324.333 cv
94.6608 325.64 101.485 327.672 106.712 328.979 cv
@
106.277 329.27 mo
107.729 329.27 li
106.422 328.544 li
cp
@
106.277 329.27 mo
107.729 329.27 li
106.422 328.544 li
f
62.136 311.555 mo
65.6208 313.443 69.9768 315.911 73.1712 317.654 cv
@
72.8808 317.944 mo
74.3328 318.234 li
73.1712 317.218 li
cp
@
72.8808 317.944 mo
74.3328 318.234 li
73.1712 317.218 li
f
78.3984 312.717 mo
78.3984 314.024 78.3984 315.33 78.3984 316.637 cv
@
78.108 316.492 mo
78.3984 317.944 li
78.834 316.492 li
cp
@
78.108 316.492 mo
78.3984 317.944 li
78.834 316.492 li
f
112.666 307.78 mo
112.666 305.053 108.115 302.843 102.502 302.843 cv
96.8882 302.843 92.3376 305.053 92.3376 307.78 cv
92.3376 310.507 96.8882 312.717 102.502 312.717 cv
108.115 312.717 112.666 310.507 112.666 307.78 cv
@
112.666 307.78 mo
112.666 305.053 108.115 302.843 102.502 302.843 cv
96.8882 302.843 92.3376 305.053 92.3376 307.78 cv
92.3376 310.507 96.8882 312.717 102.502 312.717 cv
108.115 312.717 112.666 310.507 112.666 307.78 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
94.768 305.921 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
98.8233 308.244 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
98.6821 310.567 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
103.663 297.616 mo
103.518 298.778 103.373 300.375 103.228 301.827 cv
@
102.937 301.391 mo
103.082 302.843 li
103.663 301.391 li
cp
@
102.937 301.391 mo
103.082 302.843 li
103.663 301.391 li
f
135.607 307.78 mo
135.607 305.053 131.057 302.843 125.443 302.843 cv
119.83 302.843 115.279 305.053 115.279 307.78 cv
115.279 310.507 119.83 312.717 125.443 312.717 cv
131.057 312.717 135.607 310.507 135.607 307.78 cv
@
135.607 307.78 mo
135.607 305.053 131.057 302.843 125.443 302.843 cv
119.83 302.843 115.279 305.053 115.279 307.78 cv
115.279 310.507 119.83 312.717 125.443 312.717 cv
131.057 312.717 135.607 310.507 135.607 307.78 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
117.71 305.921 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902527 1.0164 .902527 
1.0164 1.0164 0 ]xsh
121.765 308.244 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
121.624 310.567 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
107.874 297.326 mo
110.633 299.068 114.263 301.246 117.748 303.279 cv
@
117.602 303.569 mo
119.054 304.005 li
117.893 302.988 li
cp
@
117.602 303.569 mo
119.054 304.005 li
117.893 302.988 li
f
121.958 320.558 mo
121.958 319.114 118.383 317.944 113.972 317.944 cv
109.562 317.944 105.986 319.114 105.986 320.558 cv
105.986 322.001 109.562 323.171 113.972 323.171 cv
118.383 323.171 121.958 322.001 121.958 320.558 cv
@
121.958 320.558 mo
121.958 319.114 118.383 317.944 113.972 317.944 cv
109.562 317.944 105.986 319.114 105.986 320.558 cv
105.986 322.001 109.562 323.171 113.972 323.171 cv
118.383 323.171 121.958 322.001 121.958 320.558 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
107.508 321.022 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
113.972 323.171 mo
113.972 324.333 113.972 325.64 113.972 326.946 cv
@
113.682 326.946 mo
113.972 328.398 li
114.408 326.946 li
cp
@
113.682 326.946 mo
113.972 328.398 li
114.408 326.946 li
f
106.567 312.281 mo
108.019 313.878 109.471 315.621 110.778 317.073 cv
@
110.488 317.218 mo
111.649 318.089 li
110.923 316.782 li
cp
@
110.488 317.218 mo
111.649 318.089 li
110.923 316.782 li
f
121.378 312.281 mo
119.926 313.878 118.474 315.621 117.167 317.073 cv
@
117.022 316.782 mo
116.296 318.089 li
117.457 317.218 li
cp
@
117.022 316.782 mo
116.296 318.089 li
117.457 317.218 li
f
171.326 295.002 mo
171.326 293.559 167.751 292.389 163.34 292.389 cv
158.93 292.389 155.354 293.559 155.354 295.002 cv
155.354 296.446 158.93 297.616 163.34 297.616 cv
167.751 297.616 171.326 296.446 171.326 295.002 cv
@
171.326 295.002 mo
171.326 293.559 167.751 292.389 163.34 292.389 cv
158.93 292.389 155.354 293.559 155.354 295.002 cv
155.354 296.446 158.93 297.616 163.34 297.616 cv
167.751 297.616 171.326 296.446 171.326 295.002 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 295.467 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
163.34 287.162 mo
163.34 288.323 163.34 289.63 163.34 290.937 cv
@
163.05 290.937 mo
163.34 292.389 li
163.776 290.937 li
cp
@
163.05 290.937 mo
163.34 292.389 li
163.776 290.937 li
f
206.9 295.002 mo
206.9 293.559 203.325 292.389 198.914 292.389 cv
194.504 292.389 190.928 293.559 190.928 295.002 cv
190.928 296.446 194.504 297.616 198.914 297.616 cv
203.325 297.616 206.9 296.446 206.9 295.002 cv
@
206.9 295.002 mo
206.9 293.559 203.325 292.389 198.914 292.389 cv
194.504 292.389 190.928 293.559 190.928 295.002 cv
190.928 296.446 194.504 297.616 198.914 297.616 cv
203.325 297.616 206.9 296.446 206.9 295.002 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
192.45 295.467 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
170.6 285.564 mo
175.973 286.436 182.797 287.742 187.153 288.904 cv
189.041 289.485 191.654 290.792 193.832 291.953 cv
@
193.687 292.244 mo
195.139 292.679 li
193.978 291.663 li
cp
@
193.687 292.244 mo
195.139 292.679 li
193.978 291.663 li
f
171.326 331.012 mo
171.326 329.569 167.751 328.398 163.34 328.398 cv
158.93 328.398 155.354 329.569 155.354 331.012 cv
155.354 332.455 158.93 333.626 163.34 333.626 cv
167.751 333.626 171.326 332.455 171.326 331.012 cv
@
171.326 331.012 mo
171.326 329.569 167.751 328.398 163.34 328.398 cv
158.93 328.398 155.354 329.569 155.354 331.012 cv
155.354 332.455 158.93 333.626 163.34 333.626 cv
167.751 333.626 171.326 332.455 171.326 331.012 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 331.477 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
157.242 332.754 mo
150.563 334.497 139.963 337.546 132.994 339.434 cv
@
133.429 338.853 mo
132.122 339.724 li
133.574 339.579 li
cp
@
133.429 338.853 mo
132.122 339.724 li
133.574 339.579 li
f
162.034 307.78 mo
162.034 305.053 157.483 302.843 151.87 302.843 cv
146.256 302.843 141.706 305.053 141.706 307.78 cv
141.706 310.507 146.256 312.717 151.87 312.717 cv
157.483 312.717 162.034 310.507 162.034 307.78 cv
@
162.034 307.78 mo
162.034 305.053 157.483 302.843 151.87 302.843 cv
146.256 302.843 141.706 305.053 141.706 307.78 cv
141.706 310.507 146.256 312.717 151.87 312.717 cv
157.483 312.717 162.034 310.507 162.034 307.78 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
144.136 305.921 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
148.191 308.244 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
148.05 310.567 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
161.017 297.471 mo
159.856 298.778 158.404 300.375 156.952 302.117 cv
@
156.661 301.972 mo
155.935 303.279 li
157.097 302.408 li
cp
@
156.661 301.972 mo
155.935 303.279 li
157.097 302.408 li
f
184.975 307.78 mo
184.975 305.053 180.425 302.843 174.811 302.843 cv
169.198 302.843 164.647 305.053 164.647 307.78 cv
164.647 310.507 169.198 312.717 174.811 312.717 cv
180.425 312.717 184.975 310.507 184.975 307.78 cv
@
184.975 307.78 mo
184.975 305.053 180.425 302.843 174.811 302.843 cv
169.198 302.843 164.647 305.053 164.647 307.78 cv
164.647 310.507 169.198 312.717 174.811 312.717 cv
180.425 312.717 184.975 310.507 184.975 307.78 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
167.078 305.921 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
171.133 308.244 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
170.992 310.567 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
165.664 297.471 mo
166.825 298.778 168.277 300.375 169.729 302.117 cv
@
169.584 302.408 mo
170.746 303.279 li
170.02 301.972 li
cp
@
169.584 302.408 mo
170.746 303.279 li
170.02 301.972 li
f
171.326 320.558 mo
171.326 319.114 167.751 317.944 163.34 317.944 cv
158.93 317.944 155.354 319.114 155.354 320.558 cv
155.354 322.001 158.93 323.171 163.34 323.171 cv
167.751 323.171 171.326 322.001 171.326 320.558 cv
@
171.326 320.558 mo
171.326 319.114 167.751 317.944 163.34 317.944 cv
158.93 317.944 155.354 319.114 155.354 320.558 cv
155.354 322.001 158.93 323.171 163.34 323.171 cv
167.751 323.171 171.326 322.001 171.326 320.558 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 321.022 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
163.34 323.171 mo
163.34 324.333 163.34 325.64 163.34 326.946 cv
@
163.05 326.946 mo
163.34 328.398 li
163.776 326.946 li
cp
@
163.05 326.946 mo
163.34 328.398 li
163.776 326.946 li
f
155.935 312.281 mo
157.387 313.878 158.839 315.621 160.146 317.073 cv
@
159.856 317.218 mo
161.017 318.089 li
160.291 316.782 li
cp
@
159.856 317.218 mo
161.017 318.089 li
160.291 316.782 li
f
170.746 312.281 mo
169.294 313.878 167.842 315.621 166.535 317.073 cv
@
166.39 316.782 mo
165.664 318.089 li
166.825 317.218 li
cp
@
166.39 316.782 mo
165.664 318.089 li
166.825 317.218 li
f
209.078 307.78 mo
209.078 305.053 204.528 302.843 198.914 302.843 cv
193.301 302.843 188.75 305.053 188.75 307.78 cv
188.75 310.507 193.301 312.717 198.914 312.717 cv
204.528 312.717 209.078 310.507 209.078 307.78 cv
@
209.078 307.78 mo
209.078 305.053 204.528 302.843 198.914 302.843 cv
193.301 302.843 188.75 305.053 188.75 307.78 cv
188.75 310.507 193.301 312.717 198.914 312.717 cv
204.528 312.717 209.078 310.507 209.078 307.78 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
191.181 305.921 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
195.236 308.244 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
195.095 310.567 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
198.914 297.616 mo
198.914 298.632 198.914 300.084 198.914 301.391 cv
@
198.624 301.391 mo
198.914 302.843 li
199.35 301.391 li
cp
@
198.624 301.391 mo
198.914 302.843 li
199.35 301.391 li
f
232.02 307.78 mo
232.02 305.053 227.469 302.843 221.856 302.843 cv
216.243 302.843 211.692 305.053 211.692 307.78 cv
211.692 310.507 216.243 312.717 221.856 312.717 cv
227.469 312.717 232.02 310.507 232.02 307.78 cv
@
232.02 307.78 mo
232.02 305.053 227.469 302.843 221.856 302.843 cv
216.243 302.843 211.692 305.053 211.692 307.78 cv
211.692 310.507 216.243 312.717 221.856 312.717 cv
227.469 312.717 232.02 310.507 232.02 307.78 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
214.122 305.921 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
218.177 308.244 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
218.036 310.567 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
202.98 297.326 mo
206.029 299.068 210.24 301.246 213.87 303.279 cv
@
213.725 303.569 mo
215.177 304.005 li
214.015 302.988 li
cp
@
213.725 303.569 mo
215.177 304.005 li
214.015 302.988 li
f
206.9 320.558 mo
206.9 319.114 203.325 317.944 198.914 317.944 cv
194.504 317.944 190.928 319.114 190.928 320.558 cv
190.928 322.001 194.504 323.171 198.914 323.171 cv
203.325 323.171 206.9 322.001 206.9 320.558 cv
@
206.9 320.558 mo
206.9 319.114 203.325 317.944 198.914 317.944 cv
194.504 317.944 190.928 319.114 190.928 320.558 cv
190.928 322.001 194.504 323.171 198.914 323.171 cv
203.325 323.171 206.9 322.001 206.9 320.558 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
192.45 321.022 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
193.397 322.445 mo
191.219 323.171 188.896 323.897 187.153 324.333 cv
182.797 325.64 175.828 327.672 170.6 329.124 cv
@
170.891 328.689 mo
169.584 329.415 li
171.036 329.415 li
cp
@
170.891 328.689 mo
169.584 329.415 li
171.036 329.415 li
f
198.914 312.717 mo
198.914 314.024 198.914 315.33 198.914 316.637 cv
@
198.624 316.492 mo
198.914 317.944 li
199.35 316.492 li
cp
@
198.624 316.492 mo
198.914 317.944 li
199.35 316.492 li
f
215.177 311.555 mo
211.692 313.443 207.336 315.911 204.142 317.654 cv
@
204.142 317.218 mo
202.98 318.234 li
204.432 317.944 li
cp
@
204.142 317.218 mo
202.98 318.234 li
204.432 317.944 li
f
113.101 362.956 mo
113.101 361.513 108.876 360.342 103.663 360.342 cv
98.4507 360.342 94.2252 361.513 94.2252 362.956 cv
94.2252 364.399 98.4507 365.57 103.663 365.57 cv
108.876 365.57 113.101 364.399 113.101 362.956 cv
@
113.101 362.956 mo
113.101 361.513 108.876 360.342 103.663 360.342 cv
98.4507 360.342 94.2252 361.513 94.2252 362.956 cv
94.2252 364.399 98.4507 365.57 103.663 365.57 cv
108.876 365.57 113.101 364.399 113.101 362.956 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
95.6744 363.421 mo
(roundrobin\(2,2,2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 .508202 1.0164 .508202 1.0164 0 ]xsh
121.378 354.68 mo
118.038 356.277 113.392 358.455 109.762 360.052 cv
@
109.616 359.762 mo
108.455 360.633 li
109.907 360.342 li
cp
@
109.616 359.762 mo
108.455 360.633 li
109.907 360.342 li
f
183.088 362.956 mo
183.088 361.513 178.862 360.342 173.65 360.342 cv
168.437 360.342 164.212 361.513 164.212 362.956 cv
164.212 364.399 168.437 365.57 173.65 365.57 cv
178.862 365.57 183.088 364.399 183.088 362.956 cv
@
183.088 362.956 mo
183.088 361.513 178.862 360.342 173.65 360.342 cv
168.437 360.342 164.212 361.513 164.212 362.956 cv
164.212 364.399 168.437 365.57 173.65 365.57 cv
178.862 365.57 183.088 364.399 183.088 362.956 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
165.661 363.421 mo
(roundrobin\(2,2,2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
132.703 353.954 mo
141.125 355.696 155.79 359.036 164.938 361.068 cv
@
164.792 361.359 mo
166.244 361.359 li
164.938 360.633 li
cp
@
164.792 361.359 mo
166.244 361.359 li
164.938 360.633 li
f
146.642 398.966 mo
146.642 397.522 143.067 396.352 138.656 396.352 cv
134.246 396.352 130.67 397.522 130.67 398.966 cv
130.67 400.409 134.246 401.579 138.656 401.579 cv
143.067 401.579 146.642 400.409 146.642 398.966 cv
@
146.642 398.966 mo
146.642 397.522 143.067 396.352 138.656 396.352 cv
134.246 396.352 130.67 397.522 130.67 398.966 cv
130.67 400.409 134.246 401.579 138.656 401.579 cv
143.067 401.579 146.642 400.409 146.642 398.966 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
132.192 399.43 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
151.144 410.001 mo
151.144 408.557 145.553 407.387 138.656 407.387 cv
131.76 407.387 126.169 408.557 126.169 410.001 cv
126.169 411.444 131.76 412.614 138.656 412.614 cv
145.553 412.614 151.144 411.444 151.144 410.001 cv
@
151.144 410.001 mo
151.144 408.557 145.553 407.387 138.656 407.387 cv
131.76 407.387 126.169 408.557 126.169 410.001 cv
126.169 411.444 131.76 412.614 138.656 412.614 cv
145.553 412.614 151.144 411.444 151.144 410.001 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
127.619 410.465 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 .508209 1.0164 .508194 1.0164 .508194 1.0164 .508194 1.0164 .508209 1.01639 
.508209 1.0164 0 ]xsh
138.656 401.579 mo
138.656 402.886 138.656 404.483 138.656 405.935 cv
@
138.366 405.935 mo
138.656 407.387 li
139.092 405.935 li
cp
@
138.366 405.935 mo
138.656 407.387 li
139.092 405.935 li
f
67.944 375.734 mo
67.944 373.007 63.3934 370.797 57.78 370.797 cv
52.1666 370.797 47.616 373.007 47.616 375.734 cv
47.616 378.46 52.1666 380.67 57.78 380.67 cv
63.3934 380.67 67.944 378.46 67.944 375.734 cv
@
67.944 375.734 mo
67.944 373.007 63.3934 370.797 57.78 370.797 cv
52.1666 370.797 47.616 373.007 47.616 375.734 cv
47.616 378.46 52.1666 380.67 57.78 380.67 cv
63.3934 380.67 67.944 378.46 67.944 375.734 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
50.0463 373.875 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902531 .676907 .902534 1.24203 1.0164 .902531 1.0164 .902534 
1.0164 1.0164 0 ]xsh
54.1016 376.198 mo
(work=14)
[1.46765 1.0164 .676907 1.0164 1.14649 1.0164 0 ]xsh
53.9604 378.521 mo
(I/O: 2->2)
[.676907 .565117 1.46765 .565121 .508198 1.0164 .67691 1.14649 0 ]xsh
96.1128 364.553 mo
88.272 366.15 76.0752 368.909 68.8152 370.797 cv
68.0892 371.087 67.0728 371.378 66.0564 371.813 cv
@
66.2016 371.378 mo
65.04 372.249 li
66.492 371.958 li
cp
@
66.2016 371.378 mo
65.04 372.249 li
66.492 371.958 li
f
90.8856 375.734 mo
90.8856 373.007 86.335 370.797 80.7216 370.797 cv
75.1082 370.797 70.5576 373.007 70.5576 375.734 cv
70.5576 378.46 75.1082 380.67 80.7216 380.67 cv
86.335 380.67 90.8856 378.46 90.8856 375.734 cv
@
90.8856 375.734 mo
90.8856 373.007 86.335 370.797 80.7216 370.797 cv
75.1082 370.797 70.5576 373.007 70.5576 375.734 cv
70.5576 378.46 75.1082 380.67 80.7216 380.67 cv
86.335 380.67 90.8856 378.46 90.8856 375.734 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
72.988 373.875 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
77.0433 376.198 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
76.9021 378.521 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
99.4524 365.279 mo
96.4032 367.022 92.3376 369.2 88.7076 371.232 cv
@
88.5624 370.942 mo
87.4008 371.958 li
88.8528 371.523 li
cp
@
88.5624 370.942 mo
87.4008 371.958 li
88.8528 371.523 li
f
113.827 375.734 mo
113.827 373.007 109.277 370.797 103.663 370.797 cv
98.0498 370.797 93.4992 373.007 93.4992 375.734 cv
93.4992 378.46 98.0498 380.67 103.663 380.67 cv
109.277 380.67 113.827 378.46 113.827 375.734 cv
@
113.827 375.734 mo
113.827 373.007 109.277 370.797 103.663 370.797 cv
98.0498 370.797 93.4992 373.007 93.4992 375.734 cv
93.4992 378.46 98.0498 380.67 103.663 380.67 cv
109.277 380.67 113.827 378.46 113.827 375.734 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
95.9295 373.875 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
99.9848 376.198 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
99.8436 378.521 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
103.663 365.57 mo
103.663 366.586 103.663 368.038 103.663 369.345 cv
@
103.373 369.345 mo
103.663 370.797 li
104.099 369.345 li
cp
@
103.373 369.345 mo
103.663 370.797 li
104.099 369.345 li
f
136.769 375.734 mo
136.769 373.007 132.218 370.797 126.605 370.797 cv
120.991 370.797 116.441 373.007 116.441 375.734 cv
116.441 378.46 120.991 380.67 126.605 380.67 cv
132.218 380.67 136.769 378.46 136.769 375.734 cv
@
136.769 375.734 mo
136.769 373.007 132.218 370.797 126.605 370.797 cv
120.991 370.797 116.441 373.007 116.441 375.734 cv
116.441 378.46 120.991 380.67 126.605 380.67 cv
132.218 380.67 136.769 378.46 136.769 375.734 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
118.871 373.875 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
122.926 376.198 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
122.785 378.521 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
107.874 365.279 mo
110.923 367.022 114.989 369.2 118.619 371.232 cv
@
118.474 371.523 mo
119.926 371.958 li
118.764 370.942 li
cp
@
118.474 371.523 mo
119.926 371.958 li
118.764 370.942 li
f
113.101 388.511 mo
113.101 387.068 108.876 385.898 103.663 385.898 cv
98.4507 385.898 94.2252 387.068 94.2252 388.511 cv
94.2252 389.955 98.4507 391.125 103.663 391.125 cv
108.876 391.125 113.101 389.955 113.101 388.511 cv
@
113.101 388.511 mo
113.101 387.068 108.876 385.898 103.663 385.898 cv
98.4507 385.898 94.2252 387.068 94.2252 388.511 cv
94.2252 389.955 98.4507 391.125 103.663 391.125 cv
108.876 391.125 113.101 389.955 113.101 388.511 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
95.6744 388.976 mo
(roundrobin\(2,2,2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 .508202 1.0164 .508202 1.0164 0 ]xsh
110.052 390.399 mo
116.15 392.141 125.153 394.9 131.396 396.788 cv
@
131.251 397.078 mo
132.703 397.223 li
131.396 396.352 li
cp
@
131.251 397.078 mo
132.703 397.223 li
131.396 396.352 li
f
65.04 379.218 mo
66.3468 379.799 67.7988 380.38 68.8152 380.67 cv
75.7848 382.558 87.1104 385.026 94.9512 386.624 cv
@
94.5156 386.914 mo
95.9676 386.914 li
94.6608 386.188 li
cp
@
94.5156 386.914 mo
95.9676 386.914 li
94.6608 386.188 li
f
87.4008 379.509 mo
90.8856 381.396 94.9512 383.72 98.2908 385.607 cv
@
98.0004 385.898 mo
99.4524 386.188 li
98.2908 385.172 li
cp
@
98.0004 385.898 mo
99.4524 386.188 li
98.2908 385.172 li
f
103.663 380.67 mo
103.663 381.977 103.663 383.284 103.663 384.591 cv
@
103.373 384.446 mo
103.663 385.898 li
104.099 384.446 li
cp
@
103.373 384.446 mo
103.663 385.898 li
104.099 384.446 li
f
119.926 379.509 mo
116.441 381.396 112.375 383.72 109.036 385.607 cv
@
109.036 385.172 mo
107.874 386.188 li
109.326 385.898 li
cp
@
109.036 385.172 mo
107.874 386.188 li
109.326 385.898 li
f
160.872 375.734 mo
160.872 373.007 156.321 370.797 150.708 370.797 cv
145.095 370.797 140.544 373.007 140.544 375.734 cv
140.544 378.46 145.095 380.67 150.708 380.67 cv
156.321 380.67 160.872 378.46 160.872 375.734 cv
@
160.872 375.734 mo
160.872 373.007 156.321 370.797 150.708 370.797 cv
145.095 370.797 140.544 373.007 140.544 375.734 cv
140.544 378.46 145.095 380.67 150.708 380.67 cv
156.321 380.67 160.872 378.46 160.872 375.734 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
142.974 373.875 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
147.029 376.198 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
146.888 378.521 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
169.439 365.279 mo
166.39 367.022 162.324 369.2 158.694 371.232 cv
@
158.549 370.942 mo
157.387 371.958 li
158.839 371.523 li
cp
@
158.549 370.942 mo
157.387 371.958 li
158.839 371.523 li
f
183.814 375.734 mo
183.814 373.007 179.263 370.797 173.65 370.797 cv
168.036 370.797 163.486 373.007 163.486 375.734 cv
163.486 378.46 168.036 380.67 173.65 380.67 cv
179.263 380.67 183.814 378.46 183.814 375.734 cv
@
183.814 375.734 mo
183.814 373.007 179.263 370.797 173.65 370.797 cv
168.036 370.797 163.486 373.007 163.486 375.734 cv
163.486 378.46 168.036 380.67 173.65 380.67 cv
179.263 380.67 183.814 378.46 183.814 375.734 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
165.916 373.875 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
169.971 376.198 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
169.83 378.521 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
173.65 365.57 mo
173.65 366.586 173.65 368.038 173.65 369.345 cv
@
173.359 369.345 mo
173.65 370.797 li
174.085 369.345 li
cp
@
173.359 369.345 mo
173.65 370.797 li
174.085 369.345 li
f
206.755 375.734 mo
206.755 373.007 202.205 370.797 196.591 370.797 cv
190.978 370.797 186.427 373.007 186.427 375.734 cv
186.427 378.46 190.978 380.67 196.591 380.67 cv
202.205 380.67 206.755 378.46 206.755 375.734 cv
@
206.755 375.734 mo
206.755 373.007 202.205 370.797 196.591 370.797 cv
190.978 370.797 186.427 373.007 186.427 375.734 cv
186.427 378.46 190.978 380.67 196.591 380.67 cv
202.205 380.67 206.755 378.46 206.755 375.734 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
188.858 373.875 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
192.913 376.198 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
192.772 378.521 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
177.86 365.279 mo
180.91 367.022 184.975 369.2 188.605 371.232 cv
@
188.46 371.523 mo
189.912 371.958 li
188.75 370.942 li
cp
@
188.46 371.523 mo
189.912 371.958 li
188.75 370.942 li
f
229.697 375.734 mo
229.697 373.007 225.146 370.797 219.533 370.797 cv
213.919 370.797 209.369 373.007 209.369 375.734 cv
209.369 378.46 213.919 380.67 219.533 380.67 cv
225.146 380.67 229.697 378.46 229.697 375.734 cv
@
229.697 375.734 mo
229.697 373.007 225.146 370.797 219.533 370.797 cv
213.919 370.797 209.369 373.007 209.369 375.734 cv
209.369 378.46 213.919 380.67 219.533 380.67 cv
225.146 380.67 229.697 378.46 229.697 375.734 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
211.799 373.875 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
215.854 376.198 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
215.713 378.521 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
181.2 364.553 mo
189.041 366.15 201.238 368.909 208.498 370.797 cv
209.224 371.087 210.24 371.378 211.256 371.813 cv
@
210.821 371.958 mo
212.273 372.249 li
211.111 371.378 li
cp
@
210.821 371.958 mo
212.273 372.249 li
211.111 371.378 li
f
183.088 388.511 mo
183.088 387.068 178.862 385.898 173.65 385.898 cv
168.437 385.898 164.212 387.068 164.212 388.511 cv
164.212 389.955 168.437 391.125 173.65 391.125 cv
178.862 391.125 183.088 389.955 183.088 388.511 cv
@
183.088 388.511 mo
183.088 387.068 178.862 385.898 173.65 385.898 cv
168.437 385.898 164.212 387.068 164.212 388.511 cv
164.212 389.955 168.437 391.125 173.65 391.125 cv
178.862 391.125 183.088 389.955 183.088 388.511 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
165.661 388.976 mo
(roundrobin\(2,2,2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
167.261 390.399 mo
161.162 392.141 152.16 394.9 145.916 396.788 cv
@
145.916 396.352 mo
144.61 397.223 li
146.062 397.078 li
cp
@
145.916 396.352 mo
144.61 397.223 li
146.062 397.078 li
f
157.387 379.509 mo
160.872 381.396 164.938 383.72 168.277 385.607 cv
@
167.987 385.898 mo
169.439 386.188 li
168.277 385.172 li
cp
@
167.987 385.898 mo
169.439 386.188 li
168.277 385.172 li
f
173.65 380.67 mo
173.65 381.977 173.65 383.284 173.65 384.591 cv
@
173.359 384.446 mo
173.65 385.898 li
174.085 384.446 li
cp
@
173.359 384.446 mo
173.65 385.898 li
174.085 384.446 li
f
189.912 379.509 mo
186.427 381.396 182.362 383.72 179.022 385.607 cv
@
179.022 385.172 mo
177.86 386.188 li
179.312 385.898 li
cp
@
179.022 385.172 mo
177.86 386.188 li
179.312 385.898 li
f
212.273 379.218 mo
210.966 379.799 209.514 380.38 208.498 380.67 cv
201.528 382.558 190.202 385.026 182.362 386.624 cv
@
182.652 386.188 mo
181.345 386.914 li
182.797 386.914 li
cp
@
182.652 386.188 mo
181.345 386.914 li
182.797 386.914 li
f
68.5248 422.778 mo
68.5248 420.052 63.9742 417.842 58.3608 417.842 cv
52.7474 417.842 48.1968 420.052 48.1968 422.778 cv
48.1968 425.505 52.7474 427.715 58.3608 427.715 cv
63.9742 427.715 68.5248 425.505 68.5248 422.778 cv
@
68.5248 422.778 mo
68.5248 420.052 63.9742 417.842 58.3608 417.842 cv
52.7474 417.842 48.1968 420.052 48.1968 422.778 cv
48.1968 425.505 52.7474 427.715 58.3608 427.715 cv
63.9742 427.715 68.5248 425.505 68.5248 422.778 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
50.6272 420.92 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902531 .676907 .902534 1.24203 1.0164 .902531 1.0164 .902534 
1.0164 1.0164 0 ]xsh
54.6825 423.243 mo
(work=14)
[1.46765 1.0164 .676907 1.0164 1.14649 1.0164 0 ]xsh
54.5413 425.566 mo
(I/O: 2->2)
[.676907 .565117 1.46765 .565121 .508198 1.0164 .67691 1.14649 0 ]xsh
127.186 411.017 mo
112.085 412.614 85.2228 415.373 69.396 417.842 cv
68.5248 417.987 67.3632 418.277 66.3468 418.713 cv
@
66.492 418.277 mo
65.3304 419.148 li
66.7824 418.858 li
cp
@
66.492 418.277 mo
65.3304 419.148 li
66.7824 418.858 li
f
91.4664 422.778 mo
91.4664 420.052 86.9158 417.842 81.3024 417.842 cv
75.689 417.842 71.1384 420.052 71.1384 422.778 cv
71.1384 425.505 75.689 427.715 81.3024 427.715 cv
86.9158 427.715 91.4664 425.505 91.4664 422.778 cv
@
91.4664 422.778 mo
91.4664 420.052 86.9158 417.842 81.3024 417.842 cv
75.689 417.842 71.1384 420.052 71.1384 422.778 cv
71.1384 425.505 75.689 427.715 81.3024 427.715 cv
86.9158 427.715 91.4664 425.505 91.4664 422.778 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
73.5688 420.92 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
77.6241 423.243 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
77.4829 425.566 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
128.492 411.598 mo
118.038 413.195 102.066 415.664 92.3376 417.842 cv
91.4664 418.132 90.45 418.422 89.4336 418.858 cv
@
89.5788 418.422 mo
88.4172 419.294 li
89.8692 419.003 li
cp
@
89.5788 418.422 mo
88.4172 419.294 li
89.8692 419.003 li
f
114.408 422.778 mo
114.408 420.052 109.857 417.842 104.244 417.842 cv
98.6306 417.842 94.08 420.052 94.08 422.778 cv
94.08 425.505 98.6306 427.715 104.244 427.715 cv
109.857 427.715 114.408 425.505 114.408 422.778 cv
@
114.408 422.778 mo
114.408 420.052 109.857 417.842 104.244 417.842 cv
98.6306 417.842 94.08 420.052 94.08 422.778 cv
94.08 425.505 98.6306 427.715 104.244 427.715 cv
109.857 427.715 114.408 425.505 114.408 422.778 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
96.5104 420.92 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
100.566 423.243 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
100.424 425.566 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
131.977 412.179 mo
126.75 413.921 119.78 416.244 115.279 417.842 cv
114.553 418.132 113.537 418.568 112.666 419.003 cv
@
112.811 418.568 mo
111.649 419.439 li
113.101 419.148 li
cp
@
112.811 418.568 mo
111.649 419.439 li
113.101 419.148 li
f
137.35 422.778 mo
137.35 420.052 132.799 417.842 127.186 417.842 cv
121.572 417.842 117.022 420.052 117.022 422.778 cv
117.022 425.505 121.572 427.715 127.186 427.715 cv
132.799 427.715 137.35 425.505 137.35 422.778 cv
@
137.35 422.778 mo
137.35 420.052 132.799 417.842 127.186 417.842 cv
121.572 417.842 117.022 420.052 117.022 422.778 cv
117.022 425.505 121.572 427.715 127.186 427.715 cv
132.799 427.715 137.35 425.505 137.35 422.778 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
119.452 420.92 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902527 1.0164 .902527 
1.0164 1.0164 0 ]xsh
123.507 423.243 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14649 1.01639 0 ]xsh
123.366 425.566 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .676895 1.1465 0 ]xsh
136.333 412.614 mo
135.172 413.921 133.72 415.518 132.268 417.116 cv
@
131.977 416.97 mo
131.251 418.277 li
132.413 417.406 li
cp
@
131.977 416.97 mo
131.251 418.277 li
132.413 417.406 li
f
160.291 422.778 mo
160.291 420.052 155.741 417.842 150.127 417.842 cv
144.514 417.842 139.963 420.052 139.963 422.778 cv
139.963 425.505 144.514 427.715 150.127 427.715 cv
155.741 427.715 160.291 425.505 160.291 422.778 cv
@
160.291 422.778 mo
160.291 420.052 155.741 417.842 150.127 417.842 cv
144.514 417.842 139.963 420.052 139.963 422.778 cv
139.963 425.505 144.514 427.715 150.127 427.715 cv
155.741 427.715 160.291 425.505 160.291 422.778 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
142.394 420.92 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
146.449 423.243 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
146.308 425.566 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
140.98 412.614 mo
142.141 413.921 143.593 415.518 145.045 417.116 cv
@
144.9 417.406 mo
146.062 418.277 li
145.336 416.97 li
cp
@
144.9 417.406 mo
146.062 418.277 li
145.336 416.97 li
f
183.233 422.778 mo
183.233 420.052 178.682 417.842 173.069 417.842 cv
167.455 417.842 162.905 420.052 162.905 422.778 cv
162.905 425.505 167.455 427.715 173.069 427.715 cv
178.682 427.715 183.233 425.505 183.233 422.778 cv
@
183.233 422.778 mo
183.233 420.052 178.682 417.842 173.069 417.842 cv
167.455 417.842 162.905 420.052 162.905 422.778 cv
162.905 425.505 167.455 427.715 173.069 427.715 cv
178.682 427.715 183.233 425.505 183.233 422.778 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
165.335 420.92 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
169.39 423.243 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
169.249 425.566 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
145.481 412.179 mo
150.563 413.921 157.678 416.244 162.034 417.842 cv
162.614 418.132 163.486 418.422 164.212 418.713 cv
@
164.212 419.148 mo
165.664 419.294 li
164.502 418.422 li
cp
@
164.212 419.148 mo
165.664 419.294 li
164.502 418.422 li
f
206.174 422.778 mo
206.174 420.052 201.624 417.842 196.01 417.842 cv
190.397 417.842 185.846 420.052 185.846 422.778 cv
185.846 425.505 190.397 427.715 196.01 427.715 cv
201.624 427.715 206.174 425.505 206.174 422.778 cv
@
206.174 422.778 mo
206.174 420.052 201.624 417.842 196.01 417.842 cv
190.397 417.842 185.846 420.052 185.846 422.778 cv
185.846 425.505 190.397 427.715 196.01 427.715 cv
201.624 427.715 206.174 425.505 206.174 422.778 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
188.277 420.92 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
192.332 423.243 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
192.191 425.566 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
148.82 411.598 mo
159.275 413.195 175.247 415.664 184.975 417.842 cv
185.846 418.132 186.863 418.422 187.879 418.858 cv
@
187.444 419.003 mo
188.896 419.294 li
187.734 418.422 li
cp
@
187.444 419.003 mo
188.896 419.294 li
187.734 418.422 li
f
229.116 422.778 mo
229.116 420.052 224.565 417.842 218.952 417.842 cv
213.339 417.842 208.788 420.052 208.788 422.778 cv
208.788 425.505 213.339 427.715 218.952 427.715 cv
224.565 427.715 229.116 425.505 229.116 422.778 cv
@
229.116 422.778 mo
229.116 420.052 224.565 417.842 218.952 417.842 cv
213.339 417.842 208.788 420.052 208.788 422.778 cv
208.788 425.505 213.339 427.715 218.952 427.715 cv
224.565 427.715 229.116 425.505 229.116 422.778 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
211.218 420.92 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
215.273 423.243 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
215.132 425.566 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
149.982 411.017 mo
165.228 412.614 192.09 415.373 207.917 417.842 cv
208.788 417.987 209.95 418.277 210.966 418.713 cv
@
210.53 418.858 mo
211.982 419.148 li
210.821 418.277 li
cp
@
210.53 418.858 mo
211.982 419.148 li
210.821 418.277 li
f
151.144 435.556 mo
151.144 434.113 145.553 432.942 138.656 432.942 cv
131.76 432.942 126.169 434.113 126.169 435.556 cv
126.169 436.999 131.76 438.17 138.656 438.17 cv
145.553 438.17 151.144 436.999 151.144 435.556 cv
@
151.144 435.556 mo
151.144 434.113 145.553 432.942 138.656 432.942 cv
131.76 432.942 126.169 434.113 126.169 435.556 cv
126.169 436.999 131.76 438.17 138.656 438.17 cv
145.553 438.17 151.144 436.999 151.144 435.556 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
127.619 436.021 mo
(roundrobin\(1,1,1,1,1,1,1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 .508209 1.0164 .508194 1.0164 .508194 1.0164 .508194 1.0164 .508209 1.01639 
.508209 1.0164 0 ]xsh
146.642 446.591 mo
146.642 445.148 143.067 443.978 138.656 443.978 cv
134.246 443.978 130.67 445.148 130.67 446.591 cv
130.67 448.035 134.246 449.205 138.656 449.205 cv
143.067 449.205 146.642 448.035 146.642 446.591 cv
@
146.642 446.591 mo
146.642 445.148 143.067 443.978 138.656 443.978 cv
134.246 443.978 130.67 445.148 130.67 446.591 cv
130.67 448.035 134.246 449.205 138.656 449.205 cv
143.067 449.205 146.642 448.035 146.642 446.591 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
132.192 447.056 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
138.656 438.17 mo
138.656 439.476 138.656 441.074 138.656 442.526 cv
@
138.366 442.526 mo
138.656 443.978 li
139.092 442.526 li
cp
@
138.366 442.526 mo
138.656 443.978 li
139.092 442.526 li
f
65.3304 426.408 mo
66.7824 426.989 68.2344 427.57 69.396 427.715 cv
84.7872 430.184 110.342 432.942 125.734 434.394 cv
@
125.734 434.685 mo
127.186 434.54 li
125.734 434.104 li
cp
@
125.734 434.685 mo
127.186 434.54 li
125.734 434.104 li
f
88.4172 426.263 mo
89.8692 426.989 91.176 427.425 92.3376 427.715 cv
101.63 429.748 116.586 432.216 126.895 433.814 cv
@
126.895 434.104 mo
128.347 434.104 li
127.04 433.523 li
cp
@
126.895 434.104 mo
128.347 434.104 li
127.04 433.523 li
f
111.504 426.263 mo
112.956 426.844 114.263 427.425 115.279 427.715 cv
119.49 429.167 125.879 431.345 130.816 433.088 cv
@
130.38 433.378 mo
131.832 433.378 li
130.525 432.652 li
cp
@
130.38 433.378 mo
131.832 433.378 li
130.525 432.652 li
f
131.251 427.28 mo
132.703 428.877 134.155 430.474 135.462 431.926 cv
@
135.172 432.071 mo
136.333 432.942 li
135.607 431.636 li
cp
@
135.172 432.071 mo
136.333 432.942 li
135.607 431.636 li
f
146.062 427.28 mo
144.61 428.877 143.158 430.474 141.851 431.926 cv
@
141.706 431.636 mo
140.98 432.942 li
142.141 432.071 li
cp
@
141.706 431.636 mo
140.98 432.942 li
142.141 432.071 li
f
165.809 426.263 mo
164.357 426.844 163.05 427.425 162.034 427.715 cv
157.968 429.167 151.579 431.345 146.497 433.088 cv
@
146.788 432.652 mo
145.481 433.378 li
146.933 433.378 li
cp
@
146.788 432.652 mo
145.481 433.378 li
146.933 433.378 li
f
188.896 426.408 mo
187.589 426.989 186.137 427.425 184.975 427.715 cv
175.682 429.893 160.291 432.362 149.837 433.959 cv
@
150.272 433.523 mo
148.966 434.104 li
150.418 434.249 li
cp
@
150.272 433.523 mo
148.966 434.104 li
150.418 434.249 li
f
211.982 426.408 mo
210.53 426.989 209.078 427.57 207.917 427.715 cv
192.526 430.184 166.97 432.942 151.579 434.394 cv
@
151.579 434.104 mo
150.127 434.54 li
151.579 434.685 li
cp
@
151.579 434.104 mo
150.127 434.54 li
151.579 434.685 li
f
115.134 457.046 mo
115.134 455.602 110.908 454.432 105.696 454.432 cv
100.484 454.432 96.258 455.602 96.258 457.046 cv
96.258 458.489 100.484 459.659 105.696 459.659 cv
110.908 459.659 115.134 458.489 115.134 457.046 cv
@
115.134 457.046 mo
115.134 455.602 110.908 454.432 105.696 454.432 cv
100.484 454.432 96.258 455.602 96.258 457.046 cv
96.258 458.489 100.484 459.659 105.696 459.659 cv
110.908 459.659 115.134 458.489 115.134 457.046 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.7073 457.51 mo
(roundrobin\(1,1,1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 .508202 1.0164 .508202 1.0164 0 ]xsh
132.848 448.479 mo
127.476 450.076 119.054 452.69 113.101 454.577 cv
@
113.101 454.142 mo
111.94 455.013 li
113.392 454.868 li
cp
@
113.101 454.142 mo
111.94 455.013 li
113.392 454.868 li
f
185.12 457.046 mo
185.12 455.602 180.895 454.432 175.682 454.432 cv
170.47 454.432 166.244 455.602 166.244 457.046 cv
166.244 458.489 170.47 459.659 175.682 459.659 cv
180.895 459.659 185.12 458.489 185.12 457.046 cv
@
185.12 457.046 mo
185.12 455.602 180.895 454.432 175.682 454.432 cv
170.47 454.432 166.244 455.602 166.244 457.046 cv
166.244 458.489 170.47 459.659 175.682 459.659 cv
180.895 459.659 185.12 458.489 185.12 457.046 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
167.694 457.51 mo
(roundrobin\(1,1,1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
144.755 448.334 mo
150.998 450.076 160.727 452.835 167.551 454.722 cv
@
167.551 455.158 mo
169.003 455.158 li
167.696 454.432 li
cp
@
167.551 455.158 mo
169.003 455.158 li
167.696 454.432 li
f
114.844 493.055 mo
114.844 491.612 111.268 490.442 106.858 490.442 cv
102.447 490.442 98.8716 491.612 98.8716 493.055 cv
98.8716 494.499 102.447 495.669 106.858 495.669 cv
111.268 495.669 114.844 494.499 114.844 493.055 cv
@
114.844 493.055 mo
114.844 491.612 111.268 490.442 106.858 490.442 cv
102.447 490.442 98.8716 491.612 98.8716 493.055 cv
98.8716 494.499 102.447 495.669 106.858 495.669 cv
111.268 495.669 114.844 494.499 114.844 493.055 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
100.393 493.52 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
114.844 504.09 mo
114.844 502.647 111.268 501.477 106.858 501.477 cv
102.447 501.477 98.8716 502.647 98.8716 504.09 cv
98.8716 505.534 102.447 506.704 106.858 506.704 cv
111.268 506.704 114.844 505.534 114.844 504.09 cv
@
114.844 504.09 mo
114.844 502.647 111.268 501.477 106.858 501.477 cv
102.447 501.477 98.8716 502.647 98.8716 504.09 cv
98.8716 505.534 102.447 506.704 106.858 506.704 cv
111.268 506.704 114.844 505.534 114.844 504.09 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
100.393 504.555 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
106.858 495.669 mo
106.858 496.976 106.858 498.573 106.858 500.025 cv
@
106.567 500.025 mo
106.858 501.477 li
107.293 500.025 li
cp
@
106.567 500.025 mo
106.858 501.477 li
107.293 500.025 li
f
69.9768 469.823 mo
69.9768 467.097 65.4262 464.886 59.8128 464.886 cv
54.1994 464.886 49.6488 467.097 49.6488 469.823 cv
49.6488 472.55 54.1994 474.76 59.8128 474.76 cv
65.4262 474.76 69.9768 472.55 69.9768 469.823 cv
@
69.9768 469.823 mo
69.9768 467.097 65.4262 464.886 59.8128 464.886 cv
54.1994 464.886 49.6488 467.097 49.6488 469.823 cv
49.6488 472.55 54.1994 474.76 59.8128 474.76 cv
65.4262 474.76 69.9768 472.55 69.9768 469.823 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
52.0792 467.965 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902531 .67691 .902531 1.24202 1.0164 .902531 1.0164 .902534 
1.0164 1.0164 0 ]xsh
56.1345 470.288 mo
(work=14)
[1.46765 1.0164 .676907 1.0164 1.14649 1.0164 0 ]xsh
55.9933 472.611 mo
(I/O: 2->2)
[.676907 .565121 1.46765 .565121 .508198 1.0164 .67691 1.14649 0 ]xsh
98.1456 458.643 mo
90.3048 460.24 78.108 462.999 70.848 464.886 cv
70.122 465.177 69.1056 465.467 68.0892 465.903 cv
@
68.2344 465.467 mo
67.0728 466.338 li
68.5248 466.048 li
cp
@
68.2344 465.467 mo
67.0728 466.338 li
68.5248 466.048 li
f
92.9184 469.823 mo
92.9184 467.097 88.3678 464.886 82.7544 464.886 cv
77.141 464.886 72.5904 467.097 72.5904 469.823 cv
72.5904 472.55 77.141 474.76 82.7544 474.76 cv
88.3678 474.76 92.9184 472.55 92.9184 469.823 cv
@
92.9184 469.823 mo
92.9184 467.097 88.3678 464.886 82.7544 464.886 cv
77.141 464.886 72.5904 467.097 72.5904 469.823 cv
72.5904 472.55 77.141 474.76 82.7544 474.76 cv
88.3678 474.76 92.9184 472.55 92.9184 469.823 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
75.0208 467.965 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
79.0761 470.288 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
78.9349 472.611 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
101.485 459.369 mo
98.436 461.111 94.3704 463.289 90.7404 465.322 cv
@
90.5952 465.032 mo
89.4336 466.048 li
90.8856 465.612 li
cp
@
90.5952 465.032 mo
89.4336 466.048 li
90.8856 465.612 li
f
115.86 469.823 mo
115.86 467.097 111.309 464.886 105.696 464.886 cv
100.083 464.886 95.532 467.097 95.532 469.823 cv
95.532 472.55 100.083 474.76 105.696 474.76 cv
111.309 474.76 115.86 472.55 115.86 469.823 cv
@
115.86 469.823 mo
115.86 467.097 111.309 464.886 105.696 464.886 cv
100.083 464.886 95.532 467.097 95.532 469.823 cv
95.532 472.55 100.083 474.76 105.696 474.76 cv
111.309 474.76 115.86 472.55 115.86 469.823 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.9624 467.965 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
102.018 470.288 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
101.876 472.611 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
105.696 459.659 mo
105.696 460.676 105.696 462.128 105.696 463.434 cv
@
105.406 463.434 mo
105.696 464.886 li
106.132 463.434 li
cp
@
105.406 463.434 mo
105.696 464.886 li
106.132 463.434 li
f
138.802 469.823 mo
138.802 467.097 134.251 464.886 128.638 464.886 cv
123.024 464.886 118.474 467.097 118.474 469.823 cv
118.474 472.55 123.024 474.76 128.638 474.76 cv
134.251 474.76 138.802 472.55 138.802 469.823 cv
@
138.802 469.823 mo
138.802 467.097 134.251 464.886 128.638 464.886 cv
123.024 464.886 118.474 467.097 118.474 469.823 cv
118.474 472.55 123.024 474.76 128.638 474.76 cv
134.251 474.76 138.802 472.55 138.802 469.823 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
120.904 467.965 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902527 1.0164 .902527 
1.0164 1.0164 0 ]xsh
124.959 470.288 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
124.818 472.611 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565109 .508209 1.0164 .676895 1.1465 0 ]xsh
109.907 459.369 mo
112.956 461.111 117.022 463.289 120.652 465.322 cv
@
120.506 465.612 mo
121.958 466.048 li
120.797 465.032 li
cp
@
120.506 465.612 mo
121.958 466.048 li
120.797 465.032 li
f
115.134 482.601 mo
115.134 481.157 110.908 479.987 105.696 479.987 cv
100.484 479.987 96.258 481.157 96.258 482.601 cv
96.258 484.044 100.484 485.214 105.696 485.214 cv
110.908 485.214 115.134 484.044 115.134 482.601 cv
@
115.134 482.601 mo
115.134 481.157 110.908 479.987 105.696 479.987 cv
100.484 479.987 96.258 481.157 96.258 482.601 cv
96.258 484.044 100.484 485.214 105.696 485.214 cv
110.908 485.214 115.134 484.044 115.134 482.601 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.7073 483.065 mo
(roundrobin\(1,1,1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 .508202 1.0164 .508202 1.0164 0 ]xsh
105.986 485.214 mo
106.132 486.376 106.277 487.828 106.422 488.99 cv
@
106.132 488.99 mo
106.567 490.442 li
106.712 488.99 li
cp
@
106.132 488.99 mo
106.567 490.442 li
106.712 488.99 li
f
67.0728 473.308 mo
68.3796 473.889 69.8316 474.47 70.848 474.76 cv
77.8176 476.648 89.1432 479.116 96.984 480.713 cv
@
96.5484 481.004 mo
98.0004 481.004 li
96.6936 480.278 li
cp
@
96.5484 481.004 mo
98.0004 481.004 li
96.6936 480.278 li
f
89.4336 473.598 mo
92.9184 475.486 96.984 477.809 100.324 479.697 cv
@
100.033 479.987 mo
101.485 480.278 li
100.324 479.261 li
cp
@
100.033 479.987 mo
101.485 480.278 li
100.324 479.261 li
f
105.696 474.76 mo
105.696 476.067 105.696 477.374 105.696 478.68 cv
@
105.406 478.535 mo
105.696 479.987 li
106.132 478.535 li
cp
@
105.406 478.535 mo
105.696 479.987 li
106.132 478.535 li
f
121.958 473.598 mo
118.474 475.486 114.408 477.809 111.068 479.697 cv
@
111.068 479.261 mo
109.907 480.278 li
111.359 479.987 li
cp
@
111.068 479.261 mo
109.907 480.278 li
111.359 479.987 li
f
162.905 469.823 mo
162.905 467.097 158.354 464.886 152.741 464.886 cv
147.127 464.886 142.577 467.097 142.577 469.823 cv
142.577 472.55 147.127 474.76 152.741 474.76 cv
158.354 474.76 162.905 472.55 162.905 469.823 cv
@
162.905 469.823 mo
162.905 467.097 158.354 464.886 152.741 464.886 cv
147.127 464.886 142.577 467.097 142.577 469.823 cv
142.577 472.55 147.127 474.76 152.741 474.76 cv
158.354 474.76 162.905 472.55 162.905 469.823 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
145.007 467.965 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
149.062 470.288 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
148.921 472.611 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
171.472 459.369 mo
168.422 461.111 164.357 463.289 160.727 465.322 cv
@
160.582 465.032 mo
159.42 466.048 li
160.872 465.612 li
cp
@
160.582 465.032 mo
159.42 466.048 li
160.872 465.612 li
f
185.846 469.823 mo
185.846 467.097 181.296 464.886 175.682 464.886 cv
170.069 464.886 165.518 467.097 165.518 469.823 cv
165.518 472.55 170.069 474.76 175.682 474.76 cv
181.296 474.76 185.846 472.55 185.846 469.823 cv
@
185.846 469.823 mo
185.846 467.097 181.296 464.886 175.682 464.886 cv
170.069 464.886 165.518 467.097 165.518 469.823 cv
165.518 472.55 170.069 474.76 175.682 474.76 cv
181.296 474.76 185.846 472.55 185.846 469.823 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
167.949 467.965 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
172.004 470.288 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
171.863 472.611 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
175.682 459.659 mo
175.682 460.676 175.682 462.128 175.682 463.434 cv
@
175.392 463.434 mo
175.682 464.886 li
176.118 463.434 li
cp
@
175.392 463.434 mo
175.682 464.886 li
176.118 463.434 li
f
208.788 469.823 mo
208.788 467.097 204.237 464.886 198.624 464.886 cv
193.011 464.886 188.46 467.097 188.46 469.823 cv
188.46 472.55 193.011 474.76 198.624 474.76 cv
204.237 474.76 208.788 472.55 208.788 469.823 cv
@
208.788 469.823 mo
208.788 467.097 204.237 464.886 198.624 464.886 cv
193.011 464.886 188.46 467.097 188.46 469.823 cv
188.46 472.55 193.011 474.76 198.624 474.76 cv
204.237 474.76 208.788 472.55 208.788 469.823 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
190.89 467.965 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
194.945 470.288 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
194.804 472.611 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
179.893 459.369 mo
182.942 461.111 187.008 463.289 190.638 465.322 cv
@
190.493 465.612 mo
191.945 466.048 li
190.783 465.032 li
cp
@
190.493 465.612 mo
191.945 466.048 li
190.783 465.032 li
f
231.73 469.823 mo
231.73 467.097 227.179 464.886 221.566 464.886 cv
215.952 464.886 211.402 467.097 211.402 469.823 cv
211.402 472.55 215.952 474.76 221.566 474.76 cv
227.179 474.76 231.73 472.55 231.73 469.823 cv
@
231.73 469.823 mo
231.73 467.097 227.179 464.886 221.566 464.886 cv
215.952 464.886 211.402 467.097 211.402 469.823 cv
211.402 472.55 215.952 474.76 221.566 474.76 cv
227.179 474.76 231.73 472.55 231.73 469.823 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
213.832 467.965 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
217.887 470.288 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
217.746 472.611 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
183.233 458.643 mo
191.074 460.24 203.27 462.999 210.53 464.886 cv
211.256 465.177 212.273 465.467 213.289 465.903 cv
@
212.854 466.048 mo
214.306 466.338 li
213.144 465.467 li
cp
@
212.854 466.048 mo
214.306 466.338 li
213.144 465.467 li
f
185.12 482.601 mo
185.12 481.157 180.895 479.987 175.682 479.987 cv
170.47 479.987 166.244 481.157 166.244 482.601 cv
166.244 484.044 170.47 485.214 175.682 485.214 cv
180.895 485.214 185.12 484.044 185.12 482.601 cv
@
185.12 482.601 mo
185.12 481.157 180.895 479.987 175.682 479.987 cv
170.47 479.987 166.244 481.157 166.244 482.601 cv
166.244 484.044 170.47 485.214 175.682 485.214 cv
180.895 485.214 185.12 484.044 185.12 482.601 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
167.694 483.065 mo
(roundrobin\(1,1,1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
167.406 483.908 mo
154.193 485.94 128.638 489.716 115.279 491.748 cv
@
115.57 491.313 mo
114.118 491.894 li
115.57 492.039 li
cp
@
115.57 491.313 mo
114.118 491.894 li
115.57 492.039 li
f
159.42 473.598 mo
162.905 475.486 166.97 477.809 170.31 479.697 cv
@
170.02 479.987 mo
171.472 480.278 li
170.31 479.261 li
cp
@
170.02 479.987 mo
171.472 480.278 li
170.31 479.261 li
f
175.682 474.76 mo
175.682 476.067 175.682 477.374 175.682 478.68 cv
@
175.392 478.535 mo
175.682 479.987 li
176.118 478.535 li
cp
@
175.392 478.535 mo
175.682 479.987 li
176.118 478.535 li
f
191.945 473.598 mo
188.46 475.486 184.394 477.809 181.055 479.697 cv
@
181.055 479.261 mo
179.893 480.278 li
181.345 479.987 li
cp
@
181.055 479.261 mo
179.893 480.278 li
181.345 479.987 li
f
214.306 473.308 mo
212.999 473.889 211.547 474.47 210.53 474.76 cv
203.561 476.648 192.235 479.116 184.394 480.713 cv
@
184.685 480.278 mo
183.378 481.004 li
184.83 481.004 li
cp
@
184.685 480.278 mo
183.378 481.004 li
184.83 481.004 li
f
111.94 514.545 mo
111.94 513.101 108.364 511.931 103.954 511.931 cv
99.5431 511.931 95.9676 513.101 95.9676 514.545 cv
95.9676 515.988 99.5431 517.158 103.954 517.158 cv
108.364 517.158 111.94 515.988 111.94 514.545 cv
@
111.94 514.545 mo
111.94 513.101 108.364 511.931 103.954 511.931 cv
99.5431 511.931 95.9676 513.101 95.9676 514.545 cv
95.9676 515.988 99.5431 517.158 103.954 517.158 cv
108.364 517.158 111.94 515.988 111.94 514.545 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.4894 515.009 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
106.132 506.704 mo
105.841 507.866 105.406 509.318 105.115 510.624 cv
@
104.825 510.479 mo
104.68 511.931 li
105.551 510.624 li
cp
@
104.825 510.479 mo
104.68 511.931 li
105.551 510.624 li
f
171.326 514.545 mo
171.326 513.101 167.751 511.931 163.34 511.931 cv
158.93 511.931 155.354 513.101 155.354 514.545 cv
155.354 515.988 158.93 517.158 163.34 517.158 cv
167.751 517.158 171.326 515.988 171.326 514.545 cv
@
171.326 514.545 mo
171.326 513.101 167.751 511.931 163.34 511.931 cv
158.93 511.931 155.354 513.101 155.354 514.545 cv
155.354 515.988 158.93 517.158 163.34 517.158 cv
167.751 517.158 171.326 515.988 171.326 514.545 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 515.009 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
114.408 504.962 mo
121.958 505.833 133.284 507.14 140.108 508.446 cv
144.61 509.463 151.144 511.06 156.226 512.512 cv
@
155.79 512.802 mo
157.242 512.802 li
155.935 512.076 li
cp
@
155.79 512.802 mo
157.242 512.802 li
155.935 512.076 li
f
146.642 571.463 mo
146.642 570.02 143.067 568.85 138.656 568.85 cv
134.246 568.85 130.67 570.02 130.67 571.463 cv
130.67 572.907 134.246 574.077 138.656 574.077 cv
143.067 574.077 146.642 572.907 146.642 571.463 cv
@
146.642 571.463 mo
146.642 570.02 143.067 568.85 138.656 568.85 cv
134.246 568.85 130.67 570.02 130.67 571.463 cv
130.67 572.907 134.246 574.077 138.656 574.077 cv
143.067 574.077 146.642 572.907 146.642 571.463 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
132.192 571.928 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
146.642 582.498 mo
146.642 581.055 143.067 579.885 138.656 579.885 cv
134.246 579.885 130.67 581.055 130.67 582.498 cv
130.67 583.942 134.246 585.112 138.656 585.112 cv
143.067 585.112 146.642 583.942 146.642 582.498 cv
@
146.642 582.498 mo
146.642 581.055 143.067 579.885 138.656 579.885 cv
134.246 579.885 130.67 581.055 130.67 582.498 cv
130.67 583.942 134.246 585.112 138.656 585.112 cv
143.067 585.112 146.642 583.942 146.642 582.498 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
132.192 582.963 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
138.656 574.077 mo
138.656 575.384 138.656 576.981 138.656 578.433 cv
@
138.366 578.433 mo
138.656 579.885 li
139.092 578.433 li
cp
@
138.366 578.433 mo
138.656 579.885 li
139.092 578.433 li
f
86.3844 524.999 mo
86.3844 523.556 82.8089 522.386 78.3984 522.386 cv
73.9879 522.386 70.4124 523.556 70.4124 524.999 cv
70.4124 526.443 73.9879 527.613 78.3984 527.613 cv
82.8089 527.613 86.3844 526.443 86.3844 524.999 cv
@
86.3844 524.999 mo
86.3844 523.556 82.8089 522.386 78.3984 522.386 cv
73.9879 522.386 70.4124 523.556 70.4124 524.999 cv
70.4124 526.443 73.9879 527.613 78.3984 527.613 cv
82.8089 527.613 86.3844 526.443 86.3844 524.999 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
71.9342 525.464 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
98.0004 516.287 mo
95.2416 517.158 92.1924 518.175 90.1596 518.901 cv
88.4172 519.627 85.6584 521.079 83.3352 522.24 cv
@
83.6256 521.66 mo
82.464 522.676 li
83.916 522.386 li
cp
@
83.6256 521.66 mo
82.464 522.676 li
83.916 522.386 li
f
111.94 524.999 mo
111.94 523.556 108.364 522.386 103.954 522.386 cv
99.5431 522.386 95.9676 523.556 95.9676 524.999 cv
95.9676 526.443 99.5431 527.613 103.954 527.613 cv
108.364 527.613 111.94 526.443 111.94 524.999 cv
@
111.94 524.999 mo
111.94 523.556 108.364 522.386 103.954 522.386 cv
99.5431 522.386 95.9676 523.556 95.9676 524.999 cv
95.9676 526.443 99.5431 527.613 103.954 527.613 cv
108.364 527.613 111.94 526.443 111.94 524.999 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
97.4894 525.464 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
103.954 517.158 mo
103.954 518.32 103.954 519.627 103.954 520.934 cv
@
103.663 520.934 mo
103.954 522.386 li
104.389 520.934 li
cp
@
103.663 520.934 mo
103.954 522.386 li
104.389 520.934 li
f
121.958 561.009 mo
121.958 559.565 118.383 558.395 113.972 558.395 cv
109.562 558.395 105.986 559.565 105.986 561.009 cv
105.986 562.452 109.562 563.622 113.972 563.622 cv
118.383 563.622 121.958 562.452 121.958 561.009 cv
@
121.958 561.009 mo
121.958 559.565 118.383 558.395 113.972 558.395 cv
109.562 558.395 105.986 559.565 105.986 561.009 cv
105.986 562.452 109.562 563.622 113.972 563.622 cv
118.383 563.622 121.958 562.452 121.958 561.009 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
107.508 561.473 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
118.909 563.042 mo
122.83 564.784 128.347 566.962 132.413 568.85 cv
@
132.268 569.14 mo
133.72 569.43 li
132.558 568.559 li
cp
@
132.268 569.14 mo
133.72 569.43 li
132.558 568.559 li
f
65.6208 537.777 mo
65.6208 535.05 61.0702 532.84 55.4568 532.84 cv
49.8434 532.84 45.2928 535.05 45.2928 537.777 cv
45.2928 540.503 49.8434 542.714 55.4568 542.714 cv
61.0702 542.714 65.6208 540.503 65.6208 537.777 cv
@
65.6208 537.777 mo
65.6208 535.05 61.0702 532.84 55.4568 532.84 cv
49.8434 532.84 45.2928 535.05 45.2928 537.777 cv
45.2928 540.503 49.8434 542.714 55.4568 542.714 cv
61.0702 542.714 65.6208 540.503 65.6208 537.777 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
47.7231 535.918 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902531 .67691 .902531 1.24202 1.0164 .902531 1.0164 .902534 
1.0164 1.0164 0 ]xsh
51.7784 538.241 mo
(work=14)
[1.46765 1.0164 .676907 1.0164 1.14649 1.0164 0 ]xsh
51.6372 540.564 mo
(I/O: 2->2)
[.676907 .565121 1.46765 .565121 .508198 1.0164 .67691 1.14649 0 ]xsh
74.3328 527.322 mo
71.2836 529.065 67.0728 531.243 63.4428 533.276 cv
@
63.2976 532.985 mo
62.136 534.002 li
63.588 533.566 li
cp
@
63.2976 532.985 mo
62.136 534.002 li
63.588 533.566 li
f
88.5624 537.777 mo
88.5624 535.05 84.0118 532.84 78.3984 532.84 cv
72.785 532.84 68.2344 535.05 68.2344 537.777 cv
68.2344 540.503 72.785 542.714 78.3984 542.714 cv
84.0118 542.714 88.5624 540.503 88.5624 537.777 cv
@
88.5624 537.777 mo
88.5624 535.05 84.0118 532.84 78.3984 532.84 cv
72.785 532.84 68.2344 535.05 68.2344 537.777 cv
68.2344 540.503 72.785 542.714 78.3984 542.714 cv
84.0118 542.714 88.5624 540.503 88.5624 537.777 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
70.6647 535.918 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
74.72 538.241 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
74.5788 540.564 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
78.3984 527.613 mo
78.3984 528.629 78.3984 530.081 78.3984 531.388 cv
@
78.108 531.388 mo
78.3984 532.84 li
78.834 531.388 li
cp
@
78.108 531.388 mo
78.3984 532.84 li
78.834 531.388 li
f
86.3844 550.554 mo
86.3844 549.111 82.8089 547.941 78.3984 547.941 cv
73.9879 547.941 70.4124 549.111 70.4124 550.554 cv
70.4124 551.998 73.9879 553.168 78.3984 553.168 cv
82.8089 553.168 86.3844 551.998 86.3844 550.554 cv
@
86.3844 550.554 mo
86.3844 549.111 82.8089 547.941 78.3984 547.941 cv
73.9879 547.941 70.4124 549.111 70.4124 550.554 cv
70.4124 551.998 73.9879 553.168 78.3984 553.168 cv
82.8089 553.168 86.3844 551.998 86.3844 550.554 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
71.9342 551.019 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
83.916 552.442 mo
86.094 553.168 88.5624 553.894 90.1596 554.33 cv
94.6608 555.636 101.485 557.669 106.712 558.976 cv
@
106.277 559.266 mo
107.729 559.266 li
106.422 558.54 li
cp
@
106.277 559.266 mo
107.729 559.266 li
106.422 558.54 li
f
62.136 541.552 mo
65.6208 543.44 69.9768 545.908 73.1712 547.65 cv
@
72.8808 547.941 mo
74.3328 548.231 li
73.1712 547.215 li
cp
@
72.8808 547.941 mo
74.3328 548.231 li
73.1712 547.215 li
f
78.3984 542.714 mo
78.3984 544.02 78.3984 545.327 78.3984 546.634 cv
@
78.108 546.489 mo
78.3984 547.941 li
78.834 546.489 li
cp
@
78.108 546.489 mo
78.3984 547.941 li
78.834 546.489 li
f
112.666 537.777 mo
112.666 535.05 108.115 532.84 102.502 532.84 cv
96.8882 532.84 92.3376 535.05 92.3376 537.777 cv
92.3376 540.503 96.8882 542.714 102.502 542.714 cv
108.115 542.714 112.666 540.503 112.666 537.777 cv
@
112.666 537.777 mo
112.666 535.05 108.115 532.84 102.502 532.84 cv
96.8882 532.84 92.3376 535.05 92.3376 537.777 cv
92.3376 540.503 96.8882 542.714 102.502 542.714 cv
108.115 542.714 112.666 540.503 112.666 537.777 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
94.768 535.918 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
98.8233 538.241 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
98.6821 540.564 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
103.663 527.613 mo
103.518 528.774 103.373 530.372 103.228 531.824 cv
@
102.937 531.388 mo
103.082 532.84 li
103.663 531.388 li
cp
@
102.937 531.388 mo
103.082 532.84 li
103.663 531.388 li
f
135.607 537.777 mo
135.607 535.05 131.057 532.84 125.443 532.84 cv
119.83 532.84 115.279 535.05 115.279 537.777 cv
115.279 540.503 119.83 542.714 125.443 542.714 cv
131.057 542.714 135.607 540.503 135.607 537.777 cv
@
135.607 537.777 mo
135.607 535.05 131.057 532.84 125.443 532.84 cv
119.83 532.84 115.279 535.05 115.279 537.777 cv
115.279 540.503 119.83 542.714 125.443 542.714 cv
131.057 542.714 135.607 540.503 135.607 537.777 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
117.71 535.918 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902527 1.0164 .902527 
1.0164 1.0164 0 ]xsh
121.765 538.241 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
121.624 540.564 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
107.874 527.322 mo
110.633 529.065 114.263 531.243 117.748 533.276 cv
@
117.602 533.566 mo
119.054 534.002 li
117.893 532.985 li
cp
@
117.602 533.566 mo
119.054 534.002 li
117.893 532.985 li
f
121.958 550.554 mo
121.958 549.111 118.383 547.941 113.972 547.941 cv
109.562 547.941 105.986 549.111 105.986 550.554 cv
105.986 551.998 109.562 553.168 113.972 553.168 cv
118.383 553.168 121.958 551.998 121.958 550.554 cv
@
121.958 550.554 mo
121.958 549.111 118.383 547.941 113.972 547.941 cv
109.562 547.941 105.986 549.111 105.986 550.554 cv
105.986 551.998 109.562 553.168 113.972 553.168 cv
118.383 553.168 121.958 551.998 121.958 550.554 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
107.508 551.019 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 0 ]xsh
113.972 553.168 mo
113.972 554.33 113.972 555.636 113.972 556.943 cv
@
113.682 556.943 mo
113.972 558.395 li
114.408 556.943 li
cp
@
113.682 556.943 mo
113.972 558.395 li
114.408 556.943 li
f
106.567 542.278 mo
108.019 543.875 109.471 545.618 110.778 547.07 cv
@
110.488 547.215 mo
111.649 548.086 li
110.923 546.779 li
cp
@
110.488 547.215 mo
111.649 548.086 li
110.923 546.779 li
f
121.378 542.278 mo
119.926 543.875 118.474 545.618 117.167 547.07 cv
@
117.022 546.779 mo
116.296 548.086 li
117.457 547.215 li
cp
@
117.022 546.779 mo
116.296 548.086 li
117.457 547.215 li
f
171.326 524.999 mo
171.326 523.556 167.751 522.386 163.34 522.386 cv
158.93 522.386 155.354 523.556 155.354 524.999 cv
155.354 526.443 158.93 527.613 163.34 527.613 cv
167.751 527.613 171.326 526.443 171.326 524.999 cv
@
171.326 524.999 mo
171.326 523.556 167.751 522.386 163.34 522.386 cv
158.93 522.386 155.354 523.556 155.354 524.999 cv
155.354 526.443 158.93 527.613 163.34 527.613 cv
167.751 527.613 171.326 526.443 171.326 524.999 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 525.464 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
163.34 517.158 mo
163.34 518.32 163.34 519.627 163.34 520.934 cv
@
163.05 520.934 mo
163.34 522.386 li
163.776 520.934 li
cp
@
163.05 520.934 mo
163.34 522.386 li
163.776 520.934 li
f
206.9 524.999 mo
206.9 523.556 203.325 522.386 198.914 522.386 cv
194.504 522.386 190.928 523.556 190.928 524.999 cv
190.928 526.443 194.504 527.613 198.914 527.613 cv
203.325 527.613 206.9 526.443 206.9 524.999 cv
@
206.9 524.999 mo
206.9 523.556 203.325 522.386 198.914 522.386 cv
194.504 522.386 190.928 523.556 190.928 524.999 cv
190.928 526.443 194.504 527.613 198.914 527.613 cv
203.325 527.613 206.9 526.443 206.9 524.999 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
192.45 525.464 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
170.6 515.561 mo
175.973 516.432 182.797 517.739 187.153 518.901 cv
189.041 519.482 191.654 520.788 193.832 521.95 cv
@
193.687 522.24 mo
195.139 522.676 li
193.978 521.66 li
cp
@
193.687 522.24 mo
195.139 522.676 li
193.978 521.66 li
f
171.326 561.009 mo
171.326 559.565 167.751 558.395 163.34 558.395 cv
158.93 558.395 155.354 559.565 155.354 561.009 cv
155.354 562.452 158.93 563.622 163.34 563.622 cv
167.751 563.622 171.326 562.452 171.326 561.009 cv
@
171.326 561.009 mo
171.326 559.565 167.751 558.395 163.34 558.395 cv
158.93 558.395 155.354 559.565 155.354 561.009 cv
155.354 562.452 158.93 563.622 163.34 563.622 cv
167.751 563.622 171.326 562.452 171.326 561.009 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 561.473 mo
(roundrobin\(4,4\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
158.404 563.042 mo
154.338 564.784 148.675 567.252 144.464 568.995 cv
@
144.755 568.414 mo
143.593 569.43 li
145.045 569.14 li
cp
@
144.755 568.414 mo
143.593 569.43 li
145.045 569.14 li
f
162.034 537.777 mo
162.034 535.05 157.483 532.84 151.87 532.84 cv
146.256 532.84 141.706 535.05 141.706 537.777 cv
141.706 540.503 146.256 542.714 151.87 542.714 cv
157.483 542.714 162.034 540.503 162.034 537.777 cv
@
162.034 537.777 mo
162.034 535.05 157.483 532.84 151.87 532.84 cv
146.256 532.84 141.706 535.05 141.706 537.777 cv
141.706 540.503 146.256 542.714 151.87 542.714 cv
157.483 542.714 162.034 540.503 162.034 537.777 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
144.136 535.918 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
148.191 538.241 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
148.05 540.564 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
161.017 527.468 mo
159.856 528.774 158.404 530.372 156.952 532.114 cv
@
156.661 531.969 mo
155.935 533.276 li
157.097 532.404 li
cp
@
156.661 531.969 mo
155.935 533.276 li
157.097 532.404 li
f
184.975 537.777 mo
184.975 535.05 180.425 532.84 174.811 532.84 cv
169.198 532.84 164.647 535.05 164.647 537.777 cv
164.647 540.503 169.198 542.714 174.811 542.714 cv
180.425 542.714 184.975 540.503 184.975 537.777 cv
@
184.975 537.777 mo
184.975 535.05 180.425 532.84 174.811 532.84 cv
169.198 532.84 164.647 535.05 164.647 537.777 cv
164.647 540.503 169.198 542.714 174.811 542.714 cv
180.425 542.714 184.975 540.503 184.975 537.777 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
167.078 535.918 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
171.133 538.241 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
170.992 540.564 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
165.664 527.468 mo
166.825 528.774 168.277 530.372 169.729 532.114 cv
@
169.584 532.404 mo
170.746 533.276 li
170.02 531.969 li
cp
@
169.584 532.404 mo
170.746 533.276 li
170.02 531.969 li
f
171.326 550.554 mo
171.326 549.111 167.751 547.941 163.34 547.941 cv
158.93 547.941 155.354 549.111 155.354 550.554 cv
155.354 551.998 158.93 553.168 163.34 553.168 cv
167.751 553.168 171.326 551.998 171.326 550.554 cv
@
171.326 550.554 mo
171.326 549.111 167.751 547.941 163.34 547.941 cv
158.93 547.941 155.354 549.111 155.354 550.554 cv
155.354 551.998 158.93 553.168 163.34 553.168 cv
167.751 553.168 171.326 551.998 171.326 550.554 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
156.876 551.019 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .676895 1.0164 
.508209 1.01639 0 ]xsh
163.34 553.168 mo
163.34 554.33 163.34 555.636 163.34 556.943 cv
@
163.05 556.943 mo
163.34 558.395 li
163.776 556.943 li
cp
@
163.05 556.943 mo
163.34 558.395 li
163.776 556.943 li
f
155.935 542.278 mo
157.387 543.875 158.839 545.618 160.146 547.07 cv
@
159.856 547.215 mo
161.017 548.086 li
160.291 546.779 li
cp
@
159.856 547.215 mo
161.017 548.086 li
160.291 546.779 li
f
170.746 542.278 mo
169.294 543.875 167.842 545.618 166.535 547.07 cv
@
166.39 546.779 mo
165.664 548.086 li
166.825 547.215 li
cp
@
166.39 546.779 mo
165.664 548.086 li
166.825 547.215 li
f
209.078 537.777 mo
209.078 535.05 204.528 532.84 198.914 532.84 cv
193.301 532.84 188.75 535.05 188.75 537.777 cv
188.75 540.503 193.301 542.714 198.914 542.714 cv
204.528 542.714 209.078 540.503 209.078 537.777 cv
@
209.078 537.777 mo
209.078 535.05 204.528 532.84 198.914 532.84 cv
193.301 532.84 188.75 535.05 188.75 537.777 cv
188.75 540.503 193.301 542.714 198.914 542.714 cv
204.528 542.714 209.078 540.503 209.078 537.777 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
191.181 535.918 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
195.236 538.241 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
195.095 540.564 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
198.914 527.613 mo
198.914 528.629 198.914 530.081 198.914 531.388 cv
@
198.624 531.388 mo
198.914 532.84 li
199.35 531.388 li
cp
@
198.624 531.388 mo
198.914 532.84 li
199.35 531.388 li
f
232.02 537.777 mo
232.02 535.05 227.469 532.84 221.856 532.84 cv
216.243 532.84 211.692 535.05 211.692 537.777 cv
211.692 540.503 216.243 542.714 221.856 542.714 cv
227.469 542.714 232.02 540.503 232.02 537.777 cv
@
232.02 537.777 mo
232.02 535.05 227.469 532.84 221.856 532.84 cv
216.243 532.84 211.692 535.05 211.692 537.777 cv
211.692 540.503 216.243 542.714 221.856 542.714 cv
227.469 542.714 232.02 540.503 232.02 537.777 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
214.122 535.918 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
218.177 538.241 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
218.036 540.564 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
202.98 527.322 mo
206.029 529.065 210.24 531.243 213.87 533.276 cv
@
213.725 533.566 mo
215.177 534.002 li
214.015 532.985 li
cp
@
213.725 533.566 mo
215.177 534.002 li
214.015 532.985 li
f
206.9 550.554 mo
206.9 549.111 203.325 547.941 198.914 547.941 cv
194.504 547.941 190.928 549.111 190.928 550.554 cv
190.928 551.998 194.504 553.168 198.914 553.168 cv
203.325 553.168 206.9 551.998 206.9 550.554 cv
@
206.9 550.554 mo
206.9 549.111 203.325 547.941 198.914 547.941 cv
194.504 547.941 190.928 549.111 190.928 550.554 cv
190.928 551.998 194.504 553.168 198.914 553.168 cv
203.325 553.168 206.9 551.998 206.9 550.554 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
192.45 551.019 mo
(roundrobin\(1,1\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
193.397 552.442 mo
191.219 553.168 188.896 553.894 187.153 554.33 cv
182.797 555.636 175.828 557.669 170.6 559.121 cv
@
170.891 558.686 mo
169.584 559.412 li
171.036 559.412 li
cp
@
170.891 558.686 mo
169.584 559.412 li
171.036 559.412 li
f
198.914 542.714 mo
198.914 544.02 198.914 545.327 198.914 546.634 cv
@
198.624 546.489 mo
198.914 547.941 li
199.35 546.489 li
cp
@
198.624 546.489 mo
198.914 547.941 li
199.35 546.489 li
f
215.177 541.552 mo
211.692 543.44 207.336 545.908 204.142 547.65 cv
@
204.142 547.215 mo
202.98 548.231 li
204.432 547.941 li
cp
@
204.142 547.215 mo
202.98 548.231 li
204.432 547.941 li
f
113.101 592.953 mo
113.101 591.509 108.876 590.339 103.663 590.339 cv
98.4507 590.339 94.2252 591.509 94.2252 592.953 cv
94.2252 594.396 98.4507 595.566 103.663 595.566 cv
108.876 595.566 113.101 594.396 113.101 592.953 cv
@
113.101 592.953 mo
113.101 591.509 108.876 590.339 103.663 590.339 cv
98.4507 590.339 94.2252 591.509 94.2252 592.953 cv
94.2252 594.396 98.4507 595.566 103.663 595.566 cv
108.876 595.566 113.101 594.396 113.101 592.953 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
95.6744 593.417 mo
(roundrobin\(2,2,2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 .508202 1.0164 .508202 1.0164 0 ]xsh
132.703 584.241 mo
126.75 585.983 117.457 588.887 110.923 590.775 cv
@
111.359 590.194 mo
110.052 591.065 li
111.504 590.92 li
cp
@
111.359 590.194 mo
110.052 591.065 li
111.504 590.92 li
f
183.088 592.953 mo
183.088 591.509 178.862 590.339 173.65 590.339 cv
168.437 590.339 164.212 591.509 164.212 592.953 cv
164.212 594.396 168.437 595.566 173.65 595.566 cv
178.862 595.566 183.088 594.396 183.088 592.953 cv
@
183.088 592.953 mo
183.088 591.509 178.862 590.339 173.65 590.339 cv
168.437 590.339 164.212 591.509 164.212 592.953 cv
164.212 594.396 168.437 595.566 173.65 595.566 cv
178.862 595.566 183.088 594.396 183.088 592.953 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
165.661 593.417 mo
(roundrobin\(2,2,2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
144.61 584.241 mo
150.418 585.983 159.42 588.742 165.954 590.63 cv
@
165.809 590.92 mo
167.261 591.065 li
165.954 590.194 li
cp
@
165.809 590.92 mo
167.261 591.065 li
165.954 590.194 li
f
146.642 628.962 mo
146.642 627.519 143.067 626.349 138.656 626.349 cv
134.246 626.349 130.67 627.519 130.67 628.962 cv
130.67 630.406 134.246 631.576 138.656 631.576 cv
143.067 631.576 146.642 630.406 146.642 628.962 cv
@
146.642 628.962 mo
146.642 627.519 143.067 626.349 138.656 626.349 cv
134.246 626.349 130.67 627.519 130.67 628.962 cv
130.67 630.406 134.246 631.576 138.656 631.576 cv
143.067 631.576 146.642 630.406 146.642 628.962 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
132.192 629.427 mo
(roundrobin\(8,8\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 0 ]xsh
145.481 641.74 mo
145.481 639.013 142.425 636.803 138.656 636.803 cv
134.887 636.803 131.832 639.013 131.832 641.74 cv
131.832 644.466 134.887 646.677 138.656 646.677 cv
142.425 646.677 145.481 644.466 145.481 641.74 cv
@
145.481 641.74 mo
145.481 639.013 142.425 636.803 138.656 636.803 cv
134.887 636.803 131.832 639.013 131.832 641.74 cv
131.832 644.466 134.887 646.677 138.656 646.677 cv
142.425 646.677 145.481 644.466 145.481 641.74 cv
.843 .18 .157 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
134.197 639.881 mo
(KeyPrinter)
[1.46765 .902527 1.0164 1.13023 .67691 .565125 1.01639 .565125 .902527 0 ]xsh
134.47 642.205 mo
(work=126)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 1.0164 0 ]xsh
134.329 644.528 mo
(I/O: 16->0)
[.67691 .565109 1.46765 .565125 .508194 1.0164 1.0164 .67691 1.14648 0 ]xsh
138.656 631.576 mo
138.656 632.592 138.656 634.044 138.656 635.351 cv
@
138.366 635.351 mo
138.656 636.803 li
139.092 635.351 li
cp
@
138.366 635.351 mo
138.656 636.803 li
139.092 635.351 li
f
67.944 605.73 mo
67.944 603.004 63.3934 600.794 57.78 600.794 cv
52.1666 600.794 47.616 603.004 47.616 605.73 cv
47.616 608.457 52.1666 610.667 57.78 610.667 cv
63.3934 610.667 67.944 608.457 67.944 605.73 cv
@
67.944 605.73 mo
67.944 603.004 63.3934 600.794 57.78 600.794 cv
52.1666 600.794 47.616 603.004 47.616 605.73 cv
47.616 608.457 52.1666 610.667 57.78 610.667 cv
63.3934 610.667 67.944 608.457 67.944 605.73 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
50.0463 603.872 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902531 .676907 .902534 1.24203 1.0164 .902531 1.0164 .902534 
1.0164 1.0164 0 ]xsh
54.1016 606.195 mo
(work=14)
[1.46765 1.0164 .676907 1.0164 1.14649 1.0164 0 ]xsh
53.9604 608.518 mo
(I/O: 2->2)
[.676907 .565117 1.46765 .565121 .508198 1.0164 .67691 1.14649 0 ]xsh
96.1128 594.55 mo
88.272 596.147 76.0752 598.906 68.8152 600.794 cv
68.0892 601.084 67.0728 601.374 66.0564 601.81 cv
@
66.2016 601.374 mo
65.04 602.246 li
66.492 601.955 li
cp
@
66.2016 601.374 mo
65.04 602.246 li
66.492 601.955 li
f
90.8856 605.73 mo
90.8856 603.004 86.335 600.794 80.7216 600.794 cv
75.1082 600.794 70.5576 603.004 70.5576 605.73 cv
70.5576 608.457 75.1082 610.667 80.7216 610.667 cv
86.335 610.667 90.8856 608.457 90.8856 605.73 cv
@
90.8856 605.73 mo
90.8856 603.004 86.335 600.794 80.7216 600.794 cv
75.1082 600.794 70.5576 603.004 70.5576 605.73 cv
70.5576 608.457 75.1082 610.667 80.7216 610.667 cv
86.335 610.667 90.8856 608.457 90.8856 605.73 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
72.988 603.872 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
77.0433 606.195 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
76.9021 608.518 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
99.4524 595.276 mo
96.4032 597.018 92.3376 599.196 88.7076 601.229 cv
@
88.5624 600.939 mo
87.4008 601.955 li
88.8528 601.52 li
cp
@
88.5624 600.939 mo
87.4008 601.955 li
88.8528 601.52 li
f
113.827 605.73 mo
113.827 603.004 109.277 600.794 103.663 600.794 cv
98.0498 600.794 93.4992 603.004 93.4992 605.73 cv
93.4992 608.457 98.0498 610.667 103.663 610.667 cv
109.277 610.667 113.827 608.457 113.827 605.73 cv
@
113.827 605.73 mo
113.827 603.004 109.277 600.794 103.663 600.794 cv
98.0498 600.794 93.4992 603.004 93.4992 605.73 cv
93.4992 608.457 98.0498 610.667 103.663 610.667 cv
109.277 610.667 113.827 608.457 113.827 605.73 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
95.9295 603.872 mo
(CompareExchange)
[1.35586 1.0164 1.58152 1.0164 .902534 .67691 .902534 1.24202 1.0164 .902534 1.0164 .902534 
1.0164 1.0164 0 ]xsh
99.9848 606.195 mo
(work=14)
[1.46765 1.0164 .676903 1.0164 1.14648 1.0164 0 ]xsh
99.8436 608.518 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14649 0 ]xsh
103.663 595.566 mo
103.663 596.583 103.663 598.035 103.663 599.342 cv
@
103.373 599.342 mo
103.663 600.794 li
104.099 599.342 li
cp
@
103.373 599.342 mo
103.663 600.794 li
104.099 599.342 li
f
136.769 605.73 mo
136.769 603.004 132.218 600.794 126.605 600.794 cv
120.991 600.794 116.441 603.004 116.441 605.73 cv
116.441 608.457 120.991 610.667 126.605 610.667 cv
132.218 610.667 136.769 608.457 136.769 605.73 cv
@
136.769 605.73 mo
136.769 603.004 132.218 600.794 126.605 600.794 cv
120.991 600.794 116.441 603.004 116.441 605.73 cv
116.441 608.457 120.991 610.667 126.605 610.667 cv
132.218 610.667 136.769 608.457 136.769 605.73 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
118.871 603.872 mo
(CompareExchange)
[1.35587 1.0164 1.58152 1.0164 .902534 .67691 .902527 1.24203 1.0164 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
122.926 606.195 mo
(work=14)
[1.46765 1.0164 .67691 1.0164 1.14648 1.0164 0 ]xsh
122.785 608.518 mo
(I/O: 2->2)
[.67691 .565117 1.46765 .565117 .508202 1.0164 .67691 1.14648 0 ]xsh
107.874 595.276 mo
110.923 597.018 114.989 599.196 118.619 601.229 cv
@
118.474 601.52 mo
119.926 601.955 li
118.764 600.939 li
cp
@
118.474 601.52 mo
119.926 601.955 li
118.764 600.939 li
f
113.101 618.508 mo
113.101 617.065 108.876 615.894 103.663 615.894 cv
98.4507 615.894 94.2252 617.065 94.2252 618.508 cv
94.2252 619.951 98.4507 621.122 103.663 621.122 cv
108.876 621.122 113.101 619.951 113.101 618.508 cv
@
113.101 618.508 mo
113.101 617.065 108.876 615.894 103.663 615.894 cv
98.4507 615.894 94.2252 617.065 94.2252 618.508 cv
94.2252 619.951 98.4507 621.122 103.663 621.122 cv
108.876 621.122 113.101 619.951 113.101 618.508 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
95.6744 618.973 mo
(roundrobin\(2,2,2,2\))
[.67691 1.0164 1.0164 1.0164 1.0164 .676903 1.0164 1.0164 .565117 1.0164 .67691 1.0164 
.508194 1.0164 .508202 1.0164 .508202 1.0164 0 ]xsh
110.052 620.396 mo
116.15 622.138 125.153 624.897 131.396 626.784 cv
@
131.251 627.075 mo
132.703 627.22 li
131.396 626.349 li
cp
@
131.251 627.075 mo
132.703 627.22 li
131.396 626.349 li
f
65.04 609.215 mo
66.3468 609.796 67.7988 610.377 68.8152 610.667 cv
75.7848 612.555 87.1104 615.023 94.9512 616.62 cv
@
94.5156 616.911 mo
95.9676 616.911 li
94.6608 616.185 li
cp
@
94.5156 616.911 mo
95.9676 616.911 li
94.6608 616.185 li
f
87.4008 609.506 mo
90.8856 611.393 94.9512 613.716 98.2908 615.604 cv
@
98.0004 615.894 mo
99.4524 616.185 li
98.2908 615.168 li
cp
@
98.0004 615.894 mo
99.4524 616.185 li
98.2908 615.168 li
f
103.663 610.667 mo
103.663 611.974 103.663 613.281 103.663 614.588 cv
@
103.373 614.442 mo
103.663 615.894 li
104.099 614.442 li
cp
@
103.373 614.442 mo
103.663 615.894 li
104.099 614.442 li
f
119.926 609.506 mo
116.441 611.393 112.375 613.716 109.036 615.604 cv
@
109.036 615.168 mo
107.874 616.185 li
109.326 615.894 li
cp
@
109.036 615.168 mo
107.874 616.185 li
109.326 615.894 li
f
160.872 605.73 mo
160.872 603.004 156.321 600.794 150.708 600.794 cv
145.095 600.794 140.544 603.004 140.544 605.73 cv
140.544 608.457 145.095 610.667 150.708 610.667 cv
156.321 610.667 160.872 608.457 160.872 605.73 cv
@
160.872 605.73 mo
160.872 603.004 156.321 600.794 150.708 600.794 cv
145.095 600.794 140.544 603.004 140.544 605.73 cv
140.544 608.457 145.095 610.667 150.708 610.667 cv
156.321 610.667 160.872 608.457 160.872 605.73 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
142.974 603.872 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
147.029 606.195 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
146.888 608.518 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
169.439 595.276 mo
166.39 597.018 162.324 599.196 158.694 601.229 cv
@
158.549 600.939 mo
157.387 601.955 li
158.839 601.52 li
cp
@
158.549 600.939 mo
157.387 601.955 li
158.839 601.52 li
f
183.814 605.73 mo
183.814 603.004 179.263 600.794 173.65 600.794 cv
168.036 600.794 163.486 603.004 163.486 605.73 cv
163.486 608.457 168.036 610.667 173.65 610.667 cv
179.263 610.667 183.814 608.457 183.814 605.73 cv
@
183.814 605.73 mo
183.814 603.004 179.263 600.794 173.65 600.794 cv
168.036 600.794 163.486 603.004 163.486 605.73 cv
163.486 608.457 168.036 610.667 173.65 610.667 cv
179.263 610.667 183.814 608.457 183.814 605.73 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
165.916 603.872 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
169.971 606.195 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
169.83 608.518 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
173.65 595.566 mo
173.65 596.583 173.65 598.035 173.65 599.342 cv
@
173.359 599.342 mo
173.65 600.794 li
174.085 599.342 li
cp
@
173.359 599.342 mo
173.65 600.794 li
174.085 599.342 li
f
206.755 605.73 mo
206.755 603.004 202.205 600.794 196.591 600.794 cv
190.978 600.794 186.427 603.004 186.427 605.73 cv
186.427 608.457 190.978 610.667 196.591 610.667 cv
202.205 610.667 206.755 608.457 206.755 605.73 cv
@
206.755 605.73 mo
206.755 603.004 202.205 600.794 196.591 600.794 cv
190.978 600.794 186.427 603.004 186.427 605.73 cv
186.427 608.457 190.978 610.667 196.591 610.667 cv
202.205 610.667 206.755 608.457 206.755 605.73 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
188.858 603.872 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
192.913 606.195 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
192.772 608.518 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
177.86 595.276 mo
180.91 597.018 184.975 599.196 188.605 601.229 cv
@
188.46 601.52 mo
189.912 601.955 li
188.75 600.939 li
cp
@
188.46 601.52 mo
189.912 601.955 li
188.75 600.939 li
f
229.697 605.73 mo
229.697 603.004 225.146 600.794 219.533 600.794 cv
213.919 600.794 209.369 603.004 209.369 605.73 cv
209.369 608.457 213.919 610.667 219.533 610.667 cv
225.146 610.667 229.697 608.457 229.697 605.73 cv
@
229.697 605.73 mo
229.697 603.004 225.146 600.794 219.533 600.794 cv
213.919 600.794 209.369 603.004 209.369 605.73 cv
209.369 608.457 213.919 610.667 219.533 610.667 cv
225.146 610.667 229.697 608.457 229.697 605.73 cv
.271 .467 .702 rgb
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
211.799 603.872 mo
(CompareExchange)
[1.35587 1.0164 1.58151 1.0164 .902527 .67691 .902527 1.24203 1.01639 .902542 1.0164 .902527 
1.0164 1.0164 0 ]xsh
215.854 606.195 mo
(work=14)
[1.46765 1.0164 .67691 1.01639 1.1465 1.01639 0 ]xsh
215.713 608.518 mo
(I/O: 2->2)
[.67691 .565109 1.46765 .565125 .508194 1.0164 .67691 1.14648 0 ]xsh
181.2 594.55 mo
189.041 596.147 201.238 598.906 208.498 600.794 cv
209.224 601.084 210.24 601.374 211.256 601.81 cv
@
210.821 601.955 mo
212.273 602.246 li
211.111 601.374 li
cp
@
210.821 601.955 mo
212.273 602.246 li
211.111 601.374 li
f
183.088 618.508 mo
183.088 617.065 178.862 615.894 173.65 615.894 cv
168.437 615.894 164.212 617.065 164.212 618.508 cv
164.212 619.951 168.437 621.122 173.65 621.122 cv
178.862 621.122 183.088 619.951 183.088 618.508 cv
@
183.088 618.508 mo
183.088 617.065 178.862 615.894 173.65 615.894 cv
168.437 615.894 164.212 617.065 164.212 618.508 cv
164.212 619.951 168.437 621.122 173.65 621.122 cv
178.862 621.122 183.088 619.951 183.088 618.508 cv
1 gry
f
0 gry
LTFDQO+TimesNewRomanPSMT*1 [2.0328 0 0 -2.0328 0 0 ]msf
165.661 618.973 mo
(roundrobin\(2,2,2,2\))
[.67691 1.0164 1.01639 1.0164 1.0164 .67691 1.0164 1.01639 .565125 1.0164 .67691 1.01639 
.508209 1.01639 .508209 1.0164 .508194 1.0164 0 ]xsh
167.261 620.396 mo
161.162 622.138 152.16 624.897 145.916 626.784 cv
@
145.916 626.349 mo
144.61 627.22 li
146.062 627.075 li
cp
@
145.916 626.349 mo
144.61 627.22 li
146.062 627.075 li
f
157.387 609.506 mo
160.872 611.393 164.938 613.716 168.277 615.604 cv
@
167.987 615.894 mo
169.439 616.185 li
168.277 615.168 li
cp
@
167.987 615.894 mo
169.439 616.185 li
168.277 615.168 li
f
173.65 610.667 mo
173.65 611.974 173.65 613.281 173.65 614.588 cv
@
173.359 614.442 mo
173.65 615.894 li
174.085 614.442 li
cp
@
173.359 614.442 mo
173.65 615.894 li
174.085 614.442 li
f
189.912 609.506 mo
186.427 611.393 182.362 613.716 179.022 615.604 cv
@
179.022 615.168 mo
177.86 616.185 li
179.312 615.894 li
cp
@
179.022 615.168 mo
177.86 616.185 li
179.312 615.894 li
f
212.273 609.215 mo
210.966 609.796 209.514 610.377 208.498 610.667 cv
201.528 612.555 190.202 615.023 182.362 616.62 cv
@
182.652 616.185 mo
181.345 616.911 li
182.797 616.911 li
cp
@
182.652 616.185 mo
181.345 616.911 li
182.797 616.911 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
true set_gvm
/LTFDQO+TimesNewRomanPSMT*1 uf
/LTFDQO+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
