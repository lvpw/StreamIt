%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: HDTV.pdf
%%Creator: Adobe Acrobat 8.0
%%For: Bill Thies
%%CreationDate: 12/5/2008, 11:08:58 PM
%%BoundingBox: 0 0 469 267
%%HiResBoundingBox: 0 0 469 267
%%CropBox: 0 0 469 267
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1622 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GNU Ghostscript 7.05"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -267 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 267 li
469 267 li
469 0 li
cp
clp
[1 0 0 1 -36 0 ]ct
gsave
35 268 mo
505 268 li
505 0 li
35 0 li
cp
clp
.092 lw
0 lc
0 lj
1 ml
[] 0 dsh
true sadj
36.736 266.264 mo
503.176 266.264 li
503.176 .935974 li
36.736 .935974 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988, 1990, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Times New Roman is a trademark of the Monotype Corporation, registered in the US Patent and Trademark Office and may be registered in certain other jurisdictions.) def
/Weight (Roman) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /D put
dup 72 /H put
dup 84 /T put
dup 86 /V put
def
/UniqueID 44335 def
/FontBBox {-167 -250 1009 878} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 0 662 677 447 461 694 694] def
/OtherBlues [384 384 -216 -213] def
/FamilyBlues [-15 0 662 677 447 461 694 694] def
/FamilyOtherBlues [384 384 -216 -213] def
/StdHW [36] def
/StdVW [81] def
/StemSnapH [36 43] def
/StemSnapV [81 94] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/D <1C60D8A8C9B6079F62AF7EE2124AC712AE5D5419E262A0C00C6163DFBCB2
A6FA65DDDD5062250DB8BBFB46EB35827750F9FCEE696526B20FE9266474B179
350945BBDAF7180FAB04D619EB38198FC722361E0B3B5E50F9017F19C7BDCABB
285F506A04FE32C63936689B1F9C81923B03440D57336303C59B59E8D3C0659D
33> |-
/H <1C60D8A8C9B6079F62AF7EE2120CD8667DDD4FA2DBFCE5E63E48B84464C1
802A269C64DF6D959EDF25835FFE2A562C206570E6F5B714FC53C2D5C307E1C8
A7B7F4078E600204C204D1FAC19490C22F80872356DF60239B84CD61D63A7DAA
1B4B4595C75AFC0D0514E00256BFA54FA5E3DE43161DB123A8A356631F> |-
/T <1C60D8A8C9B7D8BE16B2E353E3300378A32828826C127DE3D6A3769F5542
8119DC48F4B555CFAC557278838F3EC6C5F7B64F6B44DFEFCBC8AF8174185170
E165701BB15CF1CB88629A978EF6D86FB8> |-
/V <1C60D8A8C9B6079F005CDC6370483696E1EAFC944BD4E06D86DBD18EB735
2F45C381C0DF5B906978D128771DD089E21DCCBC0592B3A6BE45DFF941B3D9AF
82C0E5BBEE832081C600F8D424981C94A7921155A8C74A96B13AD2AF06E82571
B4060A57A3D45E0E99876FCE9C38AE3E4A7F8C> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/LTFDRT+TimesNewRomanPSMT*1 
[68{/.notdef}rp /D 3{/.notdef}rp /H 11{/.notdef}rp /T /.notdef /V 
169{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
37.3396 1.96597 mo
(HDTV)
[.929916 .929916 .786957 0 ]xsh
57.712 133.416 mo
483.672 133.416 li
483.672 12.712 li
57.712 12.712 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B7D8BE1621F7F8DAEB9FA9CBAFC8F4F4D756F2191C830A0E4A
58F87E3DDE67D49AF36DDF5F1FB2D74CAA0A1A0C249C8C349E149A4722F92BF7
61EFA3C2F9EC864F14F3A3AC121B867A3642166A4B07211381D27468A1D61050
1454C0DD1325D701AB4ADD917E16E61514B3C2631A525AEC590FB4C52AA73BF6
506DADDCC92C07368DF00A34F77E6ED1C2061C6913B4C24C30A64720E240E09F
9DD8F5EF76F17E9EEAE569D41B7D8D946B46BFFC> |-
/P <1C60D8A8C9B7EF322B10A2A8DE6EF0A6CE60E86B1DF5C68015667A2338DB
07BCF91C9D8DCCB5967A656E7EB6651B3E305A306DA1BB8C1BAEECFC60DC00D8
8AEC56E3DF7455D57CB9BB0CC9A32704D4F0F1C39C5B2EDC70F42754CACE7253
FF5FDAE4B675FFF987E22613E24B8956EFA9C2C5B9AC406D966F459601B2046A
C9E54A3BB37C45EDEB> |-
/c <1C60D8A8C9B77FE2948016809A16C1383D80AA8513D781288589A82DC94A
5DA0D421DEC176AEE608ECA472235D24D269E725C25D06B3582797B60EEBA4C4
46D10FC22341077B09EDB4E12CA0359E24628B46BB6E10727940> |-
/d <1C60D8A8C9B7A73DE3E5E50523E6C3667B38E45A4C51E0FEC84C813AB373
8B83F58EEDF7211177C6639AD2CCECEBC1915AB857B5701E72700D0D163B5F2F
58E5A8B520D7ED7F9880D10C1A6AAC1DEF76C68CB623039F59365031342DE694
26167CDA4201402D972AF8016480B0CF8CBDDE4940ABCEFD4C2D5F2FE77DC410
2439C361CA6330A182E6FD> |-
/e <1C60D8A8C9B77FE29496D1FBB47314D6F46DA3EBFEC342F3B983185301EF
B706EB7833A9B3F14CD479AC93E43031BC63CB7FFE55CD73AABA1B6DFA935F49
683C721ECBA275DBC565AC78A07D0C5329E18D2789C058EC6367BBAECDF40AEE> |-
/i <1C60D8A8C9B854D0F11440006C203BFFD1DEDCDE7CAD1373D75DB7315CFC
49A0833FA9D881419B9BEE01885373804535A66836A5115D3B942001E4A8D676
2EBA1D3CCCC2CED3DAC862D3F0398204E81D1C72BC10727D59A156997C9269F7
F9572E03A90C988E59FECA8B3BEBEE755CF420171B> |-
/l <1C60D8A8C9B854D0F11440006C203A85DCEB221B1066666FE3EA25083329
14AA399D2F81DB0653B503D4FAECFE70883AAAA2B3345C999517D89696069E61
D192EBD1D92DDA82> |-
/n <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA6A1CED287131EA2B
D2E1E6E797441A36EF164B2E98EA0B7A662ADAA0C64D637EBFFAEDEE2D95D0C9
387D6E78EA7DBD0E03769EFADBB9E99820C3CA652E5CB84D6476DEB84D65355B
ED40D74AEE8C38DE38F7ADD1F45E132F9FCFA8357906BA1C9F825F576D022523
4E76> |-
/o <1C60D8A8C9B7A73DE3E5E50AD058CB1758CCEC8536B108DD66A8D296857C
B3303D78514A78D06E85FDA9E8085F8D9525195AE96992EAA1E95B40679F85C3
FC4165030DF121E13968768CFE641E50E297E68778A63ACC6DD3> |-
/p <1C60D8A8C9B7A73D9AFACE39AE6BAA6E09D7322029CE296F526808097535
692942DF193E08360A1A27EB6A08251F7D53D3FA96D22918185F2823E13833F6
44411211FB9E60C91D24768368C1EE71DFEA1AF8285D596D61CE8A067C14BC2E
E1974A4DF14D782DBEDB8D2CE5673BB9634CC4945A7FA5A5E1B87E0F2D94F438
C21548DAE429B68406206429A87E1B462DA7A9D2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 69 /E put
dup 80 /P put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[68{/.notdef}rp /D /E 2{/.notdef}rp /H 7{/.notdef}rp /P 3{/.notdef}rp 
/T /.notdef /V 12{/.notdef}rp /c /d /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /.notdef /n /o /p 143{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
58.3213 13.742 mo
(HDTVEncodePipeline)
[.929916 .929916 .786957 .92992 .786957 .644001 .57185 .644005 .643997 .571854 .716125 .358063 
.644005 .571854 .358063 .358063 .643997 0 ]xsh
240.884 54.296 mo
300.5 54.296 li
300.5 31.848 li
240.884 31.848 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDFB39C8FA0E3107D39E1E26D40368A6A59D36B799EDDCB
A8AF8BCAEA2E296C5BB00979C4073082C4AC62DAAE27F25BE45DFF121DF075F7
3D37111C10DFF7C6BD4BFE8AE73B4FADB84F0E8B5722DEA1CA14F5AFDC440B45
4F635F5576E82C8F45782F1EDE0EC9CA59D48E4C0F81> |-
/I <1C60D8A8C9B81F2C3AB090E7A94305EFD59611ABFA6BAFD07A97745145D9
B0DF5E6D35DFFC117239480D5B4909BCBB653176E0149E687888D5B98137EBEA
64> |-
/a <1C60D8A8C9B77FE294851E8312417598C86A6256F86C70DE2C7AFF06FCE3
4BADEE28F3B8D02D3C60352D19569C8A11355E1235678015637DF6C7E4A05E8E
A8AB948BF076D376030D74D5BF1D25D6B1436CBFF068CFC521B6EF1846E35D0E
2A4D1C4888BBA14114C326082B33961EF18B6F0B661AC7CDF50B0B0D80CC5ED8
71668C27B3C878E43E83D293BA1B1F771221D32DA7404867CEA1760CC79EAA61
6682686BC92138B01A5FF6B55D314BD1AA96EE89C141B8E9EB46C16F1B31BD66
B910EA6BBA> |-
/r <1C60D8A8C9B81F2C117020CA370F4EDA9CC5786DD9DE9EF42ACF1876A05B
D63AFC335B1B675841319B03439D25E5CD3513D8B1AF7C3213243E231585FDFB
23DF1B8599146D034A4E5D6FF06CCB4811E4D5773B1A3B8F6DC7EFA556C00470
2D769BB83004181BE21F0C2BFBE9C20E97FA9275EFEA6DCC374D4BC4F2DBC112
90AFF811640F86741723DE5B9796381D4326AE431F5D9C5CAED9> |-
/t <1C60D8A8C9B854D0DAE0E17091F63D902F15B1C5B2DD1246F40FD3EC3264
448E2BE336EDCDEB1DFC2F9412B18B341EC1F740C5E1DC1152FC3909509AD9AD
D2933ADE9A3C5AD03C26776EECF232> |-
/u <1C60D8A8C9B7A73D96315394C03E2804B8D6B013BEE63C754B7DCD21D17D
EE183DDCCBE94C1E49FD4EEAD58EEB67E527D51D30B7569BBD690F10D18E5949
069889C638179D8480A9808D89F695AD05863E6AF7CC14732F1A0B4D904FA886
0DFB17262B8501BEF73C125F016588> |-
/v <1C60D8A8C9B7A73DDA3AE0A055993EE6BE7DFD4A4A2DB6881516C07791ED
230086728F5F7B4242AB79AA3E9EFA40308C16768E728C96C19C447086D3AC82
2F0AB1C43C44A30591856370C72E911DB5FEBBFD365EF7E42462BF4A23A3EEAE
F504CBF5C917EC0A44C5B6D735> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 67 /C put
dup 73 /I put
dup 97 /a put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 118 /v put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /E 2{/.notdef}rp /H /I 6{/.notdef}rp 
/P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef 
/c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef 
/n /o /p /.notdef /r /.notdef /t /u 
/v 137{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
241.493 32.878 mo
(ConvolutionalInterleaver)
[.859085 .643997 .643997 .644012 .643997 .358063 .643997 .358063 .358063 .643997 .644012 .571854 
.358063 .428894 .643997 .358063 .571854 .428894 .358063 .571854 .571854 .643997 .571854 0 
]xsh
59.184 102.504 mo
482.2 102.504 li
482.2 55.032 li
59.184 55.032 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B7361F4A5DC306676AF4C8647FF3053FF45CCDDBEB7E9B9050
12DA1DE9402C8DB245C98EF5B89AF8B307871A82029AB9C9383D498ABA5BCF42
FD3EBA06E16095068AAD2A24F29F66CD7BEDAF75E27B9E98183114BB708CEE9F
70B53D4922DAA331AE3A4B4FD1B5CD24EA574D8FE8D1E66E3ECF87407A13A679
B23887BDCEB1C164DC6CBF6472F4BC61E5FBABA972F7976EEBF3BC4B43DEE327
20F6A1A3C1878ACCA80EBBED76DEBD40C76FFC717243DC8D6CB182005A946D70
F948846138DEF539AD5BE615B04618EEB754F0DAF886F93D007AE786FB00955E
897D78D67615B1FA609D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /E 2{/.notdef}rp /H /I 6{/.notdef}rp 
/P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef 
/c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef 
/n /o /p /.notdef /r /s /t /u 
/v 137{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
59.7778 56.062 mo
(TrellisEncoderPipeline)
[.786957 .428894 .571854 .358063 .358067 .358063 .501022 .786957 .644001 .571854 .643997 .644005 
.571854 .428894 .716125 .358063 .643997 .571854 .358063 .358063 .644005 0 ]xsh
60.656 96.616 mo
96.168 96.616 li
96.168 61.656 li
60.656 61.656 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m <1C60D8A8C9B6FF86DEBE529995F26ADC252ABAF4F8ABCE39F6B951A24C86
82F3B72A552C5D46A333AAEC49746F27474921C947B29E9EEE21EF479E8AC4CB
A64B9B4BF4B54D7069EE8C71930A689A0AC30AA5DB406CB2F2DF67D1DFA36762
A8298043AAD8738E3C2E6D8E87DCF89210EA6A7696675667850CACB8BD85BF1A
9C23A6EB480778B459116760FD79DE8BA673C0A52BBAEAA003DFFA86FA6EC61F
B9955126552099FD6C946BD155266FCC648BAFF24A5063CAAF26> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /E 2{/.notdef}rp /H /I 6{/.notdef}rp 
/P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef 
/c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v 137{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
61.3114 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571854 .358063 .358067 .358067 .501015 .786964 .643997 .571854 .643997 .644005 
.571854 .428894 .716125 .358063 .643997 .571854 .358063 .358063 .644005 .571854 .786957 .358063 
.571854 1.00207 .571846 .644005 0 ]xsh
62.128 95.88 mo
94.696 95.88 li
94.696 71.224 li
62.128 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
62.7168 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571857 .358063 .358063 .358063 .501022 .786957 .644005 .571846 .644005 .643997 
.571854 0 ]xsh
95.616 96.616 mo
131.128 96.616 li
131.128 61.656 li
95.616 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
96.2714 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571854 .358063 .358063 .35807 .501022 .786957 .643997 .571854 .643997 .644005 
.571854 .428894 .716125 .358063 .643997 .571854 .358063 .35807 .643997 .571854 .786957 .358063 
.571854 1.00206 .571854 .644005 0 ]xsh
97.088 95.88 mo
129.656 95.88 li
129.656 71.224 li
97.088 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
97.6768 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571854 .358063 .358063 .35807 .501015 .786964 .643997 .571854 .643997 .644005 
.571854 0 ]xsh
130.576 96.616 mo
166.088 96.616 li
166.088 61.656 li
130.576 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
131.231 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .786957 .644012 .571838 .644012 .643997 
.571854 .428894 .716125 .358063 .643997 .571854 .358063 .358063 .643997 .571854 .786972 .358063 
.571838 1.00208 .571854 .643997 0 ]xsh
132.048 95.88 mo
164.616 95.88 li
164.616 71.224 li
132.048 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
132.637 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .786957 .644012 .571838 .644012 .643997 
.571854 0 ]xsh
165.536 96.616 mo
201.048 96.616 li
201.048 61.656 li
165.536 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
166.191 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .786957 .644012 .571838 .644012 .643997 
.571854 .428894 .716125 .358063 .643997 .571854 .358063 .358063 .643997 .571854 .786972 .358063 
.571838 1.00208 .571854 .643997 0 ]xsh
167.008 95.88 mo
199.576 95.88 li
199.576 71.224 li
167.008 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
167.597 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .786957 .644012 .571838 .644012 .643997 
.571854 0 ]xsh
200.496 96.616 mo
236.008 96.616 li
236.008 61.656 li
200.496 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
201.151 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .786957 .644012 .571838 .644012 .643997 
.571854 .428894 .716125 .358063 .643997 .571854 .358063 .358063 .643997 .571854 .786957 .358078 
.571854 1.00206 .571854 .643997 0 ]xsh
201.968 95.88 mo
234.536 95.88 li
234.536 71.224 li
201.968 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
202.557 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .786957 .644012 .571838 .644012 .643997 
.571854 0 ]xsh
235.456 96.616 mo
270.968 96.616 li
270.968 61.656 li
235.456 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
236.111 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .786957 .644012 .571838 .644012 .643997 
.571854 .428894 .716125 .358063 .643997 .571854 .358063 .358063 .643997 .571854 .786957 .358078 
.571854 1.00206 .571854 .643997 0 ]xsh
236.928 95.88 mo
269.496 95.88 li
269.496 71.224 li
236.928 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
237.517 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .786957 .644012 .571838 .644012 .643997 
.571854 0 ]xsh
270.416 96.616 mo
305.928 96.616 li
305.928 61.656 li
270.416 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
271.071 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571838 .786957 .358063 
.571869 1.00204 .571869 .643982 0 ]xsh
271.888 95.88 mo
304.456 95.88 li
304.456 71.224 li
271.888 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
272.477 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 0 ]xsh
305.376 96.616 mo
340.888 96.616 li
340.888 61.656 li
305.376 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
306.031 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571838 .786957 .358063 
.571869 1.00204 .571869 .643982 0 ]xsh
306.848 95.88 mo
339.416 95.88 li
339.416 71.224 li
306.848 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
307.437 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 0 ]xsh
340.336 96.616 mo
375.848 96.616 li
375.848 61.656 li
340.336 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
340.991 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571838 .786957 .358063 
.571869 1.00204 .571869 .643982 0 ]xsh
341.808 95.88 mo
374.376 95.88 li
374.376 71.224 li
341.808 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
342.397 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 0 ]xsh
375.296 96.616 mo
410.808 96.616 li
410.808 61.656 li
375.296 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
375.951 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571838 .786957 .358063 
.571869 1.00204 .571869 .643982 0 ]xsh
376.768 95.88 mo
409.336 95.88 li
409.336 71.224 li
376.768 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
377.357 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 0 ]xsh
410.256 96.616 mo
445.768 96.616 li
445.768 61.656 li
410.256 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
410.911 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571838 .786957 .358063 
.571869 1.00204 .571869 .643982 0 ]xsh
411.728 95.88 mo
444.296 95.88 li
444.296 71.224 li
411.728 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
412.317 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 0 ]xsh
445.216 96.616 mo
480.728 96.616 li
480.728 61.656 li
445.216 61.656 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
445.871 62.686 mo
(TrellisEncoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571838 .786957 .358063 
.571869 1.00204 .571869 .643982 0 ]xsh
446.688 95.88 mo
479.256 95.88 li
479.256 71.224 li
446.688 71.224 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
447.277 72.254 mo
(TrellisEncoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .786957 .644012 .571838 .644012 .643982 
.571869 0 ]xsh
38.208 256.696 mo
501.704 256.696 li
501.704 134.152 li
38.208 134.152 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
38.7819 135.182 mo
(HDTVDecodePipeline)
[.929916 .929916 .786957 .929916 .929916 .571854 .571854 .644001 .644001 .57185 .716129 .358063 
.644001 .57185 .358067 .358063 .644001 0 ]xsh
39.68 214.376 mo
500.232 214.376 li
500.232 165.064 li
39.68 165.064 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
40.3304 166.094 mo
(TrellisDecoderPipeline)
[.786957 .428894 .571854 .358063 .358067 .358063 .501022 .929916 .571854 .57185 .644001 .644001 
.571854 .428894 .716125 .358067 .644001 .57185 .358067 .358063 .643997 0 ]xsh
41.152 207.752 mo
79.792 207.752 li
79.792 171.32 li
41.152 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
41.772 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571854 .358067 .358063 .358063 .501022 .929916 .571854 .571854 .643997 .644001 
.571854 .428894 .716129 .358063 .643997 .571854 .358063 .358067 .644001 .57185 .786961 .358063 
.571854 1.00206 .57185 .644001 0 ]xsh
42.624 198.184 mo
78.32 198.184 li
78.32 173.528 li
42.624 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
43.2694 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571854 .358063 .358067 .358063 .501022 .929916 .571854 .57185 .644001 .644001 
.571854 0 ]xsh
79.24 207.752 mo
117.88 207.752 li
117.88 171.32 li
79.24 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
79.86 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571854 .358063 .358063 .35807 .501015 .929916 .571854 .571854 .644005 .643997 
.571854 .428894 .716125 .358063 .644005 .571854 .358063 .358063 .643997 .571854 .786957 .358063 
.571854 1.00207 .571854 .643997 0 ]xsh
80.712 198.184 mo
116.408 198.184 li
116.408 173.528 li
80.712 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
81.3574 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571854 .358063 .358063 .35807 .501022 .929916 .571846 .571854 .644005 .643997 
.571854 0 ]xsh
117.328 207.752 mo
155.968 207.752 li
155.968 171.32 li
117.328 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
117.948 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571854 .358063 .358063 .35807 .501015 .929916 .571854 .571854 .644005 .643997 
.571854 .428894 .716125 .358063 .644005 .571854 .358063 .358063 .643997 .571854 .786957 .358063 
.571854 1.00206 .571854 .644012 0 ]xsh
118.8 198.184 mo
154.496 198.184 li
154.496 173.528 li
118.8 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
119.445 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571854 .358063 .358063 .35807 .501022 .929916 .571846 .571854 .644005 .643997 
.571854 0 ]xsh
155.416 207.752 mo
194.056 207.752 li
194.056 171.32 li
155.416 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
156.036 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .929916 .571854 .571854 .643997 .643997 
.571854 .428894 .716141 .358063 .643997 .571854 .358063 .358063 .643997 .571854 .786957 .358063 
.571854 1.00206 .571854 .644012 0 ]xsh
156.888 198.184 mo
192.584 198.184 li
192.584 173.528 li
156.888 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
157.533 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .929916 .571854 .571854 .643997 .643997 
.571854 0 ]xsh
193.504 207.752 mo
232.144 207.752 li
232.144 171.32 li
193.504 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
194.124 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .929916 .571854 .571854 .643997 .644012 
.571838 .428894 .716141 .358063 .643997 .571854 .358063 .358063 .643997 .571854 .786957 .358063 
.571854 1.00206 .571854 .644012 0 ]xsh
194.976 198.184 mo
230.672 198.184 li
230.672 173.528 li
194.976 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
195.621 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .929916 .571854 .571854 .643997 .644012 
.571838 0 ]xsh
231.592 207.752 mo
270.232 207.752 li
270.232 171.32 li
231.592 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
232.212 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .929916 .571854 .571854 .643997 .644012 
.571838 .428894 .716141 .358063 .643997 .571854 .358063 .358063 .643997 .571854 .786957 .358063 
.571854 1.00206 .571854 .644012 0 ]xsh
233.064 198.184 mo
268.76 198.184 li
268.76 173.528 li
233.064 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
233.709 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571854 .358063 .358063 .358063 .501022 .929916 .571854 .571854 .643997 .643997 
.571854 0 ]xsh
269.68 207.752 mo
308.32 207.752 li
308.32 171.32 li
269.68 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
270.3 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571869 .786957 .358063 
.571838 1.00208 .571838 .644012 0 ]xsh
271.152 198.184 mo
306.848 198.184 li
306.848 173.528 li
271.152 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
271.797 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 0 ]xsh
307.768 207.752 mo
346.408 207.752 li
346.408 171.32 li
307.768 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
308.388 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571869 .786957 .358063 
.571838 1.00208 .571838 .644012 0 ]xsh
309.24 198.184 mo
344.936 198.184 li
344.936 173.528 li
309.24 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
309.885 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 0 ]xsh
345.856 207.752 mo
384.496 207.752 li
384.496 171.32 li
345.856 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
346.476 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571869 .786957 .358063 
.571838 1.00208 .571838 .644012 0 ]xsh
347.328 198.184 mo
383.024 198.184 li
383.024 173.528 li
347.328 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
347.973 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 0 ]xsh
383.944 207.752 mo
422.584 207.752 li
422.584 171.32 li
383.944 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
384.564 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571869 .786957 .358063 
.571838 1.00208 .571838 .644012 0 ]xsh
385.416 198.184 mo
421.112 198.184 li
421.112 173.528 li
385.416 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
386.061 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 0 ]xsh
422.032 207.752 mo
460.672 207.752 li
460.672 171.32 li
422.032 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
422.652 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571869 .786957 .358063 
.571838 1.00208 .571838 .644012 0 ]xsh
423.504 198.184 mo
459.2 198.184 li
459.2 173.528 li
423.504 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
424.149 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 0 ]xsh
460.12 207.752 mo
498.76 207.752 li
498.76 171.32 li
460.12 171.32 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
460.74 172.35 mo
(TrellisDecoderPipelineElement)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 .428894 .716125 .358063 .644012 .571838 .358063 .358063 .644012 .571869 .786957 .358063 
.571838 1.00208 .571838 .644012 0 ]xsh
461.592 198.184 mo
497.288 198.184 li
497.288 173.528 li
461.592 173.528 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
462.237 174.558 mo
(TrellisDecoder)
[.786957 .428894 .571869 .358063 .358063 .358063 .501007 .929932 .571838 .571869 .643982 .644012 
.571838 0 ]xsh
243.736 237.56 mo
296.912 237.56 li
296.912 215.112 li
243.736 215.112 li
cp
@
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
244.366 216.142 mo
(ConvolutionalDeinterleaver)
[.859085 .643997 .643997 .644012 .643997 .358063 .643997 .358063 .358063 .643997 .644012 .571838 
.358078 .929916 .571838 .358078 .643997 .358063 .571854 .428894 .358063 .571854 .571838 .644012 
.571838 0 ]xsh
278.604 7.37598 mo
278.604 5.08997 275.062 3.23599 270.692 3.23599 cv
266.322 3.23599 262.78 5.08997 262.78 7.37598 cv
262.78 9.66199 266.322 11.516 270.692 11.516 cv
275.062 11.516 278.604 9.66199 278.604 7.37598 cv
@
278.604 7.37598 mo
278.604 5.08997 275.062 3.23599 270.692 3.23599 cv
266.322 3.23599 262.78 5.08997 262.78 7.37598 cv
262.78 9.66199 266.322 11.516 270.692 11.516 cv
275.062 11.516 278.604 9.66199 278.604 7.37598 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
/asterisk <1C60D8A8C9B7A73DB9A0737247D562C61165E8E636EE73CF26D64
F3C6728422CEE27A3F00DC7152CA3773F07EA559F0959F48B519FDEC6150629C
166D2B4FBEF2A598C45B9530847243905C1F3F150F0DD5877800507BF2B97A2E
4942336B61DB2054C6AB2AE38E3AEA192A16823CC1BE212834012F90F71E96A0
46E312361C7B9D33CA838F52208FFCDFB3B3A9B2A9728D3AFAB94EEE3598CA05
C0D62AFFA345B041C6B4E56F6827F181D11C4BECD0C9CCA67> |-
/hyphen <1C60D8A8C9B81F2C7E673161CF52871F3F524B3A1BAC5ADA04F510A
476> |-
/slash <1C60D8A8C9B854D088EAD778FBC18D924BA165ED7CB0EB5700C3B61B
62ACF96E65C0BF> |-
/zero <1C60D8A8C9B7A73DE18CEEF4E48C6DD01FBACAA39C3CF5567D0E5C788
075445C95D6A3B6E540D57A95C2149688073A3E100742CAF1210D033AAEFAE6F
8B444349FD5782CA146EC98165CB56922017B727DFF8905922E07> |-
/one <1C60D8A8C9B7A73DB94F41466C876FCA9AF55081C1C70D8EC4AB3C9249
D700CD0FF27B669AF104FB3406E5DFE3F3B0AB0CAE2CF1998D0DA43C395891C4
7CD031071E50A5> |-
/two <1C60D8A8C9B7A73DB9C4155FCF739F7C1974D5BF41CC3E8700100AE610
E49DF6B4C276649A8B3177B0F76FADB15EC55BD4BBD1CDF8C5F886738FFDBD44
2FF8A0594A170A20B9C3E13444FE4DC986DA862896B80FFA135FA164A257> |-
/four <1C60D8A8C9B7A73DB99E8D3796659F80CD8CFB6F4891658B64B2996E4
565B417E6680D9494DD50CBC7F026F985B68E97EBCD932CA0004F37BA5FD28FA
5EB6F0DC8CCF44A75B207DA88B4B0D8C53ACF90F9CAE1B04C7036C5BF682DB0A
BF0221167> |-
/seven <1C60D8A8C9B7A73DFE313D538903D2D688A80497AF19F58251B88346
588CB5A8F94928A032E7AE04ED687068FF5EFE684F47125CC227938E> |-
/eight <1C60D8A8C9B7A73D9EB159A3CFECEE26FAC12AD4B6691842B4C84783
E84E1D8CD272AEC54014C937C15B810E403549328E3DC44B6A66E9E0AE5509A1
20FFE6F694340EC43D35C59CD7D1B2F14C1F1D5BA576A10F77E962817750FC0E
DC62627EE0E94BCE030A10C59143A015250A384C09B6A65F8572DF3FCBF68CF8
0D23E4E88D0691BD2178810DDABD5F40D8018F795B8CB5A52DDDD05F80E9A2BC
CDF3A5E14C701FBADF0447A7AE0E47FA8F86216AC25155BFF3569B19382CA905
7B18009FE630A2D7CEFDC3A4A3> |-
/colon <1C60D8A8C9B854D0E389293C42E83787A5BE0CE9B5745E40D1B32D07
F826004562E0981DB26F3EF2E2B5CD932C33C49C462F9673F306A9A8ECFFE93D
9FCE8BF4190AA3F1208FCCE1> |-
/equal <1C60D8A8C9B7E7C1C7C30B941AA047473EBF9655DE246137CE0666A3
DD27E47997A26319529C8C4FF5C38D266AE0> |-
/greater <1C60D8A8C9B7E7C1C7C30B940B3D62C7A181F0EBB0723CBB160375
71F050C44CCE59A85ACB3DB6BF9B03383F> |-
/A <1C60D8A8C9B6079F005CDFC8A94B75FD7D89F5577E741BA5E9223B5FB59E
3315C336CDEC6F323D18A178B38DCEDA9B451B37165385283368F94E5EC5086C
A620D2549B18425DA74331F96252E5D5358EE44D33B708D9B8822975F755BF6A
D18C81AA5BF9B47D39D0AFBBC3A6521D0B18D90963534584D1092363898607EF
C07B44A235786C96> |-
/F <1C60D8A8C9B7EF322B10A2A8DE6CF647A07CB452C54BD470E6C4C389B7AB
8653B88FE6E4626649FABCEAB5DAD30BD9C2A2F1F8512C1A1DC93BDB928A3688
B193ECEDB997255AB4DCBBC4BBB3FF147299B3653B9E76139CB6E91A13A47208
F2688B5C42863D22FFBF8FD8DF09F08A1966F6652461EEB3D18F0F0CB5B8E18D
6016409AA3D413D5FA051FCF9B4DFF0734259E7DCF> |-
/G <1C60D8A8C9B6079F258D65BC2350A422AEB94BCF2D0F96794C8438625C31
5D886EF37D4AC3C2F1E1338E25B58FA7772E0B9E5E3E726371665F3474CE0B82
EB9690B23BE3168D2BE4F6B0140B5077B79CDED50A140417505C243C7D98789B
5883DC2727B8882D3854E49A79F785598024348D171E79D4C21E1DA76E252BE9
80994299353DC669631C102ABE82C3B639BE771465159436AABE7CB91BD8812B
5152BA3433FC2701117F14E8CD24269DDA8CC4248C3859> |-
/L <1C60D8A8C9B7D8BE1621F7F8A9A93A327F755C3E81E8F6E5B36D5D09EC27
E8352590DCF5FBB39847107CDCA7E2F69BF8A0E97E902F61DA0FFC19F5F5635E
A2E6B7FBC25C45E39802E8D22E33BC6334A08FAC75B725C0C2D4D8BA4EE1> |-
/O <1C60D8A8C9B6079F258D65BC2331B95A484F6FB0C89DE7976C286549CD33
A4D7316575EC038BAA234ED3FB5DEACB25E52512A7CBD428E6DBD2EB830622E8
8A44262525560702DCFFFB3478FE1A2C6113548B23F661EC01296D75C1A7D5FE
B75CD951FFE5A9> |-
/S <1C60D8A8C9B7EF320E2EFDBCAC7BC76D0C8C1FC222AFE4F464C56D04CD48
5F140DB725EC46F068943283C9A43A14A852E22E87331165F602FD95AC890BE8
83DAD7F63C31168B480A95AC244C28C8F37F118A399681DB4822661628FBDA87
D99D0367C013E32688035EC31A5C3FC194FEB20C4FCD84A9EB3547C0D5A421A0
1B87DFDA871D7919B7251A9EC84A645CA15425845057F189EC65A90DD4028CC5
B10853B05E6F7AF9E84AC6588CDCE11B6EF766B248A8304E38964E579F6EF2DC
2D4971ED042868564E8E982FE2B2> |-
/U <1C60D8A8C9B6079F675A124E1112F68E116C07D407D6BD729F3D1467FEC9
DB1B717EDCA1CB257898FAA810DC98AD012099D6E27B9582DB9C127CF24AAE1E
5B37683D2BCD64B5A5B8A07FAB5E4A8A80CE7FE3009E0C18967F5352FF3AD65B
1392BE000C7D33B48AEC2DD2A19998C5FE8EA47D78> |-
/g <1C60D8A8C9B7A73D85D7E997B7B5DF7D7777AF52CC5562CB6E990E974840
46648599A1D9C4DB63B2EA37B7BBC0C3039255635B40FAB067F562720BFA98A6
8AA5F28640EAE52B9FE1BA9F5F2A49A2F977CAB7D5C25E3626BAA2BEB9E431EA
60B6FFDB96CDFE0161651CB3C7DDAAF79341AA1B63131C7BD07B3EF7C547B329
2DEEC810138CCDC2FA69E1A2AD41097A54F4DBBBA72B1810538F2F0FBA5B3B54
046B0BB798F435A12098BB54904B4FA0166943538B1D7B8EA5970358CDBCC48E
31C506A3AAB0AC2519075E7791339AF09F8C1F93B0D81A9E5ED3B02D4C03B817
17F61566CDC855CB444B31FBC8E71F4A79E39CF6ED7B9B21E0269B8614410251
F072B930BD3C2C0B5BE3125CE4461E97B369DD7B68AF48B8706DE7D2976BB7A8
F7FA6E1A10F519A6E8E51022609E6B7A2E822DDCD222A999CAA520FD83CCB934
D41B4EF6E07BE85DFA424019E44CA0D51152EDBDE920B3C59D4A719415BD84E9
F231F0CBEF222AB9855B090598B4D01FCC8283B4EC699D2D8EDA681DF37E56EB
75FAFC019A1A3645CA60183B64A594CD3556BA6088F7C2AF3F05FDD0875B0187
C18BC8AC2785F74D85EFAA74EA4D56B1D0576FD461BA0B37199C> |-
/k <1C60D8A8C9B7A73D926FE6D4B51E06A6595F3746ABEED643EB32E31FC5C1
56BE33D279A48C7177D38FEEE25BE39FA8184693C31C3DD98D1AF000E30B25B8
F0029B9D7DAB8132C06DAF7AF8346F39C9E4C7E69A448E350100342A6E22A322
C4DEF85ED9405E1A9FCE65A5B4B5084195D644BBC14B138BCD62C9C4EFF347DE
06C9D1F36BBC04C3531EBEE642B499C247> |-
/w <1C60D8A8C9B6079F6CBBA5F366E947F933D60DF598D919B1B7650559D736
37DABDC1EE55BCEC17305D792CEB494E24BD853631335C74FFCA113C4D914522
6940D65B0FA636B78B1332922431C88D4DDF20C0A3C1C91D0C3F0EC21F67A6EF
80D94D8DD0BC64DA8FAF76B12BBC90C7B441833497F4FAAF7AFFFE22453504D1
C6C3D3F89787D8CE910F64CD7AC81F424C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 42 /asterisk put
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 55 /seven put
dup 56 /eight put
dup 58 /colon put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 70 /F put
dup 71 /G put
dup 76 /L put
dup 79 /O put
dup 83 /S put
dup 85 /U put
dup 103 /g put
dup 107 /k put
dup 119 /w put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 9{/.notdef}rp /asterisk 2{/.notdef}rp /hyphen /.notdef /slash 
/zero /one /two /.notdef /four 2{/.notdef}rp /seven /eight 
/.notdef /colon 2{/.notdef}rp /equal /greater 2{/.notdef}rp /A /.notdef 
/C /D /E /F /G /H /I 2{/.notdef}rp 
/L 2{/.notdef}rp /O /P 2{/.notdef}rp /S /T /U 
/V 10{/.notdef}rp /a /.notdef /c /d /e /.notdef 
/g /.notdef /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w 136{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
264.648 5.46197 mo
(DataSegmentGenerator)
[.929932 .571838 .358063 .571838 .716156 .571838 .644012 1.00204 .571869 .643982 .358063 .929932 
.571838 .644012 .571838 .428894 .571869 .358063 .643982 0 ]xsh
267.074 6.93395 mo
(work=478720)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
268.272 8.40597 mo
(I/O: 0->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
265.218 9.87799 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
276.12 18.048 mo
276.12 16.32 273.69 14.92 270.692 14.92 cv
267.694 14.92 265.264 16.32 265.264 18.048 cv
265.264 19.776 267.694 21.176 270.692 21.176 cv
273.69 21.176 276.12 19.776 276.12 18.048 cv
@
276.12 18.048 mo
276.12 16.32 273.69 14.92 270.692 14.92 cv
267.694 14.92 265.264 16.32 265.264 18.048 cv
265.264 19.776 267.694 21.176 270.692 21.176 cv
273.69 21.176 276.12 19.776 276.12 18.048 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73DB9E68392B0D8A76464A51F2E94D7CC8D0C2C4EA9
EB677CBC38A50658519E8BF18CD893FCF8B1BA3E22E132B8EDB4B7CD483A2AC4
23E82DF2F3816B8AE8EA5F180D3F5DFF2BF284FCE4CE5C4E107DDB61A9BE179C
50061EE6040417B0DF341D85D92A63653C2A28BA649E4CD9966C4B081E30F323
54693AC79886604480856D93C0D7CC0DE6962663CC1F198BBFA4> |-
/six <1C60D8A8C9B7A73DF81BACD811429F931042E1295F1D2320E46DE79DF7
47FCAABFFD92F045A475E54E15C8E93ECB3BD59C8545C0EF45BF22429615FC68
5C033A02F070B2C6D7D737838C1853D297AC8915086E73952A7A9847D6F588AB
17767CC39CB62607242BC1B7BFF5295CEB6C03755CD9B53DA2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 51 /three put
dup 54 /six put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 9{/.notdef}rp /asterisk 2{/.notdef}rp /hyphen /.notdef /slash 
/zero /one /two /three /four /.notdef /six /seven 
/eight /.notdef /colon 2{/.notdef}rp /equal /greater 2{/.notdef}rp /A 
/.notdef /C /D /E /F /G /H /I 
2{/.notdef}rp /L 2{/.notdef}rp /O /P 2{/.notdef}rp /S /T 
/U /V 10{/.notdef}rp /a /.notdef /c /d /e 
/.notdef /g /.notdef /i /.notdef /k /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /w 136{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
266.972 16.87 mo
(IntegerSplitter)
[.428894 .644012 .358063 .571838 .644012 .571838 .428894 .716125 .644012 .358063 .358063 .358063 
.358063 .571838 0 ]xsh
266.752 18.3419 mo
(work=1376320)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 .644012 0 
]xsh
268.272 19.8139 mo
(I/O: 1->4)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
270.692 11.608 mo
270.692 12.436 270.692 13.264 270.692 14 cv
@
270.508 14 mo
270.692 14.92 li
270.968 14 li
cp
@
270.508 14 mo
270.692 14.92 li
270.968 14 li
f
278.052 27.616 mo
278.052 25.889 274.757 24.488 270.692 24.488 cv
266.627 24.488 263.332 25.889 263.332 27.616 cv
263.332 29.344 266.627 30.744 270.692 30.744 cv
274.757 30.744 278.052 29.344 278.052 27.616 cv
@
278.052 27.616 mo
278.052 25.889 274.757 24.488 270.692 24.488 cv
266.627 24.488 263.332 25.889 263.332 27.616 cv
263.332 29.344 266.627 30.744 270.692 30.744 cv
274.757 30.744 278.052 29.344 278.052 27.616 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/K <1C60D8A8C9B6079F62AF7EE261D2819ED7974217E7034289FA7C1BABF100
C6A5480EF2F67F33525B9F0C3A7EBEA8703E8C35FFE54D3010A9809D5E12442C
409B269A7D4346FFD3D0C882E0638FE5876FB72290B12BADDE73C28ABC60097D
5F47A0B45D92F7FD41DF8475D961E4F5A95EF6558D45744A11DE71603FC94A1B
038775E2BC960C01D2B930F2> |-
/N <1C60D8A8C9B6079F62A1FB3811240F271AD0D57B19128AB853A4F8065489
9335CBBB28EC3136D3C152FE63E3DE095A87DA373AF663840B9291CE1E595DF9
055E3445B9C254BF3EDB4C50D24634C4B35DFB17409377B0AA33B856CE462A55
89549DB71F76B3A91176984A5AF9CCA94EF61258F98F1E820997EEC02ABB0C0B
82E013A2C05134681B> |-
/R <1C60D8A8C9B64EDFF4D0475F241567109AA60E358A72CDD6748BBE527383
3D9930EA16405C9FA084F4E606B7DF07A2CCABEF78658BA281F5D25760E71232
16C34541C223BEC48612BD7C0052F7AD27E210716125E9B30EDB889188D65976
1E4423BF9E66EB5CCCE83D82A2DB04554982E2E899847CA739A4B92152682375
567D18A66EABD5068029F8FB7424BADB87039D0F6B1530> |-
/W <1C60D8A8C9B5D6EF221D1F535C4E993C98F3C3E8C6F16C822BD2743EB782
1EB7D4579AED89E03CEC92EC38206B161850892F887AD5C7930EF4023F5FCBE1
1EE2208AD3E1BD1F677AACB74B3CC3710F142D0BA108A85A0E4D5D852306CED1
4B5207F2E46DF8D6DC78FEF21F895C03164E67E0D168BBFB54CA35ABBA9BABB6
1C9F3A4AAD762B0057729986D9DB719BDE2CE08FDB5B50F7244A0094B314415C
47AAC538D3C6C8E1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 75 /K put
dup 78 /N put
dup 82 /R put
dup 87 /W put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 9{/.notdef}rp /asterisk 2{/.notdef}rp /hyphen /.notdef /slash 
/zero /one /two /three /four /.notdef /six /seven 
/eight /.notdef /colon 2{/.notdef}rp /equal /greater 2{/.notdef}rp /A 
/.notdef /C /D /E /F /G /H /I 
/.notdef /K /L /.notdef /N /O /P /.notdef 
/R /S /T /U /V /W 9{/.notdef}rp /a 
/.notdef /c /d /e /.notdef /g /.notdef /i 
/.notdef /k /l /m /n /o /p /.notdef 
/r /s /t /u /v /w 136{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
264.897 26.438 mo
(ReedSolomonEncoder)
[.8591 .571838 .571838 .644012 .716125 .644012 .358063 .643982 1.00208 .644012 .643982 .786957 
.644012 .571838 .644012 .643982 .571869 0 ]xsh
265.608 27.9099 mo
(work=UNKNOWN)
[.929932 .643982 .428894 .644012 .72641 .929932 .929901 .929932 .929901 .929932 1.21585 0 
]xsh
266.984 29.3819 mo
(I/O: 187->207)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .644012 .428894 .72641 .644012 .643982 
0 ]xsh
270.692 21.176 mo
270.692 21.912 270.692 22.74 270.692 23.568 cv
@
270.508 23.568 mo
270.692 24.488 li
270.968 23.568 li
cp
@
270.508 23.568 mo
270.692 24.488 li
270.968 23.568 li
f
277.132 35.712 mo
277.132 34.797 274.249 34.056 270.692 34.056 cv
267.135 34.056 264.252 34.797 264.252 35.712 cv
264.252 36.627 267.135 37.368 270.692 37.368 cv
274.249 37.368 277.132 36.627 277.132 35.712 cv
@
277.132 35.712 mo
277.132 34.797 274.249 34.056 270.692 34.056 cv
267.135 34.056 264.252 34.797 264.252 35.712 cv
264.252 36.627 267.135 37.368 270.692 37.368 cv
274.249 37.368 277.132 36.627 277.132 35.712 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C7961C5101279ABC36EDE6472BD125007B977
158C4E9FC1695861D4B758EA0B2DA40929DA2764CDB06C7B17969E83F9B9F9DB
69731300937B8C87AE99> |-
/parenright <1C60D8A8C9B81F2C3AE115477765EA9A623E840D3901B96042A
533934EFD3574B5C656B3B3F7387587FE0D191D87B3E12F0EE70351D07A784B9
DEAB1C75708B7B3217116> |-
/comma <1C60D8A8C9B8707CDCE153BE174BF3415C26A42365D336CF0B48FBEC
E2CCCE829E5297D863F3AA9AC7B62E5A6EDE06B2E79A00ED16CF91E8C6953AD2
9D6E96EF745E730ABC2B82BE60EB1DBDD5981EF3D78237B91F6DA501> |-
/b <1C60D8A8C9B7A73D9AFACE39B0C8DF9EB6083858E657E6E95D2C42AE2914
EB3C7C6FCB5E9F471C2055D213C552ACA7BC04F55BA26F3B77D8DFB74AC132BE
41DB935437CE3B007C16B65D849E2E6D1C61659F2699A17D9AEEDDD0EBC23EB8
70A7377D2AC9DB56D0296131C3A8254097E85D96> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 98 /b put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/.notdef /six /seven /eight /.notdef /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /.notdef /C /D /E /F 
/G /H /I /.notdef /K /L /.notdef /N 
/O /P /.notdef /R /S /T /U /V 
/W 9{/.notdef}rp /a /b /c /d /e /.notdef 
/g /.notdef /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w 136{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
265.147 36.006 mo
(roundrobin\(1,1,1,1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 .321991 .644012 .321991 .643982 .322021 .643982 0 ]xsh
270.692 30.744 mo
270.692 31.572 270.692 32.4 270.692 33.228 cv
@
270.508 33.136 mo
270.692 34.056 li
270.968 33.136 li
cp
@
270.508 33.136 mo
270.692 34.056 li
270.968 33.136 li
f
251.924 43.808 mo
251.924 42.08 249.617 40.68 246.772 40.68 cv
243.927 40.68 241.62 42.08 241.62 43.808 cv
241.62 45.536 243.927 46.936 246.772 46.936 cv
249.617 46.936 251.924 45.536 251.924 43.808 cv
@
251.924 43.808 mo
251.924 42.08 249.617 40.68 246.772 40.68 cv
243.927 40.68 241.62 42.08 241.62 43.808 cv
241.62 45.536 243.927 46.936 246.772 46.936 cv
249.617 46.936 251.924 45.536 251.924 43.808 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7A73DB9D92E2C498F1C8C272174C48D3E3EA8F27C6E6BA
93064621D133D030C551A42025686691A783FB90A2D496BEF06790AC79A6878D
99BC23CD14D9CFD812148CC847ABD0CF7E73A1A9D5ACE6E2E3BBFD4DD> |-
/nine <1C60D8A8C9B7A73DFCCE6C978678EE12F2E62BD7D7FA244984C1E12F1
0EB0B8765182EBCE165DFB850DB8B03381969B80BB1CA53FFB24B5DE34530C8C
83A80415FE19B7C2B551E605143CF6469C8BCE336F9A5E5012DD932CF553D663
37837328637F50B90FF9AE8815D00BBA7EFCE6D508C5B6EBE2D> |-
/y <1C60D8A8C9B7A73DDF325AF121518DD24D79A1D6297F2682F9AD5083CE90
6B71FC8BFB529DE7E11E55AF343C688ECAE2F8E1922FBFF6524D1DEA97BD39D9
CE14632F8473959D0898D7B7EF3E2B985A44859DA5885A0B7E1416032223E48B
C8A546760893052D5D557F50BFBB6793E5108395A50448013F59BB2036802753
A16DC97698BA68F4F4EAF1FDEAF39B9DD03FEBA42B0F0E35E3A4C6407754F9F9
648DF8C8F5539FA7CCFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 53 /five put
dup 57 /nine put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /.notdef /C /D /E /F 
/G /H /I /.notdef /K /L /.notdef /N 
/O /P /.notdef /R /S /T /U /V 
/W 9{/.notdef}rp /a /b /c /d /e /.notdef 
/g /.notdef /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /.notdef /y 134{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
245.234 42.63 mo
(Delay)
[.929916 .571854 .358063 .571854 0 ]xsh
243.153 44.102 mo
(work=317952)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 .643997 0 ]xsh
244.352 45.574 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
266.092 36.908 mo
261.952 37.92 256.064 39.484 252.476 40.68 cv
252.108 40.772 251.556 41.048 251.096 41.324 cv
@
251.188 41.048 mo
250.452 41.6 li
251.372 41.416 li
cp
@
251.188 41.048 mo
250.452 41.6 li
251.372 41.416 li
f
263.884 43.808 mo
263.884 42.08 261.577 40.68 258.732 40.68 cv
255.887 40.68 253.58 42.08 253.58 43.808 cv
253.58 45.536 255.887 46.936 258.732 46.936 cv
261.577 46.936 263.884 45.536 263.884 43.808 cv
@
263.884 43.808 mo
263.884 42.08 261.577 40.68 258.732 40.68 cv
255.887 40.68 253.58 42.08 253.58 43.808 cv
253.58 45.536 255.887 46.936 258.732 46.936 cv
261.577 46.936 263.884 45.536 263.884 43.808 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
257.194 42.63 mo
(Delay)
[.929932 .571838 .358063 .571838 0 ]xsh
255.113 44.102 mo
(work=317952)
[.929916 .644012 .428894 .643982 .72644 .643982 .644012 .644012 .643982 .644012 0 ]xsh
256.312 45.574 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
268.392 37.276 mo
266.828 38.288 264.804 39.76 262.964 40.956 cv
@
262.872 40.772 mo
262.228 41.508 li
263.148 41.14 li
cp
@
262.872 40.772 mo
262.228 41.508 li
263.148 41.14 li
f
275.844 43.808 mo
275.844 42.08 273.537 40.68 270.692 40.68 cv
267.847 40.68 265.54 42.08 265.54 43.808 cv
265.54 45.536 267.847 46.936 270.692 46.936 cv
273.537 46.936 275.844 45.536 275.844 43.808 cv
@
275.844 43.808 mo
275.844 42.08 273.537 40.68 270.692 40.68 cv
267.847 40.68 265.54 42.08 265.54 43.808 cv
265.54 45.536 267.847 46.936 270.692 46.936 cv
273.537 46.936 275.844 45.536 275.844 43.808 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
269.154 42.63 mo
(Delay)
[.929932 .571838 .358063 .571838 0 ]xsh
267.073 44.102 mo
(work=317952)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
268.272 45.574 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
270.692 37.368 mo
270.692 38.012 270.692 38.932 270.692 39.76 cv
@
270.508 39.76 mo
270.692 40.68 li
270.968 39.76 li
cp
@
270.508 39.76 mo
270.692 40.68 li
270.968 39.76 li
f
287.804 43.808 mo
287.804 42.08 285.497 40.68 282.652 40.68 cv
279.807 40.68 277.5 42.08 277.5 43.808 cv
277.5 45.536 279.807 46.936 282.652 46.936 cv
285.497 46.936 287.804 45.536 287.804 43.808 cv
@
287.804 43.808 mo
287.804 42.08 285.497 40.68 282.652 40.68 cv
279.807 40.68 277.5 42.08 277.5 43.808 cv
277.5 45.536 279.807 46.936 282.652 46.936 cv
285.497 46.936 287.804 45.536 287.804 43.808 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
281.114 42.63 mo
(Delay)
[.929932 .571838 .358063 .571838 0 ]xsh
279.033 44.102 mo
(work=317952)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
280.232 45.574 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
272.992 37.276 mo
274.556 38.288 276.58 39.76 278.42 40.956 cv
@
278.328 41.14 mo
279.156 41.508 li
278.604 40.772 li
cp
@
278.328 41.14 mo
279.156 41.508 li
278.604 40.772 li
f
299.764 43.808 mo
299.764 42.08 297.457 40.68 294.612 40.68 cv
291.767 40.68 289.46 42.08 289.46 43.808 cv
289.46 45.536 291.767 46.936 294.612 46.936 cv
297.457 46.936 299.764 45.536 299.764 43.808 cv
@
299.764 43.808 mo
299.764 42.08 297.457 40.68 294.612 40.68 cv
291.767 40.68 289.46 42.08 289.46 43.808 cv
289.46 45.536 291.767 46.936 294.612 46.936 cv
297.457 46.936 299.764 45.536 299.764 43.808 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
293.074 42.63 mo
(Delay)
[.929932 .571838 .358063 .571838 0 ]xsh
290.993 44.102 mo
(work=317952)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
292.192 45.574 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
275.292 36.908 mo
279.432 37.92 285.32 39.484 288.908 40.68 cv
289.276 40.772 289.644 40.956 290.012 41.14 cv
@
290.012 41.416 mo
290.932 41.6 li
290.196 40.956 li
cp
@
290.012 41.416 mo
290.932 41.6 li
290.196 40.956 li
f
277.132 51.904 mo
277.132 50.989 274.249 50.248 270.692 50.248 cv
267.135 50.248 264.252 50.989 264.252 51.904 cv
264.252 52.819 267.135 53.56 270.692 53.56 cv
274.249 53.56 277.132 52.819 277.132 51.904 cv
@
277.132 51.904 mo
277.132 50.989 274.249 50.248 270.692 50.248 cv
267.135 50.248 264.252 50.989 264.252 51.904 cv
264.252 52.819 267.135 53.56 270.692 53.56 cv
274.249 53.56 277.132 52.819 277.132 51.904 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
265.147 52.198 mo
(roundrobin\(1,1,1,1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 .321991 .644012 .321991 .643982 .322021 .643982 0 ]xsh
280.536 58.896 mo
280.536 57.981 276.129 57.24 270.692 57.24 cv
265.255 57.24 260.848 57.981 260.848 58.896 cv
260.848 59.811 265.255 60.552 270.692 60.552 cv
276.129 60.552 280.536 59.811 280.536 58.896 cv
@
280.536 58.896 mo
280.536 57.981 276.129 57.24 270.692 57.24 cv
265.255 57.24 260.848 57.981 260.848 58.896 cv
260.848 59.811 265.255 60.552 270.692 60.552 cv
276.129 60.552 280.536 59.811 280.536 58.896 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
261.766 59.19 mo
(roundrobin\(1,1,1,1,1,1,1,1,1,1,1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 .321991 .644012 .321991 .643982 .322021 .643982 .322021 .643982 .322021 .643982 
.321991 .644012 .321991 .644012 .321991 .644012 .321991 .644012 .321991 .644012 0 ]xsh
270.692 53.56 mo
270.692 54.388 270.692 55.4 270.692 56.32 cv
@
270.508 56.32 mo
270.692 57.24 li
270.968 56.32 li
cp
@
270.508 56.32 mo
270.692 57.24 li
270.968 56.32 li
f
250.452 46.016 mo
251.188 46.384 251.924 46.752 252.476 46.936 cv
255.788 48.04 261.216 49.512 265.172 50.524 cv
@
265.08 50.708 mo
266 50.708 li
265.172 50.248 li
cp
@
265.08 50.708 mo
266 50.708 li
265.172 50.248 li
f
262.228 46.108 mo
263.976 47.304 266.092 48.776 267.748 49.88 cv
@
267.472 49.972 mo
268.392 50.34 li
267.748 49.604 li
cp
@
267.472 49.972 mo
268.392 50.34 li
267.748 49.604 li
f
270.692 46.936 mo
270.692 47.764 270.692 48.592 270.692 49.42 cv
@
270.508 49.328 mo
270.692 50.248 li
270.968 49.328 li
cp
@
270.508 49.328 mo
270.692 50.248 li
270.968 49.328 li
f
279.156 46.108 mo
277.408 47.304 275.292 48.776 273.636 49.88 cv
@
273.636 49.604 mo
272.992 50.34 li
273.912 49.972 li
cp
@
273.636 49.604 mo
272.992 50.34 li
273.912 49.972 li
f
290.932 46.016 mo
290.196 46.384 289.552 46.752 288.908 46.936 cv
285.504 48.04 279.984 49.512 275.844 50.616 cv
@
276.12 50.248 mo
275.292 50.8 li
276.212 50.708 li
cp
@
276.12 50.248 mo
275.292 50.8 li
276.212 50.708 li
f
93.224 66.992 mo
93.224 65.265 90.9173 63.864 88.072 63.864 cv
85.2267 63.864 82.92 65.265 82.92 66.992 cv
82.92 68.72 85.2267 70.12 88.072 70.12 cv
90.9173 70.12 93.224 68.72 93.224 66.992 cv
@
93.224 66.992 mo
93.224 65.265 90.9173 63.864 88.072 63.864 cv
85.2267 63.864 82.92 65.265 82.92 66.992 cv
82.92 68.72 85.2267 70.12 88.072 70.12 cv
90.9173 70.12 93.224 68.72 93.224 66.992 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDFF4D0475F24A0512970A16CFF6BFBD1A1A12D07A62723
BF27DBD01B60ACEC3C9DB4E627348B4F9C96D245E2397B81856FE7B9149C0D88
A0B1C89901A357B578317FC0F49D1050D95CF70B7F7A7C5741B1B644F20C16DB
8F1BD7E6C45546C9302E6AD757CA73E92696A658F8A903A2E6B5FA3BE24637C3
3393411FB0E113E4BDFEBF11B4E90F57471B306273B2241C3C23457DA84CC16B
22781151F6DE159B155116967F7D53FA1DDDDF14084F0631BA1C08300F50E5BA
9DC336D8349BEA3371DCAFDF658781D6> |-
/f <1C60D8A8C9B81F2C3AAA7F9332A1FC560AB2BC70F6F61F670AD82FC8B626
674790DAFBDF46077811E1DF38721CA7CA8FBC2C5E006E567037490710BD3A02
BCB7C7EDEC00C0FF3F7CF7FF144794FA5B0DC9D77482C00E98ABF65E83ECDA1A
E1009D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 66 /B put
dup 102 /f put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /B /C /D /E /F 
/G /H /I /.notdef /K /L /.notdef /N 
/O /P /.notdef /R /S /T /U /V 
/W 9{/.notdef}rp /a /b /c /d /e /f 
/g /.notdef /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /.notdef /y 134{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
86.2115 65.814 mo
(Bitifier)
[.859085 .358063 .358063 .35807 .428894 .358063 .571854 0 ]xsh
84.4534 67.286 mo
(work=184920)
[.929916 .643997 .428894 .644005 .726425 .643997 .644005 .643997 .643997 .644005 0 ]xsh
85.6519 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
260.848 59.08 mo
223.864 59.632 94.972 61.656 94.972 61.656 cv
93.776 61.748 92.304 62.668 91.108 63.772 cv
@
91.108 63.404 mo
90.648 64.232 li
91.476 63.772 li
cp
@
91.108 63.404 mo
90.648 64.232 li
91.476 63.772 li
f
128.184 66.992 mo
128.184 65.265 125.877 63.864 123.032 63.864 cv
120.187 63.864 117.88 65.265 117.88 66.992 cv
117.88 68.72 120.187 70.12 123.032 70.12 cv
125.877 70.12 128.184 68.72 128.184 66.992 cv
@
128.184 66.992 mo
128.184 65.265 125.877 63.864 123.032 63.864 cv
120.187 63.864 117.88 65.265 117.88 66.992 cv
117.88 68.72 120.187 70.12 123.032 70.12 cv
125.877 70.12 128.184 68.72 128.184 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
121.172 65.814 mo
(Bitifier)
[.859085 .358063 .358063 .35807 .428894 .358063 .571854 0 ]xsh
119.414 67.286 mo
(work=184920)
[.929916 .643997 .428894 .644005 .726425 .643997 .644005 .643997 .643997 .644005 0 ]xsh
120.612 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
260.848 59.08 mo
230.58 59.632 139.684 61.196 129.932 61.656 cv
128.736 61.748 127.264 62.668 126.068 63.772 cv
@
126.068 63.404 mo
125.608 64.232 li
126.436 63.772 li
cp
@
126.068 63.404 mo
125.608 64.232 li
126.436 63.772 li
f
163.144 66.992 mo
163.144 65.265 160.837 63.864 157.992 63.864 cv
155.147 63.864 152.84 65.265 152.84 66.992 cv
152.84 68.72 155.147 70.12 157.992 70.12 cv
160.837 70.12 163.144 68.72 163.144 66.992 cv
@
163.144 66.992 mo
163.144 65.265 160.837 63.864 157.992 63.864 cv
155.147 63.864 152.84 65.265 152.84 66.992 cv
152.84 68.72 155.147 70.12 157.992 70.12 cv
160.837 70.12 163.144 68.72 163.144 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
156.132 65.814 mo
(Bitifier)
[.859085 .358063 .358063 .358063 .428894 .358063 .571854 0 ]xsh
154.374 67.286 mo
(work=184920)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 .643997 0 ]xsh
155.572 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
260.94 59.172 mo
234.812 59.816 164.892 61.656 164.892 61.656 cv
163.696 61.748 162.316 62.76 161.028 63.772 cv
@
161.028 63.404 mo
160.568 64.232 li
161.396 63.772 li
cp
@
161.028 63.404 mo
160.568 64.232 li
161.396 63.772 li
f
198.104 66.992 mo
198.104 65.265 195.797 63.864 192.952 63.864 cv
190.107 63.864 187.8 65.265 187.8 66.992 cv
187.8 68.72 190.107 70.12 192.952 70.12 cv
195.797 70.12 198.104 68.72 198.104 66.992 cv
@
198.104 66.992 mo
198.104 65.265 195.797 63.864 192.952 63.864 cv
190.107 63.864 187.8 65.265 187.8 66.992 cv
187.8 68.72 190.107 70.12 192.952 70.12 cv
195.797 70.12 198.104 68.72 198.104 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
191.092 65.814 mo
(Bitifier)
[.859085 .358063 .358063 .358063 .428894 .358063 .571854 0 ]xsh
189.334 67.286 mo
(work=184920)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 .643997 0 ]xsh
190.532 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
260.848 58.896 mo
240.516 59.08 220.092 59.632 199.852 61.656 cv
198.656 61.84 197.276 62.76 195.988 63.864 cv
@
195.988 63.496 mo
195.528 64.324 li
196.356 63.864 li
cp
@
195.988 63.496 mo
195.528 64.324 li
196.356 63.864 li
f
233.064 66.992 mo
233.064 65.265 230.757 63.864 227.912 63.864 cv
225.067 63.864 222.76 65.265 222.76 66.992 cv
222.76 68.72 225.067 70.12 227.912 70.12 cv
230.757 70.12 233.064 68.72 233.064 66.992 cv
@
233.064 66.992 mo
233.064 65.265 230.757 63.864 227.912 63.864 cv
225.067 63.864 222.76 65.265 222.76 66.992 cv
222.76 68.72 225.067 70.12 227.912 70.12 cv
230.757 70.12 233.064 68.72 233.064 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
226.052 65.814 mo
(Bitifier)
[.859085 .358063 .358063 .358063 .428894 .358063 .571854 0 ]xsh
224.294 67.286 mo
(work=184920)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 .643997 0 ]xsh
225.492 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
261.032 59.264 mo
253.028 59.632 241.804 60.368 234.812 61.656 cv
233.708 61.84 232.42 62.76 231.316 63.68 cv
@
231.132 63.588 mo
230.58 64.324 li
231.408 63.864 li
cp
@
231.132 63.588 mo
230.58 64.324 li
231.408 63.864 li
f
268.024 66.992 mo
268.024 65.265 265.717 63.864 262.872 63.864 cv
260.027 63.864 257.72 65.265 257.72 66.992 cv
257.72 68.72 260.027 70.12 262.872 70.12 cv
265.717 70.12 268.024 68.72 268.024 66.992 cv
@
268.024 66.992 mo
268.024 65.265 265.717 63.864 262.872 63.864 cv
260.027 63.864 257.72 65.265 257.72 66.992 cv
257.72 68.72 260.027 70.12 262.872 70.12 cv
265.717 70.12 268.024 68.72 268.024 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
261.012 65.814 mo
(Bitifier)
[.8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
259.254 67.286 mo
(work=184920)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
260.452 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
269.128 60.552 mo
268.208 61.564 267.012 62.76 266 63.864 cv
@
266 63.496 mo
265.54 64.324 li
266.368 63.864 li
cp
@
266 63.496 mo
265.54 64.324 li
266.368 63.864 li
f
283.664 66.992 mo
283.664 65.265 281.357 63.864 278.512 63.864 cv
275.667 63.864 273.36 65.265 273.36 66.992 cv
273.36 68.72 275.667 70.12 278.512 70.12 cv
281.357 70.12 283.664 68.72 283.664 66.992 cv
@
283.664 66.992 mo
283.664 65.265 281.357 63.864 278.512 63.864 cv
275.667 63.864 273.36 65.265 273.36 66.992 cv
273.36 68.72 275.667 70.12 278.512 70.12 cv
281.357 70.12 283.664 68.72 283.664 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
276.652 65.814 mo
(Bitifier)
[.8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
274.894 67.286 mo
(work=184920)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
276.092 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
272.256 60.552 mo
273.084 61.472 274.188 62.576 275.2 63.68 cv
@
275.016 63.864 mo
275.844 64.324 li
275.384 63.496 li
cp
@
275.016 63.864 mo
275.844 64.324 li
275.384 63.496 li
f
318.624 66.992 mo
318.624 65.265 316.317 63.864 313.472 63.864 cv
310.627 63.864 308.32 65.265 308.32 66.992 cv
308.32 68.72 310.627 70.12 313.472 70.12 cv
316.317 70.12 318.624 68.72 318.624 66.992 cv
@
318.624 66.992 mo
318.624 65.265 316.317 63.864 313.472 63.864 cv
310.627 63.864 308.32 65.265 308.32 66.992 cv
308.32 68.72 310.627 70.12 313.472 70.12 cv
316.317 70.12 318.624 68.72 318.624 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
311.612 65.814 mo
(Bitifier)
[.8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
309.854 67.286 mo
(work=184920)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
311.052 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
280.352 59.264 mo
288.356 59.632 299.58 60.368 306.572 61.656 cv
307.676 61.84 308.964 62.76 310.068 63.588 cv
@
309.976 63.772 mo
310.804 64.232 li
310.252 63.496 li
cp
@
309.976 63.772 mo
310.804 64.232 li
310.252 63.496 li
f
353.584 66.992 mo
353.584 65.265 351.277 63.864 348.432 63.864 cv
345.587 63.864 343.28 65.265 343.28 66.992 cv
343.28 68.72 345.587 70.12 348.432 70.12 cv
351.277 70.12 353.584 68.72 353.584 66.992 cv
@
353.584 66.992 mo
353.584 65.265 351.277 63.864 348.432 63.864 cv
345.587 63.864 343.28 65.265 343.28 66.992 cv
343.28 68.72 345.587 70.12 348.432 70.12 cv
351.277 70.12 353.584 68.72 353.584 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
346.572 65.814 mo
(Bitifier)
[.8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
344.814 67.286 mo
(work=184920)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
346.012 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
280.536 58.896 mo
300.96 59.08 321.292 59.632 341.532 61.656 cv
342.636 61.84 344.016 62.668 345.12 63.588 cv
@
345.028 63.772 mo
345.856 64.232 li
345.304 63.496 li
cp
@
345.028 63.772 mo
345.856 64.232 li
345.304 63.496 li
f
388.544 66.992 mo
388.544 65.265 386.237 63.864 383.392 63.864 cv
380.547 63.864 378.24 65.265 378.24 66.992 cv
378.24 68.72 380.547 70.12 383.392 70.12 cv
386.237 70.12 388.544 68.72 388.544 66.992 cv
@
388.544 66.992 mo
388.544 65.265 386.237 63.864 383.392 63.864 cv
380.547 63.864 378.24 65.265 378.24 66.992 cv
378.24 68.72 380.547 70.12 383.392 70.12 cv
386.237 70.12 388.544 68.72 388.544 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
381.532 65.814 mo
(Bitifier)
[.8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
379.774 67.286 mo
(work=184920)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
380.972 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
280.444 59.172 mo
306.572 59.816 376.492 61.656 376.492 61.656 cv
377.596 61.748 378.976 62.576 380.08 63.588 cv
@
379.988 63.772 mo
380.816 64.232 li
380.264 63.496 li
cp
@
379.988 63.772 mo
380.816 64.232 li
380.264 63.496 li
f
423.504 66.992 mo
423.504 65.265 421.197 63.864 418.352 63.864 cv
415.507 63.864 413.2 65.265 413.2 66.992 cv
413.2 68.72 415.507 70.12 418.352 70.12 cv
421.197 70.12 423.504 68.72 423.504 66.992 cv
@
423.504 66.992 mo
423.504 65.265 421.197 63.864 418.352 63.864 cv
415.507 63.864 413.2 65.265 413.2 66.992 cv
413.2 68.72 415.507 70.12 418.352 70.12 cv
421.197 70.12 423.504 68.72 423.504 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
416.492 65.814 mo
(Bitifier)
[.8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
414.734 67.286 mo
(work=184920)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
415.932 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
280.536 58.988 mo
309.24 59.448 392.224 60.644 411.452 61.656 cv
412.648 61.748 414.12 62.668 415.408 63.772 cv
@
415.04 63.772 mo
415.868 64.232 li
415.408 63.404 li
cp
@
415.04 63.772 mo
415.868 64.232 li
415.408 63.404 li
f
458.464 66.992 mo
458.464 65.265 456.157 63.864 453.312 63.864 cv
450.467 63.864 448.16 65.265 448.16 66.992 cv
448.16 68.72 450.467 70.12 453.312 70.12 cv
456.157 70.12 458.464 68.72 458.464 66.992 cv
@
458.464 66.992 mo
458.464 65.265 456.157 63.864 453.312 63.864 cv
450.467 63.864 448.16 65.265 448.16 66.992 cv
448.16 68.72 450.467 70.12 453.312 70.12 cv
456.157 70.12 458.464 68.72 458.464 66.992 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
451.452 65.814 mo
(Bitifier)
[.8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
449.694 67.286 mo
(work=184920)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
450.892 68.758 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
280.536 58.896 mo
335.92 58.896 391.212 59.264 446.412 61.656 cv
447.608 61.748 449.08 62.668 450.368 63.772 cv
@
450 63.772 mo
450.828 64.232 li
450.368 63.404 li
cp
@
450 63.772 mo
450.828 64.232 li
450.368 63.404 li
f
284.4 100.112 mo
284.4 99.197 278.263 98.456 270.692 98.456 cv
263.121 98.456 256.984 99.197 256.984 100.112 cv
256.984 101.027 263.121 101.768 270.692 101.768 cv
278.263 101.768 284.4 101.027 284.4 100.112 cv
@
284.4 100.112 mo
284.4 99.197 278.263 98.456 270.692 98.456 cv
263.121 98.456 256.984 99.197 256.984 100.112 cv
256.984 101.027 263.121 101.768 270.692 101.768 cv
278.263 101.768 284.4 101.027 284.4 100.112 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
257.902 100.406 mo
(roundrobin\(12,12,12,12,12,12,12,12,12,12,12,12\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.643982 .322021 .643982 .644012 .321991 .644012 .643982 .322021 .643982 .644012 .321991 .644012 
.643982 .322021 .643982 .644012 .321991 .644012 .643982 .322021 .643982 .644012 .321991 .644012 
.643982 .321991 .644012 .644012 .321991 .644012 .643982 .322021 .643982 .644012 0 ]xsh
278.052 109.312 mo
278.052 107.026 274.757 105.172 270.692 105.172 cv
266.627 105.172 263.332 107.026 263.332 109.312 cv
263.332 111.598 266.627 113.452 270.692 113.452 cv
274.757 113.452 278.052 111.598 278.052 109.312 cv
@
278.052 109.312 mo
278.052 107.026 274.757 105.172 270.692 105.172 cv
266.627 105.172 263.332 107.026 263.332 109.312 cv
263.332 111.598 266.627 113.452 270.692 113.452 cv
274.757 113.452 278.052 111.598 278.052 109.312 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
267.402 107.398 mo
(DataReorder)
[.929932 .571838 .358063 .571838 .8591 .571838 .644012 .428894 .644012 .571838 0 ]xsh
266.43 108.87 mo
(work=58274640)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 .644012 .643982 
0 ]xsh
268.272 110.342 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
265.218 111.814 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
270.692 101.768 mo
270.692 102.412 270.692 103.24 270.692 104.068 cv
@
270.508 104.16 mo
270.692 105.08 li
270.968 104.16 li
cp
@
270.508 104.16 mo
270.692 105.08 li
270.968 104.16 li
f
91.66 75.088 mo
91.66 74.173 89.3945 73.432 86.6 73.432 cv
83.8055 73.432 81.54 74.173 81.54 75.088 cv
81.54 76.003 83.8055 76.744 86.6 76.744 cv
89.3945 76.744 91.66 76.003 91.66 75.088 cv
@
91.66 75.088 mo
91.66 74.173 89.3945 73.432 86.6 73.432 cv
83.8055 73.432 81.54 74.173 81.54 75.088 cv
81.54 76.003 83.8055 76.744 86.6 76.744 cv
89.3945 76.744 91.66 76.003 91.66 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
82.5042 75.382 mo
(roundrobin\(1,1\))
[.428894 .643997 .644005 .643997 .644005 .428894 .643997 .643997 .358063 .644005 .428894 .643997 
.321999 .644005 0 ]xsh
87.52 70.12 mo
87.428 70.948 87.244 71.868 87.06 72.604 cv
@
86.876 72.512 mo
86.876 73.432 li
87.336 72.604 li
cp
@
86.876 72.512 mo
86.876 73.432 li
87.336 72.604 li
f
77.584 84.288 mo
77.584 82.002 74.2888 80.148 70.224 80.148 cv
66.1592 80.148 62.864 82.002 62.864 84.288 cv
62.864 86.574 66.1592 88.428 70.224 88.428 cv
74.2888 88.428 77.584 86.574 77.584 84.288 cv
@
77.584 84.288 mo
77.584 82.002 74.2888 80.148 70.224 80.148 cv
66.1592 80.148 62.864 82.002 62.864 84.288 cv
62.864 86.574 66.1592 88.428 70.224 88.428 cv
74.2888 88.428 77.584 86.574 77.584 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
67.7917 82.374 mo
(PreCoder)
[.716125 .428894 .571854 .859085 .644005 .643997 .571854 0 ]xsh
66.9274 83.846 mo
(work=15180)
[.929916 .643997 .428894 .644005 .726425 .643997 .644005 .643997 .643997 0 ]xsh
67.8039 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
64.7501 86.79 mo
(*** STATEFUL ***)
[.643997 .644005 .643997 .321999 .716133 .786957 .929916 .786957 .786957 .716125 .929916 .786964 
.321999 .643997 .644005 0 ]xsh
84.024 76.56 mo
81.908 77.756 78.78 79.504 76.02 81.068 cv
@
76.204 80.7 mo
75.468 81.344 li
76.388 81.16 li
cp
@
76.204 80.7 mo
75.468 81.344 li
76.388 81.16 li
f
93.96 84.288 mo
93.96 82.002 90.6648 80.148 86.6 80.148 cv
82.5352 80.148 79.24 82.002 79.24 84.288 cv
79.24 86.574 82.5352 88.428 86.6 88.428 cv
90.6648 88.428 93.96 86.574 93.96 84.288 cv
@
93.96 84.288 mo
93.96 82.002 90.6648 80.148 86.6 80.148 cv
82.5352 80.148 79.24 82.002 79.24 84.288 cv
79.24 86.574 82.5352 88.428 86.6 88.428 cv
90.6648 88.428 93.96 86.574 93.96 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
81.3071 82.374 mo
(UngerboeckEncoder)
[.929916 .643997 .644005 .571854 .428894 .643997 .643997 .571854 .571854 .644005 .786957 .643997 
.571854 .643997 .644005 .571846 0 ]xsh
83.3034 83.846 mo
(work=24840)
[.929916 .643997 .428894 .644005 .726425 .643997 .644005 .643997 .643997 0 ]xsh
84.1799 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
81.1261 86.79 mo
(*** STATEFUL ***)
[.643997 .644005 .643997 .321999 .716133 .786957 .929916 .786957 .786957 .716125 .929916 .786964 
.321999 .643997 .644005 0 ]xsh
86.6 76.744 mo
86.6 77.388 86.6 78.216 86.6 79.044 cv
@
86.416 79.136 mo
86.6 80.056 li
86.876 79.136 li
cp
@
86.416 79.136 mo
86.6 80.056 li
86.876 79.136 li
f
91.66 93.488 mo
91.66 92.573 89.3945 91.832 86.6 91.832 cv
83.8055 91.832 81.54 92.573 81.54 93.488 cv
81.54 94.403 83.8055 95.144 86.6 95.144 cv
89.3945 95.144 91.66 94.403 91.66 93.488 cv
@
91.66 93.488 mo
91.66 92.573 89.3945 91.832 86.6 91.832 cv
83.8055 91.832 81.54 92.573 81.54 93.488 cv
81.54 94.403 83.8055 95.144 86.6 95.144 cv
89.3945 95.144 91.66 94.403 91.66 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
82.5042 93.782 mo
(roundrobin\(1,2\))
[.428894 .643997 .644005 .643997 .644005 .428894 .643997 .643997 .358063 .644005 .428894 .643997 
.321999 .644005 0 ]xsh
89.728 94.776 mo
91.844 95.604 94.604 96.524 96.444 96.616 cv
142.076 98.272 223.128 99.468 256.248 99.928 cv
@
256.156 100.112 mo
257.076 99.928 li
256.156 99.652 li
cp
@
256.156 100.112 mo
257.076 99.928 li
256.156 99.652 li
f
75.468 87.232 mo
78.044 88.612 81.08 90.36 83.288 91.648 cv
@
83.104 91.832 mo
84.024 92.016 li
83.288 91.372 li
cp
@
83.104 91.832 mo
84.024 92.016 li
83.288 91.372 li
f
86.6 88.52 mo
86.6 89.348 86.6 90.268 86.6 91.004 cv
@
86.416 90.912 mo
86.6 91.832 li
86.876 90.912 li
cp
@
86.416 90.912 mo
86.6 91.832 li
86.876 90.912 li
f
126.62 75.088 mo
126.62 74.173 124.355 73.432 121.56 73.432 cv
118.765 73.432 116.5 74.173 116.5 75.088 cv
116.5 76.003 118.765 76.744 121.56 76.744 cv
124.355 76.744 126.62 76.003 126.62 75.088 cv
@
126.62 75.088 mo
126.62 74.173 124.355 73.432 121.56 73.432 cv
118.765 73.432 116.5 74.173 116.5 75.088 cv
116.5 76.003 118.765 76.744 121.56 76.744 cv
124.355 76.744 126.62 76.003 126.62 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
117.464 75.382 mo
(roundrobin\(1,1\))
[.428894 .643997 .644005 .643997 .644005 .428894 .643997 .643997 .358063 .644005 .428894 .643997 
.321999 .644005 0 ]xsh
122.48 70.12 mo
122.388 70.948 122.204 71.868 122.02 72.604 cv
@
121.836 72.512 mo
121.836 73.432 li
122.296 72.604 li
cp
@
121.836 72.512 mo
121.836 73.432 li
122.296 72.604 li
f
112.544 84.288 mo
112.544 82.002 109.249 80.148 105.184 80.148 cv
101.119 80.148 97.824 82.002 97.824 84.288 cv
97.824 86.574 101.119 88.428 105.184 88.428 cv
109.249 88.428 112.544 86.574 112.544 84.288 cv
@
112.544 84.288 mo
112.544 82.002 109.249 80.148 105.184 80.148 cv
101.119 80.148 97.824 82.002 97.824 84.288 cv
97.824 86.574 101.119 88.428 105.184 88.428 cv
109.249 88.428 112.544 86.574 112.544 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
102.752 82.374 mo
(PreCoder)
[.716125 .428894 .571854 .859085 .644005 .643997 .571854 0 ]xsh
101.888 83.846 mo
(work=15180)
[.929916 .643997 .428894 .644005 .726425 .643997 .644005 .643997 .643997 0 ]xsh
102.764 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
99.7104 86.79 mo
(*** STATEFUL ***)
[.643997 .644005 .643997 .321999 .716133 .786957 .929916 .786957 .786957 .716125 .929916 .786964 
.321999 .643997 .644005 0 ]xsh
118.984 76.56 mo
116.868 77.756 113.74 79.504 110.98 81.068 cv
@
111.164 80.7 mo
110.428 81.344 li
111.348 81.16 li
cp
@
111.164 80.7 mo
110.428 81.344 li
111.348 81.16 li
f
128.92 84.288 mo
128.92 82.002 125.625 80.148 121.56 80.148 cv
117.495 80.148 114.2 82.002 114.2 84.288 cv
114.2 86.574 117.495 88.428 121.56 88.428 cv
125.625 88.428 128.92 86.574 128.92 84.288 cv
@
128.92 84.288 mo
128.92 82.002 125.625 80.148 121.56 80.148 cv
117.495 80.148 114.2 82.002 114.2 84.288 cv
114.2 86.574 117.495 88.428 121.56 88.428 cv
125.625 88.428 128.92 86.574 128.92 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
116.267 82.374 mo
(UngerboeckEncoder)
[.929916 .643997 .644005 .571854 .428894 .643997 .643997 .571854 .571854 .644005 .786957 .643997 
.571854 .643997 .644005 .571846 0 ]xsh
118.263 83.846 mo
(work=24840)
[.929916 .643997 .428894 .644005 .726425 .643997 .644005 .643997 .643997 0 ]xsh
119.14 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
116.086 86.79 mo
(*** STATEFUL ***)
[.643997 .644005 .643997 .321999 .716133 .786957 .929916 .786957 .786957 .716125 .929916 .786964 
.321999 .643997 .644005 0 ]xsh
121.56 76.744 mo
121.56 77.388 121.56 78.216 121.56 79.044 cv
@
121.376 79.136 mo
121.56 80.056 li
121.836 79.136 li
cp
@
121.376 79.136 mo
121.56 80.056 li
121.836 79.136 li
f
126.62 93.488 mo
126.62 92.573 124.355 91.832 121.56 91.832 cv
118.765 91.832 116.5 92.573 116.5 93.488 cv
116.5 94.403 118.765 95.144 121.56 95.144 cv
124.355 95.144 126.62 94.403 126.62 93.488 cv
@
126.62 93.488 mo
126.62 92.573 124.355 91.832 121.56 91.832 cv
118.765 91.832 116.5 92.573 116.5 93.488 cv
116.5 94.403 118.765 95.144 121.56 95.144 cv
124.355 95.144 126.62 94.403 126.62 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
117.464 93.782 mo
(roundrobin\(1,2\))
[.428894 .643997 .644005 .643997 .644005 .428894 .643997 .643997 .358063 .644005 .428894 .643997 
.321999 .644005 0 ]xsh
124.688 94.776 mo
126.804 95.604 129.564 96.524 131.404 96.616 cv
166.64 98.272 228.464 99.376 256.34 99.928 cv
@
256.156 100.112 mo
257.076 99.928 li
256.156 99.652 li
cp
@
256.156 100.112 mo
257.076 99.928 li
256.156 99.652 li
f
110.428 87.232 mo
113.004 88.612 116.04 90.36 118.248 91.648 cv
@
118.064 91.832 mo
118.984 92.016 li
118.248 91.372 li
cp
@
118.064 91.832 mo
118.984 92.016 li
118.248 91.372 li
f
121.56 88.52 mo
121.56 89.348 121.56 90.268 121.56 91.004 cv
@
121.376 90.912 mo
121.56 91.832 li
121.836 90.912 li
cp
@
121.376 90.912 mo
121.56 91.832 li
121.836 90.912 li
f
161.58 75.088 mo
161.58 74.173 159.315 73.432 156.52 73.432 cv
153.725 73.432 151.46 74.173 151.46 75.088 cv
151.46 76.003 153.725 76.744 156.52 76.744 cv
159.315 76.744 161.58 76.003 161.58 75.088 cv
@
161.58 75.088 mo
161.58 74.173 159.315 73.432 156.52 73.432 cv
153.725 73.432 151.46 74.173 151.46 75.088 cv
151.46 76.003 153.725 76.744 156.52 76.744 cv
159.315 76.744 161.58 76.003 161.58 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
152.424 75.382 mo
(roundrobin\(1,1\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
157.44 70.12 mo
157.348 70.948 157.164 71.868 156.98 72.604 cv
@
156.796 72.512 mo
156.796 73.432 li
157.256 72.604 li
cp
@
156.796 72.512 mo
156.796 73.432 li
157.256 72.604 li
f
147.504 84.288 mo
147.504 82.002 144.209 80.148 140.144 80.148 cv
136.079 80.148 132.784 82.002 132.784 84.288 cv
132.784 86.574 136.079 88.428 140.144 88.428 cv
144.209 88.428 147.504 86.574 147.504 84.288 cv
@
147.504 84.288 mo
147.504 82.002 144.209 80.148 140.144 80.148 cv
136.079 80.148 132.784 82.002 132.784 84.288 cv
132.784 86.574 136.079 88.428 140.144 88.428 cv
144.209 88.428 147.504 86.574 147.504 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
137.712 82.374 mo
(PreCoder)
[.716125 .428894 .571854 .859085 .643997 .644012 .571838 0 ]xsh
136.848 83.846 mo
(work=15180)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
137.724 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
134.67 86.79 mo
(*** STATEFUL ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .929916 .786972 .786957 .716125 .929916 .786957 
.321991 .644012 .643997 0 ]xsh
153.944 76.56 mo
151.828 77.756 148.7 79.504 145.94 81.068 cv
@
146.124 80.7 mo
145.388 81.344 li
146.308 81.16 li
cp
@
146.124 80.7 mo
145.388 81.344 li
146.308 81.16 li
f
163.88 84.288 mo
163.88 82.002 160.585 80.148 156.52 80.148 cv
152.455 80.148 149.16 82.002 149.16 84.288 cv
149.16 86.574 152.455 88.428 156.52 88.428 cv
160.585 88.428 163.88 86.574 163.88 84.288 cv
@
163.88 84.288 mo
163.88 82.002 160.585 80.148 156.52 80.148 cv
152.455 80.148 149.16 82.002 149.16 84.288 cv
149.16 86.574 152.455 88.428 156.52 88.428 cv
160.585 88.428 163.88 86.574 163.88 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
151.227 82.374 mo
(UngerboeckEncoder)
[.929916 .643997 .643997 .571854 .428894 .644012 .643997 .571854 .571854 .643997 .786957 .643997 
.571854 .643997 .643997 .571854 0 ]xsh
153.223 83.846 mo
(work=24840)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
154.1 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
151.046 86.79 mo
(*** STATEFUL ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .929916 .786957 .786972 .716125 .929916 .786957 
.321991 .644012 .643997 0 ]xsh
156.52 76.744 mo
156.52 77.388 156.52 78.216 156.52 79.044 cv
@
156.336 79.136 mo
156.52 80.056 li
156.796 79.136 li
cp
@
156.336 79.136 mo
156.52 80.056 li
156.796 79.136 li
f
161.58 93.488 mo
161.58 92.573 159.315 91.832 156.52 91.832 cv
153.725 91.832 151.46 92.573 151.46 93.488 cv
151.46 94.403 153.725 95.144 156.52 95.144 cv
159.315 95.144 161.58 94.403 161.58 93.488 cv
@
161.58 93.488 mo
161.58 92.573 159.315 91.832 156.52 91.832 cv
153.725 91.832 151.46 92.573 151.46 93.488 cv
151.46 94.403 153.725 95.144 156.52 95.144 cv
159.315 95.144 161.58 94.403 161.58 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
152.424 93.782 mo
(roundrobin\(1,2\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
159.74 94.776 mo
161.856 95.604 164.524 96.524 166.364 96.616 cv
191.296 98.088 234.168 99.284 256.34 99.836 cv
@
256.34 100.02 mo
257.26 99.836 li
256.34 99.56 li
cp
@
256.34 100.02 mo
257.26 99.836 li
256.34 99.56 li
f
145.388 87.232 mo
147.964 88.612 151 90.36 153.208 91.648 cv
@
153.024 91.832 mo
153.944 92.016 li
153.208 91.372 li
cp
@
153.024 91.832 mo
153.944 92.016 li
153.208 91.372 li
f
156.52 88.52 mo
156.52 89.348 156.52 90.268 156.52 91.004 cv
@
156.336 90.912 mo
156.52 91.832 li
156.796 90.912 li
cp
@
156.336 90.912 mo
156.52 91.832 li
156.796 90.912 li
f
196.54 75.088 mo
196.54 74.173 194.275 73.432 191.48 73.432 cv
188.685 73.432 186.42 74.173 186.42 75.088 cv
186.42 76.003 188.685 76.744 191.48 76.744 cv
194.275 76.744 196.54 76.003 196.54 75.088 cv
@
196.54 75.088 mo
196.54 74.173 194.275 73.432 191.48 73.432 cv
188.685 73.432 186.42 74.173 186.42 75.088 cv
186.42 76.003 188.685 76.744 191.48 76.744 cv
194.275 76.744 196.54 76.003 196.54 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
187.384 75.382 mo
(roundrobin\(1,1\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
192.4 70.12 mo
192.308 70.948 192.124 71.868 191.94 72.604 cv
@
191.756 72.512 mo
191.756 73.432 li
192.216 72.604 li
cp
@
191.756 72.512 mo
191.756 73.432 li
192.216 72.604 li
f
182.464 84.288 mo
182.464 82.002 179.169 80.148 175.104 80.148 cv
171.039 80.148 167.744 82.002 167.744 84.288 cv
167.744 86.574 171.039 88.428 175.104 88.428 cv
179.169 88.428 182.464 86.574 182.464 84.288 cv
@
182.464 84.288 mo
182.464 82.002 179.169 80.148 175.104 80.148 cv
171.039 80.148 167.744 82.002 167.744 84.288 cv
167.744 86.574 171.039 88.428 175.104 88.428 cv
179.169 88.428 182.464 86.574 182.464 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
172.672 82.374 mo
(PreCoder)
[.716125 .428894 .571854 .859085 .643997 .644012 .571838 0 ]xsh
171.808 83.846 mo
(work=15180)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
172.684 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
169.63 86.79 mo
(*** STATEFUL ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .929916 .786972 .786957 .716125 .929916 .786957 
.321991 .644012 .643997 0 ]xsh
188.904 76.56 mo
186.788 77.756 183.66 79.504 180.9 81.068 cv
@
181.084 80.7 mo
180.348 81.344 li
181.268 81.16 li
cp
@
181.084 80.7 mo
180.348 81.344 li
181.268 81.16 li
f
198.84 84.288 mo
198.84 82.002 195.545 80.148 191.48 80.148 cv
187.415 80.148 184.12 82.002 184.12 84.288 cv
184.12 86.574 187.415 88.428 191.48 88.428 cv
195.545 88.428 198.84 86.574 198.84 84.288 cv
@
198.84 84.288 mo
198.84 82.002 195.545 80.148 191.48 80.148 cv
187.415 80.148 184.12 82.002 184.12 84.288 cv
184.12 86.574 187.415 88.428 191.48 88.428 cv
195.545 88.428 198.84 86.574 198.84 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
186.187 82.374 mo
(UngerboeckEncoder)
[.929916 .643997 .643997 .571854 .428894 .644012 .643997 .571854 .571854 .643997 .786957 .643997 
.571854 .643997 .643997 .571854 0 ]xsh
188.183 83.846 mo
(work=24840)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
189.06 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
186.006 86.79 mo
(*** STATEFUL ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .929916 .786957 .786972 .716125 .929916 .786957 
.321991 .644012 .643997 0 ]xsh
191.48 76.744 mo
191.48 77.388 191.48 78.216 191.48 79.044 cv
@
191.296 79.136 mo
191.48 80.056 li
191.756 79.136 li
cp
@
191.296 79.136 mo
191.48 80.056 li
191.756 79.136 li
f
196.54 93.488 mo
196.54 92.573 194.275 91.832 191.48 91.832 cv
188.685 91.832 186.42 92.573 186.42 93.488 cv
186.42 94.403 188.685 95.144 191.48 95.144 cv
194.275 95.144 196.54 94.403 196.54 93.488 cv
@
196.54 93.488 mo
196.54 92.573 194.275 91.832 191.48 91.832 cv
188.685 91.832 186.42 92.573 186.42 93.488 cv
186.42 94.403 188.685 95.144 191.48 95.144 cv
194.275 95.144 196.54 94.403 196.54 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
187.384 93.782 mo
(roundrobin\(1,2\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
194.7 94.776 mo
196.816 95.604 199.484 96.432 201.324 96.616 cv
216.32 97.904 241.068 99.008 256.616 99.652 cv
@
256.616 99.836 mo
257.536 99.652 li
256.616 99.376 li
cp
@
256.616 99.836 mo
257.536 99.652 li
256.616 99.376 li
f
180.348 87.232 mo
182.924 88.612 185.96 90.36 188.168 91.648 cv
@
187.984 91.832 mo
188.904 92.016 li
188.168 91.372 li
cp
@
187.984 91.832 mo
188.904 92.016 li
188.168 91.372 li
f
191.48 88.52 mo
191.48 89.348 191.48 90.268 191.48 91.004 cv
@
191.296 90.912 mo
191.48 91.832 li
191.756 90.912 li
cp
@
191.296 90.912 mo
191.48 91.832 li
191.756 90.912 li
f
231.5 75.088 mo
231.5 74.173 229.235 73.432 226.44 73.432 cv
223.645 73.432 221.38 74.173 221.38 75.088 cv
221.38 76.003 223.645 76.744 226.44 76.744 cv
229.235 76.744 231.5 76.003 231.5 75.088 cv
@
231.5 75.088 mo
231.5 74.173 229.235 73.432 226.44 73.432 cv
223.645 73.432 221.38 74.173 221.38 75.088 cv
221.38 76.003 223.645 76.744 226.44 76.744 cv
229.235 76.744 231.5 76.003 231.5 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
222.344 75.382 mo
(roundrobin\(1,1\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
227.36 70.12 mo
227.268 70.948 227.084 71.868 226.9 72.604 cv
@
226.716 72.512 mo
226.716 73.432 li
227.176 72.604 li
cp
@
226.716 72.512 mo
226.716 73.432 li
227.176 72.604 li
f
217.424 84.288 mo
217.424 82.002 214.129 80.148 210.064 80.148 cv
205.999 80.148 202.704 82.002 202.704 84.288 cv
202.704 86.574 205.999 88.428 210.064 88.428 cv
214.129 88.428 217.424 86.574 217.424 84.288 cv
@
217.424 84.288 mo
217.424 82.002 214.129 80.148 210.064 80.148 cv
205.999 80.148 202.704 82.002 202.704 84.288 cv
202.704 86.574 205.999 88.428 210.064 88.428 cv
214.129 88.428 217.424 86.574 217.424 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
207.632 82.374 mo
(PreCoder)
[.716125 .428894 .571854 .859085 .643997 .644012 .571838 0 ]xsh
206.768 83.846 mo
(work=15180)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
207.644 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
204.59 86.79 mo
(*** STATEFUL ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .929916 .786957 .786972 .716125 .929916 .786957 
.321991 .644012 .643997 0 ]xsh
223.864 76.56 mo
221.748 77.756 218.62 79.504 215.86 81.068 cv
@
216.044 80.7 mo
215.308 81.344 li
216.228 81.16 li
cp
@
216.044 80.7 mo
215.308 81.344 li
216.228 81.16 li
f
233.8 84.288 mo
233.8 82.002 230.505 80.148 226.44 80.148 cv
222.375 80.148 219.08 82.002 219.08 84.288 cv
219.08 86.574 222.375 88.428 226.44 88.428 cv
230.505 88.428 233.8 86.574 233.8 84.288 cv
@
233.8 84.288 mo
233.8 82.002 230.505 80.148 226.44 80.148 cv
222.375 80.148 219.08 82.002 219.08 84.288 cv
219.08 86.574 222.375 88.428 226.44 88.428 cv
230.505 88.428 233.8 86.574 233.8 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
221.147 82.374 mo
(UngerboeckEncoder)
[.929916 .643997 .643997 .571854 .428894 .644012 .643997 .571854 .571854 .643997 .786957 .643997 
.571854 .643997 .643997 .571854 0 ]xsh
223.143 83.846 mo
(work=24840)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
224.02 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
220.966 86.79 mo
(*** STATEFUL ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .929916 .786972 .786957 .716125 .929916 .786957 
.321991 .644012 .643997 0 ]xsh
226.44 76.744 mo
226.44 77.388 226.44 78.216 226.44 79.044 cv
@
226.256 79.136 mo
226.44 80.056 li
226.716 79.136 li
cp
@
226.256 79.136 mo
226.44 80.056 li
226.716 79.136 li
f
231.5 93.488 mo
231.5 92.573 229.235 91.832 226.44 91.832 cv
223.645 91.832 221.38 92.573 221.38 93.488 cv
221.38 94.403 223.645 95.144 226.44 95.144 cv
229.235 95.144 231.5 94.403 231.5 93.488 cv
@
231.5 93.488 mo
231.5 92.573 229.235 91.832 226.44 91.832 cv
223.645 91.832 221.38 92.573 221.38 93.488 cv
221.38 94.403 223.645 95.144 226.44 95.144 cv
229.235 95.144 231.5 94.403 231.5 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
222.344 93.782 mo
(roundrobin\(1,2\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
229.752 94.776 mo
231.868 95.512 234.444 96.34 236.284 96.616 cv
242.264 97.536 251.372 98.364 258.732 99.1 cv
@
258.456 99.284 mo
259.376 99.192 li
258.456 98.824 li
cp
@
258.456 99.284 mo
259.376 99.192 li
258.456 98.824 li
f
215.308 87.232 mo
217.884 88.612 220.92 90.36 223.128 91.648 cv
@
222.944 91.832 mo
223.864 92.016 li
223.128 91.372 li
cp
@
222.944 91.832 mo
223.864 92.016 li
223.128 91.372 li
f
226.44 88.52 mo
226.44 89.348 226.44 90.268 226.44 91.004 cv
@
226.256 90.912 mo
226.44 91.832 li
226.716 90.912 li
cp
@
226.256 90.912 mo
226.44 91.832 li
226.716 90.912 li
f
266.46 75.088 mo
266.46 74.173 264.195 73.432 261.4 73.432 cv
258.605 73.432 256.34 74.173 256.34 75.088 cv
256.34 76.003 258.605 76.744 261.4 76.744 cv
264.195 76.744 266.46 76.003 266.46 75.088 cv
@
266.46 75.088 mo
266.46 74.173 264.195 73.432 261.4 73.432 cv
258.605 73.432 256.34 74.173 256.34 75.088 cv
256.34 76.003 258.605 76.744 261.4 76.744 cv
264.195 76.744 266.46 76.003 266.46 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
257.304 75.382 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
262.32 70.12 mo
262.228 70.948 262.044 71.868 261.86 72.604 cv
@
261.676 72.512 mo
261.676 73.432 li
262.136 72.604 li
cp
@
261.676 72.512 mo
261.676 73.432 li
262.136 72.604 li
f
252.384 84.288 mo
252.384 82.002 249.089 80.148 245.024 80.148 cv
240.959 80.148 237.664 82.002 237.664 84.288 cv
237.664 86.574 240.959 88.428 245.024 88.428 cv
249.089 88.428 252.384 86.574 252.384 84.288 cv
@
252.384 84.288 mo
252.384 82.002 249.089 80.148 245.024 80.148 cv
240.959 80.148 237.664 82.002 237.664 84.288 cv
237.664 86.574 240.959 88.428 245.024 88.428 cv
249.089 88.428 252.384 86.574 252.384 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
242.592 82.374 mo
(PreCoder)
[.716125 .428894 .571854 .859085 .643997 .644012 .571838 0 ]xsh
241.728 83.846 mo
(work=15180)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
242.604 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
239.55 86.79 mo
(*** STATEFUL ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .929916 .786957 .786972 .716125 .929916 .786957 
.321991 .644012 .643997 0 ]xsh
258.824 76.56 mo
256.708 77.756 253.58 79.504 250.82 81.068 cv
@
251.004 80.7 mo
250.268 81.344 li
251.188 81.16 li
cp
@
251.004 80.7 mo
250.268 81.344 li
251.188 81.16 li
f
268.76 84.288 mo
268.76 82.002 265.465 80.148 261.4 80.148 cv
257.335 80.148 254.04 82.002 254.04 84.288 cv
254.04 86.574 257.335 88.428 261.4 88.428 cv
265.465 88.428 268.76 86.574 268.76 84.288 cv
@
268.76 84.288 mo
268.76 82.002 265.465 80.148 261.4 80.148 cv
257.335 80.148 254.04 82.002 254.04 84.288 cv
254.04 86.574 257.335 88.428 261.4 88.428 cv
265.465 88.428 268.76 86.574 268.76 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
256.107 82.374 mo
(UngerboeckEncoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .786957 .644012 
.571838 .644012 .643982 .571869 0 ]xsh
258.103 83.846 mo
(work=24840)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
258.98 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
255.926 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
261.4 76.744 mo
261.4 77.388 261.4 78.216 261.4 79.044 cv
@
261.216 79.136 mo
261.4 80.056 li
261.676 79.136 li
cp
@
261.216 79.136 mo
261.4 80.056 li
261.676 79.136 li
f
266.46 93.488 mo
266.46 92.573 264.195 91.832 261.4 91.832 cv
258.605 91.832 256.34 92.573 256.34 93.488 cv
256.34 94.403 258.605 95.144 261.4 95.144 cv
264.195 95.144 266.46 94.403 266.46 93.488 cv
@
266.46 93.488 mo
266.46 92.573 264.195 91.832 261.4 91.832 cv
258.605 91.832 256.34 92.573 256.34 93.488 cv
256.34 94.403 258.605 95.144 261.4 95.144 cv
264.195 95.144 266.46 94.403 266.46 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
257.304 93.782 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
263.516 95.052 mo
264.804 95.88 266.368 96.984 267.656 97.996 cv
@
267.472 98.18 mo
268.392 98.456 li
267.748 97.812 li
cp
@
267.472 98.18 mo
268.392 98.456 li
267.748 97.812 li
f
250.268 87.232 mo
252.844 88.612 255.88 90.36 258.088 91.648 cv
@
257.904 91.832 mo
258.824 92.016 li
258.088 91.372 li
cp
@
257.904 91.832 mo
258.824 92.016 li
258.088 91.372 li
f
261.4 88.52 mo
261.4 89.348 261.4 90.268 261.4 91.004 cv
@
261.216 90.912 mo
261.4 91.832 li
261.676 90.912 li
cp
@
261.216 90.912 mo
261.4 91.832 li
261.676 90.912 li
f
285.044 75.088 mo
285.044 74.173 282.779 73.432 279.984 73.432 cv
277.189 73.432 274.924 74.173 274.924 75.088 cv
274.924 76.003 277.189 76.744 279.984 76.744 cv
282.779 76.744 285.044 76.003 285.044 75.088 cv
@
285.044 75.088 mo
285.044 74.173 282.779 73.432 279.984 73.432 cv
277.189 73.432 274.924 74.173 274.924 75.088 cv
274.924 76.003 277.189 76.744 279.984 76.744 cv
282.779 76.744 285.044 76.003 285.044 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
275.888 75.382 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
279.064 70.12 mo
279.156 70.948 279.34 71.868 279.524 72.604 cv
@
279.248 72.604 mo
279.708 73.432 li
279.708 72.512 li
cp
@
279.248 72.604 mo
279.708 73.432 li
279.708 72.512 li
f
287.344 84.288 mo
287.344 82.002 284.049 80.148 279.984 80.148 cv
275.919 80.148 272.624 82.002 272.624 84.288 cv
272.624 86.574 275.919 88.428 279.984 88.428 cv
284.049 88.428 287.344 86.574 287.344 84.288 cv
@
287.344 84.288 mo
287.344 82.002 284.049 80.148 279.984 80.148 cv
275.919 80.148 272.624 82.002 272.624 84.288 cv
272.624 86.574 275.919 88.428 279.984 88.428 cv
284.049 88.428 287.344 86.574 287.344 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
277.552 82.374 mo
(PreCoder)
[.716125 .428894 .571869 .85907 .644012 .643982 .571869 0 ]xsh
276.688 83.846 mo
(work=15180)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
277.564 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
274.51 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
279.984 76.744 mo
279.984 77.388 279.984 78.216 279.984 79.044 cv
@
279.8 79.136 mo
279.984 80.056 li
280.26 79.136 li
cp
@
279.8 79.136 mo
279.984 80.056 li
280.26 79.136 li
f
303.72 84.288 mo
303.72 82.002 300.425 80.148 296.36 80.148 cv
292.295 80.148 289 82.002 289 84.288 cv
289 86.574 292.295 88.428 296.36 88.428 cv
300.425 88.428 303.72 86.574 303.72 84.288 cv
@
303.72 84.288 mo
303.72 82.002 300.425 80.148 296.36 80.148 cv
292.295 80.148 289 82.002 289 84.288 cv
289 86.574 292.295 88.428 296.36 88.428 cv
300.425 88.428 303.72 86.574 303.72 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
291.067 82.374 mo
(UngerboeckEncoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .786957 .644012 
.571838 .644012 .643982 .571869 0 ]xsh
293.063 83.846 mo
(work=24840)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
293.94 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
290.886 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
282.56 76.56 mo
284.676 77.756 287.804 79.504 290.564 81.068 cv
@
290.196 81.16 mo
291.116 81.344 li
290.38 80.7 li
cp
@
290.196 81.16 mo
291.116 81.344 li
290.38 80.7 li
f
285.044 93.488 mo
285.044 92.573 282.779 91.832 279.984 91.832 cv
277.189 91.832 274.924 92.573 274.924 93.488 cv
274.924 94.403 277.189 95.144 279.984 95.144 cv
282.779 95.144 285.044 94.403 285.044 93.488 cv
@
285.044 93.488 mo
285.044 92.573 282.779 91.832 279.984 91.832 cv
277.189 91.832 274.924 92.573 274.924 93.488 cv
274.924 94.403 277.189 95.144 279.984 95.144 cv
282.779 95.144 285.044 94.403 285.044 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
275.888 93.782 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
277.868 95.052 mo
276.58 95.88 275.016 96.984 273.728 97.996 cv
@
273.636 97.812 mo
272.992 98.456 li
273.912 98.18 li
cp
@
273.636 97.812 mo
272.992 98.456 li
273.912 98.18 li
f
279.984 88.52 mo
279.984 89.348 279.984 90.268 279.984 91.004 cv
@
279.8 90.912 mo
279.984 91.832 li
280.26 90.912 li
cp
@
279.8 90.912 mo
279.984 91.832 li
280.26 90.912 li
f
291.116 87.232 mo
288.54 88.612 285.504 90.36 283.296 91.648 cv
@
283.296 91.372 mo
282.56 92.016 li
283.48 91.832 li
cp
@
283.296 91.372 mo
282.56 92.016 li
283.48 91.832 li
f
320.004 75.088 mo
320.004 74.173 317.739 73.432 314.944 73.432 cv
312.149 73.432 309.884 74.173 309.884 75.088 cv
309.884 76.003 312.149 76.744 314.944 76.744 cv
317.739 76.744 320.004 76.003 320.004 75.088 cv
@
320.004 75.088 mo
320.004 74.173 317.739 73.432 314.944 73.432 cv
312.149 73.432 309.884 74.173 309.884 75.088 cv
309.884 76.003 312.149 76.744 314.944 76.744 cv
317.739 76.744 320.004 76.003 320.004 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
310.848 75.382 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
314.024 70.12 mo
314.116 70.948 314.3 71.868 314.484 72.604 cv
@
314.208 72.604 mo
314.668 73.432 li
314.668 72.512 li
cp
@
314.208 72.604 mo
314.668 73.432 li
314.668 72.512 li
f
322.304 84.288 mo
322.304 82.002 319.009 80.148 314.944 80.148 cv
310.879 80.148 307.584 82.002 307.584 84.288 cv
307.584 86.574 310.879 88.428 314.944 88.428 cv
319.009 88.428 322.304 86.574 322.304 84.288 cv
@
322.304 84.288 mo
322.304 82.002 319.009 80.148 314.944 80.148 cv
310.879 80.148 307.584 82.002 307.584 84.288 cv
307.584 86.574 310.879 88.428 314.944 88.428 cv
319.009 88.428 322.304 86.574 322.304 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
312.512 82.374 mo
(PreCoder)
[.716125 .428894 .571869 .85907 .644012 .643982 .571869 0 ]xsh
311.648 83.846 mo
(work=15180)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
312.524 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
309.47 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
314.944 76.744 mo
314.944 77.388 314.944 78.216 314.944 79.044 cv
@
314.76 79.136 mo
314.944 80.056 li
315.22 79.136 li
cp
@
314.76 79.136 mo
314.944 80.056 li
315.22 79.136 li
f
338.68 84.288 mo
338.68 82.002 335.385 80.148 331.32 80.148 cv
327.255 80.148 323.96 82.002 323.96 84.288 cv
323.96 86.574 327.255 88.428 331.32 88.428 cv
335.385 88.428 338.68 86.574 338.68 84.288 cv
@
338.68 84.288 mo
338.68 82.002 335.385 80.148 331.32 80.148 cv
327.255 80.148 323.96 82.002 323.96 84.288 cv
323.96 86.574 327.255 88.428 331.32 88.428 cv
335.385 88.428 338.68 86.574 338.68 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
326.027 82.374 mo
(UngerboeckEncoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .786957 .644012 
.571838 .644012 .643982 .571869 0 ]xsh
328.023 83.846 mo
(work=24840)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
328.9 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
325.846 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
317.52 76.56 mo
319.636 77.756 322.764 79.504 325.524 81.068 cv
@
325.156 81.16 mo
326.076 81.344 li
325.34 80.7 li
cp
@
325.156 81.16 mo
326.076 81.344 li
325.34 80.7 li
f
320.004 93.488 mo
320.004 92.573 317.739 91.832 314.944 91.832 cv
312.149 91.832 309.884 92.573 309.884 93.488 cv
309.884 94.403 312.149 95.144 314.944 95.144 cv
317.739 95.144 320.004 94.403 320.004 93.488 cv
@
320.004 93.488 mo
320.004 92.573 317.739 91.832 314.944 91.832 cv
312.149 91.832 309.884 92.573 309.884 93.488 cv
309.884 94.403 312.149 95.144 314.944 95.144 cv
317.739 95.144 320.004 94.403 320.004 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
310.848 93.782 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
311.632 94.776 mo
309.608 95.512 306.94 96.34 305.1 96.616 cv
299.212 97.536 290.012 98.364 282.652 99.1 cv
@
282.928 98.824 mo
282.008 99.192 li
282.928 99.284 li
cp
@
282.928 98.824 mo
282.008 99.192 li
282.928 99.284 li
f
314.944 88.52 mo
314.944 89.348 314.944 90.268 314.944 91.004 cv
@
314.76 90.912 mo
314.944 91.832 li
315.22 90.912 li
cp
@
314.76 90.912 mo
314.944 91.832 li
315.22 90.912 li
f
326.076 87.232 mo
323.5 88.612 320.464 90.36 318.256 91.648 cv
@
318.256 91.372 mo
317.52 92.016 li
318.44 91.832 li
cp
@
318.256 91.372 mo
317.52 92.016 li
318.44 91.832 li
f
354.964 75.088 mo
354.964 74.173 352.699 73.432 349.904 73.432 cv
347.109 73.432 344.844 74.173 344.844 75.088 cv
344.844 76.003 347.109 76.744 349.904 76.744 cv
352.699 76.744 354.964 76.003 354.964 75.088 cv
@
354.964 75.088 mo
354.964 74.173 352.699 73.432 349.904 73.432 cv
347.109 73.432 344.844 74.173 344.844 75.088 cv
344.844 76.003 347.109 76.744 349.904 76.744 cv
352.699 76.744 354.964 76.003 354.964 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
345.808 75.382 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
348.984 70.12 mo
349.076 70.948 349.26 71.868 349.444 72.604 cv
@
349.168 72.604 mo
349.628 73.432 li
349.628 72.512 li
cp
@
349.168 72.604 mo
349.628 73.432 li
349.628 72.512 li
f
357.264 84.288 mo
357.264 82.002 353.969 80.148 349.904 80.148 cv
345.839 80.148 342.544 82.002 342.544 84.288 cv
342.544 86.574 345.839 88.428 349.904 88.428 cv
353.969 88.428 357.264 86.574 357.264 84.288 cv
@
357.264 84.288 mo
357.264 82.002 353.969 80.148 349.904 80.148 cv
345.839 80.148 342.544 82.002 342.544 84.288 cv
342.544 86.574 345.839 88.428 349.904 88.428 cv
353.969 88.428 357.264 86.574 357.264 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
347.472 82.374 mo
(PreCoder)
[.716125 .428894 .571869 .85907 .644012 .643982 .571869 0 ]xsh
346.608 83.846 mo
(work=15180)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
347.484 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
344.43 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
349.904 76.744 mo
349.904 77.388 349.904 78.216 349.904 79.044 cv
@
349.72 79.136 mo
349.904 80.056 li
350.18 79.136 li
cp
@
349.72 79.136 mo
349.904 80.056 li
350.18 79.136 li
f
373.64 84.288 mo
373.64 82.002 370.345 80.148 366.28 80.148 cv
362.215 80.148 358.92 82.002 358.92 84.288 cv
358.92 86.574 362.215 88.428 366.28 88.428 cv
370.345 88.428 373.64 86.574 373.64 84.288 cv
@
373.64 84.288 mo
373.64 82.002 370.345 80.148 366.28 80.148 cv
362.215 80.148 358.92 82.002 358.92 84.288 cv
358.92 86.574 362.215 88.428 366.28 88.428 cv
370.345 88.428 373.64 86.574 373.64 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
360.987 82.374 mo
(UngerboeckEncoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .786957 .644012 
.571838 .644012 .643982 .571869 0 ]xsh
362.983 83.846 mo
(work=24840)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
363.86 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
360.806 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
352.48 76.56 mo
354.596 77.756 357.724 79.504 360.484 81.068 cv
@
360.116 81.16 mo
361.036 81.344 li
360.3 80.7 li
cp
@
360.116 81.16 mo
361.036 81.344 li
360.3 80.7 li
f
354.964 93.488 mo
354.964 92.573 352.699 91.832 349.904 91.832 cv
347.109 91.832 344.844 92.573 344.844 93.488 cv
344.844 94.403 347.109 95.144 349.904 95.144 cv
352.699 95.144 354.964 94.403 354.964 93.488 cv
@
354.964 93.488 mo
354.964 92.573 352.699 91.832 349.904 91.832 cv
347.109 91.832 344.844 92.573 344.844 93.488 cv
344.844 94.403 347.109 95.144 349.904 95.144 cv
352.699 95.144 354.964 94.403 354.964 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
345.808 93.782 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
346.684 94.776 mo
344.66 95.604 341.9 96.432 340.06 96.616 cv
324.972 97.904 299.948 99.008 284.492 99.652 cv
@
284.768 99.376 mo
283.848 99.652 li
284.768 99.836 li
cp
@
284.768 99.376 mo
283.848 99.652 li
284.768 99.836 li
f
349.904 88.52 mo
349.904 89.348 349.904 90.268 349.904 91.004 cv
@
349.72 90.912 mo
349.904 91.832 li
350.18 90.912 li
cp
@
349.72 90.912 mo
349.904 91.832 li
350.18 90.912 li
f
361.036 87.232 mo
358.46 88.612 355.424 90.36 353.216 91.648 cv
@
353.216 91.372 mo
352.48 92.016 li
353.4 91.832 li
cp
@
353.216 91.372 mo
352.48 92.016 li
353.4 91.832 li
f
389.924 75.088 mo
389.924 74.173 387.659 73.432 384.864 73.432 cv
382.069 73.432 379.804 74.173 379.804 75.088 cv
379.804 76.003 382.069 76.744 384.864 76.744 cv
387.659 76.744 389.924 76.003 389.924 75.088 cv
@
389.924 75.088 mo
389.924 74.173 387.659 73.432 384.864 73.432 cv
382.069 73.432 379.804 74.173 379.804 75.088 cv
379.804 76.003 382.069 76.744 384.864 76.744 cv
387.659 76.744 389.924 76.003 389.924 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
380.768 75.382 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
383.944 70.12 mo
384.036 70.948 384.22 71.868 384.404 72.604 cv
@
384.128 72.604 mo
384.588 73.432 li
384.588 72.512 li
cp
@
384.128 72.604 mo
384.588 73.432 li
384.588 72.512 li
f
392.224 84.288 mo
392.224 82.002 388.929 80.148 384.864 80.148 cv
380.799 80.148 377.504 82.002 377.504 84.288 cv
377.504 86.574 380.799 88.428 384.864 88.428 cv
388.929 88.428 392.224 86.574 392.224 84.288 cv
@
392.224 84.288 mo
392.224 82.002 388.929 80.148 384.864 80.148 cv
380.799 80.148 377.504 82.002 377.504 84.288 cv
377.504 86.574 380.799 88.428 384.864 88.428 cv
388.929 88.428 392.224 86.574 392.224 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
382.432 82.374 mo
(PreCoder)
[.716125 .428894 .571869 .85907 .644012 .643982 .571869 0 ]xsh
381.568 83.846 mo
(work=15180)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
382.444 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
379.39 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
384.864 76.744 mo
384.864 77.388 384.864 78.216 384.864 79.044 cv
@
384.68 79.136 mo
384.864 80.056 li
385.14 79.136 li
cp
@
384.68 79.136 mo
384.864 80.056 li
385.14 79.136 li
f
408.6 84.288 mo
408.6 82.002 405.305 80.148 401.24 80.148 cv
397.175 80.148 393.88 82.002 393.88 84.288 cv
393.88 86.574 397.175 88.428 401.24 88.428 cv
405.305 88.428 408.6 86.574 408.6 84.288 cv
@
408.6 84.288 mo
408.6 82.002 405.305 80.148 401.24 80.148 cv
397.175 80.148 393.88 82.002 393.88 84.288 cv
393.88 86.574 397.175 88.428 401.24 88.428 cv
405.305 88.428 408.6 86.574 408.6 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
395.947 82.374 mo
(UngerboeckEncoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .786957 .644012 
.571838 .644012 .643982 .571869 0 ]xsh
397.943 83.846 mo
(work=24840)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
398.82 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
395.766 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
387.44 76.56 mo
389.556 77.756 392.684 79.504 395.444 81.068 cv
@
395.076 81.16 mo
395.996 81.344 li
395.26 80.7 li
cp
@
395.076 81.16 mo
395.996 81.344 li
395.26 80.7 li
f
389.924 93.488 mo
389.924 92.573 387.659 91.832 384.864 91.832 cv
382.069 91.832 379.804 92.573 379.804 93.488 cv
379.804 94.403 382.069 95.144 384.864 95.144 cv
387.659 95.144 389.924 94.403 389.924 93.488 cv
@
389.924 93.488 mo
389.924 92.573 387.659 91.832 384.864 91.832 cv
382.069 91.832 379.804 92.573 379.804 93.488 cv
379.804 94.403 382.069 95.144 384.864 95.144 cv
387.659 95.144 389.924 94.403 389.924 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
380.768 93.782 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
381.736 94.776 mo
379.62 95.604 376.86 96.524 375.02 96.616 cv
350.18 98.088 307.308 99.284 285.136 99.836 cv
@
285.136 99.56 mo
284.216 99.836 li
285.136 100.02 li
cp
@
285.136 99.56 mo
284.216 99.836 li
285.136 100.02 li
f
384.864 88.52 mo
384.864 89.348 384.864 90.268 384.864 91.004 cv
@
384.68 90.912 mo
384.864 91.832 li
385.14 90.912 li
cp
@
384.68 90.912 mo
384.864 91.832 li
385.14 90.912 li
f
395.996 87.232 mo
393.42 88.612 390.384 90.36 388.176 91.648 cv
@
388.176 91.372 mo
387.44 92.016 li
388.36 91.832 li
cp
@
388.176 91.372 mo
387.44 92.016 li
388.36 91.832 li
f
424.884 75.088 mo
424.884 74.173 422.619 73.432 419.824 73.432 cv
417.029 73.432 414.764 74.173 414.764 75.088 cv
414.764 76.003 417.029 76.744 419.824 76.744 cv
422.619 76.744 424.884 76.003 424.884 75.088 cv
@
424.884 75.088 mo
424.884 74.173 422.619 73.432 419.824 73.432 cv
417.029 73.432 414.764 74.173 414.764 75.088 cv
414.764 76.003 417.029 76.744 419.824 76.744 cv
422.619 76.744 424.884 76.003 424.884 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
415.728 75.382 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
418.904 70.12 mo
418.996 70.948 419.18 71.868 419.364 72.604 cv
@
419.088 72.604 mo
419.548 73.432 li
419.548 72.512 li
cp
@
419.088 72.604 mo
419.548 73.432 li
419.548 72.512 li
f
427.184 84.288 mo
427.184 82.002 423.889 80.148 419.824 80.148 cv
415.759 80.148 412.464 82.002 412.464 84.288 cv
412.464 86.574 415.759 88.428 419.824 88.428 cv
423.889 88.428 427.184 86.574 427.184 84.288 cv
@
427.184 84.288 mo
427.184 82.002 423.889 80.148 419.824 80.148 cv
415.759 80.148 412.464 82.002 412.464 84.288 cv
412.464 86.574 415.759 88.428 419.824 88.428 cv
423.889 88.428 427.184 86.574 427.184 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
417.392 82.374 mo
(PreCoder)
[.716125 .428894 .571869 .85907 .644012 .643982 .571869 0 ]xsh
416.528 83.846 mo
(work=15180)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
417.404 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
414.35 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
419.824 76.744 mo
419.824 77.388 419.824 78.216 419.824 79.044 cv
@
419.64 79.136 mo
419.824 80.056 li
420.1 79.136 li
cp
@
419.64 79.136 mo
419.824 80.056 li
420.1 79.136 li
f
443.56 84.288 mo
443.56 82.002 440.265 80.148 436.2 80.148 cv
432.135 80.148 428.84 82.002 428.84 84.288 cv
428.84 86.574 432.135 88.428 436.2 88.428 cv
440.265 88.428 443.56 86.574 443.56 84.288 cv
@
443.56 84.288 mo
443.56 82.002 440.265 80.148 436.2 80.148 cv
432.135 80.148 428.84 82.002 428.84 84.288 cv
428.84 86.574 432.135 88.428 436.2 88.428 cv
440.265 88.428 443.56 86.574 443.56 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
430.907 82.374 mo
(UngerboeckEncoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .786957 .644012 
.571838 .644012 .643982 .571869 0 ]xsh
432.903 83.846 mo
(work=24840)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
433.78 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
430.726 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
422.4 76.56 mo
424.516 77.756 427.644 79.504 430.404 81.068 cv
@
430.036 81.16 mo
430.956 81.344 li
430.22 80.7 li
cp
@
430.036 81.16 mo
430.956 81.344 li
430.22 80.7 li
f
424.884 93.488 mo
424.884 92.573 422.619 91.832 419.824 91.832 cv
417.029 91.832 414.764 92.573 414.764 93.488 cv
414.764 94.403 417.029 95.144 419.824 95.144 cv
422.619 95.144 424.884 94.403 424.884 93.488 cv
@
424.884 93.488 mo
424.884 92.573 422.619 91.832 419.824 91.832 cv
417.029 91.832 414.764 92.573 414.764 93.488 cv
414.764 94.403 417.029 95.144 419.824 95.144 cv
422.619 95.144 424.884 94.403 424.884 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
415.728 93.782 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
416.696 94.776 mo
414.58 95.604 411.912 96.524 409.98 96.616 cv
374.744 98.272 312.92 99.468 285.044 99.928 cv
@
285.228 99.652 mo
284.308 99.928 li
285.228 100.112 li
cp
@
285.228 99.652 mo
284.308 99.928 li
285.228 100.112 li
f
419.824 88.52 mo
419.824 89.348 419.824 90.268 419.824 91.004 cv
@
419.64 90.912 mo
419.824 91.832 li
420.1 90.912 li
cp
@
419.64 90.912 mo
419.824 91.832 li
420.1 90.912 li
f
430.956 87.232 mo
428.38 88.612 425.344 90.36 423.136 91.648 cv
@
423.136 91.372 mo
422.4 92.016 li
423.32 91.832 li
cp
@
423.136 91.372 mo
422.4 92.016 li
423.32 91.832 li
f
459.844 75.088 mo
459.844 74.173 457.579 73.432 454.784 73.432 cv
451.989 73.432 449.724 74.173 449.724 75.088 cv
449.724 76.003 451.989 76.744 454.784 76.744 cv
457.579 76.744 459.844 76.003 459.844 75.088 cv
@
459.844 75.088 mo
459.844 74.173 457.579 73.432 454.784 73.432 cv
451.989 73.432 449.724 74.173 449.724 75.088 cv
449.724 76.003 451.989 76.744 454.784 76.744 cv
457.579 76.744 459.844 76.003 459.844 75.088 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
450.688 75.382 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
453.864 70.12 mo
453.956 70.948 454.14 71.868 454.324 72.604 cv
@
454.048 72.604 mo
454.508 73.432 li
454.508 72.512 li
cp
@
454.048 72.604 mo
454.508 73.432 li
454.508 72.512 li
f
462.144 84.288 mo
462.144 82.002 458.849 80.148 454.784 80.148 cv
450.719 80.148 447.424 82.002 447.424 84.288 cv
447.424 86.574 450.719 88.428 454.784 88.428 cv
458.849 88.428 462.144 86.574 462.144 84.288 cv
@
462.144 84.288 mo
462.144 82.002 458.849 80.148 454.784 80.148 cv
450.719 80.148 447.424 82.002 447.424 84.288 cv
447.424 86.574 450.719 88.428 454.784 88.428 cv
458.849 88.428 462.144 86.574 462.144 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
452.352 82.374 mo
(PreCoder)
[.716125 .428894 .571869 .85907 .644012 .643982 .571869 0 ]xsh
451.488 83.846 mo
(work=15180)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
452.364 85.318 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
449.31 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
454.784 76.744 mo
454.784 77.388 454.784 78.216 454.784 79.044 cv
@
454.6 79.136 mo
454.784 80.056 li
455.06 79.136 li
cp
@
454.6 79.136 mo
454.784 80.056 li
455.06 79.136 li
f
478.52 84.288 mo
478.52 82.002 475.225 80.148 471.16 80.148 cv
467.095 80.148 463.8 82.002 463.8 84.288 cv
463.8 86.574 467.095 88.428 471.16 88.428 cv
475.225 88.428 478.52 86.574 478.52 84.288 cv
@
478.52 84.288 mo
478.52 82.002 475.225 80.148 471.16 80.148 cv
467.095 80.148 463.8 82.002 463.8 84.288 cv
463.8 86.574 467.095 88.428 471.16 88.428 cv
475.225 88.428 478.52 86.574 478.52 84.288 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
465.867 82.374 mo
(UngerboeckEncoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .786957 .644012 
.571838 .644012 .643982 .571869 0 ]xsh
467.863 83.846 mo
(work=24840)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
468.74 85.318 mo
(I/O: 1->2)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
465.686 86.79 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
457.36 76.56 mo
459.476 77.756 462.604 79.504 465.364 81.068 cv
@
464.996 81.16 mo
465.916 81.344 li
465.18 80.7 li
cp
@
464.996 81.16 mo
465.916 81.344 li
465.18 80.7 li
f
459.844 93.488 mo
459.844 92.573 457.579 91.832 454.784 91.832 cv
451.989 91.832 449.724 92.573 449.724 93.488 cv
449.724 94.403 451.989 95.144 454.784 95.144 cv
457.579 95.144 459.844 94.403 459.844 93.488 cv
@
459.844 93.488 mo
459.844 92.573 457.579 91.832 454.784 91.832 cv
451.989 91.832 449.724 92.573 449.724 93.488 cv
449.724 94.403 451.989 95.144 454.784 95.144 cv
457.579 95.144 459.844 94.403 459.844 93.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
450.688 93.782 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
451.656 94.776 mo
449.54 95.604 446.872 96.524 444.94 96.616 cv
399.4 98.272 318.164 99.468 285.136 99.928 cv
@
285.228 99.652 mo
284.308 99.928 li
285.228 100.112 li
cp
@
285.228 99.652 mo
284.308 99.928 li
285.228 100.112 li
f
454.784 88.52 mo
454.784 89.348 454.784 90.268 454.784 91.004 cv
@
454.6 90.912 mo
454.784 91.832 li
455.06 90.912 li
cp
@
454.6 90.912 mo
454.784 91.832 li
455.06 90.912 li
f
465.916 87.232 mo
463.34 88.612 460.304 90.36 458.096 91.648 cv
@
458.096 91.372 mo
457.36 92.016 li
458.28 91.832 li
cp
@
458.096 91.372 mo
457.36 92.016 li
458.28 91.832 li
f
276.212 119.984 mo
276.212 118.256 273.741 116.856 270.692 116.856 cv
267.643 116.856 265.172 118.256 265.172 119.984 cv
265.172 121.712 267.643 123.112 270.692 123.112 cv
273.741 123.112 276.212 121.712 276.212 119.984 cv
@
276.212 119.984 mo
276.212 118.256 273.741 116.856 270.692 116.856 cv
267.643 116.856 265.172 118.256 265.172 119.984 cv
265.172 121.712 267.643 123.112 270.692 123.112 cv
273.741 123.112 276.212 121.712 276.212 119.984 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDRT+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B59F85E7C3D982C036A83A051CFEB65CDD644D44695DA87381
2F9E0DA4474B3DF6D63B3341F86CDE23D0512CA425D085DC5BA255E6B3240439
E201FEC100F452F18CDA5E088317BF79F4C8FC952A839FE77A57A286C006FAF4
6CE1F964CD62165C424C020FEAD96AC86FEFFC256D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDRT+TimesNewRomanPSMT /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDRT+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /B /C /D /E /F 
/G /H /I /.notdef /K /L /M /N 
/O /P /.notdef /R /S /T /U /V 
/W 9{/.notdef}rp /a /b /c /d /e /f 
/g /.notdef /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /.notdef /y 134{/.notdef}rp]
LTFDRT+TimesNewRomanPSMT nf
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
266.685 118.806 mo
(SymbolMapper)
[.716125 .644012 1.00204 .644012 .643982 .358093 1.14502 .571838 .644012 .643982 .571869 0 
]xsh
267.073 120.278 mo
(work=430560)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
268.272 121.75 mo
(I/O: 3->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
270.692 113.544 mo
270.692 114.372 270.692 115.2 270.692 115.936 cv
@
270.508 115.936 mo
270.692 116.856 li
270.968 115.936 li
cp
@
270.508 115.936 mo
270.692 116.856 li
270.968 115.936 li
f
276.12 129.552 mo
276.12 127.824 273.69 126.424 270.692 126.424 cv
267.694 126.424 265.264 127.824 265.264 129.552 cv
265.264 131.28 267.694 132.68 270.692 132.68 cv
273.69 132.68 276.12 131.28 276.12 129.552 cv
@
276.12 129.552 mo
276.12 127.824 273.69 126.424 270.692 126.424 cv
267.694 126.424 265.264 127.824 265.264 129.552 cv
265.264 131.28 267.694 132.68 270.692 132.68 cv
273.69 132.68 276.12 131.28 276.12 129.552 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
266.829 128.374 mo
(SyncGenerator)
[.716125 .644012 .643982 .571869 .929901 .571869 .643982 .571869 .428894 .571838 .358063 .644012 
0 ]xsh
267.073 129.846 mo
(work=132720)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
266.984 131.318 mo
(I/O: 828->832)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .644012 .428894 .72641 .644012 .643982 
0 ]xsh
270.692 123.112 mo
270.692 123.848 270.692 124.676 270.692 125.504 cv
@
270.508 125.504 mo
270.692 126.424 li
270.968 125.504 li
cp
@
270.508 125.504 mo
270.692 126.424 li
270.968 125.504 li
f
275.936 139.488 mo
275.936 137.76 273.588 136.36 270.692 136.36 cv
267.796 136.36 265.448 137.76 265.448 139.488 cv
265.448 141.216 267.796 142.616 270.692 142.616 cv
273.588 142.616 275.936 141.216 275.936 139.488 cv
@
275.936 139.488 mo
275.936 137.76 273.588 136.36 270.692 136.36 cv
267.796 136.36 265.448 137.76 265.448 139.488 cv
265.448 141.216 267.796 142.616 270.692 142.616 cv
273.588 142.616 275.936 141.216 275.936 139.488 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
267.043 138.31 mo
(SyncRemover)
[.716125 .644012 .643982 .571869 .85907 .571869 1.00204 .644012 .644012 .571838 0 ]xsh
267.073 139.782 mo
(work=132880)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
266.984 141.254 mo
(I/O: 832->828)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .644012 .428894 .72641 .644012 .643982 
0 ]xsh
270.692 132.68 mo
270.692 133.6 270.692 134.52 270.692 135.44 cv
@
270.508 135.44 mo
270.692 136.36 li
270.968 135.44 li
cp
@
270.508 135.44 mo
270.692 136.36 li
270.968 135.44 li
f
277.04 149.056 mo
277.04 147.328 274.198 145.928 270.692 145.928 cv
267.186 145.928 264.344 147.328 264.344 149.056 cv
264.344 150.784 267.186 152.184 270.692 152.184 cv
274.198 152.184 277.04 150.784 277.04 149.056 cv
@
277.04 149.056 mo
277.04 147.328 274.198 145.928 270.692 145.928 cv
267.186 145.928 264.344 147.328 264.344 149.056 cv
264.344 150.784 267.186 152.184 270.692 152.184 cv
274.198 152.184 277.04 150.784 277.04 149.056 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
265.898 147.878 mo
(SymbolUnMapper)
[.716125 .644012 1.00204 .644012 .643982 .358093 .929901 .644012 1.14502 .571838 .644012 .643982 
.571869 0 ]xsh
267.073 149.35 mo
(work=480240)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 0 ]xsh
268.272 150.822 mo
(I/O: 1->3)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
270.692 142.616 mo
270.692 143.352 270.692 144.18 270.692 145.008 cv
@
270.508 145.008 mo
270.692 145.928 li
270.968 145.008 li
cp
@
270.508 145.008 mo
270.692 145.928 li
270.968 145.008 li
f
278.052 159.728 mo
278.052 157.442 274.757 155.588 270.692 155.588 cv
266.627 155.588 263.332 157.442 263.332 159.728 cv
263.332 162.014 266.627 163.868 270.692 163.868 cv
274.757 163.868 278.052 162.014 278.052 159.728 cv
@
278.052 159.728 mo
278.052 157.442 274.757 155.588 270.692 155.588 cv
266.627 155.588 263.332 157.442 263.332 159.728 cv
263.332 162.014 266.627 163.868 270.692 163.868 cv
274.757 163.868 278.052 162.014 278.052 159.728 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
267.402 157.814 mo
(DataReorder)
[.929932 .571838 .358063 .571838 .8591 .571838 .644012 .428894 .644012 .571838 0 ]xsh
266.43 159.286 mo
(work=58274640)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 .643982 .644012 .643982 
0 ]xsh
268.272 160.758 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
265.218 162.23 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
270.692 152.184 mo
270.692 152.92 270.692 153.748 270.692 154.576 cv
@
270.508 154.576 mo
270.692 155.496 li
270.968 154.576 li
cp
@
270.508 154.576 mo
270.692 155.496 li
270.968 154.576 li
f
284.4 168.928 mo
284.4 168.013 278.263 167.272 270.692 167.272 cv
263.121 167.272 256.984 168.013 256.984 168.928 cv
256.984 169.843 263.121 170.584 270.692 170.584 cv
278.263 170.584 284.4 169.843 284.4 168.928 cv
@
284.4 168.928 mo
284.4 168.013 278.263 167.272 270.692 167.272 cv
263.121 167.272 256.984 168.013 256.984 168.928 cv
256.984 169.843 263.121 170.584 270.692 170.584 cv
278.263 170.584 284.4 169.843 284.4 168.928 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
257.902 169.222 mo
(roundrobin\(12,12,12,12,12,12,12,12,12,12,12,12\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.643982 .322021 .643982 .644012 .321991 .644012 .643982 .322021 .643982 .644012 .321991 .644012 
.643982 .322021 .643982 .644012 .321991 .644012 .643982 .322021 .643982 .644012 .321991 .644012 
.643982 .321991 .644012 .644012 .321991 .644012 .643982 .322021 .643982 .644012 0 ]xsh
270.692 163.96 mo
270.692 164.788 270.692 165.708 270.692 166.444 cv
@
270.508 166.352 mo
270.692 167.272 li
270.968 166.352 li
cp
@
270.508 166.352 mo
270.692 167.272 li
270.968 166.352 li
f
75.284 177.392 mo
75.284 176.477 73.0185 175.736 70.224 175.736 cv
67.4295 175.736 65.164 176.477 65.164 177.392 cv
65.164 178.307 67.4295 179.048 70.224 179.048 cv
73.0185 179.048 75.284 178.307 75.284 177.392 cv
@
75.284 177.392 mo
75.284 176.477 73.0185 175.736 70.224 175.736 cv
67.4295 175.736 65.164 176.477 65.164 177.392 cv
65.164 178.307 67.4295 179.048 70.224 179.048 cv
73.0185 179.048 75.284 178.307 75.284 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
66.1282 177.686 mo
(roundrobin\(1,2\))
[.428894 .643997 .644005 .643997 .644005 .428894 .643997 .643997 .358063 .644005 .428894 .643997 
.321999 .644005 0 ]xsh
256.984 168.928 mo
222.392 168.928 130.944 169.204 80.068 171.32 cv
77.86 171.412 74.732 173.528 72.616 175.276 cv
@
72.524 175.092 mo
71.972 175.828 li
72.8 175.368 li
cp
@
72.524 175.092 mo
71.972 175.828 li
72.8 175.368 li
f
113.372 177.392 mo
113.372 176.477 111.107 175.736 108.312 175.736 cv
105.517 175.736 103.252 176.477 103.252 177.392 cv
103.252 178.307 105.517 179.048 108.312 179.048 cv
111.107 179.048 113.372 178.307 113.372 177.392 cv
@
113.372 177.392 mo
113.372 176.477 111.107 175.736 108.312 175.736 cv
105.517 175.736 103.252 176.477 103.252 177.392 cv
103.252 178.307 105.517 179.048 108.312 179.048 cv
111.107 179.048 113.372 178.307 113.372 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
104.216 177.686 mo
(roundrobin\(1,2\))
[.428894 .643997 .644005 .643997 .644005 .428894 .643997 .643997 .358063 .644005 .428894 .643997 
.321999 .644005 0 ]xsh
256.984 168.928 mo
227.452 169.02 157.532 169.296 118.156 171.32 cv
115.948 171.504 112.82 173.62 110.704 175.276 cv
@
110.612 175.092 mo
110.06 175.828 li
110.888 175.368 li
cp
@
110.612 175.092 mo
110.06 175.828 li
110.888 175.368 li
f
151.46 177.392 mo
151.46 176.477 149.195 175.736 146.4 175.736 cv
143.605 175.736 141.34 176.477 141.34 177.392 cv
141.34 178.307 143.605 179.048 146.4 179.048 cv
149.195 179.048 151.46 178.307 151.46 177.392 cv
@
151.46 177.392 mo
151.46 176.477 149.195 175.736 146.4 175.736 cv
143.605 175.736 141.34 176.477 141.34 177.392 cv
141.34 178.307 143.605 179.048 146.4 179.048 cv
149.195 179.048 151.46 178.307 151.46 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
142.304 177.686 mo
(roundrobin\(1,2\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
256.984 168.928 mo
233.248 169.02 184.304 169.388 156.244 171.32 cv
154.036 171.504 150.908 173.62 148.792 175.276 cv
@
148.7 175.092 mo
148.148 175.828 li
148.976 175.368 li
cp
@
148.7 175.092 mo
148.148 175.828 li
148.976 175.368 li
f
189.548 177.392 mo
189.548 176.477 187.283 175.736 184.488 175.736 cv
181.693 175.736 179.428 176.477 179.428 177.392 cv
179.428 178.307 181.693 179.048 184.488 179.048 cv
187.283 179.048 189.548 178.307 189.548 177.392 cv
@
189.548 177.392 mo
189.548 176.477 187.283 175.736 184.488 175.736 cv
181.693 175.736 179.428 176.477 179.428 177.392 cv
179.428 178.307 181.693 179.048 184.488 179.048 cv
187.283 179.048 189.548 178.307 189.548 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
180.392 177.686 mo
(roundrobin\(1,2\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
256.984 169.02 mo
240.056 169.112 211.444 169.664 194.332 171.32 cv
192.124 171.596 188.996 173.712 186.972 175.276 cv
@
186.88 175.092 mo
186.328 175.828 li
187.156 175.368 li
cp
@
186.88 175.092 mo
186.328 175.828 li
187.156 175.368 li
f
227.636 177.392 mo
227.636 176.477 225.371 175.736 222.576 175.736 cv
219.781 175.736 217.516 176.477 217.516 177.392 cv
217.516 178.307 219.781 179.048 222.576 179.048 cv
225.371 179.048 227.636 178.307 227.636 177.392 cv
@
227.636 177.392 mo
227.636 176.477 225.371 175.736 222.576 175.736 cv
219.781 175.736 217.516 176.477 217.516 177.392 cv
217.516 178.307 219.781 179.048 222.576 179.048 cv
225.371 179.048 227.636 178.307 227.636 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
218.48 177.686 mo
(roundrobin\(1,2\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
257.26 169.296 mo
249.072 169.572 238.952 170.216 232.42 171.32 cv
230.212 171.688 227.176 173.712 225.152 175.276 cv
@
225.06 175.092 mo
224.508 175.828 li
225.336 175.368 li
cp
@
225.06 175.092 mo
224.508 175.828 li
225.336 175.368 li
f
265.724 177.392 mo
265.724 176.477 263.459 175.736 260.664 175.736 cv
257.869 175.736 255.604 176.477 255.604 177.392 cv
255.604 178.307 257.869 179.048 260.664 179.048 cv
263.459 179.048 265.724 178.307 265.724 177.392 cv
@
265.724 177.392 mo
265.724 176.477 263.459 175.736 260.664 175.736 cv
257.869 175.736 255.604 176.477 255.604 177.392 cv
255.604 178.307 257.869 179.048 260.664 179.048 cv
263.459 179.048 265.724 178.307 265.724 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
256.568 177.686 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
268.76 170.584 mo
267.104 171.964 264.804 173.896 263.148 175.276 cv
@
263.056 175.092 mo
262.504 175.828 li
263.332 175.368 li
cp
@
263.056 175.092 mo
262.504 175.828 li
263.332 175.368 li
f
285.872 177.392 mo
285.872 176.477 283.607 175.736 280.812 175.736 cv
278.017 175.736 275.752 176.477 275.752 177.392 cv
275.752 178.307 278.017 179.048 280.812 179.048 cv
283.607 179.048 285.872 178.307 285.872 177.392 cv
@
285.872 177.392 mo
285.872 176.477 283.607 175.736 280.812 175.736 cv
278.017 175.736 275.752 176.477 275.752 177.392 cv
275.752 178.307 278.017 179.048 280.812 179.048 cv
283.607 179.048 285.872 178.307 285.872 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
276.716 177.686 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
272.624 170.584 mo
274.28 171.964 276.58 173.896 278.328 175.276 cv
@
278.144 175.368 mo
278.972 175.828 li
278.42 175.092 li
cp
@
278.144 175.368 mo
278.972 175.828 li
278.42 175.092 li
f
323.96 177.392 mo
323.96 176.477 321.695 175.736 318.9 175.736 cv
316.105 175.736 313.84 176.477 313.84 177.392 cv
313.84 178.307 316.105 179.048 318.9 179.048 cv
321.695 179.048 323.96 178.307 323.96 177.392 cv
@
323.96 177.392 mo
323.96 176.477 321.695 175.736 318.9 175.736 cv
316.105 175.736 313.84 176.477 313.84 177.392 cv
313.84 178.307 316.105 179.048 318.9 179.048 cv
321.695 179.048 323.96 178.307 323.96 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
314.804 177.686 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
284.124 169.296 mo
291.852 169.664 301.328 170.216 307.492 171.32 cv
309.976 171.78 313.472 173.804 315.956 175.368 cv
@
315.772 175.552 mo
316.692 175.828 li
316.048 175.184 li
cp
@
315.772 175.552 mo
316.692 175.828 li
316.048 175.184 li
f
362.048 177.392 mo
362.048 176.477 359.783 175.736 356.988 175.736 cv
354.193 175.736 351.928 176.477 351.928 177.392 cv
351.928 178.307 354.193 179.048 356.988 179.048 cv
359.783 179.048 362.048 178.307 362.048 177.392 cv
@
362.048 177.392 mo
362.048 176.477 359.783 175.736 356.988 175.736 cv
354.193 175.736 351.928 176.477 351.928 177.392 cv
351.928 178.307 354.193 179.048 356.988 179.048 cv
359.783 179.048 362.048 178.307 362.048 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
352.892 177.686 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
284.4 168.928 mo
304.824 169.02 325.248 169.388 345.58 171.32 cv
348.156 171.596 351.652 173.712 354.136 175.276 cv
@
354.044 175.552 mo
354.964 175.828 li
354.32 175.092 li
cp
@
354.044 175.552 mo
354.964 175.828 li
354.32 175.092 li
f
400.136 177.392 mo
400.136 176.477 397.871 175.736 395.076 175.736 cv
392.281 175.736 390.016 176.477 390.016 177.392 cv
390.016 178.307 392.281 179.048 395.076 179.048 cv
397.871 179.048 400.136 178.307 400.136 177.392 cv
@
400.136 177.392 mo
400.136 176.477 397.871 175.736 395.076 175.736 cv
392.281 175.736 390.016 176.477 390.016 177.392 cv
390.016 178.307 392.281 179.048 395.076 179.048 cv
397.871 179.048 400.136 178.307 400.136 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
390.98 177.686 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
284.216 169.204 mo
314.208 169.848 383.668 171.32 383.668 171.32 cv
386.244 171.596 389.74 173.712 392.224 175.276 cv
@
392.132 175.552 mo
393.052 175.828 li
392.408 175.092 li
cp
@
392.132 175.552 mo
393.052 175.828 li
392.408 175.092 li
f
438.224 177.392 mo
438.224 176.477 435.959 175.736 433.164 175.736 cv
430.369 175.736 428.104 176.477 428.104 177.392 cv
428.104 178.307 430.369 179.048 433.164 179.048 cv
435.959 179.048 438.224 178.307 438.224 177.392 cv
@
438.224 177.392 mo
438.224 176.477 435.959 175.736 433.164 175.736 cv
430.369 175.736 428.104 176.477 428.104 177.392 cv
428.104 178.307 430.369 179.048 433.164 179.048 cv
435.959 179.048 438.224 178.307 438.224 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
429.068 177.686 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
284.4 168.928 mo
313.656 169.02 382.84 169.296 421.756 171.32 cv
424.332 171.504 427.92 173.62 430.404 175.276 cv
@
430.312 175.46 mo
431.14 175.828 li
430.588 175.092 li
cp
@
430.312 175.46 mo
431.14 175.828 li
430.588 175.092 li
f
476.312 177.392 mo
476.312 176.477 474.047 175.736 471.252 175.736 cv
468.457 175.736 466.192 176.477 466.192 177.392 cv
466.192 178.307 468.457 179.048 471.252 179.048 cv
474.047 179.048 476.312 178.307 476.312 177.392 cv
@
476.312 177.392 mo
476.312 176.477 474.047 175.736 471.252 175.736 cv
468.457 175.736 466.192 176.477 466.192 177.392 cv
466.192 178.307 468.457 179.048 471.252 179.048 cv
474.047 179.048 476.312 178.307 476.312 177.392 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
467.156 177.686 mo
(roundrobin\(1,2\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
284.308 169.112 mo
327.732 169.664 459.844 171.32 459.844 171.32 cv
462.512 171.412 466.284 173.712 468.768 175.46 cv
@
468.4 175.46 mo
469.228 175.828 li
468.676 175.092 li
cp
@
468.4 175.46 mo
469.228 175.828 li
468.676 175.092 li
f
280.168 211.984 mo
280.168 211.069 275.761 210.328 270.324 210.328 cv
264.887 210.328 260.48 211.069 260.48 211.984 cv
260.48 212.899 264.887 213.64 270.324 213.64 cv
275.761 213.64 280.168 212.899 280.168 211.984 cv
@
280.168 211.984 mo
280.168 211.069 275.761 210.328 270.324 210.328 cv
264.887 210.328 260.48 211.069 260.48 211.984 cv
260.48 212.899 264.887 213.64 270.324 213.64 cv
275.761 213.64 280.168 212.899 280.168 211.984 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
261.398 212.278 mo
(roundrobin\(1,1,1,1,1,1,1,1,1,1,1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 .321991 .644012 .321991 .643982 .322021 .643982 .322021 .643982 .322021 .643982 
.321991 .644012 .321991 .644012 .321991 .644012 .321991 .644012 .321991 .644012 0 ]xsh
276.764 218.976 mo
276.764 218.061 273.881 217.32 270.324 217.32 cv
266.767 217.32 263.884 218.061 263.884 218.976 cv
263.884 219.891 266.767 220.632 270.324 220.632 cv
273.881 220.632 276.764 219.891 276.764 218.976 cv
@
276.764 218.976 mo
276.764 218.061 273.881 217.32 270.324 217.32 cv
266.767 217.32 263.884 218.061 263.884 218.976 cv
263.884 219.891 266.767 220.632 270.324 220.632 cv
273.881 220.632 276.764 219.891 276.764 218.976 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
264.779 219.27 mo
(roundrobin\(1,1,1,1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 .321991 .644012 .321991 .643982 .322021 .643982 0 ]xsh
270.324 213.64 mo
270.324 214.468 270.324 215.48 270.324 216.4 cv
@
270.14 216.4 mo
270.324 217.32 li
270.6 216.4 li
cp
@
270.14 216.4 mo
270.324 217.32 li
270.6 216.4 li
f
61.208 186.592 mo
61.208 184.306 57.2125 182.452 52.284 182.452 cv
47.3554 182.452 43.36 184.306 43.36 186.592 cv
43.36 188.878 47.3554 190.732 52.284 190.732 cv
57.2125 190.732 61.208 188.878 61.208 186.592 cv
@
61.208 186.592 mo
61.208 184.306 57.2125 182.452 52.284 182.452 cv
47.3554 182.452 43.36 184.306 43.36 186.592 cv
43.36 188.878 47.3554 190.732 52.284 190.732 cv
57.2125 190.732 61.208 188.878 61.208 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
49.2444 184.678 mo
(PreDecoder)
[.716129 .428894 .57185 .929916 .571854 .571854 .644001 .643997 .571854 0 ]xsh
48.9874 186.15 mo
(work=17940)
[.929916 .644001 .428894 .644001 .726425 .643997 .644001 .644001 .644001 0 ]xsh
49.8639 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358067 .321999 .644001 .428894 .726425 0 ]xsh
45.1646 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.644001 .643997 .644001 .322002 .716125 .786957 .786961 .929916 .716129 .321999 .644001 .321999 
.929916 .929916 .786961 .929916 .929916 .321999 .643997 .644001 0 ]xsh
67.464 178.772 mo
65.256 179.968 61.852 181.624 59 183.188 cv
@
59.092 182.912 mo
58.356 183.464 li
59.276 183.28 li
cp
@
59.092 182.912 mo
58.356 183.464 li
59.276 183.28 li
f
77.584 186.592 mo
77.584 184.306 74.2888 182.452 70.224 182.452 cv
66.1592 182.452 62.864 184.306 62.864 186.592 cv
62.864 188.878 66.1592 190.732 70.224 190.732 cv
74.2888 190.732 77.584 188.878 77.584 186.592 cv
@
77.584 186.592 mo
77.584 184.306 74.2888 182.452 70.224 182.452 cv
66.1592 182.452 62.864 184.306 62.864 186.592 cv
62.864 188.878 66.1592 190.732 70.224 190.732 cv
74.2888 190.732 77.584 188.878 77.584 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
64.8956 184.678 mo
(UngerboeckDecoder)
[.929916 .643997 .644005 .571854 .428894 .643997 .643997 .571854 .571854 .644005 .929916 .571846 
.571854 .644005 .643997 .571854 0 ]xsh
65.1396 186.15 mo
(work=UNKNOWN)
[.929916 .643997 .428894 .644005 .726425 .929916 .929916 .929916 .929916 .929916 1.21585 0 
]xsh
67.4819 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929916 .358063 .322006 .643997 .643997 .428894 .726425 0 ]xsh
64.75 189.094 mo
(*** STATEFUL ***)
[.643997 .644005 .643997 .321999 .716133 .786957 .929916 .786957 .786957 .716125 .929916 .786964 
.321999 .643997 .644005 0 ]xsh
70.224 179.048 mo
70.224 179.692 70.224 180.52 70.224 181.348 cv
@
70.04 181.44 mo
70.224 182.36 li
70.5 181.44 li
cp
@
70.04 181.44 mo
70.224 182.36 li
70.5 181.44 li
f
75.284 195.792 mo
75.284 194.877 73.0185 194.136 70.224 194.136 cv
67.4295 194.136 65.164 194.877 65.164 195.792 cv
65.164 196.707 67.4295 197.448 70.224 197.448 cv
73.0185 197.448 75.284 196.707 75.284 195.792 cv
@
75.284 195.792 mo
75.284 194.877 73.0185 194.136 70.224 194.136 cv
67.4295 194.136 65.164 194.877 65.164 195.792 cv
65.164 196.707 67.4295 197.448 70.224 197.448 cv
73.0185 197.448 75.284 196.707 75.284 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
66.1282 196.086 mo
(roundrobin\(1,1\))
[.428894 .643997 .644005 .643997 .644005 .428894 .643997 .643997 .358063 .644005 .428894 .643997 
.321999 .644005 0 ]xsh
76.664 203.888 mo
76.664 202.16 74.5221 200.76 71.88 200.76 cv
69.2379 200.76 67.096 202.16 67.096 203.888 cv
67.096 205.615 69.2379 207.016 71.88 207.016 cv
74.5221 207.016 76.664 205.615 76.664 203.888 cv
@
76.664 203.888 mo
76.664 202.16 74.5221 200.76 71.88 200.76 cv
69.2379 200.76 67.096 202.16 67.096 203.888 cv
67.096 205.615 69.2379 207.016 71.88 207.016 cv
74.5221 207.016 76.664 205.615 76.664 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
69.2326 202.71 mo
(UnBitifier)
[.929916 .643997 .859093 .358063 .358063 .358063 .428894 .358063 .571854 0 ]xsh
68.5834 204.182 mo
(work=20355)
[.929916 .643997 .428894 .644005 .726425 .643997 .644005 .643997 .643997 0 ]xsh
69.4599 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
70.592 197.448 mo
70.776 198.184 70.96 199.196 71.144 200.116 cv
@
70.868 199.84 mo
71.236 200.76 li
71.328 199.84 li
cp
@
70.868 199.84 mo
71.236 200.76 li
71.328 199.84 li
f
58.264 189.72 mo
61.116 191.1 64.336 192.756 66.728 194.044 cv
@
66.544 194.228 mo
67.464 194.412 li
66.728 193.768 li
cp
@
66.544 194.228 mo
67.464 194.412 li
66.728 193.768 li
f
70.224 190.824 mo
70.224 191.652 70.224 192.572 70.224 193.308 cv
@
70.04 193.216 mo
70.224 194.136 li
70.5 193.216 li
cp
@
70.04 193.216 mo
70.224 194.136 li
70.5 193.216 li
f
75.008 206.28 mo
76.204 207.016 77.492 207.752 78.596 207.752 cv
131.404 209.96 227.636 211.432 259.652 211.892 cv
@
259.56 212.076 mo
260.48 211.892 li
259.56 211.616 li
cp
@
259.56 212.076 mo
260.48 211.892 li
259.56 211.616 li
f
99.296 186.592 mo
99.296 184.306 95.3006 182.452 90.372 182.452 cv
85.4434 182.452 81.448 184.306 81.448 186.592 cv
81.448 188.878 85.4434 190.732 90.372 190.732 cv
95.3006 190.732 99.296 188.878 99.296 186.592 cv
@
99.296 186.592 mo
99.296 184.306 95.3006 182.452 90.372 182.452 cv
85.4434 182.452 81.448 184.306 81.448 186.592 cv
81.448 188.878 85.4434 190.732 90.372 190.732 cv
95.3006 190.732 99.296 188.878 99.296 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
87.3324 184.678 mo
(PreDecoder)
[.716125 .428894 .571854 .929916 .571854 .571854 .643997 .644005 .571854 0 ]xsh
87.0754 186.15 mo
(work=17940)
[.929916 .643997 .428894 .644005 .726425 .643997 .644005 .643997 .643997 0 ]xsh
87.9519 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
83.2526 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.643997 .644005 .643997 .321999 .716133 .786957 .786957 .929916 .716125 .321999 .644005 .321999 
.929916 .929916 .786957 .929916 .929916 .321999 .644005 .643997 0 ]xsh
105.552 178.772 mo
103.344 179.968 99.94 181.624 97.088 183.188 cv
@
97.18 182.912 mo
96.444 183.464 li
97.364 183.28 li
cp
@
97.18 182.912 mo
96.444 183.464 li
97.364 183.28 li
f
115.672 186.592 mo
115.672 184.306 112.377 182.452 108.312 182.452 cv
104.247 182.452 100.952 184.306 100.952 186.592 cv
100.952 188.878 104.247 190.732 108.312 190.732 cv
112.377 190.732 115.672 188.878 115.672 186.592 cv
@
115.672 186.592 mo
115.672 184.306 112.377 182.452 108.312 182.452 cv
104.247 182.452 100.952 184.306 100.952 186.592 cv
100.952 188.878 104.247 190.732 108.312 190.732 cv
112.377 190.732 115.672 188.878 115.672 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
102.984 184.678 mo
(UngerboeckDecoder)
[.929916 .643997 .644005 .571854 .428894 .643997 .643997 .571854 .571854 .643997 .929916 .571854 
.571854 .644005 .643997 .571854 0 ]xsh
105.338 186.15 mo
(work=1656)
[.929916 .643997 .428894 .644005 .726425 .643997 .644005 .643997 0 ]xsh
105.57 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929916 .358063 .322006 .643997 .643997 .428894 .726425 0 ]xsh
102.838 189.094 mo
(*** STATEFUL ***)
[.643997 .644005 .643997 .321999 .716133 .786957 .929916 .786957 .786957 .716125 .929916 .786964 
.321999 .643997 .644005 0 ]xsh
108.312 179.048 mo
108.312 179.692 108.312 180.52 108.312 181.348 cv
@
108.128 181.44 mo
108.312 182.36 li
108.588 181.44 li
cp
@
108.128 181.44 mo
108.312 182.36 li
108.588 181.44 li
f
113.372 195.792 mo
113.372 194.877 111.107 194.136 108.312 194.136 cv
105.517 194.136 103.252 194.877 103.252 195.792 cv
103.252 196.707 105.517 197.448 108.312 197.448 cv
111.107 197.448 113.372 196.707 113.372 195.792 cv
@
113.372 195.792 mo
113.372 194.877 111.107 194.136 108.312 194.136 cv
105.517 194.136 103.252 194.877 103.252 195.792 cv
103.252 196.707 105.517 197.448 108.312 197.448 cv
111.107 197.448 113.372 196.707 113.372 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
104.216 196.086 mo
(roundrobin\(1,1\))
[.428894 .643997 .644005 .643997 .644005 .428894 .643997 .643997 .358063 .644005 .428894 .643997 
.321999 .644005 0 ]xsh
114.752 203.888 mo
114.752 202.16 112.61 200.76 109.968 200.76 cv
107.326 200.76 105.184 202.16 105.184 203.888 cv
105.184 205.615 107.326 207.016 109.968 207.016 cv
112.61 207.016 114.752 205.615 114.752 203.888 cv
@
114.752 203.888 mo
114.752 202.16 112.61 200.76 109.968 200.76 cv
107.326 200.76 105.184 202.16 105.184 203.888 cv
105.184 205.615 107.326 207.016 109.968 207.016 cv
112.61 207.016 114.752 205.615 114.752 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
107.321 202.71 mo
(UnBitifier)
[.929916 .643997 .859085 .35807 .358063 .358063 .428894 .358063 .571854 0 ]xsh
106.672 204.182 mo
(work=20355)
[.929916 .643997 .428894 .644005 .726425 .643997 .644005 .643997 .643997 0 ]xsh
107.548 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
108.68 197.448 mo
108.864 198.184 109.048 199.196 109.232 200.116 cv
@
108.956 199.84 mo
109.324 200.76 li
109.416 199.84 li
cp
@
108.956 199.84 mo
109.324 200.76 li
109.416 199.84 li
f
96.352 189.72 mo
99.204 191.1 102.424 192.756 104.816 194.044 cv
@
104.632 194.228 mo
105.552 194.412 li
104.816 193.768 li
cp
@
104.632 194.228 mo
105.552 194.412 li
104.816 193.768 li
f
108.312 190.824 mo
108.312 191.652 108.312 192.572 108.312 193.308 cv
@
108.128 193.216 mo
108.312 194.136 li
108.588 193.216 li
cp
@
108.128 193.216 mo
108.312 194.136 li
108.588 193.216 li
f
113.096 206.28 mo
114.292 207.016 115.58 207.752 116.684 207.752 cv
157.9 209.96 232.42 211.34 259.744 211.8 cv
@
259.56 211.984 mo
260.48 211.8 li
259.56 211.524 li
cp
@
259.56 211.984 mo
260.48 211.8 li
259.56 211.524 li
f
137.384 186.592 mo
137.384 184.306 133.389 182.452 128.46 182.452 cv
123.531 182.452 119.536 184.306 119.536 186.592 cv
119.536 188.878 123.531 190.732 128.46 190.732 cv
133.389 190.732 137.384 188.878 137.384 186.592 cv
@
137.384 186.592 mo
137.384 184.306 133.389 182.452 128.46 182.452 cv
123.531 182.452 119.536 184.306 119.536 186.592 cv
119.536 188.878 123.531 190.732 128.46 190.732 cv
133.389 190.732 137.384 188.878 137.384 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
125.42 184.678 mo
(PreDecoder)
[.716125 .428894 .571854 .929916 .571854 .571854 .643997 .643997 .571854 0 ]xsh
125.163 186.15 mo
(work=17940)
[.929916 .643997 .428894 .644005 .726425 .643997 .643997 .644012 .643997 0 ]xsh
126.04 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
121.34 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.643997 .644005 .643997 .321999 .716133 .786957 .786957 .929916 .716125 .321999 .644005 .322006 
.929901 .929932 .786957 .929916 .929916 .321991 .643997 .644012 0 ]xsh
143.64 178.772 mo
141.432 179.968 138.028 181.624 135.176 183.188 cv
@
135.268 182.912 mo
134.532 183.464 li
135.452 183.28 li
cp
@
135.268 182.912 mo
134.532 183.464 li
135.452 183.28 li
f
153.76 186.592 mo
153.76 184.306 150.465 182.452 146.4 182.452 cv
142.335 182.452 139.04 184.306 139.04 186.592 cv
139.04 188.878 142.335 190.732 146.4 190.732 cv
150.465 190.732 153.76 188.878 153.76 186.592 cv
@
153.76 186.592 mo
153.76 184.306 150.465 182.452 146.4 182.452 cv
142.335 182.452 139.04 184.306 139.04 186.592 cv
139.04 188.878 142.335 190.732 146.4 190.732 cv
150.465 190.732 153.76 188.878 153.76 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
141.072 184.678 mo
(UngerboeckDecoder)
[.929916 .643997 .643997 .571854 .428894 .644012 .643997 .571854 .571854 .643997 .929916 .571854 
.571854 .643997 .643997 .571854 0 ]xsh
143.426 186.15 mo
(work=1656)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 0 ]xsh
143.658 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929916 .358063 .322006 .643997 .643997 .428894 .726425 0 ]xsh
140.926 189.094 mo
(*** STATEFUL ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .929916 .786957 .786972 .716125 .929916 .786957 
.321991 .644012 .643997 0 ]xsh
146.4 179.048 mo
146.4 179.692 146.4 180.52 146.4 181.348 cv
@
146.216 181.44 mo
146.4 182.36 li
146.676 181.44 li
cp
@
146.216 181.44 mo
146.4 182.36 li
146.676 181.44 li
f
151.46 195.792 mo
151.46 194.877 149.195 194.136 146.4 194.136 cv
143.605 194.136 141.34 194.877 141.34 195.792 cv
141.34 196.707 143.605 197.448 146.4 197.448 cv
149.195 197.448 151.46 196.707 151.46 195.792 cv
@
151.46 195.792 mo
151.46 194.877 149.195 194.136 146.4 194.136 cv
143.605 194.136 141.34 194.877 141.34 195.792 cv
141.34 196.707 143.605 197.448 146.4 197.448 cv
149.195 197.448 151.46 196.707 151.46 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
142.304 196.086 mo
(roundrobin\(1,1\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
152.84 203.888 mo
152.84 202.16 150.698 200.76 148.056 200.76 cv
145.414 200.76 143.272 202.16 143.272 203.888 cv
143.272 205.615 145.414 207.016 148.056 207.016 cv
150.698 207.016 152.84 205.615 152.84 203.888 cv
@
152.84 203.888 mo
152.84 202.16 150.698 200.76 148.056 200.76 cv
145.414 200.76 143.272 202.16 143.272 203.888 cv
143.272 205.615 145.414 207.016 148.056 207.016 cv
150.698 207.016 152.84 205.615 152.84 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
145.409 202.71 mo
(UnBitifier)
[.929916 .643997 .859085 .358063 .358063 .358063 .428894 .358078 .571838 0 ]xsh
144.76 204.182 mo
(work=20355)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
145.636 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
146.768 197.448 mo
146.952 198.184 147.136 199.196 147.32 200.116 cv
@
147.044 199.84 mo
147.412 200.76 li
147.504 199.84 li
cp
@
147.044 199.84 mo
147.412 200.76 li
147.504 199.84 li
f
134.44 189.72 mo
137.292 191.1 140.512 192.756 142.904 194.044 cv
@
142.72 194.228 mo
143.64 194.412 li
142.904 193.768 li
cp
@
142.72 194.228 mo
143.64 194.412 li
142.904 193.768 li
f
146.4 190.824 mo
146.4 191.652 146.4 192.572 146.4 193.308 cv
@
146.216 193.216 mo
146.4 194.136 li
146.676 193.216 li
cp
@
146.216 193.216 mo
146.4 194.136 li
146.676 193.216 li
f
151.184 206.28 mo
152.38 207.016 153.668 207.752 154.772 207.752 cv
184.58 209.776 237.204 211.248 259.652 211.8 cv
@
259.652 211.984 mo
260.572 211.8 li
259.652 211.524 li
cp
@
259.652 211.984 mo
260.572 211.8 li
259.652 211.524 li
f
175.472 186.592 mo
175.472 184.306 171.477 182.452 166.548 182.452 cv
161.619 182.452 157.624 184.306 157.624 186.592 cv
157.624 188.878 161.619 190.732 166.548 190.732 cv
171.477 190.732 175.472 188.878 175.472 186.592 cv
@
175.472 186.592 mo
175.472 184.306 171.477 182.452 166.548 182.452 cv
161.619 182.452 157.624 184.306 157.624 186.592 cv
157.624 188.878 161.619 190.732 166.548 190.732 cv
171.477 190.732 175.472 188.878 175.472 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
163.508 184.678 mo
(PreDecoder)
[.716125 .428894 .571854 .929916 .571854 .571854 .643997 .643997 .571854 0 ]xsh
163.251 186.15 mo
(work=17940)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
164.128 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
159.428 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .786957 .929916 .716141 .321991 .643997 .322006 
.929916 .929916 .786957 .929916 .929916 .322006 .643997 .643997 0 ]xsh
181.728 178.772 mo
179.52 179.968 176.116 181.624 173.264 183.188 cv
@
173.356 182.912 mo
172.62 183.464 li
173.54 183.28 li
cp
@
173.356 182.912 mo
172.62 183.464 li
173.54 183.28 li
f
191.848 186.592 mo
191.848 184.306 188.553 182.452 184.488 182.452 cv
180.423 182.452 177.128 184.306 177.128 186.592 cv
177.128 188.878 180.423 190.732 184.488 190.732 cv
188.553 190.732 191.848 188.878 191.848 186.592 cv
@
191.848 186.592 mo
191.848 184.306 188.553 182.452 184.488 182.452 cv
180.423 182.452 177.128 184.306 177.128 186.592 cv
177.128 188.878 180.423 190.732 184.488 190.732 cv
188.553 190.732 191.848 188.878 191.848 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
179.16 184.678 mo
(UngerboeckDecoder)
[.929916 .643997 .643997 .571854 .428894 .644012 .643997 .571854 .571854 .643997 .929916 .571854 
.571854 .643997 .643997 .571854 0 ]xsh
181.514 186.15 mo
(work=1656)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 0 ]xsh
181.746 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929916 .358063 .322006 .643997 .643997 .428894 .726425 0 ]xsh
179.014 189.094 mo
(*** STATEFUL ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .929916 .786972 .786957 .716125 .929916 .786957 
.321991 .644012 .643997 0 ]xsh
184.488 179.048 mo
184.488 179.692 184.488 180.52 184.488 181.348 cv
@
184.304 181.44 mo
184.488 182.36 li
184.764 181.44 li
cp
@
184.304 181.44 mo
184.488 182.36 li
184.764 181.44 li
f
189.548 195.792 mo
189.548 194.877 187.283 194.136 184.488 194.136 cv
181.693 194.136 179.428 194.877 179.428 195.792 cv
179.428 196.707 181.693 197.448 184.488 197.448 cv
187.283 197.448 189.548 196.707 189.548 195.792 cv
@
189.548 195.792 mo
189.548 194.877 187.283 194.136 184.488 194.136 cv
181.693 194.136 179.428 194.877 179.428 195.792 cv
179.428 196.707 181.693 197.448 184.488 197.448 cv
187.283 197.448 189.548 196.707 189.548 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
180.392 196.086 mo
(roundrobin\(1,1\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
190.928 203.888 mo
190.928 202.16 188.786 200.76 186.144 200.76 cv
183.502 200.76 181.36 202.16 181.36 203.888 cv
181.36 205.615 183.502 207.016 186.144 207.016 cv
188.786 207.016 190.928 205.615 190.928 203.888 cv
@
190.928 203.888 mo
190.928 202.16 188.786 200.76 186.144 200.76 cv
183.502 200.76 181.36 202.16 181.36 203.888 cv
181.36 205.615 183.502 207.016 186.144 207.016 cv
188.786 207.016 190.928 205.615 190.928 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
183.497 202.71 mo
(UnBitifier)
[.929916 .643997 .859085 .358063 .358063 .358063 .428894 .358078 .571854 0 ]xsh
182.848 204.182 mo
(work=20355)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
183.724 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
184.856 197.448 mo
185.04 198.184 185.224 199.196 185.408 200.116 cv
@
185.132 199.84 mo
185.5 200.76 li
185.592 199.84 li
cp
@
185.132 199.84 mo
185.5 200.76 li
185.592 199.84 li
f
172.528 189.72 mo
175.38 191.1 178.6 192.756 180.992 194.044 cv
@
180.808 194.228 mo
181.728 194.412 li
180.992 193.768 li
cp
@
180.808 194.228 mo
181.728 194.412 li
180.992 193.768 li
f
184.488 190.824 mo
184.488 191.652 184.488 192.572 184.488 193.308 cv
@
184.304 193.216 mo
184.488 194.136 li
184.764 193.216 li
cp
@
184.304 193.216 mo
184.488 194.136 li
184.764 193.216 li
f
189.364 206.28 mo
190.56 207.016 191.848 207.66 192.86 207.752 cv
211.352 209.592 243.184 210.88 259.652 211.616 cv
@
259.744 211.8 mo
260.664 211.616 li
259.744 211.34 li
cp
@
259.744 211.8 mo
260.664 211.616 li
259.744 211.34 li
f
213.56 186.592 mo
213.56 184.306 209.565 182.452 204.636 182.452 cv
199.707 182.452 195.712 184.306 195.712 186.592 cv
195.712 188.878 199.707 190.732 204.636 190.732 cv
209.565 190.732 213.56 188.878 213.56 186.592 cv
@
213.56 186.592 mo
213.56 184.306 209.565 182.452 204.636 182.452 cv
199.707 182.452 195.712 184.306 195.712 186.592 cv
195.712 188.878 199.707 190.732 204.636 190.732 cv
209.565 190.732 213.56 188.878 213.56 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
201.596 184.678 mo
(PreDecoder)
[.716125 .428894 .571854 .929916 .571854 .571854 .643997 .643997 .571854 0 ]xsh
201.339 186.15 mo
(work=17940)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
202.215 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
197.516 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .786957 .929932 .716125 .321991 .643997 .322006 
.929916 .929916 .786957 .929916 .929916 .322006 .643997 .643997 0 ]xsh
219.816 178.772 mo
217.608 179.968 214.204 181.624 211.352 183.188 cv
@
211.444 182.912 mo
210.708 183.464 li
211.628 183.28 li
cp
@
211.444 182.912 mo
210.708 183.464 li
211.628 183.28 li
f
229.936 186.592 mo
229.936 184.306 226.641 182.452 222.576 182.452 cv
218.511 182.452 215.216 184.306 215.216 186.592 cv
215.216 188.878 218.511 190.732 222.576 190.732 cv
226.641 190.732 229.936 188.878 229.936 186.592 cv
@
229.936 186.592 mo
229.936 184.306 226.641 182.452 222.576 182.452 cv
218.511 182.452 215.216 184.306 215.216 186.592 cv
215.216 188.878 218.511 190.732 222.576 190.732 cv
226.641 190.732 229.936 188.878 229.936 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
217.248 184.678 mo
(UngerboeckDecoder)
[.929916 .643997 .643997 .571854 .428894 .644012 .643997 .571854 .571854 .643997 .929916 .571854 
.571854 .643997 .643997 .571854 0 ]xsh
219.602 186.15 mo
(work=1656)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 0 ]xsh
219.834 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929916 .358063 .322006 .643997 .643997 .428894 .726425 0 ]xsh
217.102 189.094 mo
(*** STATEFUL ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .929916 .786957 .786972 .716125 .929916 .786957 
.321991 .644012 .643997 0 ]xsh
222.576 179.048 mo
222.576 179.692 222.576 180.52 222.576 181.348 cv
@
222.392 181.44 mo
222.576 182.36 li
222.852 181.44 li
cp
@
222.392 181.44 mo
222.576 182.36 li
222.852 181.44 li
f
227.636 195.792 mo
227.636 194.877 225.371 194.136 222.576 194.136 cv
219.781 194.136 217.516 194.877 217.516 195.792 cv
217.516 196.707 219.781 197.448 222.576 197.448 cv
225.371 197.448 227.636 196.707 227.636 195.792 cv
@
227.636 195.792 mo
227.636 194.877 225.371 194.136 222.576 194.136 cv
219.781 194.136 217.516 194.877 217.516 195.792 cv
217.516 196.707 219.781 197.448 222.576 197.448 cv
225.371 197.448 227.636 196.707 227.636 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
218.48 196.086 mo
(roundrobin\(1,1\))
[.428894 .643997 .643997 .644012 .643997 .428894 .643997 .643997 .358063 .643997 .428894 .644012 
.321991 .643997 0 ]xsh
229.016 203.888 mo
229.016 202.16 226.874 200.76 224.232 200.76 cv
221.59 200.76 219.448 202.16 219.448 203.888 cv
219.448 205.615 221.59 207.016 224.232 207.016 cv
226.874 207.016 229.016 205.615 229.016 203.888 cv
@
229.016 203.888 mo
229.016 202.16 226.874 200.76 224.232 200.76 cv
221.59 200.76 219.448 202.16 219.448 203.888 cv
219.448 205.615 221.59 207.016 224.232 207.016 cv
226.874 207.016 229.016 205.615 229.016 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
221.585 202.71 mo
(UnBitifier)
[.929916 .643997 .859085 .358063 .358063 .358063 .428894 .358078 .571854 0 ]xsh
220.936 204.182 mo
(work=20355)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
221.812 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
222.944 197.448 mo
223.128 198.184 223.312 199.196 223.496 200.116 cv
@
223.22 199.84 mo
223.588 200.76 li
223.68 199.84 li
cp
@
223.22 199.84 mo
223.588 200.76 li
223.68 199.84 li
f
210.616 189.72 mo
213.468 191.1 216.688 192.756 219.08 194.044 cv
@
218.896 194.228 mo
219.816 194.412 li
219.08 193.768 li
cp
@
218.896 194.228 mo
219.816 194.412 li
219.08 193.768 li
f
222.576 190.824 mo
222.576 191.652 222.576 192.572 222.576 193.308 cv
@
222.392 193.216 mo
222.576 194.136 li
222.852 193.216 li
cp
@
222.392 193.216 mo
222.576 194.136 li
222.852 193.216 li
f
227.452 206.188 mo
228.648 206.924 229.936 207.568 230.948 207.752 cv
238.86 209.224 251.74 210.42 260.572 211.156 cv
@
260.48 211.34 mo
261.4 211.248 li
260.48 210.88 li
cp
@
260.48 211.34 mo
261.4 211.248 li
260.48 210.88 li
f
251.648 186.592 mo
251.648 184.306 247.653 182.452 242.724 182.452 cv
237.795 182.452 233.8 184.306 233.8 186.592 cv
233.8 188.878 237.795 190.732 242.724 190.732 cv
247.653 190.732 251.648 188.878 251.648 186.592 cv
@
251.648 186.592 mo
251.648 184.306 247.653 182.452 242.724 182.452 cv
237.795 182.452 233.8 184.306 233.8 186.592 cv
233.8 188.878 237.795 190.732 242.724 190.732 cv
247.653 190.732 251.648 188.878 251.648 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
239.684 184.678 mo
(PreDecoder)
[.716125 .428894 .571854 .929916 .571854 .571854 .643997 .643997 .571854 0 ]xsh
239.427 186.15 mo
(work=17940)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 .643997 0 ]xsh
240.304 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
235.604 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.643997 .643997 .644012 .321991 .716125 .786957 .786957 .929932 .716125 .321991 .643997 .322006 
.929916 .929916 .786957 .929916 .929916 .322006 .643997 .643997 0 ]xsh
257.904 178.772 mo
255.696 179.968 252.292 181.624 249.44 183.188 cv
@
249.532 182.912 mo
248.796 183.464 li
249.716 183.28 li
cp
@
249.532 182.912 mo
248.796 183.464 li
249.716 183.28 li
f
268.024 186.592 mo
268.024 184.306 264.729 182.452 260.664 182.452 cv
256.599 182.452 253.304 184.306 253.304 186.592 cv
253.304 188.878 256.599 190.732 260.664 190.732 cv
264.729 190.732 268.024 188.878 268.024 186.592 cv
@
268.024 186.592 mo
268.024 184.306 264.729 182.452 260.664 182.452 cv
256.599 182.452 253.304 184.306 253.304 186.592 cv
253.304 188.878 256.599 190.732 260.664 190.732 cv
264.729 190.732 268.024 188.878 268.024 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
255.336 184.678 mo
(UngerboeckDecoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .929901 .571869 
.571838 .644012 .644012 .571838 0 ]xsh
257.69 186.15 mo
(work=1656)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
257.922 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .428894 .72644 0 ]xsh
255.19 189.094 mo
(*** STATEFUL ***)
[.643997 .644012 .643982 .322021 .716125 .786957 .929901 .786957 .786957 .716125 .929932 .786957 
.321991 .644012 .643982 0 ]xsh
260.664 179.048 mo
260.664 179.692 260.664 180.52 260.664 181.348 cv
@
260.48 181.44 mo
260.664 182.36 li
260.94 181.44 li
cp
@
260.48 181.44 mo
260.664 182.36 li
260.94 181.44 li
f
265.724 195.792 mo
265.724 194.877 263.459 194.136 260.664 194.136 cv
257.869 194.136 255.604 194.877 255.604 195.792 cv
255.604 196.707 257.869 197.448 260.664 197.448 cv
263.459 197.448 265.724 196.707 265.724 195.792 cv
@
265.724 195.792 mo
265.724 194.877 263.459 194.136 260.664 194.136 cv
257.869 194.136 255.604 194.877 255.604 195.792 cv
255.604 196.707 257.869 197.448 260.664 197.448 cv
263.459 197.448 265.724 196.707 265.724 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
256.568 196.086 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
267.104 203.888 mo
267.104 202.16 264.962 200.76 262.32 200.76 cv
259.678 200.76 257.536 202.16 257.536 203.888 cv
257.536 205.615 259.678 207.016 262.32 207.016 cv
264.962 207.016 267.104 205.615 267.104 203.888 cv
@
267.104 203.888 mo
267.104 202.16 264.962 200.76 262.32 200.76 cv
259.678 200.76 257.536 202.16 257.536 203.888 cv
257.536 205.615 259.678 207.016 262.32 207.016 cv
264.962 207.016 267.104 205.615 267.104 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
259.673 202.71 mo
(UnBitifier)
[.929932 .643982 .8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
259.024 204.182 mo
(work=20355)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
259.9 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
261.032 197.448 mo
261.216 198.184 261.4 199.196 261.584 200.116 cv
@
261.308 199.84 mo
261.676 200.76 li
261.768 199.84 li
cp
@
261.308 199.84 mo
261.676 200.76 li
261.768 199.84 li
f
248.704 189.72 mo
251.556 191.1 254.776 192.756 257.168 194.044 cv
@
256.984 194.228 mo
257.904 194.412 li
257.168 193.768 li
cp
@
256.984 194.228 mo
257.904 194.412 li
257.168 193.768 li
f
260.664 190.824 mo
260.664 191.652 260.664 192.572 260.664 193.308 cv
@
260.48 193.216 mo
260.664 194.136 li
260.94 193.216 li
cp
@
260.48 193.216 mo
260.664 194.136 li
260.94 193.216 li
f
264.896 206.556 mo
266 207.568 267.196 208.764 268.116 209.684 cv
@
267.932 209.776 mo
268.668 210.328 li
268.208 209.5 li
cp
@
267.932 209.776 mo
268.668 210.328 li
268.208 209.5 li
f
289.736 186.592 mo
289.736 184.306 285.741 182.452 280.812 182.452 cv
275.883 182.452 271.888 184.306 271.888 186.592 cv
271.888 188.878 275.883 190.732 280.812 190.732 cv
285.741 190.732 289.736 188.878 289.736 186.592 cv
@
289.736 186.592 mo
289.736 184.306 285.741 182.452 280.812 182.452 cv
275.883 182.452 271.888 184.306 271.888 186.592 cv
271.888 188.878 275.883 190.732 280.812 190.732 cv
285.741 190.732 289.736 188.878 289.736 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
277.772 184.678 mo
(PreDecoder)
[.716125 .428894 .571869 .929901 .571869 .571838 .644012 .643982 .571869 0 ]xsh
277.515 186.15 mo
(work=17940)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
278.392 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
273.692 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .786957 .929932 .716125 .321991 .644012 .321991 
.929901 .929932 .786957 .929932 .929901 .321991 .644012 .644012 0 ]xsh
280.812 179.048 mo
280.812 179.692 280.812 180.52 280.812 181.348 cv
@
280.628 181.44 mo
280.812 182.36 li
281.088 181.44 li
cp
@
280.628 181.44 mo
280.812 182.36 li
281.088 181.44 li
f
306.112 186.592 mo
306.112 184.306 302.817 182.452 298.752 182.452 cv
294.687 182.452 291.392 184.306 291.392 186.592 cv
291.392 188.878 294.687 190.732 298.752 190.732 cv
302.817 190.732 306.112 188.878 306.112 186.592 cv
@
306.112 186.592 mo
306.112 184.306 302.817 182.452 298.752 182.452 cv
294.687 182.452 291.392 184.306 291.392 186.592 cv
291.392 188.878 294.687 190.732 298.752 190.732 cv
302.817 190.732 306.112 188.878 306.112 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
293.424 184.678 mo
(UngerboeckDecoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .929901 .571869 
.571838 .644012 .644012 .571838 0 ]xsh
295.778 186.15 mo
(work=1656)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
296.01 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .428894 .72644 0 ]xsh
293.278 189.094 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
283.664 178.772 mo
285.872 179.876 288.908 181.44 290.84 182.36 cv
291.392 182.636 292.128 183.004 292.864 183.372 cv
@
292.496 183.464 mo
293.416 183.74 li
292.772 183.004 li
cp
@
292.496 183.464 mo
293.416 183.74 li
292.772 183.004 li
f
285.872 195.792 mo
285.872 194.877 283.607 194.136 280.812 194.136 cv
278.017 194.136 275.752 194.877 275.752 195.792 cv
275.752 196.707 278.017 197.448 280.812 197.448 cv
283.607 197.448 285.872 196.707 285.872 195.792 cv
@
285.872 195.792 mo
285.872 194.877 283.607 194.136 280.812 194.136 cv
278.017 194.136 275.752 194.877 275.752 195.792 cv
275.752 196.707 278.017 197.448 280.812 197.448 cv
283.607 197.448 285.872 196.707 285.872 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
276.716 196.086 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
283.112 203.888 mo
283.112 202.16 280.97 200.76 278.328 200.76 cv
275.686 200.76 273.544 202.16 273.544 203.888 cv
273.544 205.615 275.686 207.016 278.328 207.016 cv
280.97 207.016 283.112 205.615 283.112 203.888 cv
@
283.112 203.888 mo
283.112 202.16 280.97 200.76 278.328 200.76 cv
275.686 200.76 273.544 202.16 273.544 203.888 cv
273.544 205.615 275.686 207.016 278.328 207.016 cv
280.97 207.016 283.112 205.615 283.112 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
275.681 202.71 mo
(UnBitifier)
[.929932 .643982 .8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
275.032 204.182 mo
(work=20355)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
275.908 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
280.26 197.448 mo
280.076 198.184 279.8 199.012 279.524 199.84 cv
@
279.248 199.84 mo
279.248 200.76 li
279.708 199.932 li
cp
@
279.248 199.84 mo
279.248 200.76 li
279.708 199.932 li
f
280.812 190.824 mo
280.812 191.652 280.812 192.572 280.812 193.308 cv
@
280.628 193.216 mo
280.812 194.136 li
281.088 193.216 li
cp
@
280.628 193.216 mo
280.812 194.136 li
281.088 193.216 li
f
293.416 189.536 mo
292.496 189.996 291.576 190.456 290.84 190.824 cv
289.092 191.744 286.516 192.94 284.492 194.044 cv
@
284.4 193.86 mo
283.664 194.412 li
284.584 194.228 li
cp
@
284.4 193.86 mo
283.664 194.412 li
284.584 194.228 li
f
275.752 206.556 mo
274.648 207.568 273.452 208.764 272.532 209.684 cv
@
272.44 209.5 mo
271.98 210.328 li
272.716 209.776 li
cp
@
272.44 209.5 mo
271.98 210.328 li
272.716 209.776 li
f
327.824 186.592 mo
327.824 184.306 323.829 182.452 318.9 182.452 cv
313.971 182.452 309.976 184.306 309.976 186.592 cv
309.976 188.878 313.971 190.732 318.9 190.732 cv
323.829 190.732 327.824 188.878 327.824 186.592 cv
@
327.824 186.592 mo
327.824 184.306 323.829 182.452 318.9 182.452 cv
313.971 182.452 309.976 184.306 309.976 186.592 cv
309.976 188.878 313.971 190.732 318.9 190.732 cv
323.829 190.732 327.824 188.878 327.824 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
315.86 184.678 mo
(PreDecoder)
[.716125 .428894 .571869 .929901 .571869 .571838 .644012 .643982 .571869 0 ]xsh
315.603 186.15 mo
(work=17940)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
316.479 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
311.78 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .786957 .929932 .716125 .321991 .644012 .321991 
.929932 .929901 .786957 .929932 .929901 .321991 .644012 .644012 0 ]xsh
318.9 179.048 mo
318.9 179.692 318.9 180.52 318.9 181.348 cv
@
318.716 181.44 mo
318.9 182.36 li
319.176 181.44 li
cp
@
318.716 181.44 mo
318.9 182.36 li
319.176 181.44 li
f
344.2 186.592 mo
344.2 184.306 340.905 182.452 336.84 182.452 cv
332.775 182.452 329.48 184.306 329.48 186.592 cv
329.48 188.878 332.775 190.732 336.84 190.732 cv
340.905 190.732 344.2 188.878 344.2 186.592 cv
@
344.2 186.592 mo
344.2 184.306 340.905 182.452 336.84 182.452 cv
332.775 182.452 329.48 184.306 329.48 186.592 cv
329.48 188.878 332.775 190.732 336.84 190.732 cv
340.905 190.732 344.2 188.878 344.2 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
331.512 184.678 mo
(UngerboeckDecoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .929901 .571869 
.571838 .644012 .643982 .571869 0 ]xsh
333.866 186.15 mo
(work=1656)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
334.098 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .428894 .72644 0 ]xsh
331.366 189.094 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
321.752 178.772 mo
323.96 179.876 326.996 181.44 328.928 182.36 cv
329.48 182.636 330.216 183.004 330.952 183.372 cv
@
330.584 183.464 mo
331.504 183.74 li
330.86 183.004 li
cp
@
330.584 183.464 mo
331.504 183.74 li
330.86 183.004 li
f
323.96 195.792 mo
323.96 194.877 321.695 194.136 318.9 194.136 cv
316.105 194.136 313.84 194.877 313.84 195.792 cv
313.84 196.707 316.105 197.448 318.9 197.448 cv
321.695 197.448 323.96 196.707 323.96 195.792 cv
@
323.96 195.792 mo
323.96 194.877 321.695 194.136 318.9 194.136 cv
316.105 194.136 313.84 194.877 313.84 195.792 cv
313.84 196.707 316.105 197.448 318.9 197.448 cv
321.695 197.448 323.96 196.707 323.96 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
314.804 196.086 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
321.2 203.888 mo
321.2 202.16 319.058 200.76 316.416 200.76 cv
313.774 200.76 311.632 202.16 311.632 203.888 cv
311.632 205.615 313.774 207.016 316.416 207.016 cv
319.058 207.016 321.2 205.615 321.2 203.888 cv
@
321.2 203.888 mo
321.2 202.16 319.058 200.76 316.416 200.76 cv
313.774 200.76 311.632 202.16 311.632 203.888 cv
311.632 205.615 313.774 207.016 316.416 207.016 cv
319.058 207.016 321.2 205.615 321.2 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
313.769 202.71 mo
(UnBitifier)
[.929932 .643982 .8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
313.12 204.182 mo
(work=20355)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
313.996 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
318.348 197.448 mo
318.164 198.184 317.888 199.012 317.612 199.84 cv
@
317.336 199.84 mo
317.336 200.76 li
317.796 199.932 li
cp
@
317.336 199.84 mo
317.336 200.76 li
317.796 199.932 li
f
318.9 190.824 mo
318.9 191.652 318.9 192.572 318.9 193.308 cv
@
318.716 193.216 mo
318.9 194.136 li
319.176 193.216 li
cp
@
318.716 193.216 mo
318.9 194.136 li
319.176 193.216 li
f
331.504 189.536 mo
330.584 189.996 329.664 190.456 328.928 190.824 cv
327.18 191.744 324.604 192.94 322.58 194.044 cv
@
322.488 193.86 mo
321.752 194.412 li
322.672 194.228 li
cp
@
322.488 193.86 mo
321.752 194.412 li
322.672 194.228 li
f
313.012 206.096 mo
311.632 206.832 310.16 207.568 308.964 207.752 cv
301.328 209.224 288.632 210.42 279.984 211.156 cv
@
280.168 210.88 mo
279.248 211.248 li
280.168 211.34 li
cp
@
280.168 210.88 mo
279.248 211.248 li
280.168 211.34 li
f
365.912 186.592 mo
365.912 184.306 361.917 182.452 356.988 182.452 cv
352.059 182.452 348.064 184.306 348.064 186.592 cv
348.064 188.878 352.059 190.732 356.988 190.732 cv
361.917 190.732 365.912 188.878 365.912 186.592 cv
@
365.912 186.592 mo
365.912 184.306 361.917 182.452 356.988 182.452 cv
352.059 182.452 348.064 184.306 348.064 186.592 cv
348.064 188.878 352.059 190.732 356.988 190.732 cv
361.917 190.732 365.912 188.878 365.912 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
353.948 184.678 mo
(PreDecoder)
[.716125 .428894 .571869 .929901 .571869 .571838 .644012 .643982 .571869 0 ]xsh
353.691 186.15 mo
(work=17940)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
354.568 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
349.868 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .786957 .929932 .716125 .321991 .644012 .321991 
.929932 .929901 .786957 .929932 .929901 .321991 .644012 .644012 0 ]xsh
356.988 179.048 mo
356.988 179.692 356.988 180.52 356.988 181.348 cv
@
356.804 181.44 mo
356.988 182.36 li
357.264 181.44 li
cp
@
356.804 181.44 mo
356.988 182.36 li
357.264 181.44 li
f
382.288 186.592 mo
382.288 184.306 378.993 182.452 374.928 182.452 cv
370.863 182.452 367.568 184.306 367.568 186.592 cv
367.568 188.878 370.863 190.732 374.928 190.732 cv
378.993 190.732 382.288 188.878 382.288 186.592 cv
@
382.288 186.592 mo
382.288 184.306 378.993 182.452 374.928 182.452 cv
370.863 182.452 367.568 184.306 367.568 186.592 cv
367.568 188.878 370.863 190.732 374.928 190.732 cv
378.993 190.732 382.288 188.878 382.288 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
369.6 184.678 mo
(UngerboeckDecoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .929901 .571869 
.571838 .644012 .643982 .571869 0 ]xsh
371.954 186.15 mo
(work=1656)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
372.186 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .428894 .72644 0 ]xsh
369.454 189.094 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
359.84 178.772 mo
362.048 179.876 365.084 181.44 367.016 182.36 cv
367.568 182.636 368.304 183.004 369.04 183.372 cv
@
368.672 183.464 mo
369.592 183.74 li
368.948 183.004 li
cp
@
368.672 183.464 mo
369.592 183.74 li
368.948 183.004 li
f
362.048 195.792 mo
362.048 194.877 359.783 194.136 356.988 194.136 cv
354.193 194.136 351.928 194.877 351.928 195.792 cv
351.928 196.707 354.193 197.448 356.988 197.448 cv
359.783 197.448 362.048 196.707 362.048 195.792 cv
@
362.048 195.792 mo
362.048 194.877 359.783 194.136 356.988 194.136 cv
354.193 194.136 351.928 194.877 351.928 195.792 cv
351.928 196.707 354.193 197.448 356.988 197.448 cv
359.783 197.448 362.048 196.707 362.048 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
352.892 196.086 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
359.288 203.888 mo
359.288 202.16 357.146 200.76 354.504 200.76 cv
351.862 200.76 349.72 202.16 349.72 203.888 cv
349.72 205.615 351.862 207.016 354.504 207.016 cv
357.146 207.016 359.288 205.615 359.288 203.888 cv
@
359.288 203.888 mo
359.288 202.16 357.146 200.76 354.504 200.76 cv
351.862 200.76 349.72 202.16 349.72 203.888 cv
349.72 205.615 351.862 207.016 354.504 207.016 cv
357.146 207.016 359.288 205.615 359.288 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
351.857 202.71 mo
(UnBitifier)
[.929932 .643982 .8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
351.208 204.182 mo
(work=20355)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
352.084 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
356.436 197.448 mo
356.252 198.184 355.976 199.012 355.7 199.84 cv
@
355.424 199.84 mo
355.424 200.76 li
355.884 199.932 li
cp
@
355.424 199.84 mo
355.424 200.76 li
355.884 199.932 li
f
356.988 190.824 mo
356.988 191.652 356.988 192.572 356.988 193.308 cv
@
356.804 193.216 mo
356.988 194.136 li
357.264 193.216 li
cp
@
356.804 193.216 mo
356.988 194.136 li
357.264 193.216 li
f
369.592 189.536 mo
368.672 189.996 367.752 190.456 367.016 190.824 cv
365.268 191.744 362.692 192.94 360.668 194.044 cv
@
360.576 193.86 mo
359.84 194.412 li
360.76 194.228 li
cp
@
360.576 193.86 mo
359.84 194.412 li
360.76 194.228 li
f
351.192 206.188 mo
349.812 206.924 348.248 207.66 347.052 207.752 cv
328.744 209.592 296.82 210.972 280.628 211.616 cv
@
280.904 211.34 mo
279.984 211.616 li
280.904 211.8 li
cp
@
280.904 211.34 mo
279.984 211.616 li
280.904 211.8 li
f
404 186.592 mo
404 184.306 400.005 182.452 395.076 182.452 cv
390.147 182.452 386.152 184.306 386.152 186.592 cv
386.152 188.878 390.147 190.732 395.076 190.732 cv
400.005 190.732 404 188.878 404 186.592 cv
@
404 186.592 mo
404 184.306 400.005 182.452 395.076 182.452 cv
390.147 182.452 386.152 184.306 386.152 186.592 cv
386.152 188.878 390.147 190.732 395.076 190.732 cv
400.005 190.732 404 188.878 404 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
392.036 184.678 mo
(PreDecoder)
[.716125 .428894 .571869 .929901 .571869 .571838 .644012 .643982 .571869 0 ]xsh
391.779 186.15 mo
(work=17940)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
392.656 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
387.956 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .786957 .929932 .716125 .321991 .644012 .321991 
.929932 .929901 .786957 .929932 .929901 .321991 .644012 .644012 0 ]xsh
395.076 179.048 mo
395.076 179.692 395.076 180.52 395.076 181.348 cv
@
394.892 181.44 mo
395.076 182.36 li
395.352 181.44 li
cp
@
394.892 181.44 mo
395.076 182.36 li
395.352 181.44 li
f
420.376 186.592 mo
420.376 184.306 417.081 182.452 413.016 182.452 cv
408.951 182.452 405.656 184.306 405.656 186.592 cv
405.656 188.878 408.951 190.732 413.016 190.732 cv
417.081 190.732 420.376 188.878 420.376 186.592 cv
@
420.376 186.592 mo
420.376 184.306 417.081 182.452 413.016 182.452 cv
408.951 182.452 405.656 184.306 405.656 186.592 cv
405.656 188.878 408.951 190.732 413.016 190.732 cv
417.081 190.732 420.376 188.878 420.376 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
407.688 184.678 mo
(UngerboeckDecoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .929901 .571869 
.571838 .644012 .644012 .571838 0 ]xsh
410.042 186.15 mo
(work=1656)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
410.274 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .428894 .72644 0 ]xsh
407.542 189.094 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
397.928 178.772 mo
400.136 179.876 403.172 181.44 405.104 182.36 cv
405.656 182.636 406.392 183.004 407.128 183.372 cv
@
406.76 183.464 mo
407.68 183.74 li
407.036 183.004 li
cp
@
406.76 183.464 mo
407.68 183.74 li
407.036 183.004 li
f
400.136 195.792 mo
400.136 194.877 397.871 194.136 395.076 194.136 cv
392.281 194.136 390.016 194.877 390.016 195.792 cv
390.016 196.707 392.281 197.448 395.076 197.448 cv
397.871 197.448 400.136 196.707 400.136 195.792 cv
@
400.136 195.792 mo
400.136 194.877 397.871 194.136 395.076 194.136 cv
392.281 194.136 390.016 194.877 390.016 195.792 cv
390.016 196.707 392.281 197.448 395.076 197.448 cv
397.871 197.448 400.136 196.707 400.136 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
390.98 196.086 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
397.376 203.888 mo
397.376 202.16 395.234 200.76 392.592 200.76 cv
389.95 200.76 387.808 202.16 387.808 203.888 cv
387.808 205.615 389.95 207.016 392.592 207.016 cv
395.234 207.016 397.376 205.615 397.376 203.888 cv
@
397.376 203.888 mo
397.376 202.16 395.234 200.76 392.592 200.76 cv
389.95 200.76 387.808 202.16 387.808 203.888 cv
387.808 205.615 389.95 207.016 392.592 207.016 cv
395.234 207.016 397.376 205.615 397.376 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
389.945 202.71 mo
(UnBitifier)
[.929932 .643982 .8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
389.296 204.182 mo
(work=20355)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
390.172 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
394.524 197.448 mo
394.34 198.184 394.064 199.012 393.788 199.84 cv
@
393.512 199.84 mo
393.512 200.76 li
393.972 199.932 li
cp
@
393.512 199.84 mo
393.512 200.76 li
393.972 199.932 li
f
395.076 190.824 mo
395.076 191.652 395.076 192.572 395.076 193.308 cv
@
394.892 193.216 mo
395.076 194.136 li
395.352 193.216 li
cp
@
394.892 193.216 mo
395.076 194.136 li
395.352 193.216 li
f
407.68 189.536 mo
406.76 189.996 405.84 190.456 405.104 190.824 cv
403.356 191.744 400.78 192.94 398.756 194.044 cv
@
398.664 193.86 mo
397.928 194.412 li
398.848 194.228 li
cp
@
398.664 193.86 mo
397.928 194.412 li
398.848 194.228 li
f
389.28 206.188 mo
387.9 206.924 386.336 207.66 385.14 207.752 cv
355.7 209.776 303.352 211.248 280.996 211.8 cv
@
280.996 211.524 mo
280.076 211.8 li
280.996 211.984 li
cp
@
280.996 211.524 mo
280.076 211.8 li
280.996 211.984 li
f
442.088 186.592 mo
442.088 184.306 438.093 182.452 433.164 182.452 cv
428.235 182.452 424.24 184.306 424.24 186.592 cv
424.24 188.878 428.235 190.732 433.164 190.732 cv
438.093 190.732 442.088 188.878 442.088 186.592 cv
@
442.088 186.592 mo
442.088 184.306 438.093 182.452 433.164 182.452 cv
428.235 182.452 424.24 184.306 424.24 186.592 cv
424.24 188.878 428.235 190.732 433.164 190.732 cv
438.093 190.732 442.088 188.878 442.088 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
430.124 184.678 mo
(PreDecoder)
[.716125 .428894 .571869 .929901 .571869 .571838 .644012 .643982 .571869 0 ]xsh
429.867 186.15 mo
(work=17940)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
430.743 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
426.044 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .786957 .929932 .716125 .321991 .644012 .321991 
.929901 .929932 .786957 .929932 .929901 .321991 .644012 .644012 0 ]xsh
433.164 179.048 mo
433.164 179.692 433.164 180.52 433.164 181.348 cv
@
432.98 181.44 mo
433.164 182.36 li
433.44 181.44 li
cp
@
432.98 181.44 mo
433.164 182.36 li
433.44 181.44 li
f
458.464 186.592 mo
458.464 184.306 455.169 182.452 451.104 182.452 cv
447.039 182.452 443.744 184.306 443.744 186.592 cv
443.744 188.878 447.039 190.732 451.104 190.732 cv
455.169 190.732 458.464 188.878 458.464 186.592 cv
@
458.464 186.592 mo
458.464 184.306 455.169 182.452 451.104 182.452 cv
447.039 182.452 443.744 184.306 443.744 186.592 cv
443.744 188.878 447.039 190.732 451.104 190.732 cv
455.169 190.732 458.464 188.878 458.464 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
445.776 184.678 mo
(UngerboeckDecoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .929901 .571869 
.571838 .644012 .644012 .571838 0 ]xsh
448.13 186.15 mo
(work=1656)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
448.362 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .428894 .72644 0 ]xsh
445.63 189.094 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
436.016 178.772 mo
438.224 179.876 441.26 181.44 443.192 182.36 cv
443.744 182.636 444.48 183.004 445.216 183.372 cv
@
444.848 183.464 mo
445.768 183.74 li
445.124 183.004 li
cp
@
444.848 183.464 mo
445.768 183.74 li
445.124 183.004 li
f
438.224 195.792 mo
438.224 194.877 435.959 194.136 433.164 194.136 cv
430.369 194.136 428.104 194.877 428.104 195.792 cv
428.104 196.707 430.369 197.448 433.164 197.448 cv
435.959 197.448 438.224 196.707 438.224 195.792 cv
@
438.224 195.792 mo
438.224 194.877 435.959 194.136 433.164 194.136 cv
430.369 194.136 428.104 194.877 428.104 195.792 cv
428.104 196.707 430.369 197.448 433.164 197.448 cv
435.959 197.448 438.224 196.707 438.224 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
429.068 196.086 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
435.464 203.888 mo
435.464 202.16 433.322 200.76 430.68 200.76 cv
428.038 200.76 425.896 202.16 425.896 203.888 cv
425.896 205.615 428.038 207.016 430.68 207.016 cv
433.322 207.016 435.464 205.615 435.464 203.888 cv
@
435.464 203.888 mo
435.464 202.16 433.322 200.76 430.68 200.76 cv
428.038 200.76 425.896 202.16 425.896 203.888 cv
425.896 205.615 428.038 207.016 430.68 207.016 cv
433.322 207.016 435.464 205.615 435.464 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
428.033 202.71 mo
(UnBitifier)
[.929932 .643982 .8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
427.384 204.182 mo
(work=20355)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
428.26 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
432.612 197.448 mo
432.428 198.184 432.152 199.012 431.876 199.84 cv
@
431.6 199.84 mo
431.6 200.76 li
432.06 199.932 li
cp
@
431.6 199.84 mo
431.6 200.76 li
432.06 199.932 li
f
433.164 190.824 mo
433.164 191.652 433.164 192.572 433.164 193.308 cv
@
432.98 193.216 mo
433.164 194.136 li
433.44 193.216 li
cp
@
432.98 193.216 mo
433.164 194.136 li
433.44 193.216 li
f
445.768 189.536 mo
444.848 189.996 443.928 190.456 443.192 190.824 cv
441.444 191.744 438.868 192.94 436.844 194.044 cv
@
436.752 193.86 mo
436.016 194.412 li
436.936 194.228 li
cp
@
436.752 193.86 mo
436.016 194.412 li
436.936 194.228 li
f
427.368 206.188 mo
425.988 207.016 424.424 207.752 423.228 207.752 cv
382.288 209.868 308.136 211.34 280.904 211.8 cv
@
281.088 211.524 mo
280.168 211.8 li
281.088 211.984 li
cp
@
281.088 211.524 mo
280.168 211.8 li
281.088 211.984 li
f
480.176 186.592 mo
480.176 184.306 476.181 182.452 471.252 182.452 cv
466.323 182.452 462.328 184.306 462.328 186.592 cv
462.328 188.878 466.323 190.732 471.252 190.732 cv
476.181 190.732 480.176 188.878 480.176 186.592 cv
@
480.176 186.592 mo
480.176 184.306 476.181 182.452 471.252 182.452 cv
466.323 182.452 462.328 184.306 462.328 186.592 cv
462.328 188.878 466.323 190.732 471.252 190.732 cv
476.181 190.732 480.176 188.878 480.176 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
468.212 184.678 mo
(PreDecoder)
[.716125 .428894 .571869 .929901 .571869 .571838 .644012 .643982 .571869 0 ]xsh
467.955 186.15 mo
(work=17940)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
468.832 187.622 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
464.132 189.094 mo
(*** PEEKS 1 AHEAD ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .786957 .929932 .716125 .321991 .644012 .321991 
.929901 .929932 .786957 .929932 .929901 .321991 .644012 .644012 0 ]xsh
471.252 179.048 mo
471.252 179.692 471.252 180.52 471.252 181.348 cv
@
471.068 181.44 mo
471.252 182.36 li
471.528 181.44 li
cp
@
471.068 181.44 mo
471.252 182.36 li
471.528 181.44 li
f
496.552 186.592 mo
496.552 184.306 493.257 182.452 489.192 182.452 cv
485.127 182.452 481.832 184.306 481.832 186.592 cv
481.832 188.878 485.127 190.732 489.192 190.732 cv
493.257 190.732 496.552 188.878 496.552 186.592 cv
@
496.552 186.592 mo
496.552 184.306 493.257 182.452 489.192 182.452 cv
485.127 182.452 481.832 184.306 481.832 186.592 cv
481.832 188.878 485.127 190.732 489.192 190.732 cv
493.257 190.732 496.552 188.878 496.552 186.592 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
483.864 184.678 mo
(UngerboeckDecoder)
[.929932 .643982 .644012 .571838 .428894 .644012 .643982 .571869 .571838 .644012 .929901 .571869 
.571838 .644012 .644012 .571838 0 ]xsh
486.218 186.15 mo
(work=1656)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
486.45 187.622 mo
(I/O: 10->5)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .428894 .72644 0 ]xsh
483.718 189.094 mo
(*** STATEFUL ***)
[.644012 .643982 .644012 .321991 .716125 .786957 .929932 .786957 .786957 .716125 .929901 .786957 
.322021 .643982 .644012 0 ]xsh
474.012 178.772 mo
476.312 179.876 479.348 181.44 481.28 182.36 cv
481.832 182.636 482.476 183.004 483.212 183.372 cv
@
482.844 183.464 mo
483.764 183.74 li
483.12 183.004 li
cp
@
482.844 183.464 mo
483.764 183.74 li
483.12 183.004 li
f
476.312 195.792 mo
476.312 194.877 474.047 194.136 471.252 194.136 cv
468.457 194.136 466.192 194.877 466.192 195.792 cv
466.192 196.707 468.457 197.448 471.252 197.448 cv
474.047 197.448 476.312 196.707 476.312 195.792 cv
@
476.312 195.792 mo
476.312 194.877 474.047 194.136 471.252 194.136 cv
468.457 194.136 466.192 194.877 466.192 195.792 cv
466.192 196.707 468.457 197.448 471.252 197.448 cv
474.047 197.448 476.312 196.707 476.312 195.792 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
467.156 196.086 mo
(roundrobin\(1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 0 ]xsh
473.552 203.888 mo
473.552 202.16 471.41 200.76 468.768 200.76 cv
466.126 200.76 463.984 202.16 463.984 203.888 cv
463.984 205.615 466.126 207.016 468.768 207.016 cv
471.41 207.016 473.552 205.615 473.552 203.888 cv
@
473.552 203.888 mo
473.552 202.16 471.41 200.76 468.768 200.76 cv
466.126 200.76 463.984 202.16 463.984 203.888 cv
463.984 205.615 466.126 207.016 468.768 207.016 cv
471.41 207.016 473.552 205.615 473.552 203.888 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
466.121 202.71 mo
(UnBitifier)
[.929932 .643982 .8591 .358063 .358063 .358063 .428894 .358063 .571838 0 ]xsh
465.472 204.182 mo
(work=20355)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
466.348 205.654 mo
(I/O: 8->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
470.7 197.448 mo
470.516 198.184 470.24 199.012 469.964 199.84 cv
@
469.688 199.84 mo
469.688 200.76 li
470.148 199.932 li
cp
@
469.688 199.84 mo
469.688 200.76 li
470.148 199.932 li
f
471.252 190.824 mo
471.252 191.652 471.252 192.572 471.252 193.308 cv
@
471.068 193.216 mo
471.252 194.136 li
471.528 193.216 li
cp
@
471.068 193.216 mo
471.252 194.136 li
471.528 193.216 li
f
483.856 189.536 mo
482.936 189.996 482.016 190.456 481.28 190.824 cv
479.532 191.744 476.956 192.94 474.932 194.044 cv
@
474.84 193.86 mo
474.104 194.412 li
475.024 194.228 li
cp
@
474.84 193.86 mo
474.104 194.412 li
475.024 194.228 li
f
465.456 206.188 mo
464.076 207.016 462.512 207.752 461.316 207.752 cv
408.876 209.96 312.92 211.432 280.996 211.892 cv
@
281.088 211.616 mo
280.168 211.892 li
281.088 212.076 li
cp
@
281.088 211.616 mo
280.168 211.892 li
281.088 212.076 li
f
253.488 227.072 mo
253.488 225.344 251.47 223.944 248.98 223.944 cv
246.49 223.944 244.472 225.344 244.472 227.072 cv
244.472 228.799 246.49 230.2 248.98 230.2 cv
251.47 230.2 253.488 228.799 253.488 227.072 cv
@
253.488 227.072 mo
253.488 225.344 251.47 223.944 248.98 223.944 cv
246.49 223.944 244.472 225.344 244.472 227.072 cv
244.472 228.799 246.49 230.2 248.98 230.2 cv
251.47 230.2 253.488 228.799 253.488 227.072 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
247.442 225.894 mo
(Delay)
[.929916 .571854 .358063 .571854 0 ]xsh
246.005 227.366 mo
(work=4968)
[.929916 .643997 .428894 .643997 .726425 .644012 .643997 .643997 0 ]xsh
246.56 228.838 mo
(I/O: 1->1)
[.428894 .358063 .929916 .358063 .322006 .643997 .428894 .726425 0 ]xsh
266 220.172 mo
262.32 221.276 257.168 222.84 254.04 223.944 cv
253.672 224.036 253.212 224.312 252.752 224.496 cv
@
252.844 224.128 mo
252.2 224.864 li
253.12 224.588 li
cp
@
252.844 224.128 mo
252.2 224.864 li
253.12 224.588 li
f
264.16 227.072 mo
264.16 225.344 262.142 223.944 259.652 223.944 cv
257.162 223.944 255.144 225.344 255.144 227.072 cv
255.144 228.799 257.162 230.2 259.652 230.2 cv
262.142 230.2 264.16 228.799 264.16 227.072 cv
@
264.16 227.072 mo
264.16 225.344 262.142 223.944 259.652 223.944 cv
257.162 223.944 255.144 225.344 255.144 227.072 cv
255.144 228.799 257.162 230.2 259.652 230.2 cv
262.142 230.2 264.16 228.799 264.16 227.072 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
258.114 225.894 mo
(Delay)
[.929932 .571838 .358063 .571838 0 ]xsh
256.677 227.366 mo
(work=4968)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
257.232 228.838 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
268.208 220.54 mo
266.736 221.644 264.896 223.116 263.148 224.404 cv
@
263.24 224.036 mo
262.688 224.772 li
263.516 224.404 li
cp
@
263.24 224.036 mo
262.688 224.772 li
263.516 224.404 li
f
274.832 227.072 mo
274.832 225.344 272.814 223.944 270.324 223.944 cv
267.834 223.944 265.816 225.344 265.816 227.072 cv
265.816 228.799 267.834 230.2 270.324 230.2 cv
272.814 230.2 274.832 228.799 274.832 227.072 cv
@
274.832 227.072 mo
274.832 225.344 272.814 223.944 270.324 223.944 cv
267.834 223.944 265.816 225.344 265.816 227.072 cv
265.816 228.799 267.834 230.2 270.324 230.2 cv
272.814 230.2 274.832 228.799 274.832 227.072 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
268.786 225.894 mo
(Delay)
[.929932 .571838 .358063 .571838 0 ]xsh
267.349 227.366 mo
(work=4968)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
267.904 228.838 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
270.324 220.632 mo
270.324 221.276 270.324 222.196 270.324 223.024 cv
@
270.14 223.024 mo
270.324 223.944 li
270.6 223.024 li
cp
@
270.14 223.024 mo
270.324 223.944 li
270.6 223.024 li
f
285.504 227.072 mo
285.504 225.344 283.486 223.944 280.996 223.944 cv
278.506 223.944 276.488 225.344 276.488 227.072 cv
276.488 228.799 278.506 230.2 280.996 230.2 cv
283.486 230.2 285.504 228.799 285.504 227.072 cv
@
285.504 227.072 mo
285.504 225.344 283.486 223.944 280.996 223.944 cv
278.506 223.944 276.488 225.344 276.488 227.072 cv
276.488 228.799 278.506 230.2 280.996 230.2 cv
283.486 230.2 285.504 228.799 285.504 227.072 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
279.458 225.894 mo
(Delay)
[.929932 .571838 .358063 .571838 0 ]xsh
278.021 227.366 mo
(work=4968)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
278.576 228.838 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
272.44 220.54 mo
273.82 221.552 275.568 222.932 277.224 224.22 cv
@
277.132 224.404 mo
277.96 224.772 li
277.408 224.036 li
cp
@
277.132 224.404 mo
277.96 224.772 li
277.408 224.036 li
f
296.176 227.072 mo
296.176 225.344 294.158 223.944 291.668 223.944 cv
289.178 223.944 287.16 225.344 287.16 227.072 cv
287.16 228.799 289.178 230.2 291.668 230.2 cv
294.158 230.2 296.176 228.799 296.176 227.072 cv
@
296.176 227.072 mo
296.176 225.344 294.158 223.944 291.668 223.944 cv
289.178 223.944 287.16 225.344 287.16 227.072 cv
287.16 228.799 289.178 230.2 291.668 230.2 cv
294.158 230.2 296.176 228.799 296.176 227.072 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
290.13 225.894 mo
(Delay)
[.929932 .571838 .358063 .571838 0 ]xsh
288.693 227.366 mo
(work=4968)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
289.248 228.838 mo
(I/O: 1->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
274.648 220.172 mo
278.328 221.276 283.48 222.84 286.608 223.944 cv
286.976 224.036 287.436 224.312 287.896 224.496 cv
@
287.528 224.588 mo
288.448 224.864 li
287.804 224.128 li
cp
@
287.528 224.588 mo
288.448 224.864 li
287.804 224.128 li
f
276.764 235.168 mo
276.764 234.253 273.881 233.512 270.324 233.512 cv
266.767 233.512 263.884 234.253 263.884 235.168 cv
263.884 236.083 266.767 236.824 270.324 236.824 cv
273.881 236.824 276.764 236.083 276.764 235.168 cv
@
276.764 235.168 mo
276.764 234.253 273.881 233.512 270.324 233.512 cv
266.767 233.512 263.884 234.253 263.884 235.168 cv
263.884 236.083 266.767 236.824 270.324 236.824 cv
273.881 236.824 276.764 236.083 276.764 235.168 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
264.779 235.462 mo
(roundrobin\(1,1,1,1,1\))
[.428894 .644012 .643982 .644012 .643982 .428894 .644012 .644012 .358063 .643982 .428894 .644012 
.321991 .644012 .321991 .644012 .321991 .643982 .322021 .643982 0 ]xsh
277.684 243.264 mo
277.684 241.536 274.389 240.136 270.324 240.136 cv
266.259 240.136 262.964 241.536 262.964 243.264 cv
262.964 244.991 266.259 246.392 270.324 246.392 cv
274.389 246.392 277.684 244.991 277.684 243.264 cv
@
277.684 243.264 mo
277.684 241.536 274.389 240.136 270.324 240.136 cv
266.259 240.136 262.964 241.536 262.964 243.264 cv
262.964 244.991 266.259 246.392 270.324 246.392 cv
274.389 246.392 277.684 244.991 277.684 243.264 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
264.493 242.086 mo
(ReedSolomonDecoder)
[.8591 .571838 .571838 .644012 .716125 .644012 .358063 .643982 1.00208 .644012 .643982 .929932 
.571838 .571869 .643982 .644012 .571838 0 ]xsh
265.239 243.558 mo
(work=UNKNOWN)
[.929932 .643982 .428894 .644012 .72641 .929932 .929901 .929932 .929901 .929932 1.21585 0 
]xsh
266.616 245.03 mo
(I/O: 207->187)
[.428894 .358063 .929932 .358063 .321991 .643982 .644012 .644012 .428894 .72641 .644012 .643982 
0 ]xsh
270.324 236.824 mo
270.324 237.468 270.324 238.388 270.324 239.216 cv
@
270.14 239.216 mo
270.324 240.136 li
270.6 239.216 li
cp
@
270.14 239.216 mo
270.324 240.136 li
270.6 239.216 li
f
252.2 229.28 mo
252.844 229.648 253.488 230.016 254.04 230.2 cv
256.984 231.304 261.676 232.684 265.172 233.788 cv
@
264.988 233.972 mo
265.908 233.972 li
265.08 233.512 li
cp
@
264.988 233.972 mo
265.908 233.972 li
265.08 233.512 li
f
262.688 229.372 mo
264.252 230.568 266.092 231.948 267.656 233.144 cv
@
267.38 233.236 mo
268.3 233.604 li
267.656 232.868 li
cp
@
267.38 233.236 mo
268.3 233.604 li
267.656 232.868 li
f
270.324 230.2 mo
270.324 231.028 270.324 231.856 270.324 232.684 cv
@
270.14 232.592 mo
270.324 233.512 li
270.6 232.592 li
cp
@
270.14 232.592 mo
270.324 233.512 li
270.6 232.592 li
f
277.96 229.372 mo
276.396 230.568 274.556 231.948 272.992 233.144 cv
@
272.992 232.868 mo
272.348 233.604 li
273.268 233.236 li
cp
@
272.992 232.868 mo
272.348 233.604 li
273.268 233.236 li
f
288.448 229.28 mo
287.804 229.648 287.16 230.016 286.608 230.2 cv
283.664 231.304 279.064 232.684 275.476 233.788 cv
@
275.568 233.512 mo
274.74 233.972 li
275.66 233.972 li
cp
@
275.568 233.512 mo
274.74 233.972 li
275.66 233.972 li
f
276.212 252.832 mo
276.212 251.104 273.576 249.704 270.324 249.704 cv
267.072 249.704 264.436 251.104 264.436 252.832 cv
264.436 254.559 267.072 255.96 270.324 255.96 cv
273.576 255.96 276.212 254.559 276.212 252.832 cv
@
276.212 252.832 mo
276.212 251.104 273.576 249.704 270.324 249.704 cv
267.072 249.704 264.436 251.104 264.436 252.832 cv
264.436 254.559 267.072 255.96 270.324 255.96 cv
273.576 255.96 276.212 254.559 276.212 252.832 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
265.924 251.654 mo
(IntegerCombiner)
[.428894 .644012 .358063 .571838 .644012 .571838 .428894 .8591 .643982 1.00208 .644012 .358063 
.643982 .571869 0 ]xsh
267.027 253.126 mo
(work=19635)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 .644012 0 ]xsh
267.904 254.598 mo
(I/O: 4->1)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
270.324 246.392 mo
270.324 247.128 270.324 247.956 270.324 248.784 cv
@
270.14 248.784 mo
270.324 249.704 li
270.6 248.784 li
cp
@
270.14 248.784 mo
270.324 249.704 li
270.6 248.784 li
f
276.488 262.4 mo
276.488 260.672 273.728 259.272 270.324 259.272 cv
266.92 259.272 264.16 260.672 264.16 262.4 cv
264.16 264.127 266.92 265.528 270.324 265.528 cv
273.728 265.528 276.488 264.127 276.488 262.4 cv
@
276.488 262.4 mo
276.488 260.672 273.728 259.272 270.324 259.272 cv
266.92 259.272 264.16 260.672 264.16 262.4 cv
264.16 264.127 266.92 265.528 270.324 265.528 cv
273.728 265.528 276.488 264.127 276.488 262.4 cv
1 gry
f
0 gry
LTFDRT+TimesNewRomanPSMT*1 [1.288 0 0 -1.288 0 0 ]msf
265.673 261.222 mo
(DataSegmentSink)
[.929932 .571838 .358063 .571838 .716156 .571838 .644012 1.00204 .571869 .643982 .358063 .716125 
.358063 .644012 0 ]xsh
267.349 262.694 mo
(work=5610)
[.929932 .643982 .428894 .644012 .72641 .644012 .643982 .644012 0 ]xsh
267.904 264.166 mo
(I/O: 1->0)
[.428894 .358063 .929932 .358063 .321991 .643982 .428894 .72644 0 ]xsh
270.324 255.96 mo
270.324 256.696 270.324 257.524 270.324 258.352 cv
@
270.14 258.352 mo
270.324 259.272 li
270.6 258.352 li
cp
@
270.14 258.352 mo
270.324 259.272 li
270.6 258.352 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
true set_gvm
/LTFDRT+TimesNewRomanPSMT*1 uf
/LTFDRT+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
