%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: MP3.pdf
%%Creator: Adobe Acrobat 8.0
%%For: Bill Thies
%%CreationDate: 12/5/2008, 11:09:32 PM
%%BoundingBox: 0 0 469 113
%%HiResBoundingBox: 0 0 469 113
%%CropBox: 0 0 469 113
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1622 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GNU Ghostscript 7.05"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -113 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 113 li
469 113 li
469 0 li
cp
clp
[1 0 0 1 -36 0 ]ct
gsave
35 114 mo
505 114 li
505 0 li
35 0 li
cp
clp
.0613 lw
0 lc
0 lj
1 ml
[] 0 dsh
true sadj
36.4904 112.51 mo
503.719 112.51 li
503.719 .943588 li
36.4904 .943588 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988, 1990, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Times New Roman is a trademark of the Monotype Corporation, registered in the US Patent and Trademark Office and may be registered in certain other jurisdictions.) def
/Weight (Roman) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 77 /M put
dup 80 /P put
def
/UniqueID 44335 def
/FontBBox {-167 -250 1009 878} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 0 662 677 447 461 694 694] def
/OtherBlues [384 384 -216 -213] def
/FamilyBlues [-15 0 662 677 447 461 694 694] def
/FamilyOtherBlues [384 384 -216 -213] def
/StdHW [36] def
/StdVW [81] def
/StemSnapH [36 43] def
/StemSnapV [81 94] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/M <1C60D8A8C9B59F85E7C3D982C036A83A051CFEB65CDD644D44695DA87381
2F9E0DA4474B3DF6D63B3341F86CDE23D0512CA425D085DC5BA255E6B3240439
E201FEC100F452F18CDA5E088317BF79F4C8FC952A839FE77A57A286C006FAF4
6CE1F964CD62165C424C020FEAD96AC86FEFFC256D> |-
/P <1C60D8A8C9B7EF322B10A2A8DE6EF0A6CE60E86B1DF5C68015667A2338DB
07BCF91C9D8DCCB5967A656E7EB6651B3E305A306DA1BB8C1BAEECFC60DC00D8
8AEC56E3DF7455D57CB9BB0CC9A32704D4F0F1C39C5B2EDC70F42754CACE7253
FF5FDAE4B675FFF987E22613E24B8956EFA9C2C5B9AC406D966F459601B2046A
C9E54A3BB37C45EDEB> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/LTFDSH+TimesNewRomanPSMT*1 
[77{/.notdef}rp /M 2{/.notdef}rp /P 175{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
36.9125 1.62999 mo
(MP)
[.762932 0 ]xsh
37.4712 106.625 mo
502.738 106.625 li
502.738 7.07359 li
37.4712 7.07359 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDFB39C8FA0E3107D39E1E26D40368A6A59D36B799EDDCB
A8AF8BCAEA2E296C5BB00979C4073082C4AC62DAAE27F25BE45DFF121DF075F7
3D37111C10DFF7C6BD4BFE8AE73B4FADB84F0E8B5722DEA1CA14F5AFDC440B45
4F635F5576E82C8F45782F1EDE0EC9CA59D48E4C0F81> |-
/S <1C60D8A8C9B7EF320E2EFDBCAC7BC76D0C8C1FC222AFE4F464C56D04CD48
5F140DB725EC46F068943283C9A43A14A852E22E87331165F602FD95AC890BE8
83DAD7F63C31168B480A95AC244C28C8F37F118A399681DB4822661628FBDA87
D99D0367C013E32688035EC31A5C3FC194FEB20C4FCD84A9EB3547C0D5A421A0
1B87DFDA871D7919B7251A9EC84A645CA15425845057F189EC65A90DD4028CC5
B10853B05E6F7AF9E84AC6588CDCE11B6EF766B248A8304E38964E579F6EF2DC
2D4971ED042868564E8E982FE2B2> |-
/a <1C60D8A8C9B77FE294851E8312417598C86A6256F86C70DE2C7AFF06FCE3
4BADEE28F3B8D02D3C60352D19569C8A11355E1235678015637DF6C7E4A05E8E
A8AB948BF076D376030D74D5BF1D25D6B1436CBFF068CFC521B6EF1846E35D0E
2A4D1C4888BBA14114C326082B33961EF18B6F0B661AC7CDF50B0B0D80CC5ED8
71668C27B3C878E43E83D293BA1B1F771221D32DA7404867CEA1760CC79EAA61
6682686BC92138B01A5FF6B55D314BD1AA96EE89C141B8E9EB46C16F1B31BD66
B910EA6BBA> |-
/e <1C60D8A8C9B77FE29496D1FBB47314D6F46DA3EBFEC342F3B983185301EF
B706EB7833A9B3F14CD479AC93E43031BC63CB7FFE55CD73AABA1B6DFA935F49
683C721ECBA275DBC565AC78A07D0C5329E18D2789C058EC6367BBAECDF40AEE> |-
/h <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA64197CEECB76B9E4
D2E9F717E2E21BA6AFBDB9D486017DE1334EE2B8AC7E25B49C380829180892EE
A76E25D726C9DCA303C64F5FE456E4A565D8D0ED565D009BA02A6DD13A835659
5990FC1760FC10BB02F96DEC2D5390B1C4D4059132A392595F028220DA07D2CD
E701448700C9> |-
/i <1C60D8A8C9B854D0F11440006C203BFFD1DEDCDE7CAD1373D75DB7315CFC
49A0833FA9D881419B9BEE01885373804535A66836A5115D3B942001E4A8D676
2EBA1D3CCCC2CED3DAC862D3F0398204E81D1C72BC10727D59A156997C9269F7
F9572E03A90C988E59FECA8B3BEBEE755CF420171B> |-
/l <1C60D8A8C9B854D0F11440006C203A85DCEB221B1066666FE3EA25083329
14AA399D2F81DB0653B503D4FAECFE70883AAAA2B3345C999517D89696069E61
D192EBD1D92DDA82> |-
/n <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA6A1CED287131EA2B
D2E1E6E797441A36EF164B2E98EA0B7A662ADAA0C64D637EBFFAEDEE2D95D0C9
387D6E78EA7DBD0E03769EFADBB9E99820C3CA652E5CB84D6476DEB84D65355B
ED40D74AEE8C38DE38F7ADD1F45E132F9FCFA8357906BA1C9F825F576D022523
4E76> |-
/s <1C60D8A8C9B7361F4A5DC306676AF4C8647FF3053FF45CCDDBEB7E9B9050
12DA1DE9402C8DB245C98EF5B89AF8B307871A82029AB9C9383D498ABA5BCF42
FD3EBA06E16095068AAD2A24F29F66CD7BEDAF75E27B9E98183114BB708CEE9F
70B53D4922DAA331AE3A4B4FD1B5CD24EA574D8FE8D1E66E3ECF87407A13A679
B23887BDCEB1C164DC6CBF6472F4BC61E5FBABA972F7976EEBF3BC4B43DEE327
20F6A1A3C1878ACCA80EBBED76DEBD40C76FFC717243DC8D6CB182005A946D70
F948846138DEF539AD5BE615B04618EEB754F0DAF886F93D007AE786FB00955E
897D78D67615B1FA609D> |-
/t <1C60D8A8C9B854D0DAE0E17091F63D902F15B1C5B2DD1246F40FD3EC3264
448E2BE336EDCDEB1DFC2F9412B18B341EC1F740C5E1DC1152FC3909509AD9AD
D2933ADE9A3C5AD03C26776EECF232> |-
/u <1C60D8A8C9B7A73D96315394C03E2804B8D6B013BEE63C754B7DCD21D17D
EE183DDCCBE94C1E49FD4EEAD58EEB67E527D51D30B7569BBD690F10D18E5949
069889C638179D8480A9808D89F695AD05863E6AF7CC14732F1A0B4D904FA886
0DFB17262B8501BEF73C125F016588> |-
/y <1C60D8A8C9B7A73DDF325AF121518DD24D79A1D6297F2682F9AD5083CE90
6B71FC8BFB529DE7E11E55AF343C688ECAE2F8E1922FBFF6524D1DEA97BD39D9
CE14632F8473959D0898D7B7EF3E2B985A44859DA5885A0B7E1416032223E48B
C8A546760893052D5D557F50BFBB6793E5108395A50448013F59BB2036802753
A16DC97698BA68F4F4EAF1FDEAF39B9DD03FEBA42B0F0E35E3A4C6407754F9F9
648DF8C8F5539FA7CCFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 67 /C put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C 9{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 
13{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h /i 2{/.notdef}rp 
/l /.notdef /n 4{/.notdef}rp /s /t /u 3{/.notdef}rp 
/y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
37.8689 7.75998 mo
(MultiChannelPCMSynthesis)
[.762932 .4291 .238583 .238579 .238579 .572411 .4291 .381031 .4291 .4291 .381027 .238579 
.477158 .572414 .762932 .477161 .4291 .4291 .238579 .4291 .381027 .333832 .238583 0 
]xsh
38.452 106.134 mo
501.757 106.134 li
501.757 8.54478 li
38.452 8.54478 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B81F2C3AB090E7A94305EFD59611ABFA6BAFD07A97745145D9
B0DF5E6D35DFFC117239480D5B4909BCBB653176E0149E687888D5B98137EBEA
64> |-
/r <1C60D8A8C9B81F2C117020CA370F4EDA9CC5786DD9DE9EF42ACF1876A05B
D63AFC335B1B675841319B03439D25E5CD3513D8B1AF7C3213243E231585FDFB
23DF1B8599146D034A4E5D6FF06CCB4811E4D5773B1A3B8F6DC7EFA556C00470
2D769BB83004181BE21F0C2BFBE9C20E97FA9275EFEA6DCC374D4BC4F2DBC112
90AFF811640F86741723DE5B9796381D4326AE431F5D9C5CAED9> |-
/v <1C60D8A8C9B7A73DDA3AE0A055993EE6BE7DFD4A4A2DB6881516C07791ED
230086728F5F7B4242AB79AA3E9EFA40308C16768E728C96C19C447086D3AC82
2F0AB1C43C44A30591856370C72E911DB5FEBBFD365EF7E42462BF4A23A3EEAE
F504CBF5C917EC0A44C5B6D735> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 73 /I put
dup 114 /r put
dup 118 /v put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C 5{/.notdef}rp /I 3{/.notdef}rp /M 2{/.notdef}rp /P 
2{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h 
/i 2{/.notdef}rp /l /.notdef /n 3{/.notdef}rp /r /s 
/t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
38.8639 9.23099 mo
(MultiChannelPCMSynthesisInterval)
[.762932 .4291 .238583 .238579 .238579 .572411 .4291 .381031 .4291 .4291 .381027 .238579 
.477158 .572414 .762932 .477161 .4291 .4291 .238579 .4291 .381027 .333832 .238579 .333836 
.285774 .4291 .238579 .381027 .285774 .4291 .381031 0 ]xsh
39.4328 102.211 mo
270.779 102.211 li
270.779 12.9584 li
39.4328 12.9584 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDFF4D0475F24A0512970A16CFF6BFBD1A1A12D07A62723
BF27DBD01B60ACEC3C9DB4E627348B4F9C96D245E2397B81856FE7B9149C0D88
A0B1C89901A357B578317FC0F49D1050D95CF70B7F7A7C5741B1B644F20C16DB
8F1BD7E6C45546C9302E6AD757CA73E92696A658F8A903A2E6B5FA3BE24637C3
3393411FB0E113E4BDFEBF11B4E90F57471B306273B2241C3C23457DA84CC16B
22781151F6DE159B155116967F7D53FA1DDDDF14084F0631BA1C08300F50E5BA
9DC336D8349BEA3371DCAFDF658781D6> |-
/F <1C60D8A8C9B7EF322B10A2A8DE6CF647A07CB452C54BD470E6C4C389B7AB
8653B88FE6E4626649FABCEAB5DAD30BD9C2A2F1F8512C1A1DC93BDB928A3688
B193ECEDB997255AB4DCBBC4BBB3FF147299B3653B9E76139CB6E91A13A47208
F2688B5C42863D22FFBF8FD8DF09F08A1966F6652461EEB3D18F0F0CB5B8E18D
6016409AA3D413D5FA051FCF9B4DFF0734259E7DCF> |-
/k <1C60D8A8C9B7A73D926FE6D4B51E06A6595F3746ABEED643EB32E31FC5C1
56BE33D279A48C7177D38FEEE25BE39FA8184693C31C3DD98D1AF000E30B25B8
F0029B9D7DAB8132C06DAF7AF8346F39C9E4C7E69A448E350100342A6E22A322
C4DEF85ED9405E1A9FCE65A5B4B5084195D644BBC14B138BCD62C9C4EFF347DE
06C9D1F36BBC04C3531EBEE642B499C247> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 66 /B put
dup 70 /F put
dup 107 /k put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[66{/.notdef}rp /B /C 2{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp 
/M 2{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp 
/e 2{/.notdef}rp /h /i /.notdef /k /l /.notdef 
/n 3{/.notdef}rp /r /s /t /u /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
39.8652 13.645 mo
(FilterBank)
[.477158 .238583 .238579 .238579 .381027 .285774 .572414 .381027 .4291 0 ]xsh
83.8753 59.3012 mo
269.553 59.3012 li
269.553 34.536 li
83.8753 34.536 li
cp
1 gry
@
89.944 54.3972 mo
104.779 54.3972 li
104.779 38.4592 li
89.944 38.4592 li
cp
@
90.9248 53.9068 mo
103.798 53.9068 li
103.798 38.9496 li
90.9248 38.9496 li
cp
@
110.418 54.3972 mo
125.253 54.3972 li
125.253 38.4592 li
110.418 38.4592 li
cp
@
111.399 53.9068 mo
124.272 53.9068 li
124.272 38.9496 li
111.399 38.9496 li
cp
@
130.892 54.3972 mo
145.727 54.3972 li
145.727 38.4592 li
130.892 38.4592 li
cp
@
131.873 53.9068 mo
144.746 53.9068 li
144.746 38.9496 li
131.873 38.9496 li
cp
@
151.367 54.3972 mo
166.202 54.3972 li
166.202 38.4592 li
151.367 38.4592 li
cp
@
152.347 53.9068 mo
165.22 53.9068 li
165.22 38.9496 li
152.347 38.9496 li
cp
@
171.841 54.3972 mo
186.676 54.3972 li
186.676 38.4592 li
171.841 38.4592 li
cp
@
172.822 53.9068 mo
185.695 53.9068 li
185.695 38.9496 li
172.822 38.9496 li
cp
@
192.315 54.3972 mo
207.15 54.3972 li
207.15 38.4592 li
192.315 38.4592 li
cp
@
193.296 53.9068 mo
206.169 53.9068 li
206.169 38.9496 li
193.296 38.9496 li
cp
@
212.789 54.3972 mo
227.624 54.3972 li
227.624 38.4592 li
212.789 38.4592 li
cp
@
213.77 53.9068 mo
226.643 53.9068 li
226.643 38.9496 li
213.77 38.9496 li
cp
@
233.263 54.3972 mo
248.098 54.3972 li
248.098 38.4592 li
233.263 38.4592 li
cp
@
234.244 53.9068 mo
247.117 53.9068 li
247.117 38.9496 li
234.244 38.9496 li
cp
@
253.738 54.3972 mo
268.573 54.3972 li
268.573 38.4592 li
253.738 38.4592 li
cp
@
254.718 53.9068 mo
267.591 53.9068 li
267.591 38.9496 li
254.718 38.9496 li
cp
@
40.4136 101.721 mo
269.799 101.721 li
269.799 59.7916 li
40.4136 59.7916 li
cp
0 gry
@
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
40.8046 60.4781 mo
(PCMSynthesis)
[.477158 .572414 .762932 .477161 .4291 .4291 .238579 .4291 .381027 .333832 .238583 0 
]xsh
41.3944 95.3456 mo
268.817 95.3456 li
268.817 81.3692 li
41.3944 81.3692 li
cp
1 gry
@
269.43 102.211 mo
500.776 102.211 li
500.776 12.9584 li
269.43 12.9584 li
cp
0 gry
@
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
269.863 13.645 mo
(FilterBank)
[.477173 .238556 .238586 .238586 .381012 .285797 .572388 .381042 .429108 0 ]xsh
272.005 59.3012 mo
457.683 59.3012 li
457.683 34.536 li
272.005 34.536 li
cp
1 gry
@
278.074 54.3972 mo
292.909 54.3972 li
292.909 38.4592 li
278.074 38.4592 li
cp
@
279.054 53.9068 mo
291.927 53.9068 li
291.927 38.9496 li
279.054 38.9496 li
cp
@
298.548 54.3972 mo
313.383 54.3972 li
313.383 38.4592 li
298.548 38.4592 li
cp
@
299.529 53.9068 mo
312.402 53.9068 li
312.402 38.9496 li
299.529 38.9496 li
cp
@
319.022 54.3972 mo
333.857 54.3972 li
333.857 38.4592 li
319.022 38.4592 li
cp
@
320.003 53.9068 mo
332.876 53.9068 li
332.876 38.9496 li
320.003 38.9496 li
cp
@
339.496 54.3972 mo
354.331 54.3972 li
354.331 38.4592 li
339.496 38.4592 li
cp
@
340.477 53.9068 mo
353.35 53.9068 li
353.35 38.9496 li
340.477 38.9496 li
cp
@
359.97 54.3972 mo
374.805 54.3972 li
374.805 38.4592 li
359.97 38.4592 li
cp
@
360.951 53.9068 mo
373.824 53.9068 li
373.824 38.9496 li
360.951 38.9496 li
cp
@
380.445 54.3972 mo
395.28 54.3972 li
395.28 38.4592 li
380.445 38.4592 li
cp
@
381.425 53.9068 mo
394.298 53.9068 li
394.298 38.9496 li
381.425 38.9496 li
cp
@
400.919 54.3972 mo
415.754 54.3972 li
415.754 38.4592 li
400.919 38.4592 li
cp
@
401.9 53.9068 mo
414.773 53.9068 li
414.773 38.9496 li
401.9 38.9496 li
cp
@
421.393 54.3972 mo
436.228 54.3972 li
436.228 38.4592 li
421.393 38.4592 li
cp
@
422.374 53.9068 mo
435.247 53.9068 li
435.247 38.9496 li
422.374 38.9496 li
cp
@
441.867 54.3972 mo
456.702 54.3972 li
456.702 38.4592 li
441.867 38.4592 li
cp
@
442.848 53.9068 mo
455.721 53.9068 li
455.721 38.9496 li
442.848 38.9496 li
cp
@
270.411 101.721 mo
499.796 101.721 li
499.796 59.7916 li
270.411 59.7916 li
cp
0 gry
@
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
270.802 60.4781 mo
(PCMSynthesis)
[.477173 .572388 .762939 .477173 .429077 .429108 .238586 .429108 .381012 .333832 .238586 0 
]xsh
271.392 95.3456 mo
498.815 95.3456 li
498.815 81.3692 li
271.392 81.3692 li
cp
1 gry
@
275.131 4.49899 mo
275.131 3.34799 273.841 2.41499 272.25 2.41499 cv
270.659 2.41499 269.369 3.34799 269.369 4.49899 cv
269.369 5.64999 270.659 6.58299 272.25 6.58299 cv
273.841 6.58299 275.131 5.64999 275.131 4.49899 cv
0 gry
@
275.131 4.49899 mo
275.131 3.34799 273.841 2.41499 272.25 2.41499 cv
270.659 2.41499 269.369 3.34799 269.369 4.49899 cv
269.369 5.64999 270.659 6.58299 272.25 6.58299 cv
273.841 6.58299 275.131 5.64999 275.131 4.49899 cv
/1 
[/DeviceRGB] /CSA add_res
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
/hyphen <1C60D8A8C9B81F2C7E673161CF52871F3F524B3A1BAC5ADA04F510A
476> |-
/slash <1C60D8A8C9B854D088EAD778FBC18D924BA165ED7CB0EB5700C3B61B
62ACF96E65C0BF> |-
/zero <1C60D8A8C9B7A73DE18CEEF4E48C6DD01FBACAA39C3CF5567D0E5C788
075445C95D6A3B6E540D57A95C2149688073A3E100742CAF1210D033AAEFAE6F
8B444349FD5782CA146EC98165CB56922017B727DFF8905922E07> |-
/one <1C60D8A8C9B7A73DB94F41466C876FCA9AF55081C1C70D8EC4AB3C9249
D700CD0FF27B669AF104FB3406E5DFE3F3B0AB0CAE2CF1998D0DA43C395891C4
7CD031071E50A5> |-
/colon <1C60D8A8C9B854D0E389293C42E83787A5BE0CE9B5745E40D1B32D07
F826004562E0981DB26F3EF2E2B5CD932C33C49C462F9673F306A9A8ECFFE93D
9FCE8BF4190AA3F1208FCCE1> |-
/equal <1C60D8A8C9B7E7C1C7C30B941AA047473EBF9655DE246137CE0666A3
DD27E47997A26319529C8C4FF5C38D266AE0> |-
/greater <1C60D8A8C9B7E7C1C7C30B940B3D62C7A181F0EBB0723CBB160375
71F050C44CCE59A85ACB3DB6BF9B03383F> |-
/O <1C60D8A8C9B6079F258D65BC2331B95A484F6FB0C89DE7976C286549CD33
A4D7316575EC038BAA234ED3FB5DEACB25E52512A7CBD428E6DBD2EB830622E8
8A44262525560702DCFFFB3478FE1A2C6113548B23F661EC01296D75C1A7D5FE
B75CD951FFE5A9> |-
/R <1C60D8A8C9B64EDFF4D0475F241567109AA60E358A72CDD6748BBE527383
3D9930EA16405C9FA084F4E606B7DF07A2CCABEF78658BA281F5D25760E71232
16C34541C223BEC48612BD7C0052F7AD27E210716125E9B30EDB889188D65976
1E4423BF9E66EB5CCCE83D82A2DB04554982E2E899847CA739A4B92152682375
567D18A66EABD5068029F8FB7424BADB87039D0F6B1530> |-
/d <1C60D8A8C9B7A73DE3E5E50523E6C3667B38E45A4C51E0FEC84C813AB373
8B83F58EEDF7211177C6639AD2CCECEBC1915AB857B5701E72700D0D163B5F2F
58E5A8B520D7ED7F9880D10C1A6AAC1DEF76C68CB623039F59365031342DE694
26167CDA4201402D972AF8016480B0CF8CBDDE4940ABCEFD4C2D5F2FE77DC410
2439C361CA6330A182E6FD> |-
/o <1C60D8A8C9B7A73DE3E5E50AD058CB1758CCEC8536B108DD66A8D296857C
B3303D78514A78D06E85FDA9E8085F8D9525195AE96992EAA1E95B40679F85C3
FC4165030DF121E13968768CFE641E50E297E68778A63ACC6DD3> |-
/w <1C60D8A8C9B6079F6CBBA5F366E947F933D60DF598D919B1B7650559D736
37DABDC1EE55BCEC17305D792CEB494E24BD853631335C74FFCA113C4D914522
6940D65B0FA636B78B1332922431C88D4DDF20C0A3C1C91D0C3F0EC21F67A6EF
80D94D8DD0BC64DA8FAF76B12BBC90C7B441833497F4FAAF7AFFFE22453504D1
C6C3D3F89787D8CE910F64CD7AC81F424C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 58 /colon put
dup 61 /equal put
dup 62 /greater put
dup 79 /O put
dup 82 /R put
dup 100 /d put
dup 111 /o put
dup 119 /w put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash /zero /one 
8{/.notdef}rp /colon 2{/.notdef}rp /equal /greater 3{/.notdef}rp /B /C 
2{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp /M /.notdef /O 
/P /.notdef /R /S 13{/.notdef}rp /a 2{/.notdef}rp /d 
/e 2{/.notdef}rp /h /i /.notdef /k /l /.notdef 
/n /o 2{/.notdef}rp /r /s /t /u /v 
/w /.notdef /y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
270.367 3.71399 mo
(FileReader)
[.477173 .238556 .238586 .381042 .572388 .381042 .381012 .429108 .381042 0 ]xsh
270.912 4.69478 mo
(work=0)
[.619598 .429108 .285767 .429108 .484009 0 ]xsh
270.637 5.67557 mo
(I/O: 0->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
276.48 11.119 mo
276.48 10.51 274.586 10.016 272.25 10.016 cv
269.914 10.016 268.02 10.51 268.02 11.119 cv
268.02 11.729 269.914 12.223 272.25 12.223 cv
274.586 12.223 276.48 11.729 276.48 11.119 cv
@
276.48 11.119 mo
276.48 10.51 274.586 10.016 272.25 10.016 cv
269.914 10.016 268.02 10.51 268.02 11.119 cv
268.02 11.729 269.914 12.223 272.25 12.223 cv
274.586 12.223 276.48 11.729 276.48 11.119 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C7961C5101279ABC36EDE6472BD125007B977
158C4E9FC1695861D4B758EA0B2DA40929DA2764CDB06C7B17969E83F9B9F9DB
69731300937B8C87AE99> |-
/parenright <1C60D8A8C9B81F2C3AE115477765EA9A623E840D3901B96042A
533934EFD3574B5C656B3B3F7387587FE0D191D87B3E12F0EE70351D07A784B9
DEAB1C75708B7B3217116> |-
/comma <1C60D8A8C9B8707CDCE153BE174BF3415C26A42365D336CF0B48FBEC
E2CCCE829E5297D863F3AA9AC7B62E5A6EDE06B2E79A00ED16CF91E8C6953AD2
9D6E96EF745E730ABC2B82BE60EB1DBDD5981EF3D78237B91F6DA501> |-
/six <1C60D8A8C9B7A73DF81BACD811429F931042E1295F1D2320E46DE79DF7
47FCAABFFD92F045A475E54E15C8E93ECB3BD59C8545C0EF45BF22429615FC68
5C033A02F070B2C6D7D737838C1853D297AC8915086E73952A7A9847D6F588AB
17767CC39CB62607242BC1B7BFF5295CEB6C03755CD9B53DA2> |-
/nine <1C60D8A8C9B7A73DFCCE6C978678EE12F2E62BD7D7FA244984C1E12F1
0EB0B8765182EBCE165DFB850DB8B03381969B80BB1CA53FFB24B5DE34530C8C
83A80415FE19B7C2B551E605143CF6469C8BCE336F9A5E5012DD932CF553D663
37837328637F50B90FF9AE8815D00BBA7EFCE6D508C5B6EBE2D> |-
/b <1C60D8A8C9B7A73D9AFACE39B0C8DF9EB6083858E657E6E95D2C42AE2914
EB3C7C6FCB5E9F471C2055D213C552ACA7BC04F55BA26F3B77D8DFB74AC132BE
41DB935437CE3B007C16B65D849E2E6D1C61659F2699A17D9AEEDDD0EBC23EB8
70A7377D2AC9DB56D0296131C3A8254097E85D96> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 54 /six put
dup 57 /nine put
dup 98 /b put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one 4{/.notdef}rp /six 2{/.notdef}rp /nine 
/colon 2{/.notdef}rp /equal /greater 3{/.notdef}rp /B /C 2{/.notdef}rp 
/F 2{/.notdef}rp /I 3{/.notdef}rp /M /.notdef /O /P 
/.notdef /R /S 13{/.notdef}rp /a /b /.notdef /d 
/e 2{/.notdef}rp /h /i /.notdef /k /l /.notdef 
/n /o 2{/.notdef}rp /r /s /t /u /v 
/w /.notdef /y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
268.663 11.316 mo
(roundrobin\(609,609\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.429077 .429108 .214539 .429108 .429108 .429108 0 ]xsh
272.25 6.58299 mo
272.25 7.564 272.25 8.606 272.25 9.46399 cv
@
272.128 9.403 mo
272.25 10.016 li
272.434 9.403 li
cp
@
272.128 9.403 mo
272.25 10.016 li
272.434 9.403 li
f
226.153 16.514 mo
226.153 15.363 224.588 14.43 222.658 14.43 cv
220.729 14.43 219.164 15.363 219.164 16.514 cv
219.164 17.665 220.729 18.598 222.658 18.598 cv
224.588 18.598 226.153 17.665 226.153 16.514 cv
@
226.153 16.514 mo
226.153 15.363 224.588 14.43 222.658 14.43 cv
220.729 14.43 219.164 15.363 219.164 16.514 cv
219.164 17.665 220.729 18.598 222.658 18.598 cv
224.588 18.598 226.153 17.665 226.153 16.514 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DB9C4155FCF739F7C1974D5BF41CC3E8700100AE610
E49DF6B4C276649A8B3177B0F76FADB15EC55BD4BBD1CDF8C5F886738FFDBD44
2FF8A0594A170A20B9C3E13444FE4DC986DA862896B80FFA135FA164A257> |-
/seven <1C60D8A8C9B7A73DFE313D538903D2D688A80497AF19F58251B88346
588CB5A8F94928A032E7AE04ED687068FF5EFE684F47125CC227938E> |-
/eight <1C60D8A8C9B7A73D9EB159A3CFECEE26FAC12AD4B6691842B4C84783
E84E1D8CD272AEC54014C937C15B810E403549328E3DC44B6A66E9E0AE5509A1
20FFE6F694340EC43D35C59CD7D1B2F14C1F1D5BA576A10F77E962817750FC0E
DC62627EE0E94BCE030A10C59143A015250A384C09B6A65F8572DF3FCBF68CF8
0D23E4E88D0691BD2178810DDABD5F40D8018F795B8CB5A52DDDD05F80E9A2BC
CDF3A5E14C701FBADF0447A7AE0E47FA8F86216AC25155BFF3569B19382CA905
7B18009FE630A2D7CEFDC3A4A3> |-
/A <1C60D8A8C9B6079F005CDFC8A94B75FD7D89F5577E741BA5E9223B5FB59E
3315C336CDEC6F323D18A178B38DCEDA9B451B37165385283368F94E5EC5086C
A620D2549B18425DA74331F96252E5D5358EE44D33B708D9B8822975F755BF6A
D18C81AA5BF9B47D39D0AFBBC3A6521D0B18D90963534584D1092363898607EF
C07B44A235786C96> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 50 /two put
dup 55 /seven put
dup 56 /eight put
dup 65 /A put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two 3{/.notdef}rp /six /seven 
/eight /nine /colon 2{/.notdef}rp /equal /greater 2{/.notdef}rp /A 
/B /C 2{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp /M 
/.notdef /O /P /.notdef /R /S 13{/.notdef}rp /a 
/b /.notdef /d /e 2{/.notdef}rp /h /i /.notdef 
/k /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /u /v /w /.notdef /y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
221.109 15.729 mo
(Antialias)
[.619614 .429092 .238586 .238571 .381027 .238586 .238571 .381027 0 ]xsh
220.676 16.7098 mo
(work=7216)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
220.188 17.6906 mo
(I/O: 609->608)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .429092 .285782 .484024 .429092 .429108 
0 ]xsh
268.327 11.549 mo
259.071 12.591 235.961 15.043 226.643 16.085 cv
@
226.704 15.901 mo
226.091 16.146 li
226.704 16.207 li
cp
@
226.704 15.901 mo
226.091 16.146 li
226.704 16.207 li
f
279.422 16.514 mo
279.422 15.363 277.858 14.43 275.928 14.43 cv
273.998 14.43 272.434 15.363 272.434 16.514 cv
272.434 17.665 273.998 18.598 275.928 18.598 cv
277.858 18.598 279.422 17.665 279.422 16.514 cv
@
279.422 16.514 mo
279.422 15.363 277.858 14.43 275.928 14.43 cv
273.998 14.43 272.434 15.363 272.434 16.514 cv
272.434 17.665 273.998 18.598 275.928 18.598 cv
277.858 18.598 279.422 17.665 279.422 16.514 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
274.379 15.729 mo
(Antialias)
[.619598 .429108 .238586 .238586 .381012 .238586 .238586 .381012 0 ]xsh
273.947 16.7098 mo
(work=7216)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
273.458 17.6906 mo
(I/O: 609->608)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .429108 .285767 .484009 .429108 .429108 
0 ]xsh
272.986 12.223 mo
273.354 12.775 273.844 13.388 274.273 14.001 cv
@
274.15 14.062 mo
274.58 14.552 li
274.396 13.939 li
cp
@
274.15 14.062 mo
274.58 14.552 li
274.396 13.939 li
f
273.415 104.541 mo
273.415 103.931 271.905 103.437 270.043 103.437 cv
268.181 103.437 266.672 103.931 266.672 104.541 cv
266.672 105.15 268.181 105.644 270.043 105.644 cv
271.905 105.644 273.415 105.15 273.415 104.541 cv
@
273.415 104.541 mo
273.415 103.931 271.905 103.437 270.043 103.437 cv
268.181 103.437 266.672 103.931 266.672 104.541 cv
266.672 105.15 268.181 105.644 270.043 105.644 cv
271.905 105.644 273.415 105.15 273.415 104.541 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
267.314 104.737 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
273.047 109.935 mo
273.047 108.784 271.702 107.851 270.043 107.851 cv
268.384 107.851 267.04 108.784 267.04 109.935 cv
267.04 111.086 268.384 112.019 270.043 112.019 cv
271.702 112.019 273.047 111.086 273.047 109.935 cv
@
273.047 109.935 mo
273.047 108.784 271.702 107.851 270.043 107.851 cv
268.384 107.851 267.04 108.784 267.04 109.935 cv
267.04 111.086 268.384 112.019 270.043 112.019 cv
271.702 112.019 273.047 111.086 273.047 109.935 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/underscore <1C60D8A8C9B7A73DCDBEB64DA5D4EE31FFCBE2EC06B4C4F1354
CB100A813> |-
/p <1C60D8A8C9B7A73D9AFACE39AE6BAA6E09D7322029CE296F526808097535
692942DF193E08360A1A27EB6A08251F7D53D3FA96D22918185F2823E13833F6
44411211FB9E60C91D24768368C1EE71DFEA1AF8285D596D61CE8A067C14BC2E
E1974A4DF14D782DBEDB8D2CE5673BB9634CC4945A7FA5A5E1B87E0F2D94F438
C21548DAE429B68406206429A87E1B462DA7A9D2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 95 /underscore put
dup 112 /p put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two 3{/.notdef}rp /six /seven 
/eight /nine /colon 2{/.notdef}rp /equal /greater 2{/.notdef}rp /A 
/B /C 2{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp /M 
/.notdef /O /P /.notdef /R /S 11{/.notdef}rp /underscore 
/.notdef /a /b /.notdef /d /e 2{/.notdef}rp /h 
/i /.notdef /k /l /.notdef /n /o /p 
/.notdef /r /s /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
268.279 109.15 mo
(output_int)
[.429108 .429077 .238586 .429108 .429108 .238586 .429077 .238586 .429108 0 ]xsh
268.061 110.131 mo
(work=6912)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
268.431 111.112 mo
(I/O: 1->0)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
270.043 105.644 mo
270.043 106.073 270.043 106.686 270.043 107.238 cv
@
269.921 107.238 mo
270.043 107.851 li
270.227 107.238 li
cp
@
269.921 107.238 mo
270.043 107.851 li
270.227 107.238 li
f
201.02 22.889 mo
201.02 21.738 199.592 20.805 197.832 20.805 cv
196.072 20.805 194.644 21.738 194.644 22.889 cv
194.644 24.04 196.072 24.973 197.832 24.973 cv
199.592 24.973 201.02 24.04 201.02 22.889 cv
@
201.02 22.889 mo
201.02 21.738 199.592 20.805 197.832 20.805 cv
196.072 20.805 194.644 21.738 194.644 22.889 cv
194.644 24.04 196.072 24.973 197.832 24.973 cv
199.592 24.973 201.02 24.04 201.02 22.889 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73DB9E68392B0D8A76464A51F2E94D7CC8D0C2C4EA9
EB677CBC38A50658519E8BF18CD893FCF8B1BA3E22E132B8EDB4B7CD483A2AC4
23E82DF2F3816B8AE8EA5F180D3F5DFF2BF284FCE4CE5C4E107DDB61A9BE179C
50061EE6040417B0DF341D85D92A63653C2A28BA649E4CD9966C4B081E30F323
54693AC79886604480856D93C0D7CC0DE6962663CC1F198BBFA4> |-
/four <1C60D8A8C9B7A73DB99E8D3796659F80CD8CFB6F4891658B64B2996E4
565B417E6680D9494DD50CBC7F026F985B68E97EBCD932CA0004F37BA5FD28FA
5EB6F0DC8CCF44A75B207DA88B4B0D8C53ACF90F9CAE1B04C7036C5BF682DB0A
BF0221167> |-
/D <1C60D8A8C9B6079F62AF7EE2124AC712AE5D5419E262A0C00C6163DFBCB2
A6FA65DDDD5062250DB8BBFB46EB35827750F9FCEE696526B20FE9266474B179
350945BBDAF7180FAB04D619EB38198FC722361E0B3B5E50F9017F19C7BDCABB
285F506A04FE32C63936689B1F9C81923B03440D57336303C59B59E8D3C0659D
33> |-
/T <1C60D8A8C9B7D8BE16B2E353E3300378A32828826C127DE3D6A3769F5542
8119DC48F4B555CFAC557278838F3EC6C5F7B64F6B44DFEFCBC8AF8174185170
E165701BB15CF1CB88629A978EF6D86FB8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 51 /three put
dup 52 /four put
dup 68 /D put
dup 84 /T put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two /three /four /.notdef 
/six /seven /eight /nine /colon 2{/.notdef}rp /equal /greater 
2{/.notdef}rp /A /B /C /D /.notdef /F 2{/.notdef}rp 
/I 3{/.notdef}rp /M /.notdef /O /P /.notdef /R 
/S /T 10{/.notdef}rp /underscore /.notdef /a /b /.notdef 
/d /e 2{/.notdef}rp /h /i /.notdef /k /l 
/.notdef /n /o /p /.notdef /r /s /t 
/u /v /w /.notdef /y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
196.449 22.104 mo
(IMDCT)
[.285767 .762939 .619614 .572403 0 ]xsh
195.635 23.0848 mo
(work=26464)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 .429108 0 ]xsh
195.79 24.0656 mo
(I/O: 19->36)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 .429108 0 ]xsh
219.41 17.311 mo
214.689 18.537 206.046 20.805 201.265 22.031 cv
@
201.387 21.847 mo
200.836 22.153 li
201.449 22.153 li
cp
@
201.387 21.847 mo
200.836 22.153 li
201.449 22.153 li
f
192.07 30 mo
192.07 28.476 189.106 27.241 185.449 27.241 cv
181.793 27.241 178.829 28.476 178.829 30 cv
178.829 31.523 181.793 32.758 185.449 32.758 cv
189.106 32.758 192.07 31.523 192.07 30 cv
@
192.07 30 mo
192.07 28.476 189.106 27.241 185.449 27.241 cv
181.793 27.241 178.829 28.476 178.829 30 cv
178.829 31.523 181.793 32.758 185.449 32.758 cv
189.106 32.758 192.07 31.523 192.07 30 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/asterisk <1C60D8A8C9B7A73DB9A0737247D562C61165E8E636EE73CF26D64
F3C6728422CEE27A3F00DC7152CA3773F07EA559F0959F48B519FDEC6150629C
166D2B4FBEF2A598C45B9530847243905C1F3F150F0DD5877800507BF2B97A2E
4942336B61DB2054C6AB2AE38E3AEA192A16823CC1BE212834012F90F71E96A0
46E312361C7B9D33CA838F52208FFCDFB3B3A9B2A9728D3AFAB94EEE3598CA05
C0D62AFFA345B041C6B4E56F6827F181D11C4BECD0C9CCA67> |-
/E <1C60D8A8C9B7D8BE1621F7F8DAEB9FA9CBAFC8F4F4D756F2191C830A0E4A
58F87E3DDE67D49AF36DDF5F1FB2D74CAA0A1A0C249C8C349E149A4722F92BF7
61EFA3C2F9EC864F14F3A3AC121B867A3642166A4B07211381D27468A1D61050
1454C0DD1325D701AB4ADD917E16E61514B3C2631A525AEC590FB4C52AA73BF6
506DADDCC92C07368DF00A34F77E6ED1C2061C6913B4C24C30A64720E240E09F
9DD8F5EF76F17E9EEAE569D41B7D8D946B46BFFC> |-
/H <1C60D8A8C9B6079F62AF7EE2120CD8667DDD4FA2DBFCE5E63E48B84464C1
802A269C64DF6D959EDF25835FFE2A562C206570E6F5B714FC53C2D5C307E1C8
A7B7F4078E600204C204D1FAC19490C22F80872356DF60239B84CD61D63A7DAA
1B4B4595C75AFC0D0514E00256BFA54FA5E3DE43161DB123A8A356631F> |-
/K <1C60D8A8C9B6079F62AF7EE261D2819ED7974217E7034289FA7C1BABF100
C6A5480EF2F67F33525B9F0C3A7EBEA8703E8C35FFE54D3010A9809D5E12442C
409B269A7D4346FFD3D0C882E0638FE5876FB72290B12BADDE73C28ABC60097D
5F47A0B45D92F7FD41DF8475D961E4F5A95EF6558D45744A11DE71603FC94A1B
038775E2BC960C01D2B930F2> |-
/m <1C60D8A8C9B6FF86DEBE529995F26ADC252ABAF4F8ABCE39F6B951A24C86
82F3B72A552C5D46A333AAEC49746F27474921C947B29E9EEE21EF479E8AC4CB
A64B9B4BF4B54D7069EE8C71930A689A0AC30AA5DB406CB2F2DF67D1DFA36762
A8298043AAD8738E3C2E6D8E87DCF89210EA6A7696675667850CACB8BD85BF1A
9C23A6EB480778B459116760FD79DE8BA673C0A52BBAEAA003DFFA86FA6EC61F
B9955126552099FD6C946BD155266FCC648BAFF24A5063CAAF26> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 42 /asterisk put
dup 69 /E put
dup 72 /H put
dup 75 /K put
dup 109 /m put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/.notdef /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /B /C /D /E /F 
/.notdef /H /I /.notdef /K /.notdef /M /.notdef 
/O /P /.notdef /R /S /T 10{/.notdef}rp /underscore 
/.notdef /a /b /.notdef /d /e 2{/.notdef}rp /h 
/i /.notdef /k /l /m /n /o /p 
/.notdef /r /s /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
183.352 28.725 mo
(Anonymous)
[.619614 .429092 .429108 .429092 .429108 .667679 .429092 .429108 0 ]xsh
183.253 29.7058 mo
(work=12096)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 .429108 0 ]xsh
183.408 30.6866 mo
(I/O: 36->18)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 .429108 0 ]xsh
180.063 31.6674 mo
(*** PEEKS 1134 AHEAD ***)
[.429092 .429108 .429092 .214554 .477158 .524353 .524353 .619614 .477158 .214554 .429092 .429108 
.429092 .429108 .214554 .619598 .619614 .524353 .619598 .619614 .214554 .429092 .429108 0 
]xsh
195.441 24.299 mo
193.847 25.218 191.702 26.444 189.802 27.487 cv
@
189.802 27.303 mo
189.373 27.732 li
189.986 27.548 li
cp
@
189.802 27.303 mo
189.373 27.732 li
189.986 27.548 li
f
187.779 36.13 mo
187.779 35.52 183.964 35.026 179.258 35.026 cv
174.552 35.026 170.737 35.52 170.737 36.13 cv
170.737 36.739 174.552 37.233 179.258 37.233 cv
183.964 37.233 187.779 36.739 187.779 36.13 cv
@
187.779 36.13 mo
187.779 35.52 183.964 35.026 179.258 35.026 cv
174.552 35.026 170.737 35.52 170.737 36.13 cv
170.737 36.739 174.552 37.233 179.258 37.233 cv
183.964 37.233 187.779 36.739 187.779 36.13 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
171.38 36.326 mo
(roundrobin\(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 .214554 .429108 .214539 .429108 .214554 .429092 .214554 .429092 .214554 .429092 
.214554 .429108 .214554 .429092 .214554 .429092 .214554 .429108 .214539 .429108 .214539 .429108 
.214554 .429092 .214554 .429092 .214554 .429108 .214554 .429092 .214554 .429092 0 ]xsh
182.813 32.574 mo
182.078 33.31 181.342 34.046 180.729 34.659 cv
@
180.668 34.475 mo
180.361 35.026 li
180.913 34.72 li
cp
@
180.668 34.475 mo
180.361 35.026 li
180.913 34.72 li
f
89.8827 45.938 mo
89.8827 44.787 88.6477 43.854 87.1242 43.854 cv
85.6007 43.854 84.3657 44.787 84.3657 45.938 cv
84.3657 47.089 85.6007 48.022 87.1242 48.022 cv
88.6477 48.022 89.8827 47.089 89.8827 45.938 cv
@
89.8827 45.938 mo
89.8827 44.787 88.6477 43.854 87.1242 43.854 cv
85.6007 43.854 84.3657 44.787 84.3657 45.938 cv
84.3657 47.089 85.6007 48.022 87.1242 48.022 cv
88.6477 48.022 89.8827 47.089 89.8827 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
85.7893 45.153 mo
(Identity)
[.285774 .4291 .381027 .4291 .238579 .238579 .238579 0 ]xsh
85.3568 46.1338 mo
(work=192)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 0 ]xsh
85.5117 47.1146 mo
(I/O: 1->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .285774 .484016 0 ]xsh
170.737 36.252 mo
150.876 36.498 102.204 37.233 90.4957 38.459 cv
88.9019 38.643 87.9824 41.34 87.5533 43.425 cv
@
87.4307 43.241 mo
87.4307 43.854 li
87.7372 43.302 li
cp
@
87.4307 43.241 mo
87.4307 43.854 li
87.7372 43.302 li
f
103.307 40.543 mo
103.307 39.934 101.798 39.44 99.9359 39.44 cv
98.0739 39.44 96.5644 39.934 96.5644 40.543 cv
96.5644 41.153 98.0739 41.647 99.9359 41.647 cv
101.798 41.647 103.307 41.153 103.307 40.543 cv
@
103.307 40.543 mo
103.307 39.934 101.798 39.44 99.9359 39.44 cv
98.0739 39.44 96.5644 39.934 96.5644 40.543 cv
96.5644 41.153 98.0739 41.647 99.9359 41.647 cv
101.798 41.647 103.307 41.153 103.307 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
97.207 40.74 mo
(roundrobin\(1,1\))
[.285774 .4291 .4291 .4291 .4291 .285774 .4291 .4291 .238579 .4291 .285774 .4291 
.214554 .4291 0 ]xsh
170.921 36.375 mo
153.267 36.804 112.931 37.908 103.123 38.459 cv
102.633 38.521 102.02 38.827 101.468 39.256 cv
@
101.53 39.011 mo
101.101 39.501 li
101.714 39.317 li
cp
@
101.53 39.011 mo
101.101 39.501 li
101.714 39.317 li
f
110.357 45.938 mo
110.357 44.787 109.122 43.854 107.598 43.854 cv
106.075 43.854 104.84 44.787 104.84 45.938 cv
104.84 47.089 106.075 48.022 107.598 48.022 cv
109.122 48.022 110.357 47.089 110.357 45.938 cv
@
110.357 45.938 mo
110.357 44.787 109.122 43.854 107.598 43.854 cv
106.075 43.854 104.84 44.787 104.84 45.938 cv
104.84 47.089 106.075 48.022 107.598 48.022 cv
109.122 48.022 110.357 47.089 110.357 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
106.264 45.153 mo
(Identity)
[.285774 .4291 .381027 .4291 .238579 .238579 .238579 0 ]xsh
105.831 46.1338 mo
(work=192)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 0 ]xsh
105.986 47.1146 mo
(I/O: 1->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .285774 .484016 0 ]xsh
170.983 36.436 mo
152.838 37.049 110.97 38.459 110.97 38.459 cv
109.376 38.704 108.457 41.402 108.027 43.425 cv
@
107.905 43.241 mo
107.905 43.854 li
108.211 43.302 li
cp
@
107.905 43.241 mo
107.905 43.854 li
108.211 43.302 li
f
123.782 40.543 mo
123.782 39.934 122.272 39.44 120.41 39.44 cv
118.548 39.44 117.039 39.934 117.039 40.543 cv
117.039 41.153 118.548 41.647 120.41 41.647 cv
122.272 41.647 123.782 41.153 123.782 40.543 cv
@
123.782 40.543 mo
123.782 39.934 122.272 39.44 120.41 39.44 cv
118.548 39.44 117.039 39.934 117.039 40.543 cv
117.039 41.153 118.548 41.647 120.41 41.647 cv
122.272 41.647 123.782 41.153 123.782 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
117.681 40.74 mo
(roundrobin\(1,1\))
[.285774 .4291 .4291 .4291 .4291 .285774 .4291 .4291 .238579 .4291 .285774 .4291 
.214554 .4291 0 ]xsh
171.105 36.436 mo
156.516 37.049 127.092 38.214 123.598 38.459 cv
123.107 38.521 122.494 38.827 121.943 39.256 cv
@
122.004 39.011 mo
121.575 39.501 li
122.188 39.317 li
cp
@
122.004 39.011 mo
121.575 39.501 li
122.188 39.317 li
f
130.831 45.938 mo
130.831 44.787 129.596 43.854 128.073 43.854 cv
126.549 43.854 125.314 44.787 125.314 45.938 cv
125.314 47.089 126.549 48.022 128.073 48.022 cv
129.596 48.022 130.831 47.089 130.831 45.938 cv
@
130.831 45.938 mo
130.831 44.787 129.596 43.854 128.073 43.854 cv
126.549 43.854 125.314 44.787 125.314 45.938 cv
125.314 47.089 126.549 48.022 128.073 48.022 cv
129.596 48.022 130.831 47.089 130.831 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
126.738 45.153 mo
(Identity)
[.285774 .4291 .381027 .4291 .238586 .238571 .238586 0 ]xsh
126.305 46.1338 mo
(work=192)
[.619606 .4291 .285774 .4291 .484024 .429092 .429108 0 ]xsh
126.46 47.1146 mo
(I/O: 1->1)
[.285774 .238579 .619606 .238579 .214554 .429092 .285782 .484024 0 ]xsh
170.86 36.314 mo
157.68 36.498 144.378 36.007 131.444 38.459 cv
129.912 38.827 128.992 41.402 128.563 43.425 cv
@
128.44 43.241 mo
128.44 43.854 li
128.747 43.302 li
cp
@
128.44 43.241 mo
128.44 43.854 li
128.747 43.302 li
f
144.256 40.543 mo
144.256 39.934 142.746 39.44 140.884 39.44 cv
139.022 39.44 137.513 39.934 137.513 40.543 cv
137.513 41.153 139.022 41.647 140.884 41.647 cv
142.746 41.647 144.256 41.153 144.256 40.543 cv
@
144.256 40.543 mo
144.256 39.934 142.746 39.44 140.884 39.44 cv
139.022 39.44 137.513 39.934 137.513 40.543 cv
137.513 41.153 139.022 41.647 140.884 41.647 cv
142.746 41.647 144.256 41.153 144.256 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
138.155 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
171.289 36.498 mo
163.381 36.927 151.428 37.662 144.072 38.459 cv
143.581 38.521 142.968 38.827 142.478 39.256 cv
@
142.539 39.011 mo
142.11 39.501 li
142.723 39.317 li
cp
@
142.539 39.011 mo
142.11 39.501 li
142.723 39.317 li
f
151.305 45.938 mo
151.305 44.787 150.07 43.854 148.547 43.854 cv
147.023 43.854 145.788 44.787 145.788 45.938 cv
145.788 47.089 147.023 48.022 148.547 48.022 cv
150.07 48.022 151.305 47.089 151.305 45.938 cv
@
151.305 45.938 mo
151.305 44.787 150.07 43.854 148.547 43.854 cv
147.023 43.854 145.788 44.787 145.788 45.938 cv
145.788 47.089 147.023 48.022 148.547 48.022 cv
150.07 48.022 151.305 47.089 151.305 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
147.212 45.153 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
146.779 46.1338 mo
(work=192)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
146.934 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
171.105 36.436 mo
164.607 36.559 158.11 36.498 151.918 38.459 cv
150.447 38.95 149.528 41.463 149.037 43.425 cv
@
148.915 43.241 mo
148.915 43.854 li
149.221 43.302 li
cp
@
148.915 43.241 mo
148.915 43.854 li
149.221 43.302 li
f
164.73 40.543 mo
164.73 39.934 163.22 39.44 161.358 39.44 cv
159.496 39.44 157.987 39.934 157.987 40.543 cv
157.987 41.153 159.496 41.647 161.358 41.647 cv
163.22 41.647 164.73 41.153 164.73 40.543 cv
@
164.73 40.543 mo
164.73 39.934 163.22 39.44 161.358 39.44 cv
159.496 39.44 157.987 39.934 157.987 40.543 cv
157.987 41.153 159.496 41.647 161.358 41.647 cv
163.22 41.647 164.73 41.153 164.73 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
158.63 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
173.312 36.927 mo
170.308 37.356 166.875 37.908 164.546 38.459 cv
164.117 38.582 163.504 38.888 163.014 39.256 cv
@
163.075 39.011 mo
162.646 39.501 li
163.259 39.317 li
cp
@
163.075 39.011 mo
162.646 39.501 li
163.259 39.317 li
f
171.779 45.938 mo
171.779 44.787 170.544 43.854 169.021 43.854 cv
167.498 43.854 166.262 44.787 166.262 45.938 cv
166.262 47.089 167.498 48.022 169.021 48.022 cv
170.544 48.022 171.779 47.089 171.779 45.938 cv
@
171.779 45.938 mo
171.779 44.787 170.544 43.854 169.021 43.854 cv
167.498 43.854 166.262 44.787 166.262 45.938 cv
166.262 47.089 167.498 48.022 169.021 48.022 cv
170.544 48.022 171.779 47.089 171.779 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
167.686 45.153 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
167.253 46.1338 mo
(work=192)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
167.408 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
175.151 37.111 mo
174.109 37.356 173.128 37.724 172.392 38.459 cv
171.35 39.501 170.431 41.647 169.818 43.363 cv
@
169.695 43.302 mo
169.634 43.915 li
170.002 43.363 li
cp
@
169.695 43.302 mo
169.634 43.915 li
170.002 43.363 li
f
182.63 40.543 mo
182.63 39.934 181.12 39.44 179.258 39.44 cv
177.396 39.44 175.887 39.934 175.887 40.543 cv
175.887 41.153 177.396 41.647 179.258 41.647 cv
181.12 41.647 182.63 41.153 182.63 40.543 cv
@
182.63 40.543 mo
182.63 39.934 181.12 39.44 179.258 39.44 cv
177.396 39.44 175.887 39.934 175.887 40.543 cv
175.887 41.153 177.396 41.647 179.258 41.647 cv
181.12 41.647 182.63 41.153 182.63 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
176.529 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
179.258 37.233 mo
179.258 37.724 179.258 38.275 179.258 38.827 cv
@
179.135 38.827 mo
179.258 39.44 li
179.442 38.827 li
cp
@
179.135 38.827 mo
179.258 39.44 li
179.442 38.827 li
f
192.254 52.313 mo
192.254 51.162 191.019 50.2288 189.495 50.2288 cv
187.972 50.2288 186.737 51.162 186.737 52.313 cv
186.737 53.4641 187.972 54.3972 189.495 54.3972 cv
191.019 54.3972 192.254 53.4641 192.254 52.313 cv
@
192.254 52.313 mo
192.254 51.162 191.019 50.2288 189.495 50.2288 cv
187.972 50.2288 186.737 51.162 186.737 52.313 cv
186.737 53.4641 187.972 54.3972 189.495 54.3972 cv
191.019 54.3972 192.254 53.4641 192.254 52.313 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
188.16 51.5284 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
187.727 52.5092 mo
(work=192)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
187.882 53.49 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
184.039 37.049 mo
184.898 37.295 185.633 37.724 186.124 38.459 cv
187.901 41.218 188.821 46.612 189.189 49.7997 cv
@
189.005 49.6158 mo
189.25 50.2288 li
189.311 49.6158 li
cp
@
189.005 49.6158 mo
189.25 50.2288 li
189.311 49.6158 li
f
200.529 40.543 mo
200.529 39.934 199.02 39.44 197.158 39.44 cv
195.296 39.44 193.786 39.934 193.786 40.543 cv
193.786 41.153 195.296 41.647 197.158 41.647 cv
199.02 41.647 200.529 41.153 200.529 40.543 cv
@
200.529 40.543 mo
200.529 39.934 199.02 39.44 197.158 39.44 cv
195.296 39.44 193.786 39.934 193.786 40.543 cv
193.786 41.153 195.296 41.647 197.158 41.647 cv
199.02 41.647 200.529 41.153 200.529 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
194.429 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
185.265 36.927 mo
188.208 37.356 191.702 37.908 193.97 38.459 cv
194.399 38.521 194.951 38.827 195.38 39.134 cv
@
195.319 39.317 mo
195.932 39.501 li
195.503 39.011 li
cp
@
195.319 39.317 mo
195.932 39.501 li
195.503 39.011 li
f
212.728 52.313 mo
212.728 51.162 211.493 50.2288 209.969 50.2288 cv
208.446 50.2288 207.211 51.162 207.211 52.313 cv
207.211 53.4641 208.446 54.3972 209.969 54.3972 cv
211.493 54.3972 212.728 53.4641 212.728 52.313 cv
@
212.728 52.313 mo
212.728 51.162 211.493 50.2288 209.969 50.2288 cv
208.446 50.2288 207.211 51.162 207.211 52.313 cv
207.211 53.4641 208.446 54.3972 209.969 54.3972 cv
211.493 54.3972 212.728 53.4641 212.728 52.313 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
208.634 51.5284 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
208.201 52.5092 mo
(work=192)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
208.356 53.49 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
187.411 36.436 mo
194.644 36.682 203.901 37.049 206.598 38.459 cv
209.602 40.053 210.031 46.183 210.031 49.7384 cv
@
209.908 49.6158 mo
210.031 50.2288 li
210.215 49.6158 li
cp
@
209.908 49.6158 mo
210.031 50.2288 li
210.215 49.6158 li
f
221.003 40.543 mo
221.003 39.934 219.494 39.44 217.632 39.44 cv
215.77 39.44 214.26 39.934 214.26 40.543 cv
214.26 41.153 215.77 41.647 217.632 41.647 cv
219.494 41.647 221.003 41.153 221.003 40.543 cv
@
221.003 40.543 mo
221.003 39.934 219.494 39.44 217.632 39.44 cv
215.77 39.44 214.26 39.934 214.26 40.543 cv
214.26 41.153 215.77 41.647 217.632 41.647 cv
219.494 41.647 221.003 41.153 221.003 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
214.903 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
187.227 36.498 mo
195.135 36.927 207.15 37.662 214.444 38.459 cv
214.873 38.521 215.425 38.766 215.915 39.134 cv
@
215.854 39.256 mo
216.406 39.501 li
216.038 39.011 li
cp
@
215.854 39.256 mo
216.406 39.501 li
216.038 39.011 li
f
233.202 52.313 mo
233.202 51.162 231.967 50.2288 230.444 50.2288 cv
228.92 50.2288 227.685 51.162 227.685 52.313 cv
227.685 53.4641 228.92 54.3972 230.444 54.3972 cv
231.967 54.3972 233.202 53.4641 233.202 52.313 cv
@
233.202 52.313 mo
233.202 51.162 231.967 50.2288 230.444 50.2288 cv
228.92 50.2288 227.685 51.162 227.685 52.313 cv
227.685 53.4641 228.92 54.3972 230.444 54.3972 cv
231.967 54.3972 233.202 53.4641 233.202 52.313 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
229.109 51.5284 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
228.676 52.5092 mo
(work=192)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
228.831 53.49 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
187.411 36.436 mo
200.713 36.988 225.662 38.03 227.072 38.459 cv
230.321 39.501 230.689 45.999 230.566 49.7384 cv
@
230.444 49.6158 mo
230.566 50.2288 li
230.75 49.6158 li
cp
@
230.444 49.6158 mo
230.566 50.2288 li
230.75 49.6158 li
f
241.478 40.543 mo
241.478 39.934 239.968 39.44 238.106 39.44 cv
236.244 39.44 234.735 39.934 234.735 40.543 cv
234.735 41.153 236.244 41.647 238.106 41.647 cv
239.968 41.647 241.478 41.153 241.478 40.543 cv
@
241.478 40.543 mo
241.478 39.934 239.968 39.44 238.106 39.44 cv
236.244 39.44 234.735 39.934 234.735 40.543 cv
234.735 41.153 236.244 41.647 238.106 41.647 cv
239.968 41.647 241.478 41.153 241.478 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
235.377 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
187.472 36.436 mo
201.265 36.927 228.114 37.969 234.918 38.459 cv
235.348 38.521 235.899 38.766 236.451 39.134 cv
@
236.39 39.256 mo
236.941 39.501 li
236.574 39.011 li
cp
@
236.39 39.256 mo
236.941 39.501 li
236.574 39.011 li
f
253.676 52.313 mo
253.676 51.162 252.441 50.2288 250.918 50.2288 cv
249.394 50.2288 248.159 51.162 248.159 52.313 cv
248.159 53.4641 249.394 54.3972 250.918 54.3972 cv
252.441 54.3972 253.676 53.4641 253.676 52.313 cv
@
253.676 52.313 mo
253.676 51.162 252.441 50.2288 250.918 50.2288 cv
249.394 50.2288 248.159 51.162 248.159 52.313 cv
248.159 53.4641 249.394 54.3972 250.918 54.3972 cv
252.441 54.3972 253.676 53.4641 253.676 52.313 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
249.583 51.5284 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
249.15 52.5092 mo
(work=192)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
249.305 53.49 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
187.534 36.436 mo
205.678 37.049 247.546 38.459 247.546 38.459 cv
250.856 39.195 251.163 45.938 251.04 49.7384 cv
@
250.918 49.6158 mo
251.04 50.2288 li
251.224 49.6158 li
cp
@
250.918 49.6158 mo
251.04 50.2288 li
251.224 49.6158 li
f
261.952 40.543 mo
261.952 39.934 260.442 39.44 258.58 39.44 cv
256.718 39.44 255.209 39.934 255.209 40.543 cv
255.209 41.153 256.718 41.647 258.58 41.647 cv
260.442 41.647 261.952 41.153 261.952 40.543 cv
@
261.952 40.543 mo
261.952 39.934 260.442 39.44 258.58 39.44 cv
256.718 39.44 255.209 39.934 255.209 40.543 cv
255.209 41.153 256.718 41.647 258.58 41.647 cv
260.442 41.647 261.952 41.153 261.952 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
255.851 40.74 mo
(roundrobin\(1,1\))
[.285782 .429077 .429108 .429108 .429108 .285767 .429108 .429077 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
187.595 36.375 mo
205.249 36.804 245.585 37.908 255.393 38.459 cv
255.822 38.521 256.373 38.766 256.925 39.134 cv
@
256.864 39.256 mo
257.416 39.501 li
257.048 39.011 li
cp
@
256.864 39.256 mo
257.416 39.501 li
257.048 39.011 li
f
181.404 57.7074 mo
181.404 57.098 175.86 56.604 169.021 56.604 cv
162.182 56.604 156.638 57.098 156.638 57.7074 cv
156.638 58.3168 162.182 58.8108 169.021 58.8108 cv
175.86 58.8108 181.404 58.3168 181.404 57.7074 cv
@
181.404 57.7074 mo
181.404 57.098 175.86 56.604 169.021 56.604 cv
162.182 56.604 156.638 57.098 156.638 57.7074 cv
156.638 58.3168 162.182 58.8108 169.021 58.8108 cv
175.86 58.8108 181.404 58.3168 181.404 57.7074 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
157.282 57.9036 mo
(roundrobin\(32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.429108 .214539 .429108 .429092 .214554 .429108 .429092 .214554 .429092 .429108 .214554 .429092 
.429092 .214554 .429108 .429092 .214554 .429092 .429108 .214554 .429092 .429108 .214539 .429108 
.429108 .214539 .429108 .429092 .214554 .429108 .429092 .214554 .429092 .429108 .214554 .429092 
.429092 .214554 .429108 .429092 .214554 .429092 .429108 .214554 .429092 .429108 .214539 .429108 
.429108 .214539 .429108 .429092 0 ]xsh
171.105 63.347 mo
171.105 62.196 168.937 61.2628 166.262 61.2628 cv
163.588 61.2628 161.42 62.196 161.42 63.347 cv
161.42 64.4981 163.588 65.4312 166.262 65.4312 cv
168.937 65.4312 171.105 64.4981 171.105 63.347 cv
@
171.105 63.347 mo
171.105 62.196 168.937 61.2628 166.262 61.2628 cv
163.588 61.2628 161.42 62.196 161.42 63.347 cv
161.42 64.4981 163.588 65.4312 166.262 65.4312 cv
168.937 65.4312 171.105 64.4981 171.105 63.347 cv
.843 .18 .157 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B6079F005CDC6370483696E1EAFC944BD4E06D86DBD18EB735
2F45C381C0DF5B906978D128771DD089E21DCCBC0592B3A6BE45DFF941B3D9AF
82C0E5BBEE832081C600F8D424981C94A7921155A8C74A96B13AD2AF06E82571
B4060A57A3D45E0E99876FCE9C38AE3E4A7F8C> |-
/c <1C60D8A8C9B77FE2948016809A16C1383D80AA8513D781288589A82DC94A
5DA0D421DEC176AEE608ECA472235D24D269E725C25D06B3582797B60EEBA4C4
46D10FC22341077B09EDB4E12CA0359E24628B46BB6E10727940> |-
/x <1C60D8A8C9B7A73DD670D8CCCBFBC4E258D7CAA3ED17D069C025C1A2420A
81D4B3EAD7110946DAC3BA40217DDD18B672D1C19269266B39D87F9C1DDA90BD
8FC71EBFE3B2169703196A9FC02F9EA267A90B94DB1FAA5C105A1B22ABB76205
ADA50D456170C13F6F28FC77F3978776E97B76A3DEF1976915B787070DC57673
F3C0FA2B4E9DEFEF7147D4269144499ACAFBAFD930E1A038534DF3D883A96117
05279F3EC76B84BD5055C0FF3A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 86 /V put
dup 99 /c put
dup 120 /x put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/.notdef /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /B /C /D /E /F 
/.notdef /H /I /.notdef /K /.notdef /M /.notdef 
/O /P /.notdef /R /S /T /.notdef /V 
8{/.notdef}rp /underscore /.notdef /a /b /c /d /e 
2{/.notdef}rp /h /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /x /y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
162.425 62.5624 mo
(MatrixVectorMultiply)
[.762939 .381027 .238571 .285782 .238571 .429108 .619598 .381027 .381027 .238586 .429092 .285782 
.762939 .429092 .238586 .238571 .238586 .429092 .238586 0 ]xsh
163.852 63.5432 mo
(work=414144)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 .429108 .429092 0 ]xsh
164.221 64.524 mo
(I/O: 32->64)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 .429108 0 ]xsh
168.469 58.8108 mo
168.163 59.4238 167.795 60.2207 167.427 60.9563 cv
@
167.366 60.7111 mo
167.243 61.3241 li
167.672 60.8337 li
cp
@
167.366 60.7111 mo
167.243 61.3241 li
167.672 60.8337 li
f
87.3081 48.022 mo
87.6759 50.4127 88.4728 54.0907 90.4957 54.3972 cv
108.395 56.9718 138.923 57.5848 156.209 57.7074 cv
@
156.025 57.83 mo
156.638 57.7074 li
156.025 57.5235 li
cp
@
156.025 57.83 mo
156.638 57.7074 li
156.025 57.5235 li
f
96.687 45.938 mo
96.687 44.787 95.5068 43.854 94.0511 43.854 cv
92.5953 43.854 91.4152 44.787 91.4152 45.938 cv
91.4152 47.089 92.5953 48.022 94.0511 48.022 cv
95.5068 48.022 96.687 47.089 96.687 45.938 cv
@
96.687 45.938 mo
96.687 44.787 95.5068 43.854 94.0511 43.854 cv
92.5953 43.854 91.4152 44.787 91.4152 45.938 cv
91.4152 47.089 92.5953 48.022 94.0511 48.022 cv
95.5068 48.022 96.687 47.089 96.687 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
92.7162 45.153 mo
(Identity)
[.285774 .4291 .381027 .4291 .238579 .238579 .238579 0 ]xsh
92.4982 46.1338 mo
(work=96)
[.619606 .4291 .285774 .4291 .484024 .4291 0 ]xsh
92.4386 47.1146 mo
(I/O: 1->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .285774 .484016 0 ]xsh
98.7712 41.586 mo
98.0356 42.26 97.1161 43.179 96.1966 43.915 cv
@
96.074 43.792 mo
95.7675 44.344 li
96.3192 44.038 li
cp
@
96.074 43.792 mo
95.7675 44.344 li
96.3192 44.038 li
f
103.307 45.938 mo
103.307 44.787 102.072 43.854 100.549 43.854 cv
99.0254 43.854 97.7904 44.787 97.7904 45.938 cv
97.7904 47.089 99.0254 48.022 100.549 48.022 cv
102.072 48.022 103.307 47.089 103.307 45.938 cv
@
103.307 45.938 mo
103.307 44.787 102.072 43.854 100.549 43.854 cv
99.0254 43.854 97.7904 44.787 97.7904 45.938 cv
97.7904 47.089 99.0254 48.022 100.549 48.022 cv
102.072 48.022 103.307 47.089 103.307 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
99.2861 45.153 mo
(Inverse)
[.285774 .4291 .4291 .381027 .285774 .333832 0 ]xsh
98.7815 46.1338 mo
(work=128)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 0 ]xsh
98.9364 47.1146 mo
(I/O: 1->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .285774 .484016 0 ]xsh
100.058 41.647 mo
100.12 42.137 100.181 42.812 100.242 43.425 cv
@
100.058 43.241 mo
100.304 43.854 li
100.365 43.241 li
cp
@
100.058 43.241 mo
100.304 43.854 li
100.365 43.241 li
f
103.307 52.313 mo
103.307 51.7036 101.798 51.2096 99.9359 51.2096 cv
98.0739 51.2096 96.5644 51.7036 96.5644 52.313 cv
96.5644 52.9224 98.0739 53.4164 99.9359 53.4164 cv
101.798 53.4164 103.307 52.9224 103.307 52.313 cv
@
103.307 52.313 mo
103.307 51.7036 101.798 51.2096 99.9359 51.2096 cv
98.0739 51.2096 96.5644 51.7036 96.5644 52.313 cv
96.5644 52.9224 98.0739 53.4164 99.9359 53.4164 cv
101.798 53.4164 103.307 52.9224 103.307 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
97.207 52.5092 mo
(roundrobin\(1,1\))
[.285774 .4291 .4291 .4291 .4291 .285774 .4291 .4291 .238579 .4291 .285774 .4291 
.214554 .4291 0 ]xsh
101.101 53.3551 mo
101.714 53.8455 102.51 54.3972 103.123 54.3972 cv
117.835 55.5619 142.478 56.6653 157.129 57.2783 cv
@
157.067 57.4009 mo
157.68 57.2783 li
157.067 57.0944 li
cp
@
157.067 57.4009 mo
157.68 57.2783 li
157.067 57.0944 li
f
95.5836 47.654 mo
96.5644 48.635 97.7291 49.9223 98.5873 50.9031 cv
@
98.4034 50.9644 mo
98.9551 51.2709 li
98.6486 50.7192 li
cp
@
98.4034 50.9644 mo
98.9551 51.2709 li
98.6486 50.7192 li
f
100.365 48.022 mo
100.242 48.88 100.181 49.7997 100.12 50.6579 cv
@
99.9972 50.5966 mo
100.058 51.2096 li
100.304 50.5966 li
cp
@
99.9972 50.5966 mo
100.058 51.2096 li
100.304 50.5966 li
f
107.844 48.022 mo
108.15 50.4127 109.008 54.0294 110.97 54.3972 cv
114.28 55.0715 141.436 56.3588 157.435 57.1557 cv
@
157.435 57.2783 mo
158.048 57.217 li
157.435 57.0331 li
cp
@
157.435 57.2783 mo
158.048 57.217 li
157.435 57.0331 li
f
117.161 45.938 mo
117.161 44.787 115.981 43.854 114.525 43.854 cv
113.07 43.854 111.889 44.787 111.889 45.938 cv
111.889 47.089 113.07 48.022 114.525 48.022 cv
115.981 48.022 117.161 47.089 117.161 45.938 cv
@
117.161 45.938 mo
117.161 44.787 115.981 43.854 114.525 43.854 cv
113.07 43.854 111.889 44.787 111.889 45.938 cv
111.889 47.089 113.07 48.022 114.525 48.022 cv
115.981 48.022 117.161 47.089 117.161 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
113.19 45.153 mo
(Identity)
[.285774 .4291 .381027 .4291 .238579 .238579 .238579 0 ]xsh
112.972 46.1338 mo
(work=96)
[.619606 .4291 .285774 .4291 .484024 .4291 0 ]xsh
112.912 47.1146 mo
(I/O: 1->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .285774 .484016 0 ]xsh
119.245 41.586 mo
118.51 42.26 117.59 43.179 116.671 43.915 cv
@
116.548 43.792 mo
116.242 44.344 li
116.793 44.038 li
cp
@
116.548 43.792 mo
116.242 44.344 li
116.793 44.038 li
f
123.782 45.938 mo
123.782 44.787 122.547 43.854 121.023 43.854 cv
119.5 43.854 118.265 44.787 118.265 45.938 cv
118.265 47.089 119.5 48.022 121.023 48.022 cv
122.547 48.022 123.782 47.089 123.782 45.938 cv
@
123.782 45.938 mo
123.782 44.787 122.547 43.854 121.023 43.854 cv
119.5 43.854 118.265 44.787 118.265 45.938 cv
118.265 47.089 119.5 48.022 121.023 48.022 cv
122.547 48.022 123.782 47.089 123.782 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
119.76 45.153 mo
(Inverse)
[.285774 .4291 .4291 .381027 .285774 .333832 0 ]xsh
119.255 46.1338 mo
(work=128)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 0 ]xsh
119.41 47.1146 mo
(I/O: 1->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .285774 .484016 0 ]xsh
120.533 41.647 mo
120.594 42.137 120.655 42.812 120.717 43.425 cv
@
120.533 43.241 mo
120.778 43.854 li
120.839 43.241 li
cp
@
120.533 43.241 mo
120.778 43.854 li
120.839 43.241 li
f
123.782 52.313 mo
123.782 51.7036 122.272 51.2096 120.41 51.2096 cv
118.548 51.2096 117.039 51.7036 117.039 52.313 cv
117.039 52.9224 118.548 53.4164 120.41 53.4164 cv
122.272 53.4164 123.782 52.9224 123.782 52.313 cv
@
123.782 52.313 mo
123.782 51.7036 122.272 51.2096 120.41 51.2096 cv
118.548 51.2096 117.039 51.7036 117.039 52.313 cv
117.039 52.9224 118.548 53.4164 120.41 53.4164 cv
122.272 53.4164 123.782 52.9224 123.782 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
117.681 52.5092 mo
(roundrobin\(1,1\))
[.285774 .4291 .4291 .4291 .4291 .285774 .4291 .4291 .238579 .4291 .285774 .4291 
.214554 .4291 0 ]xsh
121.575 53.3551 mo
122.249 53.8455 122.985 54.3359 123.598 54.3972 cv
132.854 55.4393 147.75 56.4201 157.987 57.0331 cv
@
157.987 57.1557 mo
158.6 57.0944 li
157.987 56.9105 li
cp
@
157.987 57.1557 mo
158.6 57.0944 li
157.987 56.9105 li
f
116.058 47.654 mo
117.039 48.635 118.203 49.9223 119.061 50.9031 cv
@
118.878 50.9644 mo
119.429 51.2709 li
119.123 50.7192 li
cp
@
118.878 50.9644 mo
119.429 51.2709 li
119.123 50.7192 li
f
120.839 48.022 mo
120.717 48.88 120.655 49.7997 120.594 50.6579 cv
@
120.471 50.5966 mo
120.533 51.2096 li
120.778 50.5966 li
cp
@
120.471 50.5966 mo
120.533 51.2096 li
120.778 50.5966 li
f
128.318 48.022 mo
128.686 50.3514 129.544 53.8455 131.444 54.3972 cv
133.406 55.0102 148.302 56.1749 158.784 56.9718 cv
@
158.784 57.0944 mo
159.397 57.0331 li
158.784 56.8492 li
cp
@
158.784 57.0944 mo
159.397 57.0331 li
158.784 56.8492 li
f
137.635 45.938 mo
137.635 44.787 136.455 43.854 134.999 43.854 cv
133.544 43.854 132.364 44.787 132.364 45.938 cv
132.364 47.089 133.544 48.022 134.999 48.022 cv
136.455 48.022 137.635 47.089 137.635 45.938 cv
@
137.635 45.938 mo
137.635 44.787 136.455 43.854 134.999 43.854 cv
133.544 43.854 132.364 44.787 132.364 45.938 cv
132.364 47.089 133.544 48.022 134.999 48.022 cv
136.455 48.022 137.635 47.089 137.635 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
133.665 45.153 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
133.447 46.1338 mo
(work=96)
[.619614 .429092 .285782 .429092 .484024 .429092 0 ]xsh
133.387 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
139.72 41.586 mo
138.984 42.26 138.064 43.179 137.145 43.915 cv
@
137.022 43.792 mo
136.716 44.344 li
137.268 44.038 li
cp
@
137.022 43.792 mo
136.716 44.344 li
137.268 44.038 li
f
144.256 45.938 mo
144.256 44.787 143.021 43.854 141.497 43.854 cv
139.974 43.854 138.739 44.787 138.739 45.938 cv
138.739 47.089 139.974 48.022 141.497 48.022 cv
143.021 48.022 144.256 47.089 144.256 45.938 cv
@
144.256 45.938 mo
144.256 44.787 143.021 43.854 141.497 43.854 cv
139.974 43.854 138.739 44.787 138.739 45.938 cv
138.739 47.089 139.974 48.022 141.497 48.022 cv
143.021 48.022 144.256 47.089 144.256 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
140.234 45.153 mo
(Inverse)
[.285767 .429108 .429092 .381042 .285767 .333832 0 ]xsh
139.729 46.1338 mo
(work=128)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
139.884 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
141.007 41.647 mo
141.068 42.137 141.129 42.812 141.191 43.425 cv
@
141.007 43.241 mo
141.252 43.854 li
141.313 43.241 li
cp
@
141.007 43.241 mo
141.252 43.854 li
141.313 43.241 li
f
144.256 52.313 mo
144.256 51.7036 142.746 51.2096 140.884 51.2096 cv
139.022 51.2096 137.513 51.7036 137.513 52.313 cv
137.513 52.9224 139.022 53.4164 140.884 53.4164 cv
142.746 53.4164 144.256 52.9224 144.256 52.313 cv
@
144.256 52.313 mo
144.256 51.7036 142.746 51.2096 140.884 51.2096 cv
139.022 51.2096 137.513 51.7036 137.513 52.313 cv
137.513 52.9224 139.022 53.4164 140.884 53.4164 cv
142.746 53.4164 144.256 52.9224 144.256 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
138.155 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
142.11 53.3551 mo
142.723 53.8455 143.459 54.3359 144.072 54.3972 cv
148.547 55.2554 155.412 56.1136 160.807 56.7879 cv
@
160.684 56.9105 mo
161.297 56.8492 li
160.684 56.604 li
cp
@
160.684 56.9105 mo
161.297 56.8492 li
160.684 56.604 li
f
136.532 47.654 mo
137.513 48.635 138.677 49.9223 139.536 50.9031 cv
@
139.352 50.9644 mo
139.903 51.2709 li
139.597 50.7192 li
cp
@
139.352 50.9644 mo
139.903 51.2709 li
139.597 50.7192 li
f
141.313 48.022 mo
141.191 48.88 141.129 49.7997 141.068 50.6579 cv
@
140.946 50.5966 mo
141.007 51.2096 li
141.252 50.5966 li
cp
@
140.946 50.5966 mo
141.007 51.2096 li
141.252 50.5966 li
f
148.915 48.022 mo
149.344 50.2288 150.263 53.4777 151.918 54.3972 cv
152.654 54.8263 158.171 55.8684 162.768 56.6653 cv
@
162.584 56.7879 mo
163.197 56.7266 li
162.584 56.4814 li
cp
@
162.584 56.7879 mo
163.197 56.7266 li
162.584 56.4814 li
f
158.11 45.938 mo
158.11 44.787 156.929 43.854 155.474 43.854 cv
154.018 43.854 152.838 44.787 152.838 45.938 cv
152.838 47.089 154.018 48.022 155.474 48.022 cv
156.929 48.022 158.11 47.089 158.11 45.938 cv
@
158.11 45.938 mo
158.11 44.787 156.929 43.854 155.474 43.854 cv
154.018 43.854 152.838 44.787 152.838 45.938 cv
152.838 47.089 154.018 48.022 155.474 48.022 cv
156.929 48.022 158.11 47.089 158.11 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
154.139 45.153 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
153.921 46.1338 mo
(work=96)
[.619614 .429092 .285782 .429092 .484024 .429092 0 ]xsh
153.861 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
160.194 41.586 mo
159.458 42.26 158.539 43.179 157.619 43.915 cv
@
157.497 43.792 mo
157.19 44.344 li
157.742 44.038 li
cp
@
157.497 43.792 mo
157.19 44.344 li
157.742 44.038 li
f
164.73 45.938 mo
164.73 44.787 163.495 43.854 161.971 43.854 cv
160.448 43.854 159.213 44.787 159.213 45.938 cv
159.213 47.089 160.448 48.022 161.971 48.022 cv
163.495 48.022 164.73 47.089 164.73 45.938 cv
@
164.73 45.938 mo
164.73 44.787 163.495 43.854 161.971 43.854 cv
160.448 43.854 159.213 44.787 159.213 45.938 cv
159.213 47.089 160.448 48.022 161.971 48.022 cv
163.495 48.022 164.73 47.089 164.73 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
160.709 45.153 mo
(Inverse)
[.285767 .429108 .429092 .381042 .285767 .333832 0 ]xsh
160.204 46.1338 mo
(work=128)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
160.359 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
161.481 41.647 mo
161.542 42.137 161.604 42.812 161.665 43.425 cv
@
161.481 43.241 mo
161.726 43.854 li
161.788 43.241 li
cp
@
161.481 43.241 mo
161.726 43.854 li
161.788 43.241 li
f
164.73 52.313 mo
164.73 51.7036 163.22 51.2096 161.358 51.2096 cv
159.496 51.2096 157.987 51.7036 157.987 52.313 cv
157.987 52.9224 159.496 53.4164 161.358 53.4164 cv
163.22 53.4164 164.73 52.9224 164.73 52.313 cv
@
164.73 52.313 mo
164.73 51.7036 163.22 51.2096 161.358 51.2096 cv
159.496 51.2096 157.987 51.7036 157.987 52.313 cv
157.987 52.9224 159.496 53.4164 161.358 53.4164 cv
163.22 53.4164 164.73 52.9224 164.73 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
158.63 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
162.768 53.2938 mo
163.994 54.152 165.649 55.3167 166.998 56.2975 cv
@
166.814 56.3588 mo
167.427 56.604 li
166.998 56.1136 li
cp
@
166.814 56.3588 mo
167.427 56.604 li
166.998 56.1136 li
f
157.006 47.654 mo
157.987 48.635 159.152 49.9223 160.01 50.9031 cv
@
159.826 50.9644 mo
160.378 51.2709 li
160.071 50.7192 li
cp
@
159.826 50.9644 mo
160.378 51.2709 li
160.071 50.7192 li
f
161.788 48.022 mo
161.665 48.88 161.604 49.7997 161.542 50.6579 cv
@
161.42 50.5966 mo
161.481 51.2096 li
161.726 50.5966 li
cp
@
161.42 50.5966 mo
161.481 51.2096 li
161.726 50.5966 li
f
169.021 48.022 mo
169.021 50.2901 169.021 53.8455 169.021 55.9297 cv
@
168.898 55.991 mo
169.021 56.604 li
169.205 55.991 li
cp
@
168.898 55.991 mo
169.021 56.604 li
169.205 55.991 li
f
178.584 45.938 mo
178.584 44.787 177.404 43.854 175.948 43.854 cv
174.492 43.854 173.312 44.787 173.312 45.938 cv
173.312 47.089 174.492 48.022 175.948 48.022 cv
177.404 48.022 178.584 47.089 178.584 45.938 cv
@
178.584 45.938 mo
178.584 44.787 177.404 43.854 175.948 43.854 cv
174.492 43.854 173.312 44.787 173.312 45.938 cv
173.312 47.089 174.492 48.022 175.948 48.022 cv
177.404 48.022 178.584 47.089 178.584 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
174.613 45.153 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
174.395 46.1338 mo
(work=96)
[.619614 .429092 .285782 .429092 .484024 .429092 0 ]xsh
174.335 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
178.584 41.647 mo
178.277 42.199 177.848 42.873 177.419 43.486 cv
@
177.296 43.425 mo
177.113 44.038 li
177.542 43.547 li
cp
@
177.296 43.425 mo
177.113 44.038 li
177.542 43.547 li
f
185.204 45.938 mo
185.204 44.787 183.969 43.854 182.446 43.854 cv
180.922 43.854 179.687 44.787 179.687 45.938 cv
179.687 47.089 180.922 48.022 182.446 48.022 cv
183.969 48.022 185.204 47.089 185.204 45.938 cv
@
185.204 45.938 mo
185.204 44.787 183.969 43.854 182.446 43.854 cv
180.922 43.854 179.687 44.787 179.687 45.938 cv
179.687 47.089 180.922 48.022 182.446 48.022 cv
183.969 48.022 185.204 47.089 185.204 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
181.183 45.153 mo
(Inverse)
[.285767 .429108 .429092 .381042 .285767 .333832 0 ]xsh
180.678 46.1338 mo
(work=128)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
180.833 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
179.932 41.647 mo
180.239 42.199 180.668 42.873 181.036 43.486 cv
@
180.913 43.547 mo
181.342 44.038 li
181.158 43.425 li
cp
@
180.913 43.547 mo
181.342 44.038 li
181.158 43.425 li
f
180.055 52.313 mo
180.055 51.7036 178.545 51.2096 176.683 51.2096 cv
174.821 51.2096 173.312 51.7036 173.312 52.313 cv
173.312 52.9224 174.821 53.4164 176.683 53.4164 cv
178.545 53.4164 180.055 52.9224 180.055 52.313 cv
@
180.055 52.313 mo
180.055 51.7036 178.545 51.2096 176.683 51.2096 cv
174.821 51.2096 173.312 51.7036 173.312 52.313 cv
173.312 52.9224 174.821 53.4164 176.683 53.4164 cv
178.545 53.4164 180.055 52.9224 180.055 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
173.955 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
175.274 53.2938 mo
174.048 54.152 172.392 55.3167 171.044 56.2975 cv
@
171.044 56.1136 mo
170.615 56.604 li
171.228 56.3588 li
cp
@
171.044 56.1136 mo
170.615 56.604 li
171.228 56.3588 li
f
176.193 48.022 mo
176.316 48.88 176.377 49.7997 176.5 50.6579 cv
@
176.316 50.5966 mo
176.561 51.2096 li
176.622 50.5966 li
cp
@
176.316 50.5966 mo
176.561 51.2096 li
176.622 50.5966 li
f
180.913 47.654 mo
179.994 48.696 178.829 49.9223 178.032 50.9031 cv
@
177.971 50.7192 mo
177.664 51.2709 li
178.216 50.9644 li
cp
@
177.971 50.7192 mo
177.664 51.2709 li
178.216 50.9644 li
f
187.472 53.7842 mo
187.043 54.0294 186.553 54.2746 186.124 54.3972 cv
183.304 55.1328 179.013 56.0523 175.396 56.6653 cv
@
175.519 56.4814 mo
174.906 56.7266 li
175.519 56.7879 li
cp
@
175.519 56.4814 mo
174.906 56.7266 li
175.519 56.7879 li
f
199.058 45.938 mo
199.058 44.787 197.878 43.854 196.422 43.854 cv
194.966 43.854 193.786 44.787 193.786 45.938 cv
193.786 47.089 194.966 48.022 196.422 48.022 cv
197.878 48.022 199.058 47.089 199.058 45.938 cv
@
199.058 45.938 mo
199.058 44.787 197.878 43.854 196.422 43.854 cv
194.966 43.854 193.786 44.787 193.786 45.938 cv
193.786 47.089 194.966 48.022 196.422 48.022 cv
197.878 48.022 199.058 47.089 199.058 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
195.087 45.153 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
194.869 46.1338 mo
(work=96)
[.619614 .429092 .285782 .429092 .484024 .429092 0 ]xsh
194.809 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
197.035 41.647 mo
196.912 42.137 196.851 42.812 196.79 43.425 cv
@
196.667 43.241 mo
196.729 43.854 li
196.974 43.241 li
cp
@
196.667 43.241 mo
196.729 43.854 li
196.974 43.241 li
f
205.678 45.938 mo
205.678 44.787 204.443 43.854 202.92 43.854 cv
201.396 43.854 200.161 44.787 200.161 45.938 cv
200.161 47.089 201.396 48.022 202.92 48.022 cv
204.443 48.022 205.678 47.089 205.678 45.938 cv
@
205.678 45.938 mo
205.678 44.787 204.443 43.854 202.92 43.854 cv
201.396 43.854 200.161 44.787 200.161 45.938 cv
200.161 47.089 201.396 48.022 202.92 48.022 cv
204.443 48.022 205.678 47.089 205.678 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
201.657 45.153 mo
(Inverse)
[.285767 .429108 .429092 .381042 .285767 .333832 0 ]xsh
201.152 46.1338 mo
(work=128)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
201.307 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
198.322 41.586 mo
198.997 42.26 199.916 43.118 200.713 43.854 cv
@
200.652 43.976 mo
201.203 44.283 li
200.836 43.792 li
cp
@
200.652 43.976 mo
201.203 44.283 li
200.836 43.792 li
f
200.529 52.313 mo
200.529 51.7036 199.02 51.2096 197.158 51.2096 cv
195.296 51.2096 193.786 51.7036 193.786 52.313 cv
193.786 52.9224 195.296 53.4164 197.158 53.4164 cv
199.02 53.4164 200.529 52.9224 200.529 52.313 cv
@
200.529 52.313 mo
200.529 51.7036 199.02 51.2096 197.158 51.2096 cv
195.296 51.2096 193.786 51.7036 193.786 52.313 cv
193.786 52.9224 195.296 53.4164 197.158 53.4164 cv
199.02 53.4164 200.529 52.9224 200.529 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
194.429 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
195.932 53.3551 mo
195.319 53.8455 194.583 54.3359 193.97 54.3972 cv
189.556 55.2554 182.691 56.1136 177.296 56.7879 cv
@
177.419 56.604 mo
176.806 56.8492 li
177.419 56.9105 li
cp
@
177.419 56.604 mo
176.806 56.8492 li
177.419 56.9105 li
f
196.667 48.022 mo
196.79 48.88 196.851 49.7997 196.974 50.6579 cv
@
196.79 50.5966 mo
197.035 51.2096 li
197.096 50.5966 li
cp
@
196.79 50.5966 mo
197.035 51.2096 li
197.096 50.5966 li
f
201.387 47.654 mo
200.468 48.696 199.303 49.9223 198.506 50.9031 cv
@
198.445 50.7192 mo
198.138 51.2709 li
198.69 50.9644 li
cp
@
198.445 50.7192 mo
198.138 51.2709 li
198.69 50.9644 li
f
208.069 53.8455 mo
207.579 54.0907 207.027 54.3359 206.598 54.3972 cv
199.242 55.378 187.595 56.2975 179.197 56.9718 cv
@
179.319 56.7879 mo
178.706 57.0331 li
179.319 57.0944 li
cp
@
179.319 56.7879 mo
178.706 57.0331 li
179.319 57.0944 li
f
219.532 45.938 mo
219.532 44.787 218.352 43.854 216.896 43.854 cv
215.441 43.854 214.26 44.787 214.26 45.938 cv
214.26 47.089 215.441 48.022 216.896 48.022 cv
218.352 48.022 219.532 47.089 219.532 45.938 cv
@
219.532 45.938 mo
219.532 44.787 218.352 43.854 216.896 43.854 cv
215.441 43.854 214.26 44.787 214.26 45.938 cv
214.26 47.089 215.441 48.022 216.896 48.022 cv
218.352 48.022 219.532 47.089 219.532 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
215.561 45.153 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
215.343 46.1338 mo
(work=96)
[.619614 .429092 .285782 .429092 .484024 .429092 0 ]xsh
215.283 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
217.509 41.647 mo
217.387 42.137 217.325 42.812 217.264 43.425 cv
@
217.141 43.241 mo
217.203 43.854 li
217.448 43.241 li
cp
@
217.141 43.241 mo
217.203 43.854 li
217.448 43.241 li
f
226.153 45.938 mo
226.153 44.787 224.918 43.854 223.394 43.854 cv
221.871 43.854 220.636 44.787 220.636 45.938 cv
220.636 47.089 221.871 48.022 223.394 48.022 cv
224.918 48.022 226.153 47.089 226.153 45.938 cv
@
226.153 45.938 mo
226.153 44.787 224.918 43.854 223.394 43.854 cv
221.871 43.854 220.636 44.787 220.636 45.938 cv
220.636 47.089 221.871 48.022 223.394 48.022 cv
224.918 48.022 226.153 47.089 226.153 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
222.131 45.153 mo
(Inverse)
[.285767 .429108 .429092 .381042 .285767 .333832 0 ]xsh
221.626 46.1338 mo
(work=128)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
221.781 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
218.797 41.586 mo
219.471 42.26 220.39 43.118 221.187 43.854 cv
@
221.126 43.976 mo
221.678 44.283 li
221.31 43.792 li
cp
@
221.126 43.976 mo
221.678 44.283 li
221.31 43.792 li
f
221.003 52.313 mo
221.003 51.7036 219.494 51.2096 217.632 51.2096 cv
215.77 51.2096 214.26 51.7036 214.26 52.313 cv
214.26 52.9224 215.77 53.4164 217.632 53.4164 cv
219.494 53.4164 221.003 52.9224 221.003 52.313 cv
@
221.003 52.313 mo
221.003 51.7036 219.494 51.2096 217.632 51.2096 cv
215.77 51.2096 214.26 51.7036 214.26 52.313 cv
214.26 52.9224 215.77 53.4164 217.632 53.4164 cv
219.494 53.4164 221.003 52.9224 221.003 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
214.903 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
216.467 53.3551 mo
215.854 53.8455 215.057 54.3359 214.444 54.3972 cv
205.188 55.4393 190.292 56.4201 180.055 57.0331 cv
@
180.055 56.9105 mo
179.442 57.0944 li
180.055 57.1557 li
cp
@
180.055 56.9105 mo
179.442 57.0944 li
180.055 57.1557 li
f
217.141 48.022 mo
217.264 48.88 217.325 49.7997 217.448 50.6579 cv
@
217.264 50.5966 mo
217.509 51.2096 li
217.571 50.5966 li
cp
@
217.264 50.5966 mo
217.509 51.2096 li
217.571 50.5966 li
f
221.862 47.654 mo
220.942 48.696 219.777 49.9223 218.98 50.9031 cv
@
218.919 50.7192 mo
218.613 51.2709 li
219.164 50.9644 li
cp
@
218.919 50.7192 mo
218.613 51.2709 li
219.164 50.9644 li
f
228.543 53.8455 mo
228.053 54.152 227.501 54.3972 227.072 54.3972 cv
214.506 55.5619 193.602 56.604 180.607 57.217 cv
@
180.729 57.0331 mo
180.116 57.217 li
180.729 57.3396 li
cp
@
180.729 57.0331 mo
180.116 57.217 li
180.729 57.3396 li
f
240.006 45.938 mo
240.006 44.787 238.826 43.854 237.37 43.854 cv
235.915 43.854 234.735 44.787 234.735 45.938 cv
234.735 47.089 235.915 48.022 237.37 48.022 cv
238.826 48.022 240.006 47.089 240.006 45.938 cv
@
240.006 45.938 mo
240.006 44.787 238.826 43.854 237.37 43.854 cv
235.915 43.854 234.735 44.787 234.735 45.938 cv
234.735 47.089 235.915 48.022 237.37 48.022 cv
238.826 48.022 240.006 47.089 240.006 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
236.036 45.153 mo
(Identity)
[.285767 .429108 .381027 .429108 .238571 .238586 .238571 0 ]xsh
235.818 46.1338 mo
(work=96)
[.619614 .429092 .285782 .429092 .484024 .429092 0 ]xsh
235.758 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
237.983 41.647 mo
237.861 42.137 237.8 42.812 237.738 43.425 cv
@
237.616 43.241 mo
237.677 43.854 li
237.922 43.241 li
cp
@
237.616 43.241 mo
237.677 43.854 li
237.922 43.241 li
f
246.627 45.938 mo
246.627 44.787 245.392 43.854 243.868 43.854 cv
242.345 43.854 241.11 44.787 241.11 45.938 cv
241.11 47.089 242.345 48.022 243.868 48.022 cv
245.392 48.022 246.627 47.089 246.627 45.938 cv
@
246.627 45.938 mo
246.627 44.787 245.392 43.854 243.868 43.854 cv
242.345 43.854 241.11 44.787 241.11 45.938 cv
241.11 47.089 242.345 48.022 243.868 48.022 cv
245.392 48.022 246.627 47.089 246.627 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
242.606 45.153 mo
(Inverse)
[.285767 .429108 .429092 .381042 .285767 .333832 0 ]xsh
242.101 46.1338 mo
(work=128)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 0 ]xsh
242.256 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
239.271 41.586 mo
239.945 42.26 240.865 43.118 241.661 43.854 cv
@
241.6 43.976 mo
242.152 44.283 li
241.784 43.792 li
cp
@
241.6 43.976 mo
242.152 44.283 li
241.784 43.792 li
f
241.478 52.313 mo
241.478 51.7036 239.968 51.2096 238.106 51.2096 cv
236.244 51.2096 234.735 51.7036 234.735 52.313 cv
234.735 52.9224 236.244 53.4164 238.106 53.4164 cv
239.968 53.4164 241.478 52.9224 241.478 52.313 cv
@
241.478 52.313 mo
241.478 51.7036 239.968 51.2096 238.106 51.2096 cv
236.244 51.2096 234.735 51.7036 234.735 52.313 cv
234.735 52.9224 236.244 53.4164 238.106 53.4164 cv
239.968 53.4164 241.478 52.9224 241.478 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
235.377 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 0 ]xsh
236.941 53.3551 mo
236.328 53.8455 235.531 54.3972 234.918 54.3972 cv
220.206 55.5619 195.625 56.6653 180.913 57.2783 cv
@
180.974 57.0944 mo
180.361 57.2783 li
180.974 57.4009 li
cp
@
180.974 57.0944 mo
180.361 57.2783 li
180.974 57.4009 li
f
237.616 48.022 mo
237.738 48.88 237.8 49.7997 237.922 50.6579 cv
@
237.738 50.5966 mo
237.983 51.2096 li
238.045 50.5966 li
cp
@
237.738 50.5966 mo
237.983 51.2096 li
238.045 50.5966 li
f
242.336 47.654 mo
241.416 48.696 240.252 49.9223 239.455 50.9031 cv
@
239.393 50.7192 mo
239.087 51.2709 li
239.639 50.9644 li
cp
@
239.393 50.7192 mo
239.087 51.2709 li
239.639 50.9644 li
f
249.017 53.8455 mo
248.527 54.152 247.975 54.3972 247.546 54.3972 cv
229.34 55.6232 198.261 56.7879 181.158 57.3396 cv
@
181.342 57.1557 mo
180.729 57.3396 li
181.342 57.4622 li
cp
@
181.342 57.1557 mo
180.729 57.3396 li
181.342 57.4622 li
f
260.481 45.938 mo
260.481 44.787 259.3 43.854 257.845 43.854 cv
256.389 43.854 255.209 44.787 255.209 45.938 cv
255.209 47.089 256.389 48.022 257.845 48.022 cv
259.3 48.022 260.481 47.089 260.481 45.938 cv
@
260.481 45.938 mo
260.481 44.787 259.3 43.854 257.845 43.854 cv
256.389 43.854 255.209 44.787 255.209 45.938 cv
255.209 47.089 256.389 48.022 257.845 48.022 cv
259.3 48.022 260.481 47.089 260.481 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
256.51 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
256.292 46.1338 mo
(work=96)
[.619598 .429108 .285767 .429108 .484009 .429108 0 ]xsh
256.232 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
258.458 41.647 mo
258.335 42.137 258.274 42.812 258.212 43.425 cv
@
258.09 43.241 mo
258.151 43.854 li
258.396 43.241 li
cp
@
258.09 43.241 mo
258.151 43.854 li
258.396 43.241 li
f
267.101 45.938 mo
267.101 44.787 265.866 43.854 264.342 43.854 cv
262.819 43.854 261.584 44.787 261.584 45.938 cv
261.584 47.089 262.819 48.022 264.342 48.022 cv
265.866 48.022 267.101 47.089 267.101 45.938 cv
@
267.101 45.938 mo
267.101 44.787 265.866 43.854 264.342 43.854 cv
262.819 43.854 261.584 44.787 261.584 45.938 cv
261.584 47.089 262.819 48.022 264.342 48.022 cv
265.866 48.022 267.101 47.089 267.101 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
263.08 45.153 mo
(Inverse)
[.285767 .429108 .429108 .381012 .285797 .333832 0 ]xsh
262.575 46.1338 mo
(work=128)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
262.73 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
259.745 41.586 mo
260.419 42.26 261.339 43.118 262.136 43.854 cv
@
262.074 43.976 mo
262.626 44.283 li
262.258 43.792 li
cp
@
262.074 43.976 mo
262.626 44.283 li
262.258 43.792 li
f
261.952 52.313 mo
261.952 51.7036 260.442 51.2096 258.58 51.2096 cv
256.718 51.2096 255.209 51.7036 255.209 52.313 cv
255.209 52.9224 256.718 53.4164 258.58 53.4164 cv
260.442 53.4164 261.952 52.9224 261.952 52.313 cv
@
261.952 52.313 mo
261.952 51.7036 260.442 51.2096 258.58 51.2096 cv
256.718 51.2096 255.209 51.7036 255.209 52.313 cv
255.209 52.9224 256.718 53.4164 258.58 53.4164 cv
260.442 53.4164 261.952 52.9224 261.952 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
255.851 52.5092 mo
(roundrobin\(1,1\))
[.285782 .429077 .429108 .429108 .429108 .285767 .429108 .429077 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
257.416 53.3551 mo
256.803 53.8455 256.006 54.3972 255.393 54.3972 cv
234.918 55.6845 199.855 56.8492 181.342 57.4009 cv
@
181.465 57.217 mo
180.852 57.4009 li
181.465 57.5235 li
cp
@
181.465 57.217 mo
180.852 57.4009 li
181.465 57.5235 li
f
258.09 48.022 mo
258.212 48.88 258.274 49.7997 258.396 50.6579 cv
@
258.212 50.5966 mo
258.458 51.2096 li
258.519 50.5966 li
cp
@
258.212 50.5966 mo
258.458 51.2096 li
258.519 50.5966 li
f
262.81 47.654 mo
261.89 48.696 260.726 49.9223 259.929 50.9031 cv
@
259.868 50.7192 mo
259.561 51.2709 li
260.113 50.9644 li
cp
@
259.868 50.7192 mo
259.561 51.2709 li
260.113 50.9644 li
f
167.121 70.4578 mo
167.121 68.9344 164.266 67.6993 160.745 67.6993 cv
157.225 67.6993 154.37 68.9344 154.37 70.4578 cv
154.37 71.9813 157.225 73.2163 160.745 73.2163 cv
164.266 73.2163 167.121 71.9813 167.121 70.4578 cv
@
167.121 70.4578 mo
167.121 68.9344 164.266 67.6993 160.745 67.6993 cv
157.225 67.6993 154.37 68.9344 154.37 70.4578 cv
154.37 71.9813 157.225 73.2163 160.745 73.2163 cv
164.266 73.2163 167.121 71.9813 167.121 70.4578 cv
.675 .855 .91 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSH+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7A73DB9D92E2C498F1C8C272174C48D3E3EA8F27C6E6BA
93064621D133D030C551A42025686691A783FB90A2D496BEF06790AC79A6878D
99BC23CD14D9CFD812148CC847ABD0CF7E73A1A9D5ACE6E2E3BBFD4DD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSH+TimesNewRomanPSMT /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSH+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /B /C /D /E /F 
/.notdef /H /I /.notdef /K /.notdef /M /.notdef 
/O /P /.notdef /R /S /T /.notdef /V 
8{/.notdef}rp /underscore /.notdef /a /b /c /d /e 
2{/.notdef}rp /h /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /x /y 134{/.notdef}rp]
LTFDSH+TimesNewRomanPSMT nf
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
159.363 69.1828 mo
(Reorder)
[.572418 .381027 .429092 .285782 .429092 .381027 0 ]xsh
158.334 70.1636 mo
(work=135360)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 .429108 .429092 0 ]xsh
158.489 71.1444 mo
(I/O: 64->512)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 .429108 .429092 0 
]xsh
155.573 72.1252 mo
(*** PEEKS 960 AHEAD ***)
[.429092 .429108 .429092 .214554 .477158 .524353 .524353 .619614 .477158 .214554 .429092 .429108 
.429092 .214554 .619614 .619598 .524353 .619614 .619614 .214539 .429108 .429092 0 ]xsh
164.73 65.3086 mo
164.24 65.9216 163.688 66.6572 163.197 67.3315 cv
@
163.075 67.2089 mo
162.83 67.8219 li
163.32 67.3928 li
cp
@
163.075 67.2089 mo
162.83 67.8219 li
163.32 67.3928 li
f
164.178 77.5686 mo
164.178 76.4176 162.01 75.4844 159.336 75.4844 cv
156.661 75.4844 154.493 76.4176 154.493 77.5686 cv
154.493 78.7197 156.661 79.6528 159.336 79.6528 cv
162.01 79.6528 164.178 78.7197 164.178 77.5686 cv
@
164.178 77.5686 mo
164.178 76.4176 162.01 75.4844 159.336 75.4844 cv
156.661 75.4844 154.493 76.4176 154.493 77.5686 cv
154.493 78.7197 156.661 79.6528 159.336 79.6528 cv
162.01 79.6528 164.178 78.7197 164.178 77.5686 cv
.675 .855 .91 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
155.498 76.784 mo
(VectorVectorMultiply)
[.619614 .381027 .381027 .238571 .429108 .285767 .619614 .381027 .381027 .238571 .429108 .285767 
.762939 .429108 .238571 .238586 .238571 .429108 .238571 0 ]xsh
156.924 77.7648 mo
(work=110592)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 .429108 .429092 0 ]xsh
156.865 78.7456 mo
(I/O: 512->512)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .429092 .285782 .484024 .429092 .429108 
0 ]xsh
160.194 73.2776 mo
160.132 73.8293 160.01 74.381 159.887 74.9327 cv
@
159.765 74.8714 mo
159.765 75.4844 li
160.071 74.9327 li
cp
@
159.765 74.8714 mo
159.765 75.4844 li
160.071 74.9327 li
f
171.657 82.963 mo
171.657 82.3536 165.839 81.8596 158.661 81.8596 cv
151.484 81.8596 145.666 82.3536 145.666 82.963 cv
145.666 83.5724 151.484 84.0664 158.661 84.0664 cv
165.839 84.0664 171.657 83.5724 171.657 82.963 cv
@
171.657 82.963 mo
171.657 82.3536 165.839 81.8596 158.661 81.8596 cv
151.484 81.8596 145.666 82.3536 145.666 82.963 cv
145.666 83.5724 151.484 84.0664 158.661 84.0664 cv
165.839 84.0664 171.657 83.5724 171.657 82.963 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
146.278 83.1592 mo
(roundrobin\(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 .214554 .429108 .214539 .429108 .214554 .429092 .214554 .429092 .214554 .429108 
.214539 .429108 .214539 .429108 .214554 .429092 .214554 .429092 .214554 .429108 .214554 .429092 
.214554 .429092 .214554 .429108 .214539 .429108 .214539 .429108 .214554 .429092 .214554 .429092 
.214554 .429108 .214554 .429092 .214554 .429092 .214554 .429108 .214539 .429108 .214539 .429108 
.214554 .429092 .214554 .429092 .214554 .429108 .214554 .429092 .214554 .429092 .214554 .429108 
.214539 .429108 0 ]xsh
159.09 79.6528 mo
159.029 80.2045 158.968 80.7562 158.906 81.3079 cv
@
158.784 81.2466 mo
158.784 81.8596 li
159.09 81.3079 li
cp
@
158.784 81.2466 mo
158.784 81.8596 li
159.09 81.3079 li
f
47.8922 88.3574 mo
47.8922 87.2064 46.5474 86.2732 44.8885 86.2732 cv
43.2296 86.2732 41.8848 87.2064 41.8848 88.3574 cv
41.8848 89.5085 43.2296 90.4416 44.8885 90.4416 cv
46.5474 90.4416 47.8922 89.5085 47.8922 88.3574 cv
@
47.8922 88.3574 mo
47.8922 87.2064 46.5474 86.2732 44.8885 86.2732 cv
43.2296 86.2732 41.8848 87.2064 41.8848 88.3574 cv
41.8848 89.5085 43.2296 90.4416 44.8885 90.4416 cv
46.5474 90.4416 47.8922 89.5085 47.8922 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
44.1015 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
42.9065 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 .4291 0 ]xsh
43.0614 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .61961 .238579 .21455 .4291 .4291 .285774 .48402 0 ]xsh
146.095 83.2695 mo
123.475 83.7599 75.6611 84.9859 48.26 86.2732 cv
47.9535 86.3345 47.647 86.3958 47.2792 86.5797 cv
@
47.3405 86.3345 mo
46.9114 86.8249 li
47.5244 86.641 li
cp
@
47.3405 86.3345 mo
46.9114 86.8249 li
47.5244 86.641 li
f
55.003 88.3574 mo
55.003 87.2064 53.6582 86.2732 51.9993 86.2732 cv
50.3404 86.2732 48.9956 87.2064 48.9956 88.3574 cv
48.9956 89.5085 50.3404 90.4416 51.9993 90.4416 cv
53.6582 90.4416 55.003 89.5085 55.003 88.3574 cv
@
55.003 88.3574 mo
55.003 87.2064 53.6582 86.2732 51.9993 86.2732 cv
50.3404 86.2732 48.9956 87.2064 48.9956 88.3574 cv
48.9956 89.5085 50.3404 90.4416 51.9993 90.4416 cv
53.6582 90.4416 55.003 89.5085 55.003 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
51.2123 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
50.0173 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .48402 .4291 .4291 .4291 0 ]xsh
50.1722 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .61961 .238579 .21455 .4291 .4291 .285774 .48402 0 ]xsh
146.463 83.3308 mo
119.184 84.2503 55.3708 86.2732 55.3708 86.2732 cv
55.0643 86.3345 54.7578 86.3958 54.39 86.5797 cv
@
54.4513 86.3345 mo
54.0222 86.8249 li
54.6352 86.641 li
cp
@
54.4513 86.3345 mo
54.0222 86.8249 li
54.6352 86.641 li
f
62.1138 88.3574 mo
62.1138 87.2064 60.769 86.2732 59.1101 86.2732 cv
57.4512 86.2732 56.1064 87.2064 56.1064 88.3574 cv
56.1064 89.5085 57.4512 90.4416 59.1101 90.4416 cv
60.769 90.4416 62.1138 89.5085 62.1138 88.3574 cv
@
62.1138 88.3574 mo
62.1138 87.2064 60.769 86.2732 59.1101 86.2732 cv
57.4512 86.2732 56.1064 87.2064 56.1064 88.3574 cv
56.1064 89.5085 57.4512 90.4416 59.1101 90.4416 cv
60.769 90.4416 62.1138 89.5085 62.1138 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
58.3231 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
57.1281 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .48402 .4291 .4291 .4291 0 ]xsh
57.283 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .61961 .238579 .21455 .4291 .4291 .285774 .48402 0 ]xsh
145.727 83.0243 mo
117.958 83.3921 90.2505 84.802 62.4816 86.2732 cv
62.1751 86.3345 61.8686 86.3958 61.5008 86.5797 cv
@
61.5621 86.3345 mo
61.133 86.8249 li
61.746 86.641 li
cp
@
61.5621 86.3345 mo
61.133 86.8249 li
61.746 86.641 li
f
69.2246 88.3574 mo
69.2246 87.2064 67.8798 86.2732 66.2209 86.2732 cv
64.562 86.2732 63.2172 87.2064 63.2172 88.3574 cv
63.2172 89.5085 64.562 90.4416 66.2209 90.4416 cv
67.8798 90.4416 69.2246 89.5085 69.2246 88.3574 cv
@
69.2246 88.3574 mo
69.2246 87.2064 67.8798 86.2732 66.2209 86.2732 cv
64.562 86.2732 63.2172 87.2064 63.2172 88.3574 cv
63.2172 89.5085 64.562 90.4416 66.2209 90.4416 cv
67.8798 90.4416 69.2246 89.5085 69.2246 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
65.434 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
64.239 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 .4291 0 ]xsh
64.3939 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .4291 .285774 .484016 0 ]xsh
145.727 83.0856 mo
120.349 83.4534 94.9706 84.802 69.5924 86.2732 cv
69.2859 86.3345 68.9794 86.3958 68.6116 86.5797 cv
@
68.6729 86.3345 mo
68.2438 86.8249 li
68.8568 86.641 li
cp
@
68.6729 86.3345 mo
68.2438 86.8249 li
68.8568 86.641 li
f
76.3354 88.3574 mo
76.3354 87.2064 74.9906 86.2732 73.3317 86.2732 cv
71.6728 86.2732 70.328 87.2064 70.328 88.3574 cv
70.328 89.5085 71.6728 90.4416 73.3317 90.4416 cv
74.9906 90.4416 76.3354 89.5085 76.3354 88.3574 cv
@
76.3354 88.3574 mo
76.3354 87.2064 74.9906 86.2732 73.3317 86.2732 cv
71.6728 86.2732 70.328 87.2064 70.328 88.3574 cv
70.328 89.5085 71.6728 90.4416 73.3317 90.4416 cv
74.9906 90.4416 76.3354 89.5085 76.3354 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
72.5448 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
71.3498 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 .4291 0 ]xsh
71.5047 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .4291 .285774 .484016 0 ]xsh
145.727 83.0856 mo
122.739 83.4534 99.752 84.802 76.7032 86.2732 cv
76.3967 86.3345 76.0902 86.3958 75.7224 86.5797 cv
@
75.7837 86.3345 mo
75.3546 86.8249 li
75.9676 86.641 li
cp
@
75.7837 86.3345 mo
75.3546 86.8249 li
75.9676 86.641 li
f
83.4462 88.3574 mo
83.4462 87.2064 82.1014 86.2732 80.4425 86.2732 cv
78.7836 86.2732 77.4388 87.2064 77.4388 88.3574 cv
77.4388 89.5085 78.7836 90.4416 80.4425 90.4416 cv
82.1014 90.4416 83.4462 89.5085 83.4462 88.3574 cv
@
83.4462 88.3574 mo
83.4462 87.2064 82.1014 86.2732 80.4425 86.2732 cv
78.7836 86.2732 77.4388 87.2064 77.4388 88.3574 cv
77.4388 89.5085 78.7836 90.4416 80.4425 90.4416 cv
82.1014 90.4416 83.4462 89.5085 83.4462 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
79.6555 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
78.4605 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 .4291 0 ]xsh
78.6154 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .4291 .285774 .484016 0 ]xsh
145.788 83.0856 mo
125.13 83.5147 104.472 84.8633 83.814 86.2732 cv
83.5075 86.3345 83.201 86.3958 82.8332 86.5797 cv
@
82.8945 86.3345 mo
82.4654 86.8249 li
83.0784 86.641 li
cp
@
82.8945 86.3345 mo
82.4654 86.8249 li
83.0784 86.641 li
f
90.557 88.3574 mo
90.557 87.2064 89.2122 86.2732 87.5533 86.2732 cv
85.8944 86.2732 84.5496 87.2064 84.5496 88.3574 cv
84.5496 89.5085 85.8944 90.4416 87.5533 90.4416 cv
89.2122 90.4416 90.557 89.5085 90.557 88.3574 cv
@
90.557 88.3574 mo
90.557 87.2064 89.2122 86.2732 87.5533 86.2732 cv
85.8944 86.2732 84.5496 87.2064 84.5496 88.3574 cv
84.5496 89.5085 85.8944 90.4416 87.5533 90.4416 cv
89.2122 90.4416 90.557 89.5085 90.557 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
86.7663 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
85.5713 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 .4291 0 ]xsh
85.7262 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .4291 .285774 .484016 0 ]xsh
145.788 83.1469 mo
127.521 83.576 109.192 84.9246 90.9248 86.2732 cv
90.6183 86.3345 90.3118 86.3958 89.944 86.5797 cv
@
90.0053 86.3345 mo
89.5762 86.8249 li
90.1892 86.641 li
cp
@
90.0053 86.3345 mo
89.5762 86.8249 li
90.1892 86.641 li
f
97.6678 88.3574 mo
97.6678 87.2064 96.323 86.2732 94.6641 86.2732 cv
93.0052 86.2732 91.6604 87.2064 91.6604 88.3574 cv
91.6604 89.5085 93.0052 90.4416 94.6641 90.4416 cv
96.323 90.4416 97.6678 89.5085 97.6678 88.3574 cv
@
97.6678 88.3574 mo
97.6678 87.2064 96.323 86.2732 94.6641 86.2732 cv
93.0052 86.2732 91.6604 87.2064 91.6604 88.3574 cv
91.6604 89.5085 93.0052 90.4416 94.6641 90.4416 cv
96.323 90.4416 97.6678 89.5085 97.6678 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
93.8771 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
92.6821 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 .4291 0 ]xsh
92.837 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .4291 .285774 .484016 0 ]xsh
145.911 83.1469 mo
129.912 83.6373 113.974 84.9859 98.0356 86.2732 cv
97.7291 86.3345 97.4226 86.3958 97.0548 86.5797 cv
@
97.1161 86.3345 mo
96.687 86.8249 li
97.3 86.641 li
cp
@
97.1161 86.3345 mo
96.687 86.8249 li
97.3 86.641 li
f
104.779 88.3574 mo
104.779 87.2064 103.434 86.2732 101.775 86.2732 cv
100.116 86.2732 98.7712 87.2064 98.7712 88.3574 cv
98.7712 89.5085 100.116 90.4416 101.775 90.4416 cv
103.434 90.4416 104.779 89.5085 104.779 88.3574 cv
@
104.779 88.3574 mo
104.779 87.2064 103.434 86.2732 101.775 86.2732 cv
100.116 86.2732 98.7712 87.2064 98.7712 88.3574 cv
98.7712 89.5085 100.116 90.4416 101.775 90.4416 cv
103.434 90.4416 104.779 89.5085 104.779 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
100.988 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
99.793 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 .4291 0 ]xsh
99.9479 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .4291 .285774 .484016 0 ]xsh
146.033 83.2082 mo
132.364 83.7599 118.755 84.9859 105.146 86.2732 cv
104.901 86.3345 104.533 86.3958 104.227 86.5797 cv
@
104.288 86.3345 mo
103.859 86.8249 li
104.472 86.641 li
cp
@
104.288 86.3345 mo
103.859 86.8249 li
104.472 86.641 li
f
111.889 88.3574 mo
111.889 87.2064 110.545 86.2732 108.886 86.2732 cv
107.227 86.2732 105.882 87.2064 105.882 88.3574 cv
105.882 89.5085 107.227 90.4416 108.886 90.4416 cv
110.545 90.4416 111.889 89.5085 111.889 88.3574 cv
@
111.889 88.3574 mo
111.889 87.2064 110.545 86.2732 108.886 86.2732 cv
107.227 86.2732 105.882 87.2064 105.882 88.3574 cv
105.882 89.5085 107.227 90.4416 108.886 90.4416 cv
110.545 90.4416 111.889 89.5085 111.889 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
108.099 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
106.904 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 .4291 0 ]xsh
107.059 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .4291 .285774 .484016 0 ]xsh
146.217 83.2695 mo
134.877 83.8212 123.536 85.0472 112.257 86.2732 cv
112.012 86.3345 111.644 86.3958 111.338 86.5797 cv
@
111.399 86.3345 mo
110.97 86.8249 li
111.583 86.641 li
cp
@
111.399 86.3345 mo
110.97 86.8249 li
111.583 86.641 li
f
119 88.3574 mo
119 87.2064 117.655 86.2732 115.996 86.2732 cv
114.338 86.2732 112.993 87.2064 112.993 88.3574 cv
112.993 89.5085 114.338 90.4416 115.996 90.4416 cv
117.655 90.4416 119 89.5085 119 88.3574 cv
@
119 88.3574 mo
119 87.2064 117.655 86.2732 115.996 86.2732 cv
114.338 86.2732 112.993 87.2064 112.993 88.3574 cv
112.993 89.5085 114.338 90.4416 115.996 90.4416 cv
117.655 90.4416 119 89.5085 119 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
115.21 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
114.015 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 .4291 0 ]xsh
114.17 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .4291 .285774 .484016 0 ]xsh
148.608 83.6373 mo
139.842 84.3116 127.214 85.2924 119.368 86.2732 cv
119.123 86.3345 118.755 86.3958 118.448 86.5797 cv
@
118.51 86.3345 mo
118.081 86.8249 li
118.694 86.641 li
cp
@
118.51 86.3345 mo
118.081 86.8249 li
118.694 86.641 li
f
126.111 88.3574 mo
126.111 87.2064 124.766 86.2732 123.107 86.2732 cv
121.448 86.2732 120.104 87.2064 120.104 88.3574 cv
120.104 89.5085 121.448 90.4416 123.107 90.4416 cv
124.766 90.4416 126.111 89.5085 126.111 88.3574 cv
@
126.111 88.3574 mo
126.111 87.2064 124.766 86.2732 123.107 86.2732 cv
121.448 86.2732 120.104 87.2064 120.104 88.3574 cv
120.104 89.5085 121.448 90.4416 123.107 90.4416 cv
124.766 90.4416 126.111 89.5085 126.111 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
122.32 87.5728 mo
(Sum)
[.477158 .4291 0 ]xsh
121.125 88.5536 mo
(work=2070)
[.619606 .4291 .285774 .4291 .484024 .4291 .4291 .4291 0 ]xsh
121.28 89.5344 mo
(I/O: 16->1)
[.285774 .238579 .619606 .238579 .214554 .4291 .4291 .285774 .484016 0 ]xsh
149.528 83.7599 mo
142.355 84.3729 132.609 85.3537 126.479 86.2732 cv
126.234 86.3345 125.866 86.4571 125.559 86.641 cv
@
125.682 86.3958 mo
125.191 86.8249 li
125.804 86.7023 li
cp
@
125.682 86.3958 mo
125.191 86.8249 li
125.804 86.7023 li
f
133.222 88.3574 mo
133.222 87.2064 131.877 86.2732 130.218 86.2732 cv
128.559 86.2732 127.214 87.2064 127.214 88.3574 cv
127.214 89.5085 128.559 90.4416 130.218 90.4416 cv
131.877 90.4416 133.222 89.5085 133.222 88.3574 cv
@
133.222 88.3574 mo
133.222 87.2064 131.877 86.2732 130.218 86.2732 cv
128.559 86.2732 127.214 87.2064 127.214 88.3574 cv
127.214 89.5085 128.559 90.4416 130.218 90.4416 cv
131.877 90.4416 133.222 89.5085 133.222 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
129.431 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
128.236 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
128.391 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
150.876 83.8212 mo
145.359 84.4955 138.187 85.415 133.59 86.2732 cv
133.344 86.3345 132.977 86.4571 132.67 86.641 cv
@
132.793 86.3958 mo
132.302 86.8249 li
132.915 86.7023 li
cp
@
132.793 86.3958 mo
132.302 86.8249 li
132.915 86.7023 li
f
140.333 88.3574 mo
140.333 87.2064 138.988 86.2732 137.329 86.2732 cv
135.67 86.2732 134.325 87.2064 134.325 88.3574 cv
134.325 89.5085 135.67 90.4416 137.329 90.4416 cv
138.988 90.4416 140.333 89.5085 140.333 88.3574 cv
@
140.333 88.3574 mo
140.333 87.2064 138.988 86.2732 137.329 86.2732 cv
135.67 86.2732 134.325 87.2064 134.325 88.3574 cv
134.325 89.5085 135.67 90.4416 137.329 90.4416 cv
138.988 90.4416 140.333 89.5085 140.333 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
136.542 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
135.347 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
135.502 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
152.654 83.9438 mo
148.731 84.6181 143.888 85.4763 140.7 86.2732 cv
140.455 86.3345 140.149 86.5184 139.842 86.641 cv
@
139.903 86.3958 mo
139.474 86.8862 li
140.087 86.7023 li
cp
@
139.903 86.3958 mo
139.474 86.8862 li
140.087 86.7023 li
f
147.443 88.3574 mo
147.443 87.2064 146.099 86.2732 144.44 86.2732 cv
142.781 86.2732 141.436 87.2064 141.436 88.3574 cv
141.436 89.5085 142.781 90.4416 144.44 90.4416 cv
146.099 90.4416 147.443 89.5085 147.443 88.3574 cv
@
147.443 88.3574 mo
147.443 87.2064 146.099 86.2732 144.44 86.2732 cv
142.781 86.2732 141.436 87.2064 141.436 88.3574 cv
141.436 89.5085 142.781 90.4416 144.44 90.4416 cv
146.099 90.4416 147.443 89.5085 147.443 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
143.653 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
142.458 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
142.613 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
154.922 84.0051 mo
152.593 84.7407 149.711 85.5989 147.811 86.2732 cv
147.566 86.3345 147.259 86.5184 146.953 86.641 cv
@
147.014 86.3958 mo
146.585 86.8862 li
147.198 86.7023 li
cp
@
147.014 86.3958 mo
146.585 86.8862 li
147.198 86.7023 li
f
154.554 88.3574 mo
154.554 87.2064 153.209 86.2732 151.55 86.2732 cv
149.892 86.2732 148.547 87.2064 148.547 88.3574 cv
148.547 89.5085 149.892 90.4416 151.55 90.4416 cv
153.209 90.4416 154.554 89.5085 154.554 88.3574 cv
@
154.554 88.3574 mo
154.554 87.2064 153.209 86.2732 151.55 86.2732 cv
149.892 86.2732 148.547 87.2064 148.547 88.3574 cv
148.547 89.5085 149.892 90.4416 151.55 90.4416 cv
153.209 90.4416 154.554 89.5085 154.554 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
150.764 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
149.569 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
149.724 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
157.19 84.0664 mo
156.271 84.7407 155.106 85.5989 154.064 86.4571 cv
@
154.002 86.3345 mo
153.573 86.8249 li
154.186 86.5797 li
cp
@
154.002 86.3345 mo
153.573 86.8249 li
154.186 86.5797 li
f
161.665 88.3574 mo
161.665 87.2064 160.32 86.2732 158.661 86.2732 cv
157.002 86.2732 155.658 87.2064 155.658 88.3574 cv
155.658 89.5085 157.002 90.4416 158.661 90.4416 cv
160.32 90.4416 161.665 89.5085 161.665 88.3574 cv
@
161.665 88.3574 mo
161.665 87.2064 160.32 86.2732 158.661 86.2732 cv
157.002 86.2732 155.658 87.2064 155.658 88.3574 cv
155.658 89.5085 157.002 90.4416 158.661 90.4416 cv
160.32 90.4416 161.665 89.5085 161.665 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
157.874 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
156.679 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
156.834 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
158.661 84.0664 mo
158.661 84.4955 158.661 85.1085 158.661 85.6602 cv
@
158.539 85.6602 mo
158.661 86.2732 li
158.845 85.6602 li
cp
@
158.539 85.6602 mo
158.661 86.2732 li
158.845 85.6602 li
f
168.776 88.3574 mo
168.776 87.2064 167.431 86.2732 165.772 86.2732 cv
164.113 86.2732 162.768 87.2064 162.768 88.3574 cv
162.768 89.5085 164.113 90.4416 165.772 90.4416 cv
167.431 90.4416 168.776 89.5085 168.776 88.3574 cv
@
168.776 88.3574 mo
168.776 87.2064 167.431 86.2732 165.772 86.2732 cv
164.113 86.2732 162.768 87.2064 162.768 88.3574 cv
162.768 89.5085 164.113 90.4416 165.772 90.4416 cv
167.431 90.4416 168.776 89.5085 168.776 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
164.985 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
163.79 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
163.945 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
160.132 84.0664 mo
161.052 84.7407 162.217 85.5989 163.259 86.4571 cv
@
163.197 86.5797 mo
163.749 86.8249 li
163.381 86.3345 li
cp
@
163.197 86.5797 mo
163.749 86.8249 li
163.381 86.3345 li
f
175.887 88.3574 mo
175.887 87.2064 174.542 86.2732 172.883 86.2732 cv
171.224 86.2732 169.879 87.2064 169.879 88.3574 cv
169.879 89.5085 171.224 90.4416 172.883 90.4416 cv
174.542 90.4416 175.887 89.5085 175.887 88.3574 cv
@
175.887 88.3574 mo
175.887 87.2064 174.542 86.2732 172.883 86.2732 cv
171.224 86.2732 169.879 87.2064 169.879 88.3574 cv
169.879 89.5085 171.224 90.4416 172.883 90.4416 cv
174.542 90.4416 175.887 89.5085 175.887 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
172.096 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
170.901 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
171.056 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
162.401 84.0051 mo
164.73 84.7407 167.672 85.5989 169.511 86.2732 cv
169.757 86.3345 170.063 86.5184 170.37 86.641 cv
@
170.124 86.7023 mo
170.737 86.8862 li
170.308 86.3958 li
cp
@
170.124 86.7023 mo
170.737 86.8862 li
170.308 86.3958 li
f
182.997 88.3574 mo
182.997 87.2064 181.653 86.2732 179.994 86.2732 cv
178.335 86.2732 176.99 87.2064 176.99 88.3574 cv
176.99 89.5085 178.335 90.4416 179.994 90.4416 cv
181.653 90.4416 182.997 89.5085 182.997 88.3574 cv
@
182.997 88.3574 mo
182.997 87.2064 181.653 86.2732 179.994 86.2732 cv
178.335 86.2732 176.99 87.2064 176.99 88.3574 cv
176.99 89.5085 178.335 90.4416 179.994 90.4416 cv
181.653 90.4416 182.997 89.5085 182.997 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
179.207 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
178.012 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
178.167 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
164.669 83.9438 mo
168.592 84.6181 173.496 85.4763 176.622 86.2732 cv
176.867 86.3345 177.174 86.4571 177.48 86.641 cv
@
177.296 86.7023 mo
177.909 86.8862 li
177.48 86.4571 li
cp
@
177.296 86.7023 mo
177.909 86.8862 li
177.48 86.4571 li
f
190.108 88.3574 mo
190.108 87.2064 188.763 86.2732 187.104 86.2732 cv
185.446 86.2732 184.101 87.2064 184.101 88.3574 cv
184.101 89.5085 185.446 90.4416 187.104 90.4416 cv
188.763 90.4416 190.108 89.5085 190.108 88.3574 cv
@
190.108 88.3574 mo
190.108 87.2064 188.763 86.2732 187.104 86.2732 cv
185.446 86.2732 184.101 87.2064 184.101 88.3574 cv
184.101 89.5085 185.446 90.4416 187.104 90.4416 cv
188.763 90.4416 190.108 89.5085 190.108 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
186.318 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
185.123 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
185.278 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
166.446 83.8212 mo
171.963 84.4955 179.135 85.415 183.733 86.2732 cv
183.917 86.3345 184.162 86.3958 184.469 86.5184 cv
@
184.407 86.641 mo
185.02 86.8249 li
184.53 86.3958 li
cp
@
184.407 86.641 mo
185.02 86.8249 li
184.53 86.3958 li
f
197.219 88.3574 mo
197.219 87.2064 195.874 86.2732 194.215 86.2732 cv
192.556 86.2732 191.212 87.2064 191.212 88.3574 cv
191.212 89.5085 192.556 90.4416 194.215 90.4416 cv
195.874 90.4416 197.219 89.5085 197.219 88.3574 cv
@
197.219 88.3574 mo
197.219 87.2064 195.874 86.2732 194.215 86.2732 cv
192.556 86.2732 191.212 87.2064 191.212 88.3574 cv
191.212 89.5085 192.556 90.4416 194.215 90.4416 cv
195.874 90.4416 197.219 89.5085 197.219 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
193.428 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
192.233 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
192.388 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
167.795 83.7599 mo
174.967 84.3729 184.714 85.3537 190.844 86.2732 cv
191.089 86.3345 191.334 86.3958 191.579 86.5184 cv
@
191.518 86.641 mo
192.131 86.8249 li
191.641 86.3958 li
cp
@
191.518 86.641 mo
192.131 86.8249 li
191.641 86.3958 li
f
204.33 88.3574 mo
204.33 87.2064 202.985 86.2732 201.326 86.2732 cv
199.667 86.2732 198.322 87.2064 198.322 88.3574 cv
198.322 89.5085 199.667 90.4416 201.326 90.4416 cv
202.985 90.4416 204.33 89.5085 204.33 88.3574 cv
@
204.33 88.3574 mo
204.33 87.2064 202.985 86.2732 201.326 86.2732 cv
199.667 86.2732 198.322 87.2064 198.322 88.3574 cv
198.322 89.5085 199.667 90.4416 201.326 90.4416 cv
202.985 90.4416 204.33 89.5085 204.33 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
200.539 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
199.344 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
199.499 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
168.714 83.6373 mo
177.542 84.3116 190.169 85.2924 197.955 86.2732 cv
198.261 86.3345 198.568 86.3958 198.935 86.5797 cv
@
198.69 86.641 mo
199.303 86.8249 li
198.874 86.3345 li
cp
@
198.69 86.641 mo
199.303 86.8249 li
198.874 86.3345 li
f
211.441 88.3574 mo
211.441 87.2064 210.096 86.2732 208.437 86.2732 cv
206.778 86.2732 205.433 87.2064 205.433 88.3574 cv
205.433 89.5085 206.778 90.4416 208.437 90.4416 cv
210.096 90.4416 211.441 89.5085 211.441 88.3574 cv
@
211.441 88.3574 mo
211.441 87.2064 210.096 86.2732 208.437 86.2732 cv
206.778 86.2732 205.433 87.2064 205.433 88.3574 cv
205.433 89.5085 206.778 90.4416 208.437 90.4416 cv
210.096 90.4416 211.441 89.5085 211.441 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
207.65 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
206.455 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
206.61 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
169.45 83.576 mo
179.871 84.189 195.503 85.2311 205.065 86.2732 cv
205.372 86.3345 205.678 86.3958 206.046 86.5797 cv
@
205.801 86.641 mo
206.414 86.8249 li
205.985 86.3345 li
cp
@
205.801 86.641 mo
206.414 86.8249 li
205.985 86.3345 li
f
218.551 88.3574 mo
218.551 87.2064 217.207 86.2732 215.548 86.2732 cv
213.889 86.2732 212.544 87.2064 212.544 88.3574 cv
212.544 89.5085 213.889 90.4416 215.548 90.4416 cv
217.207 90.4416 218.551 89.5085 218.551 88.3574 cv
@
218.551 88.3574 mo
218.551 87.2064 217.207 86.2732 215.548 86.2732 cv
213.889 86.2732 212.544 87.2064 212.544 88.3574 cv
212.544 89.5085 213.889 90.4416 215.548 90.4416 cv
217.207 90.4416 218.551 89.5085 218.551 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
214.761 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
213.566 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
213.721 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
171.289 83.2082 mo
184.959 83.7599 198.568 84.9859 212.176 86.2732 cv
212.483 86.3345 212.789 86.3958 213.157 86.5797 cv
@
212.912 86.641 mo
213.525 86.8249 li
213.096 86.3345 li
cp
@
212.912 86.641 mo
213.525 86.8249 li
213.096 86.3345 li
f
225.662 88.3574 mo
225.662 87.2064 224.317 86.2732 222.658 86.2732 cv
221 86.2732 219.655 87.2064 219.655 88.3574 cv
219.655 89.5085 221 90.4416 222.658 90.4416 cv
224.317 90.4416 225.662 89.5085 225.662 88.3574 cv
@
225.662 88.3574 mo
225.662 87.2064 224.317 86.2732 222.658 86.2732 cv
221 86.2732 219.655 87.2064 219.655 88.3574 cv
219.655 89.5085 221 90.4416 222.658 90.4416 cv
224.317 90.4416 225.662 89.5085 225.662 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
221.872 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
220.677 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
220.832 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
171.473 83.1469 mo
187.472 83.6373 203.41 84.9859 219.287 86.2732 cv
219.593 86.3345 219.961 86.3958 220.268 86.5797 cv
@
220.023 86.641 mo
220.636 86.8249 li
220.206 86.3345 li
cp
@
220.023 86.641 mo
220.636 86.8249 li
220.206 86.3345 li
f
232.773 88.3574 mo
232.773 87.2064 231.428 86.2732 229.769 86.2732 cv
228.11 86.2732 226.766 87.2064 226.766 88.3574 cv
226.766 89.5085 228.11 90.4416 229.769 90.4416 cv
231.428 90.4416 232.773 89.5085 232.773 88.3574 cv
@
232.773 88.3574 mo
232.773 87.2064 231.428 86.2732 229.769 86.2732 cv
228.11 86.2732 226.766 87.2064 226.766 88.3574 cv
226.766 89.5085 228.11 90.4416 229.769 90.4416 cv
231.428 90.4416 232.773 89.5085 232.773 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
228.982 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
227.787 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
227.942 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
171.534 83.1469 mo
189.863 83.576 208.192 84.9246 226.398 86.2732 cv
226.704 86.3345 227.072 86.3958 227.379 86.5797 cv
@
227.133 86.641 mo
227.746 86.8249 li
227.317 86.3345 li
cp
@
227.133 86.641 mo
227.746 86.8249 li
227.317 86.3345 li
f
239.884 88.3574 mo
239.884 87.2064 238.539 86.2732 236.88 86.2732 cv
235.221 86.2732 233.876 87.2064 233.876 88.3574 cv
233.876 89.5085 235.221 90.4416 236.88 90.4416 cv
238.539 90.4416 239.884 89.5085 239.884 88.3574 cv
@
239.884 88.3574 mo
239.884 87.2064 238.539 86.2732 236.88 86.2732 cv
235.221 86.2732 233.876 87.2064 233.876 88.3574 cv
233.876 89.5085 235.221 90.4416 236.88 90.4416 cv
238.539 90.4416 239.884 89.5085 239.884 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
236.093 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
234.898 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
235.053 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
171.596 83.0856 mo
192.254 83.5147 212.912 84.8633 233.509 86.2732 cv
233.815 86.3345 234.183 86.3958 234.489 86.5797 cv
@
234.244 86.641 mo
234.857 86.8249 li
234.428 86.3345 li
cp
@
234.244 86.641 mo
234.857 86.8249 li
234.428 86.3345 li
f
246.995 88.3574 mo
246.995 87.2064 245.65 86.2732 243.991 86.2732 cv
242.332 86.2732 240.987 87.2064 240.987 88.3574 cv
240.987 89.5085 242.332 90.4416 243.991 90.4416 cv
245.65 90.4416 246.995 89.5085 246.995 88.3574 cv
@
246.995 88.3574 mo
246.995 87.2064 245.65 86.2732 243.991 86.2732 cv
242.332 86.2732 240.987 87.2064 240.987 88.3574 cv
240.987 89.5085 242.332 90.4416 243.991 90.4416 cv
245.65 90.4416 246.995 89.5085 246.995 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
243.204 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
242.009 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
242.164 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
171.596 83.0856 mo
194.644 83.4534 217.632 84.802 240.619 86.2732 cv
240.926 86.3345 241.294 86.3958 241.6 86.5797 cv
@
241.355 86.641 mo
241.968 86.8249 li
241.539 86.3345 li
cp
@
241.355 86.641 mo
241.968 86.8249 li
241.539 86.3345 li
f
254.105 88.3574 mo
254.105 87.2064 252.761 86.2732 251.102 86.2732 cv
249.443 86.2732 248.098 87.2064 248.098 88.3574 cv
248.098 89.5085 249.443 90.4416 251.102 90.4416 cv
252.761 90.4416 254.105 89.5085 254.105 88.3574 cv
@
254.105 88.3574 mo
254.105 87.2064 252.761 86.2732 251.102 86.2732 cv
249.443 86.2732 248.098 87.2064 248.098 88.3574 cv
248.098 89.5085 249.443 90.4416 251.102 90.4416 cv
252.761 90.4416 254.105 89.5085 254.105 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
250.315 87.5728 mo
(Sum)
[.477158 .429108 0 ]xsh
249.12 88.5536 mo
(work=2070)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
249.275 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .429108 .285767 .484024 0 ]xsh
171.596 83.0856 mo
197.035 83.4534 222.413 84.802 247.73 86.2732 cv
248.037 86.3345 248.404 86.3958 248.711 86.5797 cv
@
248.466 86.641 mo
249.079 86.8249 li
248.65 86.3345 li
cp
@
248.466 86.641 mo
249.079 86.8249 li
248.65 86.3345 li
f
261.216 88.3574 mo
261.216 87.2064 259.871 86.2732 258.212 86.2732 cv
256.554 86.2732 255.209 87.2064 255.209 88.3574 cv
255.209 89.5085 256.554 90.4416 258.212 90.4416 cv
259.871 90.4416 261.216 89.5085 261.216 88.3574 cv
@
261.216 88.3574 mo
261.216 87.2064 259.871 86.2732 258.212 86.2732 cv
256.554 86.2732 255.209 87.2064 255.209 88.3574 cv
255.209 89.5085 256.554 90.4416 258.212 90.4416 cv
259.871 90.4416 261.216 89.5085 261.216 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
257.426 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
256.231 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
256.386 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
171.596 83.0243 mo
199.426 83.3921 227.133 84.802 254.841 86.2732 cv
255.147 86.3345 255.515 86.3958 255.822 86.5797 cv
@
255.577 86.641 mo
256.19 86.8249 li
255.76 86.3345 li
cp
@
255.577 86.641 mo
256.19 86.8249 li
255.76 86.3345 li
f
268.327 88.3574 mo
268.327 87.2064 266.982 86.2732 265.323 86.2732 cv
263.664 86.2732 262.32 87.2064 262.32 88.3574 cv
262.32 89.5085 263.664 90.4416 265.323 90.4416 cv
266.982 90.4416 268.327 89.5085 268.327 88.3574 cv
@
268.327 88.3574 mo
268.327 87.2064 266.982 86.2732 265.323 86.2732 cv
263.664 86.2732 262.32 87.2064 262.32 88.3574 cv
262.32 89.5085 263.664 90.4416 265.323 90.4416 cv
266.982 90.4416 268.327 89.5085 268.327 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
264.536 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
263.341 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
263.496 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
170.86 83.3308 mo
198.138 84.2503 261.952 86.2732 261.952 86.2732 cv
262.258 86.3345 262.626 86.3958 262.933 86.5797 cv
@
262.687 86.641 mo
263.3 86.8249 li
262.871 86.3345 li
cp
@
262.687 86.641 mo
263.3 86.8249 li
262.871 86.3345 li
f
171.657 93.7518 mo
171.657 93.1424 165.839 92.6484 158.661 92.6484 cv
151.484 92.6484 145.666 93.1424 145.666 93.7518 cv
145.666 94.3612 151.484 94.8552 158.661 94.8552 cv
165.839 94.8552 171.657 94.3612 171.657 93.7518 cv
@
171.657 93.7518 mo
171.657 93.1424 165.839 92.6484 158.661 92.6484 cv
151.484 92.6484 145.666 93.1424 145.666 93.7518 cv
145.666 94.3612 151.484 94.8552 158.661 94.8552 cv
165.839 94.8552 171.657 94.3612 171.657 93.7518 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
146.278 93.9479 mo
(roundrobin\(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\))
[.285767 .429108 .429092 .429108 .429092 .285782 .429092 .429108 .238586 .429092 .285782 .429092 
.214554 .429092 .214554 .429108 .214539 .429108 .214554 .429092 .214554 .429092 .214554 .429108 
.214539 .429108 .214539 .429108 .214554 .429092 .214554 .429092 .214554 .429108 .214554 .429092 
.214554 .429092 .214554 .429108 .214539 .429108 .214539 .429108 .214554 .429092 .214554 .429092 
.214554 .429108 .214554 .429092 .214554 .429092 .214554 .429108 .214539 .429108 .214539 .429108 
.214554 .429092 .214554 .429092 .214554 .429108 .214554 .429092 .214554 .429092 .214554 .429108 
.214539 .429108 0 ]xsh
215.364 99.1462 mo
215.364 97.9952 213.882 97.062 212.054 97.062 cv
210.225 97.062 208.743 97.9952 208.743 99.1462 cv
208.743 100.297 210.225 101.23 212.054 101.23 cv
213.882 101.23 215.364 100.297 215.364 99.1462 cv
@
215.364 99.1462 mo
215.364 97.9952 213.882 97.062 212.054 97.062 cv
210.225 97.062 208.743 97.9952 208.743 99.1462 cv
208.743 100.297 210.225 101.23 212.054 101.23 cv
213.882 101.23 215.364 100.297 215.364 99.1462 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
209.765 98.3615 mo
(FloatToShort)
[.477158 .238586 .429092 .381027 .238586 .524353 .429092 .477158 .429108 .429092 .285782 0 
]xsh
210.072 99.3423 mo
(work=6912)
[.619614 .429092 .285782 .429092 .484024 .429092 .429108 .429092 0 ]xsh
210.441 100.323 mo
(I/O: 1->1)
[.285767 .238586 .619614 .238571 .214554 .429092 .285782 .484024 0 ]xsh
167.059 94.61 mo
178.829 95.836 199.732 97.9202 208.314 98.7784 cv
@
208.192 98.901 mo
208.805 98.8397 li
208.192 98.5945 li
cp
@
208.192 98.901 mo
208.805 98.8397 li
208.192 98.5945 li
f
46.9114 89.8899 mo
47.3405 90.1964 47.8309 90.4416 48.26 90.4416 cv
75.4159 91.7902 122.556 92.9549 145.482 93.4453 cv
@
145.482 93.5679 mo
146.095 93.4453 li
145.482 93.2614 li
cp
@
145.482 93.5679 mo
146.095 93.4453 li
145.482 93.2614 li
f
54.0222 89.8899 mo
54.4513 90.1964 54.9417 90.4416 55.3708 90.4416 cv
80.4425 91.7289 123.843 92.9549 145.604 93.4453 cv
@
145.543 93.5679 mo
146.156 93.4453 li
145.543 93.2614 li
cp
@
145.543 93.5679 mo
146.156 93.4453 li
145.543 93.2614 li
f
61.133 89.8899 mo
61.5621 90.1964 62.0525 90.4416 62.4816 90.4416 cv
85.5917 91.7289 125.253 92.8936 145.666 93.4453 cv
@
145.604 93.5679 mo
146.217 93.4453 li
145.604 93.2614 li
cp
@
145.604 93.5679 mo
146.217 93.4453 li
145.604 93.2614 li
f
68.2438 89.8899 mo
68.6729 90.1964 69.1633 90.4416 69.5924 90.4416 cv
90.6183 91.7289 126.663 92.8323 145.788 93.384 cv
@
145.666 93.5066 mo
146.279 93.384 li
145.666 93.2001 li
cp
@
145.666 93.5066 mo
146.279 93.384 li
145.666 93.2001 li
f
75.3546 89.8899 mo
75.7837 90.1964 76.2741 90.4416 76.7032 90.4416 cv
95.7675 91.6676 128.134 92.8323 145.911 93.384 cv
@
145.788 93.5066 mo
146.401 93.384 li
145.788 93.2001 li
cp
@
145.788 93.5066 mo
146.401 93.384 li
145.788 93.2001 li
f
82.4654 89.8899 mo
82.8945 90.1964 83.3849 90.4416 83.814 90.4416 cv
100.794 91.6676 129.421 92.771 145.85 93.3227 cv
@
145.911 93.4453 mo
146.524 93.3227 li
145.911 93.1388 li
cp
@
145.911 93.4453 mo
146.524 93.3227 li
145.911 93.1388 li
f
89.5762 89.8899 mo
90.0053 90.1964 90.4957 90.4416 90.9248 90.4416 cv
106.005 91.6063 131.138 92.7097 146.156 93.3227 cv
@
146.156 93.4453 mo
146.769 93.3227 li
146.156 93.1388 li
cp
@
146.156 93.4453 mo
146.769 93.3227 li
146.156 93.1388 li
f
96.687 89.8899 mo
97.1161 90.1964 97.6065 90.4416 98.0356 90.4416 cv
111.154 91.545 132.915 92.6484 146.463 93.2614 cv
@
146.401 93.384 mo
147.014 93.2614 li
146.401 93.0775 li
cp
@
146.401 93.384 mo
147.014 93.2614 li
146.401 93.0775 li
f
103.798 89.8899 mo
104.288 90.1964 104.717 90.3803 105.146 90.4416 cv
116.487 91.545 134.877 92.5871 146.83 93.2001 cv
@
146.708 93.3227 mo
147.321 93.2001 li
146.708 93.0162 li
cp
@
146.708 93.3227 mo
147.321 93.2001 li
146.708 93.0162 li
f
110.909 89.8899 mo
111.399 90.1964 111.828 90.3803 112.257 90.4416 cv
121.636 91.4837 136.777 92.4645 147.198 93.0775 cv
@
147.198 93.2001 mo
147.811 93.1388 li
147.198 92.9549 li
cp
@
147.198 93.2001 mo
147.811 93.1388 li
147.198 92.9549 li
f
118.019 89.8899 mo
118.51 90.1964 118.939 90.3803 119.368 90.4416 cv
127.03 91.4224 139.229 92.3419 147.995 93.0162 cv
@
147.934 93.1388 mo
148.547 93.0775 li
147.934 92.8323 li
cp
@
147.934 93.1388 mo
148.547 93.0775 li
147.934 92.8323 li
f
125.191 89.8899 mo
125.621 90.1964 126.111 90.3803 126.479 90.4416 cv
132.425 91.3611 141.681 92.2806 148.731 92.8936 cv
@
148.792 93.0775 mo
149.405 92.9549 li
148.792 92.771 li
cp
@
148.792 93.0775 mo
149.405 92.9549 li
148.792 92.771 li
f
132.302 89.8899 mo
132.731 90.1351 133.222 90.3803 133.59 90.4416 cv
138.064 91.2998 144.869 92.158 150.263 92.8323 cv
@
150.141 92.9549 mo
150.754 92.8936 li
150.141 92.6484 li
cp
@
150.141 92.9549 mo
150.754 92.8936 li
150.141 92.6484 li
f
139.413 89.8286 mo
139.903 90.1351 140.333 90.319 140.7 90.4416 cv
143.704 91.1772 148.24 92.0967 152.041 92.7097 cv
@
151.918 92.8323 mo
152.531 92.771 li
151.918 92.5258 li
cp
@
151.918 92.8323 mo
152.531 92.771 li
151.918 92.5258 li
f
146.585 89.8286 mo
147.014 90.0738 147.443 90.319 147.811 90.4416 cv
149.528 91.1159 152.163 91.9128 154.37 92.5871 cv
@
154.248 92.7097 mo
154.861 92.7097 li
154.309 92.4032 li
cp
@
154.248 92.7097 mo
154.861 92.7097 li
154.309 92.4032 li
f
153.573 89.8899 mo
154.554 90.6255 155.78 91.545 156.761 92.2806 cv
@
156.638 92.3419 mo
157.19 92.6484 li
156.822 92.158 li
cp
@
156.638 92.3419 mo
157.19 92.6484 li
156.822 92.158 li
f
158.661 90.4416 mo
158.661 90.9933 158.661 91.545 158.661 92.0967 cv
@
158.539 92.0354 mo
158.661 92.6484 li
158.845 92.0354 li
cp
@
158.539 92.0354 mo
158.661 92.6484 li
158.845 92.0354 li
f
163.749 89.8899 mo
162.768 90.6255 161.542 91.545 160.562 92.2806 cv
@
160.5 92.158 mo
160.132 92.6484 li
160.684 92.3419 li
cp
@
160.5 92.158 mo
160.132 92.6484 li
160.684 92.3419 li
f
170.737 89.8286 mo
170.308 90.0738 169.879 90.319 169.511 90.4416 cv
167.795 91.1159 165.159 91.9128 162.952 92.5871 cv
@
163.014 92.4032 mo
162.462 92.7097 li
163.075 92.7097 li
cp
@
163.014 92.4032 mo
162.462 92.7097 li
163.075 92.7097 li
f
177.909 89.8899 mo
177.48 90.1351 176.99 90.3803 176.622 90.4416 cv
173.618 91.1772 169.082 92.0967 165.282 92.7097 cv
@
165.404 92.5258 mo
164.791 92.771 li
165.404 92.8323 li
cp
@
165.404 92.5258 mo
164.791 92.771 li
165.404 92.8323 li
f
185.02 89.8899 mo
184.591 90.1351 184.162 90.3803 183.733 90.4416 cv
179.319 91.2998 172.515 92.158 167.059 92.8323 cv
@
167.182 92.6484 mo
166.569 92.8936 li
167.182 92.9549 li
cp
@
167.182 92.6484 mo
166.569 92.8936 li
167.182 92.9549 li
f
192.192 89.8899 mo
191.702 90.1964 191.273 90.3803 190.844 90.4416 cv
184.898 91.3611 175.457 92.2806 168.347 92.8936 cv
@
168.531 92.7097 mo
167.918 92.9549 li
168.531 93.0162 li
cp
@
168.531 92.7097 mo
167.918 92.9549 li
168.531 93.0162 li
f
199.303 89.8899 mo
198.874 90.1964 198.384 90.3803 197.955 90.4416 cv
190.353 91.4224 178.093 92.3419 169.389 93.0162 cv
@
169.45 92.8323 mo
168.837 93.0775 li
169.45 93.1388 li
cp
@
169.45 92.8323 mo
168.837 93.0775 li
169.45 93.1388 li
f
206.414 89.8899 mo
205.985 90.1964 205.494 90.3803 205.065 90.4416 cv
195.625 91.4837 180.361 92.5258 169.94 93.1388 cv
@
170.124 92.9549 mo
169.511 93.1388 li
170.124 93.2614 li
cp
@
170.124 92.9549 mo
169.511 93.1388 li
170.124 93.2614 li
f
213.525 89.8899 mo
213.096 90.1964 212.605 90.3803 212.176 90.4416 cv
200.897 91.545 182.446 92.5871 170.431 93.2001 cv
@
170.553 93.0162 mo
169.94 93.2001 li
170.553 93.3227 li
cp
@
170.553 93.0162 mo
169.94 93.2001 li
170.553 93.3227 li
f
220.697 89.9512 mo
220.206 90.1964 219.716 90.4416 219.287 90.4416 cv
206.169 91.545 184.407 92.6484 170.86 93.2614 cv
@
170.921 93.0775 mo
170.308 93.2614 li
170.921 93.384 li
cp
@
170.921 93.0775 mo
170.308 93.2614 li
170.921 93.384 li
f
227.808 89.9512 mo
227.317 90.1964 226.827 90.4416 226.398 90.4416 cv
211.379 91.6063 186.185 92.7097 171.166 93.3227 cv
@
171.166 93.1388 mo
170.553 93.3227 li
171.166 93.4453 li
cp
@
171.166 93.1388 mo
170.553 93.3227 li
171.166 93.4453 li
f
234.918 89.9512 mo
234.428 90.1964 233.938 90.4416 233.509 90.4416 cv
216.467 91.6676 187.656 92.771 171.228 93.3227 cv
@
171.412 93.1388 mo
170.799 93.3227 li
171.412 93.4453 li
cp
@
171.412 93.1388 mo
170.799 93.3227 li
171.412 93.4453 li
f
242.029 89.9512 mo
241.539 90.1964 241.048 90.4416 240.619 90.4416 cv
221.616 91.6676 189.189 92.8323 171.412 93.384 cv
@
171.534 93.2001 mo
170.921 93.384 li
171.534 93.5066 li
cp
@
171.534 93.2001 mo
170.921 93.384 li
171.534 93.5066 li
f
249.14 89.9512 mo
248.65 90.1964 248.159 90.4416 247.73 90.4416 cv
226.704 91.7289 190.66 92.8323 171.534 93.384 cv
@
171.657 93.2001 mo
171.044 93.384 li
171.657 93.5066 li
cp
@
171.657 93.2001 mo
171.044 93.384 li
171.657 93.5066 li
f
256.251 89.9512 mo
255.76 90.1964 255.27 90.4416 254.841 90.4416 cv
231.792 91.7289 192.07 92.8936 171.657 93.4453 cv
@
171.718 93.2614 mo
171.105 93.4453 li
171.718 93.5679 li
cp
@
171.718 93.2614 mo
171.105 93.4453 li
171.718 93.5679 li
f
263.362 89.9512 mo
262.871 90.1964 262.381 90.4416 261.952 90.4416 cv
236.88 91.7289 193.48 92.9549 171.718 93.4453 cv
@
171.779 93.2614 mo
171.166 93.4453 li
171.779 93.5679 li
cp
@
171.779 93.2614 mo
171.166 93.4453 li
171.779 93.5679 li
f
215.364 99.4527 mo
225.356 100.433 255.393 103.192 266.181 104.173 cv
@
266.181 104.295 mo
266.794 104.234 li
266.181 104.05 li
cp
@
266.181 104.295 mo
266.794 104.234 li
266.181 104.05 li
f
279.913 22.889 mo
279.913 21.738 278.486 20.805 276.725 20.805 cv
274.965 20.805 273.537 21.738 273.537 22.889 cv
273.537 24.04 274.965 24.973 276.725 24.973 cv
278.486 24.973 279.913 24.04 279.913 22.889 cv
@
279.913 22.889 mo
279.913 21.738 278.486 20.805 276.725 20.805 cv
274.965 20.805 273.537 21.738 273.537 22.889 cv
273.537 24.04 274.965 24.973 276.725 24.973 cv
278.486 24.973 279.913 24.04 279.913 22.889 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
275.343 22.104 mo
(IMDCT)
[.285767 .762939 .619598 .572418 0 ]xsh
274.529 23.0848 mo
(work=26464)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 .429077 0 ]xsh
274.684 24.0656 mo
(I/O: 19->36)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 .429077 0 ]xsh
276.173 18.598 mo
276.296 19.15 276.357 19.763 276.419 20.376 cv
@
276.235 20.192 mo
276.48 20.805 li
276.541 20.192 li
cp
@
276.235 20.192 mo
276.48 20.805 li
276.541 20.192 li
f
323.374 30 mo
323.374 28.476 320.41 27.241 316.754 27.241 cv
313.098 27.241 310.134 28.476 310.134 30 cv
310.134 31.523 313.098 32.758 316.754 32.758 cv
320.41 32.758 323.374 31.523 323.374 30 cv
@
323.374 30 mo
323.374 28.476 320.41 27.241 316.754 27.241 cv
313.098 27.241 310.134 28.476 310.134 30 cv
310.134 31.523 313.098 32.758 316.754 32.758 cv
320.41 32.758 323.374 31.523 323.374 30 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
314.656 28.725 mo
(Anonymous)
[.619598 .429108 .429108 .429108 .429077 .667694 .429108 .429077 0 ]xsh
314.557 29.7058 mo
(work=12096)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 .429077 0 ]xsh
314.712 30.6866 mo
(I/O: 36->18)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 .429077 0 ]xsh
311.367 31.6674 mo
(*** PEEKS 1134 AHEAD ***)
[.429108 .429077 .429108 .214569 .477142 .524353 .524353 .619629 .477142 .214539 .429108 .429108 
.429108 .429077 .214569 .619598 .619598 .524353 .619629 .619598 .214539 .429108 .429108 0 
]xsh
279.79 23.441 mo
286.288 24.605 301.368 27.241 310.134 28.774 cv
@
310.011 28.896 mo
310.624 28.896 li
310.072 28.59 li
cp
@
310.011 28.896 mo
310.624 28.896 li
310.072 28.59 li
f
365.671 36.13 mo
365.671 35.52 361.857 35.026 357.151 35.026 cv
352.445 35.026 348.63 35.52 348.63 36.13 cv
348.63 36.739 352.445 37.233 357.151 37.233 cv
361.857 37.233 365.671 36.739 365.671 36.13 cv
@
365.671 36.13 mo
365.671 35.52 361.857 35.026 357.151 35.026 cv
352.445 35.026 348.63 35.52 348.63 36.13 cv
348.63 36.739 352.445 37.233 357.151 37.233 cv
361.857 37.233 365.671 36.739 365.671 36.13 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
349.273 36.326 mo
(roundrobin\(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 
.214569 .429077 .214569 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 
.214539 .429108 .214569 .429077 .214569 .429077 .214569 .429077 .214569 .429108 0 ]xsh
323.007 30.919 mo
330.669 32.145 343.603 34.107 351.143 35.21 cv
@
350.959 35.333 mo
351.572 35.272 li
350.959 35.026 li
cp
@
350.959 35.333 mo
351.572 35.272 li
350.959 35.026 li
f
278.012 45.938 mo
278.012 44.787 276.777 43.854 275.254 43.854 cv
273.73 43.854 272.495 44.787 272.495 45.938 cv
272.495 47.089 273.73 48.022 275.254 48.022 cv
276.777 48.022 278.012 47.089 278.012 45.938 cv
@
278.012 45.938 mo
278.012 44.787 276.777 43.854 275.254 43.854 cv
273.73 43.854 272.495 44.787 272.495 45.938 cv
272.495 47.089 273.73 48.022 275.254 48.022 cv
276.777 48.022 278.012 47.089 278.012 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
273.919 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
273.486 46.1338 mo
(work=192)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
273.641 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
348.691 36.252 mo
330.546 36.498 288.74 37.295 278.625 38.459 cv
277.032 38.704 276.112 41.34 275.683 43.425 cv
@
275.56 43.241 mo
275.56 43.854 li
275.867 43.302 li
cp
@
275.56 43.241 mo
275.56 43.854 li
275.867 43.302 li
f
291.437 40.543 mo
291.437 39.934 289.928 39.44 288.066 39.44 cv
286.204 39.44 284.694 39.934 284.694 40.543 cv
284.694 41.153 286.204 41.647 288.066 41.647 cv
289.928 41.647 291.437 41.153 291.437 40.543 cv
@
291.437 40.543 mo
291.437 39.934 289.928 39.44 288.066 39.44 cv
286.204 39.44 284.694 39.934 284.694 40.543 cv
284.694 41.153 286.204 41.647 288.066 41.647 cv
289.928 41.647 291.437 41.153 291.437 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
285.337 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
348.875 36.436 mo
332.14 36.988 295.483 38.214 291.253 38.459 cv
290.763 38.521 290.15 38.827 289.598 39.256 cv
@
289.659 39.011 mo
289.23 39.501 li
289.843 39.317 li
cp
@
289.659 39.011 mo
289.23 39.501 li
289.843 39.317 li
f
298.487 45.938 mo
298.487 44.787 297.252 43.854 295.728 43.854 cv
294.205 43.854 292.97 44.787 292.97 45.938 cv
292.97 47.089 294.205 48.022 295.728 48.022 cv
297.252 48.022 298.487 47.089 298.487 45.938 cv
@
298.487 45.938 mo
298.487 44.787 297.252 43.854 295.728 43.854 cv
294.205 43.854 292.97 44.787 292.97 45.938 cv
292.97 47.089 294.205 48.022 295.728 48.022 cv
297.252 48.022 298.487 47.089 298.487 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
294.393 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
293.96 46.1338 mo
(work=192)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
294.115 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
348.998 36.436 mo
332.998 37.111 299.1 38.459 299.1 38.459 cv
297.506 38.766 296.586 41.402 296.157 43.425 cv
@
296.035 43.241 mo
296.035 43.854 li
296.341 43.302 li
cp
@
296.035 43.241 mo
296.035 43.854 li
296.341 43.302 li
f
311.911 40.543 mo
311.911 39.934 310.402 39.44 308.54 39.44 cv
306.678 39.44 305.168 39.934 305.168 40.543 cv
305.168 41.153 306.678 41.647 308.54 41.647 cv
310.402 41.647 311.911 41.153 311.911 40.543 cv
@
311.911 40.543 mo
311.911 39.934 310.402 39.44 308.54 39.44 cv
306.678 39.44 305.168 39.934 305.168 40.543 cv
305.168 41.153 306.678 41.647 308.54 41.647 cv
310.402 41.647 311.911 41.153 311.911 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
305.811 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
348.936 36.436 mo
338.883 36.804 321.903 37.54 311.727 38.459 cv
311.237 38.521 310.624 38.827 310.072 39.256 cv
@
310.134 39.011 mo
309.704 39.501 li
310.317 39.317 li
cp
@
310.134 39.011 mo
309.704 39.501 li
310.317 39.317 li
f
318.961 45.938 mo
318.961 44.787 317.726 43.854 316.202 43.854 cv
314.679 43.854 313.444 44.787 313.444 45.938 cv
313.444 47.089 314.679 48.022 316.202 48.022 cv
317.726 48.022 318.961 47.089 318.961 45.938 cv
@
318.961 45.938 mo
318.961 44.787 317.726 43.854 316.202 43.854 cv
314.679 43.854 313.444 44.787 313.444 45.938 cv
313.444 47.089 314.679 48.022 316.202 48.022 cv
317.726 48.022 318.961 47.089 318.961 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
314.867 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
314.434 46.1338 mo
(work=192)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
314.589 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
348.875 36.375 mo
339.006 36.498 329.137 36.191 319.574 38.459 cv
318.041 38.888 317.122 41.463 316.693 43.425 cv
@
316.57 43.241 mo
316.57 43.854 li
316.877 43.302 li
cp
@
316.57 43.241 mo
316.57 43.854 li
316.877 43.302 li
f
332.385 40.543 mo
332.385 39.934 330.876 39.44 329.014 39.44 cv
327.152 39.44 325.642 39.934 325.642 40.543 cv
325.642 41.153 327.152 41.647 329.014 41.647 cv
330.876 41.647 332.385 41.153 332.385 40.543 cv
@
332.385 40.543 mo
332.385 39.934 330.876 39.44 329.014 39.44 cv
327.152 39.44 325.642 39.934 325.642 40.543 cv
325.642 41.153 327.152 41.647 329.014 41.647 cv
330.876 41.647 332.385 41.153 332.385 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
326.285 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
349.672 36.682 mo
344.155 37.111 336.86 37.724 332.202 38.459 cv
331.772 38.582 331.159 38.888 330.608 39.256 cv
@
330.669 39.011 mo
330.24 39.501 li
330.853 39.317 li
cp
@
330.669 39.011 mo
330.24 39.501 li
330.853 39.317 li
f
339.435 45.938 mo
339.435 44.787 338.2 43.854 336.676 43.854 cv
335.153 43.854 333.918 44.787 333.918 45.938 cv
333.918 47.089 335.153 48.022 336.676 48.022 cv
338.2 48.022 339.435 47.089 339.435 45.938 cv
@
339.435 45.938 mo
339.435 44.787 338.2 43.854 336.676 43.854 cv
335.153 43.854 333.918 44.787 333.918 45.938 cv
333.918 47.089 335.153 48.022 336.676 48.022 cv
338.2 48.022 339.435 47.089 339.435 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
335.342 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
334.909 46.1338 mo
(work=192)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
335.064 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
350.162 36.743 mo
346.055 37.233 341.458 37.785 340.048 38.459 cv
338.638 39.134 337.78 41.402 337.289 43.241 cv
@
337.106 43.241 mo
337.106 43.854 li
337.412 43.302 li
cp
@
337.106 43.241 mo
337.106 43.854 li
337.412 43.302 li
f
352.86 40.543 mo
352.86 39.934 351.35 39.44 349.488 39.44 cv
347.626 39.44 346.117 39.934 346.117 40.543 cv
346.117 41.153 347.626 41.647 349.488 41.647 cv
351.35 41.647 352.86 41.153 352.86 40.543 cv
@
352.86 40.543 mo
352.86 39.934 351.35 39.44 349.488 39.44 cv
347.626 39.44 346.117 39.934 346.117 40.543 cv
346.117 41.153 347.626 41.647 349.488 41.647 cv
351.35 41.647 352.86 41.153 352.86 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
346.759 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
355.066 37.233 mo
354.208 37.662 353.289 38.091 352.676 38.459 cv
352.308 38.704 351.818 39.011 351.388 39.317 cv
@
351.45 39.072 mo
351.021 39.563 li
351.634 39.379 li
cp
@
351.45 39.072 mo
351.021 39.563 li
351.634 39.379 li
f
359.909 45.938 mo
359.909 44.787 358.674 43.854 357.151 43.854 cv
355.627 43.854 354.392 44.787 354.392 45.938 cv
354.392 47.089 355.627 48.022 357.151 48.022 cv
358.674 48.022 359.909 47.089 359.909 45.938 cv
@
359.909 45.938 mo
359.909 44.787 358.674 43.854 357.151 43.854 cv
355.627 43.854 354.392 44.787 354.392 45.938 cv
354.392 47.089 355.627 48.022 357.151 48.022 cv
358.674 48.022 359.909 47.089 359.909 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
355.816 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
355.383 46.1338 mo
(work=192)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
355.538 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
357.151 37.233 mo
357.151 38.643 357.151 41.218 357.151 43.241 cv
@
357.028 43.241 mo
357.151 43.854 li
357.335 43.241 li
cp
@
357.028 43.241 mo
357.151 43.854 li
357.335 43.241 li
f
368.185 40.543 mo
368.185 39.934 366.675 39.44 364.813 39.44 cv
362.951 39.44 361.442 39.934 361.442 40.543 cv
361.442 41.153 362.951 41.647 364.813 41.647 cv
366.675 41.647 368.185 41.153 368.185 40.543 cv
@
368.185 40.543 mo
368.185 39.934 366.675 39.44 364.813 39.44 cv
362.951 39.44 361.442 39.934 361.442 40.543 cv
361.442 41.153 362.951 41.647 364.813 41.647 cv
366.675 41.647 368.185 41.153 368.185 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
362.084 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
359.296 37.233 mo
360.093 37.662 361.013 38.091 361.626 38.459 cv
361.993 38.643 362.361 38.888 362.79 39.195 cv
@
362.729 39.379 mo
363.342 39.563 li
362.913 39.072 li
cp
@
362.729 39.379 mo
363.342 39.563 li
362.913 39.072 li
f
380.383 52.313 mo
380.383 51.162 379.148 50.2288 377.625 50.2288 cv
376.101 50.2288 374.866 51.162 374.866 52.313 cv
374.866 53.4641 376.101 54.3972 377.625 54.3972 cv
379.148 54.3972 380.383 53.4641 380.383 52.313 cv
@
380.383 52.313 mo
380.383 51.162 379.148 50.2288 377.625 50.2288 cv
376.101 50.2288 374.866 51.162 374.866 52.313 cv
374.866 53.4641 376.101 54.3972 377.625 54.3972 cv
379.148 54.3972 380.383 53.4641 380.383 52.313 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
376.29 51.5284 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
375.857 52.5092 mo
(work=192)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
376.012 53.49 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
365.549 36.314 mo
368.798 36.314 371.863 36.559 374.253 38.459 cv
376.828 40.482 377.441 46.367 377.625 49.7997 cv
@
377.502 49.6158 mo
377.625 50.2288 li
377.809 49.6158 li
cp
@
377.502 49.6158 mo
377.625 50.2288 li
377.809 49.6158 li
f
388.659 40.543 mo
388.659 39.934 387.149 39.44 385.287 39.44 cv
383.425 39.44 381.916 39.934 381.916 40.543 cv
381.916 41.153 383.425 41.647 385.287 41.647 cv
387.149 41.647 388.659 41.153 388.659 40.543 cv
@
388.659 40.543 mo
388.659 39.934 387.149 39.44 385.287 39.44 cv
383.425 39.44 381.916 39.934 381.916 40.543 cv
381.916 41.153 383.425 41.647 385.287 41.647 cv
387.149 41.647 388.659 41.153 388.659 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
382.558 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
364.629 36.682 mo
370.146 37.111 377.502 37.724 382.1 38.459 cv
382.529 38.521 383.081 38.827 383.571 39.134 cv
@
383.51 39.256 mo
384.061 39.501 li
383.694 39.011 li
cp
@
383.51 39.256 mo
384.061 39.501 li
383.694 39.011 li
f
400.858 52.313 mo
400.858 51.162 399.623 50.2288 398.099 50.2288 cv
396.576 50.2288 395.341 51.162 395.341 52.313 cv
395.341 53.4641 396.576 54.3972 398.099 54.3972 cv
399.623 54.3972 400.858 53.4641 400.858 52.313 cv
@
400.858 52.313 mo
400.858 51.162 399.623 50.2288 398.099 50.2288 cv
396.576 50.2288 395.341 51.162 395.341 52.313 cv
395.341 53.4641 396.576 54.3972 398.099 54.3972 cv
399.623 54.3972 400.858 53.4641 400.858 52.313 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
396.764 51.5284 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
396.331 52.5092 mo
(work=192)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
396.486 53.49 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
365.549 36.314 mo
375.602 36.498 390.437 36.804 394.728 38.459 cv
397.915 39.685 398.283 46.06 398.222 49.7384 cv
@
398.099 49.6158 mo
398.222 50.2288 li
398.406 49.6158 li
cp
@
398.099 49.6158 mo
398.222 50.2288 li
398.406 49.6158 li
f
409.133 40.543 mo
409.133 39.934 407.624 39.44 405.762 39.44 cv
403.9 39.44 402.39 39.934 402.39 40.543 cv
402.39 41.153 403.9 41.647 405.762 41.647 cv
407.624 41.647 409.133 41.153 409.133 40.543 cv
@
409.133 40.543 mo
409.133 39.934 407.624 39.44 405.762 39.44 cv
403.9 39.44 402.39 39.934 402.39 40.543 cv
402.39 41.153 403.9 41.647 405.762 41.647 cv
407.624 41.647 409.133 41.153 409.133 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
403.033 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
365.365 36.436 mo
375.418 36.804 392.459 37.54 402.574 38.459 cv
403.003 38.521 403.555 38.766 404.106 39.134 cv
@
404.045 39.256 mo
404.597 39.501 li
404.229 39.011 li
cp
@
404.045 39.256 mo
404.597 39.501 li
404.229 39.011 li
f
421.332 52.313 mo
421.332 51.162 420.097 50.2288 418.573 50.2288 cv
417.05 50.2288 415.815 51.162 415.815 52.313 cv
415.815 53.4641 417.05 54.3972 418.573 54.3972 cv
420.097 54.3972 421.332 53.4641 421.332 52.313 cv
@
421.332 52.313 mo
421.332 51.162 420.097 50.2288 418.573 50.2288 cv
417.05 50.2288 415.815 51.162 415.815 52.313 cv
415.815 53.4641 417.05 54.3972 418.573 54.3972 cv
420.097 54.3972 421.332 53.4641 421.332 52.313 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
417.238 51.5284 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
416.805 52.5092 mo
(work=192)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
416.96 53.49 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
365.304 36.436 mo
381.303 37.111 415.202 38.459 415.202 38.459 cv
418.512 39.317 418.818 45.938 418.696 49.7384 cv
@
418.573 49.6158 mo
418.696 50.2288 li
418.88 49.6158 li
cp
@
418.573 49.6158 mo
418.696 50.2288 li
418.88 49.6158 li
f
429.607 40.543 mo
429.607 39.934 428.098 39.44 426.236 39.44 cv
424.374 39.44 422.864 39.934 422.864 40.543 cv
422.864 41.153 424.374 41.647 426.236 41.647 cv
428.098 41.647 429.607 41.153 429.607 40.543 cv
@
429.607 40.543 mo
429.607 39.934 428.098 39.44 426.236 39.44 cv
424.374 39.44 422.864 39.934 422.864 40.543 cv
422.864 41.153 424.374 41.647 426.236 41.647 cv
428.098 41.647 429.607 41.153 429.607 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
423.507 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
365.426 36.436 mo
382.161 36.988 418.88 38.214 423.048 38.459 cv
423.477 38.521 424.029 38.766 424.581 39.134 cv
@
424.519 39.256 mo
425.071 39.501 li
424.703 39.011 li
cp
@
424.519 39.256 mo
425.071 39.501 li
424.703 39.011 li
f
441.806 52.313 mo
441.806 51.162 440.571 50.2288 439.047 50.2288 cv
437.524 50.2288 436.289 51.162 436.289 52.313 cv
436.289 53.4641 437.524 54.3972 439.047 54.3972 cv
440.571 54.3972 441.806 53.4641 441.806 52.313 cv
@
441.806 52.313 mo
441.806 51.162 440.571 50.2288 439.047 50.2288 cv
437.524 50.2288 436.289 51.162 436.289 52.313 cv
436.289 53.4641 437.524 54.3972 439.047 54.3972 cv
440.571 54.3972 441.806 53.4641 441.806 52.313 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
437.713 51.5284 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
437.28 52.5092 mo
(work=192)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
437.435 53.49 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
365.61 36.252 mo
385.349 36.436 424.826 36.314 435.676 38.459 cv
438.986 39.134 439.354 45.938 439.17 49.7384 cv
@
439.047 49.6158 mo
439.17 50.2288 li
439.354 49.6158 li
cp
@
439.047 49.6158 mo
439.17 50.2288 li
439.354 49.6158 li
f
450.081 40.543 mo
450.081 39.934 448.572 39.44 446.71 39.44 cv
444.848 39.44 443.338 39.934 443.338 40.543 cv
443.338 41.153 444.848 41.647 446.71 41.647 cv
448.572 41.647 450.081 41.153 450.081 40.543 cv
@
450.081 40.543 mo
450.081 39.934 448.572 39.44 446.71 39.44 cv
444.848 39.44 443.338 39.934 443.338 40.543 cv
443.338 41.153 444.848 41.647 446.71 41.647 cv
448.572 41.647 450.081 41.153 450.081 40.543 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
443.981 40.74 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
365.549 36.314 mo
384.981 36.804 432.182 37.908 443.522 38.459 cv
443.951 38.521 444.503 38.766 445.055 39.134 cv
@
444.994 39.256 mo
445.545 39.501 li
445.177 39.011 li
cp
@
444.994 39.256 mo
445.545 39.501 li
445.177 39.011 li
f
377.747 57.7074 mo
377.747 57.098 372.204 56.604 365.365 56.604 cv
358.526 56.604 352.982 57.098 352.982 57.7074 cv
352.982 58.3168 358.526 58.8108 365.365 58.8108 cv
372.204 58.8108 377.747 58.3168 377.747 57.7074 cv
@
377.747 57.7074 mo
377.747 57.098 372.204 56.604 365.365 56.604 cv
358.526 56.604 352.982 57.098 352.982 57.7074 cv
352.982 58.3168 358.526 58.8108 365.365 58.8108 cv
372.204 58.8108 377.747 58.3168 377.747 57.7074 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
353.625 57.9036 mo
(roundrobin\(32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.429077 .214569 .429077 .429108 .214569 .429077 .429108 .214539 .429108 .429108 .214539 .429108 
.429108 .214539 .429108 .429108 .214539 .429108 .429077 .214569 .429108 .429077 .214569 .429108 
.429077 .214569 .429077 .429108 .214539 .429108 .429108 .214539 .429108 .429108 .214539 .429108 
.429108 .214539 .429108 .429108 .214539 .429108 .429108 .214539 .429108 .429077 .214569 .429077 
.429108 .214569 .429077 .429108 0 ]xsh
374.682 63.347 mo
374.682 62.196 372.514 61.2628 369.84 61.2628 cv
367.165 61.2628 364.997 62.196 364.997 63.347 cv
364.997 64.4981 367.165 65.4312 369.84 65.4312 cv
372.514 65.4312 374.682 64.4981 374.682 63.347 cv
@
374.682 63.347 mo
374.682 62.196 372.514 61.2628 369.84 61.2628 cv
367.165 61.2628 364.997 62.196 364.997 63.347 cv
364.997 64.4981 367.165 65.4312 369.84 65.4312 cv
372.514 65.4312 374.682 64.4981 374.682 63.347 cv
.843 .18 .157 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
366.002 62.5624 mo
(MatrixVectorMultiply)
[.762939 .381012 .238586 .285767 .238586 .429108 .619598 .381042 .381012 .238586 .429108 .285767 
.762939 .429108 .238556 .238586 .238586 .429108 .238556 0 ]xsh
367.429 63.5432 mo
(work=414144)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 .429077 .429108 0 ]xsh
367.798 64.524 mo
(I/O: 32->64)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 .429077 0 ]xsh
366.223 58.8108 mo
366.713 59.4238 367.326 60.1594 367.878 60.895 cv
@
367.756 60.9563 mo
368.246 61.3854 li
368.001 60.7724 li
cp
@
367.756 60.9563 mo
368.246 61.3854 li
368.001 60.7724 li
f
275.438 48.022 mo
275.806 50.474 276.602 54.152 278.625 54.3972 cv
298.916 57.0944 333.734 57.6461 352.492 57.7074 cv
@
352.369 57.83 mo
352.982 57.7074 li
352.369 57.5235 li
cp
@
352.369 57.83 mo
352.982 57.7074 li
352.369 57.5235 li
f
284.817 45.938 mo
284.817 44.787 283.637 43.854 282.181 43.854 cv
280.725 43.854 279.545 44.787 279.545 45.938 cv
279.545 47.089 280.725 48.022 282.181 48.022 cv
283.637 48.022 284.817 47.089 284.817 45.938 cv
@
284.817 45.938 mo
284.817 44.787 283.637 43.854 282.181 43.854 cv
280.725 43.854 279.545 44.787 279.545 45.938 cv
279.545 47.089 280.725 48.022 282.181 48.022 cv
283.637 48.022 284.817 47.089 284.817 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
280.846 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
280.628 46.1338 mo
(work=96)
[.619598 .429108 .285767 .429108 .484009 .429108 0 ]xsh
280.568 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
286.901 41.586 mo
286.165 42.26 285.246 43.179 284.326 43.915 cv
@
284.204 43.792 mo
283.897 44.344 li
284.449 44.038 li
cp
@
284.204 43.792 mo
283.897 44.344 li
284.449 44.038 li
f
291.437 45.938 mo
291.437 44.787 290.202 43.854 288.679 43.854 cv
287.155 43.854 285.92 44.787 285.92 45.938 cv
285.92 47.089 287.155 48.022 288.679 48.022 cv
290.202 48.022 291.437 47.089 291.437 45.938 cv
@
291.437 45.938 mo
291.437 44.787 290.202 43.854 288.679 43.854 cv
287.155 43.854 285.92 44.787 285.92 45.938 cv
285.92 47.089 287.155 48.022 288.679 48.022 cv
290.202 48.022 291.437 47.089 291.437 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
287.416 45.153 mo
(Inverse)
[.285767 .429108 .429108 .381012 .285797 .333832 0 ]xsh
286.911 46.1338 mo
(work=128)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
287.066 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
288.188 41.647 mo
288.249 42.137 288.311 42.812 288.372 43.425 cv
@
288.188 43.241 mo
288.433 43.854 li
288.495 43.241 li
cp
@
288.188 43.241 mo
288.433 43.854 li
288.495 43.241 li
f
291.437 52.313 mo
291.437 51.7036 289.928 51.2096 288.066 51.2096 cv
286.204 51.2096 284.694 51.7036 284.694 52.313 cv
284.694 52.9224 286.204 53.4164 288.066 53.4164 cv
289.928 53.4164 291.437 52.9224 291.437 52.313 cv
@
291.437 52.313 mo
291.437 51.7036 289.928 51.2096 288.066 51.2096 cv
286.204 51.2096 284.694 51.7036 284.694 52.313 cv
284.694 52.9224 286.204 53.4164 288.066 53.4164 cv
289.928 53.4164 291.437 52.9224 291.437 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
285.337 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
289.23 53.3551 mo
289.843 53.8455 290.64 54.3972 291.253 54.3972 cv
308.233 55.6232 336.86 56.7266 353.105 57.3396 cv
@
353.166 57.4622 mo
353.779 57.3396 li
353.166 57.1557 li
cp
@
353.166 57.4622 mo
353.779 57.3396 li
353.166 57.1557 li
f
283.713 47.654 mo
284.694 48.635 285.859 49.9223 286.717 50.9031 cv
@
286.533 50.9644 mo
287.085 51.2709 li
286.778 50.7192 li
cp
@
286.533 50.9644 mo
287.085 51.2709 li
286.778 50.7192 li
f
288.495 48.022 mo
288.372 48.88 288.311 49.7997 288.249 50.6579 cv
@
288.127 50.5966 mo
288.188 51.2096 li
288.433 50.5966 li
cp
@
288.127 50.5966 mo
288.188 51.2096 li
288.433 50.5966 li
f
295.973 48.022 mo
296.28 50.4127 297.138 54.0907 299.1 54.3972 cv
303.023 55.1328 335.634 56.5427 353.534 57.2783 cv
@
353.411 57.4009 mo
354.024 57.2783 li
353.411 57.0944 li
cp
@
353.411 57.4009 mo
354.024 57.2783 li
353.411 57.0944 li
f
305.291 45.938 mo
305.291 44.787 304.111 43.854 302.655 43.854 cv
301.199 43.854 300.019 44.787 300.019 45.938 cv
300.019 47.089 301.199 48.022 302.655 48.022 cv
304.111 48.022 305.291 47.089 305.291 45.938 cv
@
305.291 45.938 mo
305.291 44.787 304.111 43.854 302.655 43.854 cv
301.199 43.854 300.019 44.787 300.019 45.938 cv
300.019 47.089 301.199 48.022 302.655 48.022 cv
304.111 48.022 305.291 47.089 305.291 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
301.32 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
301.102 46.1338 mo
(work=96)
[.619598 .429108 .285767 .429108 .484009 .429108 0 ]xsh
301.042 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
307.375 41.586 mo
306.639 42.26 305.72 43.179 304.8 43.915 cv
@
304.678 43.792 mo
304.371 44.344 li
304.923 44.038 li
cp
@
304.678 43.792 mo
304.371 44.344 li
304.923 44.038 li
f
311.911 45.938 mo
311.911 44.787 310.676 43.854 309.153 43.854 cv
307.629 43.854 306.394 44.787 306.394 45.938 cv
306.394 47.089 307.629 48.022 309.153 48.022 cv
310.676 48.022 311.911 47.089 311.911 45.938 cv
@
311.911 45.938 mo
311.911 44.787 310.676 43.854 309.153 43.854 cv
307.629 43.854 306.394 44.787 306.394 45.938 cv
306.394 47.089 307.629 48.022 309.153 48.022 cv
310.676 48.022 311.911 47.089 311.911 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
307.89 45.153 mo
(Inverse)
[.285767 .429108 .429108 .381012 .285797 .333832 0 ]xsh
307.385 46.1338 mo
(work=128)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
307.54 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
308.662 41.647 mo
308.724 42.137 308.785 42.812 308.846 43.425 cv
@
308.662 43.241 mo
308.908 43.854 li
308.969 43.241 li
cp
@
308.662 43.241 mo
308.908 43.854 li
308.969 43.241 li
f
311.911 52.313 mo
311.911 51.7036 310.402 51.2096 308.54 51.2096 cv
306.678 51.2096 305.168 51.7036 305.168 52.313 cv
305.168 52.9224 306.678 53.4164 308.54 53.4164 cv
310.402 53.4164 311.911 52.9224 311.911 52.313 cv
@
311.911 52.313 mo
311.911 51.7036 310.402 51.2096 308.54 51.2096 cv
306.678 51.2096 305.168 51.7036 305.168 52.313 cv
305.168 52.9224 306.678 53.4164 308.54 53.4164 cv
310.402 53.4164 311.911 52.9224 311.911 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
305.811 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
309.704 53.3551 mo
310.317 53.8455 311.114 54.3972 311.727 54.3972 cv
323.19 55.5006 341.948 56.5427 353.963 57.1557 cv
@
353.84 57.2783 mo
354.453 57.1557 li
353.84 56.9718 li
cp
@
353.84 57.2783 mo
354.453 57.1557 li
353.84 56.9718 li
f
304.187 47.654 mo
305.168 48.635 306.333 49.9223 307.191 50.9031 cv
@
307.007 50.9644 mo
307.559 51.2709 li
307.252 50.7192 li
cp
@
307.007 50.9644 mo
307.559 51.2709 li
307.252 50.7192 li
f
308.969 48.022 mo
308.846 48.88 308.785 49.7997 308.724 50.6579 cv
@
308.601 50.5966 mo
308.662 51.2096 li
308.908 50.5966 li
cp
@
308.601 50.5966 mo
308.662 51.2096 li
308.908 50.5966 li
f
316.447 48.022 mo
316.754 50.4127 317.612 53.9681 319.574 54.3972 cv
322.026 55.0102 341.764 56.2362 354.515 57.0331 cv
@
354.392 57.1557 mo
355.005 57.0944 li
354.392 56.8492 li
cp
@
354.392 57.1557 mo
355.005 57.0944 li
354.392 56.8492 li
f
325.765 45.938 mo
325.765 44.787 324.585 43.854 323.129 43.854 cv
321.673 43.854 320.493 44.787 320.493 45.938 cv
320.493 47.089 321.673 48.022 323.129 48.022 cv
324.585 48.022 325.765 47.089 325.765 45.938 cv
@
325.765 45.938 mo
325.765 44.787 324.585 43.854 323.129 43.854 cv
321.673 43.854 320.493 44.787 320.493 45.938 cv
320.493 47.089 321.673 48.022 323.129 48.022 cv
324.585 48.022 325.765 47.089 325.765 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
321.794 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
321.576 46.1338 mo
(work=96)
[.619598 .429108 .285767 .429108 .484009 .429108 0 ]xsh
321.516 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
327.849 41.586 mo
327.114 42.26 326.194 43.179 325.275 43.915 cv
@
325.152 43.792 mo
324.846 44.344 li
325.397 44.038 li
cp
@
325.152 43.792 mo
324.846 44.344 li
325.397 44.038 li
f
332.385 45.938 mo
332.385 44.787 331.15 43.854 329.627 43.854 cv
328.104 43.854 326.868 44.787 326.868 45.938 cv
326.868 47.089 328.104 48.022 329.627 48.022 cv
331.15 48.022 332.385 47.089 332.385 45.938 cv
@
332.385 45.938 mo
332.385 44.787 331.15 43.854 329.627 43.854 cv
328.104 43.854 326.868 44.787 326.868 45.938 cv
326.868 47.089 328.104 48.022 329.627 48.022 cv
331.15 48.022 332.385 47.089 332.385 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
328.364 45.153 mo
(Inverse)
[.285767 .429108 .429108 .381012 .285797 .333832 0 ]xsh
327.859 46.1338 mo
(work=128)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
328.014 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
329.137 41.647 mo
329.198 42.137 329.259 42.812 329.32 43.425 cv
@
329.137 43.241 mo
329.382 43.854 li
329.443 43.241 li
cp
@
329.137 43.241 mo
329.382 43.854 li
329.443 43.241 li
f
332.385 52.313 mo
332.385 51.7036 330.876 51.2096 329.014 51.2096 cv
327.152 51.2096 325.642 51.7036 325.642 52.313 cv
325.642 52.9224 327.152 53.4164 329.014 53.4164 cv
330.876 53.4164 332.385 52.9224 332.385 52.313 cv
@
332.385 52.313 mo
332.385 51.7036 330.876 51.2096 329.014 51.2096 cv
327.152 51.2096 325.642 51.7036 325.642 52.313 cv
325.642 52.9224 327.152 53.4164 329.014 53.4164 cv
330.876 53.4164 332.385 52.9224 332.385 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
326.285 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
330.24 53.3551 mo
330.853 53.8455 331.589 54.3359 332.202 54.3972 cv
338.454 55.378 348.201 56.2362 355.557 56.9105 cv
@
355.618 57.0944 mo
356.231 56.9718 li
355.618 56.7879 li
cp
@
355.618 57.0944 mo
356.231 56.9718 li
355.618 56.7879 li
f
324.662 47.654 mo
325.642 48.635 326.807 49.9223 327.665 50.9031 cv
@
327.481 50.9644 mo
328.033 51.2709 li
327.727 50.7192 li
cp
@
327.481 50.9644 mo
328.033 51.2709 li
327.727 50.7192 li
f
329.443 48.022 mo
329.32 48.88 329.259 49.7997 329.198 50.6579 cv
@
329.075 50.5966 mo
329.137 51.2096 li
329.382 50.5966 li
cp
@
329.075 50.5966 mo
329.137 51.2096 li
329.382 50.5966 li
f
336.983 48.022 mo
337.351 50.2901 338.27 53.6616 340.048 54.3972 cv
341.274 54.9489 350.224 55.991 357.151 56.7879 cv
@
356.967 56.9105 mo
357.58 56.8492 li
356.967 56.604 li
cp
@
356.967 56.9105 mo
357.58 56.8492 li
356.967 56.604 li
f
346.239 45.938 mo
346.239 44.787 345.059 43.854 343.603 43.854 cv
342.148 43.854 340.967 44.787 340.967 45.938 cv
340.967 47.089 342.148 48.022 343.603 48.022 cv
345.059 48.022 346.239 47.089 346.239 45.938 cv
@
346.239 45.938 mo
346.239 44.787 345.059 43.854 343.603 43.854 cv
342.148 43.854 340.967 44.787 340.967 45.938 cv
340.967 47.089 342.148 48.022 343.603 48.022 cv
345.059 48.022 346.239 47.089 346.239 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
342.268 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
342.05 46.1338 mo
(work=96)
[.619598 .429108 .285767 .429108 .484009 .429108 0 ]xsh
341.99 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
348.323 41.586 mo
347.588 42.26 346.668 43.179 345.749 43.915 cv
@
345.626 43.792 mo
345.32 44.344 li
345.871 44.038 li
cp
@
345.626 43.792 mo
345.32 44.344 li
345.871 44.038 li
f
352.86 45.938 mo
352.86 44.787 351.625 43.854 350.101 43.854 cv
348.578 43.854 347.343 44.787 347.343 45.938 cv
347.343 47.089 348.578 48.022 350.101 48.022 cv
351.625 48.022 352.86 47.089 352.86 45.938 cv
@
352.86 45.938 mo
352.86 44.787 351.625 43.854 350.101 43.854 cv
348.578 43.854 347.343 44.787 347.343 45.938 cv
347.343 47.089 348.578 48.022 350.101 48.022 cv
351.625 48.022 352.86 47.089 352.86 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
348.838 45.153 mo
(Inverse)
[.285767 .429108 .429108 .381012 .285797 .333832 0 ]xsh
348.333 46.1338 mo
(work=128)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
348.488 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
349.611 41.647 mo
349.672 42.137 349.733 42.812 349.795 43.425 cv
@
349.611 43.241 mo
349.856 43.854 li
349.917 43.241 li
cp
@
349.611 43.241 mo
349.856 43.854 li
349.917 43.241 li
f
352.86 52.313 mo
352.86 51.7036 351.35 51.2096 349.488 51.2096 cv
347.626 51.2096 346.117 51.7036 346.117 52.313 cv
346.117 52.9224 347.626 53.4164 349.488 53.4164 cv
351.35 53.4164 352.86 52.9224 352.86 52.313 cv
@
352.86 52.313 mo
352.86 51.7036 351.35 51.2096 349.488 51.2096 cv
347.626 51.2096 346.117 51.7036 346.117 52.313 cv
346.117 52.9224 347.626 53.4164 349.488 53.4164 cv
351.35 53.4164 352.86 52.9224 352.86 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
346.759 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
350.837 53.3551 mo
351.45 53.7842 352.124 54.2133 352.676 54.3972 cv
354.76 55.0715 357.825 55.8684 360.4 56.5427 cv
@
360.338 56.6653 mo
360.951 56.6653 li
360.4 56.3588 li
cp
@
360.338 56.6653 mo
360.951 56.6653 li
360.4 56.3588 li
f
345.136 47.654 mo
346.117 48.635 347.281 49.9223 348.14 50.9031 cv
@
347.956 50.9644 mo
348.507 51.2709 li
348.201 50.7192 li
cp
@
347.956 50.9644 mo
348.507 51.2709 li
348.201 50.7192 li
f
349.917 48.022 mo
349.795 48.88 349.733 49.7997 349.672 50.6579 cv
@
349.549 50.5966 mo
349.611 51.2096 li
349.856 50.5966 li
cp
@
349.549 50.5966 mo
349.611 51.2096 li
349.856 50.5966 li
f
357.764 47.961 mo
358.377 49.9836 359.48 52.8647 360.522 54.3972 cv
360.829 54.8263 361.993 55.6845 363.097 56.3588 cv
@
362.913 56.4201 mo
363.526 56.604 li
363.097 56.1749 li
cp
@
362.913 56.4201 mo
363.526 56.604 li
363.097 56.1749 li
f
366.713 45.938 mo
366.713 44.787 365.533 43.854 364.078 43.854 cv
362.622 43.854 361.442 44.787 361.442 45.938 cv
361.442 47.089 362.622 48.022 364.078 48.022 cv
365.533 48.022 366.713 47.089 366.713 45.938 cv
@
366.713 45.938 mo
366.713 44.787 365.533 43.854 364.078 43.854 cv
362.622 43.854 361.442 44.787 361.442 45.938 cv
361.442 47.089 362.622 48.022 364.078 48.022 cv
365.533 48.022 366.713 47.089 366.713 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
362.743 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
362.525 46.1338 mo
(work=96)
[.619598 .429108 .285767 .429108 .484009 .429108 0 ]xsh
362.465 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
364.691 41.647 mo
364.568 42.137 364.507 42.812 364.445 43.425 cv
@
364.323 43.241 mo
364.384 43.854 li
364.629 43.241 li
cp
@
364.323 43.241 mo
364.384 43.854 li
364.629 43.241 li
f
373.334 45.938 mo
373.334 44.787 372.099 43.854 370.575 43.854 cv
369.052 43.854 367.817 44.787 367.817 45.938 cv
367.817 47.089 369.052 48.022 370.575 48.022 cv
372.099 48.022 373.334 47.089 373.334 45.938 cv
@
373.334 45.938 mo
373.334 44.787 372.099 43.854 370.575 43.854 cv
369.052 43.854 367.817 44.787 367.817 45.938 cv
367.817 47.089 369.052 48.022 370.575 48.022 cv
372.099 48.022 373.334 47.089 373.334 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
369.313 45.153 mo
(Inverse)
[.285767 .429108 .429108 .381012 .285797 .333832 0 ]xsh
368.808 46.1338 mo
(work=128)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
368.963 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
365.978 41.586 mo
366.652 42.26 367.572 43.118 368.369 43.854 cv
@
368.307 43.976 mo
368.859 44.283 li
368.491 43.792 li
cp
@
368.307 43.976 mo
368.859 44.283 li
368.491 43.792 li
f
368.736 52.313 mo
368.736 51.7036 367.227 51.2096 365.365 51.2096 cv
363.503 51.2096 361.993 51.7036 361.993 52.313 cv
361.993 52.9224 363.503 53.4164 365.365 53.4164 cv
367.227 53.4164 368.736 52.9224 368.736 52.313 cv
@
368.736 52.313 mo
368.736 51.7036 367.227 51.2096 365.365 51.2096 cv
363.503 51.2096 361.993 51.7036 361.993 52.313 cv
361.993 52.9224 363.503 53.4164 365.365 53.4164 cv
367.227 53.4164 368.736 52.9224 368.736 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
362.636 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
365.365 53.4164 mo
365.365 54.152 365.365 55.1941 365.365 56.0523 cv
@
365.242 55.991 mo
365.365 56.604 li
365.549 55.991 li
cp
@
365.242 55.991 mo
365.365 56.604 li
365.549 55.991 li
f
364.507 48.022 mo
364.629 48.88 364.874 49.861 364.997 50.6579 cv
@
364.813 50.6579 mo
365.12 51.2096 li
365.12 50.5966 li
cp
@
364.813 50.6579 mo
365.12 51.2096 li
365.12 50.5966 li
f
369.104 47.716 mo
368.307 48.696 367.326 49.9223 366.591 50.8418 cv
@
366.53 50.6579 mo
366.223 51.2096 li
366.775 50.9031 li
cp
@
366.53 50.6579 mo
366.223 51.2096 li
366.775 50.9031 li
f
375.541 53.7229 mo
375.112 53.9681 374.621 54.2746 374.253 54.3972 cv
372.843 55.0102 370.698 55.8071 368.798 56.5427 cv
@
368.982 56.2975 mo
368.43 56.6653 li
369.043 56.604 li
cp
@
368.982 56.2975 mo
368.43 56.6653 li
369.043 56.604 li
f
387.188 45.938 mo
387.188 44.787 386.008 43.854 384.552 43.854 cv
383.096 43.854 381.916 44.787 381.916 45.938 cv
381.916 47.089 383.096 48.022 384.552 48.022 cv
386.008 48.022 387.188 47.089 387.188 45.938 cv
@
387.188 45.938 mo
387.188 44.787 386.008 43.854 384.552 43.854 cv
383.096 43.854 381.916 44.787 381.916 45.938 cv
381.916 47.089 383.096 48.022 384.552 48.022 cv
386.008 48.022 387.188 47.089 387.188 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
383.217 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
382.999 46.1338 mo
(work=96)
[.619598 .429108 .285767 .429108 .484009 .429108 0 ]xsh
382.939 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
385.165 41.647 mo
385.042 42.137 384.981 42.812 384.92 43.425 cv
@
384.797 43.241 mo
384.858 43.854 li
385.103 43.241 li
cp
@
384.797 43.241 mo
384.858 43.854 li
385.103 43.241 li
f
393.808 45.938 mo
393.808 44.787 392.573 43.854 391.05 43.854 cv
389.526 43.854 388.291 44.787 388.291 45.938 cv
388.291 47.089 389.526 48.022 391.05 48.022 cv
392.573 48.022 393.808 47.089 393.808 45.938 cv
@
393.808 45.938 mo
393.808 44.787 392.573 43.854 391.05 43.854 cv
389.526 43.854 388.291 44.787 388.291 45.938 cv
388.291 47.089 389.526 48.022 391.05 48.022 cv
392.573 48.022 393.808 47.089 393.808 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
389.787 45.153 mo
(Inverse)
[.285767 .429108 .429108 .381012 .285797 .333832 0 ]xsh
389.282 46.1338 mo
(work=128)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
389.437 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
386.452 41.586 mo
387.126 42.26 388.046 43.118 388.843 43.854 cv
@
388.781 43.976 mo
389.333 44.283 li
388.965 43.792 li
cp
@
388.781 43.976 mo
389.333 44.283 li
388.965 43.792 li
f
388.659 52.313 mo
388.659 51.7036 387.149 51.2096 385.287 51.2096 cv
383.425 51.2096 381.916 51.7036 381.916 52.313 cv
381.916 52.9224 383.425 53.4164 385.287 53.4164 cv
387.149 53.4164 388.659 52.9224 388.659 52.313 cv
@
388.659 52.313 mo
388.659 51.7036 387.149 51.2096 385.287 51.2096 cv
383.425 51.2096 381.916 51.7036 381.916 52.313 cv
381.916 52.9224 383.425 53.4164 385.287 53.4164 cv
387.149 53.4164 388.659 52.9224 388.659 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
382.558 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
384 53.3551 mo
383.387 53.7842 382.651 54.2746 382.1 54.3972 cv
379.341 55.1328 375.112 55.991 371.617 56.6653 cv
@
371.74 56.4814 mo
371.127 56.7266 li
371.74 56.7879 li
cp
@
371.74 56.4814 mo
371.127 56.7266 li
371.74 56.7879 li
f
384.797 48.022 mo
384.92 48.88 384.981 49.7997 385.103 50.6579 cv
@
384.92 50.5966 mo
385.165 51.2096 li
385.226 50.5966 li
cp
@
384.92 50.5966 mo
385.165 51.2096 li
385.226 50.5966 li
f
389.517 47.654 mo
388.598 48.696 387.433 49.9223 386.636 50.9031 cv
@
386.575 50.7192 mo
386.268 51.2709 li
386.82 50.9644 li
cp
@
386.575 50.7192 mo
386.268 51.2709 li
386.82 50.9644 li
f
396.137 53.7842 mo
395.647 54.0907 395.157 54.3359 394.728 54.3972 cv
389.394 55.3167 380.996 56.2362 374.621 56.8492 cv
@
374.621 56.7266 mo
374.008 56.9105 li
374.621 56.9718 li
cp
@
374.621 56.7266 mo
374.008 56.9105 li
374.621 56.9718 li
f
407.662 45.938 mo
407.662 44.787 406.482 43.854 405.026 43.854 cv
403.57 43.854 402.39 44.787 402.39 45.938 cv
402.39 47.089 403.57 48.022 405.026 48.022 cv
406.482 48.022 407.662 47.089 407.662 45.938 cv
@
407.662 45.938 mo
407.662 44.787 406.482 43.854 405.026 43.854 cv
403.57 43.854 402.39 44.787 402.39 45.938 cv
402.39 47.089 403.57 48.022 405.026 48.022 cv
406.482 48.022 407.662 47.089 407.662 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
403.691 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
403.473 46.1338 mo
(work=96)
[.619598 .429108 .285767 .429108 .484009 .429108 0 ]xsh
403.413 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
405.639 41.647 mo
405.516 42.137 405.455 42.812 405.394 43.425 cv
@
405.271 43.241 mo
405.332 43.854 li
405.578 43.241 li
cp
@
405.271 43.241 mo
405.332 43.854 li
405.578 43.241 li
f
414.282 45.938 mo
414.282 44.787 413.047 43.854 411.524 43.854 cv
410 43.854 408.765 44.787 408.765 45.938 cv
408.765 47.089 410 48.022 411.524 48.022 cv
413.047 48.022 414.282 47.089 414.282 45.938 cv
@
414.282 45.938 mo
414.282 44.787 413.047 43.854 411.524 43.854 cv
410 43.854 408.765 44.787 408.765 45.938 cv
408.765 47.089 410 48.022 411.524 48.022 cv
413.047 48.022 414.282 47.089 414.282 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
410.261 45.153 mo
(Inverse)
[.285767 .429108 .429108 .381012 .285797 .333832 0 ]xsh
409.756 46.1338 mo
(work=128)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
409.911 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
406.926 41.586 mo
407.601 42.26 408.52 43.118 409.317 43.854 cv
@
409.256 43.976 mo
409.807 44.283 li
409.44 43.792 li
cp
@
409.256 43.976 mo
409.807 44.283 li
409.44 43.792 li
f
409.133 52.313 mo
409.133 51.7036 407.624 51.2096 405.762 51.2096 cv
403.9 51.2096 402.39 51.7036 402.39 52.313 cv
402.39 52.9224 403.9 53.4164 405.762 53.4164 cv
407.624 53.4164 409.133 52.9224 409.133 52.313 cv
@
409.133 52.313 mo
409.133 51.7036 407.624 51.2096 405.762 51.2096 cv
403.9 51.2096 402.39 51.7036 402.39 52.313 cv
402.39 52.9224 403.9 53.4164 405.762 53.4164 cv
407.624 53.4164 409.133 52.9224 409.133 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
403.033 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
404.597 53.3551 mo
403.984 53.8455 403.187 54.3359 402.574 54.3972 cv
395.341 55.378 383.816 56.2975 375.479 56.9718 cv
@
375.602 56.7879 mo
374.989 57.0331 li
375.602 57.0944 li
cp
@
375.602 56.7879 mo
374.989 57.0331 li
375.602 57.0944 li
f
405.271 48.022 mo
405.394 48.88 405.455 49.7997 405.578 50.6579 cv
@
405.394 50.5966 mo
405.639 51.2096 li
405.7 50.5966 li
cp
@
405.394 50.5966 mo
405.639 51.2096 li
405.7 50.5966 li
f
409.991 47.654 mo
409.072 48.696 407.907 49.9223 407.11 50.9031 cv
@
407.049 50.7192 mo
406.742 51.2709 li
407.294 50.9644 li
cp
@
407.049 50.7192 mo
406.742 51.2709 li
407.294 50.9644 li
f
416.673 53.8455 mo
416.183 54.0907 415.631 54.3359 415.202 54.3972 cv
404.781 55.5006 387.678 56.5427 376.521 57.1557 cv
@
376.705 56.9718 mo
376.092 57.1557 li
376.705 57.2783 li
cp
@
376.705 56.9718 mo
376.092 57.1557 li
376.705 57.2783 li
f
428.136 45.938 mo
428.136 44.787 426.956 43.854 425.5 43.854 cv
424.044 43.854 422.864 44.787 422.864 45.938 cv
422.864 47.089 424.044 48.022 425.5 48.022 cv
426.956 48.022 428.136 47.089 428.136 45.938 cv
@
428.136 45.938 mo
428.136 44.787 426.956 43.854 425.5 43.854 cv
424.044 43.854 422.864 44.787 422.864 45.938 cv
422.864 47.089 424.044 48.022 425.5 48.022 cv
426.956 48.022 428.136 47.089 428.136 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
424.165 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
423.947 46.1338 mo
(work=96)
[.619598 .429108 .285767 .429108 .484009 .429108 0 ]xsh
423.887 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
426.113 41.647 mo
425.991 42.137 425.929 42.812 425.868 43.425 cv
@
425.745 43.241 mo
425.807 43.854 li
426.052 43.241 li
cp
@
425.745 43.241 mo
425.807 43.854 li
426.052 43.241 li
f
434.756 45.938 mo
434.756 44.787 433.521 43.854 431.998 43.854 cv
430.475 43.854 429.239 44.787 429.239 45.938 cv
429.239 47.089 430.475 48.022 431.998 48.022 cv
433.521 48.022 434.756 47.089 434.756 45.938 cv
@
434.756 45.938 mo
434.756 44.787 433.521 43.854 431.998 43.854 cv
430.475 43.854 429.239 44.787 429.239 45.938 cv
429.239 47.089 430.475 48.022 431.998 48.022 cv
433.521 48.022 434.756 47.089 434.756 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
430.735 45.153 mo
(Inverse)
[.285767 .429108 .429108 .381012 .285797 .333832 0 ]xsh
430.23 46.1338 mo
(work=128)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
430.385 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
427.4 41.586 mo
428.075 42.26 428.994 43.118 429.791 43.854 cv
@
429.73 43.976 mo
430.282 44.283 li
429.914 43.792 li
cp
@
429.73 43.976 mo
430.282 44.283 li
429.914 43.792 li
f
429.607 52.313 mo
429.607 51.7036 428.098 51.2096 426.236 51.2096 cv
424.374 51.2096 422.864 51.7036 422.864 52.313 cv
422.864 52.9224 424.374 53.4164 426.236 53.4164 cv
428.098 53.4164 429.607 52.9224 429.607 52.313 cv
@
429.607 52.313 mo
429.607 51.7036 428.098 51.2096 426.236 51.2096 cv
424.374 51.2096 422.864 51.7036 422.864 52.313 cv
422.864 52.9224 424.374 53.4164 426.236 53.4164 cv
428.098 53.4164 429.607 52.9224 429.607 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
423.507 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
425.071 53.3551 mo
424.458 53.8455 423.661 54.3972 423.048 54.3972 cv
410.604 55.5006 389.885 56.604 376.951 57.217 cv
@
377.073 57.0331 mo
376.46 57.217 li
377.073 57.3396 li
cp
@
377.073 57.0331 mo
376.46 57.217 li
377.073 57.3396 li
f
425.745 48.022 mo
425.868 48.88 425.929 49.7997 426.052 50.6579 cv
@
425.868 50.5966 mo
426.113 51.2096 li
426.174 50.5966 li
cp
@
425.868 50.5966 mo
426.113 51.2096 li
426.174 50.5966 li
f
430.465 47.654 mo
429.546 48.696 428.381 49.9223 427.584 50.9031 cv
@
427.523 50.7192 mo
427.217 51.2709 li
427.768 50.9644 li
cp
@
427.523 50.7192 mo
427.217 51.2709 li
427.768 50.9644 li
f
437.147 53.8455 mo
436.657 54.152 436.105 54.3972 435.676 54.3972 cv
419.677 55.5619 392.766 56.7266 377.257 57.2783 cv
@
377.441 57.0944 mo
376.828 57.2783 li
377.441 57.4009 li
cp
@
377.441 57.0944 mo
376.828 57.2783 li
377.441 57.4009 li
f
448.61 45.938 mo
448.61 44.787 447.43 43.854 445.974 43.854 cv
444.519 43.854 443.338 44.787 443.338 45.938 cv
443.338 47.089 444.519 48.022 445.974 48.022 cv
447.43 48.022 448.61 47.089 448.61 45.938 cv
@
448.61 45.938 mo
448.61 44.787 447.43 43.854 445.974 43.854 cv
444.519 43.854 443.338 44.787 443.338 45.938 cv
443.338 47.089 444.519 48.022 445.974 48.022 cv
447.43 48.022 448.61 47.089 448.61 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
444.639 45.153 mo
(Identity)
[.285767 .429108 .381042 .429077 .238586 .238586 .238586 0 ]xsh
444.421 46.1338 mo
(work=96)
[.619598 .429108 .285767 .429108 .484009 .429108 0 ]xsh
444.361 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
446.587 41.647 mo
446.465 42.137 446.403 42.812 446.342 43.425 cv
@
446.22 43.241 mo
446.281 43.854 li
446.526 43.241 li
cp
@
446.22 43.241 mo
446.281 43.854 li
446.526 43.241 li
f
455.231 45.938 mo
455.231 44.787 453.996 43.854 452.472 43.854 cv
450.949 43.854 449.714 44.787 449.714 45.938 cv
449.714 47.089 450.949 48.022 452.472 48.022 cv
453.996 48.022 455.231 47.089 455.231 45.938 cv
@
455.231 45.938 mo
455.231 44.787 453.996 43.854 452.472 43.854 cv
450.949 43.854 449.714 44.787 449.714 45.938 cv
449.714 47.089 450.949 48.022 452.472 48.022 cv
453.996 48.022 455.231 47.089 455.231 45.938 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
451.209 45.153 mo
(Inverse)
[.285767 .429108 .429108 .381012 .285797 .333832 0 ]xsh
450.704 46.1338 mo
(work=128)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 0 ]xsh
450.859 47.1146 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
447.875 41.586 mo
448.549 42.26 449.468 43.118 450.265 43.854 cv
@
450.204 43.976 mo
450.756 44.283 li
450.388 43.792 li
cp
@
450.204 43.976 mo
450.756 44.283 li
450.388 43.792 li
f
450.081 52.313 mo
450.081 51.7036 448.572 51.2096 446.71 51.2096 cv
444.848 51.2096 443.338 51.7036 443.338 52.313 cv
443.338 52.9224 444.848 53.4164 446.71 53.4164 cv
448.572 53.4164 450.081 52.9224 450.081 52.313 cv
@
450.081 52.313 mo
450.081 51.7036 448.572 51.2096 446.71 51.2096 cv
444.848 51.2096 443.338 51.7036 443.338 52.313 cv
443.338 52.9224 444.848 53.4164 446.71 53.4164 cv
448.572 53.4164 450.081 52.9224 450.081 52.313 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
443.981 52.5092 mo
(roundrobin\(1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 0 ]xsh
445.545 53.3551 mo
444.932 53.8455 444.135 54.3972 443.522 54.3972 cv
425.378 55.6232 394.482 56.7879 377.441 57.3396 cv
@
377.625 57.1557 mo
377.012 57.3396 li
377.625 57.4622 li
cp
@
377.625 57.1557 mo
377.012 57.3396 li
377.625 57.4622 li
f
446.22 48.022 mo
446.342 48.88 446.403 49.7997 446.526 50.6579 cv
@
446.342 50.5966 mo
446.587 51.2096 li
446.649 50.5966 li
cp
@
446.342 50.5966 mo
446.587 51.2096 li
446.649 50.5966 li
f
450.94 47.654 mo
450.02 48.696 448.855 49.9223 448.059 50.9031 cv
@
447.997 50.7192 mo
447.691 51.2709 li
448.242 50.9644 li
cp
@
447.997 50.7192 mo
447.691 51.2709 li
448.242 50.9644 li
f
385.103 70.4578 mo
385.103 68.9344 382.249 67.6993 378.728 67.6993 cv
375.207 67.6993 372.353 68.9344 372.353 70.4578 cv
372.353 71.9813 375.207 73.2163 378.728 73.2163 cv
382.249 73.2163 385.103 71.9813 385.103 70.4578 cv
@
385.103 70.4578 mo
385.103 68.9344 382.249 67.6993 378.728 67.6993 cv
375.207 67.6993 372.353 68.9344 372.353 70.4578 cv
372.353 71.9813 375.207 73.2163 378.728 73.2163 cv
382.249 73.2163 385.103 71.9813 385.103 70.4578 cv
.675 .855 .91 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
377.346 69.1828 mo
(Reorder)
[.572418 .381012 .429108 .285767 .429108 .381042 0 ]xsh
376.317 70.1636 mo
(work=135360)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 .429077 .429108 0 ]xsh
376.472 71.1444 mo
(I/O: 64->512)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 .429077 .429108 0 
]xsh
373.556 72.1252 mo
(*** PEEKS 960 AHEAD ***)
[.429108 .429077 .429108 .214569 .477142 .524353 .524353 .619629 .477142 .214539 .429108 .429108 
.429108 .214539 .619598 .619629 .524353 .619598 .619598 .214569 .429077 .429108 0 ]xsh
372.169 65.186 mo
373.089 65.9216 374.131 66.7798 375.173 67.638 cv
@
375.112 67.7606 mo
375.663 68.0058 li
375.295 67.5154 li
cp
@
375.112 67.7606 mo
375.663 68.0058 li
375.295 67.5154 li
f
385.778 77.5686 mo
385.778 76.4176 383.61 75.4844 380.935 75.4844 cv
378.261 75.4844 376.092 76.4176 376.092 77.5686 cv
376.092 78.7197 378.261 79.6528 380.935 79.6528 cv
383.61 79.6528 385.778 78.7197 385.778 77.5686 cv
@
385.778 77.5686 mo
385.778 76.4176 383.61 75.4844 380.935 75.4844 cv
378.261 75.4844 376.092 76.4176 376.092 77.5686 cv
376.092 78.7197 378.261 79.6528 380.935 79.6528 cv
383.61 79.6528 385.778 78.7197 385.778 77.5686 cv
.675 .855 .91 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
377.098 76.784 mo
(VectorVectorMultiply)
[.619598 .381042 .381012 .238586 .429108 .285767 .619598 .381042 .381012 .238586 .429108 .285767 
.762939 .429108 .238586 .238556 .238586 .429108 .238586 0 ]xsh
378.524 77.7648 mo
(work=110592)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 .429077 .429108 0 ]xsh
378.465 78.7456 mo
(I/O: 512->512)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .429108 .285767 .484009 .429108 .429108 
0 ]xsh
379.586 73.2163 mo
379.77 73.768 379.954 74.3197 380.077 74.9327 cv
@
379.893 74.9327 mo
380.261 75.4844 li
380.199 74.8714 li
cp
@
379.893 74.9327 mo
380.261 75.4844 li
380.199 74.8714 li
f
394.544 82.963 mo
394.544 82.3536 388.725 81.8596 381.548 81.8596 cv
374.371 81.8596 368.552 82.3536 368.552 82.963 cv
368.552 83.5724 374.371 84.0664 381.548 84.0664 cv
388.725 84.0664 394.544 83.5724 394.544 82.963 cv
@
394.544 82.963 mo
394.544 82.3536 388.725 81.8596 381.548 81.8596 cv
374.371 81.8596 368.552 82.3536 368.552 82.963 cv
368.552 83.5724 374.371 84.0664 381.548 84.0664 cv
388.725 84.0664 394.544 83.5724 394.544 82.963 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
369.165 83.1592 mo
(roundrobin\(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214569 .429077 
.214569 .429077 .214569 .429077 .214569 .429108 .214539 .429108 .214539 .429108 .214539 .429108 
.214539 .429108 .214539 .429108 .214569 .429077 .214569 .429108 .214539 .429108 .214539 .429108 
.214539 .429108 .214539 .429108 .214539 .429108 .214569 .429077 .214569 .429077 .214569 .429077 
.214569 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 
.214569 .429077 0 ]xsh
381.18 79.6528 mo
381.242 80.2045 381.303 80.7562 381.364 81.3079 cv
@
381.18 81.2466 mo
381.425 81.8596 li
381.487 81.2466 li
cp
@
381.18 81.2466 mo
381.425 81.8596 li
381.487 81.2466 li
f
277.89 88.3574 mo
277.89 87.2064 276.545 86.2732 274.886 86.2732 cv
273.227 86.2732 271.882 87.2064 271.882 88.3574 cv
271.882 89.5085 273.227 90.4416 274.886 90.4416 cv
276.545 90.4416 277.89 89.5085 277.89 88.3574 cv
@
277.89 88.3574 mo
277.89 87.2064 276.545 86.2732 274.886 86.2732 cv
273.227 86.2732 271.882 87.2064 271.882 88.3574 cv
271.882 89.5085 273.227 90.4416 274.886 90.4416 cv
276.545 90.4416 277.89 89.5085 277.89 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
274.099 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
272.904 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
273.059 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
369.349 83.3308 mo
342.071 84.2503 278.258 86.2732 278.258 86.2732 cv
277.951 86.3345 277.645 86.3958 277.277 86.5797 cv
@
277.338 86.3345 mo
276.909 86.8249 li
277.522 86.641 li
cp
@
277.338 86.3345 mo
276.909 86.8249 li
277.522 86.641 li
f
285.001 88.3574 mo
285.001 87.2064 283.656 86.2732 281.997 86.2732 cv
280.338 86.2732 278.993 87.2064 278.993 88.3574 cv
278.993 89.5085 280.338 90.4416 281.997 90.4416 cv
283.656 90.4416 285.001 89.5085 285.001 88.3574 cv
@
285.001 88.3574 mo
285.001 87.2064 283.656 86.2732 281.997 86.2732 cv
280.338 86.2732 278.993 87.2064 278.993 88.3574 cv
278.993 89.5085 280.338 90.4416 281.997 90.4416 cv
283.656 90.4416 285.001 89.5085 285.001 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
281.21 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
280.015 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
280.17 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
368.614 83.0243 mo
340.845 83.3921 313.137 84.802 285.368 86.2732 cv
285.062 86.3345 284.755 86.3958 284.388 86.5797 cv
@
284.449 86.3345 mo
284.02 86.8249 li
284.633 86.641 li
cp
@
284.449 86.3345 mo
284.02 86.8249 li
284.633 86.641 li
f
292.111 88.3574 mo
292.111 87.2064 290.767 86.2732 289.108 86.2732 cv
287.449 86.2732 286.104 87.2064 286.104 88.3574 cv
286.104 89.5085 287.449 90.4416 289.108 90.4416 cv
290.767 90.4416 292.111 89.5085 292.111 88.3574 cv
@
292.111 88.3574 mo
292.111 87.2064 290.767 86.2732 289.108 86.2732 cv
287.449 86.2732 286.104 87.2064 286.104 88.3574 cv
286.104 89.5085 287.449 90.4416 289.108 90.4416 cv
290.767 90.4416 292.111 89.5085 292.111 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
288.321 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
287.126 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
287.281 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
368.614 83.0856 mo
343.236 83.4534 317.857 84.802 292.479 86.2732 cv
292.173 86.3345 291.866 86.3958 291.498 86.5797 cv
@
291.56 86.3345 mo
291.131 86.8249 li
291.744 86.641 li
cp
@
291.56 86.3345 mo
291.131 86.8249 li
291.744 86.641 li
f
299.222 88.3574 mo
299.222 87.2064 297.877 86.2732 296.218 86.2732 cv
294.56 86.2732 293.215 87.2064 293.215 88.3574 cv
293.215 89.5085 294.56 90.4416 296.218 90.4416 cv
297.877 90.4416 299.222 89.5085 299.222 88.3574 cv
@
299.222 88.3574 mo
299.222 87.2064 297.877 86.2732 296.218 86.2732 cv
294.56 86.2732 293.215 87.2064 293.215 88.3574 cv
293.215 89.5085 294.56 90.4416 296.218 90.4416 cv
297.877 90.4416 299.222 89.5085 299.222 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
295.432 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
294.237 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
294.392 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
368.614 83.0856 mo
345.626 83.4534 322.639 84.802 299.59 86.2732 cv
299.283 86.3345 298.977 86.3958 298.609 86.5797 cv
@
298.67 86.3345 mo
298.241 86.8249 li
298.854 86.641 li
cp
@
298.67 86.3345 mo
298.241 86.8249 li
298.854 86.641 li
f
306.333 88.3574 mo
306.333 87.2064 304.988 86.2732 303.329 86.2732 cv
301.67 86.2732 300.326 87.2064 300.326 88.3574 cv
300.326 89.5085 301.67 90.4416 303.329 90.4416 cv
304.988 90.4416 306.333 89.5085 306.333 88.3574 cv
@
306.333 88.3574 mo
306.333 87.2064 304.988 86.2732 303.329 86.2732 cv
301.67 86.2732 300.326 87.2064 300.326 88.3574 cv
300.326 89.5085 301.67 90.4416 303.329 90.4416 cv
304.988 90.4416 306.333 89.5085 306.333 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
302.542 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
301.347 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
301.502 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
368.675 83.0856 mo
348.017 83.5147 327.359 84.8633 306.701 86.2732 cv
306.394 86.3345 306.088 86.3958 305.72 86.5797 cv
@
305.781 86.3345 mo
305.352 86.8249 li
305.965 86.641 li
cp
@
305.781 86.3345 mo
305.352 86.8249 li
305.965 86.641 li
f
313.444 88.3574 mo
313.444 87.2064 312.099 86.2732 310.44 86.2732 cv
308.781 86.2732 307.436 87.2064 307.436 88.3574 cv
307.436 89.5085 308.781 90.4416 310.44 90.4416 cv
312.099 90.4416 313.444 89.5085 313.444 88.3574 cv
@
313.444 88.3574 mo
313.444 87.2064 312.099 86.2732 310.44 86.2732 cv
308.781 86.2732 307.436 87.2064 307.436 88.3574 cv
307.436 89.5085 308.781 90.4416 310.44 90.4416 cv
312.099 90.4416 313.444 89.5085 313.444 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
309.653 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
308.458 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
308.613 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
368.675 83.1469 mo
350.408 83.576 332.079 84.9246 313.812 86.2732 cv
313.505 86.3345 313.199 86.3958 312.831 86.5797 cv
@
312.892 86.3345 mo
312.463 86.8249 li
313.076 86.641 li
cp
@
312.892 86.3345 mo
312.463 86.8249 li
313.076 86.641 li
f
320.555 88.3574 mo
320.555 87.2064 319.21 86.2732 317.551 86.2732 cv
315.892 86.2732 314.547 87.2064 314.547 88.3574 cv
314.547 89.5085 315.892 90.4416 317.551 90.4416 cv
319.21 90.4416 320.555 89.5085 320.555 88.3574 cv
@
320.555 88.3574 mo
320.555 87.2064 319.21 86.2732 317.551 86.2732 cv
315.892 86.2732 314.547 87.2064 314.547 88.3574 cv
314.547 89.5085 315.892 90.4416 317.551 90.4416 cv
319.21 90.4416 320.555 89.5085 320.555 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
316.764 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
315.569 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
315.724 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
368.798 83.1469 mo
352.798 83.6373 336.86 84.9859 320.922 86.2732 cv
320.616 86.3345 320.309 86.3958 319.942 86.5797 cv
@
320.003 86.3345 mo
319.574 86.8249 li
320.187 86.641 li
cp
@
320.003 86.3345 mo
319.574 86.8249 li
320.187 86.641 li
f
327.665 88.3574 mo
327.665 87.2064 326.321 86.2732 324.662 86.2732 cv
323.003 86.2732 321.658 87.2064 321.658 88.3574 cv
321.658 89.5085 323.003 90.4416 324.662 90.4416 cv
326.321 90.4416 327.665 89.5085 327.665 88.3574 cv
@
327.665 88.3574 mo
327.665 87.2064 326.321 86.2732 324.662 86.2732 cv
323.003 86.2732 321.658 87.2064 321.658 88.3574 cv
321.658 89.5085 323.003 90.4416 324.662 90.4416 cv
326.321 90.4416 327.665 89.5085 327.665 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
323.875 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
322.68 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
322.835 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
368.92 83.2082 mo
355.25 83.7599 341.642 84.9859 328.033 86.2732 cv
327.788 86.3345 327.42 86.3958 327.114 86.5797 cv
@
327.175 86.3345 mo
326.746 86.8249 li
327.359 86.641 li
cp
@
327.175 86.3345 mo
326.746 86.8249 li
327.359 86.641 li
f
334.776 88.3574 mo
334.776 87.2064 333.431 86.2732 331.772 86.2732 cv
330.114 86.2732 328.769 87.2064 328.769 88.3574 cv
328.769 89.5085 330.114 90.4416 331.772 90.4416 cv
333.431 90.4416 334.776 89.5085 334.776 88.3574 cv
@
334.776 88.3574 mo
334.776 87.2064 333.431 86.2732 331.772 86.2732 cv
330.114 86.2732 328.769 87.2064 328.769 88.3574 cv
328.769 89.5085 330.114 90.4416 331.772 90.4416 cv
333.431 90.4416 334.776 89.5085 334.776 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
330.986 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
329.791 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
329.946 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
369.104 83.2695 mo
357.764 83.8212 346.423 85.0472 335.144 86.2732 cv
334.899 86.3345 334.531 86.3958 334.224 86.5797 cv
@
334.286 86.3345 mo
333.857 86.8249 li
334.47 86.641 li
cp
@
334.286 86.3345 mo
333.857 86.8249 li
334.47 86.641 li
f
341.887 88.3574 mo
341.887 87.2064 340.542 86.2732 338.883 86.2732 cv
337.224 86.2732 335.88 87.2064 335.88 88.3574 cv
335.88 89.5085 337.224 90.4416 338.883 90.4416 cv
340.542 90.4416 341.887 89.5085 341.887 88.3574 cv
@
341.887 88.3574 mo
341.887 87.2064 340.542 86.2732 338.883 86.2732 cv
337.224 86.2732 335.88 87.2064 335.88 88.3574 cv
335.88 89.5085 337.224 90.4416 338.883 90.4416 cv
340.542 90.4416 341.887 89.5085 341.887 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
338.096 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
336.901 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
337.056 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
371.495 83.6373 mo
362.729 84.3116 350.101 85.2924 342.255 86.2732 cv
342.01 86.3345 341.642 86.3958 341.335 86.5797 cv
@
341.397 86.3345 mo
340.967 86.8249 li
341.58 86.641 li
cp
@
341.397 86.3345 mo
340.967 86.8249 li
341.58 86.641 li
f
348.998 88.3574 mo
348.998 87.2064 347.653 86.2732 345.994 86.2732 cv
344.335 86.2732 342.99 87.2064 342.99 88.3574 cv
342.99 89.5085 344.335 90.4416 345.994 90.4416 cv
347.653 90.4416 348.998 89.5085 348.998 88.3574 cv
@
348.998 88.3574 mo
348.998 87.2064 347.653 86.2732 345.994 86.2732 cv
344.335 86.2732 342.99 87.2064 342.99 88.3574 cv
342.99 89.5085 344.335 90.4416 345.994 90.4416 cv
347.653 90.4416 348.998 89.5085 348.998 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
345.207 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
344.012 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
344.167 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
372.414 83.7599 mo
365.242 84.3729 355.496 85.3537 349.366 86.2732 cv
349.12 86.3345 348.753 86.4571 348.446 86.641 cv
@
348.569 86.3958 mo
348.078 86.8249 li
348.691 86.7023 li
cp
@
348.569 86.3958 mo
348.078 86.8249 li
348.691 86.7023 li
f
356.109 88.3574 mo
356.109 87.2064 354.764 86.2732 353.105 86.2732 cv
351.446 86.2732 350.101 87.2064 350.101 88.3574 cv
350.101 89.5085 351.446 90.4416 353.105 90.4416 cv
354.764 90.4416 356.109 89.5085 356.109 88.3574 cv
@
356.109 88.3574 mo
356.109 87.2064 354.764 86.2732 353.105 86.2732 cv
351.446 86.2732 350.101 87.2064 350.101 88.3574 cv
350.101 89.5085 351.446 90.4416 353.105 90.4416 cv
354.764 90.4416 356.109 89.5085 356.109 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
352.318 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
351.123 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
351.278 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
373.763 83.8212 mo
368.246 84.4955 361.074 85.415 356.476 86.2732 cv
356.231 86.3345 355.863 86.4571 355.557 86.641 cv
@
355.679 86.3958 mo
355.189 86.8249 li
355.802 86.7023 li
cp
@
355.679 86.3958 mo
355.189 86.8249 li
355.802 86.7023 li
f
363.219 88.3574 mo
363.219 87.2064 361.875 86.2732 360.216 86.2732 cv
358.557 86.2732 357.212 87.2064 357.212 88.3574 cv
357.212 89.5085 358.557 90.4416 360.216 90.4416 cv
361.875 90.4416 363.219 89.5085 363.219 88.3574 cv
@
363.219 88.3574 mo
363.219 87.2064 361.875 86.2732 360.216 86.2732 cv
358.557 86.2732 357.212 87.2064 357.212 88.3574 cv
357.212 89.5085 358.557 90.4416 360.216 90.4416 cv
361.875 90.4416 363.219 89.5085 363.219 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
359.429 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
358.234 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
358.389 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
375.541 83.9438 mo
371.617 84.6181 366.775 85.4763 363.587 86.2732 cv
363.342 86.3345 363.035 86.5184 362.729 86.641 cv
@
362.79 86.3958 mo
362.361 86.8862 li
362.974 86.7023 li
cp
@
362.79 86.3958 mo
362.361 86.8862 li
362.974 86.7023 li
f
370.33 88.3574 mo
370.33 87.2064 368.985 86.2732 367.326 86.2732 cv
365.668 86.2732 364.323 87.2064 364.323 88.3574 cv
364.323 89.5085 365.668 90.4416 367.326 90.4416 cv
368.985 90.4416 370.33 89.5085 370.33 88.3574 cv
@
370.33 88.3574 mo
370.33 87.2064 368.985 86.2732 367.326 86.2732 cv
365.668 86.2732 364.323 87.2064 364.323 88.3574 cv
364.323 89.5085 365.668 90.4416 367.326 90.4416 cv
368.985 90.4416 370.33 89.5085 370.33 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
366.54 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
365.345 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
365.5 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
377.809 84.0051 mo
375.479 84.7407 372.598 85.5989 370.698 86.2732 cv
370.453 86.3345 370.146 86.5184 369.84 86.641 cv
@
369.901 86.3958 mo
369.472 86.8862 li
370.085 86.7023 li
cp
@
369.901 86.3958 mo
369.472 86.8862 li
370.085 86.7023 li
f
377.441 88.3574 mo
377.441 87.2064 376.096 86.2732 374.437 86.2732 cv
372.778 86.2732 371.434 87.2064 371.434 88.3574 cv
371.434 89.5085 372.778 90.4416 374.437 90.4416 cv
376.096 90.4416 377.441 89.5085 377.441 88.3574 cv
@
377.441 88.3574 mo
377.441 87.2064 376.096 86.2732 374.437 86.2732 cv
372.778 86.2732 371.434 87.2064 371.434 88.3574 cv
371.434 89.5085 372.778 90.4416 374.437 90.4416 cv
376.096 90.4416 377.441 89.5085 377.441 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
373.65 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
372.455 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
372.61 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
380.077 84.0664 mo
379.157 84.7407 377.993 85.5989 376.951 86.4571 cv
@
376.889 86.3345 mo
376.46 86.8249 li
377.073 86.5797 li
cp
@
376.889 86.3345 mo
376.46 86.8249 li
377.073 86.5797 li
f
384.552 88.3574 mo
384.552 87.2064 383.207 86.2732 381.548 86.2732 cv
379.889 86.2732 378.544 87.2064 378.544 88.3574 cv
378.544 89.5085 379.889 90.4416 381.548 90.4416 cv
383.207 90.4416 384.552 89.5085 384.552 88.3574 cv
@
384.552 88.3574 mo
384.552 87.2064 383.207 86.2732 381.548 86.2732 cv
379.889 86.2732 378.544 87.2064 378.544 88.3574 cv
378.544 89.5085 379.889 90.4416 381.548 90.4416 cv
383.207 90.4416 384.552 89.5085 384.552 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
380.761 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
379.566 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
379.721 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
381.548 84.0664 mo
381.548 84.4955 381.548 85.1085 381.548 85.6602 cv
@
381.425 85.6602 mo
381.548 86.2732 li
381.732 85.6602 li
cp
@
381.425 85.6602 mo
381.548 86.2732 li
381.732 85.6602 li
f
391.663 88.3574 mo
391.663 87.2064 390.318 86.2732 388.659 86.2732 cv
387 86.2732 385.655 87.2064 385.655 88.3574 cv
385.655 89.5085 387 90.4416 388.659 90.4416 cv
390.318 90.4416 391.663 89.5085 391.663 88.3574 cv
@
391.663 88.3574 mo
391.663 87.2064 390.318 86.2732 388.659 86.2732 cv
387 86.2732 385.655 87.2064 385.655 88.3574 cv
385.655 89.5085 387 90.4416 388.659 90.4416 cv
390.318 90.4416 391.663 89.5085 391.663 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
387.872 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
386.677 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
386.832 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
383.019 84.0664 mo
383.939 84.7407 385.103 85.5989 386.146 86.4571 cv
@
386.084 86.5797 mo
386.636 86.8249 li
386.268 86.3345 li
cp
@
386.084 86.5797 mo
386.636 86.8249 li
386.268 86.3345 li
f
398.773 88.3574 mo
398.773 87.2064 397.429 86.2732 395.77 86.2732 cv
394.111 86.2732 392.766 87.2064 392.766 88.3574 cv
392.766 89.5085 394.111 90.4416 395.77 90.4416 cv
397.429 90.4416 398.773 89.5085 398.773 88.3574 cv
@
398.773 88.3574 mo
398.773 87.2064 397.429 86.2732 395.77 86.2732 cv
394.111 86.2732 392.766 87.2064 392.766 88.3574 cv
392.766 89.5085 394.111 90.4416 395.77 90.4416 cv
397.429 90.4416 398.773 89.5085 398.773 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
394.983 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
393.788 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
393.943 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
385.287 84.0051 mo
387.617 84.7407 390.559 85.5989 392.398 86.2732 cv
392.643 86.3345 392.95 86.5184 393.256 86.641 cv
@
393.011 86.7023 mo
393.624 86.8862 li
393.195 86.3958 li
cp
@
393.011 86.7023 mo
393.624 86.8862 li
393.195 86.3958 li
f
405.884 88.3574 mo
405.884 87.2064 404.539 86.2732 402.88 86.2732 cv
401.222 86.2732 399.877 87.2064 399.877 88.3574 cv
399.877 89.5085 401.222 90.4416 402.88 90.4416 cv
404.539 90.4416 405.884 89.5085 405.884 88.3574 cv
@
405.884 88.3574 mo
405.884 87.2064 404.539 86.2732 402.88 86.2732 cv
401.222 86.2732 399.877 87.2064 399.877 88.3574 cv
399.877 89.5085 401.222 90.4416 402.88 90.4416 cv
404.539 90.4416 405.884 89.5085 405.884 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
402.094 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
400.899 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
401.054 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
387.555 83.9438 mo
391.479 84.6181 396.383 85.4763 399.509 86.2732 cv
399.754 86.3345 400.061 86.4571 400.367 86.641 cv
@
400.183 86.7023 mo
400.796 86.8862 li
400.367 86.4571 li
cp
@
400.183 86.7023 mo
400.796 86.8862 li
400.367 86.4571 li
f
412.995 88.3574 mo
412.995 87.2064 411.65 86.2732 409.991 86.2732 cv
408.332 86.2732 406.988 87.2064 406.988 88.3574 cv
406.988 89.5085 408.332 90.4416 409.991 90.4416 cv
411.65 90.4416 412.995 89.5085 412.995 88.3574 cv
@
412.995 88.3574 mo
412.995 87.2064 411.65 86.2732 409.991 86.2732 cv
408.332 86.2732 406.988 87.2064 406.988 88.3574 cv
406.988 89.5085 408.332 90.4416 409.991 90.4416 cv
411.65 90.4416 412.995 89.5085 412.995 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
409.204 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
408.009 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
408.164 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
389.333 83.8212 mo
394.85 84.4955 402.022 85.415 406.62 86.2732 cv
406.804 86.3345 407.049 86.3958 407.355 86.5184 cv
@
407.294 86.641 mo
407.907 86.8249 li
407.417 86.3958 li
cp
@
407.294 86.641 mo
407.907 86.8249 li
407.417 86.3958 li
f
420.106 88.3574 mo
420.106 87.2064 418.761 86.2732 417.102 86.2732 cv
415.443 86.2732 414.098 87.2064 414.098 88.3574 cv
414.098 89.5085 415.443 90.4416 417.102 90.4416 cv
418.761 90.4416 420.106 89.5085 420.106 88.3574 cv
@
420.106 88.3574 mo
420.106 87.2064 418.761 86.2732 417.102 86.2732 cv
415.443 86.2732 414.098 87.2064 414.098 88.3574 cv
414.098 89.5085 415.443 90.4416 417.102 90.4416 cv
418.761 90.4416 420.106 89.5085 420.106 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
416.315 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
415.12 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
415.275 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
390.682 83.7599 mo
397.854 84.3729 407.601 85.3537 413.731 86.2732 cv
413.976 86.3345 414.221 86.3958 414.466 86.5184 cv
@
414.405 86.641 mo
415.018 86.8249 li
414.527 86.3958 li
cp
@
414.405 86.641 mo
415.018 86.8249 li
414.527 86.3958 li
f
427.217 88.3574 mo
427.217 87.2064 425.872 86.2732 424.213 86.2732 cv
422.554 86.2732 421.209 87.2064 421.209 88.3574 cv
421.209 89.5085 422.554 90.4416 424.213 90.4416 cv
425.872 90.4416 427.217 89.5085 427.217 88.3574 cv
@
427.217 88.3574 mo
427.217 87.2064 425.872 86.2732 424.213 86.2732 cv
422.554 86.2732 421.209 87.2064 421.209 88.3574 cv
421.209 89.5085 422.554 90.4416 424.213 90.4416 cv
425.872 90.4416 427.217 89.5085 427.217 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
423.426 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
422.231 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
422.386 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
391.601 83.6373 mo
400.428 84.3116 413.056 85.2924 420.841 86.2732 cv
421.148 86.3345 421.454 86.3958 421.822 86.5797 cv
@
421.577 86.641 mo
422.19 86.8249 li
421.761 86.3345 li
cp
@
421.577 86.641 mo
422.19 86.8249 li
421.761 86.3345 li
f
434.327 88.3574 mo
434.327 87.2064 432.983 86.2732 431.324 86.2732 cv
429.665 86.2732 428.32 87.2064 428.32 88.3574 cv
428.32 89.5085 429.665 90.4416 431.324 90.4416 cv
432.983 90.4416 434.327 89.5085 434.327 88.3574 cv
@
434.327 88.3574 mo
434.327 87.2064 432.983 86.2732 431.324 86.2732 cv
429.665 86.2732 428.32 87.2064 428.32 88.3574 cv
428.32 89.5085 429.665 90.4416 431.324 90.4416 cv
432.983 90.4416 434.327 89.5085 434.327 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
430.537 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
429.342 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
429.497 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
392.337 83.576 mo
402.758 84.189 418.389 85.2311 427.952 86.2732 cv
428.259 86.3345 428.565 86.3958 428.933 86.5797 cv
@
428.688 86.641 mo
429.301 86.8249 li
428.872 86.3345 li
cp
@
428.688 86.641 mo
429.301 86.8249 li
428.872 86.3345 li
f
441.438 88.3574 mo
441.438 87.2064 440.093 86.2732 438.434 86.2732 cv
436.776 86.2732 435.431 87.2064 435.431 88.3574 cv
435.431 89.5085 436.776 90.4416 438.434 90.4416 cv
440.093 90.4416 441.438 89.5085 441.438 88.3574 cv
@
441.438 88.3574 mo
441.438 87.2064 440.093 86.2732 438.434 86.2732 cv
436.776 86.2732 435.431 87.2064 435.431 88.3574 cv
435.431 89.5085 436.776 90.4416 438.434 90.4416 cv
440.093 90.4416 441.438 89.5085 441.438 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
437.648 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
436.453 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
436.608 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
394.176 83.2082 mo
407.846 83.7599 421.454 84.9859 435.063 86.2732 cv
435.369 86.3345 435.676 86.3958 436.044 86.5797 cv
@
435.799 86.641 mo
436.412 86.8249 li
435.982 86.3345 li
cp
@
435.799 86.641 mo
436.412 86.8249 li
435.982 86.3345 li
f
448.549 88.3574 mo
448.549 87.2064 447.204 86.2732 445.545 86.2732 cv
443.886 86.2732 442.542 87.2064 442.542 88.3574 cv
442.542 89.5085 443.886 90.4416 445.545 90.4416 cv
447.204 90.4416 448.549 89.5085 448.549 88.3574 cv
@
448.549 88.3574 mo
448.549 87.2064 447.204 86.2732 445.545 86.2732 cv
443.886 86.2732 442.542 87.2064 442.542 88.3574 cv
442.542 89.5085 443.886 90.4416 445.545 90.4416 cv
447.204 90.4416 448.549 89.5085 448.549 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
444.758 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
443.563 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
443.718 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
394.36 83.1469 mo
410.359 83.6373 426.297 84.9859 442.174 86.2732 cv
442.48 86.3345 442.848 86.3958 443.155 86.5797 cv
@
442.909 86.641 mo
443.522 86.8249 li
443.093 86.3345 li
cp
@
442.909 86.641 mo
443.522 86.8249 li
443.093 86.3345 li
f
455.66 88.3574 mo
455.66 87.2064 454.315 86.2732 452.656 86.2732 cv
450.997 86.2732 449.652 87.2064 449.652 88.3574 cv
449.652 89.5085 450.997 90.4416 452.656 90.4416 cv
454.315 90.4416 455.66 89.5085 455.66 88.3574 cv
@
455.66 88.3574 mo
455.66 87.2064 454.315 86.2732 452.656 86.2732 cv
450.997 86.2732 449.652 87.2064 449.652 88.3574 cv
449.652 89.5085 450.997 90.4416 452.656 90.4416 cv
454.315 90.4416 455.66 89.5085 455.66 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
451.869 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
450.674 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
450.829 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
394.421 83.1469 mo
412.75 83.576 431.078 84.9246 449.285 86.2732 cv
449.591 86.3345 449.898 86.3958 450.265 86.5797 cv
@
450.02 86.641 mo
450.633 86.8249 li
450.204 86.3345 li
cp
@
450.02 86.641 mo
450.633 86.8249 li
450.204 86.3345 li
f
462.771 88.3574 mo
462.771 87.2064 461.426 86.2732 459.767 86.2732 cv
458.108 86.2732 456.763 87.2064 456.763 88.3574 cv
456.763 89.5085 458.108 90.4416 459.767 90.4416 cv
461.426 90.4416 462.771 89.5085 462.771 88.3574 cv
@
462.771 88.3574 mo
462.771 87.2064 461.426 86.2732 459.767 86.2732 cv
458.108 86.2732 456.763 87.2064 456.763 88.3574 cv
456.763 89.5085 458.108 90.4416 459.767 90.4416 cv
461.426 90.4416 462.771 89.5085 462.771 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
458.98 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
457.785 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
457.94 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
394.482 83.0856 mo
415.14 83.5147 435.799 84.8633 456.395 86.2732 cv
456.702 86.3345 457.008 86.3958 457.376 86.5797 cv
@
457.131 86.641 mo
457.744 86.8249 li
457.315 86.3345 li
cp
@
457.131 86.641 mo
457.744 86.8249 li
457.315 86.3345 li
f
469.881 88.3574 mo
469.881 87.2064 468.537 86.2732 466.878 86.2732 cv
465.219 86.2732 463.874 87.2064 463.874 88.3574 cv
463.874 89.5085 465.219 90.4416 466.878 90.4416 cv
468.537 90.4416 469.881 89.5085 469.881 88.3574 cv
@
469.881 88.3574 mo
469.881 87.2064 468.537 86.2732 466.878 86.2732 cv
465.219 86.2732 463.874 87.2064 463.874 88.3574 cv
463.874 89.5085 465.219 90.4416 466.878 90.4416 cv
468.537 90.4416 469.881 89.5085 469.881 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
466.091 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
464.896 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
465.051 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
394.482 83.0856 mo
417.531 83.4534 440.519 84.802 463.506 86.2732 cv
463.813 86.3345 464.119 86.3958 464.487 86.5797 cv
@
464.242 86.641 mo
464.855 86.8249 li
464.426 86.3345 li
cp
@
464.242 86.641 mo
464.855 86.8249 li
464.426 86.3345 li
f
476.992 88.3574 mo
476.992 87.2064 475.647 86.2732 473.988 86.2732 cv
472.33 86.2732 470.985 87.2064 470.985 88.3574 cv
470.985 89.5085 472.33 90.4416 473.988 90.4416 cv
475.647 90.4416 476.992 89.5085 476.992 88.3574 cv
@
476.992 88.3574 mo
476.992 87.2064 475.647 86.2732 473.988 86.2732 cv
472.33 86.2732 470.985 87.2064 470.985 88.3574 cv
470.985 89.5085 472.33 90.4416 473.988 90.4416 cv
475.647 90.4416 476.992 89.5085 476.992 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
473.202 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
472.007 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
472.162 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
394.482 83.0856 mo
419.922 83.4534 445.3 84.802 470.617 86.2732 cv
470.923 86.3345 471.23 86.3958 471.598 86.5797 cv
@
471.353 86.641 mo
471.966 86.8249 li
471.536 86.3345 li
cp
@
471.353 86.641 mo
471.966 86.8249 li
471.536 86.3345 li
f
484.103 88.3574 mo
484.103 87.2064 482.758 86.2732 481.099 86.2732 cv
479.44 86.2732 478.096 87.2064 478.096 88.3574 cv
478.096 89.5085 479.44 90.4416 481.099 90.4416 cv
482.758 90.4416 484.103 89.5085 484.103 88.3574 cv
@
484.103 88.3574 mo
484.103 87.2064 482.758 86.2732 481.099 86.2732 cv
479.44 86.2732 478.096 87.2064 478.096 88.3574 cv
478.096 89.5085 479.44 90.4416 481.099 90.4416 cv
482.758 90.4416 484.103 89.5085 484.103 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
480.312 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
479.117 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
479.272 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
394.544 83.0243 mo
422.313 83.3921 449.959 84.802 477.728 86.2732 cv
478.034 86.3345 478.341 86.3958 478.709 86.5797 cv
@
478.463 86.641 mo
479.076 86.8249 li
478.647 86.3345 li
cp
@
478.463 86.641 mo
479.076 86.8249 li
478.647 86.3345 li
f
491.214 88.3574 mo
491.214 87.2064 489.869 86.2732 488.21 86.2732 cv
486.551 86.2732 485.206 87.2064 485.206 88.3574 cv
485.206 89.5085 486.551 90.4416 488.21 90.4416 cv
489.869 90.4416 491.214 89.5085 491.214 88.3574 cv
@
491.214 88.3574 mo
491.214 87.2064 489.869 86.2732 488.21 86.2732 cv
486.551 86.2732 485.206 87.2064 485.206 88.3574 cv
485.206 89.5085 486.551 90.4416 488.21 90.4416 cv
489.869 90.4416 491.214 89.5085 491.214 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
487.423 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
486.228 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
486.383 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
393.747 83.3308 mo
421.025 84.2503 484.839 86.2732 484.839 86.2732 cv
485.145 86.3345 485.452 86.3958 485.819 86.5797 cv
@
485.574 86.641 mo
486.187 86.8249 li
485.758 86.3345 li
cp
@
485.574 86.641 mo
486.187 86.8249 li
485.758 86.3345 li
f
498.325 88.3574 mo
498.325 87.2064 496.98 86.2732 495.321 86.2732 cv
493.662 86.2732 492.317 87.2064 492.317 88.3574 cv
492.317 89.5085 493.662 90.4416 495.321 90.4416 cv
496.98 90.4416 498.325 89.5085 498.325 88.3574 cv
@
498.325 88.3574 mo
498.325 87.2064 496.98 86.2732 495.321 86.2732 cv
493.662 86.2732 492.317 87.2064 492.317 88.3574 cv
492.317 89.5085 493.662 90.4416 495.321 90.4416 cv
496.98 90.4416 498.325 89.5085 498.325 88.3574 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
494.534 87.5728 mo
(Sum)
[.477173 .429077 0 ]xsh
493.339 88.5536 mo
(work=2070)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
493.494 89.5344 mo
(I/O: 16->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .429108 .285767 .484039 0 ]xsh
394.115 83.2695 mo
416.734 83.7599 464.548 84.9859 491.949 86.2732 cv
492.256 86.3345 492.562 86.3958 492.93 86.5797 cv
@
492.685 86.641 mo
493.298 86.8249 li
492.869 86.3345 li
cp
@
492.685 86.641 mo
493.298 86.8249 li
492.869 86.3345 li
f
394.544 93.7518 mo
394.544 93.1424 388.725 92.6484 381.548 92.6484 cv
374.371 92.6484 368.552 93.1424 368.552 93.7518 cv
368.552 94.3612 374.371 94.8552 381.548 94.8552 cv
388.725 94.8552 394.544 94.3612 394.544 93.7518 cv
@
394.544 93.7518 mo
394.544 93.1424 388.725 92.6484 381.548 92.6484 cv
374.371 92.6484 368.552 93.1424 368.552 93.7518 cv
368.552 94.3612 374.371 94.8552 381.548 94.8552 cv
388.725 94.8552 394.544 94.3612 394.544 93.7518 cv
1 gry
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
369.165 93.9479 mo
(roundrobin\(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\))
[.285767 .429108 .429108 .429077 .429108 .285767 .429108 .429108 .238586 .429108 .285767 .429108 
.214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214569 .429077 
.214569 .429077 .214569 .429077 .214569 .429108 .214539 .429108 .214539 .429108 .214539 .429108 
.214539 .429108 .214539 .429108 .214569 .429077 .214569 .429108 .214539 .429108 .214539 .429108 
.214539 .429108 .214539 .429108 .214539 .429108 .214569 .429077 .214569 .429077 .214569 .429077 
.214569 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 .214539 .429108 
.214569 .429077 0 ]xsh
331.405 99.1462 mo
331.405 97.9952 329.923 97.062 328.094 97.062 cv
326.266 97.062 324.784 97.9952 324.784 99.1462 cv
324.784 100.297 326.266 101.23 328.094 101.23 cv
329.923 101.23 331.405 100.297 331.405 99.1462 cv
@
331.405 99.1462 mo
331.405 97.9952 329.923 97.062 328.094 97.062 cv
326.266 97.062 324.784 97.9952 324.784 99.1462 cv
324.784 100.297 326.266 101.23 328.094 101.23 cv
329.923 101.23 331.405 100.297 331.405 99.1462 cv
.271 .467 .702 rgb
f
0 gry
LTFDSH+TimesNewRomanPSMT*1 [.8582 0 0 -.8582 0 0 ]msf
325.806 98.3615 mo
(FloatToShort)
[.477173 .238556 .429108 .381042 .238556 .524353 .429108 .477173 .429077 .429108 .285767 0 
]xsh
326.113 99.3423 mo
(work=6912)
[.619598 .429108 .285767 .429108 .484009 .429108 .429108 .429108 0 ]xsh
326.482 100.323 mo
(I/O: 1->1)
[.285767 .238586 .619598 .238586 .214539 .429108 .285767 .484039 0 ]xsh
373.15 94.61 mo
361.38 95.836 340.416 97.9202 331.895 98.7784 cv
@
332.018 98.5945 mo
331.405 98.8397 li
332.018 98.901 li
cp
@
332.018 98.5945 mo
331.405 98.8397 li
332.018 98.901 li
f
276.909 89.8899 mo
277.338 90.1964 277.828 90.4416 278.258 90.4416 cv
303.329 91.7289 346.73 92.9549 368.491 93.4453 cv
@
368.43 93.5679 mo
369.043 93.4453 li
368.43 93.2614 li
cp
@
368.43 93.5679 mo
369.043 93.4453 li
368.43 93.2614 li
f
284.02 89.8899 mo
284.449 90.1964 284.939 90.4416 285.368 90.4416 cv
308.478 91.7289 348.14 92.8936 368.552 93.4453 cv
@
368.491 93.5679 mo
369.104 93.4453 li
368.491 93.2614 li
cp
@
368.491 93.5679 mo
369.104 93.4453 li
368.491 93.2614 li
f
291.131 89.8899 mo
291.56 90.1964 292.05 90.4416 292.479 90.4416 cv
313.505 91.7289 349.549 92.8323 368.675 93.384 cv
@
368.552 93.5066 mo
369.165 93.384 li
368.552 93.2001 li
cp
@
368.552 93.5066 mo
369.165 93.384 li
368.552 93.2001 li
f
298.241 89.8899 mo
298.67 90.1964 299.161 90.4416 299.59 90.4416 cv
318.654 91.6676 351.021 92.8323 368.798 93.384 cv
@
368.675 93.5066 mo
369.288 93.384 li
368.675 93.2001 li
cp
@
368.675 93.5066 mo
369.288 93.384 li
368.675 93.2001 li
f
305.352 89.8899 mo
305.781 90.1964 306.272 90.4416 306.701 90.4416 cv
323.681 91.6676 352.308 92.771 368.736 93.3227 cv
@
368.798 93.4453 mo
369.411 93.3227 li
368.798 93.1388 li
cp
@
368.798 93.4453 mo
369.411 93.3227 li
368.798 93.1388 li
f
312.463 89.8899 mo
312.892 90.1964 313.382 90.4416 313.812 90.4416 cv
328.891 91.6063 354.024 92.7097 369.043 93.3227 cv
@
369.043 93.4453 mo
369.656 93.3227 li
369.043 93.1388 li
cp
@
369.043 93.4453 mo
369.656 93.3227 li
369.043 93.1388 li
f
319.574 89.8899 mo
320.003 90.1964 320.493 90.4416 320.922 90.4416 cv
334.041 91.545 355.802 92.6484 369.349 93.2614 cv
@
369.288 93.384 mo
369.901 93.2614 li
369.288 93.0775 li
cp
@
369.288 93.384 mo
369.901 93.2614 li
369.288 93.0775 li
f
326.685 89.8899 mo
327.175 90.1964 327.604 90.3803 328.033 90.4416 cv
339.374 91.545 357.764 92.5871 369.717 93.2001 cv
@
369.595 93.3227 mo
370.208 93.2001 li
369.595 93.0162 li
cp
@
369.595 93.3227 mo
370.208 93.2001 li
369.595 93.0162 li
f
333.795 89.8899 mo
334.286 90.1964 334.715 90.3803 335.144 90.4416 cv
344.523 91.4837 359.664 92.4645 370.085 93.0775 cv
@
370.085 93.2001 mo
370.698 93.1388 li
370.085 92.9549 li
cp
@
370.085 93.2001 mo
370.698 93.1388 li
370.085 92.9549 li
f
340.906 89.8899 mo
341.397 90.1964 341.826 90.3803 342.255 90.4416 cv
349.917 91.4224 362.116 92.3419 370.882 93.0162 cv
@
370.821 93.1388 mo
371.434 93.0775 li
370.821 92.8323 li
cp
@
370.821 93.1388 mo
371.434 93.0775 li
370.821 92.8323 li
f
348.078 89.8899 mo
348.507 90.1964 348.998 90.3803 349.366 90.4416 cv
355.312 91.3611 364.568 92.2806 371.617 92.8936 cv
@
371.679 93.0775 mo
372.292 92.9549 li
371.679 92.771 li
cp
@
371.679 93.0775 mo
372.292 92.9549 li
371.679 92.771 li
f
355.189 89.8899 mo
355.618 90.1351 356.109 90.3803 356.476 90.4416 cv
360.951 91.2998 367.756 92.158 373.15 92.8323 cv
@
373.027 92.9549 mo
373.64 92.8936 li
373.027 92.6484 li
cp
@
373.027 92.9549 mo
373.64 92.8936 li
373.027 92.6484 li
f
362.3 89.8286 mo
362.79 90.1351 363.219 90.319 363.587 90.4416 cv
366.591 91.1772 371.127 92.0967 374.928 92.7097 cv
@
374.805 92.8323 mo
375.418 92.771 li
374.805 92.5258 li
cp
@
374.805 92.8323 mo
375.418 92.771 li
374.805 92.5258 li
f
369.472 89.8286 mo
369.901 90.0738 370.33 90.319 370.698 90.4416 cv
372.414 91.1159 375.05 91.9128 377.257 92.5871 cv
@
377.134 92.7097 mo
377.747 92.7097 li
377.196 92.4032 li
cp
@
377.134 92.7097 mo
377.747 92.7097 li
377.196 92.4032 li
f
376.46 89.8899 mo
377.441 90.6255 378.667 91.545 379.648 92.2806 cv
@
379.525 92.3419 mo
380.077 92.6484 li
379.709 92.158 li
cp
@
379.525 92.3419 mo
380.077 92.6484 li
379.709 92.158 li
f
381.548 90.4416 mo
381.548 90.9933 381.548 91.545 381.548 92.0967 cv
@
381.425 92.0354 mo
381.548 92.6484 li
381.732 92.0354 li
cp
@
381.425 92.0354 mo
381.548 92.6484 li
381.732 92.0354 li
f
386.636 89.8899 mo
385.655 90.6255 384.429 91.545 383.448 92.2806 cv
@
383.387 92.158 mo
383.019 92.6484 li
383.571 92.3419 li
cp
@
383.387 92.158 mo
383.019 92.6484 li
383.571 92.3419 li
f
393.624 89.8286 mo
393.195 90.0738 392.766 90.319 392.398 90.4416 cv
390.682 91.1159 388.046 91.9128 385.839 92.5871 cv
@
385.9 92.4032 mo
385.349 92.7097 li
385.962 92.7097 li
cp
@
385.9 92.4032 mo
385.349 92.7097 li
385.962 92.7097 li
f
400.796 89.8899 mo
400.367 90.1351 399.877 90.3803 399.509 90.4416 cv
396.505 91.1772 391.969 92.0967 388.168 92.7097 cv
@
388.291 92.5258 mo
387.678 92.771 li
388.291 92.8323 li
cp
@
388.291 92.5258 mo
387.678 92.771 li
388.291 92.8323 li
f
407.907 89.8899 mo
407.478 90.1351 407.049 90.3803 406.62 90.4416 cv
402.206 91.2998 395.402 92.158 389.946 92.8323 cv
@
390.069 92.6484 mo
389.456 92.8936 li
390.069 92.9549 li
cp
@
390.069 92.6484 mo
389.456 92.8936 li
390.069 92.9549 li
f
415.079 89.8899 mo
414.589 90.1964 414.16 90.3803 413.731 90.4416 cv
407.784 91.3611 398.344 92.2806 391.233 92.8936 cv
@
391.417 92.7097 mo
390.804 92.9549 li
391.417 93.0162 li
cp
@
391.417 92.7097 mo
390.804 92.9549 li
391.417 93.0162 li
f
422.19 89.8899 mo
421.761 90.1964 421.27 90.3803 420.841 90.4416 cv
413.24 91.4224 400.98 92.3419 392.276 93.0162 cv
@
392.337 92.8323 mo
391.724 93.0775 li
392.337 93.1388 li
cp
@
392.337 92.8323 mo
391.724 93.0775 li
392.337 93.1388 li
f
429.301 89.8899 mo
428.872 90.1964 428.381 90.3803 427.952 90.4416 cv
418.512 91.4837 403.248 92.5258 392.827 93.1388 cv
@
393.011 92.9549 mo
392.398 93.1388 li
393.011 93.2614 li
cp
@
393.011 92.9549 mo
392.398 93.1388 li
393.011 93.2614 li
f
436.412 89.8899 mo
435.982 90.1964 435.492 90.3803 435.063 90.4416 cv
423.784 91.545 405.332 92.5871 393.318 93.2001 cv
@
393.44 93.0162 mo
392.827 93.2001 li
393.44 93.3227 li
cp
@
393.44 93.0162 mo
392.827 93.2001 li
393.44 93.3227 li
f
443.584 89.9512 mo
443.093 90.1964 442.603 90.4416 442.174 90.4416 cv
429.056 91.545 407.294 92.6484 393.747 93.2614 cv
@
393.808 93.0775 mo
393.195 93.2614 li
393.808 93.384 li
cp
@
393.808 93.0775 mo
393.195 93.2614 li
393.808 93.384 li
f
450.633 89.8899 mo
450.204 90.1964 449.714 90.4416 449.285 90.4416 cv
434.266 91.6063 409.072 92.7097 394.053 93.3227 cv
@
394.053 93.1388 mo
393.44 93.3227 li
394.053 93.4453 li
cp
@
394.053 93.1388 mo
393.44 93.3227 li
394.053 93.4453 li
f
457.744 89.8899 mo
457.315 90.1964 456.824 90.4416 456.395 90.4416 cv
439.354 91.6676 410.543 92.771 394.115 93.3227 cv
@
394.298 93.1388 mo
393.685 93.3227 li
394.298 93.4453 li
cp
@
394.298 93.1388 mo
393.685 93.3227 li
394.298 93.4453 li
f
464.855 89.8899 mo
464.426 90.1964 463.935 90.4416 463.506 90.4416 cv
444.503 91.6676 412.075 92.8323 394.298 93.384 cv
@
394.421 93.2001 mo
393.808 93.384 li
394.421 93.5066 li
cp
@
394.421 93.2001 mo
393.808 93.384 li
394.421 93.5066 li
f
471.966 89.8899 mo
471.536 90.1964 471.046 90.4416 470.617 90.4416 cv
449.591 91.7289 413.547 92.8323 394.421 93.384 cv
@
394.544 93.2001 mo
393.931 93.384 li
394.544 93.5066 li
cp
@
394.544 93.2001 mo
393.931 93.384 li
394.544 93.5066 li
f
479.076 89.8899 mo
478.647 90.1964 478.157 90.4416 477.728 90.4416 cv
454.618 91.7289 414.957 92.8936 394.544 93.4453 cv
@
394.605 93.2614 mo
393.992 93.4453 li
394.605 93.5679 li
cp
@
394.605 93.2614 mo
393.992 93.4453 li
394.605 93.5679 li
f
486.187 89.8899 mo
485.758 90.1964 485.268 90.4416 484.839 90.4416 cv
459.767 91.7289 416.366 92.9549 394.605 93.4453 cv
@
394.666 93.2614 mo
394.053 93.4453 li
394.666 93.5679 li
cp
@
394.666 93.2614 mo
394.053 93.4453 li
394.666 93.5679 li
f
493.298 89.8899 mo
492.869 90.1964 492.378 90.4416 491.949 90.4416 cv
464.793 91.7902 417.654 92.9549 394.728 93.4453 cv
@
394.728 93.2614 mo
394.115 93.4453 li
394.728 93.5679 li
cp
@
394.728 93.2614 mo
394.115 93.4453 li
394.728 93.5679 li
f
324.784 99.4527 mo
314.731 100.433 284.265 103.253 273.721 104.173 cv
@
273.905 103.989 mo
273.292 104.234 li
273.905 104.295 li
cp
@
273.905 103.989 mo
273.292 104.234 li
273.905 104.295 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
true set_gvm
/LTFDSH+TimesNewRomanPSMT*1 uf
/LTFDSH+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
