%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: MPD.pdf
%%Creator: Adobe Acrobat 8.0
%%For: Bill Thies
%%CreationDate: 12/5/2008, 11:09:35 PM
%%BoundingBox: 0 0 288 648
%%HiResBoundingBox: 0 0 288 648
%%CropBox: 0 0 288 648
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1622 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GNU Ghostscript 7.05"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -648 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 648 li
288 648 li
288 0 li
cp
clp
[1 0 0 1 -36 0 ]ct
gsave
35 649 mo
324 649 li
324 0 li
35 0 li
cp
clp
.0766 lw
0 lc
0 lj
1 ml
[] 0 dsh
true sadj
36.6128 647.387 mo
323.25 647.387 li
323.25 .577148 li
36.6128 .577148 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988, 1990, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Times New Roman is a trademark of the Monotype Corporation, registered in the US Patent and Trademark Office and may be registered in certain other jurisdictions.) def
/Weight (Roman) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 68 /D put
dup 77 /M put
dup 80 /P put
dup 97 /a put
dup 104 /h put
dup 105 /i put
dup 110 /n put
def
/UniqueID 44335 def
/FontBBox {-167 -250 1009 878} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 0 662 677 447 461 694 694] def
/OtherBlues [384 384 -216 -213] def
/FamilyBlues [-15 0 662 677 447 461 694 694] def
/FamilyOtherBlues [384 384 -216 -213] def
/StdHW [36] def
/StdVW [81] def
/StemSnapH [36 43] def
/StemSnapV [81 94] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/C <1C60D8A8C9B64EDFB39C8FA0E3107D39E1E26D40368A6A59D36B799EDDCB
A8AF8BCAEA2E296C5BB00979C4073082C4AC62DAAE27F25BE45DFF121DF075F7
3D37111C10DFF7C6BD4BFE8AE73B4FADB84F0E8B5722DEA1CA14F5AFDC440B45
4F635F5576E82C8F45782F1EDE0EC9CA59D48E4C0F81> |-
/D <1C60D8A8C9B6079F62AF7EE2124AC712AE5D5419E262A0C00C6163DFBCB2
A6FA65DDDD5062250DB8BBFB46EB35827750F9FCEE696526B20FE9266474B179
350945BBDAF7180FAB04D619EB38198FC722361E0B3B5E50F9017F19C7BDCABB
285F506A04FE32C63936689B1F9C81923B03440D57336303C59B59E8D3C0659D
33> |-
/M <1C60D8A8C9B59F85E7C3D982C036A83A051CFEB65CDD644D44695DA87381
2F9E0DA4474B3DF6D63B3341F86CDE23D0512CA425D085DC5BA255E6B3240439
E201FEC100F452F18CDA5E088317BF79F4C8FC952A839FE77A57A286C006FAF4
6CE1F964CD62165C424C020FEAD96AC86FEFFC256D> |-
/P <1C60D8A8C9B7EF322B10A2A8DE6EF0A6CE60E86B1DF5C68015667A2338DB
07BCF91C9D8DCCB5967A656E7EB6651B3E305A306DA1BB8C1BAEECFC60DC00D8
8AEC56E3DF7455D57CB9BB0CC9A32704D4F0F1C39C5B2EDC70F42754CACE7253
FF5FDAE4B675FFF987E22613E24B8956EFA9C2C5B9AC406D966F459601B2046A
C9E54A3BB37C45EDEB> |-
/a <1C60D8A8C9B77FE294851E8312417598C86A6256F86C70DE2C7AFF06FCE3
4BADEE28F3B8D02D3C60352D19569C8A11355E1235678015637DF6C7E4A05E8E
A8AB948BF076D376030D74D5BF1D25D6B1436CBFF068CFC521B6EF1846E35D0E
2A4D1C4888BBA14114C326082B33961EF18B6F0B661AC7CDF50B0B0D80CC5ED8
71668C27B3C878E43E83D293BA1B1F771221D32DA7404867CEA1760CC79EAA61
6682686BC92138B01A5FF6B55D314BD1AA96EE89C141B8E9EB46C16F1B31BD66
B910EA6BBA> |-
/h <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA64197CEECB76B9E4
D2E9F717E2E21BA6AFBDB9D486017DE1334EE2B8AC7E25B49C380829180892EE
A76E25D726C9DCA303C64F5FE456E4A565D8D0ED565D009BA02A6DD13A835659
5990FC1760FC10BB02F96DEC2D5390B1C4D4059132A392595F028220DA07D2CD
E701448700C9> |-
/i <1C60D8A8C9B854D0F11440006C203BFFD1DEDCDE7CAD1373D75DB7315CFC
49A0833FA9D881419B9BEE01885373804535A66836A5115D3B942001E4A8D676
2EBA1D3CCCC2CED3DAC862D3F0398204E81D1C72BC10727D59A156997C9269F7
F9572E03A90C988E59FECA8B3BEBEE755CF420171B> |-
/n <1C60D8A8C9B7A73D926FE6A84374263FF505637A0DAA6A1CED287131EA2B
D2E1E6E797441A36EF164B2E98EA0B7A662ADAA0C64D637EBFFAEDEE2D95D0C9
387D6E78EA7DBD0E03769EFADBB9E99820C3CA652E5CB84D6476DEB84D65355B
ED40D74AEE8C38DE38F7ADD1F45E132F9FCFA8357906BA1C9F825F576D022523
4E76> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/LTFDSI+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D 8{/.notdef}rp /M 2{/.notdef}rp /P 16{/.notdef}rp 
/a 6{/.notdef}rp /h /i 4{/.notdef}rp /n 145{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
37.1573 1.43492 mo
(MPDChain)
[.953354 .596256 .774254 .715286 .536198 .476131 .298126 0 ]xsh
161.777 102.302 mo
196.553 102.302 li
196.553 8.54358 li
161.777 8.54358 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7EF322B10A2A8DE6CF647A07CB452C54BD470E6C4C389B7AB
8653B88FE6E4626649FABCEAB5DAD30BD9C2A2F1F8512C1A1DC93BDB928A3688
B193ECEDB997255AB4DCBBC4BBB3FF147299B3653B9E76139CB6E91A13A47208
F2688B5C42863D22FFBF8FD8DF09F08A1966F6652461EEB3D18F0F0CB5B8E18D
6016409AA3D413D5FA051FCF9B4DFF0734259E7DCF> |-
/e <1C60D8A8C9B77FE29496D1FBB47314D6F46DA3EBFEC342F3B983185301EF
B706EB7833A9B3F14CD479AC93E43031BC63CB7FFE55CD73AABA1B6DFA935F49
683C721ECBA275DBC565AC78A07D0C5329E18D2789C058EC6367BBAECDF40AEE> |-
/l <1C60D8A8C9B854D0F11440006C203A85DCEB221B1066666FE3EA25083329
14AA399D2F81DB0653B503D4FAECFE70883AAAA2B3345C999517D89696069E61
D192EBD1D92DDA82> |-
/o <1C60D8A8C9B7A73DE3E5E50AD058CB1758CCEC8536B108DD66A8D296857C
B3303D78514A78D06E85FDA9E8085F8D9525195AE96992EAA1E95B40679F85C3
FC4165030DF121E13968768CFE641E50E297E68778A63ACC6DD3> |-
/p <1C60D8A8C9B7A73D9AFACE39AE6BAA6E09D7322029CE296F526808097535
692942DF193E08360A1A27EB6A08251F7D53D3FA96D22918185F2823E13833F6
44411211FB9E60C91D24768368C1EE71DFEA1AF8285D596D61CE8A067C14BC2E
E1974A4DF14D782DBEDB8D2CE5673BB9634CC4945A7FA5A5E1B87E0F2D94F438
C21548DAE429B68406206429A87E1B462DA7A9D2> |-
/r <1C60D8A8C9B81F2C117020CA370F4EDA9CC5786DD9DE9EF42ACF1876A05B
D63AFC335B1B675841319B03439D25E5CD3513D8B1AF7C3213243E231585FDFB
23DF1B8599146D034A4E5D6FF06CCB4811E4D5773B1A3B8F6DC7EFA556C00470
2D769BB83004181BE21F0C2BFBE9C20E97FA9275EFEA6DCC374D4BC4F2DBC112
90AFF811640F86741723DE5B9796381D4326AE431F5D9C5CAED9> |-
/t <1C60D8A8C9B854D0DAE0E17091F63D902F15B1C5B2DD1246F40FD3EC3264
448E2BE336EDCDEB1DFC2F9412B18B341EC1F740C5E1DC1152FC3909509AD9AD
D2933ADE9A3C5AD03C26776EECF232> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 70 /F put
dup 101 /e put
dup 108 /l put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /.notdef /F 6{/.notdef}rp /M 2{/.notdef}rp 
/P 16{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h /i 
2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r 
/.notdef /t 139{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
162.305 9.40092 mo
(DopplerFilter)
[.774261 .536194 .536194 .536209 .298126 .476135 .357101 .596252 .298126 .298126 .298126 .47612 
0 ]xsh
163.003 97.399 mo
180.008 97.399 li
180.008 14.0582 li
163.003 14.0582 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B6079F005CDC6370483696E1EAFC944BD4E06D86DBD18EB735
2F45C381C0DF5B906978D128771DD089E21DCCBC0592B3A6BE45DFF941B3D9AF
82C0E5BBEE832081C600F8D424981C94A7921155A8C74A96B13AD2AF06E82571
B4060A57A3D45E0E99876FCE9C38AE3E4A7F8C> |-
/d <1C60D8A8C9B7A73DE3E5E50523E6C3667B38E45A4C51E0FEC84C813AB373
8B83F58EEDF7211177C6639AD2CCECEBC1915AB857B5701E72700D0D163B5F2F
58E5A8B520D7ED7F9880D10C1A6AAC1DEF76C68CB623039F59365031342DE694
26167CDA4201402D972AF8016480B0CF8CBDDE4940ABCEFD4C2D5F2FE77DC410
2439C361CA6330A182E6FD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 86 /V put
dup 100 /d put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /.notdef /F 6{/.notdef}rp /M 2{/.notdef}rp 
/P 5{/.notdef}rp /V 10{/.notdef}rp /a 2{/.notdef}rp /d /e 
2{/.notdef}rp /h /i 2{/.notdef}rp /l /.notdef /n /o 
/p /.notdef /r /.notdef /t 139{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
163.497 14.9159 mo
(VideoPipe)
[.774261 .298126 .536194 .476135 .536194 .596252 .298126 .536209 0 ]xsh
164.228 96.7859 mo
178.782 96.7859 li
178.782 23.5563 li
164.228 23.5563 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/K <1C60D8A8C9B6079F62AF7EE261D2819ED7974217E7034289FA7C1BABF100
C6A5480EF2F67F33525B9F0C3A7EBEA8703E8C35FFE54D3010A9809D5E12442C
409B269A7D4346FFD3D0C882E0638FE5876FB72290B12BADDE73C28ABC60097D
5F47A0B45D92F7FD41DF8475D961E4F5A95EF6558D45744A11DE71603FC94A1B
038775E2BC960C01D2B930F2> |-
/T <1C60D8A8C9B7D8BE16B2E353E3300378A32828826C127DE3D6A3769F5542
8119DC48F4B555CFAC557278838F3EC6C5F7B64F6B44DFEFCBC8AF8174185170
E165701BB15CF1CB88629A978EF6D86FB8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 75 /K put
dup 84 /T put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /.notdef /F 4{/.notdef}rp /K /.notdef 
/M 2{/.notdef}rp /P 3{/.notdef}rp /T /.notdef /V 10{/.notdef}rp 
/a 2{/.notdef}rp /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp 
/l /.notdef /n /o /p /.notdef /r /.notdef 
/t 139{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
164.756 24.4149 mo
(FFTKernel)
[.596252 .596252 .655228 .774261 .476135 .357101 .536194 .476135 0 ]xsh
165.454 56.954 mo
177.557 56.954 li
177.557 25.3948 li
165.454 25.3948 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B64EDFF4D0475F241567109AA60E358A72CDD6748BBE527383
3D9930EA16405C9FA084F4E606B7DF07A2CCABEF78658BA281F5D25760E71232
16C34541C223BEC48612BD7C0052F7AD27E210716125E9B30EDB889188D65976
1E4423BF9E66EB5CCCE83D82A2DB04554982E2E899847CA739A4B92152682375
567D18A66EABD5068029F8FB7424BADB87039D0F6B1530> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 82 /R put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /.notdef /F 4{/.notdef}rp /K /.notdef 
/M 2{/.notdef}rp /P /.notdef /R /.notdef /T /.notdef 
/V 10{/.notdef}rp /a 2{/.notdef}rp /d /e 2{/.notdef}rp /h 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r /.notdef /t 139{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
165.944 26.2529 mo
(FFTReorder)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 0 ]xsh
178.323 97.399 mo
195.328 97.399 li
195.328 14.0582 li
178.323 14.0582 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
178.817 14.9159 mo
(VideoPipe)
[.774261 .298126 .536194 .476135 .536194 .596252 .298126 .536209 0 ]xsh
179.548 96.7859 mo
194.102 96.7859 li
194.102 23.5563 li
179.548 23.5563 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
180.076 24.4149 mo
(FFTKernel)
[.596252 .596252 .655228 .774261 .476135 .357101 .536194 .476135 0 ]xsh
180.774 56.954 mo
192.877 56.954 li
192.877 25.3948 li
180.774 25.3948 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
181.264 26.2529 mo
(FFTReorder)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 0 ]xsh
37.8384 121.605 mo
322.024 121.605 li
322.024 102.915 li
37.8384 102.915 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m <1C60D8A8C9B6FF86DEBE529995F26ADC252ABAF4F8ABCE39F6B951A24C86
82F3B72A552C5D46A333AAEC49746F27474921C947B29E9EEE21EF479E8AC4CB
A64B9B4BF4B54D7069EE8C71930A689A0AC30AA5DB406CB2F2DF67D1DFA36762
A8298043AAD8738E3C2E6D8E87DCF89210EA6A7696675667850CACB8BD85BF1A
9C23A6EB480778B459116760FD79DE8BA673C0A52BBAEAA003DFFA86FA6EC61F
B9955126552099FD6C946BD155266FCC648BAFF24A5063CAAF26> |-
/u <1C60D8A8C9B7A73D96315394C03E2804B8D6B013BEE63C754B7DCD21D17D
EE183DDCCBE94C1E49FD4EEAD58EEB67E527D51D30B7569BBD690F10D18E5949
069889C638179D8480A9808D89F695AD05863E6AF7CC14732F1A0B4D904FA886
0DFB17262B8501BEF73C125F016588> |-
/x <1C60D8A8C9B7A73DD670D8CCCBFBC4E258D7CAA3ED17D069C025C1A2420A
81D4B3EAD7110946DAC3BA40217DDD18B672D1C19269266B39D87F9C1DDA90BD
8FC71EBFE3B2169703196A9FC02F9EA267A90B94DB1FAA5C105A1B22ABB76205
ADA50D456170C13F6F28FC77F3978776E97B76A3DEF1976915B787070DC57673
F3C0FA2B4E9DEFEF7147D4269144499ACAFBAFD930E1A038534DF3D883A96117
05279F3EC76B84BD5055C0FF3A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 109 /m put
dup 117 /u put
dup 120 /x put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /.notdef /F 4{/.notdef}rp /K /.notdef 
/M 2{/.notdef}rp /P /.notdef /R /.notdef /T /.notdef 
/V 10{/.notdef}rp /a 2{/.notdef}rp /d /e 2{/.notdef}rp /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /.notdef /t /u 2{/.notdef}rp /x 135{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
38.3788 103.772 mo
(CTurnComplex)
[.715282 .655228 .536201 .357101 .536198 .715282 .536201 .834328 .536198 .29813 .476128 0 
]xsh
162.007 435.358 mo
216.087 435.358 li
216.087 122.217 li
162.007 122.217 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B7361F4A5DC306676AF4C8647FF3053FF45CCDDBEB7E9B9050
12DA1DE9402C8DB245C98EF5B89AF8B307871A82029AB9C9383D498ABA5BCF42
FD3EBA06E16095068AAD2A24F29F66CD7BEDAF75E27B9E98183114BB708CEE9F
70B53D4922DAA331AE3A4B4FD1B5CD24EA574D8FE8D1E66E3ECF87407A13A679
B23887BDCEB1C164DC6CBF6472F4BC61E5FBABA972F7976EEBF3BC4B43DEE327
20F6A1A3C1878ACCA80EBBED76DEBD40C76FFC717243DC8D6CB182005A946D70
F948846138DEF539AD5BE615B04618EEB754F0DAF886F93D007AE786FB00955E
897D78D67615B1FA609D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /.notdef /F 4{/.notdef}rp /K /.notdef 
/M 2{/.notdef}rp /P /.notdef /R /.notdef /T /.notdef 
/V 10{/.notdef}rp /a 2{/.notdef}rp /d /e 2{/.notdef}rp /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u 2{/.notdef}rp /x 135{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
162.534 123.075 mo
(PulseCompression)
[.596252 .536209 .298126 .417145 .476135 .715286 .536194 .83432 .536209 .357101 .476135 .417145 
.41716 .298126 .536194 0 ]xsh
163.233 269.902 mo
179.319 269.902 li
179.319 128.039 li
163.233 128.039 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B81F2C3AB090E7A94305EFD59611ABFA6BAFD07A97745145D9
B0DF5E6D35DFFC117239480D5B4909BCBB653176E0149E687888D5B98137EBEA
64> |-
/S <1C60D8A8C9B7EF320E2EFDBCAC7BC76D0C8C1FC222AFE4F464C56D04CD48
5F140DB725EC46F068943283C9A43A14A852E22E87331165F602FD95AC890BE8
83DAD7F63C31168B480A95AC244C28C8F37F118A399681DB4822661628FBDA87
D99D0367C013E32688035EC31A5C3FC194FEB20C4FCD84A9EB3547C0D5A421A0
1B87DFDA871D7919B7251A9EC84A645CA15425845057F189EC65A90DD4028CC5
B10853B05E6F7AF9E84AC6588CDCE11B6EF766B248A8304E38964E579F6EF2DC
2D4971ED042868564E8E982FE2B2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 73 /I put
dup 83 /S put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /.notdef /F 2{/.notdef}rp /I /.notdef 
/K /.notdef /M 2{/.notdef}rp /P /.notdef /R /S 
/T /.notdef /V 10{/.notdef}rp /a 2{/.notdef}rp /d /e 
2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u 2{/.notdef}rp /x 
135{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
163.777 128.897 mo
(SumFIRFilter)
[.596252 .536209 .83432 .596252 .357101 .715286 .596252 .298126 .298126 .298126 .476135 0 
]xsh
177.633 430.456 mo
214.861 430.456 li
214.861 127.426 li
177.633 127.426 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B6079F258D65BC2350A422AEB94BCF2D0F96794C8438625C31
5D886EF37D4AC3C2F1E1338E25B58FA7772E0B9E5E3E726371665F3474CE0B82
EB9690B23BE3168D2BE4F6B0140B5077B79CDED50A140417505C243C7D98789B
5883DC2727B8882D3854E49A79F785598024348D171E79D4C21E1DA76E252BE9
80994299353DC669631C102ABE82C3B639BE771465159436AABE7CB91BD8812B
5152BA3433FC2701117F14E8CD24269DDA8CC4248C3859> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[67{/.notdef}rp /C /D /.notdef /F /G /.notdef /I 
/.notdef /K /.notdef /M 2{/.notdef}rp /P /.notdef /R 
/S /T /.notdef /V 10{/.notdef}rp /a 2{/.notdef}rp /d 
/e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u 2{/.notdef}rp 
/x 135{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
178.174 128.284 mo
(GuardPipe)
[.774261 .536194 .476135 .357101 .536194 .596252 .298126 .536209 0 ]xsh
178.859 283.384 mo
213.635 283.384 li
213.635 129.265 li
178.859 129.265 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
179.387 130.123 mo
(GuardSplitter)
[.774261 .536194 .476135 .357101 .536194 .596252 .536209 .298126 .298126 .298126 .298126 .47612 
0 ]xsh
180.085 277.869 mo
197.09 277.869 li
197.09 136.006 li
180.085 136.006 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
180.574 136.863 mo
(PulsePipe)
[.596252 .536209 .298126 .417145 .476135 .596252 .298126 .536194 0 ]xsh
181.31 269.902 mo
195.864 269.902 li
195.864 145.504 li
181.31 145.504 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
181.838 146.362 mo
(FFTKernel)
[.596252 .596252 .655228 .774261 .476135 .357101 .536194 .476135 0 ]xsh
182.536 204.026 mo
194.639 204.026 li
194.639 147.342 li
182.536 147.342 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
183.025 148.2 mo
(FFTReorder)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 0 ]xsh
195.405 270.515 mo
212.41 270.515 li
212.41 136.925 li
195.405 136.925 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
195.941 137.783 mo
(GuardFFTPipe)
[.774261 .536194 .476135 .357101 .536194 .596252 .596252 .655228 .596252 .298141 .536194 0 
]xsh
196.63 269.902 mo
211.184 269.902 li
211.184 145.504 li
196.63 145.504 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
197.158 146.362 mo
(FFTKernel)
[.596252 .596252 .655228 .774261 .476135 .357101 .536194 .476135 0 ]xsh
197.856 204.026 mo
209.959 204.026 li
209.959 147.342 li
197.856 147.342 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
198.346 148.2 mo
(FFTReorder)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 0 ]xsh
178.859 429.843 mo
198.315 429.843 li
198.315 291.35 li
178.859 291.35 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
179.37 292.208 mo
(GuardIFFTPipe)
[.774261 .536194 .476135 .357101 .536194 .357101 .596252 .596252 .655228 .596252 .298141 .536194 
0 ]xsh
180.085 421.877 mo
197.09 421.877 li
197.09 293.189 li
180.085 293.189 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
180.587 294.047 mo
(IFFTKernel)
[.357101 .596252 .596252 .655228 .774261 .476135 .357101 .536194 .476135 0 ]xsh
181.31 405.944 mo
195.864 405.944 li
195.864 300.849 li
181.31 300.849 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
181.838 301.707 mo
(FFTKernel)
[.596252 .596252 .655228 .774261 .476135 .357101 .536194 .476135 0 ]xsh
182.536 350.179 mo
194.639 350.179 li
194.639 302.687 li
182.536 302.687 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
183.025 303.545 mo
(FFTReorder)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 0 ]xsh
136.882 640.034 mo
195.787 640.034 li
195.787 435.972 li
136.882 435.972 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6079F005CDFC8A94B75FD7D89F5577E741BA5E9223B5FB59E
3315C336CDEC6F323D18A178B38DCEDA9B451B37165385283368F94E5EC5086C
A620D2549B18425DA74331F96252E5D5358EE44D33B708D9B8822975F755BF6A
D18C81AA5BF9B47D39D0AFBBC3A6521D0B18D90963534584D1092363898607EF
C07B44A235786C96> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 65 /A put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[65{/.notdef}rp /A /.notdef /C /D /.notdef /F /G 
/.notdef /I /.notdef /K /.notdef /M 2{/.notdef}rp /P 
/.notdef /R /S /T /.notdef /V 10{/.notdef}rp /a 
2{/.notdef}rp /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u 2{/.notdef}rp /x 135{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
137.439 436.829 mo
(CFARPipe)
[.715286 .596252 .774261 .715271 .596252 .298126 .536209 0 ]xsh
139.716 492.962 mo
192.647 492.962 li
192.647 443.938 li
139.716 443.938 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B6079F62A1FB3811240F271AD0D57B19128AB853A4F8065489
9335CBBB28EC3136D3C152FE63E3DE095A87DA373AF663840B9291CE1E595DF9
055E3445B9C254BF3EDB4C50D24634C4B35DFB17409377B0AA33B856CE462A55
89549DB71F76B3A91176984A5AF9CCA94EF61258F98F1E820997EEC02ABB0C0B
82E013A2C05134681B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[65{/.notdef}rp /A /.notdef /C /D /.notdef /F /G 
/.notdef /I /.notdef /K /.notdef /M /N /.notdef 
/P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp 
/a 2{/.notdef}rp /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u 2{/.notdef}rp /x 135{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
140.235 444.796 mo
(CFARNoiseSplitter)
[.715286 .596252 .774261 .715271 .774261 .536194 .298126 .41716 .476135 .596252 .536194 .298126 
.298126 .298126 .298126 .476135 0 ]xsh
140.942 487.446 mo
184.298 487.446 li
184.298 449.146 li
140.942 449.146 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7D8BE1621F7F8A9A93A327F755C3E81E8F6E5B36D5D09EC27
E8352590DCF5FBB39847107CDCA7E2F69BF8A0E97E902F61DA0FFC19F5F5635E
A2E6B7FBC25C45E39802E8D22E33BC6334A08FAC75B725C0C2D4D8BA4EE1> |-
/v <1C60D8A8C9B7A73DDA3AE0A055993EE6BE7DFD4A4A2DB6881516C07791ED
230086728F5F7B4242AB79AA3E9EFA40308C16768E728C96C19C447086D3AC82
2F0AB1C43C44A30591856370C72E911DB5FEBBFD365EF7E42462BF4A23A3EEAE
F504CBF5C917EC0A44C5B6D735> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 76 /L put
dup 118 /v put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[65{/.notdef}rp /A /.notdef /C /D /.notdef /F /G 
/.notdef /I /.notdef /K /L /M /N /.notdef 
/P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp 
/a 2{/.notdef}rp /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /.notdef /x 135{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
141.478 450.004 mo
(CFARNoiseLevelPipe)
[.715286 .596252 .774261 .715271 .774261 .536194 .298126 .41716 .476135 .655228 .47612 .536209 
.47612 .298126 .596268 .298126 .536194 0 ]xsh
142.168 479.48 mo
183.072 479.48 li
183.072 450.985 li
142.168 450.985 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
142.691 451.843 mo
(CFARNoiseLevelSplitter)
[.715286 .596252 .774261 .715271 .774261 .536194 .298126 .41716 .476135 .655228 .47612 .536209 
.47612 .298126 .596268 .536194 .298126 .298126 .298126 .298126 .476135 0 ]xsh
143.393 473.965 mo
162.237 473.965 li
162.237 456.5 li
143.393 456.5 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77FE2948016809A16C1383D80AA8513D781288589A82DC94A
5DA0D421DEC176AEE608ECA472235D24D269E725C25D06B3582797B60EEBA4C4
46D10FC22341077B09EDB4E12CA0359E24628B46BB6E10727940> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[65{/.notdef}rp /A /.notdef /C /D /.notdef /F /G 
/.notdef /I /.notdef /K /L /M /N /.notdef 
/P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp 
/a /.notdef /c /d /e 2{/.notdef}rp /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /v /.notdef /x 135{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
143.943 457.358 mo
(CFARNoiseLevelCalcPipe)
[.715286 .596252 .774261 .715271 .774261 .536194 .298126 .41716 .476135 .655228 .47612 .536209 
.47612 .298126 .715286 .476135 .298126 .47612 .596268 .298126 .536194 0 ]xsh
163.003 473.965 mo
181.847 473.965 li
181.847 456.5 li
163.003 456.5 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
163.552 457.358 mo
(CFARNoiseLevelCalcPipe)
[.715286 .596252 .774261 .715271 .774261 .536194 .298126 .41716 .476135 .655228 .47612 .536209 
.47612 .298126 .715286 .476135 .298126 .47612 .596268 .298126 .536194 0 ]xsh
138.108 583.043 mo
194.562 583.043 li
194.562 493.574 li
138.108 493.574 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
138.648 494.432 mo
(CFARTreshLMaxSplitter)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .655228 .953354 .476135 
.536194 .596252 .536209 .298126 .298126 .298126 .298126 .476135 0 ]xsh
145.844 578.141 mo
193.336 578.141 li
193.336 499.09 li
145.844 499.09 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
146.364 499.948 mo
(CFARTreshLMaxReplicatePipe)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .655228 .953354 .476135 
.536194 .715286 .476135 .536194 .298126 .298126 .476135 .47612 .298126 .476135 .596252 .298126 
.536209 0 ]xsh
147.07 577.528 mo
192.111 577.528 li
192.111 508.282 li
147.07 508.282 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7A73D9AFACE39B0C8DF9EB6083858E657E6E95D2C42AE2914
EB3C7C6FCB5E9F471C2055D213C552ACA7BC04F55BA26F3B77D8DFB74AC132BE
41DB935437CE3B007C16B65D849E2E6D1C61659F2699A17D9AEEDDD0EBC23EB8
70A7377D2AC9DB56D0296131C3A8254097E85D96> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[65{/.notdef}rp /A /.notdef /C /D /.notdef /F /G 
/.notdef /I /.notdef /K /L /M /N /.notdef 
/P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp 
/a /b /c /d /e 2{/.notdef}rp /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /v /.notdef /x 135{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
147.619 509.14 mo
(CFARTreshLMaxSubSplitter)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .655228 .953354 .476135 
.536194 .596252 .536209 .536194 .596252 .536209 .298126 .298126 .298126 .298126 .47612 0 
]xsh
148.296 572.013 mo
177.557 572.013 li
177.557 515.329 li
148.296 515.329 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
148.781 516.187 mo
(CFARTreshPipe)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .596252 .298126 .536209 
0 ]xsh
149.521 564.046 mo
176.331 564.046 li
176.331 517.167 li
149.521 517.167 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
150.07 518.025 mo
(CFARTreshSplitter)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .596252 .536209 .298126 
.298126 .298126 .298126 .47612 0 ]xsh
159.173 558.531 mo
175.106 558.531 li
175.106 525.133 li
159.173 525.133 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B81F2C3AAA7F9332A1FC560AB2BC70F6F61F670AD82FC8B626
674790DAFBDF46077811E1DF38721CA7CA8FBC2C5E006E567037490710BD3A02
BCB7C7EDEC00C0FF3F7CF7FF144794FA5B0DC9D77482C00E98ABF65E83ECDA1A
E1009D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[65{/.notdef}rp /A /.notdef /C /D /.notdef /F /G 
/.notdef /I /.notdef /K /L /M /N /.notdef 
/P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp 
/a /b /c /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /v /.notdef /x 135{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
159.667 525.992 mo
(CFARTreshGofPipe)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .774261 .536194 .357101 
.596252 .298126 .536209 0 ]xsh
177.097 524.521 mo
190.579 524.521 li
190.579 515.023 li
177.097 515.023 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
177.646 515.88 mo
(CFARLMaxPipe)
[.715286 .596252 .774261 .715271 .655228 .953354 .476135 .536194 .596268 .298126 .536194 0 
]xsh
142.397 602.346 mo
188.97 602.346 li
188.97 583.656 li
142.397 583.656 li
cp
@
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B7A73DDF325AF121518DD24D79A1D6297F2682F9AD5083CE90
6B71FC8BFB529DE7E11E55AF343C688ECAE2F8E1922FBFF6524D1DEA97BD39D9
CE14632F8473959D0898D7B7EF3E2B985A44859DA5885A0B7E1416032223E48B
C8A546760893052D5D557F50BFBB6793E5108395A50448013F59BB2036802753
A16DC97698BA68F4F4EAF1FDEAF39B9DD03FEBA42B0F0E35E3A4C6407754F9F9
648DF8C8F5539FA7CCFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[65{/.notdef}rp /A /.notdef /C /D /.notdef /F /G 
/.notdef /I /.notdef /K /L /M /N /.notdef 
/P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp 
/a /b /c /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /v /.notdef /x /y 
134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
142.942 584.514 mo
(CFARDelayToLMax)
[.715286 .596252 .774261 .715271 .774261 .476135 .298126 .47612 .536209 .655228 .536194 .655228 
.953354 .476135 0 ]xsh
146.917 639.421 mo
182.613 639.421 li
182.613 602.959 li
146.917 602.959 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
147.453 603.817 mo
(CFARDetectPipe)
[.715286 .596252 .774261 .715271 .774261 .476135 .298126 .47612 .476135 .298126 .596252 .298126 
.536194 0 ]xsh
148.142 629.616 mo
181.386 629.616 li
181.386 610.926 li
148.142 610.926 li
cp
@
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
148.632 611.783 mo
(CFARDetectPipeSplitter)
[.715286 .596252 .774261 .715271 .774261 .476135 .298126 .47612 .476135 .298126 .596252 .298126 
.536209 .47612 .596252 .536209 .298126 .298126 .298126 .298126 .476135 0 ]xsh
182.689 5.01996 mo
182.689 3.58099 181.077 2.41498 179.089 2.41498 cv
177.1 2.41498 175.489 3.58099 175.489 5.01996 cv
175.489 6.45795 177.1 7.62396 179.089 7.62396 cv
181.077 7.62396 182.689 6.45795 182.689 5.01996 cv
@
182.689 5.01996 mo
182.689 3.58099 181.077 2.41498 179.089 2.41498 cv
177.1 2.41498 175.489 3.58099 175.489 5.01996 cv
175.489 6.45795 177.1 7.62396 179.089 7.62396 cv
181.077 7.62396 182.689 6.45795 182.689 5.01996 cv
/1 
[/DeviceRGB] /CSA add_res
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
/hyphen <1C60D8A8C9B81F2C7E673161CF52871F3F524B3A1BAC5ADA04F510A
476> |-
/slash <1C60D8A8C9B854D088EAD778FBC18D924BA165ED7CB0EB5700C3B61B
62ACF96E65C0BF> |-
/zero <1C60D8A8C9B7A73DE18CEEF4E48C6DD01FBACAA39C3CF5567D0E5C788
075445C95D6A3B6E540D57A95C2149688073A3E100742CAF1210D033AAEFAE6F
8B444349FD5782CA146EC98165CB56922017B727DFF8905922E07> |-
/one <1C60D8A8C9B7A73DB94F41466C876FCA9AF55081C1C70D8EC4AB3C9249
D700CD0FF27B669AF104FB3406E5DFE3F3B0AB0CAE2CF1998D0DA43C395891C4
7CD031071E50A5> |-
/colon <1C60D8A8C9B854D0E389293C42E83787A5BE0CE9B5745E40D1B32D07
F826004562E0981DB26F3EF2E2B5CD932C33C49C462F9673F306A9A8ECFFE93D
9FCE8BF4190AA3F1208FCCE1> |-
/equal <1C60D8A8C9B7E7C1C7C30B941AA047473EBF9655DE246137CE0666A3
DD27E47997A26319529C8C4FF5C38D266AE0> |-
/greater <1C60D8A8C9B7E7C1C7C30B940B3D62C7A181F0EBB0723CBB160375
71F050C44CCE59A85ACB3DB6BF9B03383F> |-
/O <1C60D8A8C9B6079F258D65BC2331B95A484F6FB0C89DE7976C286549CD33
A4D7316575EC038BAA234ED3FB5DEACB25E52512A7CBD428E6DBD2EB830622E8
8A44262525560702DCFFFB3478FE1A2C6113548B23F661EC01296D75C1A7D5FE
B75CD951FFE5A9> |-
/k <1C60D8A8C9B7A73D926FE6D4B51E06A6595F3746ABEED643EB32E31FC5C1
56BE33D279A48C7177D38FEEE25BE39FA8184693C31C3DD98D1AF000E30B25B8
F0029B9D7DAB8132C06DAF7AF8346F39C9E4C7E69A448E350100342A6E22A322
C4DEF85ED9405E1A9FCE65A5B4B5084195D644BBC14B138BCD62C9C4EFF347DE
06C9D1F36BBC04C3531EBEE642B499C247> |-
/w <1C60D8A8C9B6079F6CBBA5F366E947F933D60DF598D919B1B7650559D736
37DABDC1EE55BCEC17305D792CEB494E24BD853631335C74FFCA113C4D914522
6940D65B0FA636B78B1332922431C88D4DDF20C0A3C1C91D0C3F0EC21F67A6EF
80D94D8DD0BC64DA8FAF76B12BBC90C7B441833497F4FAAF7AFFFE22453504D1
C6C3D3F89787D8CE910F64CD7AC81F424C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 58 /colon put
dup 61 /equal put
dup 62 /greater put
dup 79 /O put
dup 107 /k put
dup 119 /w put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash /zero /one 
8{/.notdef}rp /colon 2{/.notdef}rp /equal /greater 2{/.notdef}rp /A /.notdef 
/C /D /.notdef /F /G /.notdef /I /.notdef 
/K /L /M /N /O /P /.notdef /R 
/S /T /.notdef /V 10{/.notdef}rp /a /b /c 
/d /e /f /.notdef /h /i /.notdef /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /x /y 134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
176.736 4.03892 mo
(FileReader)
[.596252 .298126 .298126 .476135 .715286 .47612 .476135 .536194 .476135 0 ]xsh
177.416 5.26457 mo
(work=0)
[.774261 .536194 .357101 .536194 .604843 0 ]xsh
177.074 6.49015 mo
(I/O: 0->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
183.302 11.7599 mo
183.302 10.999 181.416 10.382 179.089 10.382 cv
176.762 10.382 174.876 10.999 174.876 11.7599 cv
174.876 12.522 176.762 13.139 179.089 13.139 cv
181.416 13.139 183.302 12.522 183.302 11.7599 cv
@
183.302 11.7599 mo
183.302 10.999 181.416 10.382 179.089 10.382 cv
176.762 10.382 174.876 10.999 174.876 11.7599 cv
174.876 12.522 176.762 13.139 179.089 13.139 cv
181.416 13.139 183.302 12.522 183.302 11.7599 cv
1 gry
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C7961C5101279ABC36EDE6472BD125007B977
158C4E9FC1695861D4B758EA0B2DA40929DA2764CDB06C7B17969E83F9B9F9DB
69731300937B8C87AE99> |-
/parenright <1C60D8A8C9B81F2C3AE115477765EA9A623E840D3901B96042A
533934EFD3574B5C656B3B3F7387587FE0D191D87B3E12F0EE70351D07A784B9
DEAB1C75708B7B3217116> |-
/comma <1C60D8A8C9B8707CDCE153BE174BF3415C26A42365D336CF0B48FBEC
E2CCCE829E5297D863F3AA9AC7B62E5A6EDE06B2E79A00ED16CF91E8C6953AD2
9D6E96EF745E730ABC2B82BE60EB1DBDD5981EF3D78237B91F6DA501> |-
/two <1C60D8A8C9B7A73DB9C4155FCF739F7C1974D5BF41CC3E8700100AE610
E49DF6B4C276649A8B3177B0F76FADB15EC55BD4BBD1CDF8C5F886738FFDBD44
2FF8A0594A170A20B9C3E13444FE4DC986DA862896B80FFA135FA164A257> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 50 /two put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/.notdef /slash /zero /one /two 7{/.notdef}rp /colon 2{/.notdef}rp 
/equal /greater 2{/.notdef}rp /A /.notdef /C /D /.notdef 
/F /G /.notdef /I /.notdef /K /L /M 
/N /O /P /.notdef /R /S /T /.notdef 
/V 10{/.notdef}rp /a /b /c /d /e /f 
/.notdef /h /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /x /y 134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
175.679 12.0049 mo
(roundrobin\(2,2\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
179.089 7.62396 mo
179.089 8.31293 179.089 9.00293 179.089 9.69196 cv
@
178.936 9.61597 mo
179.089 10.382 li
179.319 9.61597 li
cp
@
178.936 9.61597 mo
179.089 10.382 li
179.319 9.61597 li
f
177.863 19.42 mo
177.863 17.517 175.12 15.973 171.735 15.973 cv
168.351 15.973 165.607 17.517 165.607 19.42 cv
165.607 21.324 168.351 22.8669 171.735 22.8669 cv
175.12 22.8669 177.863 21.324 177.863 19.42 cv
@
177.863 19.42 mo
177.863 17.517 175.12 15.973 171.735 15.973 cv
168.351 15.973 165.607 17.517 165.607 19.42 cv
165.607 21.324 168.351 22.8669 171.735 22.8669 cv
175.12 22.8669 177.863 21.324 177.863 19.42 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/asterisk <1C60D8A8C9B7A73DB9A0737247D562C61165E8E636EE73CF26D64
F3C6728422CEE27A3F00DC7152CA3773F07EA559F0959F48B519FDEC6150629C
166D2B4FBEF2A598C45B9530847243905C1F3F150F0DD5877800507BF2B97A2E
4942336B61DB2054C6AB2AE38E3AEA192A16823CC1BE212834012F90F71E96A0
46E312361C7B9D33CA838F52208FFCDFB3B3A9B2A9728D3AFAB94EEE3598CA05
C0D62AFFA345B041C6B4E56F6827F181D11C4BECD0C9CCA67> |-
/four <1C60D8A8C9B7A73DB99E8D3796659F80CD8CFB6F4891658B64B2996E4
565B417E6680D9494DD50CBC7F026F985B68E97EBCD932CA0004F37BA5FD28FA
5EB6F0DC8CCF44A75B207DA88B4B0D8C53ACF90F9CAE1B04C7036C5BF682DB0A
BF0221167> |-
/six <1C60D8A8C9B7A73DF81BACD811429F931042E1295F1D2320E46DE79DF7
47FCAABFFD92F045A475E54E15C8E93ECB3BD59C8545C0EF45BF22429615FC68
5C033A02F070B2C6D7D737838C1853D297AC8915086E73952A7A9847D6F588AB
17767CC39CB62607242BC1B7BFF5295CEB6C03755CD9B53DA2> |-
/nine <1C60D8A8C9B7A73DFCCE6C978678EE12F2E62BD7D7FA244984C1E12F1
0EB0B8765182EBCE165DFB850DB8B03381969B80BB1CA53FFB24B5DE34530C8C
83A80415FE19B7C2B551E605143CF6469C8BCE336F9A5E5012DD932CF553D663
37837328637F50B90FF9AE8815D00BBA7EFCE6D508C5B6EBE2D> |-
/E <1C60D8A8C9B7D8BE1621F7F8DAEB9FA9CBAFC8F4F4D756F2191C830A0E4A
58F87E3DDE67D49AF36DDF5F1FB2D74CAA0A1A0C249C8C349E149A4722F92BF7
61EFA3C2F9EC864F14F3A3AC121B867A3642166A4B07211381D27468A1D61050
1454C0DD1325D701AB4ADD917E16E61514B3C2631A525AEC590FB4C52AA73BF6
506DADDCC92C07368DF00A34F77E6ED1C2061C6913B4C24C30A64720E240E09F
9DD8F5EF76F17E9EEAE569D41B7D8D946B46BFFC> |-
/U <1C60D8A8C9B6079F675A124E1112F68E116C07D407D6BD729F3D1467FEC9
DB1B717EDCA1CB257898FAA810DC98AD012099D6E27B9582DB9C127CF24AAE1E
5B37683D2BCD64B5A5B8A07FAB5E4A8A80CE7FE3009E0C18967F5352FF3AD65B
1392BE000C7D33B48AEC2DD2A19998C5FE8EA47D78> |-
/W <1C60D8A8C9B5D6EF221D1F535C4E993C98F3C3E8C6F16C822BD2743EB782
1EB7D4579AED89E03CEC92EC38206B161850892F887AD5C7930EF4023F5FCBE1
1EE2208AD3E1BD1F677AACB74B3CC3710F142D0BA108A85A0E4D5D852306CED1
4B5207F2E46DF8D6DC78FEF21F895C03164E67E0D168BBFB54CA35ABBA9BABB6
1C9F3A4AAD762B0057729986D9DB719BDE2CE08FDB5B50F7244A0094B314415C
47AAC538D3C6C8E1> |-
/g <1C60D8A8C9B7A73D85D7E997B7B5DF7D7777AF52CC5562CB6E990E974840
46648599A1D9C4DB63B2EA37B7BBC0C3039255635B40FAB067F562720BFA98A6
8AA5F28640EAE52B9FE1BA9F5F2A49A2F977CAB7D5C25E3626BAA2BEB9E431EA
60B6FFDB96CDFE0161651CB3C7DDAAF79341AA1B63131C7BD07B3EF7C547B329
2DEEC810138CCDC2FA69E1A2AD41097A54F4DBBBA72B1810538F2F0FBA5B3B54
046B0BB798F435A12098BB54904B4FA0166943538B1D7B8EA5970358CDBCC48E
31C506A3AAB0AC2519075E7791339AF09F8C1F93B0D81A9E5ED3B02D4C03B817
17F61566CDC855CB444B31FBC8E71F4A79E39CF6ED7B9B21E0269B8614410251
F072B930BD3C2C0B5BE3125CE4461E97B369DD7B68AF48B8706DE7D2976BB7A8
F7FA6E1A10F519A6E8E51022609E6B7A2E822DDCD222A999CAA520FD83CCB934
D41B4EF6E07BE85DFA424019E44CA0D51152EDBDE920B3C59D4A719415BD84E9
F231F0CBEF222AB9855B090598B4D01FCC8283B4EC699D2D8EDA681DF37E56EB
75FAFC019A1A3645CA60183B64A594CD3556BA6088F7C2AF3F05FDD0875B0187
C18BC8AC2785F74D85EFAA74EA4D56B1D0576FD461BA0B37199C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 42 /asterisk put
dup 52 /four put
dup 54 /six put
dup 57 /nine put
dup 69 /E put
dup 85 /U put
dup 87 /W put
dup 103 /g put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /.notdef /four 
/.notdef /six 2{/.notdef}rp /nine /colon 2{/.notdef}rp /equal /greater 
2{/.notdef}rp /A /.notdef /C /D /E /F /G 
/.notdef /I /.notdef /K /L /M /N /O 
/P /.notdef /R /S /T /U /V /W 
9{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/x /y 134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
169.174 17.8269 mo
(WeightCalc)
[1.01233 .476135 .298126 .536194 .536209 .298126 .715271 .476135 .298126 0 ]xsh
168.723 19.0525 mo
(work=106496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.72 20.2782 mo
(I/O: 2->2)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
167.178 21.5038 mo
(*** STATEFUL ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .774246 .655228 .655228 .596252 .774261 .655228 
.268097 .536209 .536194 0 ]xsh
177.787 13.0629 mo
177.097 13.829 176.178 14.824 175.259 15.744 cv
@
175.029 15.6669 mo
174.646 16.356 li
175.335 15.973 li
cp
@
175.029 15.6669 mo
174.646 16.356 li
175.335 15.973 li
f
192.647 19.42 mo
192.647 17.517 189.903 15.973 186.519 15.973 cv
183.135 15.973 180.391 17.517 180.391 19.42 cv
180.391 21.324 183.135 22.8669 186.519 22.8669 cv
189.903 22.8669 192.647 21.324 192.647 19.42 cv
@
192.647 19.42 mo
192.647 17.517 189.903 15.973 186.519 15.973 cv
183.135 15.973 180.391 17.517 180.391 19.42 cv
180.391 21.324 183.135 22.8669 186.519 22.8669 cv
189.903 22.8669 192.647 21.324 192.647 19.42 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
183.958 17.8269 mo
(WeightCalc)
[1.01233 .476135 .298126 .536194 .536209 .298126 .715271 .476135 .298126 0 ]xsh
183.507 19.0525 mo
(work=106496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
184.504 20.2782 mo
(I/O: 2->2)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
181.962 21.5038 mo
(*** STATEFUL ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .774246 .655228 .655228 .596252 .774261 .655228 
.268097 .536209 .536194 0 ]xsh
180.391 13.0629 mo
181.157 13.905 182.153 14.9009 183.149 15.973 cv
@
182.842 15.973 mo
183.532 16.356 li
183.149 15.6669 li
cp
@
182.842 15.973 mo
183.532 16.356 li
183.149 15.6669 li
f
184.144 100.31 mo
184.144 99.549 182.258 98.931 179.931 98.931 cv
177.605 98.931 175.718 99.549 175.718 100.31 cv
175.718 101.071 177.605 101.689 179.931 101.689 cv
182.258 101.689 184.144 101.071 184.144 100.31 cv
@
184.144 100.31 mo
184.144 99.549 182.258 98.931 179.931 98.931 cv
177.605 98.931 175.718 99.549 175.718 100.31 cv
175.718 101.071 177.605 101.689 179.931 101.689 cv
182.258 101.689 184.144 101.071 184.144 100.31 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
176.521 100.555 mo
(roundrobin\(2,2\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
196.171 106.132 mo
196.171 105.37 188.9 104.753 179.931 104.753 cv
170.963 104.753 163.692 105.37 163.692 106.132 cv
163.692 106.893 170.963 107.51 179.931 107.51 cv
188.9 107.51 196.171 106.893 196.171 106.132 cv
@
196.171 106.132 mo
196.171 105.37 188.9 104.753 179.931 104.753 cv
170.963 104.753 163.692 105.37 163.692 106.132 cv
163.692 106.893 170.963 107.51 179.931 107.51 cv
188.9 107.51 196.171 106.893 196.171 106.132 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
164.457 106.377 mo
(roundrobin\(4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 .268097 .536194 .268112 .536194 .268097 .536209 .268097 .536194 .268097 .536209 
.268097 .536194 .268112 .536194 .268097 .536209 .268097 .536194 .268097 .536209 .268097 .536209 
.268097 .536194 .268097 .536209 .268097 .536194 .268112 .536194 .268097 .536194 .268112 .536194 
.268097 .536209 .268097 .536194 .268097 .536209 .268097 .536209 .268097 .536194 .268097 .536209 
.268097 .536194 .268112 .536194 .268097 .536194 .268112 .536194 .268097 .536209 .268097 .536194 
.268097 .536209 0 ]xsh
179.931 101.689 mo
179.931 102.378 179.931 103.221 179.931 103.987 cv
@
179.778 103.987 mo
179.931 104.753 li
180.161 103.987 li
cp
@
179.778 103.987 mo
179.931 104.753 li
180.161 103.987 li
f
176.944 29.838 mo
176.944 28.4 174.509 27.2339 171.505 27.2339 cv
168.502 27.2339 166.067 28.4 166.067 29.838 cv
166.067 31.2759 168.502 32.442 171.505 32.442 cv
174.509 32.442 176.944 31.2759 176.944 29.838 cv
@
176.944 29.838 mo
176.944 28.4 174.509 27.2339 171.505 27.2339 cv
168.502 27.2339 166.067 28.4 166.067 29.838 cv
166.067 31.2759 168.502 32.442 171.505 32.442 cv
174.509 32.442 176.944 31.2759 176.944 29.838 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73DB9E68392B0D8A76464A51F2E94D7CC8D0C2C4EA9
EB677CBC38A50658519E8BF18CD893FCF8B1BA3E22E132B8EDB4B7CD483A2AC4
23E82DF2F3816B8AE8EA5F180D3F5DFF2BF284FCE4CE5C4E107DDB61A9BE179C
50061EE6040417B0DF341D85D92A63653C2A28BA649E4CD9966C4B081E30F323
54693AC79886604480856D93C0D7CC0DE6962663CC1F198BBFA4> |-
/five <1C60D8A8C9B7A73DB9D92E2C498F1C8C272174C48D3E3EA8F27C6E6BA
93064621D133D030C551A42025686691A783FB90A2D496BEF06790AC79A6878D
99BC23CD14D9CFD812148CC847ABD0CF7E73A1A9D5ACE6E2E3BBFD4DD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 51 /three put
dup 53 /five put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six 2{/.notdef}rp /nine /colon 2{/.notdef}rp /equal /greater 
2{/.notdef}rp /A /.notdef /C /D /E /F /G 
/.notdef /I /.notdef /K /L /M /N /O 
/P /.notdef /R /S /T /U /V /W 
9{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/x /y 134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
167.335 28.8579 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
168.761 30.0835 mo
(work=50232)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
168.954 31.3091 mo
(I/O: 64->64)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
171.659 22.944 mo
171.659 24.093 171.582 25.395 171.582 26.5439 cv
@
171.429 26.468 mo
171.582 27.2339 li
171.812 26.468 li
cp
@
171.429 26.468 mo
171.582 27.2339 li
171.812 26.468 li
f
176.944 37.804 mo
176.944 36.366 174.509 35.2 171.505 35.2 cv
168.502 35.2 166.067 36.366 166.067 37.804 cv
166.067 39.243 168.502 40.4089 171.505 40.4089 cv
174.509 40.4089 176.944 39.243 176.944 37.804 cv
@
176.944 37.804 mo
176.944 36.366 174.509 35.2 171.505 35.2 cv
168.502 35.2 166.067 36.366 166.067 37.804 cv
166.067 39.243 168.502 40.4089 171.505 40.4089 cv
174.509 40.4089 176.944 39.243 176.944 37.804 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
167.335 36.8239 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
168.761 38.0495 mo
(work=50544)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
168.954 39.2751 mo
(I/O: 32->32)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
171.505 32.442 mo
171.505 33.0549 171.505 33.745 171.505 34.434 cv
@
171.352 34.434 mo
171.505 35.2 li
171.735 34.434 li
cp
@
171.352 34.434 mo
171.505 35.2 li
171.735 34.434 li
f
176.944 45.7709 mo
176.944 44.332 174.509 43.166 171.505 43.166 cv
168.502 43.166 166.067 44.332 166.067 45.7709 cv
166.067 47.2089 168.502 48.3749 171.505 48.3749 cv
174.509 48.3749 176.944 47.2089 176.944 45.7709 cv
@
176.944 45.7709 mo
176.944 44.332 174.509 43.166 171.505 43.166 cv
168.502 43.166 166.067 44.332 166.067 45.7709 cv
166.067 47.2089 168.502 48.3749 171.505 48.3749 cv
174.509 48.3749 176.944 47.2089 176.944 45.7709 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A73D9EB159A3CFECEE26FAC12AD4B6691842B4C84783
E84E1D8CD272AEC54014C937C15B810E403549328E3DC44B6A66E9E0AE5509A1
20FFE6F694340EC43D35C59CD7D1B2F14C1F1D5BA576A10F77E962817750FC0E
DC62627EE0E94BCE030A10C59143A015250A384C09B6A65F8572DF3FCBF68CF8
0D23E4E88D0691BD2178810DDABD5F40D8018F795B8CB5A52DDDD05F80E9A2BC
CDF3A5E14C701FBADF0447A7AE0E47FA8F86216AC25155BFF3569B19382CA905
7B18009FE630A2D7CEFDC3A4A3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /.notdef /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /.notdef /C /D /E /F 
/G /.notdef /I /.notdef /K /L /M /N 
/O /P /.notdef /R /S /T /U /V 
/W 9{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /x /y 134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
167.335 44.7899 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
168.761 46.0155 mo
(work=51168)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
168.954 47.2411 mo
(I/O: 16->16)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
171.505 40.4089 mo
171.505 41.022 171.505 41.7109 171.505 42.4 cv
@
171.352 42.4 mo
171.505 43.166 li
171.735 42.4 li
cp
@
171.352 42.4 mo
171.505 43.166 li
171.735 42.4 li
f
176.944 53.737 mo
176.944 52.299 174.509 51.133 171.505 51.133 cv
168.502 51.133 166.067 52.299 166.067 53.737 cv
166.067 55.176 168.502 56.342 171.505 56.342 cv
174.509 56.342 176.944 55.176 176.944 53.737 cv
@
176.944 53.737 mo
176.944 52.299 174.509 51.133 171.505 51.133 cv
168.502 51.133 166.067 52.299 166.067 53.737 cv
166.067 55.176 168.502 56.342 171.505 56.342 cv
174.509 56.342 176.944 55.176 176.944 53.737 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
167.335 52.7569 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
168.761 53.9826 mo
(work=52416)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
169.49 55.2082 mo
(I/O: 8->8)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
171.505 48.3749 mo
171.505 48.988 171.505 49.6769 171.505 50.3669 cv
@
171.352 50.3669 mo
171.505 51.133 li
171.735 50.3669 li
cp
@
171.352 50.3669 mo
171.505 51.133 li
171.735 50.3669 li
f
176.638 61.704 mo
176.638 60.265 174.717 59.099 172.348 59.099 cv
169.979 59.099 168.058 60.265 168.058 61.704 cv
168.058 63.142 169.979 64.308 172.348 64.308 cv
174.717 64.308 176.638 63.142 176.638 61.704 cv
@
176.638 61.704 mo
176.638 60.265 174.717 59.099 172.348 59.099 cv
169.979 59.099 168.058 60.265 168.058 61.704 cv
168.058 63.142 169.979 64.308 172.348 64.308 cv
174.717 64.308 176.638 63.142 176.638 61.704 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
169.369 60.7229 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
169.335 61.9485 mo
(work=128128)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
170.333 63.1742 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
171.812 56.342 mo
171.888 57.0309 171.965 57.797 172.042 58.5629 cv
@
171.812 58.3329 mo
172.118 59.099 li
172.195 58.3329 li
cp
@
171.812 58.3329 mo
172.118 59.099 li
172.195 58.3329 li
f
177.097 69.67 mo
177.097 68.2319 175.177 67.066 172.808 67.066 cv
170.439 67.066 168.518 68.2319 168.518 69.67 cv
168.518 71.108 170.439 72.274 172.808 72.274 cv
175.177 72.274 177.097 71.108 177.097 69.67 cv
@
177.097 69.67 mo
177.097 68.2319 175.177 67.066 172.808 67.066 cv
170.439 67.066 168.518 68.2319 168.518 69.67 cv
168.518 71.108 170.439 72.274 172.808 72.274 cv
175.177 72.274 177.097 71.108 177.097 69.67 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
169.829 68.6899 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
169.795 69.9155 mo
(work=128128)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
170.793 71.1411 mo
(I/O: 8->8)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
172.501 64.308 mo
172.578 64.997 172.654 65.7629 172.654 66.529 cv
@
172.501 66.3 mo
172.654 67.066 li
172.884 66.3 li
cp
@
172.501 66.3 mo
172.654 67.066 li
172.884 66.3 li
f
177.327 77.6359 mo
177.327 76.1979 175.406 75.0319 173.037 75.0319 cv
170.668 75.0319 168.748 76.1979 168.748 77.6359 cv
168.748 79.075 170.668 80.241 173.037 80.241 cv
175.406 80.241 177.327 79.075 177.327 77.6359 cv
@
177.327 77.6359 mo
177.327 76.1979 175.406 75.0319 173.037 75.0319 cv
170.668 75.0319 168.748 76.1979 168.748 77.6359 cv
168.748 79.075 170.668 80.241 173.037 80.241 cv
175.406 80.241 177.327 79.075 177.327 77.6359 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
170.058 76.6559 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
170.024 77.8816 mo
(work=128128)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
170.486 79.1072 mo
(I/O: 16->16)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
172.884 72.274 mo
172.884 72.964 172.961 73.7299 172.961 74.496 cv
@
172.808 74.266 mo
172.961 75.0319 li
173.191 74.266 li
cp
@
172.808 74.266 mo
172.961 75.0319 li
173.191 74.266 li
f
177.404 85.603 mo
177.404 84.164 175.483 82.998 173.114 82.998 cv
170.745 82.998 168.824 84.164 168.824 85.603 cv
168.824 87.041 170.745 88.207 173.114 88.207 cv
175.483 88.207 177.404 87.041 177.404 85.603 cv
@
177.404 85.603 mo
177.404 84.164 175.483 82.998 173.114 82.998 cv
170.745 82.998 168.824 84.164 168.824 85.603 cv
168.824 87.041 170.745 88.207 173.114 88.207 cv
175.483 88.207 177.404 87.041 177.404 85.603 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
170.135 84.6219 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
170.101 85.8476 mo
(work=128128)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
170.563 87.0732 mo
(I/O: 32->32)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
173.037 80.241 mo
173.037 80.9299 173.114 81.696 173.114 82.462 cv
@
172.961 82.2319 mo
173.114 82.998 li
173.344 82.2319 li
cp
@
172.961 82.2319 mo
173.114 82.998 li
173.344 82.2319 li
f
177.48 93.569 mo
177.48 92.131 175.56 90.965 173.191 90.965 cv
170.822 90.965 168.901 92.131 168.901 93.569 cv
168.901 95.008 170.822 96.174 173.191 96.174 cv
175.56 96.174 177.48 95.008 177.48 93.569 cv
@
177.48 93.569 mo
177.48 92.131 175.56 90.965 173.191 90.965 cv
170.822 90.965 168.901 92.131 168.901 93.569 cv
168.901 95.008 170.822 96.174 173.191 96.174 cv
175.56 96.174 177.48 95.008 177.48 93.569 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
170.212 92.5889 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
170.178 93.8145 mo
(work=128128)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
170.64 95.0401 mo
(I/O: 64->64)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
173.114 88.207 mo
173.114 88.897 173.191 89.663 173.191 90.429 cv
@
173.037 90.199 mo
173.191 90.965 li
173.42 90.199 li
cp
@
173.037 90.199 mo
173.191 90.965 li
173.42 90.199 li
f
175.412 95.791 mo
176.331 96.71 177.327 97.706 178.17 98.548 cv
@
177.94 98.6249 mo
178.629 99.008 li
178.246 98.318 li
cp
@
177.94 98.6249 mo
178.629 99.008 li
178.246 98.318 li
f
192.264 29.838 mo
192.264 28.4 189.829 27.2339 186.825 27.2339 cv
183.822 27.2339 181.387 28.4 181.387 29.838 cv
181.387 31.2759 183.822 32.442 186.825 32.442 cv
189.829 32.442 192.264 31.2759 192.264 29.838 cv
@
192.264 29.838 mo
192.264 28.4 189.829 27.2339 186.825 27.2339 cv
183.822 27.2339 181.387 28.4 181.387 29.838 cv
181.387 31.2759 183.822 32.442 186.825 32.442 cv
189.829 32.442 192.264 31.2759 192.264 29.838 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.655 28.8579 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
184.081 30.0835 mo
(work=50232)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
184.274 31.3091 mo
(I/O: 64->64)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
186.596 22.944 mo
186.672 24.093 186.749 25.395 186.749 26.5439 cv
@
186.596 26.468 mo
186.749 27.2339 li
186.979 26.468 li
cp
@
186.596 26.468 mo
186.749 27.2339 li
186.979 26.468 li
f
192.264 37.804 mo
192.264 36.366 189.829 35.2 186.825 35.2 cv
183.822 35.2 181.387 36.366 181.387 37.804 cv
181.387 39.243 183.822 40.4089 186.825 40.4089 cv
189.829 40.4089 192.264 39.243 192.264 37.804 cv
@
192.264 37.804 mo
192.264 36.366 189.829 35.2 186.825 35.2 cv
183.822 35.2 181.387 36.366 181.387 37.804 cv
181.387 39.243 183.822 40.4089 186.825 40.4089 cv
189.829 40.4089 192.264 39.243 192.264 37.804 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.655 36.8239 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
184.081 38.0495 mo
(work=50544)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
184.274 39.2751 mo
(I/O: 32->32)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
186.825 32.442 mo
186.825 33.0549 186.825 33.745 186.825 34.434 cv
@
186.672 34.434 mo
186.825 35.2 li
187.055 34.434 li
cp
@
186.672 34.434 mo
186.825 35.2 li
187.055 34.434 li
f
192.264 45.7709 mo
192.264 44.332 189.829 43.166 186.825 43.166 cv
183.822 43.166 181.387 44.332 181.387 45.7709 cv
181.387 47.2089 183.822 48.3749 186.825 48.3749 cv
189.829 48.3749 192.264 47.2089 192.264 45.7709 cv
@
192.264 45.7709 mo
192.264 44.332 189.829 43.166 186.825 43.166 cv
183.822 43.166 181.387 44.332 181.387 45.7709 cv
181.387 47.2089 183.822 48.3749 186.825 48.3749 cv
189.829 48.3749 192.264 47.2089 192.264 45.7709 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.655 44.7899 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
184.081 46.0155 mo
(work=51168)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
184.274 47.2411 mo
(I/O: 16->16)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
186.825 40.4089 mo
186.825 41.022 186.825 41.7109 186.825 42.4 cv
@
186.672 42.4 mo
186.825 43.166 li
187.055 42.4 li
cp
@
186.672 42.4 mo
186.825 43.166 li
187.055 42.4 li
f
192.264 53.737 mo
192.264 52.299 189.829 51.133 186.825 51.133 cv
183.822 51.133 181.387 52.299 181.387 53.737 cv
181.387 55.176 183.822 56.342 186.825 56.342 cv
189.829 56.342 192.264 55.176 192.264 53.737 cv
@
192.264 53.737 mo
192.264 52.299 189.829 51.133 186.825 51.133 cv
183.822 51.133 181.387 52.299 181.387 53.737 cv
181.387 55.176 183.822 56.342 186.825 56.342 cv
189.829 56.342 192.264 55.176 192.264 53.737 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.655 52.7569 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
184.081 53.9826 mo
(work=52416)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
184.81 55.2082 mo
(I/O: 8->8)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
186.825 48.3749 mo
186.825 48.988 186.825 49.6769 186.825 50.3669 cv
@
186.672 50.3669 mo
186.825 51.133 li
187.055 50.3669 li
cp
@
186.672 50.3669 mo
186.825 51.133 li
187.055 50.3669 li
f
190.196 61.704 mo
190.196 60.265 188.275 59.099 185.906 59.099 cv
183.537 59.099 181.617 60.265 181.617 61.704 cv
181.617 63.142 183.537 64.308 185.906 64.308 cv
188.275 64.308 190.196 63.142 190.196 61.704 cv
@
190.196 61.704 mo
190.196 60.265 188.275 59.099 185.906 59.099 cv
183.537 59.099 181.617 60.265 181.617 61.704 cv
181.617 63.142 183.537 64.308 185.906 64.308 cv
188.275 64.308 190.196 63.142 190.196 61.704 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.927 60.7229 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
182.893 61.9485 mo
(work=128128)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
183.891 63.1742 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
186.519 56.342 mo
186.442 57.0309 186.366 57.797 186.289 58.5629 cv
@
186.136 58.3329 mo
186.213 59.099 li
186.519 58.3329 li
cp
@
186.136 58.3329 mo
186.213 59.099 li
186.519 58.3329 li
f
189.813 69.67 mo
189.813 68.2319 187.892 67.066 185.523 67.066 cv
183.154 67.066 181.234 68.2319 181.234 69.67 cv
181.234 71.108 183.154 72.274 185.523 72.274 cv
187.892 72.274 189.813 71.108 189.813 69.67 cv
@
189.813 69.67 mo
189.813 68.2319 187.892 67.066 185.523 67.066 cv
183.154 67.066 181.234 68.2319 181.234 69.67 cv
181.234 71.108 183.154 72.274 185.523 72.274 cv
187.892 72.274 189.813 71.108 189.813 69.67 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.544 68.6899 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
182.51 69.9155 mo
(work=128128)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
183.508 71.1411 mo
(I/O: 8->8)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
185.753 64.308 mo
185.753 64.921 185.676 65.61 185.676 66.3 cv
@
185.523 66.3 mo
185.676 67.066 li
185.906 66.3 li
cp
@
185.523 66.3 mo
185.676 67.066 li
185.906 66.3 li
f
189.583 77.6359 mo
189.583 76.1979 187.662 75.0319 185.293 75.0319 cv
182.924 75.0319 181.004 76.1979 181.004 77.6359 cv
181.004 79.075 182.924 80.241 185.293 80.241 cv
187.662 80.241 189.583 79.075 189.583 77.6359 cv
@
189.583 77.6359 mo
189.583 76.1979 187.662 75.0319 185.293 75.0319 cv
182.924 75.0319 181.004 76.1979 181.004 77.6359 cv
181.004 79.075 182.924 80.241 185.293 80.241 cv
187.662 80.241 189.583 79.075 189.583 77.6359 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.314 76.6559 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
182.28 77.8816 mo
(work=128128)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
182.742 79.1072 mo
(I/O: 16->16)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
185.447 72.274 mo
185.447 72.887 185.37 73.577 185.37 74.266 cv
@
185.217 74.266 mo
185.37 75.0319 li
185.6 74.266 li
cp
@
185.217 74.266 mo
185.37 75.0319 li
185.6 74.266 li
f
189.506 85.603 mo
189.506 84.164 187.586 82.998 185.217 82.998 cv
182.848 82.998 180.927 84.164 180.927 85.603 cv
180.927 87.041 182.848 88.207 185.217 88.207 cv
187.586 88.207 189.506 87.041 189.506 85.603 cv
@
189.506 85.603 mo
189.506 84.164 187.586 82.998 185.217 82.998 cv
182.848 82.998 180.927 84.164 180.927 85.603 cv
180.927 87.041 182.848 88.207 185.217 88.207 cv
187.586 88.207 189.506 87.041 189.506 85.603 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.238 84.6219 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
182.204 85.8476 mo
(work=128128)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
182.666 87.0732 mo
(I/O: 32->32)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
185.293 80.241 mo
185.293 80.8539 185.217 81.543 185.217 82.2319 cv
@
185.064 82.2319 mo
185.217 82.998 li
185.447 82.2319 li
cp
@
185.064 82.2319 mo
185.217 82.998 li
185.447 82.2319 li
f
189.43 93.569 mo
189.43 92.131 187.509 90.965 185.14 90.965 cv
182.771 90.965 180.851 92.131 180.851 93.569 cv
180.851 95.008 182.771 96.174 185.14 96.174 cv
187.509 96.174 189.43 95.008 189.43 93.569 cv
@
189.43 93.569 mo
189.43 92.131 187.509 90.965 185.14 90.965 cv
182.771 90.965 180.851 92.131 180.851 93.569 cv
180.851 95.008 182.771 96.174 185.14 96.174 cv
187.509 96.174 189.43 95.008 189.43 93.569 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.161 92.5889 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
182.127 93.8145 mo
(work=128128)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
182.589 95.0401 mo
(I/O: 64->64)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
185.217 88.207 mo
185.217 88.82 185.14 89.509 185.14 90.199 cv
@
184.987 90.199 mo
185.14 90.965 li
185.37 90.199 li
cp
@
184.987 90.199 mo
185.14 90.965 li
185.37 90.199 li
f
183.302 95.944 mo
182.689 96.7859 182 97.629 181.387 98.472 cv
@
181.31 98.2419 mo
181.004 99.008 li
181.617 98.472 li
cp
@
181.31 98.2419 mo
181.004 99.008 li
181.617 98.472 li
f
45.958 112.872 mo
45.958 111.434 44.2775 110.268 42.2046 110.268 cv
40.1317 110.268 38.4512 111.434 38.4512 112.872 cv
38.4512 114.311 40.1317 115.477 42.2046 115.477 cv
44.2775 115.477 45.958 114.311 45.958 112.872 cv
@
45.958 112.872 mo
45.958 111.434 44.2775 110.268 42.2046 110.268 cv
40.1317 110.268 38.4512 111.434 38.4512 112.872 cv
38.4512 114.311 40.1317 115.477 42.2046 115.477 cv
44.2775 115.477 45.958 114.311 45.958 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
40.5365 111.892 mo
(Identity)
[.357101 .536201 .476128 .536201 .298126 .298126 .298126 0 ]xsh
39.7279 113.118 mo
(work=2496)
[.774258 .536198 .357101 .536201 .604828 .536201 .536198 .536201 0 ]xsh
40.1896 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774258 .298126 .268101 .536201 .357098 .604832 0 ]xsh
164.305 106.515 mo
136.729 107.204 79.279 108.659 46.4176 110.268 cv
46.0346 110.345 45.6516 110.421 45.192 110.651 cv
@
45.2686 110.345 mo
44.7324 110.957 li
45.4984 110.728 li
cp
@
45.2686 110.345 mo
44.7324 110.957 li
45.4984 110.728 li
f
54.8436 112.872 mo
54.8436 111.434 53.1631 110.268 51.0902 110.268 cv
49.0173 110.268 47.3368 111.434 47.3368 112.872 cv
47.3368 114.311 49.0173 115.477 51.0902 115.477 cv
53.1631 115.477 54.8436 114.311 54.8436 112.872 cv
@
54.8436 112.872 mo
54.8436 111.434 53.1631 110.268 51.0902 110.268 cv
49.0173 110.268 47.3368 111.434 47.3368 112.872 cv
47.3368 114.311 49.0173 115.477 51.0902 115.477 cv
53.1631 115.477 54.8436 114.311 54.8436 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
49.4221 111.892 mo
(Identity)
[.357101 .536201 .476128 .536201 .298126 .298126 .298126 0 ]xsh
48.6135 113.118 mo
(work=2496)
[.774258 .536198 .357101 .536201 .604828 .536201 .536198 .536201 0 ]xsh
49.0752 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774258 .298126 .268101 .536198 .357101 .604832 0 ]xsh
164.841 106.668 mo
131.597 107.74 55.3032 110.268 55.3032 110.268 cv
54.9202 110.345 54.5372 110.421 54.0776 110.651 cv
@
54.1542 110.345 mo
53.618 110.957 li
54.384 110.728 li
cp
@
54.1542 110.345 mo
53.618 110.957 li
54.384 110.728 li
f
63.7292 112.872 mo
63.7292 111.434 62.0487 110.268 59.9758 110.268 cv
57.9029 110.268 56.2224 111.434 56.2224 112.872 cv
56.2224 114.311 57.9029 115.477 59.9758 115.477 cv
62.0487 115.477 63.7292 114.311 63.7292 112.872 cv
@
63.7292 112.872 mo
63.7292 111.434 62.0487 110.268 59.9758 110.268 cv
57.9029 110.268 56.2224 111.434 56.2224 112.872 cv
56.2224 114.311 57.9029 115.477 59.9758 115.477 cv
62.0487 115.477 63.7292 114.311 63.7292 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
58.3077 111.892 mo
(Identity)
[.357101 .536201 .476128 .536201 .298126 .298126 .298126 0 ]xsh
57.4991 113.118 mo
(work=2496)
[.774258 .536198 .357101 .536201 .604828 .536201 .536198 .536201 0 ]xsh
57.9608 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774258 .298126 .268101 .536201 .357098 .604832 0 ]xsh
163.692 106.208 mo
130.524 106.668 97.3566 108.43 64.1888 110.268 cv
63.8058 110.345 63.4228 110.421 62.9632 110.651 cv
@
63.0398 110.345 mo
62.5036 110.957 li
63.2696 110.728 li
cp
@
63.0398 110.345 mo
62.5036 110.957 li
63.2696 110.728 li
f
72.6148 112.872 mo
72.6148 111.434 70.9343 110.268 68.8614 110.268 cv
66.7885 110.268 65.108 111.434 65.108 112.872 cv
65.108 114.311 66.7885 115.477 68.8614 115.477 cv
70.9343 115.477 72.6148 114.311 72.6148 112.872 cv
@
72.6148 112.872 mo
72.6148 111.434 70.9343 110.268 68.8614 110.268 cv
66.7885 110.268 65.108 111.434 65.108 112.872 cv
65.108 114.311 66.7885 115.477 68.8614 115.477 cv
70.9343 115.477 72.6148 114.311 72.6148 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
67.1933 111.892 mo
(Identity)
[.357101 .536201 .476128 .536201 .298126 .298126 .298126 0 ]xsh
66.3847 113.118 mo
(work=2496)
[.774254 .536201 .357101 .536201 .604828 .536201 .536201 .536194 0 ]xsh
66.8464 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774254 .298134 .268097 .536201 .357101 .604828 0 ]xsh
163.769 106.285 mo
133.435 106.744 103.255 108.43 73.0744 110.268 cv
72.6914 110.345 72.3084 110.421 71.8488 110.651 cv
@
71.9254 110.345 mo
71.3892 110.957 li
72.1552 110.728 li
cp
@
71.9254 110.345 mo
71.3892 110.957 li
72.1552 110.728 li
f
81.5004 112.872 mo
81.5004 111.434 79.8199 110.268 77.747 110.268 cv
75.6741 110.268 73.9936 111.434 73.9936 112.872 cv
73.9936 114.311 75.6741 115.477 77.747 115.477 cv
79.8199 115.477 81.5004 114.311 81.5004 112.872 cv
@
81.5004 112.872 mo
81.5004 111.434 79.8199 110.268 77.747 110.268 cv
75.6741 110.268 73.9936 111.434 73.9936 112.872 cv
73.9936 114.311 75.6741 115.477 77.747 115.477 cv
79.8199 115.477 81.5004 114.311 81.5004 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
76.0789 111.892 mo
(Identity)
[.357101 .536201 .476128 .536201 .298126 .298126 .298126 0 ]xsh
75.2703 113.118 mo
(work=2496)
[.774254 .536201 .357101 .536201 .604828 .536201 .536201 .536194 0 ]xsh
75.732 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774254 .298134 .268097 .536201 .357101 .604828 0 ]xsh
163.769 106.285 mo
136.499 106.821 109.153 108.506 81.96 110.268 cv
81.577 110.345 81.194 110.421 80.7344 110.651 cv
@
80.811 110.345 mo
80.2748 110.957 li
81.0408 110.728 li
cp
@
80.811 110.345 mo
80.2748 110.957 li
81.0408 110.728 li
f
90.386 112.872 mo
90.386 111.434 88.7055 110.268 86.6326 110.268 cv
84.5597 110.268 82.8792 111.434 82.8792 112.872 cv
82.8792 114.311 84.5597 115.477 86.6326 115.477 cv
88.7055 115.477 90.386 114.311 90.386 112.872 cv
@
90.386 112.872 mo
90.386 111.434 88.7055 110.268 86.6326 110.268 cv
84.5597 110.268 82.8792 111.434 82.8792 112.872 cv
82.8792 114.311 84.5597 115.477 86.6326 115.477 cv
88.7055 115.477 90.386 114.311 90.386 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
84.9645 111.892 mo
(Identity)
[.357101 .536201 .476128 .536201 .298126 .298126 .298126 0 ]xsh
84.1559 113.118 mo
(work=2496)
[.774254 .536201 .357101 .536201 .604828 .536201 .536201 .536194 0 ]xsh
84.6176 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774254 .298134 .268097 .536201 .357101 .604828 0 ]xsh
163.845 106.285 mo
139.487 106.898 115.128 108.583 90.8456 110.268 cv
90.4626 110.345 90.003 110.421 89.62 110.651 cv
@
89.6966 110.345 mo
89.1604 110.957 li
89.9264 110.728 li
cp
@
89.6966 110.345 mo
89.1604 110.957 li
89.9264 110.728 li
f
99.2716 112.872 mo
99.2716 111.434 97.5911 110.268 95.5182 110.268 cv
93.4453 110.268 91.7648 111.434 91.7648 112.872 cv
91.7648 114.311 93.4453 115.477 95.5182 115.477 cv
97.5911 115.477 99.2716 114.311 99.2716 112.872 cv
@
99.2716 112.872 mo
99.2716 111.434 97.5911 110.268 95.5182 110.268 cv
93.4453 110.268 91.7648 111.434 91.7648 112.872 cv
91.7648 114.311 93.4453 115.477 95.5182 115.477 cv
97.5911 115.477 99.2716 114.311 99.2716 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
93.8501 111.892 mo
(Identity)
[.357101 .536201 .476128 .536201 .298126 .298126 .298126 0 ]xsh
93.0415 113.118 mo
(work=2496)
[.774254 .536201 .357101 .536201 .604828 .536201 .536201 .536194 0 ]xsh
93.5032 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774254 .298134 .268097 .536201 .357101 .604828 0 ]xsh
163.922 106.361 mo
142.474 106.974 121.103 108.583 99.7312 110.268 cv
99.3482 110.345 98.8886 110.421 98.5056 110.651 cv
@
98.5822 110.345 mo
98.046 110.957 li
98.812 110.728 li
cp
@
98.5822 110.345 mo
98.046 110.957 li
98.812 110.728 li
f
108.157 112.872 mo
108.157 111.434 106.477 110.268 104.404 110.268 cv
102.331 110.268 100.65 111.434 100.65 112.872 cv
100.65 114.311 102.331 115.477 104.404 115.477 cv
106.477 115.477 108.157 114.311 108.157 112.872 cv
@
108.157 112.872 mo
108.157 111.434 106.477 110.268 104.404 110.268 cv
102.331 110.268 100.65 111.434 100.65 112.872 cv
100.65 114.311 102.331 115.477 104.404 115.477 cv
106.477 115.477 108.157 114.311 108.157 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
102.736 111.892 mo
(Identity)
[.357101 .536201 .476128 .536201 .298126 .298126 .298126 0 ]xsh
101.927 113.118 mo
(work=2496)
[.774254 .536201 .357101 .536201 .604828 .536201 .536201 .536194 0 ]xsh
102.389 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774254 .298134 .268097 .536201 .357101 .604828 0 ]xsh
165.684 106.821 mo
149.674 107.587 124.09 108.889 108.617 110.268 cv
108.234 110.345 107.774 110.421 107.391 110.651 cv
@
107.468 110.345 mo
106.932 110.957 li
107.698 110.728 li
cp
@
107.468 110.345 mo
106.932 110.957 li
107.698 110.728 li
f
117.043 112.872 mo
117.043 111.434 115.362 110.268 113.289 110.268 cv
111.216 110.268 109.536 111.434 109.536 112.872 cv
109.536 114.311 111.216 115.477 113.289 115.477 cv
115.362 115.477 117.043 114.311 117.043 112.872 cv
@
117.043 112.872 mo
117.043 111.434 115.362 110.268 113.289 110.268 cv
111.216 110.268 109.536 111.434 109.536 112.872 cv
109.536 114.311 111.216 115.477 113.289 115.477 cv
115.362 115.477 117.043 114.311 117.043 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
111.621 111.892 mo
(Identity)
[.357101 .536201 .476128 .536201 .298126 .298126 .298126 0 ]xsh
110.812 113.118 mo
(work=2496)
[.774254 .536201 .357101 .536201 .604828 .536201 .536201 .536194 0 ]xsh
111.274 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774254 .298134 .268097 .536201 .357101 .604828 0 ]xsh
166.143 106.898 mo
152.126 107.664 130.601 108.966 117.502 110.268 cv
117.119 110.345 116.736 110.421 116.277 110.651 cv
@
116.353 110.345 mo
115.817 110.957 li
116.583 110.728 li
cp
@
116.353 110.345 mo
115.817 110.957 li
116.583 110.728 li
f
125.928 112.872 mo
125.928 111.434 124.248 110.268 122.175 110.268 cv
120.102 110.268 118.422 111.434 118.422 112.872 cv
118.422 114.311 120.102 115.477 122.175 115.477 cv
124.248 115.477 125.928 114.311 125.928 112.872 cv
@
125.928 112.872 mo
125.928 111.434 124.248 110.268 122.175 110.268 cv
120.102 110.268 118.422 111.434 118.422 112.872 cv
118.422 114.311 120.102 115.477 122.175 115.477 cv
124.248 115.477 125.928 114.311 125.928 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
120.507 111.892 mo
(Identity)
[.357101 .536201 .476128 .536201 .298126 .298126 .298126 0 ]xsh
119.698 113.118 mo
(work=2496)
[.774254 .536201 .357101 .536201 .604828 .536201 .536201 .536194 0 ]xsh
120.16 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774254 .298134 .268097 .536201 .357101 .604828 0 ]xsh
166.833 106.974 mo
154.807 107.74 137.265 109.042 126.388 110.268 cv
126.005 110.345 125.622 110.421 125.162 110.651 cv
@
125.239 110.345 mo
124.703 110.957 li
125.469 110.728 li
cp
@
125.239 110.345 mo
124.703 110.957 li
125.469 110.728 li
f
134.814 112.872 mo
134.814 111.434 133.134 110.268 131.061 110.268 cv
128.988 110.268 127.307 111.434 127.307 112.872 cv
127.307 114.311 128.988 115.477 131.061 115.477 cv
133.134 115.477 134.814 114.311 134.814 112.872 cv
@
134.814 112.872 mo
134.814 111.434 133.134 110.268 131.061 110.268 cv
128.988 110.268 127.307 111.434 127.307 112.872 cv
127.307 114.311 128.988 115.477 131.061 115.477 cv
133.134 115.477 134.814 114.311 134.814 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
129.393 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
128.584 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
129.046 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
167.905 107.051 mo
157.947 107.893 144.006 109.119 135.274 110.268 cv
134.891 110.345 134.508 110.421 134.048 110.651 cv
@
134.125 110.345 mo
133.588 110.957 li
134.354 110.728 li
cp
@
134.125 110.345 mo
133.588 110.957 li
134.354 110.728 li
f
143.7 112.872 mo
143.7 111.434 142.019 110.268 139.946 110.268 cv
137.873 110.268 136.193 111.434 136.193 112.872 cv
136.193 114.311 137.873 115.477 139.946 115.477 cv
142.019 115.477 143.7 114.311 143.7 112.872 cv
@
143.7 112.872 mo
143.7 111.434 142.019 110.268 139.946 110.268 cv
137.873 110.268 136.193 111.434 136.193 112.872 cv
136.193 114.311 137.873 115.477 139.946 115.477 cv
142.019 115.477 143.7 114.311 143.7 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
138.278 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
137.469 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
137.931 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
169.207 107.204 mo
161.318 107.97 150.823 109.119 144.159 110.268 cv
143.853 110.345 143.546 110.421 143.24 110.574 cv
@
143.163 110.421 mo
142.551 110.957 li
143.317 110.728 li
cp
@
143.163 110.421 mo
142.551 110.957 li
143.317 110.728 li
f
152.585 112.872 mo
152.585 111.434 150.905 110.268 148.832 110.268 cv
146.759 110.268 145.078 111.434 145.078 112.872 cv
145.078 114.311 146.759 115.477 148.832 115.477 cv
150.905 115.477 152.585 114.311 152.585 112.872 cv
@
152.585 112.872 mo
152.585 111.434 150.905 110.268 148.832 110.268 cv
146.759 110.268 145.078 111.434 145.078 112.872 cv
145.078 114.311 146.759 115.477 148.832 115.477 cv
150.905 115.477 152.585 114.311 152.585 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
147.164 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
146.355 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
146.817 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
171.122 107.281 mo
165.224 108.123 157.794 109.196 153.045 110.268 cv
152.815 110.345 152.509 110.421 152.126 110.574 cv
@
152.049 110.421 mo
151.436 110.957 li
152.202 110.728 li
cp
@
152.049 110.421 mo
151.436 110.957 li
152.202 110.728 li
f
161.471 112.872 mo
161.471 111.434 159.79 110.268 157.717 110.268 cv
155.644 110.268 153.964 111.434 153.964 112.872 cv
153.964 114.311 155.644 115.477 157.717 115.477 cv
159.79 115.477 161.471 114.311 161.471 112.872 cv
@
161.471 112.872 mo
161.471 111.434 159.79 110.268 157.717 110.268 cv
155.644 110.268 153.964 111.434 153.964 112.872 cv
153.964 114.311 155.644 115.477 157.717 115.477 cv
159.79 115.477 161.471 114.311 161.471 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
156.049 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
155.24 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
155.702 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
173.727 107.434 mo
169.82 108.276 164.994 109.349 161.93 110.268 cv
161.624 110.345 161.241 110.574 160.858 110.728 cv
@
160.935 110.421 mo
160.398 111.034 li
161.164 110.804 li
cp
@
160.935 110.421 mo
160.398 111.034 li
161.164 110.804 li
f
170.356 112.872 mo
170.356 111.434 168.676 110.268 166.603 110.268 cv
164.53 110.268 162.85 111.434 162.85 112.872 cv
162.85 114.311 164.53 115.477 166.603 115.477 cv
168.676 115.477 170.356 114.311 170.356 112.872 cv
@
170.356 112.872 mo
170.356 111.434 168.676 110.268 166.603 110.268 cv
164.53 110.268 162.85 111.434 162.85 112.872 cv
162.85 114.311 164.53 115.477 166.603 115.477 cv
168.676 115.477 170.356 114.311 170.356 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
164.935 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
164.126 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
164.588 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
176.867 107.51 mo
174.876 108.353 172.348 109.502 170.816 110.268 cv
170.51 110.421 170.203 110.651 169.82 110.804 cv
@
169.897 110.498 mo
169.361 111.111 li
170.127 110.881 li
cp
@
169.897 110.498 mo
169.361 111.111 li
170.127 110.881 li
f
179.242 112.872 mo
179.242 111.434 177.562 110.268 175.489 110.268 cv
173.416 110.268 171.735 111.434 171.735 112.872 cv
171.735 114.311 173.416 115.477 175.489 115.477 cv
177.562 115.477 179.242 114.311 179.242 112.872 cv
@
179.242 112.872 mo
179.242 111.434 177.562 110.268 175.489 110.268 cv
173.416 110.268 171.735 111.434 171.735 112.872 cv
171.735 114.311 173.416 115.477 175.489 115.477 cv
177.562 115.477 179.242 114.311 179.242 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
173.821 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
173.012 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
173.474 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
179.012 107.51 mo
178.553 108.2 178.016 109.042 177.48 109.808 cv
@
177.25 109.732 mo
177.021 110.498 li
177.633 109.962 li
cp
@
177.25 109.732 mo
177.021 110.498 li
177.633 109.962 li
f
188.128 112.872 mo
188.128 111.434 186.447 110.268 184.374 110.268 cv
182.301 110.268 180.621 111.434 180.621 112.872 cv
180.621 114.311 182.301 115.477 184.374 115.477 cv
186.447 115.477 188.128 114.311 188.128 112.872 cv
@
188.128 112.872 mo
188.128 111.434 186.447 110.268 184.374 110.268 cv
182.301 110.268 180.621 111.434 180.621 112.872 cv
180.621 114.311 182.301 115.477 184.374 115.477 cv
186.447 115.477 188.128 114.311 188.128 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.706 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
181.897 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
182.359 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
180.851 107.51 mo
181.31 108.2 181.846 109.042 182.383 109.808 cv
@
182.229 109.962 mo
182.842 110.498 li
182.612 109.732 li
cp
@
182.229 109.962 mo
182.842 110.498 li
182.612 109.732 li
f
197.013 112.872 mo
197.013 111.434 195.333 110.268 193.26 110.268 cv
191.187 110.268 189.506 111.434 189.506 112.872 cv
189.506 114.311 191.187 115.477 193.26 115.477 cv
195.333 115.477 197.013 114.311 197.013 112.872 cv
@
197.013 112.872 mo
197.013 111.434 195.333 110.268 193.26 110.268 cv
191.187 110.268 189.506 111.434 189.506 112.872 cv
189.506 114.311 191.187 115.477 193.26 115.477 cv
195.333 115.477 197.013 114.311 197.013 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
191.592 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
190.783 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
191.245 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
182.995 107.51 mo
184.987 108.353 187.438 109.502 189.047 110.268 cv
189.277 110.421 189.66 110.651 190.043 110.804 cv
@
189.736 110.881 mo
190.502 111.111 li
189.966 110.498 li
cp
@
189.736 110.881 mo
190.502 111.111 li
189.966 110.498 li
f
205.899 112.872 mo
205.899 111.434 204.218 110.268 202.145 110.268 cv
200.072 110.268 198.392 111.434 198.392 112.872 cv
198.392 114.311 200.072 115.477 202.145 115.477 cv
204.218 115.477 205.899 114.311 205.899 112.872 cv
@
205.899 112.872 mo
205.899 111.434 204.218 110.268 202.145 110.268 cv
200.072 110.268 198.392 111.434 198.392 112.872 cv
198.392 114.311 200.072 115.477 202.145 115.477 cv
204.218 115.477 205.899 114.311 205.899 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
200.477 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
199.668 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
200.13 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
186.136 107.434 mo
189.966 108.276 194.792 109.349 197.932 110.268 cv
198.239 110.345 198.622 110.574 199.005 110.728 cv
@
198.698 110.804 mo
199.464 111.034 li
198.928 110.421 li
cp
@
198.698 110.804 mo
199.464 111.034 li
198.928 110.421 li
f
214.784 112.872 mo
214.784 111.434 213.104 110.268 211.031 110.268 cv
208.958 110.268 207.278 111.434 207.278 112.872 cv
207.278 114.311 208.958 115.477 211.031 115.477 cv
213.104 115.477 214.784 114.311 214.784 112.872 cv
@
214.784 112.872 mo
214.784 111.434 213.104 110.268 211.031 110.268 cv
208.958 110.268 207.278 111.434 207.278 112.872 cv
207.278 114.311 208.958 115.477 211.031 115.477 cv
213.104 115.477 214.784 114.311 214.784 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
209.363 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
208.554 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
209.016 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.74 107.281 mo
194.562 108.123 201.992 109.196 206.818 110.268 cv
207.124 110.345 207.584 110.498 207.967 110.728 cv
@
207.661 110.804 mo
208.427 110.957 li
207.814 110.421 li
cp
@
207.661 110.804 mo
208.427 110.957 li
207.814 110.421 li
f
223.67 112.872 mo
223.67 111.434 221.99 110.268 219.917 110.268 cv
217.844 110.268 216.163 111.434 216.163 112.872 cv
216.163 114.311 217.844 115.477 219.917 115.477 cv
221.99 115.477 223.67 114.311 223.67 112.872 cv
@
223.67 112.872 mo
223.67 111.434 221.99 110.268 219.917 110.268 cv
217.844 110.268 216.163 111.434 216.163 112.872 cv
216.163 114.311 217.844 115.477 219.917 115.477 cv
221.99 115.477 223.67 114.311 223.67 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
218.249 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
217.44 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
217.902 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
190.655 107.204 mo
198.545 107.97 209.039 109.119 215.704 110.268 cv
216.01 110.345 216.47 110.498 216.853 110.728 cv
@
216.546 110.804 mo
217.312 110.957 li
216.699 110.421 li
cp
@
216.546 110.804 mo
217.312 110.957 li
216.699 110.421 li
f
232.556 112.872 mo
232.556 111.434 230.875 110.268 228.802 110.268 cv
226.729 110.268 225.049 111.434 225.049 112.872 cv
225.049 114.311 226.729 115.477 228.802 115.477 cv
230.875 115.477 232.556 114.311 232.556 112.872 cv
@
232.556 112.872 mo
232.556 111.434 230.875 110.268 228.802 110.268 cv
226.729 110.268 225.049 111.434 225.049 112.872 cv
225.049 114.311 226.729 115.477 228.802 115.477 cv
230.875 115.477 232.556 114.311 232.556 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
227.134 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
226.325 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
226.787 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
191.958 107.051 mo
201.916 107.893 215.857 109.119 224.589 110.268 cv
224.896 110.345 225.355 110.421 225.738 110.651 cv
@
225.432 110.728 mo
226.198 110.957 li
225.662 110.345 li
cp
@
225.432 110.728 mo
226.198 110.957 li
225.662 110.345 li
f
241.441 112.872 mo
241.441 111.434 239.761 110.268 237.688 110.268 cv
235.615 110.268 233.934 111.434 233.934 112.872 cv
233.934 114.311 235.615 115.477 237.688 115.477 cv
239.761 115.477 241.441 114.311 241.441 112.872 cv
@
241.441 112.872 mo
241.441 111.434 239.761 110.268 237.688 110.268 cv
235.615 110.268 233.934 111.434 233.934 112.872 cv
233.934 114.311 235.615 115.477 237.688 115.477 cv
239.761 115.477 241.441 114.311 241.441 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
236.02 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
235.211 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
235.673 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
195.251 106.591 mo
207.967 107.281 220.759 108.813 233.475 110.268 cv
233.781 110.345 234.241 110.421 234.624 110.651 cv
@
234.317 110.728 mo
235.083 110.957 li
234.547 110.345 li
cp
@
234.317 110.728 mo
235.083 110.957 li
234.547 110.345 li
f
250.327 112.872 mo
250.327 111.434 248.646 110.268 246.573 110.268 cv
244.5 110.268 242.82 111.434 242.82 112.872 cv
242.82 114.311 244.5 115.477 246.573 115.477 cv
248.646 115.477 250.327 114.311 250.327 112.872 cv
@
250.327 112.872 mo
250.327 111.434 248.646 110.268 246.573 110.268 cv
244.5 110.268 242.82 111.434 242.82 112.872 cv
242.82 114.311 244.5 115.477 246.573 115.477 cv
248.646 115.477 250.327 114.311 250.327 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
244.905 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
244.096 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 0 ]xsh
244.558 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
195.634 106.515 mo
211.184 107.204 226.811 108.736 242.36 110.268 cv
242.667 110.345 243.126 110.421 243.509 110.651 cv
@
243.203 110.728 mo
243.969 110.957 li
243.433 110.345 li
cp
@
243.203 110.728 mo
243.969 110.957 li
243.433 110.345 li
f
259.212 112.872 mo
259.212 111.434 257.532 110.268 255.459 110.268 cv
253.386 110.268 251.706 111.434 251.706 112.872 cv
251.706 114.311 253.386 115.477 255.459 115.477 cv
257.532 115.477 259.212 114.311 259.212 112.872 cv
@
259.212 112.872 mo
259.212 111.434 257.532 110.268 255.459 110.268 cv
253.386 110.268 251.706 111.434 251.706 112.872 cv
251.706 114.311 253.386 115.477 255.459 115.477 cv
257.532 115.477 259.212 114.311 259.212 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
253.791 111.892 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298126 .298126 0 ]xsh
252.982 113.118 mo
(work=2496)
[.774261 .536194 .357101 .536194 .604843 .536179 .536224 .536194 0 ]xsh
253.444 114.343 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357117 .604828 0 ]xsh
195.864 106.438 mo
214.325 107.051 232.785 108.659 251.246 110.268 cv
251.629 110.345 252.012 110.421 252.472 110.651 cv
@
252.165 110.728 mo
252.931 110.957 li
252.395 110.345 li
cp
@
252.165 110.728 mo
252.931 110.957 li
252.395 110.345 li
f
268.098 112.872 mo
268.098 111.434 266.418 110.268 264.345 110.268 cv
262.272 110.268 260.591 111.434 260.591 112.872 cv
260.591 114.311 262.272 115.477 264.345 115.477 cv
266.418 115.477 268.098 114.311 268.098 112.872 cv
@
268.098 112.872 mo
268.098 111.434 266.418 110.268 264.345 110.268 cv
262.272 110.268 260.591 111.434 260.591 112.872 cv
260.591 114.311 262.272 115.477 264.345 115.477 cv
266.418 115.477 268.098 114.311 268.098 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
262.677 111.892 mo
(Identity)
[.357086 .536224 .476135 .536194 .298126 .298126 .298126 0 ]xsh
261.868 113.118 mo
(work=2496)
[.774261 .536194 .357117 .536194 .604828 .536194 .536194 .536194 0 ]xsh
262.33 114.343 mo
(I/O: 1->1)
[.357086 .298157 .774231 .298126 .268097 .536224 .357086 .604828 0 ]xsh
195.941 106.361 mo
217.312 106.974 238.76 108.583 260.132 110.268 cv
260.515 110.345 260.898 110.421 261.357 110.651 cv
@
261.051 110.728 mo
261.817 110.957 li
261.281 110.345 li
cp
@
261.051 110.728 mo
261.817 110.957 li
261.281 110.345 li
f
276.984 112.872 mo
276.984 111.434 275.303 110.268 273.23 110.268 cv
271.157 110.268 269.477 111.434 269.477 112.872 cv
269.477 114.311 271.157 115.477 273.23 115.477 cv
275.303 115.477 276.984 114.311 276.984 112.872 cv
@
276.984 112.872 mo
276.984 111.434 275.303 110.268 273.23 110.268 cv
271.157 110.268 269.477 111.434 269.477 112.872 cv
269.477 114.311 271.157 115.477 273.23 115.477 cv
275.303 115.477 276.984 114.311 276.984 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
271.562 111.892 mo
(Identity)
[.357086 .536224 .476135 .536194 .298126 .298126 .298126 0 ]xsh
270.753 113.118 mo
(work=2496)
[.774261 .536194 .357117 .536194 .604828 .536194 .536194 .536194 0 ]xsh
271.215 114.343 mo
(I/O: 1->1)
[.357086 .298157 .774231 .298126 .268097 .536224 .357086 .604828 0 ]xsh
196.017 106.285 mo
220.376 106.898 244.658 108.583 269.017 110.268 cv
269.4 110.345 269.783 110.421 270.243 110.651 cv
@
269.936 110.728 mo
270.702 110.957 li
270.166 110.345 li
cp
@
269.936 110.728 mo
270.702 110.957 li
270.166 110.345 li
f
285.869 112.872 mo
285.869 111.434 284.189 110.268 282.116 110.268 cv
280.043 110.268 278.362 111.434 278.362 112.872 cv
278.362 114.311 280.043 115.477 282.116 115.477 cv
284.189 115.477 285.869 114.311 285.869 112.872 cv
@
285.869 112.872 mo
285.869 111.434 284.189 110.268 282.116 110.268 cv
280.043 110.268 278.362 111.434 278.362 112.872 cv
278.362 114.311 280.043 115.477 282.116 115.477 cv
284.189 115.477 285.869 114.311 285.869 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
280.448 111.892 mo
(Identity)
[.357086 .536224 .476135 .536194 .298126 .298126 .298126 0 ]xsh
279.639 113.118 mo
(work=2496)
[.774261 .536194 .357117 .536194 .604828 .536194 .536194 .536194 0 ]xsh
280.101 114.343 mo
(I/O: 1->1)
[.357086 .298157 .774231 .298126 .268097 .536224 .357086 .604828 0 ]xsh
196.094 106.285 mo
223.364 106.821 250.633 108.506 277.903 110.268 cv
278.286 110.345 278.669 110.421 279.128 110.651 cv
@
278.822 110.728 mo
279.588 110.957 li
279.052 110.345 li
cp
@
278.822 110.728 mo
279.588 110.957 li
279.052 110.345 li
f
294.755 112.872 mo
294.755 111.434 293.074 110.268 291.001 110.268 cv
288.928 110.268 287.248 111.434 287.248 112.872 cv
287.248 114.311 288.928 115.477 291.001 115.477 cv
293.074 115.477 294.755 114.311 294.755 112.872 cv
@
294.755 112.872 mo
294.755 111.434 293.074 110.268 291.001 110.268 cv
288.928 110.268 287.248 111.434 287.248 112.872 cv
287.248 114.311 288.928 115.477 291.001 115.477 cv
293.074 115.477 294.755 114.311 294.755 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
289.333 111.892 mo
(Identity)
[.357086 .536224 .476135 .536194 .298126 .298126 .298126 0 ]xsh
288.524 113.118 mo
(work=2496)
[.774261 .536194 .357117 .536194 .604828 .536194 .536194 .536194 0 ]xsh
288.986 114.343 mo
(I/O: 1->1)
[.357086 .298157 .774231 .298126 .268097 .536224 .357086 .604828 0 ]xsh
196.094 106.285 mo
226.351 106.744 256.531 108.43 286.788 110.268 cv
287.171 110.345 287.554 110.421 288.014 110.651 cv
@
287.708 110.728 mo
288.474 110.957 li
287.937 110.345 li
cp
@
287.708 110.728 mo
288.474 110.957 li
287.937 110.345 li
f
303.64 112.872 mo
303.64 111.434 301.96 110.268 299.887 110.268 cv
297.814 110.268 296.134 111.434 296.134 112.872 cv
296.134 114.311 297.814 115.477 299.887 115.477 cv
301.96 115.477 303.64 114.311 303.64 112.872 cv
@
303.64 112.872 mo
303.64 111.434 301.96 110.268 299.887 110.268 cv
297.814 110.268 296.134 111.434 296.134 112.872 cv
296.134 114.311 297.814 115.477 299.887 115.477 cv
301.96 115.477 303.64 114.311 303.64 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
298.219 111.892 mo
(Identity)
[.357086 .536224 .476135 .536194 .298126 .298126 .298126 0 ]xsh
297.41 113.118 mo
(work=2496)
[.774261 .536194 .357117 .536194 .604828 .536194 .536194 .536194 0 ]xsh
297.872 114.343 mo
(I/O: 1->1)
[.357086 .298157 .774231 .298126 .268097 .536224 .357086 .604828 0 ]xsh
196.171 106.208 mo
229.262 106.668 262.506 108.43 295.674 110.268 cv
296.057 110.345 296.44 110.421 296.9 110.651 cv
@
296.593 110.728 mo
297.359 110.957 li
296.823 110.345 li
cp
@
296.593 110.728 mo
297.359 110.957 li
296.823 110.345 li
f
312.526 112.872 mo
312.526 111.434 310.846 110.268 308.773 110.268 cv
306.7 110.268 305.019 111.434 305.019 112.872 cv
305.019 114.311 306.7 115.477 308.773 115.477 cv
310.846 115.477 312.526 114.311 312.526 112.872 cv
@
312.526 112.872 mo
312.526 111.434 310.846 110.268 308.773 110.268 cv
306.7 110.268 305.019 111.434 305.019 112.872 cv
305.019 114.311 306.7 115.477 308.773 115.477 cv
310.846 115.477 312.526 114.311 312.526 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
307.105 111.892 mo
(Identity)
[.357086 .536224 .476135 .536194 .298126 .298126 .298126 0 ]xsh
306.296 113.118 mo
(work=2496)
[.774261 .536194 .357117 .536194 .604828 .536194 .536194 .536194 0 ]xsh
306.758 114.343 mo
(I/O: 1->1)
[.357086 .298157 .774231 .298126 .268097 .536224 .357086 .604828 0 ]xsh
195.022 106.668 mo
228.266 107.74 304.56 110.268 304.56 110.268 cv
304.943 110.345 305.326 110.421 305.785 110.651 cv
@
305.479 110.728 mo
306.245 110.957 li
305.709 110.345 li
cp
@
305.479 110.728 mo
306.245 110.957 li
305.709 110.345 li
f
321.412 112.872 mo
321.412 111.434 319.731 110.268 317.658 110.268 cv
315.585 110.268 313.905 111.434 313.905 112.872 cv
313.905 114.311 315.585 115.477 317.658 115.477 cv
319.731 115.477 321.412 114.311 321.412 112.872 cv
@
321.412 112.872 mo
321.412 111.434 319.731 110.268 317.658 110.268 cv
315.585 110.268 313.905 111.434 313.905 112.872 cv
313.905 114.311 315.585 115.477 317.658 115.477 cv
319.731 115.477 321.412 114.311 321.412 112.872 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
315.99 111.892 mo
(Identity)
[.357086 .536224 .476135 .536194 .298126 .298126 .298126 0 ]xsh
315.181 113.118 mo
(work=2496)
[.774261 .536194 .357117 .536194 .604828 .536194 .536194 .536194 0 ]xsh
315.643 114.343 mo
(I/O: 1->1)
[.357086 .298157 .774231 .298126 .268097 .536224 .357086 .604828 0 ]xsh
195.558 106.515 mo
223.134 107.204 280.507 108.659 313.445 110.268 cv
313.828 110.345 314.211 110.421 314.671 110.651 cv
@
314.364 110.728 mo
315.13 110.957 li
314.594 110.345 li
cp
@
314.364 110.728 mo
315.13 110.957 li
314.594 110.345 li
f
213.329 119.613 mo
213.329 118.852 198.376 118.234 179.931 118.234 cv
161.486 118.234 146.534 118.852 146.534 119.613 cv
146.534 120.375 161.486 120.992 179.931 120.992 cv
198.376 120.992 213.329 120.375 213.329 119.613 cv
@
213.329 119.613 mo
213.329 118.852 198.376 118.234 179.931 118.234 cv
161.486 118.234 146.534 118.852 146.534 119.613 cv
146.534 120.375 161.486 120.992 179.931 120.992 cv
198.376 120.992 213.329 120.375 213.329 119.613 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
147.299 119.858 mo
(roundrobin\(416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,)
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.536209 .536194 .268097 .536209 .536194 .536194 .268112 .536194 .536194 .536209 .268097 .536194 
.536209 .536194 .268097 .536209 .536194 .536209 .268097 .536194 .536209 .536194 .268097 .536209 
.536194 .536194 .268112 .536194 .536209 .536194 .268097 .536194 .536209 .536194 .268112 .536194 
.536194 .536209 .268097 .536194 .536209 .536194 .268097 .536209 .536194 .536209 .268097 .536194 
.536194 .536209 .268097 .536209 .536194 .536194 .268097 .536209 .536194 .536209 .268097 .536194 
.536209 .536194 .268097 .536209 .536194 .536194 .268112 .536194 .536209 .536194 .268097 .536194 
.536209 .536209 .268097 .536194 .536194 .536209 .268097 .536209 .536194 .536194 .268097 .536209 
.536194 .536209 .268097 .536194 .536194 .536209 .268097 .536209 .536194 .536194 .268097 .536209 
.536209 .536194 .268097 .536194 .536209 .536194 .268112 .536194 .536194 .536209 .268097 .536194 
.536209 .536194 .268097 .536209 .536194 .536209 0 ]xsh
206.846 119.858 mo
(416,416,416\))
[.536194 .536194 .536209 .268097 .536209 .536194 .536194 .268097 .536209 .536209 .536194 0 
]xsh
184.144 125.435 mo
184.144 124.673 182.258 124.056 179.931 124.056 cv
177.605 124.056 175.718 124.673 175.718 125.435 cv
175.718 126.196 177.605 126.814 179.931 126.814 cv
182.258 126.814 184.144 126.196 184.144 125.435 cv
@
184.144 125.435 mo
184.144 124.673 182.258 124.056 179.931 124.056 cv
177.605 124.056 175.718 124.673 175.718 125.435 cv
175.718 126.196 177.605 126.814 179.931 126.814 cv
182.258 126.814 184.144 126.196 184.144 125.435 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
176.521 125.68 mo
(roundrobin\(2,2\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
179.931 120.992 mo
179.931 121.681 179.931 122.524 179.931 123.29 cv
@
179.778 123.29 mo
179.931 124.056 li
180.161 123.29 li
cp
@
179.778 123.29 mo
179.931 124.056 li
180.161 123.29 li
f
44.7324 114.787 mo
45.2686 115.17 45.8814 115.477 46.4176 115.477 cv
74.5298 116.856 120.413 118.158 150.364 118.924 cv
@
150.134 119.077 mo
150.9 118.924 li
150.134 118.694 li
cp
@
150.134 119.077 mo
150.9 118.924 li
150.134 118.694 li
f
53.618 114.787 mo
54.1542 115.17 54.767 115.477 55.3032 115.477 cv
80.9642 116.856 122.711 118.158 150.67 118.924 cv
@
150.67 119.077 mo
151.436 118.924 li
150.67 118.694 li
cp
@
150.67 119.077 mo
151.436 118.924 li
150.67 118.694 li
f
62.5036 114.787 mo
63.0398 115.17 63.6526 115.477 64.1888 115.477 cv
87.6284 116.856 125.392 118.081 151.36 118.847 cv
@
151.283 119 mo
152.049 118.847 li
151.283 118.617 li
cp
@
151.283 119 mo
152.049 118.847 li
151.283 118.617 li
f
71.3892 114.787 mo
71.9254 115.17 72.5382 115.477 73.0744 115.477 cv
94.2926 116.779 128.226 118.005 152.202 118.771 cv
@
152.049 118.924 mo
152.815 118.771 li
152.049 118.541 li
cp
@
152.049 118.924 mo
152.815 118.771 li
152.049 118.541 li
f
80.2748 114.787 mo
80.811 115.17 81.4238 115.477 81.96 115.477 cv
101.033 116.779 131.29 118.005 153.121 118.771 cv
@
152.968 118.924 mo
153.734 118.771 li
152.968 118.541 li
cp
@
152.968 118.924 mo
153.734 118.771 li
152.968 118.541 li
f
89.0838 114.864 mo
89.6966 115.17 90.3094 115.477 90.8456 115.477 cv
107.851 116.702 134.737 117.928 154.5 118.694 cv
@
154.27 118.847 mo
155.036 118.694 li
154.27 118.464 li
cp
@
154.27 118.847 mo
155.036 118.694 li
154.27 118.464 li
f
97.9694 114.864 mo
98.5822 115.17 99.195 115.477 99.7312 115.477 cv
114.592 116.702 137.955 117.851 155.573 118.617 cv
@
155.496 118.771 mo
156.262 118.617 li
155.496 118.388 li
cp
@
155.496 118.771 mo
156.262 118.617 li
155.496 118.388 li
f
106.855 114.864 mo
107.468 115.17 108.081 115.477 108.617 115.477 cv
121.562 116.626 141.555 117.775 157.105 118.617 cv
@
156.951 118.771 mo
157.717 118.617 li
156.951 118.388 li
cp
@
156.951 118.771 mo
157.717 118.617 li
156.951 118.388 li
f
115.817 114.787 mo
116.353 115.17 116.966 115.4 117.502 115.477 cv
128.456 116.626 145.461 117.775 158.866 118.541 cv
@
158.637 118.694 mo
159.403 118.541 li
158.637 118.311 li
cp
@
158.637 118.694 mo
159.403 118.541 li
158.637 118.311 li
f
124.703 114.787 mo
125.239 115.17 125.852 115.4 126.388 115.477 cv
135.58 116.626 149.445 117.622 160.781 118.388 cv
@
160.705 118.541 mo
161.471 118.464 li
160.705 118.158 li
cp
@
160.705 118.541 mo
161.471 118.464 li
160.705 118.158 li
f
133.588 114.787 mo
134.125 115.17 134.737 115.4 135.274 115.477 cv
142.78 116.549 154.117 117.545 163.539 118.311 cv
@
163.309 118.464 mo
164.075 118.388 li
163.309 118.081 li
cp
@
163.309 118.464 mo
164.075 118.388 li
163.309 118.081 li
f
142.474 114.787 mo
143.087 115.17 143.623 115.4 144.159 115.477 cv
149.981 116.549 158.637 117.468 165.99 118.234 cv
@
165.914 118.388 mo
166.68 118.311 li
165.914 118.005 li
cp
@
165.914 118.388 mo
166.68 118.311 li
165.914 118.005 li
f
151.436 114.787 mo
151.972 115.094 152.509 115.4 153.045 115.477 cv
157.334 116.473 163.845 117.468 169.284 118.234 cv
@
169.054 118.388 mo
169.82 118.311 li
169.054 118.005 li
cp
@
169.054 118.388 mo
169.82 118.311 li
169.054 118.005 li
f
160.322 114.711 mo
160.935 115.094 161.471 115.324 161.93 115.477 cv
164.688 116.319 169.054 117.392 172.654 118.158 cv
@
172.425 118.311 mo
173.191 118.234 li
172.425 117.928 li
cp
@
172.425 118.311 mo
173.191 118.234 li
172.425 117.928 li
f
169.361 114.711 mo
169.897 115.017 170.356 115.247 170.816 115.477 cv
172.195 116.166 174.416 117.239 176.255 118.005 cv
@
175.948 118.081 mo
176.714 118.234 li
176.101 117.698 li
cp
@
175.948 118.081 mo
176.714 118.234 li
176.101 117.698 li
f
177.097 115.247 mo
177.557 116.013 178.17 116.932 178.629 117.622 cv
@
178.476 117.698 mo
179.012 118.234 li
178.782 117.468 li
cp
@
178.476 117.698 mo
179.012 118.234 li
178.782 117.468 li
f
182.766 115.247 mo
182.306 116.013 181.693 116.932 181.234 117.622 cv
@
181.08 117.468 mo
180.851 118.234 li
181.387 117.698 li
cp
@
181.08 117.468 mo
180.851 118.234 li
181.387 117.698 li
f
190.502 114.634 mo
189.966 115.017 189.43 115.247 189.047 115.477 cv
187.668 116.166 185.6 117.162 183.761 117.928 cv
@
183.685 117.775 mo
183.072 118.234 li
183.838 118.081 li
cp
@
183.685 117.775 mo
183.072 118.234 li
183.838 118.081 li
f
199.464 114.711 mo
198.928 115.017 198.392 115.324 197.932 115.477 cv
195.098 116.319 190.809 117.392 187.132 118.158 cv
@
187.362 117.928 mo
186.596 118.234 li
187.362 118.311 li
cp
@
187.362 117.928 mo
186.596 118.234 li
187.362 118.311 li
f
208.427 114.787 mo
207.89 115.094 207.278 115.4 206.818 115.477 cv
202.605 116.396 196.247 117.468 190.809 118.234 cv
@
190.809 118.081 mo
190.043 118.311 li
190.809 118.388 li
cp
@
190.809 118.081 mo
190.043 118.311 li
190.809 118.388 li
f
217.312 114.787 mo
216.776 115.17 216.163 115.4 215.704 115.477 cv
209.882 116.549 201.15 117.468 193.796 118.234 cv
@
193.873 118.005 mo
193.107 118.311 li
193.873 118.388 li
cp
@
193.873 118.005 mo
193.107 118.311 li
193.873 118.388 li
f
226.274 114.787 mo
225.662 115.17 225.125 115.4 224.589 115.477 cv
217.082 116.549 205.746 117.545 196.324 118.311 cv
@
196.554 118.081 mo
195.788 118.388 li
196.554 118.464 li
cp
@
196.554 118.081 mo
195.788 118.388 li
196.554 118.464 li
f
235.16 114.787 mo
234.547 115.17 234.011 115.4 233.475 115.477 cv
224.283 116.626 210.342 117.622 199.081 118.388 cv
@
199.158 118.158 mo
198.392 118.464 li
199.158 118.541 li
cp
@
199.158 118.158 mo
198.392 118.464 li
199.158 118.541 li
f
244.046 114.787 mo
243.433 115.17 242.897 115.4 242.36 115.477 cv
231.407 116.626 214.631 117.698 201.226 118.464 cv
@
201.15 118.311 mo
200.384 118.541 li
201.15 118.694 li
cp
@
201.15 118.311 mo
200.384 118.541 li
201.15 118.694 li
f
252.931 114.787 mo
252.395 115.17 251.782 115.477 251.246 115.477 cv
238.301 116.626 218.308 117.775 202.758 118.617 cv
@
202.911 118.388 mo
202.145 118.617 li
202.911 118.771 li
cp
@
202.911 118.388 mo
202.145 118.617 li
202.911 118.771 li
f
261.817 114.787 mo
261.281 115.17 260.668 115.477 260.132 115.477 cv
245.195 116.702 221.908 117.851 204.29 118.617 cv
@
204.367 118.388 mo
203.601 118.617 li
204.367 118.771 li
cp
@
204.367 118.388 mo
203.601 118.617 li
204.367 118.771 li
f
270.702 114.787 mo
270.166 115.17 269.553 115.477 269.017 115.477 cv
252.012 116.702 225.355 117.928 205.592 118.694 cv
@
205.592 118.464 mo
204.826 118.694 li
205.592 118.847 li
cp
@
205.592 118.464 mo
204.826 118.694 li
205.592 118.847 li
f
279.588 114.787 mo
279.052 115.17 278.439 115.477 277.903 115.477 cv
258.829 116.779 228.572 118.005 206.741 118.771 cv
@
206.895 118.541 mo
206.129 118.771 li
206.895 118.924 li
cp
@
206.895 118.541 mo
206.129 118.771 li
206.895 118.924 li
f
288.474 114.787 mo
287.937 115.17 287.325 115.477 286.788 115.477 cv
265.494 116.779 231.56 118.005 207.661 118.771 cv
@
207.814 118.541 mo
207.048 118.771 li
207.814 118.924 li
cp
@
207.814 118.541 mo
207.048 118.771 li
207.814 118.924 li
f
297.359 114.787 mo
296.823 115.17 296.21 115.477 295.674 115.477 cv
272.234 116.856 234.394 118.081 208.427 118.847 cv
@
208.503 118.617 mo
207.737 118.847 li
208.503 119 li
cp
@
208.503 118.617 mo
207.737 118.847 li
208.503 119 li
f
306.245 114.787 mo
305.709 115.17 305.096 115.477 304.56 115.477 cv
278.822 116.856 237.152 118.158 209.116 118.924 cv
@
209.116 118.694 mo
208.35 118.924 li
209.116 119.077 li
cp
@
209.116 118.694 mo
208.35 118.924 li
209.116 119.077 li
f
315.13 114.787 mo
314.594 115.17 313.981 115.477 313.445 115.477 cv
285.41 116.856 239.756 118.158 209.729 118.924 cv
@
209.729 118.694 mo
208.963 118.924 li
209.729 119.077 li
cp
@
209.729 118.694 mo
208.963 118.924 li
209.729 119.077 li
f
177.94 132.482 mo
177.94 131.044 175.985 129.878 173.574 129.878 cv
171.162 129.878 169.207 131.044 169.207 132.482 cv
169.207 133.92 171.162 135.086 173.574 135.086 cv
175.985 135.086 177.94 133.92 177.94 132.482 cv
@
177.94 132.482 mo
177.94 131.044 175.985 129.878 173.574 129.878 cv
171.162 129.878 169.207 131.044 169.207 132.482 cv
169.207 133.92 171.162 135.086 173.574 135.086 cv
175.985 135.086 177.94 133.92 177.94 132.482 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7A73DFE313D538903D2D688A80497AF19F58251B88346
588CB5A8F94928A032E7AE04ED687068FF5EFE684F47125CC227938E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /.notdef /C /D /E /F 
/G /.notdef /I /.notdef /K /L /M /N 
/O /P /.notdef /R /S /T /U /V 
/W 9{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /x /y 134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
171.548 131.501 mo
(FIRReset)
[.596252 .357101 .715286 .715286 .47612 .41716 .476135 0 ]xsh
170.829 132.727 mo
(work=49792)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
170.486 133.952 mo
(I/O: 208->228)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
178.706 126.737 mo
178.016 127.58 177.021 128.575 176.178 129.571 cv
@
176.025 129.495 mo
175.642 130.184 li
176.255 129.724 li
cp
@
176.025 129.495 mo
175.642 130.184 li
176.255 129.724 li
f
192.8 132.482 mo
192.8 131.721 190.914 131.103 188.587 131.103 cv
186.26 131.103 184.374 131.721 184.374 132.482 cv
184.374 133.243 186.26 133.861 188.587 133.861 cv
190.914 133.861 192.8 133.243 192.8 132.482 cv
@
192.8 132.482 mo
192.8 131.721 190.914 131.103 188.587 131.103 cv
186.26 131.103 184.374 131.721 184.374 132.482 cv
184.374 133.243 186.26 133.861 188.587 133.861 cv
190.914 133.861 192.8 133.243 192.8 132.482 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.177 132.727 mo
(roundrobin\(0,2\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
181.54 126.737 mo
182.919 127.809 184.91 129.495 186.442 130.72 cv
@
186.289 130.797 mo
186.979 131.18 li
186.519 130.567 li
cp
@
186.289 130.797 mo
186.979 131.18 li
186.519 130.567 li
f
189.583 433.367 mo
189.583 432.605 187.697 431.988 185.37 431.988 cv
183.043 431.988 181.157 432.605 181.157 433.367 cv
181.157 434.128 183.043 434.746 185.37 434.746 cv
187.697 434.746 189.583 434.128 189.583 433.367 cv
@
189.583 433.367 mo
189.583 432.605 187.697 431.988 185.37 431.988 cv
183.043 431.988 181.157 432.605 181.157 433.367 cv
181.157 434.128 183.043 434.746 185.37 434.746 cv
187.697 434.746 189.583 434.128 189.583 433.367 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
181.96 433.612 mo
(roundrobin\(2,2\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
191.498 440.414 mo
191.498 438.976 188.754 437.81 185.37 437.81 cv
181.986 437.81 179.242 438.976 179.242 440.414 cv
179.242 441.852 181.986 443.018 185.37 443.018 cv
188.754 443.018 191.498 441.852 191.498 440.414 cv
@
191.498 440.414 mo
191.498 438.976 188.754 437.81 185.37 437.81 cv
181.986 437.81 179.242 438.976 179.242 440.414 cv
179.242 441.852 181.986 443.018 185.37 443.018 cv
188.754 443.018 191.498 441.852 191.498 440.414 cv
.843 .18 .157 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
180.544 439.433 mo
(CFARToDecibelFilter)
[.715286 .596252 .774261 .715271 .655228 .536209 .774246 .476135 .476135 .298126 .536194 .476135 
.298126 .596252 .298126 .298126 .298126 .476135 0 ]xsh
182.089 440.659 mo
(work=3274752)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 .536194 0 
]xsh
183.355 441.884 mo
(I/O: 2->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
185.37 434.746 mo
185.37 435.358 185.37 436.201 185.37 436.967 cv
@
185.217 437.044 mo
185.37 437.81 li
185.6 437.044 li
cp
@
185.217 437.044 mo
185.37 437.81 li
185.6 437.044 li
f
176.484 141.368 mo
176.484 139.929 174.495 138.763 172.042 138.763 cv
169.588 138.763 167.599 139.929 167.599 141.368 cv
167.599 142.806 169.588 143.972 172.042 143.972 cv
174.495 143.972 176.484 142.806 176.484 141.368 cv
@
176.484 141.368 mo
176.484 139.929 174.495 138.763 172.042 138.763 cv
169.588 138.763 167.599 139.929 167.599 141.368 cv
167.599 142.806 169.588 143.972 172.042 143.972 cv
174.495 143.972 176.484 142.806 176.484 141.368 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Z <1C60D8A8C9B7D8BE77A3BDA24C4F667A02060AD299A5EC1894B68DCAC3DB
787FE5F9D15DF76FDAF4298233CFCEF8B1E26BA6B780E4ACF507403C18EFE239
6ED23F8FD0119684BDFE54> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 90 /Z put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /.notdef /C /D /E /F 
/G /.notdef /I /.notdef /K /L /M /N 
/O /P /.notdef /R /S /T /U /V 
/W 2{/.notdef}rp /Z 6{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /x /y 134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.855 140.387 mo
(FIRZeroAdder)
[.596252 .357101 .715286 .655228 .476135 .357086 .536209 .774261 .536194 .536194 .476135 0 
]xsh
169.297 141.613 mo
(work=65664)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
170.027 142.838 mo
(I/O: 1->2)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
173.114 135.086 mo
172.961 136.006 172.731 137.078 172.578 137.997 cv
@
172.425 137.997 mo
172.501 138.763 li
172.731 137.997 li
cp
@
172.425 137.997 mo
172.501 138.763 li
172.731 137.997 li
f
178.706 151.785 mo
178.706 149.881 175.379 148.338 171.276 148.338 cv
167.172 148.338 163.845 149.881 163.845 151.785 cv
163.845 153.689 167.172 155.232 171.276 155.232 cv
175.379 155.232 178.706 153.689 178.706 151.785 cv
@
178.706 151.785 mo
178.706 149.881 175.379 148.338 171.276 148.338 cv
167.172 148.338 163.845 149.881 163.845 151.785 cv
163.845 153.689 167.172 155.232 171.276 155.232 cv
175.379 155.232 178.706 153.689 178.706 151.785 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6079F62AF7EE2120CD8667DDD4FA2DBFCE5E63E48B84464C1
802A269C64DF6D959EDF25835FFE2A562C206570E6F5B714FC53C2D5C307E1C8
A7B7F4078E600204C204D1FAC19490C22F80872356DF60239B84CD61D63A7DAA
1B4B4595C75AFC0D0514E00256BFA54FA5E3DE43161DB123A8A356631F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 72 /H put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /.notdef /C /D /E /F 
/G /H /I /.notdef /K /L /M /N 
/O /P /.notdef /R /S /T /U /V 
/W 2{/.notdef}rp /Z 6{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /x /y 134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 150.192 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 151.418 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 152.643 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 153.869 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.812 143.972 mo
171.735 145.044 171.659 146.347 171.582 147.496 cv
@
171.429 147.496 mo
171.505 148.262 li
171.735 147.496 li
cp
@
171.429 147.496 mo
171.505 148.262 li
171.735 147.496 li
f
178.706 161.59 mo
178.706 159.686 175.379 158.143 171.276 158.143 cv
167.172 158.143 163.845 159.686 163.845 161.59 cv
163.845 163.494 167.172 165.037 171.276 165.037 cv
175.379 165.037 178.706 163.494 178.706 161.59 cv
@
178.706 161.59 mo
178.706 159.686 175.379 158.143 171.276 158.143 cv
167.172 158.143 163.845 159.686 163.845 161.59 cv
163.845 163.494 167.172 165.037 171.276 165.037 cv
175.379 165.037 178.706 163.494 178.706 161.59 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 159.997 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 161.222 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 162.448 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 163.674 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.276 155.309 mo
171.276 155.998 171.276 156.688 171.276 157.3 cv
@
171.122 157.3 mo
171.276 158.066 li
171.505 157.3 li
cp
@
171.122 157.3 mo
171.276 158.066 li
171.505 157.3 li
f
178.706 171.395 mo
178.706 169.491 175.379 167.948 171.276 167.948 cv
167.172 167.948 163.845 169.491 163.845 171.395 cv
163.845 173.299 167.172 174.842 171.276 174.842 cv
175.379 174.842 178.706 173.299 178.706 171.395 cv
@
178.706 171.395 mo
178.706 169.491 175.379 167.948 171.276 167.948 cv
167.172 167.948 163.845 169.491 163.845 171.395 cv
163.845 173.299 167.172 174.842 171.276 174.842 cv
175.379 174.842 178.706 173.299 178.706 171.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 169.801 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 171.027 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 172.252 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 173.478 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.276 165.114 mo
171.276 165.803 171.276 166.492 171.276 167.105 cv
@
171.122 167.105 mo
171.276 167.871 li
171.505 167.105 li
cp
@
171.122 167.105 mo
171.276 167.871 li
171.505 167.105 li
f
178.706 181.2 mo
178.706 179.296 175.379 177.753 171.276 177.753 cv
167.172 177.753 163.845 179.296 163.845 181.2 cv
163.845 183.103 167.172 184.647 171.276 184.647 cv
175.379 184.647 178.706 183.103 178.706 181.2 cv
@
178.706 181.2 mo
178.706 179.296 175.379 177.753 171.276 177.753 cv
167.172 177.753 163.845 179.296 163.845 181.2 cv
163.845 183.103 167.172 184.647 171.276 184.647 cv
175.379 184.647 178.706 183.103 178.706 181.2 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 179.606 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 180.832 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 182.057 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 183.283 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.276 174.918 mo
171.276 175.608 171.276 176.297 171.276 176.91 cv
@
171.122 176.91 mo
171.276 177.676 li
171.505 176.91 li
cp
@
171.122 176.91 mo
171.276 177.676 li
171.505 176.91 li
f
178.706 191.004 mo
178.706 189.101 175.379 187.557 171.276 187.557 cv
167.172 187.557 163.845 189.101 163.845 191.004 cv
163.845 192.908 167.172 194.451 171.276 194.451 cv
175.379 194.451 178.706 192.908 178.706 191.004 cv
@
178.706 191.004 mo
178.706 189.101 175.379 187.557 171.276 187.557 cv
167.172 187.557 163.845 189.101 163.845 191.004 cv
163.845 192.908 167.172 194.451 171.276 194.451 cv
175.379 194.451 178.706 192.908 178.706 191.004 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 189.411 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 190.637 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 191.862 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 193.088 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.276 184.723 mo
171.276 185.413 171.276 186.102 171.276 186.715 cv
@
171.122 186.715 mo
171.276 187.481 li
171.505 186.715 li
cp
@
171.122 186.715 mo
171.276 187.481 li
171.505 186.715 li
f
178.706 200.809 mo
178.706 198.905 175.379 197.362 171.276 197.362 cv
167.172 197.362 163.845 198.905 163.845 200.809 cv
163.845 202.713 167.172 204.256 171.276 204.256 cv
175.379 204.256 178.706 202.713 178.706 200.809 cv
@
178.706 200.809 mo
178.706 198.905 175.379 197.362 171.276 197.362 cv
167.172 197.362 163.845 198.905 163.845 200.809 cv
163.845 202.713 167.172 204.256 171.276 204.256 cv
175.379 204.256 178.706 202.713 178.706 200.809 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 199.216 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 200.442 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 201.667 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 202.893 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.276 194.528 mo
171.276 195.217 171.276 195.907 171.276 196.52 cv
@
171.122 196.52 mo
171.276 197.286 li
171.505 196.52 li
cp
@
171.122 196.52 mo
171.276 197.286 li
171.505 196.52 li
f
178.706 210.614 mo
178.706 208.71 175.379 207.167 171.276 207.167 cv
167.172 207.167 163.845 208.71 163.845 210.614 cv
163.845 212.518 167.172 214.061 171.276 214.061 cv
175.379 214.061 178.706 212.518 178.706 210.614 cv
@
178.706 210.614 mo
178.706 208.71 175.379 207.167 171.276 207.167 cv
167.172 207.167 163.845 208.71 163.845 210.614 cv
163.845 212.518 167.172 214.061 171.276 214.061 cv
175.379 214.061 178.706 212.518 178.706 210.614 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 209.021 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 210.247 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 211.472 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 212.698 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.276 204.333 mo
171.276 205.022 171.276 205.712 171.276 206.324 cv
@
171.122 206.324 mo
171.276 207.09 li
171.505 206.324 li
cp
@
171.122 206.324 mo
171.276 207.09 li
171.505 206.324 li
f
178.706 220.419 mo
178.706 218.515 175.379 216.972 171.276 216.972 cv
167.172 216.972 163.845 218.515 163.845 220.419 cv
163.845 222.323 167.172 223.866 171.276 223.866 cv
175.379 223.866 178.706 222.323 178.706 220.419 cv
@
178.706 220.419 mo
178.706 218.515 175.379 216.972 171.276 216.972 cv
167.172 216.972 163.845 218.515 163.845 220.419 cv
163.845 222.323 167.172 223.866 171.276 223.866 cv
175.379 223.866 178.706 222.323 178.706 220.419 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 218.825 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 220.051 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 221.276 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 222.502 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.276 214.138 mo
171.276 214.827 171.276 215.516 171.276 216.129 cv
@
171.122 216.129 mo
171.276 216.895 li
171.505 216.129 li
cp
@
171.122 216.129 mo
171.276 216.895 li
171.505 216.129 li
f
178.706 230.224 mo
178.706 228.32 175.379 226.777 171.276 226.777 cv
167.172 226.777 163.845 228.32 163.845 230.224 cv
163.845 232.127 167.172 233.671 171.276 233.671 cv
175.379 233.671 178.706 232.127 178.706 230.224 cv
@
178.706 230.224 mo
178.706 228.32 175.379 226.777 171.276 226.777 cv
167.172 226.777 163.845 228.32 163.845 230.224 cv
163.845 232.127 167.172 233.671 171.276 233.671 cv
175.379 233.671 178.706 232.127 178.706 230.224 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 228.63 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 229.856 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 231.081 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 232.307 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.276 223.942 mo
171.276 224.632 171.276 225.321 171.276 225.934 cv
@
171.122 225.934 mo
171.276 226.7 li
171.505 225.934 li
cp
@
171.122 225.934 mo
171.276 226.7 li
171.505 225.934 li
f
178.706 240.028 mo
178.706 238.125 175.379 236.581 171.276 236.581 cv
167.172 236.581 163.845 238.125 163.845 240.028 cv
163.845 241.932 167.172 243.475 171.276 243.475 cv
175.379 243.475 178.706 241.932 178.706 240.028 cv
@
178.706 240.028 mo
178.706 238.125 175.379 236.581 171.276 236.581 cv
167.172 236.581 163.845 238.125 163.845 240.028 cv
163.845 241.932 167.172 243.475 171.276 243.475 cv
175.379 243.475 178.706 241.932 178.706 240.028 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 238.435 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 239.66 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 240.886 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 242.112 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.276 233.747 mo
171.276 234.437 171.276 235.126 171.276 235.739 cv
@
171.122 235.739 mo
171.276 236.505 li
171.505 235.739 li
cp
@
171.122 235.739 mo
171.276 236.505 li
171.505 235.739 li
f
178.706 249.833 mo
178.706 247.929 175.379 246.386 171.276 246.386 cv
167.172 246.386 163.845 247.929 163.845 249.833 cv
163.845 251.737 167.172 253.28 171.276 253.28 cv
175.379 253.28 178.706 251.737 178.706 249.833 cv
@
178.706 249.833 mo
178.706 247.929 175.379 246.386 171.276 246.386 cv
167.172 246.386 163.845 247.929 163.845 249.833 cv
163.845 251.737 167.172 253.28 171.276 253.28 cv
175.379 253.28 178.706 251.737 178.706 249.833 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
168.028 248.24 mo
(SingleMultiply)
[.596252 .298126 .536209 .536194 .298126 .476135 .953354 .536194 .298126 .298126 .298126 .536209 
.298126 0 ]xsh
168.263 249.466 mo
(work=291840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
169.261 250.691 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.348 251.917 mo
(*** PEEKS 2 AHEAD ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .655228 .774246 .596252 .268112 .536194 .268097 
.774261 .774261 .655228 .774246 .774261 .268097 .536209 .536194 0 ]xsh
171.276 243.552 mo
171.276 244.241 171.276 244.931 171.276 245.544 cv
@
171.122 245.544 mo
171.276 246.31 li
171.505 245.544 li
cp
@
171.122 245.544 mo
171.276 246.31 li
171.505 245.544 li
f
175.948 258.719 mo
175.948 257.28 174.165 256.114 171.965 256.114 cv
169.765 256.114 167.982 257.28 167.982 258.719 cv
167.982 260.157 169.765 261.323 171.965 261.323 cv
174.165 261.323 175.948 260.157 175.948 258.719 cv
@
175.948 258.719 mo
175.948 257.28 174.165 256.114 171.965 256.114 cv
169.765 256.114 167.982 257.28 167.982 258.719 cv
167.982 260.157 169.765 261.323 171.965 261.323 cv
174.165 261.323 175.948 260.157 175.948 258.719 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
169.225 257.738 mo
(FIRCleanUp)
[.596252 .357101 .715286 .715286 .298126 .47612 .476135 .536194 .774261 0 ]xsh
169.221 258.964 mo
(work=65664)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
169.95 260.189 mo
(I/O: 2->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
171.582 253.357 mo
171.659 254.046 171.659 254.736 171.735 255.348 cv
@
171.582 255.348 mo
171.735 256.114 li
171.965 255.348 li
cp
@
171.582 255.348 mo
171.735 256.114 li
171.965 255.348 li
f
177.94 266.685 mo
177.94 265.247 175.916 264.081 173.42 264.081 cv
170.924 264.081 168.901 265.247 168.901 266.685 cv
168.901 268.124 170.924 269.29 173.42 269.29 cv
175.916 269.29 177.94 268.124 177.94 266.685 cv
@
177.94 266.685 mo
177.94 265.247 175.916 264.081 173.42 264.081 cv
170.924 264.081 168.901 265.247 168.901 266.685 cv
168.901 268.124 170.924 269.29 173.42 269.29 cv
175.916 269.29 177.94 268.124 177.94 266.685 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
170.144 265.705 mo
(FIRResetClean)
[.596252 .357101 .715286 .715286 .47612 .41716 .476135 .298126 .715271 .298126 .476135 .476135 
0 ]xsh
170.676 266.93 mo
(work=49792)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
170.333 268.156 mo
(I/O: 228->208)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
172.425 261.323 mo
172.501 261.936 172.654 262.625 172.808 263.315 cv
@
172.654 263.391 mo
172.961 264.081 li
172.961 263.315 li
cp
@
172.654 263.391 mo
172.961 264.081 li
172.961 263.315 li
f
174.416 269.213 mo
175.565 272.43 177.327 277.945 177.404 281.392 cv
177.404 281.392 177.404 281.392 177.404 418.66 cv
177.327 422.643 176.408 427.009 178.323 430.456 cv
178.782 431.299 180.008 432.065 181.234 432.448 cv
@
181.004 432.601 mo
181.77 432.601 li
181.08 432.218 li
cp
@
181.004 432.601 mo
181.77 432.601 li
181.08 432.218 li
f
194.715 141.368 mo
194.715 139.464 191.972 137.921 188.587 137.921 cv
185.203 137.921 182.459 139.464 182.459 141.368 cv
182.459 143.271 185.203 144.815 188.587 144.815 cv
191.972 144.815 194.715 143.271 194.715 141.368 cv
@
194.715 141.368 mo
194.715 139.464 191.972 137.921 188.587 137.921 cv
185.203 137.921 182.459 139.464 182.459 141.368 cv
182.459 143.271 185.203 144.815 188.587 144.815 cv
191.972 144.815 194.715 143.271 194.715 141.368 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.699 139.774 mo
(ValueCreator)
[.774261 .47612 .298126 .536209 .47612 .715286 .357101 .476135 .47612 .298126 .536209 0 
]xsh
185.843 140.999 mo
(work=90112)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.572 142.225 mo
(I/O: 0->2)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
184.03 143.451 mo
(*** STATEFUL ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .774246 .655228 .655228 .596252 .774261 .655228 
.268097 .536209 .536194 0 ]xsh
188.587 133.861 mo
188.587 134.703 188.587 135.929 188.587 137.001 cv
@
188.434 137.078 mo
188.587 137.844 li
188.817 137.078 li
cp
@
188.434 137.078 mo
188.587 137.844 li
188.817 137.078 li
f
208.273 141.368 mo
208.273 139.929 205.976 138.763 203.141 138.763 cv
200.307 138.763 198.009 139.929 198.009 141.368 cv
198.009 142.806 200.307 143.972 203.141 143.972 cv
205.976 143.972 208.273 142.806 208.273 141.368 cv
@
208.273 141.368 mo
208.273 139.929 205.976 138.763 203.141 138.763 cv
200.307 138.763 198.009 139.929 198.009 141.368 cv
198.009 142.806 200.307 143.972 203.141 143.972 cv
205.976 143.972 208.273 142.806 208.273 141.368 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.3 140.387 mo
(GuardDataPadder)
[.774261 .536194 .476135 .357101 .536194 .774261 .47612 .298126 .476135 .596252 .476135 .536194 
.536209 .47612 0 ]xsh
200.396 141.613 mo
(work=60928)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
200.054 142.838 mo
(I/O: 208->256)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
191.575 133.478 mo
193.566 134.167 196.094 135.163 197.626 136.006 cv
198.545 136.542 199.618 137.538 200.613 138.61 cv
@
200.307 138.61 mo
200.996 138.993 li
200.613 138.304 li
cp
@
200.307 138.61 mo
200.996 138.993 li
200.613 138.304 li
f
192.8 281.392 mo
192.8 280.631 190.914 280.014 188.587 280.014 cv
186.26 280.014 184.374 280.631 184.374 281.392 cv
184.374 282.154 186.26 282.771 188.587 282.771 cv
190.914 282.771 192.8 282.154 192.8 281.392 cv
@
192.8 281.392 mo
192.8 280.631 190.914 280.014 188.587 280.014 cv
186.26 280.014 184.374 280.631 184.374 281.392 cv
184.374 282.154 186.26 282.771 188.587 282.771 cv
190.914 282.771 192.8 282.154 192.8 281.392 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.177 281.637 mo
(roundrobin\(2,2\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
193.413 288.133 mo
193.413 286.695 191.252 285.529 188.587 285.529 cv
185.922 285.529 183.761 286.695 183.761 288.133 cv
183.761 289.572 185.922 290.738 188.587 290.738 cv
191.252 290.738 193.413 289.572 193.413 288.133 cv
@
193.413 288.133 mo
193.413 286.695 191.252 285.529 188.587 285.529 cv
185.922 285.529 183.761 286.695 183.761 288.133 cv
183.761 289.572 185.922 290.738 188.587 290.738 cv
191.252 290.738 193.413 289.572 193.413 288.133 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.072 287.153 mo
(GuardMultiplier)
[.774261 .536194 .476135 .357101 .536194 .953354 .536209 .298126 .298126 .298126 .536194 .298126 
.298126 .476135 0 ]xsh
185.574 288.379 mo
(work=122880)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
186.572 289.604 mo
(I/O: 4->2)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.587 282.771 mo
188.587 283.307 188.587 284.073 188.587 284.763 cv
@
188.434 284.763 mo
188.587 285.529 li
188.817 284.763 li
cp
@
188.434 284.763 mo
188.587 285.529 li
188.817 284.763 li
f
194.026 151.785 mo
194.026 150.347 191.591 149.181 188.587 149.181 cv
185.584 149.181 183.149 150.347 183.149 151.785 cv
183.149 153.224 185.584 154.39 188.587 154.39 cv
191.591 154.39 194.026 153.224 194.026 151.785 cv
@
194.026 151.785 mo
194.026 150.347 191.591 149.181 188.587 149.181 cv
185.584 149.181 183.149 150.347 183.149 151.785 cv
183.149 153.224 185.584 154.39 188.587 154.39 cv
191.591 154.39 194.026 153.224 194.026 151.785 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 150.805 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 152.031 mo
(work=61536)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
185.5 153.256 mo
(I/O: 256->256)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
188.587 144.891 mo
188.587 146.04 188.587 147.342 188.587 148.491 cv
@
188.434 148.415 mo
188.587 149.181 li
188.817 148.415 li
cp
@
188.434 148.415 mo
188.587 149.181 li
188.817 148.415 li
f
194.026 161.59 mo
194.026 160.152 191.591 158.986 188.587 158.986 cv
185.584 158.986 183.149 160.152 183.149 161.59 cv
183.149 163.028 185.584 164.194 188.587 164.194 cv
191.591 164.194 194.026 163.028 194.026 161.59 cv
@
194.026 161.59 mo
194.026 160.152 191.591 158.986 188.587 158.986 cv
185.584 158.986 183.149 160.152 183.149 161.59 cv
183.149 163.028 185.584 164.194 188.587 164.194 cv
191.591 164.194 194.026 163.028 194.026 161.59 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 160.609 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 161.835 mo
(work=61632)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
185.5 163.06 mo
(I/O: 128->128)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
188.587 154.39 mo
188.587 155.615 188.587 156.994 188.587 158.22 cv
@
188.434 158.22 mo
188.587 158.986 li
188.817 158.22 li
cp
@
188.434 158.22 mo
188.587 158.986 li
188.817 158.22 li
f
194.026 171.395 mo
194.026 169.956 191.591 168.79 188.587 168.79 cv
185.584 168.79 183.149 169.956 183.149 171.395 cv
183.149 172.833 185.584 173.999 188.587 173.999 cv
191.591 173.999 194.026 172.833 194.026 171.395 cv
@
194.026 171.395 mo
194.026 169.956 191.591 168.79 188.587 168.79 cv
185.584 168.79 183.149 169.956 183.149 171.395 cv
183.149 172.833 185.584 173.999 188.587 173.999 cv
191.591 173.999 194.026 172.833 194.026 171.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 170.414 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 171.639 mo
(work=61824)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.036 172.865 mo
(I/O: 64->64)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.587 164.194 mo
188.587 165.42 188.587 166.799 188.587 168.024 cv
@
188.434 168.024 mo
188.587 168.79 li
188.817 168.024 li
cp
@
188.434 168.024 mo
188.587 168.79 li
188.817 168.024 li
f
194.026 181.2 mo
194.026 179.761 191.591 178.595 188.587 178.595 cv
185.584 178.595 183.149 179.761 183.149 181.2 cv
183.149 182.638 185.584 183.804 188.587 183.804 cv
191.591 183.804 194.026 182.638 194.026 181.2 cv
@
194.026 181.2 mo
194.026 179.761 191.591 178.595 188.587 178.595 cv
185.584 178.595 183.149 179.761 183.149 181.2 cv
183.149 182.638 185.584 183.804 188.587 183.804 cv
191.591 183.804 194.026 182.638 194.026 181.2 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 180.219 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 181.445 mo
(work=62208)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.036 182.67 mo
(I/O: 32->32)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.587 173.999 mo
188.587 175.225 188.587 176.604 188.587 177.829 cv
@
188.434 177.829 mo
188.587 178.595 li
188.817 177.829 li
cp
@
188.434 177.829 mo
188.587 178.595 li
188.817 177.829 li
f
194.026 191.004 mo
194.026 189.566 191.591 188.4 188.587 188.4 cv
185.584 188.4 183.149 189.566 183.149 191.004 cv
183.149 192.443 185.584 193.609 188.587 193.609 cv
191.591 193.609 194.026 192.443 194.026 191.004 cv
@
194.026 191.004 mo
194.026 189.566 191.591 188.4 188.587 188.4 cv
185.584 188.4 183.149 189.566 183.149 191.004 cv
183.149 192.443 185.584 193.609 188.587 193.609 cv
191.591 193.609 194.026 192.443 194.026 191.004 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 190.024 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 191.25 mo
(work=62976)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.036 192.475 mo
(I/O: 16->16)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.587 183.804 mo
188.587 185.03 188.587 186.408 188.587 187.634 cv
@
188.434 187.634 mo
188.587 188.4 li
188.817 187.634 li
cp
@
188.434 187.634 mo
188.587 188.4 li
188.817 187.634 li
f
194.026 200.809 mo
194.026 199.371 191.591 198.205 188.587 198.205 cv
185.584 198.205 183.149 199.371 183.149 200.809 cv
183.149 202.248 185.584 203.414 188.587 203.414 cv
191.591 203.414 194.026 202.248 194.026 200.809 cv
@
194.026 200.809 mo
194.026 199.371 191.591 198.205 188.587 198.205 cv
185.584 198.205 183.149 199.371 183.149 200.809 cv
183.149 202.248 185.584 203.414 188.587 203.414 cv
191.591 203.414 194.026 202.248 194.026 200.809 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 199.829 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 201.055 mo
(work=64512)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.572 202.28 mo
(I/O: 8->8)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.587 193.609 mo
188.587 194.834 188.587 196.213 188.587 197.439 cv
@
188.434 197.439 mo
188.587 198.205 li
188.817 197.439 li
cp
@
188.434 197.439 mo
188.587 198.205 li
188.817 197.439 li
f
192.877 210.614 mo
192.877 209.176 190.956 208.01 188.587 208.01 cv
186.218 208.01 184.298 209.176 184.298 210.614 cv
184.298 212.052 186.218 213.218 188.587 213.218 cv
190.956 213.218 192.877 212.052 192.877 210.614 cv
@
192.877 210.614 mo
192.877 209.176 190.956 208.01 188.587 208.01 cv
186.218 208.01 184.298 209.176 184.298 210.614 cv
184.298 212.052 186.218 213.218 188.587 213.218 cv
190.956 213.218 192.877 212.052 192.877 210.614 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.608 209.633 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.574 210.859 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
186.572 212.084 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.587 203.414 mo
188.587 204.639 188.587 206.018 188.587 207.244 cv
@
188.434 207.244 mo
188.587 208.01 li
188.817 207.244 li
cp
@
188.434 207.244 mo
188.587 208.01 li
188.817 207.244 li
f
192.877 220.419 mo
192.877 218.98 190.956 217.814 188.587 217.814 cv
186.218 217.814 184.298 218.98 184.298 220.419 cv
184.298 221.857 186.218 223.023 188.587 223.023 cv
190.956 223.023 192.877 221.857 192.877 220.419 cv
@
192.877 220.419 mo
192.877 218.98 190.956 217.814 188.587 217.814 cv
186.218 217.814 184.298 218.98 184.298 220.419 cv
184.298 221.857 186.218 223.023 188.587 223.023 cv
190.956 223.023 192.877 221.857 192.877 220.419 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.608 219.438 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.574 220.663 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
186.572 221.889 mo
(I/O: 8->8)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.587 213.218 mo
188.587 214.444 188.587 215.823 188.587 217.048 cv
@
188.434 217.048 mo
188.587 217.814 li
188.817 217.048 li
cp
@
188.434 217.048 mo
188.587 217.814 li
188.817 217.048 li
f
192.877 230.224 mo
192.877 228.785 190.956 227.619 188.587 227.619 cv
186.218 227.619 184.298 228.785 184.298 230.224 cv
184.298 231.662 186.218 232.828 188.587 232.828 cv
190.956 232.828 192.877 231.662 192.877 230.224 cv
@
192.877 230.224 mo
192.877 228.785 190.956 227.619 188.587 227.619 cv
186.218 227.619 184.298 228.785 184.298 230.224 cv
184.298 231.662 186.218 232.828 188.587 232.828 cv
190.956 232.828 192.877 231.662 192.877 230.224 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.608 229.243 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.574 230.469 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
186.036 231.694 mo
(I/O: 16->16)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.587 223.023 mo
188.587 224.249 188.587 225.628 188.587 226.853 cv
@
188.434 226.853 mo
188.587 227.619 li
188.817 226.853 li
cp
@
188.434 226.853 mo
188.587 227.619 li
188.817 226.853 li
f
192.877 240.028 mo
192.877 238.59 190.956 237.424 188.587 237.424 cv
186.218 237.424 184.298 238.59 184.298 240.028 cv
184.298 241.467 186.218 242.633 188.587 242.633 cv
190.956 242.633 192.877 241.467 192.877 240.028 cv
@
192.877 240.028 mo
192.877 238.59 190.956 237.424 188.587 237.424 cv
186.218 237.424 184.298 238.59 184.298 240.028 cv
184.298 241.467 186.218 242.633 188.587 242.633 cv
190.956 242.633 192.877 241.467 192.877 240.028 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.608 239.048 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.574 240.274 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
186.036 241.499 mo
(I/O: 32->32)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.587 232.828 mo
188.587 234.054 188.587 235.432 188.587 236.658 cv
@
188.434 236.658 mo
188.587 237.424 li
188.817 236.658 li
cp
@
188.434 236.658 mo
188.587 237.424 li
188.817 236.658 li
f
192.877 249.833 mo
192.877 248.395 190.956 247.229 188.587 247.229 cv
186.218 247.229 184.298 248.395 184.298 249.833 cv
184.298 251.272 186.218 252.438 188.587 252.438 cv
190.956 252.438 192.877 251.272 192.877 249.833 cv
@
192.877 249.833 mo
192.877 248.395 190.956 247.229 188.587 247.229 cv
186.218 247.229 184.298 248.395 184.298 249.833 cv
184.298 251.272 186.218 252.438 188.587 252.438 cv
190.956 252.438 192.877 251.272 192.877 249.833 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.608 248.853 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.574 250.079 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
186.036 251.304 mo
(I/O: 64->64)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.587 242.633 mo
188.587 243.858 188.587 245.237 188.587 246.463 cv
@
188.434 246.463 mo
188.587 247.229 li
188.817 246.463 li
cp
@
188.434 246.463 mo
188.587 247.229 li
188.817 246.463 li
f
192.953 258.719 mo
192.953 257.28 190.999 256.114 188.587 256.114 cv
186.176 256.114 184.221 257.28 184.221 258.719 cv
184.221 260.157 186.176 261.323 188.587 261.323 cv
190.999 261.323 192.953 260.157 192.953 258.719 cv
@
192.953 258.719 mo
192.953 257.28 190.999 256.114 188.587 256.114 cv
186.176 256.114 184.221 257.28 184.221 258.719 cv
184.221 260.157 186.176 261.323 188.587 261.323 cv
190.999 261.323 192.953 260.157 192.953 258.719 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.608 257.738 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.574 258.964 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
185.5 260.189 mo
(I/O: 128->128)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
188.587 252.438 mo
188.587 253.357 188.587 254.429 188.587 255.348 cv
@
188.434 255.348 mo
188.587 256.114 li
188.817 255.348 li
cp
@
188.434 255.348 mo
188.587 256.114 li
188.817 255.348 li
f
192.953 266.685 mo
192.953 265.247 190.999 264.081 188.587 264.081 cv
186.176 264.081 184.221 265.247 184.221 266.685 cv
184.221 268.124 186.176 269.29 188.587 269.29 cv
190.999 269.29 192.953 268.124 192.953 266.685 cv
@
192.953 266.685 mo
192.953 265.247 190.999 264.081 188.587 264.081 cv
186.176 264.081 184.221 265.247 184.221 266.685 cv
184.221 268.124 186.176 269.29 188.587 269.29 cv
190.999 269.29 192.953 268.124 192.953 266.685 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.608 265.705 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.574 266.93 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
185.5 268.156 mo
(I/O: 256->256)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
188.587 261.323 mo
188.587 261.936 188.587 262.625 188.587 263.315 cv
@
188.434 263.315 mo
188.587 264.081 li
188.817 263.315 li
cp
@
188.434 263.315 mo
188.587 264.081 li
188.817 263.315 li
f
192.57 274.652 mo
192.57 273.213 190.787 272.047 188.587 272.047 cv
186.387 272.047 184.604 273.213 184.604 274.652 cv
184.604 276.09 186.387 277.256 188.587 277.256 cv
190.787 277.256 192.57 276.09 192.57 274.652 cv
@
192.57 274.652 mo
192.57 273.213 190.787 272.047 188.587 272.047 cv
186.387 272.047 184.604 273.213 184.604 274.652 cv
184.604 276.09 186.387 277.256 188.587 277.256 cv
190.787 277.256 192.57 276.09 192.57 274.652 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j <1C60D8A8C9B854D0F11440702D5006845680E71CD73C900C490916BE82F8
5E5DEE53FD71CC09D24F8A30A088C06CBA01DD59B818AA23B5B5BA72EAF869A0
4AF24B3FA74ED46E2D0795E69AF204A33ECB036664AA3019A7D47C7167887ED4
6FC3B0A3E8910755D9C21C7B592B94C889A58486430488944F2DFDFA13EB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /.notdef /C /D /E /F 
/G /H /I /.notdef /K /L /M /N 
/O /P /.notdef /R /S /T /U /V 
/W 2{/.notdef}rp /Z 6{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /x /y 134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
186.204 273.671 mo
(GuardConj)
[.774261 .536194 .476135 .357101 .536194 .715286 .536194 .536209 0 ]xsh
185.842 274.897 mo
(work=57344)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.572 276.122 mo
(I/O: 2->2)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.587 269.29 mo
188.587 269.902 188.587 270.592 188.587 271.281 cv
@
188.434 271.281 mo
188.587 272.047 li
188.817 271.281 li
cp
@
188.434 271.281 mo
188.587 272.047 li
188.817 271.281 li
f
188.587 277.256 mo
188.587 277.945 188.587 278.635 188.587 279.324 cv
@
188.434 279.248 mo
188.587 280.014 li
188.817 279.248 li
cp
@
188.434 279.248 mo
188.587 280.014 li
188.817 279.248 li
f
209.346 151.785 mo
209.346 150.347 206.911 149.181 203.907 149.181 cv
200.904 149.181 198.469 150.347 198.469 151.785 cv
198.469 153.224 200.904 154.39 203.907 154.39 cv
206.911 154.39 209.346 153.224 209.346 151.785 cv
@
209.346 151.785 mo
209.346 150.347 206.911 149.181 203.907 149.181 cv
200.904 149.181 198.469 150.347 198.469 151.785 cv
198.469 153.224 200.904 154.39 203.907 154.39 cv
206.911 154.39 209.346 153.224 209.346 151.785 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.737 150.805 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
201.163 152.031 mo
(work=61536)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
200.82 153.256 mo
(I/O: 256->256)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
203.371 143.972 mo
203.448 145.351 203.524 146.959 203.677 148.415 cv
@
203.524 148.415 mo
203.677 149.181 li
203.907 148.415 li
cp
@
203.524 148.415 mo
203.677 149.181 li
203.907 148.415 li
f
209.346 161.59 mo
209.346 160.152 206.911 158.986 203.907 158.986 cv
200.904 158.986 198.469 160.152 198.469 161.59 cv
198.469 163.028 200.904 164.194 203.907 164.194 cv
206.911 164.194 209.346 163.028 209.346 161.59 cv
@
209.346 161.59 mo
209.346 160.152 206.911 158.986 203.907 158.986 cv
200.904 158.986 198.469 160.152 198.469 161.59 cv
198.469 163.028 200.904 164.194 203.907 164.194 cv
206.911 164.194 209.346 163.028 209.346 161.59 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.737 160.609 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
201.163 161.835 mo
(work=61632)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
200.82 163.06 mo
(I/O: 128->128)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
203.907 154.39 mo
203.907 155.615 203.907 156.994 203.907 158.22 cv
@
203.754 158.22 mo
203.907 158.986 li
204.137 158.22 li
cp
@
203.754 158.22 mo
203.907 158.986 li
204.137 158.22 li
f
209.346 171.395 mo
209.346 169.956 206.911 168.79 203.907 168.79 cv
200.904 168.79 198.469 169.956 198.469 171.395 cv
198.469 172.833 200.904 173.999 203.907 173.999 cv
206.911 173.999 209.346 172.833 209.346 171.395 cv
@
209.346 171.395 mo
209.346 169.956 206.911 168.79 203.907 168.79 cv
200.904 168.79 198.469 169.956 198.469 171.395 cv
198.469 172.833 200.904 173.999 203.907 173.999 cv
206.911 173.999 209.346 172.833 209.346 171.395 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.737 170.414 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
201.163 171.639 mo
(work=61824)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
201.356 172.865 mo
(I/O: 64->64)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
203.907 164.194 mo
203.907 165.42 203.907 166.799 203.907 168.024 cv
@
203.754 168.024 mo
203.907 168.79 li
204.137 168.024 li
cp
@
203.754 168.024 mo
203.907 168.79 li
204.137 168.024 li
f
209.346 181.2 mo
209.346 179.761 206.911 178.595 203.907 178.595 cv
200.904 178.595 198.469 179.761 198.469 181.2 cv
198.469 182.638 200.904 183.804 203.907 183.804 cv
206.911 183.804 209.346 182.638 209.346 181.2 cv
@
209.346 181.2 mo
209.346 179.761 206.911 178.595 203.907 178.595 cv
200.904 178.595 198.469 179.761 198.469 181.2 cv
198.469 182.638 200.904 183.804 203.907 183.804 cv
206.911 183.804 209.346 182.638 209.346 181.2 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.737 180.219 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
201.163 181.445 mo
(work=62208)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
201.356 182.67 mo
(I/O: 32->32)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
203.907 173.999 mo
203.907 175.225 203.907 176.604 203.907 177.829 cv
@
203.754 177.829 mo
203.907 178.595 li
204.137 177.829 li
cp
@
203.754 177.829 mo
203.907 178.595 li
204.137 177.829 li
f
209.346 191.004 mo
209.346 189.566 206.911 188.4 203.907 188.4 cv
200.904 188.4 198.469 189.566 198.469 191.004 cv
198.469 192.443 200.904 193.609 203.907 193.609 cv
206.911 193.609 209.346 192.443 209.346 191.004 cv
@
209.346 191.004 mo
209.346 189.566 206.911 188.4 203.907 188.4 cv
200.904 188.4 198.469 189.566 198.469 191.004 cv
198.469 192.443 200.904 193.609 203.907 193.609 cv
206.911 193.609 209.346 192.443 209.346 191.004 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.737 190.024 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
201.163 191.25 mo
(work=62976)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
201.356 192.475 mo
(I/O: 16->16)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
203.907 183.804 mo
203.907 185.03 203.907 186.408 203.907 187.634 cv
@
203.754 187.634 mo
203.907 188.4 li
204.137 187.634 li
cp
@
203.754 187.634 mo
203.907 188.4 li
204.137 187.634 li
f
209.346 200.809 mo
209.346 199.371 206.911 198.205 203.907 198.205 cv
200.904 198.205 198.469 199.371 198.469 200.809 cv
198.469 202.248 200.904 203.414 203.907 203.414 cv
206.911 203.414 209.346 202.248 209.346 200.809 cv
@
209.346 200.809 mo
209.346 199.371 206.911 198.205 203.907 198.205 cv
200.904 198.205 198.469 199.371 198.469 200.809 cv
198.469 202.248 200.904 203.414 203.907 203.414 cv
206.911 203.414 209.346 202.248 209.346 200.809 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.737 199.829 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
201.163 201.055 mo
(work=64512)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
201.892 202.28 mo
(I/O: 8->8)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
203.907 193.609 mo
203.907 194.834 203.907 196.213 203.907 197.439 cv
@
203.754 197.439 mo
203.907 198.205 li
204.137 197.439 li
cp
@
203.754 197.439 mo
203.907 198.205 li
204.137 197.439 li
f
208.12 210.614 mo
208.12 209.176 206.2 208.01 203.831 208.01 cv
201.462 208.01 199.541 209.176 199.541 210.614 cv
199.541 212.052 201.462 213.218 203.831 213.218 cv
206.2 213.218 208.12 212.052 208.12 210.614 cv
@
208.12 210.614 mo
208.12 209.176 206.2 208.01 203.831 208.01 cv
201.462 208.01 199.541 209.176 199.541 210.614 cv
199.541 212.052 201.462 213.218 203.831 213.218 cv
206.2 213.218 208.12 212.052 208.12 210.614 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
200.852 209.633 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
200.818 210.859 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
201.816 212.084 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
203.907 203.414 mo
203.907 204.639 203.831 206.018 203.831 207.244 cv
@
203.677 207.244 mo
203.831 208.01 li
204.06 207.244 li
cp
@
203.677 207.244 mo
203.831 208.01 li
204.06 207.244 li
f
207.278 220.419 mo
207.278 218.98 205.357 217.814 202.988 217.814 cv
200.619 217.814 198.698 218.98 198.698 220.419 cv
198.698 221.857 200.619 223.023 202.988 223.023 cv
205.357 223.023 207.278 221.857 207.278 220.419 cv
@
207.278 220.419 mo
207.278 218.98 205.357 217.814 202.988 217.814 cv
200.619 217.814 198.698 218.98 198.698 220.419 cv
198.698 221.857 200.619 223.023 202.988 223.023 cv
205.357 223.023 207.278 221.857 207.278 220.419 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
200.009 219.438 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
199.975 220.663 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
200.973 221.889 mo
(I/O: 8->8)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
203.601 213.218 mo
203.524 214.444 203.448 215.823 203.294 217.048 cv
@
203.141 217.048 mo
203.218 217.814 li
203.448 217.048 li
cp
@
203.141 217.048 mo
203.218 217.814 li
203.448 217.048 li
f
206.895 230.224 mo
206.895 228.785 204.974 227.619 202.605 227.619 cv
200.236 227.619 198.315 228.785 198.315 230.224 cv
198.315 231.662 200.236 232.828 202.605 232.828 cv
204.974 232.828 206.895 231.662 206.895 230.224 cv
@
206.895 230.224 mo
206.895 228.785 204.974 227.619 202.605 227.619 cv
200.236 227.619 198.315 228.785 198.315 230.224 cv
198.315 231.662 200.236 232.828 202.605 232.828 cv
204.974 232.828 206.895 231.662 206.895 230.224 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.626 229.243 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
199.592 230.469 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
200.054 231.694 mo
(I/O: 16->16)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
202.911 223.023 mo
202.835 224.249 202.758 225.628 202.682 226.853 cv
@
202.528 226.853 mo
202.682 227.619 li
202.911 226.853 li
cp
@
202.528 226.853 mo
202.682 227.619 li
202.911 226.853 li
f
206.665 240.028 mo
206.665 238.59 204.744 237.424 202.375 237.424 cv
200.006 237.424 198.086 238.59 198.086 240.028 cv
198.086 241.467 200.006 242.633 202.375 242.633 cv
204.744 242.633 206.665 241.467 206.665 240.028 cv
@
206.665 240.028 mo
206.665 238.59 204.744 237.424 202.375 237.424 cv
200.006 237.424 198.086 238.59 198.086 240.028 cv
198.086 241.467 200.006 242.633 202.375 242.633 cv
204.744 242.633 206.665 241.467 206.665 240.028 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.396 239.048 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
199.362 240.274 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
199.824 241.499 mo
(I/O: 32->32)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
202.528 232.828 mo
202.528 234.054 202.452 235.432 202.452 236.658 cv
@
202.299 236.658 mo
202.452 237.424 li
202.682 236.658 li
cp
@
202.299 236.658 mo
202.452 237.424 li
202.682 236.658 li
f
206.588 249.833 mo
206.588 248.395 204.668 247.229 202.299 247.229 cv
199.93 247.229 198.009 248.395 198.009 249.833 cv
198.009 251.272 199.93 252.438 202.299 252.438 cv
204.668 252.438 206.588 251.272 206.588 249.833 cv
@
206.588 249.833 mo
206.588 248.395 204.668 247.229 202.299 247.229 cv
199.93 247.229 198.009 248.395 198.009 249.833 cv
198.009 251.272 199.93 252.438 202.299 252.438 cv
204.668 252.438 206.588 251.272 206.588 249.833 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.32 248.853 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
199.286 250.079 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
199.748 251.304 mo
(I/O: 64->64)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
202.375 242.633 mo
202.375 243.858 202.299 245.237 202.299 246.463 cv
@
202.145 246.463 mo
202.299 247.229 li
202.528 246.463 li
cp
@
202.145 246.463 mo
202.299 247.229 li
202.528 246.463 li
f
206.588 258.719 mo
206.588 257.28 204.633 256.114 202.222 256.114 cv
199.811 256.114 197.856 257.28 197.856 258.719 cv
197.856 260.157 199.811 261.323 202.222 261.323 cv
204.633 261.323 206.588 260.157 206.588 258.719 cv
@
206.588 258.719 mo
206.588 257.28 204.633 256.114 202.222 256.114 cv
199.811 256.114 197.856 257.28 197.856 258.719 cv
197.856 260.157 199.811 261.323 202.222 261.323 cv
204.633 261.323 206.588 260.157 206.588 258.719 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.243 257.738 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
199.209 258.964 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
199.135 260.189 mo
(I/O: 128->128)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
202.299 252.438 mo
202.299 253.357 202.222 254.429 202.222 255.348 cv
@
202.069 255.348 mo
202.222 256.114 li
202.452 255.348 li
cp
@
202.069 255.348 mo
202.222 256.114 li
202.452 255.348 li
f
206.588 266.685 mo
206.588 265.247 204.633 264.081 202.222 264.081 cv
199.811 264.081 197.856 265.247 197.856 266.685 cv
197.856 268.124 199.811 269.29 202.222 269.29 cv
204.633 269.29 206.588 268.124 206.588 266.685 cv
@
206.588 266.685 mo
206.588 265.247 204.633 264.081 202.222 264.081 cv
199.811 264.081 197.856 265.247 197.856 266.685 cv
197.856 268.124 199.811 269.29 202.222 269.29 cv
204.633 269.29 206.588 268.124 206.588 266.685 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
199.243 265.705 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
199.209 266.93 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
199.135 268.156 mo
(I/O: 256->256)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
202.222 261.323 mo
202.222 261.936 202.222 262.625 202.222 263.315 cv
@
202.069 263.315 mo
202.222 264.081 li
202.452 263.315 li
cp
@
202.069 263.315 mo
202.222 264.081 li
202.452 263.315 li
f
201.533 269.29 mo
200.767 271.971 199.311 276.03 197.626 277.869 cv
196.63 278.941 194.639 279.784 192.8 280.397 cv
@
192.724 280.243 mo
192.034 280.626 li
192.8 280.626 li
cp
@
192.724 280.243 mo
192.034 280.626 li
192.8 280.626 li
f
192.57 297.632 mo
192.57 296.193 190.787 295.027 188.587 295.027 cv
186.387 295.027 184.604 296.193 184.604 297.632 cv
184.604 299.07 186.387 300.236 188.587 300.236 cv
190.787 300.236 192.57 299.07 192.57 297.632 cv
@
192.57 297.632 mo
192.57 296.193 190.787 295.027 188.587 295.027 cv
186.387 295.027 184.604 296.193 184.604 297.632 cv
184.604 299.07 186.387 300.236 188.587 300.236 cv
190.787 300.236 192.57 299.07 192.57 297.632 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
186.383 296.651 mo
(Conjugate)
[.715286 .536194 .536209 .298126 .536194 .536194 .476135 .298126 0 ]xsh
185.843 297.877 mo
(work=57344)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.572 299.102 mo
(I/O: 2->2)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.587 290.738 mo
188.587 291.81 188.587 293.112 188.587 294.261 cv
@
188.434 294.261 mo
188.587 295.027 li
188.817 294.261 li
cp
@
188.434 294.261 mo
188.587 295.027 li
188.817 294.261 li
f
194.026 307.13 mo
194.026 305.692 191.591 304.526 188.587 304.526 cv
185.584 304.526 183.149 305.692 183.149 307.13 cv
183.149 308.568 185.584 309.734 188.587 309.734 cv
191.591 309.734 194.026 308.568 194.026 307.13 cv
@
194.026 307.13 mo
194.026 305.692 191.591 304.526 188.587 304.526 cv
185.584 304.526 183.149 305.692 183.149 307.13 cv
183.149 308.568 185.584 309.734 188.587 309.734 cv
191.591 309.734 194.026 308.568 194.026 307.13 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 306.15 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 307.375 mo
(work=61536)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
185.5 308.601 mo
(I/O: 256->256)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
188.587 300.236 mo
188.587 301.308 188.587 302.611 188.587 303.76 cv
@
188.434 303.76 mo
188.587 304.526 li
188.817 303.76 li
cp
@
188.434 303.76 mo
188.587 304.526 li
188.817 303.76 li
f
194.026 315.096 mo
194.026 313.658 191.591 312.492 188.587 312.492 cv
185.584 312.492 183.149 313.658 183.149 315.096 cv
183.149 316.535 185.584 317.701 188.587 317.701 cv
191.591 317.701 194.026 316.535 194.026 315.096 cv
@
194.026 315.096 mo
194.026 313.658 191.591 312.492 188.587 312.492 cv
185.584 312.492 183.149 313.658 183.149 315.096 cv
183.149 316.535 185.584 317.701 188.587 317.701 cv
191.591 317.701 194.026 316.535 194.026 315.096 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 314.116 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 315.342 mo
(work=61632)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
185.5 316.567 mo
(I/O: 128->128)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
188.587 309.734 mo
188.587 310.347 188.587 311.037 188.587 311.726 cv
@
188.434 311.726 mo
188.587 312.492 li
188.817 311.726 li
cp
@
188.434 311.726 mo
188.587 312.492 li
188.817 311.726 li
f
194.026 323.063 mo
194.026 321.624 191.591 320.458 188.587 320.458 cv
185.584 320.458 183.149 321.624 183.149 323.063 cv
183.149 324.501 185.584 325.667 188.587 325.667 cv
191.591 325.667 194.026 324.501 194.026 323.063 cv
@
194.026 323.063 mo
194.026 321.624 191.591 320.458 188.587 320.458 cv
185.584 320.458 183.149 321.624 183.149 323.063 cv
183.149 324.501 185.584 325.667 188.587 325.667 cv
191.591 325.667 194.026 324.501 194.026 323.063 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 322.082 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 323.308 mo
(work=61824)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.036 324.533 mo
(I/O: 64->64)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.587 317.701 mo
188.587 318.314 188.587 319.003 188.587 319.692 cv
@
188.434 319.692 mo
188.587 320.458 li
188.817 319.692 li
cp
@
188.434 319.692 mo
188.587 320.458 li
188.817 319.692 li
f
194.026 331.029 mo
194.026 329.591 191.591 328.425 188.587 328.425 cv
185.584 328.425 183.149 329.591 183.149 331.029 cv
183.149 332.468 185.584 333.634 188.587 333.634 cv
191.591 333.634 194.026 332.468 194.026 331.029 cv
@
194.026 331.029 mo
194.026 329.591 191.591 328.425 188.587 328.425 cv
185.584 328.425 183.149 329.591 183.149 331.029 cv
183.149 332.468 185.584 333.634 188.587 333.634 cv
191.591 333.634 194.026 332.468 194.026 331.029 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 330.049 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 331.275 mo
(work=62208)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.036 332.5 mo
(I/O: 32->32)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.587 325.667 mo
188.587 326.28 188.587 326.969 188.587 327.659 cv
@
188.434 327.659 mo
188.587 328.425 li
188.817 327.659 li
cp
@
188.434 327.659 mo
188.587 328.425 li
188.817 327.659 li
f
194.026 338.996 mo
194.026 337.557 191.591 336.391 188.587 336.391 cv
185.584 336.391 183.149 337.557 183.149 338.996 cv
183.149 340.434 185.584 341.6 188.587 341.6 cv
191.591 341.6 194.026 340.434 194.026 338.996 cv
@
194.026 338.996 mo
194.026 337.557 191.591 336.391 188.587 336.391 cv
185.584 336.391 183.149 337.557 183.149 338.996 cv
183.149 340.434 185.584 341.6 188.587 341.6 cv
191.591 341.6 194.026 340.434 194.026 338.996 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 338.015 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 339.241 mo
(work=62976)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.036 340.466 mo
(I/O: 16->16)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.587 333.634 mo
188.587 334.246 188.587 334.936 188.587 335.625 cv
@
188.434 335.625 mo
188.587 336.391 li
188.817 335.625 li
cp
@
188.434 335.625 mo
188.587 336.391 li
188.817 335.625 li
f
194.026 346.962 mo
194.026 345.524 191.591 344.358 188.587 344.358 cv
185.584 344.358 183.149 345.524 183.149 346.962 cv
183.149 348.4 185.584 349.566 188.587 349.566 cv
191.591 349.566 194.026 348.4 194.026 346.962 cv
@
194.026 346.962 mo
194.026 345.524 191.591 344.358 188.587 344.358 cv
185.584 344.358 183.149 345.524 183.149 346.962 cv
183.149 348.4 185.584 349.566 188.587 349.566 cv
191.591 349.566 194.026 348.4 194.026 346.962 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
184.417 345.981 mo
(FFTReorderSimple)
[.596252 .596252 .655228 .715286 .476135 .536194 .357101 .536194 .476135 .357101 .596252 .298126 
.834335 .536194 .298126 0 ]xsh
185.843 347.207 mo
(work=64512)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.572 348.432 mo
(I/O: 8->8)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.587 341.6 mo
188.587 342.213 188.587 342.902 188.587 343.592 cv
@
188.434 343.592 mo
188.587 344.358 li
188.817 343.592 li
cp
@
188.434 343.592 mo
188.587 344.358 li
188.817 343.592 li
f
192.8 354.928 mo
192.8 353.49 190.88 352.324 188.511 352.324 cv
186.142 352.324 184.221 353.49 184.221 354.928 cv
184.221 356.367 186.142 357.533 188.511 357.533 cv
190.88 357.533 192.8 356.367 192.8 354.928 cv
@
192.8 354.928 mo
192.8 353.49 190.88 352.324 188.511 352.324 cv
186.142 352.324 184.221 353.49 184.221 354.928 cv
184.221 356.367 186.142 357.533 188.511 357.533 cv
190.88 357.533 192.8 356.367 192.8 354.928 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.532 353.948 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.498 355.174 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
186.496 356.399 mo
(I/O: 4->4)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.587 349.566 mo
188.587 350.179 188.511 350.869 188.511 351.558 cv
@
188.357 351.558 mo
188.511 352.324 li
188.74 351.558 li
cp
@
188.357 351.558 mo
188.511 352.324 li
188.74 351.558 li
f
192.724 362.895 mo
192.724 361.456 190.803 360.29 188.434 360.29 cv
186.065 360.29 184.144 361.456 184.144 362.895 cv
184.144 364.333 186.065 365.499 188.434 365.499 cv
190.803 365.499 192.724 364.333 192.724 362.895 cv
@
192.724 362.895 mo
192.724 361.456 190.803 360.29 188.434 360.29 cv
186.065 360.29 184.144 361.456 184.144 362.895 cv
184.144 364.333 186.065 365.499 188.434 365.499 cv
190.803 365.499 192.724 364.333 192.724 362.895 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.455 361.914 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.421 363.139 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
186.419 364.365 mo
(I/O: 8->8)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.511 357.533 mo
188.511 358.146 188.434 358.835 188.434 359.524 cv
@
188.281 359.524 mo
188.434 360.29 li
188.664 359.524 li
cp
@
188.281 359.524 mo
188.434 360.29 li
188.664 359.524 li
f
192.724 370.861 mo
192.724 369.423 190.803 368.257 188.434 368.257 cv
186.065 368.257 184.144 369.423 184.144 370.861 cv
184.144 372.3 186.065 373.466 188.434 373.466 cv
190.803 373.466 192.724 372.3 192.724 370.861 cv
@
192.724 370.861 mo
192.724 369.423 190.803 368.257 188.434 368.257 cv
186.065 368.257 184.144 369.423 184.144 370.861 cv
184.144 372.3 186.065 373.466 188.434 373.466 cv
190.803 373.466 192.724 372.3 192.724 370.861 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.455 369.881 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.421 371.107 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
185.883 372.332 mo
(I/O: 16->16)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.434 365.499 mo
188.434 366.112 188.434 366.801 188.434 367.491 cv
@
188.281 367.491 mo
188.434 368.257 li
188.664 367.491 li
cp
@
188.281 367.491 mo
188.434 368.257 li
188.664 367.491 li
f
192.724 378.828 mo
192.724 377.389 190.803 376.223 188.434 376.223 cv
186.065 376.223 184.144 377.389 184.144 378.828 cv
184.144 380.266 186.065 381.432 188.434 381.432 cv
190.803 381.432 192.724 380.266 192.724 378.828 cv
@
192.724 378.828 mo
192.724 377.389 190.803 376.223 188.434 376.223 cv
186.065 376.223 184.144 377.389 184.144 378.828 cv
184.144 380.266 186.065 381.432 188.434 381.432 cv
190.803 381.432 192.724 380.266 192.724 378.828 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.455 377.847 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.421 379.073 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
185.883 380.298 mo
(I/O: 32->32)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.434 373.466 mo
188.434 374.078 188.434 374.768 188.434 375.457 cv
@
188.281 375.457 mo
188.434 376.223 li
188.664 375.457 li
cp
@
188.281 375.457 mo
188.434 376.223 li
188.664 375.457 li
f
192.724 386.794 mo
192.724 385.356 190.803 384.19 188.434 384.19 cv
186.065 384.19 184.144 385.356 184.144 386.794 cv
184.144 388.232 186.065 389.398 188.434 389.398 cv
190.803 389.398 192.724 388.232 192.724 386.794 cv
@
192.724 386.794 mo
192.724 385.356 190.803 384.19 188.434 384.19 cv
186.065 384.19 184.144 385.356 184.144 386.794 cv
184.144 388.232 186.065 389.398 188.434 389.398 cv
190.803 389.398 192.724 388.232 192.724 386.794 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.455 385.814 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.421 387.04 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
185.883 388.265 mo
(I/O: 64->64)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 .536194 0 ]xsh
188.434 381.432 mo
188.434 382.045 188.434 382.734 188.434 383.424 cv
@
188.281 383.424 mo
188.434 384.19 li
188.664 383.424 li
cp
@
188.281 383.424 mo
188.434 384.19 li
188.664 383.424 li
f
192.8 394.76 mo
192.8 393.322 190.845 392.156 188.434 392.156 cv
186.023 392.156 184.068 393.322 184.068 394.76 cv
184.068 396.199 186.023 397.365 188.434 397.365 cv
190.845 397.365 192.8 396.199 192.8 394.76 cv
@
192.8 394.76 mo
192.8 393.322 190.845 392.156 188.434 392.156 cv
186.023 392.156 184.068 393.322 184.068 394.76 cv
184.068 396.199 186.023 397.365 188.434 397.365 cv
190.845 397.365 192.8 396.199 192.8 394.76 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.455 393.78 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.421 395.006 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
185.347 396.231 mo
(I/O: 128->128)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
188.434 389.398 mo
188.434 390.011 188.434 390.701 188.434 391.39 cv
@
188.281 391.39 mo
188.434 392.156 li
188.664 391.39 li
cp
@
188.281 391.39 mo
188.434 392.156 li
188.664 391.39 li
f
192.8 402.727 mo
192.8 401.288 190.845 400.122 188.434 400.122 cv
186.023 400.122 184.068 401.288 184.068 402.727 cv
184.068 404.165 186.023 405.331 188.434 405.331 cv
190.845 405.331 192.8 404.165 192.8 402.727 cv
@
192.8 402.727 mo
192.8 401.288 190.845 400.122 188.434 400.122 cv
186.023 400.122 184.068 401.288 184.068 402.727 cv
184.068 404.165 186.023 405.331 188.434 405.331 cv
190.845 405.331 192.8 404.165 192.8 402.727 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.455 401.746 mo
(CombineDFT)
[.715286 .536194 .834335 .536194 .298126 .536194 .476135 .774261 .596252 0 ]xsh
185.421 402.972 mo
(work=157696)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
185.347 404.197 mo
(I/O: 256->256)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
188.434 397.365 mo
188.434 397.978 188.434 398.667 188.434 399.356 cv
@
188.281 399.356 mo
188.434 400.122 li
188.664 399.356 li
cp
@
188.281 399.356 mo
188.434 400.122 li
188.664 399.356 li
f
192.264 410.693 mo
192.264 409.255 190.481 408.089 188.281 408.089 cv
186.081 408.089 184.298 409.255 184.298 410.693 cv
184.298 412.132 186.081 413.298 188.281 413.298 cv
190.481 413.298 192.264 412.132 192.264 410.693 cv
@
192.264 410.693 mo
192.264 409.255 190.481 408.089 188.281 408.089 cv
186.081 408.089 184.298 409.255 184.298 410.693 cv
184.298 412.132 186.081 413.298 188.281 413.298 cv
190.481 413.298 192.264 412.132 192.264 410.693 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
186.077 409.713 mo
(Conjugate)
[.715286 .536194 .536209 .298126 .536194 .536194 .476135 .298126 0 ]xsh
185.537 410.939 mo
(work=57344)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
186.266 412.164 mo
(I/O: 2->2)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.357 405.331 mo
188.357 405.944 188.357 406.633 188.357 407.323 cv
@
188.204 407.323 mo
188.357 408.089 li
188.587 407.323 li
cp
@
188.204 407.323 mo
188.357 408.089 li
188.587 407.323 li
f
192.264 418.66 mo
192.264 417.221 190.343 416.055 187.974 416.055 cv
185.605 416.055 183.685 417.221 183.685 418.66 cv
183.685 420.098 185.605 421.264 187.974 421.264 cv
190.343 421.264 192.264 420.098 192.264 418.66 cv
@
192.264 418.66 mo
192.264 417.221 190.343 416.055 187.974 416.055 cv
185.605 416.055 183.685 417.221 183.685 418.66 cv
183.685 420.098 185.605 421.264 187.974 421.264 cv
190.343 421.264 192.264 420.098 192.264 418.66 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDFF4D0475F24A0512970A16CFF6BFBD1A1A12D07A62723
BF27DBD01B60ACEC3C9DB4E627348B4F9C96D245E2397B81856FE7B9149C0D88
A0B1C89901A357B578317FC0F49D1050D95CF70B7F7A7C5741B1B644F20C16DB
8F1BD7E6C45546C9302E6AD757CA73E92696A658F8A903A2E6B5FA3BE24637C3
3393411FB0E113E4BDFEBF11B4E90F57471B306273B2241C3C23457DA84CC16B
22781151F6DE159B155116967F7D53FA1DDDDF14084F0631BA1C08300F50E5BA
9DC336D8349BEA3371DCAFDF658781D6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /B /C /D /E /F 
/G /H /I /.notdef /K /L /M /N 
/O /P /.notdef /R /S /T /U /V 
/W 2{/.notdef}rp /Z 6{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /x /y 134{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.502 417.679 mo
(DivideByN)
[.774261 .298126 .536194 .298126 .536209 .47612 .715286 .536194 0 ]xsh
184.962 418.905 mo
(work=311296)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
185.959 420.13 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
188.204 413.298 mo
188.204 413.91 188.128 414.6 188.128 415.289 cv
@
187.974 415.289 mo
188.128 416.055 li
188.357 415.289 li
cp
@
187.974 415.289 mo
188.128 416.055 li
188.357 415.289 li
f
193.873 426.626 mo
193.873 425.188 191.198 424.022 187.898 424.022 cv
184.598 424.022 181.923 425.188 181.923 426.626 cv
181.923 428.064 184.598 429.23 187.898 429.23 cv
191.198 429.23 193.873 428.064 193.873 426.626 cv
@
193.873 426.626 mo
193.873 425.188 191.198 424.022 187.898 424.022 cv
184.598 424.022 181.923 425.188 181.923 426.626 cv
181.923 428.064 184.598 429.23 187.898 429.23 cv
191.198 429.23 193.873 428.064 193.873 426.626 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
183.192 425.646 mo
(GuardRemovePadded)
[.774261 .536194 .476135 .357101 .536194 .715286 .47612 .834335 .536194 .536209 .47612 .596252 
.476135 .536194 .536209 .476135 0 ]xsh
185.153 426.872 mo
(work=60928)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
184.81 428.097 mo
(I/O: 256->208)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
187.974 421.264 mo
187.974 421.877 187.898 422.566 187.898 423.256 cv
@
187.745 423.256 mo
187.898 424.022 li
188.128 423.256 li
cp
@
187.745 423.256 mo
187.898 424.022 li
188.128 423.256 li
f
186.902 429.23 mo
186.672 429.92 186.442 430.686 186.136 431.299 cv
@
185.983 431.222 mo
185.906 431.988 li
186.366 431.299 li
cp
@
185.983 431.222 mo
185.906 431.988 li
186.366 431.299 li
f
189.123 447.155 mo
189.123 446.393 187.443 445.776 185.37 445.776 cv
183.297 445.776 181.617 446.393 181.617 447.155 cv
181.617 447.916 183.297 448.534 185.37 448.534 cv
187.443 448.534 189.123 447.916 189.123 447.155 cv
@
189.123 447.155 mo
189.123 446.393 187.443 445.776 185.37 445.776 cv
183.297 445.776 181.617 446.393 181.617 447.155 cv
181.617 447.916 183.297 448.534 185.37 448.534 cv
187.443 448.534 189.123 447.916 189.123 447.155 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
182.377 447.4 mo
(duplicate\(1,1\))
[.536194 .536209 .536194 .298126 .298126 .476135 .476135 .298126 .47612 .357101 .536209 .268097 
.536194 0 ]xsh
185.37 443.018 mo
185.37 443.708 185.37 444.397 185.37 445.087 cv
@
185.217 445.01 mo
185.37 445.776 li
185.6 445.01 li
cp
@
185.217 445.01 mo
185.37 445.776 li
185.6 445.01 li
f
176.638 454.202 mo
176.638 453.441 174.751 452.823 172.425 452.823 cv
170.098 452.823 168.212 453.441 168.212 454.202 cv
168.212 454.963 170.098 455.581 172.425 455.581 cv
174.751 455.581 176.638 454.963 176.638 454.202 cv
@
176.638 454.202 mo
176.638 453.441 174.751 452.823 172.425 452.823 cv
170.098 452.823 168.212 453.441 168.212 454.202 cv
168.212 454.963 170.098 455.581 172.425 455.581 cv
174.751 455.581 176.638 454.963 176.638 454.202 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
169.014 454.447 mo
(roundrobin\(1,1\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
181.846 447.614 mo
179.931 447.921 177.71 448.457 176.408 449.146 cv
175.412 449.759 174.34 451.061 173.574 452.21 cv
@
173.42 452.057 mo
173.191 452.823 li
173.727 452.287 li
cp
@
173.42 452.057 mo
173.191 452.823 li
173.727 452.287 li
f
192.034 461.862 mo
192.034 460.424 190.182 459.258 187.898 459.258 cv
185.613 459.258 183.761 460.424 183.761 461.862 cv
183.761 463.3 185.613 464.466 187.898 464.466 cv
190.182 464.466 192.034 463.3 192.034 461.862 cv
@
192.034 461.862 mo
192.034 460.424 190.182 459.258 187.898 459.258 cv
185.613 459.258 183.761 460.424 183.761 461.862 cv
183.761 463.3 185.613 464.466 187.898 464.466 cv
190.182 464.466 192.034 463.3 192.034 461.862 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
185.038 460.882 mo
(CFARPusher)
[.715286 .596252 .774261 .715271 .596252 .536209 .417145 .536209 .47612 0 ]xsh
185.153 462.108 mo
(work=39936)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
185.883 463.333 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
185.6 448.534 mo
185.983 450.832 186.749 455.428 187.362 458.568 cv
@
187.132 458.492 mo
187.438 459.258 li
187.515 458.492 li
cp
@
187.132 458.492 mo
187.438 459.258 li
187.515 458.492 li
f
183.532 490.97 mo
183.532 490.209 181.645 489.591 179.319 489.591 cv
176.992 489.591 175.106 490.209 175.106 490.97 cv
175.106 491.731 176.992 492.349 179.319 492.349 cv
181.645 492.349 183.532 491.731 183.532 490.97 cv
@
183.532 490.97 mo
183.532 490.209 181.645 489.591 179.319 489.591 cv
176.992 489.591 175.106 490.209 175.106 490.97 cv
175.106 491.731 176.992 492.349 179.319 492.349 cv
181.645 492.349 183.532 491.731 183.532 490.97 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
175.908 491.215 mo
(roundrobin\(2,2\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
183.532 496.792 mo
183.532 496.03 181.645 495.413 179.319 495.413 cv
176.992 495.413 175.106 496.03 175.106 496.792 cv
175.106 497.553 176.992 498.17 179.319 498.17 cv
181.645 498.17 183.532 497.553 183.532 496.792 cv
@
183.532 496.792 mo
183.532 496.03 181.645 495.413 179.319 495.413 cv
176.992 495.413 175.106 496.03 175.106 496.792 cv
175.106 497.553 176.992 498.17 179.319 498.17 cv
181.645 498.17 183.532 497.553 183.532 496.792 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
175.908 497.037 mo
(roundrobin\(1,3\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
179.319 492.349 mo
179.319 493.038 179.319 493.881 179.319 494.647 cv
@
179.165 494.647 mo
179.319 495.413 li
179.548 494.647 li
cp
@
179.165 494.647 mo
179.319 495.413 li
179.548 494.647 li
f
161.011 461.862 mo
161.011 459.958 157.616 458.415 153.428 458.415 cv
149.24 458.415 145.844 459.958 145.844 461.862 cv
145.844 463.766 149.24 465.309 153.428 465.309 cv
157.616 465.309 161.011 463.766 161.011 461.862 cv
@
161.011 461.862 mo
161.011 459.958 157.616 458.415 153.428 458.415 cv
149.24 458.415 145.844 459.958 145.844 461.862 cv
145.844 463.766 149.24 465.309 153.428 465.309 cv
157.616 465.309 161.011 463.766 161.011 461.862 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
147.352 460.269 mo
(CFARNoiseLevelMeanCalc)
[.715286 .596252 .774261 .715271 .774261 .536194 .298126 .41716 .476135 .655228 .47612 .536209 
.47612 .298126 .953369 .47612 .476135 .536194 .715286 .476135 .298126 0 ]xsh
150.683 461.495 mo
(work=21088)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
150.877 462.72 mo
(I/O: 104->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 0 ]xsh
148.87 463.946 mo
(*** STATEFUL ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .774246 .655228 .655228 .596252 .774261 .655228 
.268097 .536209 .536194 0 ]xsh
168.748 454.891 mo
166.603 455.274 164.075 455.887 162.467 456.5 cv
161.318 456.96 159.709 457.879 158.254 458.721 cv
@
158.33 458.415 mo
157.794 459.028 li
158.56 458.798 li
cp
@
158.33 458.415 mo
157.794 459.028 li
158.56 458.798 li
f
180.008 461.862 mo
180.008 459.958 176.613 458.415 172.425 458.415 cv
168.236 458.415 164.841 459.958 164.841 461.862 cv
164.841 463.766 168.236 465.309 172.425 465.309 cv
176.613 465.309 180.008 463.766 180.008 461.862 cv
@
180.008 461.862 mo
180.008 459.958 176.613 458.415 172.425 458.415 cv
168.236 458.415 164.841 459.958 164.841 461.862 cv
164.841 463.766 168.236 465.309 172.425 465.309 cv
176.613 465.309 180.008 463.766 180.008 461.862 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
166.349 460.269 mo
(CFARNoiseLevelMeanCalc)
[.715286 .596252 .774261 .715271 .774261 .536194 .298126 .41716 .476135 .655228 .47612 .536209 
.47612 .298126 .953369 .47612 .476135 .536194 .715286 .476135 .298126 0 ]xsh
169.68 461.495 mo
(work=21088)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
169.874 462.72 mo
(I/O: 104->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 0 ]xsh
167.867 463.946 mo
(*** STATEFUL ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .774246 .655228 .655228 .596252 .774261 .655228 
.268097 .536209 .536194 0 ]xsh
172.425 455.581 mo
172.425 456.117 172.425 456.806 172.425 457.496 cv
@
172.271 457.572 mo
172.425 458.338 li
172.654 457.572 li
cp
@
172.271 457.572 mo
172.425 458.338 li
172.654 457.572 li
f
176.638 477.488 mo
176.638 476.727 174.751 476.11 172.425 476.11 cv
170.098 476.11 168.212 476.727 168.212 477.488 cv
168.212 478.25 170.098 478.867 172.425 478.867 cv
174.751 478.867 176.638 478.25 176.638 477.488 cv
@
176.638 477.488 mo
176.638 476.727 174.751 476.11 172.425 476.11 cv
170.098 476.11 168.212 476.727 168.212 477.488 cv
168.212 478.25 170.098 478.867 172.425 478.867 cv
174.751 478.867 176.638 478.25 176.638 477.488 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
169.014 477.734 mo
(roundrobin\(1,1\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
181.157 484.229 mo
181.157 482.791 177.796 481.625 173.65 481.625 cv
169.504 481.625 166.143 482.791 166.143 484.229 cv
166.143 485.668 169.504 486.834 173.65 486.834 cv
177.796 486.834 181.157 485.668 181.157 484.229 cv
@
181.157 484.229 mo
181.157 482.791 177.796 481.625 173.65 481.625 cv
169.504 481.625 166.143 482.791 166.143 484.229 cv
166.143 485.668 169.504 486.834 173.65 486.834 cv
177.796 486.834 181.157 485.668 181.157 484.229 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
167.455 483.249 mo
(CFARNoiseLevelGuardFirst)
[.715286 .596252 .774261 .715271 .774261 .536194 .298126 .41716 .476135 .655228 .47612 .536209 
.47612 .298126 .774261 .536209 .47612 .357101 .536209 .596252 .298126 .357101 .417145 0 
]xsh
170.906 484.475 mo
(work=26630)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
170.831 485.7 mo
(I/O: 2->6656)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 .536209 .536194 .536209 0 
]xsh
172.654 478.867 mo
172.808 479.48 172.884 480.323 173.037 481.089 cv
@
172.808 480.935 mo
173.191 481.625 li
173.191 480.859 li
cp
@
172.808 480.935 mo
173.191 481.625 li
173.191 480.859 li
f
161.624 470.748 mo
161.624 469.309 157.68 468.143 152.815 468.143 cv
147.95 468.143 144.006 469.309 144.006 470.748 cv
144.006 472.186 147.95 473.352 152.815 473.352 cv
157.68 473.352 161.624 472.186 161.624 470.748 cv
@
161.624 470.748 mo
161.624 469.309 157.68 468.143 152.815 468.143 cv
147.95 468.143 144.006 469.309 144.006 470.748 cv
144.006 472.186 147.95 473.352 152.815 473.352 cv
157.68 473.352 161.624 472.186 161.624 470.748 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
145.28 469.767 mo
(CFARNoiseLevelMeanCalcGather)
[.715286 .596252 .774261 .715271 .774261 .536194 .298126 .41716 .476135 .655228 .47612 .536209 
.47612 .298126 .953369 .47612 .476135 .536194 .715286 .476135 .298126 .47612 .774261 .476135 
.298126 .536194 .476135 0 ]xsh
150.606 470.993 mo
(work=259)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 0 ]xsh
150.532 472.218 mo
(I/O: 32->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 0 ]xsh
153.198 465.386 mo
153.121 466.075 153.121 466.764 153.045 467.377 cv
@
152.892 467.377 mo
153.045 468.143 li
153.275 467.377 li
cp
@
152.892 467.377 mo
153.045 468.143 li
153.275 467.377 li
f
158.56 472.739 mo
161.93 473.888 165.99 475.267 168.901 476.263 cv
@
168.748 476.416 mo
169.514 476.493 li
168.901 476.033 li
cp
@
168.748 476.416 mo
169.514 476.493 li
168.901 476.033 li
f
181.234 470.748 mo
181.234 469.309 177.29 468.143 172.425 468.143 cv
167.56 468.143 163.616 469.309 163.616 470.748 cv
163.616 472.186 167.56 473.352 172.425 473.352 cv
177.29 473.352 181.234 472.186 181.234 470.748 cv
@
181.234 470.748 mo
181.234 469.309 177.29 468.143 172.425 468.143 cv
167.56 468.143 163.616 469.309 163.616 470.748 cv
163.616 472.186 167.56 473.352 172.425 473.352 cv
177.29 473.352 181.234 472.186 181.234 470.748 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
164.89 469.767 mo
(CFARNoiseLevelMeanCalcGather)
[.715286 .596252 .774261 .715271 .774261 .536194 .298126 .41716 .476135 .655228 .47612 .536209 
.47612 .298126 .953369 .47612 .476135 .536194 .715286 .476135 .298126 .47612 .774261 .476135 
.298126 .536194 .476135 0 ]xsh
170.216 470.993 mo
(work=259)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 0 ]xsh
170.142 472.218 mo
(I/O: 32->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .357101 .604828 0 ]xsh
172.425 465.386 mo
172.425 466.075 172.425 466.764 172.425 467.377 cv
@
172.271 467.377 mo
172.425 468.143 li
172.654 467.377 li
cp
@
172.271 467.377 mo
172.425 468.143 li
172.654 467.377 li
f
172.425 473.352 mo
172.425 474.041 172.425 474.731 172.425 475.42 cv
@
172.271 475.344 mo
172.425 476.11 li
172.654 475.344 li
cp
@
172.271 475.344 mo
172.425 476.11 li
172.654 475.344 li
f
175.795 486.757 mo
176.484 487.523 177.097 488.366 177.71 489.055 cv
@
177.557 489.132 mo
178.17 489.591 li
177.787 488.902 li
cp
@
177.557 489.132 mo
178.17 489.591 li
177.787 488.902 li
f
187.745 464.466 mo
187.438 469.675 186.672 481.242 184.834 487.446 cv
184.604 488.212 183.685 488.978 182.689 489.515 cv
@
182.612 489.361 mo
182 489.898 li
182.766 489.668 li
cp
@
182.612 489.361 mo
182 489.898 li
182.766 489.668 li
f
146.993 511.499 mo
146.993 510.06 145.141 508.894 142.857 508.894 cv
140.573 508.894 138.721 510.06 138.721 511.499 cv
138.721 512.937 140.573 514.103 142.857 514.103 cv
145.141 514.103 146.993 512.937 146.993 511.499 cv
@
146.993 511.499 mo
146.993 510.06 145.141 508.894 142.857 508.894 cv
140.573 508.894 138.721 510.06 138.721 511.499 cv
138.721 512.937 140.573 514.103 142.857 514.103 cv
145.141 514.103 146.993 512.937 146.993 511.499 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
139.997 510.518 mo
(CFARPusher)
[.715286 .596252 .774261 .715271 .596252 .536209 .41716 .536194 .476135 0 ]xsh
140.112 511.744 mo
(work=19968)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
140.842 512.969 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
175.106 496.868 mo
166.909 497.021 149.291 497.481 145.308 499.09 cv
142.704 500.085 142.474 504.911 142.627 508.205 cv
@
142.474 508.128 mo
142.627 508.894 li
142.857 508.128 li
cp
@
142.474 508.128 mo
142.627 508.894 li
142.857 508.128 li
f
186.979 503.532 mo
186.979 502.094 183.926 500.928 180.161 500.928 cv
176.396 500.928 173.344 502.094 173.344 503.532 cv
173.344 504.971 176.396 506.137 180.161 506.137 cv
183.926 506.137 186.979 504.971 186.979 503.532 cv
@
186.979 503.532 mo
186.979 502.094 183.926 500.928 180.161 500.928 cv
176.396 500.928 173.344 502.094 173.344 503.532 cv
173.344 504.971 176.396 506.137 180.161 506.137 cv
183.926 506.137 186.979 504.971 186.979 503.532 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
174.59 502.552 mo
(CFARSumReplicateFilter)
[.715286 .596252 .774261 .715271 .596252 .536209 .83432 .715286 .476135 .536194 .298126 .298126 
.476135 .47612 .298126 .476135 .596252 .298126 .298126 .298126 .476135 0 ]xsh
177.416 503.778 mo
(work=79872)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
178.146 505.003 mo
(I/O: 3->5)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
179.472 498.17 mo
179.625 498.783 179.702 499.626 179.778 500.392 cv
@
179.548 500.162 mo
179.855 500.928 li
179.931 500.162 li
cp
@
179.548 500.162 mo
179.855 500.928 li
179.931 500.162 li
f
169.897 581.052 mo
169.897 580.29 168.011 579.673 165.684 579.673 cv
163.357 579.673 161.471 580.29 161.471 581.052 cv
161.471 581.813 163.357 582.43 165.684 582.43 cv
168.011 582.43 169.897 581.813 169.897 581.052 cv
@
169.897 581.052 mo
169.897 580.29 168.011 579.673 165.684 579.673 cv
163.357 579.673 161.471 580.29 161.471 581.052 cv
161.471 581.813 163.357 582.43 165.684 582.43 cv
168.011 582.43 169.897 581.813 169.897 581.052 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
162.274 581.297 mo
(roundrobin\(1,4\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
171.046 586.873 mo
171.046 586.112 168.645 585.494 165.684 585.494 cv
162.722 585.494 160.322 586.112 160.322 586.873 cv
160.322 587.635 162.722 588.252 165.684 588.252 cv
168.645 588.252 171.046 587.635 171.046 586.873 cv
@
171.046 586.873 mo
171.046 586.112 168.645 585.494 165.684 585.494 cv
162.722 585.494 160.322 586.112 160.322 586.873 cv
160.322 587.635 162.722 588.252 165.684 588.252 cv
168.645 588.252 171.046 587.635 171.046 586.873 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
161.067 587.118 mo
(roundrobin\(1,1,1,1,1\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 .268097 .536194 .268112 .536194 .268097 .536209 0 ]xsh
165.684 582.43 mo
165.684 583.12 165.684 583.962 165.684 584.728 cv
@
165.531 584.728 mo
165.684 585.494 li
165.914 584.728 li
cp
@
165.531 584.728 mo
165.684 585.494 li
165.914 584.728 li
f
143.24 514.103 mo
143.853 518.01 144.772 525.287 144.849 529.576 cv
144.849 529.576 144.849 529.576 144.849 568.796 cv
144.772 572.013 143.776 576.609 146.534 578.141 cv
148.296 579.213 155.879 580.132 160.935 580.592 cv
@
160.858 580.745 mo
161.624 580.669 li
160.858 580.362 li
cp
@
160.858 580.745 mo
161.624 580.669 li
160.858 580.362 li
f
187.591 511.499 mo
187.591 510.737 185.534 510.12 182.995 510.12 cv
180.457 510.12 178.399 510.737 178.399 511.499 cv
178.399 512.26 180.457 512.878 182.995 512.878 cv
185.534 512.878 187.591 512.26 187.591 511.499 cv
@
187.591 511.499 mo
187.591 510.737 185.534 510.12 182.995 510.12 cv
180.457 510.12 178.399 510.737 178.399 511.499 cv
178.399 512.26 180.457 512.878 182.995 512.878 cv
185.534 512.878 187.591 512.26 187.591 511.499 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
179.183 511.744 mo
(roundrobin\(2,1,2\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 .268097 .536194 0 ]xsh
181.08 506.137 mo
181.463 507.209 181.923 508.435 182.306 509.431 cv
@
182.076 509.431 mo
182.536 510.12 li
182.459 509.354 li
cp
@
182.076 509.431 mo
182.536 510.12 li
182.459 509.354 li
f
171.352 520.384 mo
171.352 519.623 169.466 519.006 167.139 519.006 cv
164.812 519.006 162.926 519.623 162.926 520.384 cv
162.926 521.146 164.812 521.763 167.139 521.763 cv
169.466 521.763 171.352 521.146 171.352 520.384 cv
@
171.352 520.384 mo
171.352 519.623 169.466 519.006 167.139 519.006 cv
164.812 519.006 162.926 519.623 162.926 520.384 cv
162.926 521.146 164.812 521.763 167.139 521.763 cv
169.466 521.763 171.352 521.146 171.352 520.384 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
163.729 520.63 mo
(roundrobin\(1,1\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
181.004 512.724 mo
180.161 513.261 179.242 513.797 178.629 514.103 cv
177.94 514.486 177.174 514.716 176.561 515.022 cv
174.799 516.018 171.965 517.55 169.897 518.776 cv
@
169.82 518.623 mo
169.207 519.159 li
169.973 518.929 li
cp
@
169.82 518.623 mo
169.207 519.159 li
169.973 518.929 li
f
189.966 520.384 mo
189.966 518.481 187.222 516.937 183.838 516.937 cv
180.454 516.937 177.71 518.481 177.71 520.384 cv
177.71 522.288 180.454 523.831 183.838 523.831 cv
187.222 523.831 189.966 522.288 189.966 520.384 cv
@
189.966 520.384 mo
189.966 518.481 187.222 516.937 183.838 516.937 cv
180.454 516.937 177.71 518.481 177.71 520.384 cv
177.71 522.288 180.454 523.831 183.838 523.831 cv
187.222 523.831 189.966 522.288 189.966 520.384 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
181.545 518.791 mo
(LMaxCalc)
[.655228 .953354 .476135 .536194 .715286 .476135 .298126 0 ]xsh
180.825 520.016 mo
(work=312384)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
180.751 521.242 mo
(I/O: 104->104)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
179.281 522.468 mo
(*** STATEFUL ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .774246 .655228 .655228 .596252 .774261 .655228 
.268097 .536209 .536194 0 ]xsh
183.149 512.878 mo
183.225 513.797 183.378 515.099 183.455 516.325 cv
@
183.225 516.095 mo
183.532 516.861 li
183.608 516.095 li
cp
@
183.225 516.095 mo
183.532 516.861 li
183.608 516.095 li
f
190.272 529.576 mo
190.272 528.138 188.42 526.972 186.136 526.972 cv
183.852 526.972 182 528.138 182 529.576 cv
182 531.015 183.852 532.181 186.136 532.181 cv
188.42 532.181 190.272 531.015 190.272 529.576 cv
@
190.272 529.576 mo
190.272 528.138 188.42 526.972 186.136 526.972 cv
183.852 526.972 182 528.138 182 529.576 cv
182 531.015 183.852 532.181 186.136 532.181 cv
188.42 532.181 190.272 531.015 190.272 529.576 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
183.276 528.596 mo
(CFARPusher)
[.715286 .596252 .774261 .715271 .596252 .536209 .417145 .536209 .47612 0 ]xsh
183.391 529.821 mo
(work=39936)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
184.121 531.047 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
186.596 512.341 mo
188.357 512.954 190.349 513.797 191.115 515.022 cv
192.724 517.78 192.111 521.533 191.115 524.521 cv
190.885 525.363 190.043 526.283 189.123 527.125 cv
@
189.123 526.819 mo
188.74 527.508 li
189.43 527.125 li
cp
@
189.123 526.819 mo
188.74 527.508 li
189.43 527.125 li
f
178.476 575.536 mo
178.476 574.775 176.418 574.158 173.88 574.158 cv
171.342 574.158 169.284 574.775 169.284 575.536 cv
169.284 576.298 171.342 576.915 173.88 576.915 cv
176.418 576.915 178.476 576.298 178.476 575.536 cv
@
178.476 575.536 mo
178.476 574.775 176.418 574.158 173.88 574.158 cv
171.342 574.158 169.284 574.775 169.284 575.536 cv
169.284 576.298 171.342 576.915 173.88 576.915 cv
176.418 576.915 178.476 576.298 178.476 575.536 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
170.068 575.782 mo
(roundrobin\(1,1,2\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 .268097 .536194 0 ]xsh
171.965 576.839 mo
170.816 577.605 169.361 578.6 168.135 579.443 cv
@
168.058 579.29 mo
167.522 579.826 li
168.288 579.596 li
cp
@
168.058 579.29 mo
167.522 579.826 li
168.288 579.596 li
f
158.407 538.462 mo
158.407 537.024 156.555 535.858 154.27 535.858 cv
151.986 535.858 150.134 537.024 150.134 538.462 cv
150.134 539.9 151.986 541.066 154.27 541.066 cv
156.555 541.066 158.407 539.9 158.407 538.462 cv
@
158.407 538.462 mo
158.407 537.024 156.555 535.858 154.27 535.858 cv
151.986 535.858 150.134 537.024 150.134 538.462 cv
150.134 539.9 151.986 541.066 154.27 541.066 cv
156.555 541.066 158.407 539.9 158.407 538.462 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
151.41 537.482 mo
(CFARPusher)
[.715286 .596252 .774261 .715271 .596252 .536209 .417145 .536209 .47612 0 ]xsh
151.525 538.708 mo
(work=19968)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
152.255 539.933 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
166.067 521.763 mo
165.224 522.759 164.075 523.985 163.156 524.521 cv
161.777 525.287 159.632 524.061 158.637 525.134 cv
156.951 527.049 157.181 529.883 156.492 532.181 cv
156.185 532.947 155.802 534.096 155.419 535.168 cv
@
155.19 535.168 mo
155.19 535.934 li
155.573 535.245 li
cp
@
155.19 535.168 mo
155.19 535.934 li
155.573 535.245 li
f
173.497 529.576 mo
173.497 528.138 170.65 526.972 167.139 526.972 cv
163.628 526.972 160.781 528.138 160.781 529.576 cv
160.781 531.015 163.628 532.181 167.139 532.181 cv
170.65 532.181 173.497 531.015 173.497 529.576 cv
@
173.497 529.576 mo
173.497 528.138 170.65 526.972 167.139 526.972 cv
163.628 526.972 160.781 528.138 160.781 529.576 cv
160.781 531.015 163.628 532.181 167.139 532.181 cv
170.65 532.181 173.497 531.015 173.497 529.576 cv
.271 .467 .702 rgb
f
0 gry
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LTFDSI+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/z <1C60D8A8C9B77FE284EFEC4CF0FCC63CDEB1624F39F402FFE3D4A95D1F81
2924519B69F6054956BEDD472A0597A54C3034FF3538C85678A4E4FE466B514C
141F526BEAADD3E6242801DF59EF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LTFDSI+TimesNewRomanPSMT /Encoding get
dup 122 /z put
pop
%ADOEndSubsetFont
reset_gvm
/LTFDSI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
/greater 2{/.notdef}rp /A /B /C /D /E /F 
/G /H /I /.notdef /K /L /M /N 
/O /P /.notdef /R /S /T /U /V 
/W 2{/.notdef}rp /Z 6{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /x /y /z 133{/.notdef}rp]
LTFDSI+TimesNewRomanPSMT nf
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
162.076 528.596 mo
(CFARTreshReorganize)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .715286 .47612 .536209 
.357101 .536194 .476135 .536194 .298126 .476135 0 ]xsh
164.394 529.821 mo
(work=35520)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
164.052 531.047 mo
(I/O: 104->139)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
167.139 521.763 mo
167.139 522.912 167.139 524.674 167.139 526.206 cv
@
166.986 526.206 mo
167.139 526.972 li
167.369 526.206 li
cp
@
166.986 526.206 mo
167.139 526.972 li
167.369 526.206 li
f
171.352 562.055 mo
171.352 561.293 169.466 560.676 167.139 560.676 cv
164.812 560.676 162.926 561.293 162.926 562.055 cv
162.926 562.816 164.812 563.434 167.139 563.434 cv
169.466 563.434 171.352 562.816 171.352 562.055 cv
@
171.352 562.055 mo
171.352 561.293 169.466 560.676 167.139 560.676 cv
164.812 560.676 162.926 561.293 162.926 562.055 cv
162.926 562.816 164.812 563.434 167.139 563.434 cv
169.466 563.434 171.352 562.816 171.352 562.055 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
163.729 562.3 mo
(roundrobin\(1,1\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 0 ]xsh
173.957 568.796 mo
173.957 567.357 171.693 566.191 168.901 566.191 cv
166.109 566.191 163.845 567.357 163.845 568.796 cv
163.845 570.234 166.109 571.4 168.901 571.4 cv
171.693 571.4 173.957 570.234 173.957 568.796 cv
@
173.957 568.796 mo
173.957 567.357 171.693 566.191 168.901 566.191 cv
166.109 566.191 163.845 567.357 163.845 568.796 cv
163.845 570.234 166.109 571.4 168.901 571.4 cv
171.693 571.4 173.957 570.234 173.957 568.796 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
165.118 567.815 mo
(CFARTreshFilter)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .596252 .298126 .298126 
.298126 .476135 0 ]xsh
166.157 569.041 mo
(work=53248)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
166.886 570.266 mo
(I/O: 2->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
167.522 563.434 mo
167.675 564.046 167.905 564.889 168.058 565.655 cv
@
167.829 565.502 mo
168.212 566.191 li
168.212 565.425 li
cp
@
167.829 565.502 mo
168.212 566.191 li
168.212 565.425 li
f
155.266 540.99 mo
155.726 542.292 156.262 543.747 156.492 544.743 cv
157.411 549.339 156.185 554.625 158.637 558.531 cv
158.866 558.914 161.471 559.91 163.692 560.829 cv
@
163.539 560.982 mo
164.305 561.059 li
163.692 560.599 li
cp
@
163.539 560.982 mo
164.305 561.059 li
163.692 560.599 li
f
174.493 538.462 mo
174.493 536.558 171.2 535.015 167.139 535.015 cv
163.078 535.015 159.786 536.558 159.786 538.462 cv
159.786 540.366 163.078 541.909 167.139 541.909 cv
171.2 541.909 174.493 540.366 174.493 538.462 cv
@
174.493 538.462 mo
174.493 536.558 171.2 535.015 167.139 535.015 cv
163.078 535.015 159.786 536.558 159.786 538.462 cv
159.786 540.366 163.078 541.909 167.139 541.909 cv
171.2 541.909 174.493 540.366 174.493 538.462 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
161.33 536.869 mo
(CFARTreshCumSumFilter)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .715286 .536194 .834335 
.596252 .536194 .834335 .596252 .298126 .298126 .298126 .476135 0 ]xsh
164.127 538.095 mo
(work=102304)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
165.125 539.32 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
162.582 540.546 mo
(*** STATEFUL ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .774246 .655228 .655228 .596252 .774261 .655228 
.268097 .536209 .536194 0 ]xsh
167.139 532.181 mo
167.139 532.794 167.139 533.483 167.139 534.172 cv
@
166.986 534.172 mo
167.139 534.938 li
167.369 534.172 li
cp
@
166.986 534.172 mo
167.139 534.938 li
167.369 534.172 li
f
173.037 547.348 mo
173.037 545.909 170.397 544.743 167.139 544.743 cv
163.882 544.743 161.241 545.909 161.241 547.348 cv
161.241 548.786 163.882 549.952 167.139 549.952 cv
170.397 549.952 173.037 548.786 173.037 547.348 cv
@
173.037 547.348 mo
173.037 545.909 170.397 544.743 167.139 544.743 cv
163.882 544.743 161.241 545.909 161.241 547.348 cv
161.241 548.786 163.882 549.952 167.139 549.952 cv
170.397 549.952 173.037 548.786 173.037 547.348 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
162.522 546.367 mo
(CFARTreshSubFilter)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .596252 .536209 .536194 
.596252 .298126 .298126 .298126 .476135 0 ]xsh
164.127 547.593 mo
(work=179680)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
164.052 548.818 mo
(I/O: 139->123)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
167.139 541.986 mo
167.139 542.675 167.139 543.364 167.139 543.977 cv
@
166.986 543.977 mo
167.139 544.743 li
167.369 543.977 li
cp
@
166.986 543.977 mo
167.139 544.743 li
167.369 543.977 li
f
173.191 555.314 mo
173.191 553.876 170.481 552.71 167.139 552.71 cv
163.797 552.71 161.088 553.876 161.088 555.314 cv
161.088 556.752 163.797 557.918 167.139 557.918 cv
170.481 557.918 173.191 556.752 173.191 555.314 cv
@
173.191 555.314 mo
173.191 553.876 170.481 552.71 167.139 552.71 cv
163.797 552.71 161.088 553.876 161.088 555.314 cv
161.088 556.752 163.797 557.918 167.139 557.918 cv
170.481 557.918 173.191 556.752 173.191 555.314 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
162.373 554.334 mo
(CFARTreshMaxFilter)
[.715286 .596252 .774261 .715271 .655228 .357101 .476135 .41716 .536194 .953354 .476135 .536194 
.596252 .298126 .298126 .298126 .476135 0 ]xsh
164.394 555.56 mo
(work=46304)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
164.052 556.785 mo
(I/O: 123->104)
[.357101 .298126 .774261 .298126 .268097 .536194 .536209 .536194 .357101 .604828 .536209 .536194 
0 ]xsh
167.139 549.952 mo
167.139 550.565 167.139 551.254 167.139 551.944 cv
@
166.986 551.944 mo
167.139 552.71 li
167.369 551.944 li
cp
@
166.986 551.944 mo
167.139 552.71 li
167.369 551.944 li
f
167.139 557.918 mo
167.139 558.608 167.139 559.297 167.139 559.987 cv
@
166.986 559.91 mo
167.139 560.676 li
167.369 559.91 li
cp
@
166.986 559.91 mo
167.139 560.676 li
167.369 559.91 li
f
170.739 571.247 mo
171.276 572.013 171.888 572.855 172.501 573.621 cv
@
172.271 573.621 mo
172.884 574.158 li
172.578 573.392 li
cp
@
172.271 573.621 mo
172.884 574.158 li
172.578 573.392 li
f
181.693 523.678 mo
181.387 524.138 181.157 524.674 181.08 525.134 cv
180.008 529.5 179.319 534.019 179.395 538.462 cv
179.395 538.462 179.395 538.462 179.395 562.055 cv
179.319 565.425 179.319 568.949 178.093 572.013 cv
177.863 572.396 177.021 573.162 176.101 573.851 cv
@
176.101 573.621 mo
175.642 574.234 li
176.331 573.928 li
cp
@
176.101 573.621 mo
175.642 574.234 li
176.331 573.928 li
f
185.6 532.181 mo
184.834 536.011 183.455 543.135 183.532 547.348 cv
183.532 547.348 183.532 547.348 183.532 562.055 cv
183.455 565.578 182 569.179 180.008 572.013 cv
179.472 572.779 178.399 573.468 177.327 574.004 cv
@
177.25 573.851 mo
176.638 574.387 li
177.404 574.158 li
cp
@
177.25 573.851 mo
176.638 574.387 li
177.404 574.158 li
f
150.977 593.614 mo
150.977 592.176 149.193 591.01 146.993 591.01 cv
144.794 591.01 143.01 592.176 143.01 593.614 cv
143.01 595.052 144.794 596.218 146.993 596.218 cv
149.193 596.218 150.977 595.052 150.977 593.614 cv
@
150.977 593.614 mo
150.977 592.176 149.193 591.01 146.993 591.01 cv
144.794 591.01 143.01 592.176 143.01 593.614 cv
143.01 595.052 144.794 596.218 146.993 596.218 cv
149.193 596.218 150.977 595.052 150.977 593.614 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
145.713 592.633 mo
(Delay)
[.774261 .47612 .298126 .476135 0 ]xsh
144.249 593.859 mo
(work=19968)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
144.978 595.085 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
161.93 587.869 mo
158.713 588.788 154.194 590.014 151.436 591.01 cv
151.206 591.086 150.9 591.239 150.594 591.393 cv
@
150.44 591.239 mo
149.828 591.776 li
150.594 591.622 li
cp
@
150.44 591.239 mo
149.828 591.776 li
150.594 591.622 li
f
160.322 593.614 mo
160.322 592.176 158.538 591.01 156.339 591.01 cv
154.139 591.01 152.355 592.176 152.355 593.614 cv
152.355 595.052 154.139 596.218 156.339 596.218 cv
158.538 596.218 160.322 595.052 160.322 593.614 cv
@
160.322 593.614 mo
160.322 592.176 158.538 591.01 156.339 591.01 cv
154.139 591.01 152.355 592.176 152.355 593.614 cv
152.355 595.052 154.139 596.218 156.339 596.218 cv
158.538 596.218 160.322 595.052 160.322 593.614 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
155.058 592.633 mo
(Delay)
[.774261 .47612 .298126 .476135 0 ]xsh
153.594 593.859 mo
(work=19968)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
154.323 595.085 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
163.845 588.175 mo
162.62 589.018 161.088 590.167 159.632 591.239 cv
@
159.556 591.086 mo
159.02 591.699 li
159.786 591.393 li
cp
@
159.556 591.086 mo
159.02 591.699 li
159.786 591.393 li
f
169.667 593.614 mo
169.667 592.176 167.884 591.01 165.684 591.01 cv
163.484 591.01 161.701 592.176 161.701 593.614 cv
161.701 595.052 163.484 596.218 165.684 596.218 cv
167.884 596.218 169.667 595.052 169.667 593.614 cv
@
169.667 593.614 mo
169.667 592.176 167.884 591.01 165.684 591.01 cv
163.484 591.01 161.701 592.176 161.701 593.614 cv
161.701 595.052 163.484 596.218 165.684 596.218 cv
167.884 596.218 169.667 595.052 169.667 593.614 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
164.016 592.633 mo
(Identity)
[.357101 .536194 .476135 .536194 .298126 .298141 .298126 0 ]xsh
162.939 593.859 mo
(work=19968)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
163.669 595.085 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.684 588.252 mo
165.684 588.788 165.684 589.554 165.684 590.244 cv
@
165.531 590.244 mo
165.684 591.01 li
165.914 590.244 li
cp
@
165.531 590.244 mo
165.684 591.01 li
165.914 590.244 li
f
179.012 593.614 mo
179.012 592.176 177.229 591.01 175.029 591.01 cv
172.829 591.01 171.046 592.176 171.046 593.614 cv
171.046 595.052 172.829 596.218 175.029 596.218 cv
177.229 596.218 179.012 595.052 179.012 593.614 cv
@
179.012 593.614 mo
179.012 592.176 177.229 591.01 175.029 591.01 cv
172.829 591.01 171.046 592.176 171.046 593.614 cv
171.046 595.052 172.829 596.218 175.029 596.218 cv
177.229 596.218 179.012 595.052 179.012 593.614 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
173.749 592.633 mo
(Delay)
[.774261 .47612 .298126 .476135 0 ]xsh
172.285 593.859 mo
(work=19968)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
173.014 595.085 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
167.522 588.175 mo
168.748 589.095 170.433 590.32 171.965 591.393 cv
@
171.659 591.393 mo
172.348 591.699 li
171.888 591.086 li
cp
@
171.659 591.393 mo
172.348 591.699 li
171.888 591.086 li
f
188.357 593.614 mo
188.357 592.176 186.574 591.01 184.374 591.01 cv
182.174 591.01 180.391 592.176 180.391 593.614 cv
180.391 595.052 182.174 596.218 184.374 596.218 cv
186.574 596.218 188.357 595.052 188.357 593.614 cv
@
188.357 593.614 mo
188.357 592.176 186.574 591.01 184.374 591.01 cv
182.174 591.01 180.391 592.176 180.391 593.614 cv
180.391 595.052 182.174 596.218 184.374 596.218 cv
186.574 596.218 188.357 595.052 188.357 593.614 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
183.094 592.633 mo
(Delay)
[.774261 .47612 .298126 .476135 0 ]xsh
181.63 593.859 mo
(work=19968)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
182.359 595.085 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
169.361 587.869 mo
172.578 588.788 177.174 590.014 179.931 591.01 cv
180.238 591.086 180.621 591.316 181.004 591.546 cv
@
180.774 591.622 mo
181.54 591.776 li
180.927 591.316 li
cp
@
180.774 591.622 mo
181.54 591.776 li
180.927 591.316 li
f
171.046 600.355 mo
171.046 599.593 168.645 598.976 165.684 598.976 cv
162.722 598.976 160.322 599.593 160.322 600.355 cv
160.322 601.116 162.722 601.734 165.684 601.734 cv
168.645 601.734 171.046 601.116 171.046 600.355 cv
@
171.046 600.355 mo
171.046 599.593 168.645 598.976 165.684 598.976 cv
162.722 598.976 160.322 599.593 160.322 600.355 cv
160.322 601.116 162.722 601.734 165.684 601.734 cv
168.645 601.734 171.046 601.116 171.046 600.355 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
161.067 600.6 mo
(roundrobin\(1,1,1,1,1\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 .268097 .536194 .268112 .536194 .268097 .536209 0 ]xsh
171.965 607.402 mo
171.965 605.964 169.153 604.798 165.684 604.798 cv
162.215 604.798 159.403 605.964 159.403 607.402 cv
159.403 608.84 162.215 610.006 165.684 610.006 cv
169.153 610.006 171.965 608.84 171.965 607.402 cv
@
171.965 607.402 mo
171.965 605.964 169.153 604.798 165.684 604.798 cv
162.215 604.798 159.403 605.964 159.403 607.402 cv
159.403 608.84 162.215 610.006 165.684 610.006 cv
169.153 610.006 171.965 608.84 171.965 607.402 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
160.681 606.421 mo
(CFARDetectRearrange)
[.715286 .596252 .774261 .715271 .774261 .476135 .298126 .47612 .476135 .298126 .715286 .47612 
.476135 .357101 .357101 .476135 .536194 .536194 0 ]xsh
162.939 607.647 mo
(work=99840)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
163.669 608.873 mo
(I/O: 5->5)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.684 601.734 mo
165.684 602.346 165.684 603.189 165.684 603.955 cv
@
165.531 604.032 mo
165.684 604.798 li
165.914 604.032 li
cp
@
165.531 604.032 mo
165.684 604.798 li
165.914 604.032 li
f
149.828 595.452 mo
150.364 595.759 150.977 596.065 151.436 596.218 cv
154.041 597.138 158.1 598.363 161.241 599.206 cv
@
161.164 599.359 mo
161.93 599.359 li
161.241 598.976 li
cp
@
161.164 599.359 mo
161.93 599.359 li
161.241 598.976 li
f
159.02 595.529 mo
160.322 596.525 162.007 597.674 163.309 598.67 cv
@
163.079 598.746 mo
163.845 599.053 li
163.309 598.44 li
cp
@
163.079 598.746 mo
163.845 599.053 li
163.309 598.44 li
f
165.684 596.218 mo
165.684 596.908 165.684 597.597 165.684 598.287 cv
@
165.531 598.21 mo
165.684 598.976 li
165.914 598.21 li
cp
@
165.531 598.21 mo
165.684 598.976 li
165.914 598.21 li
f
172.348 595.529 mo
171.046 596.525 169.361 597.674 168.058 598.67 cv
@
168.058 598.44 mo
167.522 599.053 li
168.288 598.746 li
cp
@
168.058 598.44 mo
167.522 599.053 li
168.288 598.746 li
f
181.54 595.452 mo
180.927 595.759 180.391 596.065 179.931 596.218 cv
177.327 597.138 173.267 598.363 170.127 599.206 cv
@
170.127 598.976 mo
169.437 599.359 li
170.203 599.359 li
cp
@
170.127 598.976 mo
169.437 599.359 li
170.203 599.359 li
f
170.28 614.143 mo
170.28 613.381 168.222 612.764 165.684 612.764 cv
163.146 612.764 161.088 613.381 161.088 614.143 cv
161.088 614.904 163.146 615.522 165.684 615.522 cv
168.222 615.522 170.28 614.904 170.28 614.143 cv
@
170.28 614.143 mo
170.28 613.381 168.222 612.764 165.684 612.764 cv
163.146 612.764 161.088 613.381 161.088 614.143 cv
161.088 614.904 163.146 615.522 165.684 615.522 cv
168.222 615.522 170.28 614.904 170.28 614.143 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
161.872 614.388 mo
(roundrobin\(2,2,1\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 .268097 .536194 0 ]xsh
165.684 610.006 mo
165.684 610.696 165.684 611.385 165.684 612.075 cv
@
165.531 611.998 mo
165.684 612.764 li
165.914 611.998 li
cp
@
165.531 611.998 mo
165.684 612.764 li
165.914 611.998 li
f
158.866 620.884 mo
158.866 619.445 156.603 618.279 153.811 618.279 cv
151.019 618.279 148.755 619.445 148.755 620.884 cv
148.755 622.322 151.019 623.488 153.811 623.488 cv
156.603 623.488 158.866 622.322 158.866 620.884 cv
@
158.866 620.884 mo
158.866 619.445 156.603 618.279 153.811 618.279 cv
151.019 618.279 148.755 619.445 148.755 620.884 cv
148.755 622.322 151.019 623.488 153.811 623.488 cv
156.603 623.488 158.866 622.322 158.866 620.884 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
150.027 619.903 mo
(CFARDetectSum)
[.715286 .596252 .774261 .715271 .774261 .476135 .298126 .47612 .476135 .298126 .596252 .536194 
0 ]xsh
151.066 621.129 mo
(work=36608)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
151.795 622.354 mo
(I/O: 2->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
163.539 615.368 mo
161.93 616.288 159.786 617.437 157.871 618.586 cv
@
157.794 618.432 mo
157.181 618.969 li
157.947 618.739 li
cp
@
157.794 618.432 mo
157.181 618.969 li
157.947 618.739 li
f
171.122 620.884 mo
171.122 619.445 168.687 618.279 165.684 618.279 cv
162.68 618.279 160.245 619.445 160.245 620.884 cv
160.245 622.322 162.68 623.488 165.684 623.488 cv
168.687 623.488 171.122 622.322 171.122 620.884 cv
@
171.122 620.884 mo
171.122 619.445 168.687 618.279 165.684 618.279 cv
162.68 618.279 160.245 619.445 160.245 620.884 cv
160.245 622.322 162.68 623.488 165.684 623.488 cv
168.687 623.488 171.122 622.322 171.122 620.884 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
161.544 619.903 mo
(CFARDetectGuard)
[.715286 .596252 .774261 .715271 .774261 .476135 .298126 .47612 .476135 .298126 .774261 .536194 
.476135 .357101 0 ]xsh
162.939 621.129 mo
(work=43264)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
163.669 622.354 mo
(I/O: 2->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.684 615.522 mo
165.684 616.058 165.684 616.824 165.684 617.513 cv
@
165.531 617.513 mo
165.684 618.279 li
165.914 617.513 li
cp
@
165.531 617.513 mo
165.684 618.279 li
165.914 617.513 li
f
180.774 620.884 mo
180.774 619.445 178.922 618.279 176.638 618.279 cv
174.353 618.279 172.501 619.445 172.501 620.884 cv
172.501 622.322 174.353 623.488 176.638 623.488 cv
178.922 623.488 180.774 622.322 180.774 620.884 cv
@
180.774 620.884 mo
180.774 619.445 178.922 618.279 176.638 618.279 cv
174.353 618.279 172.501 619.445 172.501 620.884 cv
172.501 622.322 174.353 623.488 176.638 623.488 cv
178.922 623.488 180.774 622.322 180.774 620.884 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
173.778 619.903 mo
(CFARPusher)
[.715286 .596252 .774261 .715271 .596252 .536209 .41716 .536194 .476135 0 ]xsh
173.893 621.129 mo
(work=19968)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
174.623 622.354 mo
(I/O: 1->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
167.752 615.368 mo
169.284 616.364 171.429 617.666 173.267 618.815 cv
@
172.884 618.815 mo
173.65 619.045 li
173.114 618.509 li
cp
@
172.884 618.815 mo
173.65 619.045 li
173.114 618.509 li
f
170.28 627.624 mo
170.28 626.863 168.222 626.246 165.684 626.246 cv
163.146 626.246 161.088 626.863 161.088 627.624 cv
161.088 628.386 163.146 629.003 165.684 629.003 cv
168.222 629.003 170.28 628.386 170.28 627.624 cv
@
170.28 627.624 mo
170.28 626.863 168.222 626.246 165.684 626.246 cv
163.146 626.246 161.088 626.863 161.088 627.624 cv
161.088 628.386 163.146 629.003 165.684 629.003 cv
168.222 629.003 170.28 628.386 170.28 627.624 cv
1 gry
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
161.872 627.869 mo
(roundrobin\(1,1,1\))
[.357101 .536194 .536209 .536194 .536209 .357101 .536194 .536194 .298126 .536209 .357101 .536194 
.268097 .536209 .268097 .536194 0 ]xsh
171.812 635.284 mo
171.812 633.381 169.068 631.837 165.684 631.837 cv
162.299 631.837 159.556 633.381 159.556 635.284 cv
159.556 637.188 162.299 638.731 165.684 638.731 cv
169.068 638.731 171.812 637.188 171.812 635.284 cv
@
171.812 635.284 mo
171.812 633.381 169.068 631.837 165.684 631.837 cv
162.299 631.837 159.556 633.381 159.556 635.284 cv
159.556 637.188 162.299 638.731 165.684 638.731 cv
169.068 638.731 171.812 637.188 171.812 635.284 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
161.722 633.691 mo
(CFARDetectFilter)
[.715286 .596252 .774261 .715271 .774261 .476135 .298126 .47612 .476135 .298126 .596252 .298126 
.298126 .298126 .476135 0 ]xsh
162.671 634.917 mo
(work=126464)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 .536209 0 ]xsh
163.669 636.142 mo
(I/O: 3->1)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
161.126 637.368 mo
(*** STATEFUL ***)
[.536194 .536209 .536194 .268097 .596268 .655228 .774246 .655228 .655228 .596252 .774261 .655228 
.268097 .536209 .536194 0 ]xsh
165.684 629.003 mo
165.684 629.539 165.684 630.229 165.684 630.918 cv
@
165.531 630.995 mo
165.684 631.761 li
165.914 630.995 li
cp
@
165.531 630.995 mo
165.684 631.761 li
165.914 630.995 li
f
157.181 622.799 mo
159.02 623.794 161.241 625.097 162.926 626.092 cv
@
162.773 626.246 mo
163.539 626.399 li
162.926 625.863 li
cp
@
162.773 626.246 mo
163.539 626.399 li
162.926 625.863 li
f
165.684 623.488 mo
165.684 624.177 165.684 624.867 165.684 625.556 cv
@
165.531 625.48 mo
165.684 626.246 li
165.914 625.48 li
cp
@
165.531 625.48 mo
165.684 626.246 li
165.914 625.48 li
f
173.65 622.722 mo
172.042 623.718 169.897 625.02 168.288 626.016 cv
@
168.288 625.786 mo
167.752 626.399 li
168.518 626.092 li
cp
@
168.288 625.786 mo
167.752 626.399 li
168.518 626.092 li
f
169.667 644.17 mo
169.667 642.732 167.884 641.566 165.684 641.566 cv
163.484 641.566 161.701 642.732 161.701 644.17 cv
161.701 645.608 163.484 646.774 165.684 646.774 cv
167.884 646.774 169.667 645.608 169.667 644.17 cv
@
169.667 644.17 mo
169.667 642.732 167.884 641.566 165.684 641.566 cv
163.484 641.566 161.701 642.732 161.701 644.17 cv
161.701 645.608 163.484 646.774 165.684 646.774 cv
167.884 646.774 169.667 645.608 169.667 644.17 cv
.271 .467 .702 rgb
f
0 gry
LTFDSI+TimesNewRomanPSMT*1 [1.0724 0 0 -1.0724 0 0 ]msf
164.224 643.189 mo
(Printer)
[.596252 .357101 .298126 .536209 .298126 .47612 0 ]xsh
162.939 644.415 mo
(work=19968)
[.774261 .536194 .357101 .536194 .604843 .536194 .536194 .536209 .536194 0 ]xsh
163.669 645.641 mo
(I/O: 2->0)
[.357101 .298126 .774261 .298126 .268097 .536194 .357101 .604828 0 ]xsh
165.684 638.808 mo
165.684 639.497 165.684 640.187 165.684 640.8 cv
@
165.531 640.8 mo
165.684 641.566 li
165.914 640.8 li
cp
@
165.531 640.8 mo
165.684 641.566 li
165.914 640.8 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
true set_gvm
/LTFDSI+TimesNewRomanPSMT*1 uf
/LTFDSI+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
