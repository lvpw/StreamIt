%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: vocoder-swpipe.pdf
%%Creator: Adobe Acrobat 8.0
%%For: Bill Thies
%%CreationDate: 9/5/2008, 3:33:20 AM
%%BoundingBox: -247 246 209 455
%%HiResBoundingBox: -246.0161 246.0162 208.2713 454.2874
%%CropBox: -246.0161 246.0162 208.2713 454.2874
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 4186 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
   xap:CreatorTool="PScript5.dll Version 5.2.2"
   xap:ModifyDate="2008-09-05T03:32:49-04:00"
   xap:CreateDate="2008-09-05T03:32:49-04:00"
   dc:format="application/pdf"
   pdf:Producer="Acrobat Distiller 8.1.0 (Windows)"
   xapMM:DocumentID="uuid:88c42f23-f282-439b-a48b-5b15928a20b5"
   xapMM:InstanceID="uuid:0aa6cbe7-4223-4ece-b54e-906e740f733a">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft PowerPoint - vocoder</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Bill Thies</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -454.287 translate
pgsv
[0 1 -1 0 208.271 0 ]ct
gsave
np
gsave
0 0 mo
0 454.287 li
208.271 454.287 li
208.271 0 li
cp
clp
[1 0 0 1 -206.923 0 ]ct
171 502.659 mo
441 502.659 li
441 -73.3408 li
171 -73.3408 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
255.84 128.799 mo
383.88 128.799 li
383.88 129.279 li
255.84 129.279 li
cp
383.4 127.539 mo
386.4 129.039 li
383.4 130.539 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
false sadj
255.9 129.039 mo
255.9 32.3192 li
@
[.5 .5 ] 0 dsh
346.86 129.039 mo
346.86 32.3192 li
@
335.52 129.039 mo
335.52 32.3192 li
@
324.12 129.039 mo
324.12 32.3192 li
@
312.72 129.039 mo
312.72 32.3192 li
@
301.32 129.039 mo
301.32 32.3192 li
@
289.92 129.039 mo
289.92 32.3192 li
@
278.58 129.039 mo
278.58 32.3192 li
@
267.18 129.039 mo
267.18 32.3192 li
@
[] 0 dsh
254.46 107.859 mo
257.4 107.859 li
@
254.46 82.8392 mo
257.4 82.8392 li
@
254.46 57.8192 mo
257.4 57.8192 li
@
/1 
[/DeviceGray] /CSA add_res
0 gry
true set_gvm
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1991, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Arial is a trademark of The Monotype Corporation, registered in the US Patent and Trademark Office and elsewhere.) def
/Weight (Regular) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 84 /T put
dup 101 /e put
dup 105 /i put
dup 109 /m put
def
/UniqueID 44339 def
/FontBBox {-222 -250 1006 922} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-25 0 716 728 518 530 706 706] def
/OtherBlues [349 358 -210 -199] def
/FamilyBlues [-25 0 716 728 518 530 706 706] def
/FamilyOtherBlues [349 358 -210 -199] def
/StdHW [72] def
/StdVW [88] def
/StemSnapH [72 85] def
/StemSnapV [88 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/T <1C60D8A8C9B7D8BE16B1D13146B900C9D9FC54E41477185687A83686CBE6
5FB0B29E1AC69D892699EDA5> |-
/e <1C60D8A8C9B7EF326EF6294025B34AF8B77127E7F5CCDC823B159C13132C
3295CF49F6A5E65F9D32A6B27FFE75A3202DC7616AE9AD8F25F262C93EB25396
788B17C2E53B1B8B0A6290B9834F52C8CD0E8836227E2B0A022437C715658851
A54DA2FE5AC89A0FFE5C038A14D6FDB4> |-
/i <1C60D8A8C9B88C084B70B34E18F97CF1997FF6644A06C3E9D2A9D91E0589
7D24E504390D1AACAF3599CA> |-
/m <1C60D8A8C9B6B41C803D68C39EF50D06E406D806E0103ED63F6704BBF19B
FEDC611823F708F8CDC822B4765D0EA33D8918C5115C458B26634AC5E2670C4B
8962BBF3CF9C48946A0DC46F480672849B689EA7D57F5DF91E25DFD9B529EB14
2A1A839E512F7962D9E8B6440BB69ED272488E4A704361F8BFC3459B2DF3FCAF
F00E5B9790F065B3476716D31B338D> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/PZPTUG+ArialMT-Identity-H /ArialMT findfont ct_VMDictPut
/PZPTUG+ArialMT-Identity-H*1 
[84{/.notdef}rp /T 16{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m 
146{/.notdef}rp]
PZPTUG+ArialMT-Identity-H nf
PZPTUG+ArialMT-Identity-H*1 [0 -12 -12 0 0 0 ]msf
319.5 161.619 mo
(Time)
[-7.33551 -2.6676 -9.99951 0 ]ysh
[.5 .5 ] 0 dsh
380.88 129.039 mo
380.88 32.3192 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
369.48 129.039 mo
369.48 32.3192 li
@
358.14 129.039 mo
358.14 32.3192 li
@
0 gry
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZPTUG+ArialMT-Identity-H dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B6079F2BBCE5C47E75BE3527F6B78597E39EC3276E45713B0D
EC9B66AA272DF435296E2CCC0F75C8B0819E3C1633E0F7AC1D705FA6BD3380EE
CC5CA4565D21CEA33ED72F7AABE254D282E5A91A3F316BB024268DCEBBF96AB7
B424FAD71A20D1F69947AF7C173A23F918> |-
/o <1C60D8A8C9B7EF3272B38E4A6C94951E5562623629B934E27FB2180BD8D3
F6BE8C185E818E4FFC52D5CEB593503DF4218821B72034CF2A9A1A709533B323
EFB4629DFAE9D5E18F3D4BFACB0FD28655332930944FE909D271FBC01B5A1CBF
248702BAFDF5EBE494117F5AB7> |-
/r <1C60D8A8C9B81F2C062E4A14544392D75EFC1DE071A88148476E7F4ADEB8
F773ACAC5F6D1E41C9D8141AD151602045512C4C321BE5332ACD4A9A1A81F153
B5A575F3D6F73178CB085E6B21> |-
/s <1C60D8A8C9B7A73DF6B5A4EE8BDAC430AB40D072096BA1391FB87ABD8D54
3094852EEAF06243E7B5ADCF9C1EF5646B8FC5B51310596E132370ECE7C9D12E
2BFFBF299CB441CA112192E2BF1E03F6D4324D162B40F907462F1CDA63BEAC17
54B4842C0FABDAE30E17E7E60566DCCF4C8EA4CA26C6ED> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZPTUG+ArialMT-Identity-H /Encoding get
dup 67 /C put
dup 111 /o put
dup 114 /r put
dup 115 /s put
pop
%ADOEndSubsetFont
reset_gvm
/PZPTUG+ArialMT-Identity-H*1 
[67{/.notdef}rp /C 16{/.notdef}rp /T 16{/.notdef}rp /e 3{/.notdef}rp /i 
3{/.notdef}rp /m /.notdef /o 2{/.notdef}rp /r /s 140{/.notdef}rp]
PZPTUG+ArialMT-Identity-H nf
PZPTUG+ArialMT-Identity-H*1 [0 -12 -12 0 0 0 ]msf
250.44 95.9193 mo
(Cores)
[-8.65558 -6.66364 -3.98749 -6.66364 0 ]ysh
[] 0 dsh
255.72 37.9592 mo
255.72 32.6192 259.14 28.2392 263.4 28.2392 cv
293.88 28.2392 li
298.08 28.2392 301.5 23.9192 301.5 18.5192 cv
301.5 23.9192 304.92 28.2392 309.12 28.2392 cv
339.6 28.2392 li
343.86 28.2392 347.22 32.6192 347.22 37.9592 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
@
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZPTUG+ArialMT-Identity-H dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF322BA6DCE9BD5DF3DFF7C357023322936E9155634E4F
EAE48170BD90CB497150A64DE8E375FCCE900D> |-
/six <1C60D8A8C9B7EF3269F625B6673B9EA52CBA62CA672C606BDB5B836B17
C2CE80FAB2D897CADEAB175E6C7DC01291E9F7084B4CBF4BC2C2DC4CD8B1CF88
C1312A30A6A1D5F0021F394973BE4EB0C30E6B34C0E729C5127993481ED48F35
3CCB40BC49153F289F22306CD57489660BDF3D9EB6D0D1FB1EA6FEEC6C28437D
C20763E0A7D9F9FB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZPTUG+ArialMT-Identity-H /Encoding get
dup 49 /one put
dup 54 /six put
pop
%ADOEndSubsetFont
reset_gvm
/PZPTUG+ArialMT-Identity-H*1 
[49{/.notdef}rp /one 4{/.notdef}rp /six 12{/.notdef}rp /C 16{/.notdef}rp /T 
16{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m /.notdef /o 
2{/.notdef}rp /r /s 140{/.notdef}rp]
PZPTUG+ArialMT-Identity-H nf
PZPTUG+ArialMT-Identity-H*1 [0 -12 -12 0 0 0 ]msf
306.18 15.6392 mo
(16)
[-6.65759 0 ]ysh
318.3 76.4193 mo
318.3 77.6193 317.34 78.5792 316.14 78.5792 cv
291.96 78.5792 li
290.76 78.5792 289.8 77.6193 289.8 76.4193 cv
289.8 67.7792 li
289.8 66.5792 290.76 65.6193 291.96 65.6193 cv
316.14 65.6193 li
317.34 65.6193 318.3 66.5792 318.3 67.7792 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
1 lc
318.3 76.4193 mo
318.3 77.6192 317.34 78.5792 316.14 78.5792 cv
291.96 78.5792 li
290.76 78.5792 289.8 77.6192 289.8 76.4193 cv
289.8 67.7792 li
289.8 66.5792 290.76 65.6192 291.96 65.6192 cv
316.14 65.6192 li
317.34 65.6192 318.3 66.5792 318.3 67.7792 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
318.3 122.679 mo
318.3 123.879 317.34 124.839 316.14 124.839 cv
291.96 124.839 li
290.76 124.839 289.8 123.879 289.8 122.679 cv
289.8 114.039 li
289.8 112.839 290.76 111.819 291.96 111.819 cv
316.14 111.819 li
317.34 111.819 318.3 112.839 318.3 114.039 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
318.3 122.679 mo
318.3 123.879 317.34 124.839 316.14 124.839 cv
291.96 124.839 li
290.76 124.839 289.8 123.879 289.8 122.679 cv
289.8 114.039 li
289.8 112.839 290.76 111.819 291.96 111.819 cv
316.14 111.819 li
317.34 111.819 318.3 112.839 318.3 114.039 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
347.46 122.679 mo
347.46 123.879 346.44 124.839 345.24 124.839 cv
320.58 124.839 li
319.38 124.839 318.42 123.879 318.42 122.679 cv
318.42 114.039 li
318.42 112.839 319.38 111.819 320.58 111.819 cv
345.24 111.819 li
346.44 111.819 347.46 112.839 347.46 114.039 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
347.46 122.679 mo
347.46 123.879 346.44 124.839 345.24 124.839 cv
320.58 124.839 li
319.38 124.839 318.42 123.879 318.42 122.679 cv
318.42 114.039 li
318.42 112.839 319.38 111.819 320.58 111.819 cv
345.24 111.819 li
346.44 111.819 347.46 112.839 347.46 114.039 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
272.58 77.0192 mo
272.58 77.9792 271.8 78.7592 270.84 78.7592 cv
263.88 78.7592 li
262.92 78.7592 262.14 77.9792 262.14 77.0192 cv
262.14 67.5392 li
262.14 66.5792 262.92 65.7993 263.88 65.7993 cv
270.84 65.7993 li
271.8 65.7993 272.58 66.5792 272.58 67.5392 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
272.58 77.0192 mo
272.58 77.9792 271.8 78.7592 270.84 78.7592 cv
263.88 78.7592 li
262.92 78.7592 262.14 77.9792 262.14 77.0192 cv
262.14 67.5392 li
262.14 66.5792 262.92 65.7992 263.88 65.7992 cv
270.84 65.7992 li
271.8 65.7992 272.58 66.5792 272.58 67.5392 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
278.04 77.9193 mo
278.04 78.3992 277.68 78.7593 277.2 78.7593 cv
273.72 78.7593 li
273.24 78.7593 272.88 78.3992 272.88 77.9193 cv
272.88 66.2192 li
272.88 65.7393 273.24 65.3193 273.72 65.3193 cv
277.2 65.3193 li
277.68 65.3193 278.04 65.7393 278.04 66.2192 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
ef
278.04 77.9193 mo
278.04 78.3992 277.68 78.7592 277.2 78.7592 cv
273.72 78.7592 li
273.24 78.7592 272.88 78.3992 272.88 77.9193 cv
272.88 66.2192 li
272.88 65.7393 273.24 65.3192 273.72 65.3192 cv
277.2 65.3192 li
277.68 65.3192 278.04 65.7393 278.04 66.2192 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
289.62 77.8593 mo
289.62 78.3392 289.2 78.7593 288.66 78.7593 cv
284.94 78.7593 li
284.4 78.7593 283.98 78.3392 283.98 77.8593 cv
283.98 66.6993 li
283.98 66.2192 284.4 65.7993 284.94 65.7993 cv
288.66 65.7993 li
289.2 65.7993 289.62 66.2192 289.62 66.6993 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
ef
289.62 77.8593 mo
289.62 78.3392 289.2 78.7592 288.66 78.7592 cv
284.94 78.7592 li
284.4 78.7592 283.98 78.3392 283.98 77.8593 cv
283.98 66.6992 li
283.98 66.2192 284.4 65.7992 284.94 65.7992 cv
288.66 65.7992 li
289.2 65.7992 289.62 66.2192 289.62 66.6992 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
283.68 77.9193 mo
283.68 78.3992 283.26 78.7593 282.78 78.7593 cv
279.24 78.7593 li
278.76 78.7593 278.4 78.3992 278.4 77.9193 cv
278.4 66.2192 li
278.4 65.7393 278.76 65.3193 279.24 65.3193 cv
282.78 65.3193 li
283.26 65.3193 283.68 65.7393 283.68 66.2192 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .8 0 colr
ef
283.68 77.9193 mo
283.68 78.3992 283.26 78.7592 282.78 78.7592 cv
279.24 78.7592 li
278.76 78.7592 278.4 78.3992 278.4 77.9193 cv
278.4 66.2192 li
278.4 65.7393 278.76 65.3192 279.24 65.3192 cv
282.78 65.3192 li
283.26 65.3192 283.68 65.7393 283.68 66.2192 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
318.3 99.8792 mo
318.3 101.079 317.34 102.039 316.14 102.039 cv
291.96 102.039 li
290.76 102.039 289.8 101.079 289.8 99.8792 cv
289.8 91.1793 li
289.8 89.9792 290.76 89.0192 291.96 89.0192 cv
316.14 89.0192 li
317.34 89.0192 318.3 89.9792 318.3 91.1793 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
318.3 99.8792 mo
318.3 101.079 317.34 102.039 316.14 102.039 cv
291.96 102.039 li
290.76 102.039 289.8 101.079 289.8 99.8792 cv
289.8 91.1792 li
289.8 89.9792 290.76 89.0192 291.96 89.0192 cv
316.14 89.0192 li
317.34 89.0192 318.3 89.9792 318.3 91.1792 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
347.46 99.8792 mo
347.46 101.079 346.44 102.039 345.24 102.039 cv
320.58 102.039 li
319.38 102.039 318.42 101.079 318.42 99.8792 cv
318.42 91.1793 li
318.42 89.9792 319.38 89.0192 320.58 89.0192 cv
345.24 89.0192 li
346.44 89.0192 347.46 89.9792 347.46 91.1793 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
347.46 99.8792 mo
347.46 101.079 346.44 102.039 345.24 102.039 cv
320.58 102.039 li
319.38 102.039 318.42 101.079 318.42 99.8792 cv
318.42 91.1792 li
318.42 89.9792 319.38 89.0192 320.58 89.0192 cv
345.24 89.0192 li
346.44 89.0192 347.46 89.9792 347.46 91.1792 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
289.68 122.679 mo
289.68 123.879 288.72 124.839 287.52 124.839 cv
258.3 124.839 li
257.1 124.839 256.14 123.879 256.14 122.679 cv
256.14 114.039 li
256.14 112.839 257.1 111.819 258.3 111.819 cv
287.52 111.819 li
288.72 111.819 289.68 112.839 289.68 114.039 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 1 colr
ef
289.68 122.679 mo
289.68 123.879 288.72 124.839 287.52 124.839 cv
258.3 124.839 li
257.1 124.839 256.14 123.879 256.14 122.679 cv
256.14 114.039 li
256.14 112.839 257.1 111.819 258.3 111.819 cv
287.52 111.819 li
288.72 111.819 289.68 112.839 289.68 114.039 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
289.68 99.8792 mo
289.68 101.079 288.72 102.039 287.52 102.039 cv
258.3 102.039 li
257.1 102.039 256.14 101.079 256.14 99.8792 cv
256.14 91.1793 li
256.14 89.9792 257.1 89.0192 258.3 89.0192 cv
287.52 89.0192 li
288.72 89.0192 289.68 89.9792 289.68 91.1793 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 1 colr
ef
289.68 99.8792 mo
289.68 101.079 288.72 102.039 287.52 102.039 cv
258.3 102.039 li
257.1 102.039 256.14 101.079 256.14 99.8792 cv
256.14 91.1792 li
256.14 89.9792 257.1 89.0192 258.3 89.0192 cv
287.52 89.0192 li
288.72 89.0192 289.68 89.9792 289.68 91.1792 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
272.58 54.2192 mo
272.58 55.1793 271.8 55.9592 270.84 55.9592 cv
263.88 55.9592 li
262.92 55.9592 262.14 55.1793 262.14 54.2192 cv
262.14 44.7393 li
262.14 43.7792 262.92 42.9993 263.88 42.9993 cv
270.84 42.9993 li
271.8 42.9993 272.58 43.7792 272.58 44.7393 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
272.58 54.2192 mo
272.58 55.1792 271.8 55.9592 270.84 55.9592 cv
263.88 55.9592 li
262.92 55.9592 262.14 55.1792 262.14 54.2192 cv
262.14 44.7392 li
262.14 43.7792 262.92 42.9992 263.88 42.9992 cv
270.84 42.9992 li
271.8 42.9992 272.58 43.7792 272.58 44.7392 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
278.04 55.1193 mo
278.04 55.5992 277.68 55.9593 277.2 55.9593 cv
273.72 55.9593 li
273.24 55.9593 272.88 55.5992 272.88 55.1193 cv
272.88 43.4193 li
272.88 42.9393 273.24 42.5193 273.72 42.5193 cv
277.2 42.5193 li
277.68 42.5193 278.04 42.9393 278.04 43.4193 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
ef
278.04 55.1193 mo
278.04 55.5993 277.68 55.9593 277.2 55.9593 cv
273.72 55.9593 li
273.24 55.9593 272.88 55.5993 272.88 55.1193 cv
272.88 43.4193 li
272.88 42.9393 273.24 42.5193 273.72 42.5193 cv
277.2 42.5193 li
277.68 42.5193 278.04 42.9393 278.04 43.4193 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
289.62 55.0593 mo
289.62 55.5392 289.2 55.9593 288.66 55.9593 cv
284.94 55.9593 li
284.4 55.9593 283.98 55.5392 283.98 55.0593 cv
283.98 43.8993 li
283.98 43.4193 284.4 42.9993 284.94 42.9993 cv
288.66 42.9993 li
289.2 42.9993 289.62 43.4193 289.62 43.8993 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
ef
289.62 55.0593 mo
289.62 55.5393 289.2 55.9593 288.66 55.9593 cv
284.94 55.9593 li
284.4 55.9593 283.98 55.5393 283.98 55.0593 cv
283.98 43.8993 li
283.98 43.4193 284.4 42.9993 284.94 42.9993 cv
288.66 42.9993 li
289.2 42.9993 289.62 43.4193 289.62 43.8993 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
283.68 55.0593 mo
283.68 55.5992 283.26 55.9593 282.78 55.9593 cv
279.24 55.9593 li
278.76 55.9593 278.4 55.5992 278.4 55.0593 cv
278.4 43.4193 li
278.4 42.9393 278.76 42.5193 279.24 42.5193 cv
282.78 42.5193 li
283.26 42.5193 283.68 42.9393 283.68 43.4193 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .8 0 colr
ef
283.68 55.0593 mo
283.68 55.5993 283.26 55.9593 282.78 55.9593 cv
279.24 55.9593 li
278.76 55.9593 278.4 55.5993 278.4 55.0593 cv
278.4 43.4193 li
278.4 42.9393 278.76 42.5193 279.24 42.5193 cv
282.78 42.5193 li
283.26 42.5193 283.68 42.9393 283.68 43.4193 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
347.46 76.4193 mo
347.46 77.6193 346.44 78.5792 345.24 78.5792 cv
320.58 78.5792 li
319.38 78.5792 318.42 77.6193 318.42 76.4193 cv
318.42 67.7792 li
318.42 66.5792 319.38 65.6193 320.58 65.6193 cv
345.24 65.6193 li
346.44 65.6193 347.46 66.5792 347.46 67.7792 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
347.46 76.4193 mo
347.46 77.6192 346.44 78.5792 345.24 78.5792 cv
320.58 78.5792 li
319.38 78.5792 318.42 77.6192 318.42 76.4193 cv
318.42 67.7792 li
318.42 66.5792 319.38 65.6192 320.58 65.6192 cv
345.24 65.6192 li
346.44 65.6192 347.46 66.5792 347.46 67.7792 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
318.3 53.6193 mo
318.3 54.8193 317.34 55.7792 316.14 55.7792 cv
291.96 55.7792 li
290.76 55.7792 289.8 54.8193 289.8 53.6193 cv
289.8 44.9792 li
289.8 43.7792 290.76 42.7593 291.96 42.7593 cv
316.14 42.7593 li
317.34 42.7593 318.3 43.7792 318.3 44.9792 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
318.3 53.6193 mo
318.3 54.8193 317.34 55.7793 316.14 55.7793 cv
291.96 55.7793 li
290.76 55.7793 289.8 54.8193 289.8 53.6193 cv
289.8 44.9793 li
289.8 43.7793 290.76 42.7593 291.96 42.7593 cv
316.14 42.7593 li
317.34 42.7593 318.3 43.7793 318.3 44.9793 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
347.46 53.6193 mo
347.46 54.8193 346.44 55.7792 345.24 55.7792 cv
320.58 55.7792 li
319.38 55.7792 318.42 54.8193 318.42 53.6193 cv
318.42 44.9792 li
318.42 43.7792 319.38 42.7593 320.58 42.7593 cv
345.24 42.7593 li
346.44 42.7593 347.46 43.7792 347.46 44.9792 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
347.46 53.6193 mo
347.46 54.8193 346.44 55.7793 345.24 55.7793 cv
320.58 55.7793 li
319.38 55.7793 318.42 54.8193 318.42 53.6193 cv
318.42 44.9793 li
318.42 43.7793 319.38 42.7593 320.58 42.7593 cv
345.24 42.7593 li
346.44 42.7593 347.46 43.7793 347.46 44.9793 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
214.02 356.619 mo
214.02 358.299 214.62 359.739 215.46 359.739 cv
216.24 359.739 216.9 358.299 216.9 356.619 cv
216.9 354.879 216.24 353.499 215.46 353.499 cv
214.62 353.499 214.02 354.879 214.02 356.619 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
214.02 356.619 mo
214.02 358.299 214.62 359.739 215.46 359.739 cv
216.24 359.739 216.9 358.299 216.9 356.619 cv
216.9 354.879 216.24 353.499 215.46 353.499 cv
214.62 353.499 214.02 354.879 214.02 356.619 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
226.56 356.619 mo
226.56 358.299 227.22 359.739 228 359.739 cv
228.78 359.739 229.44 358.299 229.44 356.619 cv
229.44 354.879 228.78 353.499 228 353.499 cv
227.22 353.499 226.56 354.879 226.56 356.619 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
226.56 356.619 mo
226.56 358.299 227.22 359.739 228 359.739 cv
228.78 359.739 229.44 358.299 229.44 356.619 cv
229.44 354.879 228.78 353.499 228 353.499 cv
227.22 353.499 226.56 354.879 226.56 356.619 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
219.6 370.479 mo
219.6 370.899 219.96 371.259 220.44 371.259 cv
223.62 371.259 li
224.1 371.259 224.46 370.899 224.46 370.479 cv
224.46 360.279 li
224.46 359.859 224.1 359.499 223.62 359.499 cv
220.44 359.499 li
219.96 359.499 219.6 359.859 219.6 360.279 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 1 colr
ef
219.6 370.479 mo
219.6 370.899 219.96 371.259 220.44 371.259 cv
223.62 371.259 li
224.1 371.259 224.46 370.899 224.46 370.479 cv
224.46 360.279 li
224.46 359.859 224.1 359.499 223.62 359.499 cv
220.44 359.499 li
219.96 359.499 219.6 359.859 219.6 360.279 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
219.54 352.839 mo
219.54 353.319 219.9 353.679 220.38 353.679 cv
223.56 353.679 li
224.04 353.679 224.4 353.319 224.4 352.839 cv
224.4 342.639 li
224.4 342.219 224.04 341.859 223.56 341.859 cv
220.38 341.859 li
219.9 341.859 219.54 342.219 219.54 342.639 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 1 colr
ef
219.54 352.839 mo
219.54 353.319 219.9 353.679 220.38 353.679 cv
223.56 353.679 li
224.04 353.679 224.4 353.319 224.4 352.839 cv
224.4 342.639 li
224.4 342.219 224.04 341.859 223.56 341.859 cv
220.38 341.859 li
219.9 341.859 219.54 342.219 219.54 342.639 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
216.66 356.499 mo
218.58 350.019 li
219.06 350.199 li
217.14 356.679 li
cp
217.26 350.139 mo
219.54 347.739 li
220.14 351.039 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
224.64 347.679 mo
226.2 354.099 li
225.72 354.219 li
224.16 347.799 li
cp
227.28 353.319 mo
226.56 356.619 li
224.4 354.039 li
f
217.14 356.499 mo
219.12 362.859 li
218.64 363.039 li
216.66 356.679 li
cp
220.14 362.019 mo
219.6 365.319 li
217.32 362.919 li
f
224.22 365.319 mo
225.72 358.959 li
226.2 359.079 li
224.7 365.379 li
cp
224.4 359.139 mo
226.56 356.619 li
227.34 359.859 li
f
259.8 356.499 mo
259.8 358.179 260.46 359.619 261.24 359.619 cv
262.02 359.619 262.62 358.179 262.62 356.499 cv
262.62 354.759 262.02 353.319 261.24 353.319 cv
260.46 353.319 259.8 354.759 259.8 356.499 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
259.8 356.499 mo
259.8 358.179 260.46 359.619 261.24 359.619 cv
262.02 359.619 262.62 358.179 262.62 356.499 cv
262.62 354.759 262.02 353.319 261.24 353.319 cv
260.46 353.319 259.8 354.759 259.8 356.499 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
263.1 346.779 mo
263.1 348.519 263.76 349.899 264.54 349.899 cv
265.38 349.899 265.98 348.519 265.98 346.779 cv
265.98 345.039 265.38 343.659 264.54 343.659 cv
263.76 343.659 263.1 345.039 263.1 346.779 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
263.1 346.779 mo
263.1 348.519 263.76 349.899 264.54 349.899 cv
265.38 349.899 265.98 348.519 265.98 346.779 cv
265.98 345.039 265.38 343.659 264.54 343.659 cv
263.76 343.659 263.1 345.039 263.1 346.779 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
266.22 346.719 mo
267.48 354.219 li
267 354.279 li
265.74 346.839 li
cp
268.62 353.499 mo
267.6 356.739 li
265.68 353.979 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
296.1 356.679 mo
297 349.539 li
297.48 349.599 li
296.64 356.739 li
cp
295.68 349.899 mo
297.54 347.079 li
298.68 350.259 li
f
283.56 361.839 mo
283.56 362.319 283.92 362.679 284.34 362.679 cv
287.58 362.679 li
288 362.679 288.36 362.319 288.36 361.839 cv
288.36 351.639 li
288.36 351.219 288 350.859 287.58 350.859 cv
284.34 350.859 li
283.92 350.859 283.56 351.219 283.56 351.639 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .8 0 colr
ef
283.56 361.839 mo
283.56 362.319 283.92 362.679 284.34 362.679 cv
287.58 362.679 li
288 362.679 288.36 362.319 288.36 361.839 cv
288.36 351.639 li
288.36 351.219 288 350.859 287.58 350.859 cv
284.34 350.859 li
283.92 350.859 283.56 351.219 283.56 351.639 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
275.64 361.899 mo
275.64 362.319 276 362.679 276.42 362.679 cv
279.6 362.679 li
280.02 362.679 280.38 362.319 280.38 361.899 cv
280.38 351.639 li
280.38 351.219 280.02 350.859 279.6 350.859 cv
276.42 350.859 li
276 350.859 275.64 351.219 275.64 351.639 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
ef
275.64 361.899 mo
275.64 362.319 276 362.679 276.42 362.679 cv
279.6 362.679 li
280.02 362.679 280.38 362.319 280.38 361.899 cv
280.38 351.639 li
280.38 351.219 280.02 350.859 279.6 350.859 cv
276.42 350.859 li
276 350.859 275.64 351.219 275.64 351.639 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
267.6 361.899 mo
267.6 362.319 267.96 362.679 268.44 362.679 cv
271.56 362.679 li
272.04 362.679 272.4 362.319 272.4 361.899 cv
272.4 351.639 li
272.4 351.219 272.04 350.859 271.56 350.859 cv
268.44 350.859 li
267.96 350.859 267.6 351.219 267.6 351.639 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
267.6 361.899 mo
267.6 362.319 267.96 362.679 268.44 362.679 cv
271.56 362.679 li
272.04 362.679 272.4 362.319 272.4 361.899 cv
272.4 351.639 li
272.4 351.219 272.04 350.859 271.56 350.859 cv
268.44 350.859 li
267.96 350.859 267.6 351.219 267.6 351.639 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
291.54 361.839 mo
291.54 362.319 291.9 362.679 292.38 362.679 cv
295.56 362.679 li
296.04 362.679 296.4 362.319 296.4 361.839 cv
296.4 351.639 li
296.4 351.219 296.04 350.859 295.56 350.859 cv
292.38 350.859 li
291.9 350.859 291.54 351.219 291.54 351.639 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
ef
291.54 361.839 mo
291.54 362.319 291.9 362.679 292.38 362.679 cv
295.56 362.679 li
296.04 362.679 296.4 362.319 296.4 361.839 cv
296.4 351.639 li
296.4 351.219 296.04 350.859 295.56 350.859 cv
292.38 350.859 li
291.9 350.859 291.54 351.219 291.54 351.639 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
272.4 355.239 mo
275.4 356.739 li
272.4 358.239 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
280.32 355.239 mo
283.32 356.739 li
280.32 358.239 li
f
288.3 355.239 mo
291.3 356.739 li
288.3 358.239 li
f
283.38 342.579 mo
283.38 343.059 283.74 343.419 284.16 343.419 cv
287.4 343.419 li
287.82 343.419 288.18 343.059 288.18 342.579 cv
288.18 332.379 li
288.18 331.959 287.82 331.599 287.4 331.599 cv
284.16 331.599 li
283.74 331.599 283.38 331.959 283.38 332.379 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .8 0 colr
ef
283.38 342.579 mo
283.38 343.059 283.74 343.419 284.16 343.419 cv
287.4 343.419 li
287.82 343.419 288.18 343.059 288.18 342.579 cv
288.18 332.379 li
288.18 331.959 287.82 331.599 287.4 331.599 cv
284.16 331.599 li
283.74 331.599 283.38 331.959 283.38 332.379 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
275.46 342.639 mo
275.46 343.059 275.82 343.419 276.24 343.419 cv
279.42 343.419 li
279.84 343.419 280.2 343.059 280.2 342.639 cv
280.2 332.379 li
280.2 331.959 279.84 331.599 279.42 331.599 cv
276.24 331.599 li
275.82 331.599 275.46 331.959 275.46 332.379 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
ef
275.46 342.639 mo
275.46 343.059 275.82 343.419 276.24 343.419 cv
279.42 343.419 li
279.84 343.419 280.2 343.059 280.2 342.639 cv
280.2 332.379 li
280.2 331.959 279.84 331.599 279.42 331.599 cv
276.24 331.599 li
275.82 331.599 275.46 331.959 275.46 332.379 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
267.42 342.639 mo
267.42 343.059 267.78 343.419 268.2 343.419 cv
271.38 343.419 li
271.86 343.419 272.16 343.059 272.16 342.639 cv
272.16 332.379 li
272.16 331.959 271.86 331.599 271.38 331.599 cv
268.2 331.599 li
267.78 331.599 267.42 331.959 267.42 332.379 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
267.42 342.639 mo
267.42 343.059 267.78 343.419 268.2 343.419 cv
271.38 343.419 li
271.86 343.419 272.16 343.059 272.16 342.639 cv
272.16 332.379 li
272.16 331.959 271.86 331.599 271.38 331.599 cv
268.2 331.599 li
267.78 331.599 267.42 331.959 267.42 332.379 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
291.36 342.579 mo
291.36 343.059 291.72 343.419 292.2 343.419 cv
295.38 343.419 li
295.8 343.419 296.16 343.059 296.16 342.579 cv
296.16 332.379 li
296.16 331.959 295.8 331.599 295.38 331.599 cv
292.2 331.599 li
291.72 331.599 291.36 331.959 291.36 332.379 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
ef
291.36 342.579 mo
291.36 343.059 291.72 343.419 292.2 343.419 cv
295.38 343.419 li
295.8 343.419 296.16 343.059 296.16 342.579 cv
296.16 332.379 li
296.16 331.959 295.8 331.599 295.38 331.599 cv
292.2 331.599 li
291.72 331.599 291.36 331.959 291.36 332.379 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
272.16 335.979 mo
275.16 337.479 li
272.16 338.979 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
280.14 335.979 mo
283.14 337.479 li
280.14 338.979 li
f
288.12 335.979 mo
291.12 337.479 li
288.12 338.979 li
f
296.46 337.419 mo
297.48 344.559 li
296.94 344.679 li
295.92 337.479 li
cp
298.62 343.899 mo
297.54 347.079 li
295.68 344.319 li
f
265.74 346.719 mo
266.82 339.879 li
267.3 339.999 li
266.22 346.839 li
cp
265.5 340.239 mo
267.42 337.479 li
268.44 340.659 li
f
262.62 356.499 mo
262.68 349.299 li
263.16 349.299 li
263.1 356.499 li
cp
261.42 349.779 mo
262.92 346.779 li
264.42 349.779 li
f
297.54 347.139 mo
297.54 348.819 298.2 350.199 298.98 350.199 cv
299.76 350.199 300.36 348.819 300.36 347.139 cv
300.36 345.399 299.76 344.019 298.98 344.019 cv
298.2 344.019 297.54 345.399 297.54 347.139 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
297.54 347.139 mo
297.54 348.819 298.2 350.199 298.98 350.199 cv
299.76 350.199 300.36 348.819 300.36 347.139 cv
300.36 345.399 299.76 344.019 298.98 344.019 cv
298.2 344.019 297.54 345.399 297.54 347.139 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
300.84 347.079 mo
302.46 354.099 li
301.98 354.219 li
300.36 347.199 li
cp
303.54 353.319 mo
302.76 356.619 li
300.6 353.979 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
0 lc
262.98 356.919 mo
268.2 370.299 li
@
268.14 370.299 mo
300.06 370.299 li
@
299.82 370.239 mo
301.98 359.199 li
302.46 359.259 li
300.3 370.359 li
cp
300.66 359.439 mo
302.7 356.799 li
303.6 360.039 li
f
211.02 355.119 mo
214.08 356.559 li
211.08 358.119 li
f
229.44 356.319 mo
238.38 356.199 li
238.38 356.679 li
229.44 356.859 li
cp
237.84 354.939 mo
240.9 356.439 li
237.9 357.939 li
f
257.22 344.139 mo
259.5 353.979 li
259.02 354.099 li
256.74 344.259 li
cp
260.58 353.199 mo
259.8 356.499 li
257.7 353.859 li
f
254.88 344.259 mo
254.88 345.519 255.36 346.539 255.96 346.539 cv
256.5 346.539 256.98 345.519 256.98 344.259 cv
256.98 342.999 256.5 341.979 255.96 341.979 cv
255.36 341.979 254.88 342.999 254.88 344.259 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
1 lc
254.88 344.259 mo
254.88 345.519 255.36 346.539 255.96 346.539 cv
256.5 346.539 256.98 345.519 256.98 344.259 cv
256.98 342.999 256.5 341.979 255.96 341.979 cv
255.36 341.979 254.88 342.999 254.88 344.259 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
248.52 359.019 mo
248.52 359.439 248.88 359.799 249.3 359.799 cv
252.48 359.799 li
252.9 359.799 253.26 359.439 253.26 359.019 cv
253.26 348.699 li
253.26 348.279 252.9 347.919 252.48 347.919 cv
249.3 347.919 li
248.88 347.919 248.52 348.279 248.52 348.699 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
248.52 359.019 mo
248.52 359.439 248.88 359.799 249.3 359.799 cv
252.48 359.799 li
252.9 359.799 253.26 359.439 253.26 359.019 cv
253.26 348.699 li
253.26 348.279 252.9 347.919 252.48 347.919 cv
249.3 347.919 li
248.88 347.919 248.52 348.279 248.52 348.699 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
249.54 359.859 mo
249.54 360.339 249.9 360.639 250.32 360.639 cv
253.44 360.639 li
253.92 360.639 254.22 360.339 254.22 359.859 cv
254.22 349.659 li
254.22 349.179 253.92 348.819 253.44 348.819 cv
250.32 348.819 li
249.9 348.819 249.54 349.179 249.54 349.659 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
249.54 359.859 mo
249.54 360.339 249.9 360.639 250.32 360.639 cv
253.44 360.639 li
253.92 360.639 254.22 360.339 254.22 359.859 cv
254.22 349.659 li
254.22 349.179 253.92 348.819 253.44 348.819 cv
250.32 348.819 li
249.9 348.819 249.54 349.179 249.54 349.659 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
250.5 360.759 mo
250.5 361.179 250.86 361.539 251.28 361.539 cv
254.46 361.539 li
254.88 361.539 255.24 361.179 255.24 360.759 cv
255.24 350.499 li
255.24 350.079 254.88 349.719 254.46 349.719 cv
251.28 349.719 li
250.86 349.719 250.5 350.079 250.5 350.499 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
250.5 360.759 mo
250.5 361.179 250.86 361.539 251.28 361.539 cv
254.46 361.539 li
254.88 361.539 255.24 361.179 255.24 360.759 cv
255.24 350.499 li
255.24 350.079 254.88 349.719 254.46 349.719 cv
251.28 349.719 li
250.86 349.719 250.5 350.079 250.5 350.499 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
251.52 361.659 mo
251.52 362.139 251.88 362.499 252.3 362.499 cv
255.48 362.499 li
255.9 362.499 256.26 362.139 256.26 361.659 cv
256.26 351.459 li
256.26 351.039 255.9 350.679 255.48 350.679 cv
252.3 350.679 li
251.88 350.679 251.52 351.039 251.52 351.459 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
251.52 361.659 mo
251.52 362.139 251.88 362.499 252.3 362.499 cv
255.48 362.499 li
255.9 362.499 256.26 362.139 256.26 361.659 cv
256.26 351.459 li
256.26 351.039 255.9 350.679 255.48 350.679 cv
252.3 350.679 li
251.88 350.679 251.52 351.039 251.52 351.459 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
250.68 347.739 mo
252.84 345.759 li
253.2 346.119 li
251.04 348.099 li
cp
251.64 345.159 mo
254.88 344.199 li
253.68 347.379 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
251.7 348.699 mo
253.32 346.179 li
253.74 346.479 li
252.12 348.999 li
cp
252 345.939 mo
254.88 344.199 li
254.52 347.559 li
f
252.66 349.659 mo
253.8 346.479 li
254.28 346.659 li
253.08 349.779 li
cp
252.42 346.539 mo
254.88 344.199 li
255.24 347.559 li
f
253.62 350.619 mo
254.22 346.659 li
254.76 346.719 li
254.1 350.679 li
cp
252.96 346.959 mo
254.88 344.199 li
255.9 347.439 li
f
310.2 366.999 mo
309.96 362.379 li
310.5 362.319 li
310.68 366.939 li
cp
308.76 362.919 mo
310.14 359.859 li
311.76 362.799 li
f
310.2 366.939 mo
310.62 363.219 li
311.1 363.279 li
310.68 366.999 li
cp
309.3 363.579 mo
311.1 360.759 li
312.3 363.939 li
f
310.2 366.819 mo
311.58 364.599 li
312 364.839 li
310.62 367.119 li
cp
310.26 364.359 mo
313.14 362.619 li
312.84 365.919 li
f
310.2 366.879 mo
311.1 364.239 li
311.58 364.419 li
310.68 367.059 li
cp
309.72 364.359 mo
312.12 361.959 li
312.6 365.319 li
f
307.74 359.079 mo
307.74 359.499 308.1 359.859 308.52 359.859 cv
311.7 359.859 li
312.12 359.859 312.48 359.499 312.48 359.079 cv
312.48 348.819 li
312.48 348.399 312.12 348.039 311.7 348.039 cv
308.52 348.039 li
308.1 348.039 307.74 348.399 307.74 348.819 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
307.74 359.079 mo
307.74 359.499 308.1 359.859 308.52 359.859 cv
311.7 359.859 li
312.12 359.859 312.48 359.499 312.48 359.079 cv
312.48 348.819 li
312.48 348.399 312.12 348.039 311.7 348.039 cv
308.52 348.039 li
308.1 348.039 307.74 348.399 307.74 348.819 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
308.76 359.979 mo
308.76 360.459 309.12 360.759 309.54 360.759 cv
312.72 360.759 li
313.14 360.759 313.5 360.459 313.5 359.979 cv
313.5 349.779 li
313.5 349.299 313.14 348.999 312.72 348.999 cv
309.54 348.999 li
309.12 348.999 308.76 349.299 308.76 349.779 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
308.76 359.979 mo
308.76 360.459 309.12 360.759 309.54 360.759 cv
312.72 360.759 li
313.14 360.759 313.5 360.459 313.5 359.979 cv
313.5 349.779 li
313.5 349.299 313.14 348.999 312.72 348.999 cv
309.54 348.999 li
309.12 348.999 308.76 349.299 308.76 349.779 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
309.72 361.179 mo
309.72 361.599 310.08 361.959 310.56 361.959 cv
313.68 361.959 li
314.16 361.959 314.52 361.599 314.52 361.179 cv
314.52 350.919 li
314.52 350.439 314.16 350.079 313.68 350.079 cv
310.56 350.079 li
310.08 350.079 309.72 350.439 309.72 350.919 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
309.72 361.179 mo
309.72 361.599 310.08 361.959 310.56 361.959 cv
313.68 361.959 li
314.16 361.959 314.52 361.599 314.52 361.179 cv
314.52 350.919 li
314.52 350.439 314.16 350.079 313.68 350.079 cv
310.56 350.079 li
310.08 350.079 309.72 350.439 309.72 350.919 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZPTUG+ArialMT-Identity-H dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B64EDFDB46508B03C1BA6617F29183AF5EE7DAA30A7F3EAEFD
6705D076E189BB1A87CDB7C450A455C6805A14C586D23F384F91EA7EE81F47D3
E589D76281953FC78FC31419C210C171DEED3AED0423B40B0A22D7EF236E1666
D38D1CDBA171> |-
/R <1C60D8A8C9B6079F4E60D063F0767E7F02FAC09A4010F4F0744E7BB7FD45
5FB6472FCC081F13976DD2CC9C30E89BAD096507542A0B90314DE7A4367ADD1E
412A0C92B1370A0844B40884679F91D8D6B7B5DBAD4EABF06DB35B8498117918
0699157C2C0BF36C5D1BFA24B06C1EDE922D86E780BE47A7050C9F38AF083E0C
F03CCAA0FF> |-
/a <1C60D8A8C9B7EF326DA7DF6E992BB0067378CC2864443DD75F40C3F59BFA
E780442B93B6E9E205685F556603FDD13F43D7CFBA44B5FD94B172C1BAEAE134
90EC3F3CBF4B3033E0CFFB04D712ACAE53AC93BF916BCE432A2C3D908CE096B9
470EA658F5F9B573FFD8FE15CC5DA0E3B4E98C53A962DFC58BD092E98919B03F
2DF5CDAD8B352EA1AE212E81DCE57F9D7572BFCCB2BA60A4A5C55A7B7D088869
29F7B538F6F40182A00EFF18601643CDBDB7C59D7FDE2FDC86297A0526C719D7
1338> |-
/c <1C60D8A8C9B7A73DFCC965B95B407B63A21A323AC35889E4BD58B575823F
3D4C1849E342B371D24262A00F1B2118FF5BEF66219ACE8843324D9DE60D5A0C
40D6B21D6BB545548D091BEA6C08BFEE3773C5CA8BCA4E16C0DF3B738B5B4CA6
F12725C716> |-
/l <1C60D8A8C9B88C084B70B34E18F97D598FFC8BBB87271DAB31AE82C7D5> |-
/t <1C60D8A8C9B854D0DFA7F3C3CFE997A880BB6118223EC140BB1D072976EE
7376E92C1688A186F47CEAAFED94409C37AA8625569840A3000DBDC757F1162E
2C0A9076C5CFF3F8D5838450BDCD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZPTUG+ArialMT-Identity-H /Encoding get
dup 80 /P put
dup 82 /R put
dup 97 /a put
dup 99 /c put
dup 108 /l put
dup 116 /t put
pop
%ADOEndSubsetFont
reset_gvm
/PZPTUG+ArialMT-Identity-H*1 
[49{/.notdef}rp /one 4{/.notdef}rp /six 12{/.notdef}rp /C 12{/.notdef}rp /P 
/.notdef /R /.notdef /T 12{/.notdef}rp /a /.notdef /c 
/.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /.notdef 
/o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
PZPTUG+ArialMT-Identity-H nf
PZPTUG+ArialMT-Identity-H*1 [0 -2.52 -2.52 0 0 0 ]msf
313.14 361.479 mo
(RectPolar)
[-1.79953 -1.3797 -1.25949 -.72049 -1.68033 -1.3797 -.599518 -1.31973 0 ]ysh
310.74 361.779 mo
310.74 362.259 311.1 362.619 311.52 362.619 cv
314.7 362.619 li
315.12 362.619 315.48 362.259 315.48 361.779 cv
315.48 351.579 li
315.48 351.159 315.12 350.799 314.7 350.799 cv
311.52 350.799 li
311.1 350.799 310.74 351.159 310.74 351.579 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
310.74 361.779 mo
310.74 362.259 311.1 362.619 311.52 362.619 cv
314.7 362.619 li
315.12 362.619 315.48 362.259 315.48 361.779 cv
315.48 351.579 li
315.48 351.159 315.12 350.799 314.7 350.799 cv
311.52 350.799 li
311.1 350.799 310.74 351.159 310.74 351.579 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
308.34 366.999 mo
308.34 368.259 308.76 369.279 309.36 369.279 cv
309.96 369.279 310.44 368.259 310.44 366.999 cv
310.44 365.679 309.96 364.659 309.36 364.659 cv
308.76 364.659 308.34 365.679 308.34 366.999 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
308.34 366.999 mo
308.34 368.259 308.76 369.279 309.36 369.279 cv
309.96 369.279 310.44 368.259 310.44 366.999 cv
310.44 365.679 309.96 364.659 309.36 364.659 cv
308.76 364.659 308.34 365.679 308.34 366.999 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
306.36 356.559 mo
308.04 364.479 li
307.56 364.599 li
305.88 356.679 li
cp
309.18 363.699 mo
308.34 366.999 li
306.24 364.359 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
309.96 347.859 mo
312.24 346.239 li
312.54 346.659 li
310.26 348.219 li
cp
311.1 345.519 mo
314.46 345.039 li
312.84 347.979 li
f
310.92 348.819 mo
312.66 346.779 li
313.02 347.139 li
311.34 349.119 li
cp
311.34 346.359 mo
314.46 345.039 li
313.68 348.279 li
f
311.88 350.019 mo
313.14 347.199 li
313.62 347.439 li
312.36 350.199 li
cp
311.82 347.139 mo
314.46 345.039 li
314.58 348.399 li
f
312.9 350.739 mo
313.62 347.439 li
314.1 347.499 li
313.38 350.859 li
cp
312.3 347.619 mo
314.46 345.039 li
315.24 348.279 li
f
302.94 356.619 mo
302.94 358.539 303.66 360.099 304.5 360.099 cv
305.4 360.099 306.12 358.539 306.12 356.619 cv
306.12 354.639 305.4 353.079 304.5 353.079 cv
303.66 353.079 302.94 354.639 302.94 356.619 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
302.94 356.619 mo
302.94 358.539 303.66 360.099 304.5 360.099 cv
305.4 360.099 306.12 358.539 306.12 356.619 cv
306.12 354.639 305.4 353.079 304.5 353.079 cv
303.66 353.079 302.94 354.639 302.94 356.619 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
315.9 343.479 mo
318.9 344.979 li
315.9 346.479 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
314.46 345.039 mo
314.46 346.299 314.88 347.319 315.48 347.319 cv
316.02 347.319 316.5 346.299 316.5 345.039 cv
316.5 343.779 316.02 342.699 315.48 342.699 cv
314.88 342.699 314.46 343.779 314.46 345.039 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
314.46 345.039 mo
314.46 346.299 314.88 347.319 315.48 347.319 cv
316.02 347.319 316.5 346.299 316.5 345.039 cv
316.5 343.779 316.02 342.699 315.48 342.699 cv
314.88 342.699 314.46 343.779 314.46 345.039 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
242.88 356.139 mo
247.08 355.119 li
247.2 355.599 li
243 356.679 li
cp
246.3 354.039 mo
249.54 354.699 li
247.02 356.919 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
242.94 356.139 mo
247.98 355.659 li
248.04 356.139 li
242.94 356.679 li
cp
247.38 354.459 mo
250.5 355.659 li
247.68 357.459 li
f
242.82 356.199 mo
246.12 354.639 li
246.36 355.119 li
243.06 356.619 li
cp
245.16 353.739 mo
248.52 353.859 li
246.42 356.439 li
f
242.94 356.139 mo
249 356.319 li
249 356.799 li
242.94 356.679 li
cp
248.52 355.059 mo
251.52 356.619 li
248.46 358.059 li
f
240.9 356.379 mo
240.9 357.639 241.32 358.659 241.92 358.659 cv
242.46 358.659 242.94 357.639 242.94 356.379 cv
242.94 355.119 242.46 354.099 241.92 354.099 cv
241.32 354.099 240.9 355.119 240.9 356.379 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
240.9 356.379 mo
240.9 357.639 241.32 358.659 241.92 358.659 cv
242.46 358.659 242.94 357.639 242.94 356.379 cv
242.94 355.119 242.46 354.099 241.92 354.099 cv
241.32 354.099 240.9 355.119 240.9 356.379 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
245.34 314.919 mo
245.34 316.659 245.94 318.039 246.72 318.039 cv
247.56 318.039 248.16 316.659 248.16 314.919 cv
248.16 313.179 247.56 311.799 246.72 311.799 cv
245.94 311.799 245.34 313.179 245.34 314.919 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
245.34 314.919 mo
245.34 316.659 245.94 318.039 246.72 318.039 cv
247.56 318.039 248.16 316.659 248.16 314.919 cv
248.16 313.179 247.56 311.799 246.72 311.799 cv
245.94 311.799 245.34 313.179 245.34 314.919 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
257.88 314.919 mo
257.88 316.659 258.54 318.039 259.32 318.039 cv
260.1 318.039 260.76 316.659 260.76 314.919 cv
260.76 313.179 260.1 311.799 259.32 311.799 cv
258.54 311.799 257.88 313.179 257.88 314.919 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
257.88 314.919 mo
257.88 316.659 258.54 318.039 259.32 318.039 cv
260.1 318.039 260.76 316.659 260.76 314.919 cv
260.76 313.179 260.1 311.799 259.32 311.799 cv
258.54 311.799 257.88 313.179 257.88 314.919 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
250.92 328.779 mo
250.92 329.259 251.28 329.619 251.76 329.619 cv
254.94 329.619 li
255.36 329.619 255.72 329.259 255.72 328.779 cv
255.72 318.579 li
255.72 318.159 255.36 317.799 254.94 317.799 cv
251.76 317.799 li
251.28 317.799 250.92 318.159 250.92 318.579 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 1 colr
ef
250.92 328.779 mo
250.92 329.259 251.28 329.619 251.76 329.619 cv
254.94 329.619 li
255.36 329.619 255.72 329.259 255.72 328.779 cv
255.72 318.579 li
255.72 318.159 255.36 317.799 254.94 317.799 cv
251.76 317.799 li
251.28 317.799 250.92 318.159 250.92 318.579 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
250.86 311.199 mo
250.86 311.619 251.22 311.979 251.7 311.979 cv
254.88 311.979 li
255.3 311.979 255.66 311.619 255.66 311.199 cv
255.66 300.939 li
255.66 300.519 255.3 300.159 254.88 300.159 cv
251.7 300.159 li
251.22 300.159 250.86 300.519 250.86 300.939 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 1 colr
ef
250.86 311.199 mo
250.86 311.619 251.22 311.979 251.7 311.979 cv
254.88 311.979 li
255.3 311.979 255.66 311.619 255.66 311.199 cv
255.66 300.939 li
255.66 300.519 255.3 300.159 254.88 300.159 cv
251.7 300.159 li
251.22 300.159 250.86 300.519 250.86 300.939 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
247.92 314.859 mo
249.9 308.379 li
250.38 308.499 li
248.4 314.979 li
cp
248.58 308.499 mo
250.86 306.039 li
251.46 309.339 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
255.9 305.979 mo
257.52 312.399 li
257.04 312.519 li
255.42 306.099 li
cp
258.6 311.619 mo
257.88 314.919 li
255.72 312.339 li
f
248.4 314.859 mo
250.44 321.219 li
249.96 321.339 li
247.92 314.979 li
cp
251.46 320.379 mo
250.92 323.679 li
248.58 321.219 li
f
255.48 323.619 mo
257.04 317.259 li
257.52 317.379 li
256.02 323.739 li
cp
255.72 317.499 mo
257.88 314.919 li
258.6 318.159 li
f
291.12 314.799 mo
291.12 316.539 291.78 317.919 292.5 317.919 cv
293.28 317.919 293.94 316.539 293.94 314.799 cv
293.94 313.059 293.28 311.679 292.5 311.679 cv
291.78 311.679 291.12 313.059 291.12 314.799 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
291.12 314.799 mo
291.12 316.539 291.78 317.919 292.5 317.919 cv
293.28 317.919 293.94 316.539 293.94 314.799 cv
293.94 313.059 293.28 311.679 292.5 311.679 cv
291.78 311.679 291.12 313.059 291.12 314.799 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
294.42 305.079 mo
294.42 306.819 295.08 308.199 295.86 308.199 cv
296.64 308.199 297.3 306.819 297.3 305.079 cv
297.3 303.399 296.64 301.959 295.86 301.959 cv
295.08 301.959 294.42 303.399 294.42 305.079 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
294.42 305.079 mo
294.42 306.819 295.08 308.199 295.86 308.199 cv
296.64 308.199 297.3 306.819 297.3 305.079 cv
297.3 303.399 296.64 301.959 295.86 301.959 cv
295.08 301.959 294.42 303.399 294.42 305.079 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
297.54 305.079 mo
298.8 312.519 li
298.26 312.639 li
297.06 305.139 li
cp
299.94 311.859 mo
298.92 315.039 li
297 312.339 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
327.42 314.979 mo
328.32 307.839 li
328.8 307.899 li
327.96 315.039 li
cp
327 308.199 mo
328.86 305.439 li
330 308.559 li
f
314.88 320.199 mo
314.88 320.619 315.24 320.979 315.66 320.979 cv
318.9 320.979 li
319.32 320.979 319.68 320.619 319.68 320.199 cv
319.68 309.939 li
319.68 309.519 319.32 309.159 318.9 309.159 cv
315.66 309.159 li
315.24 309.159 314.88 309.519 314.88 309.939 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .8 0 colr
ef
314.88 320.199 mo
314.88 320.619 315.24 320.979 315.66 320.979 cv
318.9 320.979 li
319.32 320.979 319.68 320.619 319.68 320.199 cv
319.68 309.939 li
319.68 309.519 319.32 309.159 318.9 309.159 cv
315.66 309.159 li
315.24 309.159 314.88 309.519 314.88 309.939 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
306.96 320.199 mo
306.96 320.619 307.32 320.979 307.74 320.979 cv
310.92 320.979 li
311.34 320.979 311.7 320.619 311.7 320.199 cv
311.7 309.939 li
311.7 309.519 311.34 309.159 310.92 309.159 cv
307.74 309.159 li
307.32 309.159 306.96 309.519 306.96 309.939 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
ef
306.96 320.199 mo
306.96 320.619 307.32 320.979 307.74 320.979 cv
310.92 320.979 li
311.34 320.979 311.7 320.619 311.7 320.199 cv
311.7 309.939 li
311.7 309.519 311.34 309.159 310.92 309.159 cv
307.74 309.159 li
307.32 309.159 306.96 309.519 306.96 309.939 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
298.92 320.199 mo
298.92 320.619 299.28 320.979 299.7 320.979 cv
302.88 320.979 li
303.36 320.979 303.66 320.619 303.66 320.199 cv
303.66 309.939 li
303.66 309.519 303.36 309.159 302.88 309.159 cv
299.7 309.159 li
299.28 309.159 298.92 309.519 298.92 309.939 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
298.92 320.199 mo
298.92 320.619 299.28 320.979 299.7 320.979 cv
302.88 320.979 li
303.36 320.979 303.66 320.619 303.66 320.199 cv
303.66 309.939 li
303.66 309.519 303.36 309.159 302.88 309.159 cv
299.7 309.159 li
299.28 309.159 298.92 309.519 298.92 309.939 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
322.86 320.199 mo
322.86 320.619 323.22 320.979 323.7 320.979 cv
326.88 320.979 li
327.3 320.979 327.66 320.619 327.66 320.199 cv
327.66 309.939 li
327.66 309.519 327.3 309.159 326.88 309.159 cv
323.7 309.159 li
323.22 309.159 322.86 309.519 322.86 309.939 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
ef
322.86 320.199 mo
322.86 320.619 323.22 320.979 323.7 320.979 cv
326.88 320.979 li
327.3 320.979 327.66 320.619 327.66 320.199 cv
327.66 309.939 li
327.66 309.519 327.3 309.159 326.88 309.159 cv
323.7 309.159 li
323.22 309.159 322.86 309.519 322.86 309.939 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
303.66 313.539 mo
306.66 315.039 li
303.66 316.539 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
311.64 313.539 mo
314.64 315.039 li
311.64 316.539 li
f
319.62 313.539 mo
322.62 315.039 li
319.62 316.539 li
f
314.7 300.939 mo
314.7 301.359 315.06 301.719 315.48 301.719 cv
318.72 301.719 li
319.14 301.719 319.5 301.359 319.5 300.939 cv
319.5 290.739 li
319.5 290.259 319.14 289.899 318.72 289.899 cv
315.48 289.899 li
315.06 289.899 314.7 290.259 314.7 290.739 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .8 0 colr
ef
314.7 300.939 mo
314.7 301.359 315.06 301.719 315.48 301.719 cv
318.72 301.719 li
319.14 301.719 319.5 301.359 319.5 300.939 cv
319.5 290.739 li
319.5 290.259 319.14 289.899 318.72 289.899 cv
315.48 289.899 li
315.06 289.899 314.7 290.259 314.7 290.739 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
306.72 300.939 mo
306.72 301.359 307.08 301.719 307.56 301.719 cv
310.68 301.719 li
311.16 301.719 311.52 301.359 311.52 300.939 cv
311.52 290.679 li
311.52 290.259 311.16 289.899 310.68 289.899 cv
307.56 289.899 li
307.08 289.899 306.72 290.259 306.72 290.679 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
ef
306.72 300.939 mo
306.72 301.359 307.08 301.719 307.56 301.719 cv
310.68 301.719 li
311.16 301.719 311.52 301.359 311.52 300.939 cv
311.52 290.679 li
311.52 290.259 311.16 289.899 310.68 289.899 cv
307.56 289.899 li
307.08 289.899 306.72 290.259 306.72 290.679 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
298.74 300.939 mo
298.74 301.359 299.1 301.719 299.52 301.719 cv
302.7 301.719 li
303.12 301.719 303.48 301.359 303.48 300.939 cv
303.48 290.679 li
303.48 290.259 303.12 289.899 302.7 289.899 cv
299.52 289.899 li
299.1 289.899 298.74 290.259 298.74 290.679 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
298.74 300.939 mo
298.74 301.359 299.1 301.719 299.52 301.719 cv
302.7 301.719 li
303.12 301.719 303.48 301.359 303.48 300.939 cv
303.48 290.679 li
303.48 290.259 303.12 289.899 302.7 289.899 cv
299.52 289.899 li
299.1 289.899 298.74 290.259 298.74 290.679 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
322.68 300.939 mo
322.68 301.359 323.04 301.719 323.46 301.719 cv
326.7 301.719 li
327.12 301.719 327.48 301.359 327.48 300.939 cv
327.48 290.739 li
327.48 290.259 327.12 289.899 326.7 289.899 cv
323.46 289.899 li
323.04 289.899 322.68 290.259 322.68 290.739 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
ef
322.68 300.939 mo
322.68 301.359 323.04 301.719 323.46 301.719 cv
326.7 301.719 li
327.12 301.719 327.48 301.359 327.48 300.939 cv
327.48 290.739 li
327.48 290.259 327.12 289.899 326.7 289.899 cv
323.46 289.899 li
323.04 289.899 322.68 290.259 322.68 290.739 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
303.48 294.279 mo
306.48 295.779 li
303.48 297.279 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
311.46 294.279 mo
314.46 295.779 li
311.46 297.279 li
f
319.44 294.279 mo
322.44 295.779 li
319.44 297.279 li
f
327.72 295.779 mo
328.74 302.919 li
328.26 302.979 li
327.24 295.839 li
cp
329.94 302.199 mo
328.86 305.439 li
326.94 302.679 li
f
297.06 305.079 mo
298.14 298.239 li
298.62 298.299 li
297.54 305.139 li
cp
296.82 298.539 mo
298.74 295.779 li
299.76 298.959 li
f
293.94 314.799 mo
294 307.599 li
294.48 307.599 li
294.42 314.799 li
cp
292.74 308.079 mo
294.24 305.079 li
295.74 308.079 li
f
328.86 305.439 mo
328.86 307.179 329.52 308.559 330.3 308.559 cv
331.08 308.559 331.68 307.179 331.68 305.439 cv
331.68 303.759 331.08 302.319 330.3 302.319 cv
329.52 302.319 328.86 303.759 328.86 305.439 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
328.86 305.439 mo
328.86 307.179 329.52 308.559 330.3 308.559 cv
331.08 308.559 331.68 307.179 331.68 305.439 cv
331.68 303.759 331.08 302.319 330.3 302.319 cv
329.52 302.319 328.86 303.759 328.86 305.439 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
332.16 305.439 mo
333.78 312.399 li
333.24 312.519 li
331.68 305.499 li
cp
334.86 311.679 mo
334.08 314.919 li
331.92 312.339 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
0 lc
294.3 315.219 mo
299.52 328.599 li
@
299.46 328.599 mo
331.38 328.599 li
@
331.14 328.539 mo
333.3 317.499 li
333.78 317.619 li
331.62 328.659 li
cp
331.98 317.739 mo
334.02 315.099 li
334.92 318.339 li
f
242.34 313.419 mo
245.4 314.859 li
242.4 316.419 li
f
260.76 314.679 mo
269.7 314.499 li
269.7 315.039 li
260.76 315.159 li
cp
269.16 313.299 mo
272.16 314.739 li
269.22 316.299 li
f
288.54 302.499 mo
290.82 312.279 li
290.34 312.399 li
288.06 302.619 li
cp
291.9 311.499 mo
291.12 314.799 li
288.96 312.219 li
f
286.2 302.559 mo
286.2 303.819 286.68 304.839 287.22 304.839 cv
287.82 304.839 288.3 303.819 288.3 302.559 cv
288.3 301.299 287.82 300.279 287.22 300.279 cv
286.68 300.279 286.2 301.299 286.2 302.559 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
1 lc
286.2 302.559 mo
286.2 303.819 286.68 304.839 287.22 304.839 cv
287.82 304.839 288.3 303.819 288.3 302.559 cv
288.3 301.299 287.82 300.279 287.22 300.279 cv
286.68 300.279 286.2 301.299 286.2 302.559 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
279.84 317.319 mo
279.84 317.739 280.14 318.099 280.62 318.099 cv
283.74 318.099 li
284.22 318.099 284.58 317.739 284.58 317.319 cv
284.58 306.999 li
284.58 306.579 284.22 306.219 283.74 306.219 cv
280.62 306.219 li
280.14 306.219 279.84 306.579 279.84 306.999 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
279.84 317.319 mo
279.84 317.739 280.14 318.099 280.62 318.099 cv
283.74 318.099 li
284.22 318.099 284.58 317.739 284.58 317.319 cv
284.58 306.999 li
284.58 306.579 284.22 306.219 283.74 306.219 cv
280.62 306.219 li
280.14 306.219 279.84 306.579 279.84 306.999 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
280.86 318.219 mo
280.86 318.639 281.22 318.999 281.64 318.999 cv
284.76 318.999 li
285.24 318.999 285.54 318.639 285.54 318.219 cv
285.54 307.959 li
285.54 307.539 285.24 307.179 284.76 307.179 cv
281.64 307.179 li
281.22 307.179 280.86 307.539 280.86 307.959 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
280.86 318.219 mo
280.86 318.639 281.22 318.999 281.64 318.999 cv
284.76 318.999 li
285.24 318.999 285.54 318.639 285.54 318.219 cv
285.54 307.959 li
285.54 307.539 285.24 307.179 284.76 307.179 cv
281.64 307.179 li
281.22 307.179 280.86 307.539 280.86 307.959 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
281.82 319.059 mo
281.82 319.479 282.18 319.839 282.6 319.839 cv
285.78 319.839 li
286.2 319.839 286.56 319.479 286.56 319.059 cv
286.56 308.799 li
286.56 308.379 286.2 308.019 285.78 308.019 cv
282.6 308.019 li
282.18 308.019 281.82 308.379 281.82 308.799 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
281.82 319.059 mo
281.82 319.479 282.18 319.839 282.6 319.839 cv
285.78 319.839 li
286.2 319.839 286.56 319.479 286.56 319.059 cv
286.56 308.799 li
286.56 308.379 286.2 308.019 285.78 308.019 cv
282.6 308.019 li
282.18 308.019 281.82 308.379 281.82 308.799 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
282.84 320.019 mo
282.84 320.439 283.14 320.799 283.62 320.799 cv
286.74 320.799 li
287.22 320.799 287.58 320.439 287.58 320.019 cv
287.58 309.759 li
287.58 309.339 287.22 308.979 286.74 308.979 cv
283.62 308.979 li
283.14 308.979 282.84 309.339 282.84 309.759 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
282.84 320.019 mo
282.84 320.439 283.14 320.799 283.62 320.799 cv
286.74 320.799 li
287.22 320.799 287.58 320.439 287.58 320.019 cv
287.58 309.759 li
287.58 309.339 287.22 308.979 286.74 308.979 cv
283.62 308.979 li
283.14 308.979 282.84 309.339 282.84 309.759 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
282 306.039 mo
284.16 304.059 li
284.52 304.419 li
282.36 306.399 li
cp
282.96 303.459 mo
286.2 302.559 li
285 305.679 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
283.02 306.999 mo
284.64 304.539 li
285.06 304.779 li
283.44 307.299 li
cp
283.32 304.239 mo
286.2 302.559 li
285.84 305.859 li
f
283.98 307.959 mo
285.12 304.779 li
285.54 304.959 li
284.4 308.139 li
cp
283.74 304.839 mo
286.2 302.559 li
286.56 305.859 li
f
284.94 308.919 mo
285.54 304.959 li
286.02 305.019 li
285.42 309.039 li
cp
284.22 305.259 mo
286.2 302.559 li
287.22 305.739 li
f
341.52 325.299 mo
341.28 320.679 li
341.82 320.619 li
342 325.299 li
cp
340.08 321.219 mo
341.46 318.159 li
343.08 321.099 li
f
341.52 325.239 mo
341.94 321.579 li
342.42 321.639 li
342 325.299 li
cp
340.62 321.939 mo
342.42 319.119 li
343.62 322.239 li
f
341.52 325.179 mo
342.9 322.899 li
343.32 323.199 li
341.94 325.419 li
cp
341.58 322.659 mo
344.46 320.919 li
344.16 324.279 li
f
341.52 325.179 mo
342.42 322.599 li
342.9 322.719 li
342 325.359 li
cp
341.04 322.659 mo
343.44 320.259 li
343.92 323.619 li
f
339.06 317.379 mo
339.06 317.799 339.42 318.159 339.84 318.159 cv
343.02 318.159 li
343.44 318.159 343.8 317.799 343.8 317.379 cv
343.8 307.119 li
343.8 306.699 343.44 306.339 343.02 306.339 cv
339.84 306.339 li
339.42 306.339 339.06 306.699 339.06 307.119 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
339.06 317.379 mo
339.06 317.799 339.42 318.159 339.84 318.159 cv
343.02 318.159 li
343.44 318.159 343.8 317.799 343.8 317.379 cv
343.8 307.119 li
343.8 306.699 343.44 306.339 343.02 306.339 cv
339.84 306.339 li
339.42 306.339 339.06 306.699 339.06 307.119 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
340.08 318.279 mo
340.08 318.759 340.44 319.119 340.86 319.119 cv
344.04 319.119 li
344.46 319.119 344.82 318.759 344.82 318.279 cv
344.82 308.079 li
344.82 307.659 344.46 307.299 344.04 307.299 cv
340.86 307.299 li
340.44 307.299 340.08 307.659 340.08 308.079 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
340.08 318.279 mo
340.08 318.759 340.44 319.119 340.86 319.119 cv
344.04 319.119 li
344.46 319.119 344.82 318.759 344.82 318.279 cv
344.82 308.079 li
344.82 307.659 344.46 307.299 344.04 307.299 cv
340.86 307.299 li
340.44 307.299 340.08 307.659 340.08 308.079 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
341.04 319.479 mo
341.04 319.959 341.4 320.259 341.88 320.259 cv
345 320.259 li
345.48 320.259 345.84 319.959 345.84 319.479 cv
345.84 309.219 li
345.84 308.739 345.48 308.439 345 308.439 cv
341.88 308.439 li
341.4 308.439 341.04 308.739 341.04 309.219 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
341.04 319.479 mo
341.04 319.959 341.4 320.259 341.88 320.259 cv
345 320.259 li
345.48 320.259 345.84 319.959 345.84 319.479 cv
345.84 309.219 li
345.84 308.739 345.48 308.439 345 308.439 cv
341.88 308.439 li
341.4 308.439 341.04 308.739 341.04 309.219 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
0 gry
PZPTUG+ArialMT-Identity-H*1 [0 -2.52 -2.52 0 0 0 ]msf
344.46 319.779 mo
(RectPolar)
[-1.79953 -1.3797 -1.25949 -.72049 -1.68033 -1.3797 -.599518 -1.31973 0 ]ysh
342.06 320.139 mo
342.06 320.559 342.42 320.919 342.84 320.919 cv
346.02 320.919 li
346.44 320.919 346.8 320.559 346.8 320.139 cv
346.8 309.879 li
346.8 309.459 346.44 309.099 346.02 309.099 cv
342.84 309.099 li
342.42 309.099 342.06 309.459 342.06 309.879 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
342.06 320.139 mo
342.06 320.559 342.42 320.919 342.84 320.919 cv
346.02 320.919 li
346.44 320.919 346.8 320.559 346.8 320.139 cv
346.8 309.879 li
346.8 309.459 346.44 309.099 346.02 309.099 cv
342.84 309.099 li
342.42 309.099 342.06 309.459 342.06 309.879 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
339.6 325.299 mo
339.6 326.559 340.08 327.579 340.68 327.579 cv
341.28 327.579 341.76 326.559 341.76 325.299 cv
341.76 323.979 341.28 322.959 340.68 322.959 cv
340.08 322.959 339.6 323.979 339.6 325.299 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
339.6 325.299 mo
339.6 326.559 340.08 327.579 340.68 327.579 cv
341.28 327.579 341.76 326.559 341.76 325.299 cv
341.76 323.979 341.28 322.959 340.68 322.959 cv
340.08 322.959 339.6 323.979 339.6 325.299 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
337.68 314.859 mo
339.36 322.779 li
338.88 322.899 li
337.2 314.979 li
cp
340.5 322.059 mo
339.6 325.299 li
337.56 322.659 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
341.28 306.159 mo
343.56 304.599 li
343.86 304.959 li
341.58 306.579 li
cp
342.42 303.819 mo
345.72 303.339 li
344.16 306.279 li
f
342.24 307.119 mo
343.92 305.079 li
344.34 305.439 li
342.6 307.419 li
cp
342.66 304.659 mo
345.72 303.339 li
344.94 306.639 li
f
343.2 308.319 mo
344.46 305.499 li
344.94 305.739 li
343.68 308.499 li
cp
343.14 305.439 mo
345.72 303.339 li
345.84 306.699 li
f
344.22 309.039 mo
344.94 305.739 li
345.42 305.859 li
344.7 309.159 li
cp
343.62 305.919 mo
345.72 303.339 li
346.56 306.579 li
f
334.26 314.919 mo
334.26 316.839 334.98 318.399 335.82 318.399 cv
336.72 318.399 337.44 316.839 337.44 314.919 cv
337.44 312.999 336.72 311.439 335.82 311.439 cv
334.98 311.439 334.26 312.999 334.26 314.919 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
334.26 314.919 mo
334.26 316.839 334.98 318.399 335.82 318.399 cv
336.72 318.399 337.44 316.839 337.44 314.919 cv
337.44 312.999 336.72 311.439 335.82 311.439 cv
334.98 311.439 334.26 312.999 334.26 314.919 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
347.16 301.779 mo
350.16 303.279 li
347.16 304.779 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
345.72 303.339 mo
345.72 304.599 346.2 305.679 346.8 305.679 cv
347.34 305.679 347.82 304.599 347.82 303.339 cv
347.82 302.079 347.34 301.059 346.8 301.059 cv
346.2 301.059 345.72 302.079 345.72 303.339 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
345.72 303.339 mo
345.72 304.599 346.2 305.679 346.8 305.679 cv
347.34 305.679 347.82 304.599 347.82 303.339 cv
347.82 302.079 347.34 301.059 346.8 301.059 cv
346.2 301.059 345.72 302.079 345.72 303.339 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
274.2 314.499 mo
278.4 313.419 li
278.52 313.899 li
274.32 314.979 li
cp
277.62 312.339 mo
280.86 313.059 li
278.34 315.219 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
274.2 314.499 mo
279.3 313.959 li
279.36 314.439 li
274.26 314.979 li
cp
278.7 312.759 mo
281.82 313.959 li
279 315.759 li
f
274.14 314.499 mo
277.44 312.999 li
277.62 313.419 li
274.38 314.979 li
cp
276.48 312.039 mo
279.84 312.159 li
277.74 314.799 li
f
274.26 314.499 mo
280.32 314.619 li
280.32 315.099 li
274.26 314.979 li
cp
279.84 313.359 mo
282.84 314.919 li
279.78 316.359 li
f
272.16 314.679 mo
272.16 315.939 272.64 316.959 273.24 316.959 cv
273.78 316.959 274.26 315.939 274.26 314.679 cv
274.26 313.419 273.78 312.399 273.24 312.399 cv
272.64 312.399 272.16 313.419 272.16 314.679 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
272.16 314.679 mo
272.16 315.939 272.64 316.959 273.24 316.959 cv
273.78 316.959 274.26 315.939 274.26 314.679 cv
274.26 313.419 273.78 312.399 273.24 312.399 cv
272.64 312.399 272.16 313.419 272.16 314.679 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
276.9 273.099 mo
276.9 274.839 277.5 276.219 278.34 276.219 cv
279.12 276.219 279.72 274.839 279.72 273.099 cv
279.72 271.359 279.12 269.979 278.34 269.979 cv
277.5 269.979 276.9 271.359 276.9 273.099 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
276.9 273.099 mo
276.9 274.839 277.5 276.219 278.34 276.219 cv
279.12 276.219 279.72 274.839 279.72 273.099 cv
279.72 271.359 279.12 269.979 278.34 269.979 cv
277.5 269.979 276.9 271.359 276.9 273.099 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
289.44 273.099 mo
289.44 274.839 290.1 276.219 290.88 276.219 cv
291.66 276.219 292.32 274.839 292.32 273.099 cv
292.32 271.359 291.66 269.979 290.88 269.979 cv
290.1 269.979 289.44 271.359 289.44 273.099 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
289.44 273.099 mo
289.44 274.839 290.1 276.219 290.88 276.219 cv
291.66 276.219 292.32 274.839 292.32 273.099 cv
292.32 271.359 291.66 269.979 290.88 269.979 cv
290.1 269.979 289.44 271.359 289.44 273.099 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
282.48 286.959 mo
282.48 287.439 282.84 287.799 283.32 287.799 cv
286.5 287.799 li
286.98 287.799 287.34 287.439 287.34 286.959 cv
287.34 276.759 li
287.34 276.339 286.98 275.979 286.5 275.979 cv
283.32 275.979 li
282.84 275.979 282.48 276.339 282.48 276.759 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 1 colr
ef
282.48 286.959 mo
282.48 287.439 282.84 287.799 283.32 287.799 cv
286.5 287.799 li
286.98 287.799 287.34 287.439 287.34 286.959 cv
287.34 276.759 li
287.34 276.339 286.98 275.979 286.5 275.979 cv
283.32 275.979 li
282.84 275.979 282.48 276.339 282.48 276.759 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
282.42 269.439 mo
282.42 269.859 282.78 270.219 283.26 270.219 cv
286.44 270.219 li
286.86 270.219 287.22 269.859 287.22 269.439 cv
287.22 259.239 li
287.22 258.759 286.86 258.399 286.44 258.399 cv
283.26 258.399 li
282.78 258.399 282.42 258.759 282.42 259.239 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 1 colr
ef
282.42 269.439 mo
282.42 269.859 282.78 270.219 283.26 270.219 cv
286.44 270.219 li
286.86 270.219 287.22 269.859 287.22 269.439 cv
287.22 259.239 li
287.22 258.759 286.86 258.399 286.44 258.399 cv
283.26 258.399 li
282.78 258.399 282.42 258.759 282.42 259.239 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
279.48 273.039 mo
281.46 266.619 li
281.94 266.739 li
279.96 273.159 li
cp
280.14 266.739 mo
282.42 264.279 li
283.02 267.579 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
287.52 264.219 mo
289.08 270.639 li
288.6 270.759 li
286.98 264.339 li
cp
290.16 269.799 mo
289.44 273.099 li
287.28 270.519 li
f
279.96 273.039 mo
282 279.399 li
281.52 279.519 li
279.48 273.159 li
cp
283.02 278.559 mo
282.48 281.859 li
280.14 279.459 li
f
287.04 281.799 mo
288.6 275.439 li
289.08 275.559 li
287.58 281.919 li
cp
287.28 275.679 mo
289.44 273.099 li
290.16 276.339 li
f
322.68 272.979 mo
322.68 274.719 323.34 276.099 324.12 276.099 cv
324.84 276.099 325.5 274.719 325.5 272.979 cv
325.5 271.239 324.84 269.859 324.12 269.859 cv
323.34 269.859 322.68 271.239 322.68 272.979 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
322.68 272.979 mo
322.68 274.719 323.34 276.099 324.12 276.099 cv
324.84 276.099 325.5 274.719 325.5 272.979 cv
325.5 271.239 324.84 269.859 324.12 269.859 cv
323.34 269.859 322.68 271.239 322.68 272.979 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
325.98 263.319 mo
325.98 265.059 326.64 266.499 327.42 266.499 cv
328.2 266.499 328.86 265.059 328.86 263.319 cv
328.86 261.639 328.2 260.199 327.42 260.199 cv
326.64 260.199 325.98 261.639 325.98 263.319 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
325.98 263.319 mo
325.98 265.059 326.64 266.499 327.42 266.499 cv
328.2 266.499 328.86 265.059 328.86 263.319 cv
328.86 261.639 328.2 260.199 327.42 260.199 cv
326.64 260.199 325.98 261.639 325.98 263.319 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
329.1 263.319 mo
330.36 270.699 li
329.82 270.819 li
328.62 263.379 li
cp
331.5 270.039 mo
330.48 273.219 li
328.56 270.519 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
358.98 273.219 mo
359.88 266.139 li
360.36 266.199 li
359.52 273.279 li
cp
358.56 266.439 mo
360.42 263.679 li
361.56 266.799 li
f
346.44 278.379 mo
346.44 278.799 346.8 279.159 347.22 279.159 cv
350.46 279.159 li
350.88 279.159 351.24 278.799 351.24 278.379 cv
351.24 268.179 li
351.24 267.699 350.88 267.339 350.46 267.339 cv
347.22 267.339 li
346.8 267.339 346.44 267.699 346.44 268.179 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .8 0 colr
ef
346.44 278.379 mo
346.44 278.799 346.8 279.159 347.22 279.159 cv
350.46 279.159 li
350.88 279.159 351.24 278.799 351.24 278.379 cv
351.24 268.179 li
351.24 267.699 350.88 267.339 350.46 267.339 cv
347.22 267.339 li
346.8 267.339 346.44 267.699 346.44 268.179 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
338.52 278.379 mo
338.52 278.799 338.88 279.159 339.3 279.159 cv
342.48 279.159 li
342.9 279.159 343.26 278.799 343.26 278.379 cv
343.26 268.119 li
343.26 267.699 342.9 267.339 342.48 267.339 cv
339.3 267.339 li
338.88 267.339 338.52 267.699 338.52 268.119 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
ef
338.52 278.379 mo
338.52 278.799 338.88 279.159 339.3 279.159 cv
342.48 279.159 li
342.9 279.159 343.26 278.799 343.26 278.379 cv
343.26 268.119 li
343.26 267.699 342.9 267.339 342.48 267.339 cv
339.3 267.339 li
338.88 267.339 338.52 267.699 338.52 268.119 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
330.48 278.379 mo
330.48 278.799 330.84 279.159 331.26 279.159 cv
334.44 279.159 li
334.92 279.159 335.22 278.799 335.22 278.379 cv
335.22 268.119 li
335.22 267.699 334.92 267.339 334.44 267.339 cv
331.26 267.339 li
330.84 267.339 330.48 267.699 330.48 268.119 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
330.48 278.379 mo
330.48 278.799 330.84 279.159 331.26 279.159 cv
334.44 279.159 li
334.92 279.159 335.22 278.799 335.22 278.379 cv
335.22 268.119 li
335.22 267.699 334.92 267.339 334.44 267.339 cv
331.26 267.339 li
330.84 267.339 330.48 267.699 330.48 268.119 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
354.42 278.379 mo
354.42 278.799 354.78 279.159 355.26 279.159 cv
358.44 279.159 li
358.86 279.159 359.22 278.799 359.22 278.379 cv
359.22 268.179 li
359.22 267.699 358.86 267.339 358.44 267.339 cv
355.26 267.339 li
354.78 267.339 354.42 267.699 354.42 268.179 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
ef
354.42 278.379 mo
354.42 278.799 354.78 279.159 355.26 279.159 cv
358.44 279.159 li
358.86 279.159 359.22 278.799 359.22 278.379 cv
359.22 268.179 li
359.22 267.699 358.86 267.339 358.44 267.339 cv
355.26 267.339 li
354.78 267.339 354.42 267.699 354.42 268.179 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
335.22 271.719 mo
338.22 273.219 li
335.22 274.719 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
343.2 271.719 mo
346.2 273.219 li
343.2 274.719 li
f
351.18 271.719 mo
354.18 273.219 li
351.18 274.719 li
f
346.26 259.179 mo
346.26 259.599 346.62 259.959 347.04 259.959 cv
350.28 259.959 li
350.7 259.959 351.06 259.599 351.06 259.179 cv
351.06 248.979 li
351.06 248.499 350.7 248.139 350.28 248.139 cv
347.04 248.139 li
346.62 248.139 346.26 248.499 346.26 248.979 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .8 0 colr
ef
346.26 259.179 mo
346.26 259.599 346.62 259.959 347.04 259.959 cv
350.28 259.959 li
350.7 259.959 351.06 259.599 351.06 259.179 cv
351.06 248.979 li
351.06 248.499 350.7 248.139 350.28 248.139 cv
347.04 248.139 li
346.62 248.139 346.26 248.499 346.26 248.979 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
338.34 259.179 mo
338.34 259.599 338.64 259.959 339.12 259.959 cv
342.24 259.959 li
342.72 259.959 343.08 259.599 343.08 259.179 cv
343.08 248.979 li
343.08 248.499 342.72 248.139 342.24 248.139 cv
339.12 248.139 li
338.64 248.139 338.34 248.499 338.34 248.979 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
ef
338.34 259.179 mo
338.34 259.599 338.64 259.959 339.12 259.959 cv
342.24 259.959 li
342.72 259.959 343.08 259.599 343.08 259.179 cv
343.08 248.979 li
343.08 248.499 342.72 248.139 342.24 248.139 cv
339.12 248.139 li
338.64 248.139 338.34 248.499 338.34 248.979 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
330.3 259.179 mo
330.3 259.599 330.66 259.959 331.08 259.959 cv
334.26 259.959 li
334.68 259.959 335.04 259.599 335.04 259.179 cv
335.04 248.979 li
335.04 248.499 334.68 248.139 334.26 248.139 cv
331.08 248.139 li
330.66 248.139 330.3 248.499 330.3 248.979 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
330.3 259.179 mo
330.3 259.599 330.66 259.959 331.08 259.959 cv
334.26 259.959 li
334.68 259.959 335.04 259.599 335.04 259.179 cv
335.04 248.979 li
335.04 248.499 334.68 248.139 334.26 248.139 cv
331.08 248.139 li
330.66 248.139 330.3 248.499 330.3 248.979 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
354.24 259.179 mo
354.24 259.599 354.6 259.959 355.08 259.959 cv
358.26 259.959 li
358.68 259.959 359.04 259.599 359.04 259.179 cv
359.04 248.979 li
359.04 248.499 358.68 248.139 358.26 248.139 cv
355.08 248.139 li
354.6 248.139 354.24 248.499 354.24 248.979 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
ef
354.24 259.179 mo
354.24 259.599 354.6 259.959 355.08 259.959 cv
358.26 259.959 li
358.68 259.959 359.04 259.599 359.04 259.179 cv
359.04 248.979 li
359.04 248.499 358.68 248.139 358.26 248.139 cv
355.08 248.139 li
354.6 248.139 354.24 248.499 354.24 248.979 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
335.04 252.519 mo
338.04 254.019 li
335.04 255.519 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
343.02 252.519 mo
346.02 254.019 li
343.02 255.519 li
f
351 252.519 mo
354 254.019 li
351 255.519 li
f
359.28 254.019 mo
360.3 261.159 li
359.82 261.219 li
358.8 254.079 li
cp
361.5 260.499 mo
360.42 263.679 li
358.5 260.919 li
f
328.62 263.319 mo
329.7 256.479 li
330.18 256.539 li
329.1 263.379 li
cp
328.38 256.779 mo
330.3 254.019 li
331.32 257.259 li
f
325.5 272.979 mo
325.56 265.839 li
326.04 265.839 li
325.98 272.979 li
cp
324.3 266.319 mo
325.8 263.319 li
327.3 266.379 li
f
360.42 263.679 mo
360.42 265.419 361.08 266.799 361.86 266.799 cv
362.64 266.799 363.24 265.419 363.24 263.679 cv
363.24 261.999 362.64 260.619 361.86 260.619 cv
361.08 260.619 360.42 261.999 360.42 263.679 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
360.42 263.679 mo
360.42 265.419 361.08 266.799 361.86 266.799 cv
362.64 266.799 363.24 265.419 363.24 263.679 cv
363.24 261.999 362.64 260.619 361.86 260.619 cv
361.08 260.619 360.42 261.999 360.42 263.679 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
363.72 263.619 mo
365.34 270.579 li
364.86 270.699 li
363.24 263.739 li
cp
366.42 269.859 mo
365.64 273.099 li
363.48 270.519 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
0 lc
325.86 273.399 mo
331.08 286.779 li
@
331.02 286.779 mo
362.94 286.779 li
@
362.7 286.719 mo
364.86 275.679 li
365.34 275.799 li
363.18 286.839 li
cp
363.54 275.919 mo
365.58 273.279 li
366.48 276.519 li
f
273.9 271.599 mo
276.96 273.039 li
273.96 274.599 li
f
292.32 272.859 mo
301.26 272.679 li
301.26 273.219 li
292.32 273.339 li
cp
300.72 271.479 mo
303.72 272.919 li
300.78 274.479 li
f
320.1 260.739 mo
322.38 270.459 li
321.9 270.579 li
319.62 260.859 li
cp
323.46 269.739 mo
322.68 272.979 li
320.52 270.399 li
f
317.76 260.799 mo
317.76 262.059 318.24 263.079 318.84 263.079 cv
319.38 263.079 319.86 262.059 319.86 260.799 cv
319.86 259.479 319.38 258.459 318.84 258.459 cv
318.24 258.459 317.76 259.479 317.76 260.799 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
1 lc
317.76 260.799 mo
317.76 262.059 318.24 263.079 318.84 263.079 cv
319.38 263.079 319.86 262.059 319.86 260.799 cv
319.86 259.479 319.38 258.459 318.84 258.459 cv
318.24 258.459 317.76 259.479 317.76 260.799 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
311.4 275.499 mo
311.4 275.919 311.7 276.279 312.18 276.279 cv
315.36 276.279 li
315.78 276.279 316.14 275.919 316.14 275.499 cv
316.14 265.239 li
316.14 264.819 315.78 264.459 315.36 264.459 cv
312.18 264.459 li
311.7 264.459 311.4 264.819 311.4 265.239 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
311.4 275.499 mo
311.4 275.919 311.7 276.279 312.18 276.279 cv
315.36 276.279 li
315.78 276.279 316.14 275.919 316.14 275.499 cv
316.14 265.239 li
316.14 264.819 315.78 264.459 315.36 264.459 cv
312.18 264.459 li
311.7 264.459 311.4 264.819 311.4 265.239 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
312.42 276.399 mo
312.42 276.819 312.78 277.179 313.2 277.179 cv
316.32 277.179 li
316.8 277.179 317.1 276.819 317.1 276.399 cv
317.1 266.139 li
317.1 265.719 316.8 265.359 316.32 265.359 cv
313.2 265.359 li
312.78 265.359 312.42 265.719 312.42 266.139 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
312.42 276.399 mo
312.42 276.819 312.78 277.179 313.2 277.179 cv
316.32 277.179 li
316.8 277.179 317.1 276.819 317.1 276.399 cv
317.1 266.139 li
317.1 265.719 316.8 265.359 316.32 265.359 cv
313.2 265.359 li
312.78 265.359 312.42 265.719 312.42 266.139 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
313.38 277.299 mo
313.38 277.719 313.74 278.079 314.16 278.079 cv
317.34 278.079 li
317.76 278.079 318.12 277.719 318.12 277.299 cv
318.12 267.099 li
318.12 266.619 317.76 266.259 317.34 266.259 cv
314.16 266.259 li
313.74 266.259 313.38 266.619 313.38 267.099 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
313.38 277.299 mo
313.38 277.719 313.74 278.079 314.16 278.079 cv
317.34 278.079 li
317.76 278.079 318.12 277.719 318.12 277.299 cv
318.12 267.099 li
318.12 266.619 317.76 266.259 317.34 266.259 cv
314.16 266.259 li
313.74 266.259 313.38 266.619 313.38 267.099 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
314.4 278.199 mo
314.4 278.619 314.7 278.979 315.18 278.979 cv
318.36 278.979 li
318.78 278.979 319.14 278.619 319.14 278.199 cv
319.14 267.939 li
319.14 267.519 318.78 267.159 318.36 267.159 cv
315.18 267.159 li
314.7 267.159 314.4 267.519 314.4 267.939 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
314.4 278.199 mo
314.4 278.619 314.7 278.979 315.18 278.979 cv
318.36 278.979 li
318.78 278.979 319.14 278.619 319.14 278.199 cv
319.14 267.939 li
319.14 267.519 318.78 267.159 318.36 267.159 cv
315.18 267.159 li
314.7 267.159 314.4 267.519 314.4 267.939 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
313.56 264.279 mo
315.72 262.299 li
316.08 262.659 li
313.92 264.639 li
cp
314.52 261.699 mo
317.76 260.799 li
316.56 263.919 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
314.58 265.239 mo
316.2 262.779 li
316.62 263.019 li
315 265.479 li
cp
314.88 262.479 mo
317.76 260.799 li
317.4 264.099 li
f
315.54 266.199 mo
316.68 263.079 li
317.1 263.199 li
315.96 266.379 li
cp
315.3 263.079 mo
317.76 260.799 li
318.12 264.099 li
f
316.5 267.099 mo
317.1 263.199 li
317.58 263.319 li
316.98 267.219 li
cp
315.78 263.499 mo
317.76 260.799 li
318.78 263.979 li
f
373.08 283.479 mo
372.84 278.859 li
373.38 278.859 li
373.56 283.479 li
cp
371.64 279.399 mo
373.02 276.339 li
374.64 279.279 li
f
373.08 283.419 mo
373.5 279.759 li
373.98 279.819 li
373.56 283.479 li
cp
372.18 280.119 mo
373.98 277.299 li
375.18 280.419 li
f
373.08 283.359 mo
374.46 281.079 li
374.88 281.379 li
373.5 283.599 li
cp
373.14 280.899 mo
376.02 279.099 li
375.72 282.459 li
f
373.08 283.419 mo
373.98 280.779 li
374.46 280.899 li
373.56 283.539 li
cp
372.6 280.839 mo
375 278.499 li
375.48 281.799 li
f
370.62 275.559 mo
370.62 275.979 370.98 276.339 371.4 276.339 cv
374.58 276.339 li
375 276.339 375.36 275.979 375.36 275.559 cv
375.36 265.419 li
375.36 264.939 375 264.579 374.58 264.579 cv
371.4 264.579 li
370.98 264.579 370.62 264.939 370.62 265.419 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
370.62 275.559 mo
370.62 275.979 370.98 276.339 371.4 276.339 cv
374.58 276.339 li
375 276.339 375.36 275.979 375.36 275.559 cv
375.36 265.419 li
375.36 264.939 375 264.579 374.58 264.579 cv
371.4 264.579 li
370.98 264.579 370.62 264.939 370.62 265.419 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
371.64 276.519 mo
371.64 276.939 372 277.299 372.42 277.299 cv
375.6 277.299 li
376.02 277.299 376.38 276.939 376.38 276.519 cv
376.38 266.259 li
376.38 265.839 376.02 265.479 375.6 265.479 cv
372.42 265.479 li
372 265.479 371.64 265.839 371.64 266.259 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
371.64 276.519 mo
371.64 276.939 372 277.299 372.42 277.299 cv
375.6 277.299 li
376.02 277.299 376.38 276.939 376.38 276.519 cv
376.38 266.259 li
376.38 265.839 376.02 265.479 375.6 265.479 cv
372.42 265.479 li
372 265.479 371.64 265.839 371.64 266.259 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
372.6 277.659 mo
372.6 278.139 372.96 278.499 373.44 278.499 cv
376.56 278.499 li
377.04 278.499 377.4 278.139 377.4 277.659 cv
377.4 267.459 li
377.4 267.039 377.04 266.679 376.56 266.679 cv
373.44 266.679 li
372.96 266.679 372.6 267.039 372.6 267.459 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
372.6 277.659 mo
372.6 278.139 372.96 278.499 373.44 278.499 cv
376.56 278.499 li
377.04 278.499 377.4 278.139 377.4 277.659 cv
377.4 267.459 li
377.4 267.039 377.04 266.679 376.56 266.679 cv
373.44 266.679 li
372.96 266.679 372.6 267.039 372.6 267.459 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
0 gry
PZPTUG+ArialMT-Identity-H*1 [0 -2.52 -2.52 0 0 0 ]msf
376.02 277.959 mo
(RectPolar)
[-1.79953 -1.3797 -1.25949 -.72049 -1.68033 -1.3797 -.599518 -1.31973 0 ]ysh
373.62 278.319 mo
373.62 278.739 373.98 279.099 374.4 279.099 cv
377.58 279.099 li
378 279.099 378.36 278.739 378.36 278.319 cv
378.36 268.059 li
378.36 267.639 378 267.279 377.58 267.279 cv
374.4 267.279 li
373.98 267.279 373.62 267.639 373.62 268.059 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
373.62 278.319 mo
373.62 278.739 373.98 279.099 374.4 279.099 cv
377.58 279.099 li
378 279.099 378.36 278.739 378.36 278.319 cv
378.36 268.059 li
378.36 267.639 378 267.279 377.58 267.279 cv
374.4 267.279 li
373.98 267.279 373.62 267.639 373.62 268.059 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
371.16 283.479 mo
371.16 284.739 371.64 285.759 372.24 285.759 cv
372.84 285.759 373.32 284.739 373.32 283.479 cv
373.32 282.219 372.84 281.139 372.24 281.139 cv
371.64 281.139 371.16 282.219 371.16 283.479 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
371.16 283.479 mo
371.16 284.739 371.64 285.759 372.24 285.759 cv
372.84 285.759 373.32 284.739 373.32 283.479 cv
373.32 282.219 372.84 281.139 372.24 281.139 cv
371.64 281.139 371.16 282.219 371.16 283.479 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
369.24 273.039 mo
370.92 280.959 li
370.44 281.079 li
368.76 273.159 li
cp
372.06 280.239 mo
371.16 283.479 li
369.12 280.839 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
372.84 264.399 mo
375.12 262.779 li
375.42 263.199 li
373.14 264.819 li
cp
373.98 262.059 mo
377.34 261.519 li
375.72 264.519 li
f
373.8 265.299 mo
375.48 263.259 li
375.9 263.619 li
374.16 265.659 li
cp
374.22 262.839 mo
377.34 261.519 li
376.5 264.819 li
f
374.76 266.559 mo
376.08 263.739 li
376.5 263.919 li
375.24 266.739 li
cp
374.7 263.679 mo
377.34 261.519 li
377.46 264.879 li
f
375.78 267.219 mo
376.5 263.919 li
376.98 264.039 li
376.26 267.339 li
cp
375.18 264.099 mo
377.34 261.519 li
378.12 264.819 li
f
365.82 273.099 mo
365.82 275.019 366.54 276.579 367.38 276.579 cv
368.28 276.579 369 275.019 369 273.099 cv
369 271.179 368.28 269.619 367.38 269.619 cv
366.54 269.619 365.82 271.179 365.82 273.099 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
365.82 273.099 mo
365.82 275.019 366.54 276.579 367.38 276.579 cv
368.28 276.579 369 275.019 369 273.099 cv
369 271.179 368.28 269.619 367.38 269.619 cv
366.54 269.619 365.82 271.179 365.82 273.099 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
378.78 259.959 mo
381.72 261.519 li
378.72 262.959 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
377.34 261.579 mo
377.34 262.839 377.76 263.859 378.36 263.859 cv
378.9 263.859 379.38 262.839 379.38 261.579 cv
379.38 260.319 378.9 259.299 378.36 259.299 cv
377.76 259.299 377.34 260.319 377.34 261.579 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
377.34 261.579 mo
377.34 262.839 377.76 263.859 378.36 263.859 cv
378.9 263.859 379.38 262.839 379.38 261.579 cv
379.38 260.319 378.9 259.299 378.36 259.299 cv
377.76 259.299 377.34 260.319 377.34 261.579 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
305.76 272.679 mo
309.96 271.659 li
310.08 272.139 li
305.88 273.159 li
cp
309.18 270.519 mo
312.42 271.299 li
309.9 273.459 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
305.76 272.679 mo
310.86 272.139 li
310.92 272.679 li
305.82 273.159 li
cp
310.26 270.939 mo
313.38 272.139 li
310.56 273.939 li
f
305.7 272.679 mo
309 271.179 li
309.18 271.599 li
305.94 273.159 li
cp
308.04 270.219 mo
311.4 270.339 li
309.3 272.979 li
f
305.82 272.679 mo
311.88 272.799 li
311.88 273.279 li
305.82 273.159 li
cp
311.4 271.539 mo
314.4 273.099 li
311.34 274.539 li
f
303.72 272.919 mo
303.72 274.179 304.2 275.199 304.8 275.199 cv
305.34 275.199 305.82 274.179 305.82 272.919 cv
305.82 271.659 305.34 270.579 304.8 270.579 cv
304.2 270.579 303.72 271.659 303.72 272.919 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
303.72 272.919 mo
303.72 274.179 304.2 275.199 304.8 275.199 cv
305.34 275.199 305.82 274.179 305.82 272.919 cv
305.82 271.659 305.34 270.579 304.8 270.579 cv
304.2 270.579 303.72 271.659 303.72 272.919 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
307.44 231.399 mo
307.44 233.139 308.1 234.519 308.88 234.519 cv
309.66 234.519 310.32 233.139 310.32 231.399 cv
310.32 229.659 309.66 228.279 308.88 228.279 cv
308.1 228.279 307.44 229.659 307.44 231.399 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
307.44 231.399 mo
307.44 233.139 308.1 234.519 308.88 234.519 cv
309.66 234.519 310.32 233.139 310.32 231.399 cv
310.32 229.659 309.66 228.279 308.88 228.279 cv
308.1 228.279 307.44 229.659 307.44 231.399 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
319.98 231.399 mo
319.98 233.139 320.64 234.519 321.42 234.519 cv
322.2 234.519 322.86 233.139 322.86 231.399 cv
322.86 229.659 322.2 228.279 321.42 228.279 cv
320.64 228.279 319.98 229.659 319.98 231.399 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
319.98 231.399 mo
319.98 233.139 320.64 234.519 321.42 234.519 cv
322.2 234.519 322.86 233.139 322.86 231.399 cv
322.86 229.659 322.2 228.279 321.42 228.279 cv
320.64 228.279 319.98 229.659 319.98 231.399 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
313.08 245.319 mo
313.08 245.739 313.44 246.099 313.86 246.099 cv
317.1 246.099 li
317.52 246.099 317.88 245.739 317.88 245.319 cv
317.88 235.059 li
317.88 234.639 317.52 234.279 317.1 234.279 cv
313.86 234.279 li
313.44 234.279 313.08 234.639 313.08 235.059 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 1 colr
ef
313.08 245.319 mo
313.08 245.739 313.44 246.099 313.86 246.099 cv
317.1 246.099 li
317.52 246.099 317.88 245.739 317.88 245.319 cv
317.88 235.059 li
317.88 234.639 317.52 234.279 317.1 234.279 cv
313.86 234.279 li
313.44 234.279 313.08 234.639 313.08 235.059 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
313.02 227.739 mo
313.02 228.159 313.38 228.519 313.8 228.519 cv
316.98 228.519 li
317.46 228.519 317.82 228.159 317.82 227.739 cv
317.82 217.539 li
317.82 217.059 317.46 216.699 316.98 216.699 cv
313.8 216.699 li
313.38 216.699 313.02 217.059 313.02 217.539 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 1 colr
ef
313.02 227.739 mo
313.02 228.159 313.38 228.519 313.8 228.519 cv
316.98 228.519 li
317.46 228.519 317.82 228.159 317.82 227.739 cv
317.82 217.539 li
317.82 217.059 317.46 216.699 316.98 216.699 cv
313.8 216.699 li
313.38 216.699 313.02 217.059 313.02 217.539 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
310.08 231.339 mo
312 224.919 li
312.48 225.039 li
310.56 231.459 li
cp
310.68 225.039 mo
313.02 222.579 li
313.56 225.879 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
318.06 222.519 mo
319.62 228.939 li
319.14 229.059 li
317.58 222.639 li
cp
320.76 228.159 mo
319.98 231.399 li
317.82 228.879 li
f
310.56 231.339 mo
312.54 237.699 li
312.06 237.879 li
310.08 231.459 li
cp
313.62 236.859 mo
313.08 240.159 li
310.74 237.759 li
f
317.64 240.099 mo
319.14 233.799 li
319.68 233.919 li
318.12 240.219 li
cp
317.82 233.979 mo
319.98 231.399 li
320.76 234.699 li
f
353.22 231.279 mo
353.22 233.019 353.88 234.399 354.66 234.399 cv
355.44 234.399 356.04 233.019 356.04 231.279 cv
356.04 229.539 355.44 228.159 354.66 228.159 cv
353.88 228.159 353.22 229.539 353.22 231.279 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
353.22 231.279 mo
353.22 233.019 353.88 234.399 354.66 234.399 cv
355.44 234.399 356.04 233.019 356.04 231.279 cv
356.04 229.539 355.44 228.159 354.66 228.159 cv
353.88 228.159 353.22 229.539 353.22 231.279 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
356.58 221.679 mo
356.58 223.359 357.18 224.799 358.02 224.799 cv
358.8 224.799 359.46 223.359 359.46 221.679 cv
359.46 219.939 358.8 218.559 358.02 218.559 cv
357.18 218.559 356.58 219.939 356.58 221.679 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
356.58 221.679 mo
356.58 223.359 357.18 224.799 358.02 224.799 cv
358.8 224.799 359.46 223.359 359.46 221.679 cv
359.46 219.939 358.8 218.559 358.02 218.559 cv
357.18 218.559 356.58 219.939 356.58 221.679 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
359.7 221.619 mo
360.9 228.999 li
360.42 229.119 li
359.16 221.679 li
cp
362.04 228.339 mo
361.08 231.519 li
359.1 228.819 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
389.58 231.519 mo
390.42 224.439 li
390.96 224.499 li
390.06 231.579 li
cp
389.16 224.739 mo
391.02 221.979 li
392.1 225.159 li
f
376.98 236.679 mo
376.98 237.099 377.34 237.459 377.82 237.459 cv
381 237.459 li
381.48 237.459 381.84 237.099 381.84 236.679 cv
381.84 226.479 li
381.84 225.999 381.48 225.639 381 225.639 cv
377.82 225.639 li
377.34 225.639 376.98 225.999 376.98 226.479 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .8 0 colr
ef
376.98 236.679 mo
376.98 237.099 377.34 237.459 377.82 237.459 cv
381 237.459 li
381.48 237.459 381.84 237.099 381.84 236.679 cv
381.84 226.479 li
381.84 225.999 381.48 225.639 381 225.639 cv
377.82 225.639 li
377.34 225.639 376.98 225.999 376.98 226.479 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
369.06 236.679 mo
369.06 237.099 369.42 237.459 369.84 237.459 cv
373.02 237.459 li
373.44 237.459 373.8 237.099 373.8 236.679 cv
373.8 226.479 li
373.8 225.999 373.44 225.639 373.02 225.639 cv
369.84 225.639 li
369.42 225.639 369.06 225.999 369.06 226.479 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
ef
369.06 236.679 mo
369.06 237.099 369.42 237.459 369.84 237.459 cv
373.02 237.459 li
373.44 237.459 373.8 237.099 373.8 236.679 cv
373.8 226.479 li
373.8 225.999 373.44 225.639 373.02 225.639 cv
369.84 225.639 li
369.42 225.639 369.06 225.999 369.06 226.479 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
361.08 236.679 mo
361.08 237.099 361.44 237.459 361.86 237.459 cv
365.04 237.459 li
365.46 237.459 365.82 237.099 365.82 236.679 cv
365.82 226.479 li
365.82 225.999 365.46 225.639 365.04 225.639 cv
361.86 225.639 li
361.44 225.639 361.08 225.999 361.08 226.479 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
361.08 236.679 mo
361.08 237.099 361.44 237.459 361.86 237.459 cv
365.04 237.459 li
365.46 237.459 365.82 237.099 365.82 236.679 cv
365.82 226.479 li
365.82 225.999 365.46 225.639 365.04 225.639 cv
361.86 225.639 li
361.44 225.639 361.08 225.999 361.08 226.479 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
385.02 236.679 mo
385.02 237.099 385.38 237.459 385.8 237.459 cv
388.98 237.459 li
389.46 237.459 389.82 237.099 389.82 236.679 cv
389.82 226.479 li
389.82 225.999 389.46 225.639 388.98 225.639 cv
385.8 225.639 li
385.38 225.639 385.02 225.999 385.02 226.479 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
ef
385.02 236.679 mo
385.02 237.099 385.38 237.459 385.8 237.459 cv
388.98 237.459 li
389.46 237.459 389.82 237.099 389.82 236.679 cv
389.82 226.479 li
389.82 225.999 389.46 225.639 388.98 225.639 cv
385.8 225.639 li
385.38 225.639 385.02 225.999 385.02 226.479 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
365.82 230.019 mo
368.82 231.519 li
365.82 233.019 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
373.74 230.019 mo
376.74 231.519 li
373.74 233.019 li
f
381.72 230.019 mo
384.72 231.519 li
381.72 233.019 li
f
376.8 217.479 mo
376.8 217.899 377.16 218.259 377.64 218.259 cv
380.82 218.259 li
381.24 218.259 381.6 217.899 381.6 217.479 cv
381.6 207.279 li
381.6 206.859 381.24 206.499 380.82 206.499 cv
377.64 206.499 li
377.16 206.499 376.8 206.859 376.8 207.279 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .8 0 colr
ef
376.8 217.479 mo
376.8 217.899 377.16 218.259 377.64 218.259 cv
380.82 218.259 li
381.24 218.259 381.6 217.899 381.6 217.479 cv
381.6 207.279 li
381.6 206.859 381.24 206.499 380.82 206.499 cv
377.64 206.499 li
377.16 206.499 376.8 206.859 376.8 207.279 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
368.88 217.479 mo
368.88 217.959 369.24 218.259 369.66 218.259 cv
372.84 218.259 li
373.26 218.259 373.62 217.959 373.62 217.479 cv
373.62 207.279 li
373.62 206.799 373.26 206.499 372.84 206.499 cv
369.66 206.499 li
369.24 206.499 368.88 206.799 368.88 207.279 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
ef
368.88 217.479 mo
368.88 217.959 369.24 218.259 369.66 218.259 cv
372.84 218.259 li
373.26 218.259 373.62 217.959 373.62 217.479 cv
373.62 207.279 li
373.62 206.799 373.26 206.499 372.84 206.499 cv
369.66 206.499 li
369.24 206.499 368.88 206.799 368.88 207.279 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
360.9 217.479 mo
360.9 217.959 361.2 218.259 361.68 218.259 cv
364.86 218.259 li
365.28 218.259 365.64 217.959 365.64 217.479 cv
365.64 207.279 li
365.64 206.799 365.28 206.499 364.86 206.499 cv
361.68 206.499 li
361.2 206.499 360.9 206.799 360.9 207.279 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
360.9 217.479 mo
360.9 217.959 361.2 218.259 361.68 218.259 cv
364.86 218.259 li
365.28 218.259 365.64 217.959 365.64 217.479 cv
365.64 207.279 li
365.64 206.799 365.28 206.499 364.86 206.499 cv
361.68 206.499 li
361.2 206.499 360.9 206.799 360.9 207.279 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
384.84 217.479 mo
384.84 217.899 385.14 218.259 385.62 218.259 cv
388.8 218.259 li
389.28 218.259 389.64 217.899 389.64 217.479 cv
389.64 207.279 li
389.64 206.859 389.28 206.499 388.8 206.499 cv
385.62 206.499 li
385.14 206.499 384.84 206.859 384.84 207.279 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
ef
384.84 217.479 mo
384.84 217.899 385.14 218.259 385.62 218.259 cv
388.8 218.259 li
389.28 218.259 389.64 217.899 389.64 217.479 cv
389.64 207.279 li
389.64 206.859 389.28 206.499 388.8 206.499 cv
385.62 206.499 li
385.14 206.499 384.84 206.859 384.84 207.279 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
365.64 210.819 mo
368.64 212.319 li
365.64 213.819 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
373.56 210.819 mo
376.56 212.319 li
373.56 213.819 li
f
381.54 210.819 mo
384.54 212.319 li
381.54 213.819 li
f
389.88 212.319 mo
390.9 219.459 li
390.42 219.519 li
389.4 212.379 li
cp
392.04 218.799 mo
391.02 221.979 li
389.1 219.219 li
f
359.16 221.619 mo
360.24 214.779 li
360.72 214.839 li
359.7 221.679 li
cp
358.92 215.079 mo
360.9 212.319 li
361.92 215.559 li
f
356.04 231.279 mo
356.1 224.139 li
356.58 224.139 li
356.58 231.279 li
cp
354.84 224.679 mo
356.4 221.679 li
357.84 224.679 li
f
391.02 221.979 mo
391.02 223.719 391.62 225.099 392.4 225.099 cv
393.18 225.099 393.84 223.719 393.84 221.979 cv
393.84 220.299 393.18 218.919 392.4 218.919 cv
391.62 218.919 391.02 220.299 391.02 221.979 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
391.02 221.979 mo
391.02 223.719 391.62 225.099 392.4 225.099 cv
393.18 225.099 393.84 223.719 393.84 221.979 cv
393.84 220.299 393.18 218.919 392.4 218.919 cv
391.62 218.919 391.02 220.299 391.02 221.979 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
394.32 221.919 mo
395.88 228.939 li
395.4 228.999 li
393.84 222.039 li
cp
396.96 228.159 mo
396.18 231.399 li
394.08 228.819 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
0 lc
356.46 231.699 mo
361.62 245.079 li
@
361.56 245.079 mo
393.48 245.079 li
@
393.24 245.079 mo
395.4 233.979 li
395.88 234.099 li
393.72 245.139 li
cp
394.08 234.279 mo
396.12 231.579 li
397.02 234.819 li
f
304.44 229.959 mo
307.5 231.339 li
304.56 232.959 li
f
322.86 231.159 mo
331.8 231.039 li
331.8 231.519 li
322.86 231.639 li
cp
331.26 229.779 mo
334.32 231.219 li
331.32 232.779 li
f
350.7 219.039 mo
352.92 228.819 li
352.44 228.879 li
350.22 219.159 li
cp
354.06 228.039 mo
353.22 231.279 li
351.12 228.699 li
f
348.3 219.099 mo
348.3 220.359 348.78 221.439 349.38 221.439 cv
349.98 221.439 350.46 220.359 350.46 219.099 cv
350.46 217.839 349.98 216.759 349.38 216.759 cv
348.78 216.759 348.3 217.839 348.3 219.099 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
1 lc
348.3 219.099 mo
348.3 220.359 348.78 221.439 349.38 221.439 cv
349.98 221.439 350.46 220.359 350.46 219.099 cv
350.46 217.839 349.98 216.759 349.38 216.759 cv
348.78 216.759 348.3 217.839 348.3 219.099 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
341.94 233.799 mo
341.94 234.219 342.3 234.579 342.72 234.579 cv
345.9 234.579 li
346.32 234.579 346.68 234.219 346.68 233.799 cv
346.68 223.599 li
346.68 223.119 346.32 222.759 345.9 222.759 cv
342.72 222.759 li
342.3 222.759 341.94 223.119 341.94 223.599 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
341.94 233.799 mo
341.94 234.219 342.3 234.579 342.72 234.579 cv
345.9 234.579 li
346.32 234.579 346.68 234.219 346.68 233.799 cv
346.68 223.599 li
346.68 223.119 346.32 222.759 345.9 222.759 cv
342.72 222.759 li
342.3 222.759 341.94 223.119 341.94 223.599 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
343.02 234.699 mo
343.02 235.119 343.32 235.479 343.8 235.479 cv
346.92 235.479 li
347.34 235.479 347.7 235.119 347.7 234.699 cv
347.7 224.439 li
347.7 224.019 347.34 223.659 346.92 223.659 cv
343.8 223.659 li
343.32 223.659 343.02 224.019 343.02 224.439 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
343.02 234.699 mo
343.02 235.119 343.32 235.479 343.8 235.479 cv
346.92 235.479 li
347.34 235.479 347.7 235.119 347.7 234.699 cv
347.7 224.439 li
347.7 224.019 347.34 223.659 346.92 223.659 cv
343.8 223.659 li
343.32 223.659 343.02 224.019 343.02 224.439 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
343.92 235.599 mo
343.92 236.079 344.28 236.439 344.7 236.439 cv
347.88 236.439 li
348.36 236.439 348.66 236.079 348.66 235.599 cv
348.66 225.399 li
348.66 224.979 348.36 224.619 347.88 224.619 cv
344.7 224.619 li
344.28 224.619 343.92 224.979 343.92 225.399 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
343.92 235.599 mo
343.92 236.079 344.28 236.439 344.7 236.439 cv
347.88 236.439 li
348.36 236.439 348.66 236.079 348.66 235.599 cv
348.66 225.399 li
348.66 224.979 348.36 224.619 347.88 224.619 cv
344.7 224.619 li
344.28 224.619 343.92 224.979 343.92 225.399 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
344.94 236.499 mo
344.94 236.919 345.3 237.279 345.72 237.279 cv
348.9 237.279 li
349.32 237.279 349.68 236.919 349.68 236.499 cv
349.68 226.239 li
349.68 225.819 349.32 225.459 348.9 225.459 cv
345.72 225.459 li
345.3 225.459 344.94 225.819 344.94 226.239 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
344.94 236.499 mo
344.94 236.919 345.3 237.279 345.72 237.279 cv
348.9 237.279 li
349.32 237.279 349.68 236.919 349.68 236.499 cv
349.68 226.239 li
349.68 225.819 349.32 225.459 348.9 225.459 cv
345.72 225.459 li
345.3 225.459 344.94 225.819 344.94 226.239 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
344.16 222.579 mo
346.32 220.599 li
346.62 220.959 li
344.46 222.999 li
cp
345.06 219.999 mo
348.3 219.099 li
347.1 222.219 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
345.18 223.539 mo
346.74 221.079 li
347.16 221.319 li
345.6 223.779 li
cp
345.42 220.779 mo
348.3 219.099 li
347.94 222.459 li
f
346.08 224.499 mo
347.22 221.379 li
347.7 221.559 li
346.56 224.679 li
cp
345.9 221.379 mo
348.3 219.099 li
348.72 222.459 li
f
347.04 225.459 mo
347.7 221.559 li
348.18 221.619 li
347.58 225.519 li
cp
346.38 221.859 mo
348.3 219.099 li
349.32 222.279 li
f
403.62 241.779 mo
403.44 237.159 li
403.92 237.159 li
404.1 241.779 li
cp
402.18 237.699 mo
403.56 234.639 li
405.18 237.579 li
f
403.62 241.779 mo
404.04 238.059 li
404.52 238.119 li
404.1 241.839 li
cp
402.72 238.419 mo
404.58 235.599 li
405.72 238.719 li
f
403.68 241.659 mo
405.06 239.439 li
405.48 239.679 li
404.1 241.899 li
cp
403.74 239.199 mo
406.56 237.399 li
406.26 240.759 li
f
403.62 241.719 mo
404.52 239.079 li
405 239.259 li
404.1 241.839 li
cp
403.2 239.139 mo
405.54 236.799 li
406.02 240.099 li
f
401.16 233.859 mo
401.16 234.279 401.52 234.639 402 234.639 cv
405.12 234.639 li
405.6 234.639 405.96 234.279 405.96 233.859 cv
405.96 223.719 li
405.96 223.239 405.6 222.939 405.12 222.939 cv
402 222.939 li
401.52 222.939 401.16 223.239 401.16 223.719 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
401.16 233.859 mo
401.16 234.279 401.52 234.639 402 234.639 cv
405.12 234.639 li
405.6 234.639 405.96 234.279 405.96 233.859 cv
405.96 223.719 li
405.96 223.239 405.6 222.939 405.12 222.939 cv
402 222.939 li
401.52 222.939 401.16 223.239 401.16 223.719 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
402.18 234.819 mo
402.18 235.239 402.54 235.599 402.96 235.599 cv
406.14 235.599 li
406.56 235.599 406.92 235.239 406.92 234.819 cv
406.92 224.559 li
406.92 224.139 406.56 223.779 406.14 223.779 cv
402.96 223.779 li
402.54 223.779 402.18 224.139 402.18 224.559 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
402.18 234.819 mo
402.18 235.239 402.54 235.599 402.96 235.599 cv
406.14 235.599 li
406.56 235.599 406.92 235.239 406.92 234.819 cv
406.92 224.559 li
406.92 224.139 406.56 223.779 406.14 223.779 cv
402.96 223.779 li
402.54 223.779 402.18 224.139 402.18 224.559 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
403.2 236.019 mo
403.2 236.439 403.56 236.799 403.98 236.799 cv
407.16 236.799 li
407.58 236.799 407.94 236.439 407.94 236.019 cv
407.94 225.759 li
407.94 225.339 407.58 224.979 407.16 224.979 cv
403.98 224.979 li
403.56 224.979 403.2 225.339 403.2 225.759 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
403.2 236.019 mo
403.2 236.439 403.56 236.799 403.98 236.799 cv
407.16 236.799 li
407.58 236.799 407.94 236.439 407.94 236.019 cv
407.94 225.759 li
407.94 225.339 407.58 224.979 407.16 224.979 cv
403.98 224.979 li
403.56 224.979 403.2 225.339 403.2 225.759 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
0 gry
PZPTUG+ArialMT-Identity-H*1 [0 -2.52 -2.52 0 0 0 ]msf
406.56 236.259 mo
(RectPolar)
[-1.79953 -1.3797 -1.25949 -.72049 -1.68033 -1.3797 -.599518 -1.31973 0 ]ysh
404.16 236.619 mo
404.16 237.039 404.52 237.399 405 237.399 cv
408.12 237.399 li
408.6 237.399 408.96 237.039 408.96 236.619 cv
408.96 226.419 li
408.96 225.939 408.6 225.579 408.12 225.579 cv
405 225.579 li
404.52 225.579 404.16 225.939 404.16 226.419 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 .6 colr
ef
404.16 236.619 mo
404.16 237.039 404.52 237.399 405 237.399 cv
408.12 237.399 li
408.6 237.399 408.96 237.039 408.96 236.619 cv
408.96 226.419 li
408.96 225.939 408.6 225.579 408.12 225.579 cv
405 225.579 li
404.52 225.579 404.16 225.939 404.16 226.419 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
401.76 241.779 mo
401.76 243.039 402.24 244.119 402.84 244.119 cv
403.38 244.119 403.86 243.039 403.86 241.779 cv
403.86 240.519 403.38 239.499 402.84 239.499 cv
402.24 239.499 401.76 240.519 401.76 241.779 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
401.76 241.779 mo
401.76 243.039 402.24 244.119 402.84 244.119 cv
403.38 244.119 403.86 243.039 403.86 241.779 cv
403.86 240.519 403.38 239.499 402.84 239.499 cv
402.24 239.499 401.76 240.519 401.76 241.779 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
399.78 231.339 mo
401.46 239.259 li
400.98 239.379 li
399.3 231.459 li
cp
402.6 238.539 mo
401.76 241.779 li
399.66 239.139 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
403.44 222.699 mo
405.72 221.079 li
405.96 221.499 li
403.68 223.119 li
cp
404.58 220.359 mo
407.88 219.819 li
406.32 222.819 li
f
404.34 223.599 mo
406.08 221.619 li
406.44 221.919 li
404.76 223.959 li
cp
404.82 221.199 mo
407.88 219.819 li
407.1 223.119 li
f
405.36 224.859 mo
406.62 222.039 li
407.1 222.219 li
405.78 225.099 li
cp
405.3 221.979 mo
407.88 219.819 li
408 223.179 li
f
406.32 225.519 mo
407.1 222.219 li
407.58 222.339 li
406.8 225.639 li
cp
405.72 222.459 mo
407.88 219.819 li
408.66 223.119 li
f
396.36 231.399 mo
396.36 233.319 397.08 234.939 397.98 234.939 cv
398.82 234.939 399.54 233.319 399.54 231.399 cv
399.54 229.479 398.82 227.919 397.98 227.919 cv
397.08 227.919 396.36 229.479 396.36 231.399 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
396.36 231.399 mo
396.36 233.319 397.08 234.939 397.98 234.939 cv
398.82 234.939 399.54 233.319 399.54 231.399 cv
399.54 229.479 398.82 227.919 397.98 227.919 cv
397.08 227.919 396.36 229.479 396.36 231.399 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
409.38 218.259 mo
412.32 219.819 li
409.26 221.259 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
407.88 219.879 mo
407.88 221.139 408.36 222.159 408.9 222.159 cv
409.5 222.159 409.92 221.139 409.92 219.879 cv
409.92 218.619 409.5 217.599 408.9 217.599 cv
408.36 217.599 407.88 218.619 407.88 219.879 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
407.88 219.879 mo
407.88 221.139 408.36 222.159 408.9 222.159 cv
409.5 222.159 409.92 221.139 409.92 219.879 cv
409.92 218.619 409.5 217.599 408.9 217.599 cv
408.36 217.599 407.88 218.619 407.88 219.879 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
336.3 230.979 mo
340.5 229.959 li
340.62 230.439 li
336.42 231.459 li
cp
339.72 228.879 mo
343.02 229.599 li
340.44 231.759 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
336.36 230.979 mo
341.4 230.499 li
341.46 230.979 li
336.42 231.459 li
cp
340.8 229.299 mo
343.92 230.499 li
341.1 232.239 li
f
336.24 230.979 mo
339.54 229.479 li
339.78 229.959 li
336.48 231.459 li
cp
338.58 228.579 mo
341.94 228.639 li
339.84 231.279 li
f
336.36 230.979 mo
342.42 231.099 li
342.42 231.579 li
336.36 231.459 li
cp
341.94 229.839 mo
344.94 231.399 li
341.88 232.839 li
f
334.32 231.219 mo
334.32 232.479 334.8 233.559 335.34 233.559 cv
335.94 233.559 336.36 232.479 336.36 231.219 cv
336.36 229.959 335.94 228.939 335.34 228.939 cv
334.8 228.939 334.32 229.959 334.32 231.219 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 1 .8 colr
ef
334.32 231.219 mo
334.32 232.479 334.8 233.559 335.34 233.559 cv
335.94 233.559 336.36 232.479 336.36 231.219 cv
336.36 229.959 335.94 228.939 335.34 228.939 cv
334.8 228.939 334.32 229.959 334.32 231.219 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .50196 0 colr
@
1.25 lw
297.96 390.279 mo
297.96 393.099 300.24 395.439 303.06 395.439 cv
323.64 395.439 li
326.52 395.439 328.8 393.099 328.8 390.279 cv
328.8 191.439 li
328.8 188.619 326.52 186.279 323.64 186.279 cv
303.06 186.279 li
300.24 186.279 297.96 188.619 297.96 191.439 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
@
211.08 380.979 mo
211.08 388.959 217.5 395.439 225.48 395.439 cv
283.2 395.439 li
291.18 395.439 297.6 388.959 297.6 380.979 cv
297.6 253.779 li
297.6 245.799 291.18 239.319 283.2 239.319 cv
225.48 239.319 li
217.5 239.319 211.08 245.799 211.08 253.779 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .4 1 colr
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .39608 1 colr
true set_gvm
%ADOBeginSubsetFont: Arial-BoldMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Arial-BoldMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1991, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Arial is a trademark of The Monotype Corporation. registered in the US Patent and Trademark Office and elsewhere.) def
/Weight (Bold) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /P put
dup 101 /e put
dup 103 /g put
dup 108 /l put
dup 111 /o put
dup 114 /r put
dup 117 /u put
def
/UniqueID 44341 def
/FontBBox {-167 -250 1006 939} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-25 0 716 728 518 530 706 706] def
/OtherBlues [349 355 -210 -197] def
/FamilyBlues [-25 0 716 728 518 530 706 706] def
/FamilyOtherBlues [349 358 -210 -199] def
/StdHW [109] def
/StdVW [137] def
/StemSnapH [109 121] def
/StemSnapV [137 144] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/P <1C60D8A8C9B64EDFD521FAC9924C4188385C283240D8B4468E5916258700
C51C8872F9C522131C473EF94EAC585B9EC0382908BD27498F4D81F834987527
D368A02405564EFF2D6CA96B9976E52E9C4DFFBB20C7EC8E6E069A9E52914AA3
511C3287E362213BFE8395D9> |-
/e <1C60D8A8C9B7EF327170CEA4018476226C697B4144AC96594938D62BFBFA
88A2435693228FF048F202912B04439DD491C783E3C9EDA3A0ECF0A9763B2DA5
61371E6C00F9929F77F043560BA16BB7BCD3A5B5FBA94C358937B721512CC833
A6D9E0F4C499FF052890E101427575BE8CD6602A95B8> |-
/g <1C60D8A8C9B7D8BE25CB0E30EE3D27E80A0D189524766F2E9D2F98B2838E
625EAF2C9B7379AB1A3182DC4AF4483220F7A5EC6A3D31DACEE32A0945B3D362
78ACD21F4337DCAEA128473784113086E594373CAEEBB632690AB58075210105
255E472EF5E1646846E94FBDC933695CFBE426E7748399439E36B920CF671308
87A80C8FC14B70767652F503A90E4C772936ED7E2D62BFCF471135E999ABE2E5
2EBBF3F9A3ACE741F5EDC50E3E112695B70A297AAA7D4D8BE1ACC05DE354C864
97F6E32FD2EBA3D0C7B0C79CECD60B96296367D595> |-
/l <1C60D8A8C9B854D0D10D4D348B649B6EFFA8EAC40F98C35489B1FD3D17AB
C960> |-
/o <1C60D8A8C9B7D8BE501F5C8FB2FBA72D8923E47835DE04B22A6DB6CD384A
8F505FD4DB2070BE21A07902695A4B01FE95621D4795A955A214F8A522B40E7F
49FC473B0C330EA40629155ACC203AB3D22D764D7002A9F475F185DD03> |-
/r <1C60D8A8C9B7361F3A2E2EA543DCA8575071FD31784B4748C250AC0B4D39
056998178576FBEA7C529C1AE8759F8FD6FF2D6A8EDF25FCBB23C7E2E993575B
970C791C6D557486F04956E12464BB4F3640FB1D9F5678F71A545AF506F8A208
D3469C> |-
/u <1C60D8A8C9B7D8BE30EC60D657F53493D6A9005A30D66A5EF6D35D0F7DCE
F50CCE4574406031EA587157F01BD3B08C2A7AEEC0BF96E018E0D0D63956BEB2
63C3EA7254A97F7B297731ED15D642B722A623E0069B961F11DBB791516B4722
8DB7F76B9060753A620DBDFA0D2F0C7E3B2E1915C724CFAB766E> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/PZPTUH+Arial-BoldMT /Arial-BoldMT findfont ct_VMDictPut
/PZPTUH+Arial-BoldMT*1 
[80{/.notdef}rp /P 20{/.notdef}rp /e /.notdef /g 4{/.notdef}rp /l 
2{/.notdef}rp /o 2{/.notdef}rp /r 2{/.notdef}rp /u 138{/.notdef}rp]
PZPTUH+Arial-BoldMT nf
PZPTUH+Arial-BoldMT*1 [0 -12 -12 0 0 0 ]msf
257.28 452.319 mo
(Prologue)
[-7.9993 -4.6633 -7.32709 -3.33121 -7.32712 -7.32709 -7.32712 0 ]ysh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.8 0 0 colr
true set_gvm
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZPTUH+Arial-BoldMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D0F4790807CBACD8FD659970B8> |-
/N <1C60D8A8C9B6079F4C1A36BFFBB0238DA9D199C92424EBC58209E918EA9D
8176C623D3A2FF453A0431A50E1A7C08A7835C1032C76A643729D97B929DA73F
8A> |-
/S <1C60D8A8C9B64EDFD3CE376E8BDE8D484AED8661134E3467FD8ADB31A7A7
E3C626C81E6F6D858F5043A8BBD736A90765AB8484043854462B20D34C98997C
AE98DC4E388C6D32D81F6DFF710D1A529C63ADB05339E6F5806BC9D9DF9D22A7
EBB9F03A6E81467D341CBC6BFD6996B9464763A82B20B6C0FD276210A7EABA1E
8577E31C8C6EB879B7AA34> |-
/a <1C60D8A8C9B7EF326DB97D6F43409870DDE68B36E786E1CEB8C520798D75
A089914E6D50A78DBDE606DB1E7A7A8A7E9EBB3907821FBB6528D5604AE78DFC
F7C60D51B8097B66F1ABB013D9B0783FE79A8A07EEB9D0E55921B5EA14136EF4
D4629A27554D96FEE6DC8B31E0625B1401D62376758CA8D1FE53560B6C98E394
A2FA3EA31E7F994C1FBC689A2BB92D1634E7FC7597B84CCC44D98860261A174B
D9B54FE8C42C72F0CE477BB0756B270C987530EE723AA3D0D89B094F519F7001
647A92AB31595C> |-
/d <1C60D8A8C9B7D8BE54D5898D0F1241BAF5CE10A639D27365AB0DE8F0649A
BD4BD5D80C84B14C6B3DABEDB581BAAF2E659E1D99336B93D073BA229F593ED3
D237ACA024AE0716833AE6B4D65F3D22EF0AC9A5CC74593FDCBB8D8727D8DAB3
EDC76C00329856A8FD551FE0F30DE401254996F6961AFD368B3F3D2134441595
55C32186A0DA15365A2B898181EF8324BB009725C41F9F450D890DD24A735F22
C38FD32A84AB9FD3FBDAC06F3A548E5FB76C1F60E76F06EE546B6ABA16ECAF09
0618BF9E24E58B48D86B> |-
/t <1C60D8A8C9B81F2C14E05CE4A197E2108EFA556D82D4CBC77481E17DCF9B
9D8D9068CDA17B502BC71DA7C6F937765FE6AADE863E87299714A1550013E8EA
F90212914FD27571E22A8C7E69815A1556764DCA9CCB40C26B0BB1E0782AFF> |-
/w <1C60D8A8C9B6FF868CBA6C8BA75E35579B017DA9627042278126EC276D8E
7FAA5EF0AC4E3DEE73BB705C88A25ED10CC6A95D1651B6ED3670026B68EB2D4E
2D38730701B3B800C82FD6F67C771BEA7514E1A6FD5007B6D6A5> |-
/y <1C60D8A8C9B7EF324880B067D9DFCBDB1B02E1FD659608C7AB2DA864047C
CEE6A5D1186E27ABB515937D73753867C53C62A073AECAC426AA6927DD6C7EF3
398736DB03D34ABB2AE4C3B75387D862836B1BDF03F872124806996C0E8FDE96
A6FBC77198C3B422B5E2CF00AB33C7ED514CAC9842C2BF759AB2B8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZPTUH+Arial-BoldMT /Encoding get
dup 32 /space put
dup 78 /N put
dup 83 /S put
dup 97 /a put
dup 100 /d put
dup 116 /t put
dup 119 /w put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/PZPTUH+Arial-BoldMT*1 
[32{/.notdef}rp /space 45{/.notdef}rp /N /.notdef /P 2{/.notdef}rp /S 
13{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g 4{/.notdef}rp 
/l 2{/.notdef}rp /o 2{/.notdef}rp /r /.notdef /t /u 
/.notdef /w /.notdef /y 134{/.notdef}rp]
PZPTUH+Arial-BoldMT nf
PZPTUH+Arial-BoldMT*1 [0 -12 -12 0 0 0 ]msf
302.64 429.579 mo
(New )
[-8.61359 -6.62161 -9.48239 0 ]ysh
316.98 440.979 mo
(Steady)
[-7.99567 -3.98752 -6.6636 -6.6636 -7.38229 0 ]ysh
331.38 430.959 mo
(State)
[-8.0065 -3.99829 -6.67441 -3.99832 0 ]ysh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
true set_gvm
/PZPTUH+Arial-BoldMT*1 uf
/PZPTUH+Arial-BoldMT uf
/Arial-BoldMT uf
/PZPTUG+ArialMT-Identity-H*1 uf
/PZPTUG+ArialMT-Identity-H uf
/ArialMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
