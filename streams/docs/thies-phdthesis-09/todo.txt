Wed - done my content
Thu - related
Fri - related
Sat - acks
Sun - bib, stream graphs, layout, polishing

---------------

"this chapter is a large project, many people have worked on it"
"primary description of this work is somewhere else, go look at it"
remove "project leader part"
say that it is described in other people's theses
summary will show that language is amenable to optimization

--------------------------

Big things:
* Saman comments (including pending comments)
  - on other sections
  - on language
* more honest communication of uniprocessor performance relative to C
  - and more clear about baselines in abstract, conclusions, etc.
* address arvind/srini comments in conclusion:  does this extend to dynamism?
  - see feedback.txt
* acknowledgments
* related work

Little things:
* stream graphs
* fix first sentence of abstract to not define the domain of stream
  programs
* add sliding window to stream program characteristics
* acknowledge Amy as authoring raytracer (and make sure other authors acknowledged)
* explain that in stream graphs, nodes annotated with "work=unknown"
  represent cases where our work estimation algorithm was known to do
  poorly, so we did not include it in the report
- in language section, propagate benchmark numbers to summary
- mention StreaMIT pronunciation?
- mention diffs of apps between apps table and other sections
- check correctness of compression section

Mindless:
- Mosaic might have a [1,*,1] rate lingering
- be consistent about whether short captions end with a period
- cite seneff vocoder article (from asplos'02) so it appears in appendix
- cite Tennenhouse, D., Bose, V.: The SpectrumWare Approach to Wireless Signal Processing. Wireless Networks (1999))
  for OFDM
- indicate messaging pairs on mpeg encode, mpeg decode, mosaic stream graph
  - and check MPEG2 encoder portals (done haphazardly while tired)
- fix bibliography
- make pullSchedule font same as repeat_lengths font, etc.
- improve formatting of code (bold the keywords)
- get grant numbers for acknowledgements
  - ask mary to get grants I'm funded from while here
- check latest download numbers
- make cd-dat and jpeg look exactly the same in language section

Probably not fixing:
. check if messaging speedup makes any sense?
. mildly bothersome: the cache section is somewhat inconsistent about
  referring to static state of a filter as only instructions
  vs. instructions+data
. big thing missing: some review of the basic compiler?  stages, flow, etc.
. add section on embedding streamit in a general purpose language? mention java lib 
. it looks like the filterbank linear flops removed doesn't match pldi (but does
  match aalamb thesis).  check numbers are sound.
. copyright infringement on numerical recipes?
. redo graphs of sorts, a few dcts (missing hierarchy)?

Related work:
- Automatic generation of systolic programs from nested loops (CMU)
- Automatic mapping of large signal processing systems to a parallel machine (CMU)
- other things in research/streams/notes/reading/notes
- everything in my phdthesis/related folder
- everything on my desktop
- everything in my streams filing folder
- everything in my streams directory
- everything from my job talk notes
- everything from Ed Lee's emails
- lucid synchrone?
- improve comparison to brook
- onanian, j.s. a signal processing language for coase grain dataflow
  multiprocessors'', mit-lcs-tr-449, 1989
  http://library.mit.edu/F/U5BDSQEUGUH54XNE5XNDF2NCSGNXS6FI1VPIX9GH7UFG84HF8F-03143?func=item-global&doc_library=MIT01&doc_number=000399046&year=&volume=&sub_library=ARC
- papers to cite
  - Structuring Protocols with Data Streams
  - Protocol implementation using integrated layer processing
  - generating efficient protocol code from an abstract specification
  - structuring and destructuring protocols (thesis + paper)
  - a data-stream language for protocols
  - distributed stream control for self-managing media processing graphs
  - stream computations organized for reconfigurable execution (score):
  - introduction and tutorial
  - parallel signal processing for everyone
  - compile-time scheduling of dyanmic constructs in dataflow program graphs
  - ecos graphs: a dataflow programming language
  - static mapping of functional programs an example in signal processing
  - stream data types for signal processing
  - domain flow and streaming architectures
  - a constraint optimization framework for mapping a digital signal
  - processing application onto a parallel architecfture
  - filter fusion
  - partial evaluation for media processing
  - design of the promis compiler - towards multi-level parallelization
  - an esterel compiler for large control-dominated systems
  - mibench: a free, commercially representative embedded benchmark suite
  - piperench: a receonfigurable architecture and compiler
  - cheops: a reconfigurable data-flow system for video processing
  - PCI-PipeRench and the SwordAPI:  a system for stream-based
  - reconfigurable computing
  - piperench: a coprocessor for streaming multimedia acceleration

Submitting: 
- in 38-444:
  - 2 copies on acid-free paper
  - an extra copy of your abstract
  x complete UMI form (University Microfilms Inc.)
  x complete SED form (Survey of Earned Doctorates)
