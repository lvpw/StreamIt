%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010803210631)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 69 71 428 514
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

69 71 moveto
428 71 lineto
428 514 lineto
69 514 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
%%BeginResource: font PDFEGF+Courier-Bold
ct_CffDict begin
15 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (c) 1989, 1990, 1991, 1993, 1996, 1997, 1998 Adobe Systems Incorporated.  All Rights Reserved.) def
/version (004.000) def
/FullName (Courier Bold) def
/FamilyName (Courier) def
/BaseFontName (Courier-Bold) def
/Weight (Bold) def
/ItalicAngle 0 def
/isFixedPitch true  def
/UnderlinePosition -224 def
/UnderlineThickness 52 def
end def
/FontName /PDFEGF+Courier-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for def
/PaintType 0 def
/FontType 1 def
/FontMatrix [.001 0 0 .001 0 0 ] def
/FontBBox { -113 -250 749 801 } def
/StrokeWidth 0 def
currentdict end
systemdict begin
dup /Private 29 dict dup begin
/-|{string currentfile exch readhexstring pop}executeonly def
/|-{def}executeonly def
/|{put}executeonly def
/BlueValues [ -13 0 572 584 434 448 601 613 618 633 ] def
/OtherBlues [ 256 264 -183 -182 ] def
/FamilyBlues [ -14 0 572 585 434 448 782 803 626 626 ] def
/FamilyOtherBlues [ 236 243 344 344 -195 -193 ] def
/StdHW [ 93 ] def
/StdVW [ 93 ] def
/BlueScale 0.039625 def
/BlueShift 7 def
/BlueFuzz 1 def
/ForceBold true  def
/ForceBoldThreshold 0 def
/LanguageGroup 0 def
/ExpansionFactor 0.06 def
/initialRandomSeed 0 def
/lenIV 4 def
/MinFeature {16 16} def
/password 5839 def
/Erode{
11.625 dup 3 -1 roll 0.1 mul exch 0.5 sub mul cvi sub dup mul
93 0 dtransform dup mul exch dup mul add
le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def
/OtherSubrs [
{ct_CffDict/F0Subr get exec}executeonly{ct_CffDict/F1Subr get exec}executeonly{ct_CffDict/F2Subr get exec}executeonly{ct_CffDict/HSSubr get exec}executeonly] |-
/Subrs 5  array
dup 0 15 -| 68CCB9B7733DBF957B5C4F6827AC8A |
dup 1 9 -| 68CCB9B776ADDED836 |
dup 2 9 -| 68CCB9B776AC088F04 |
dup 3 5 -| 68CCB9B7F6 |
dup 4 13 -| 68CCB9B7733AC657EC3EB6EC2F |
|-
2 index /CharStrings 38 dict dup begin
/.notdef 9 -| 68CCB9B776D9A12F95 |-
/parenleft 66 -| 68CCB9B776D9A12FAE68C1B6EF06BA280D9D0FAEF2E6C9C51282E117818B3D798467A62B
1CDED6B0F87FBC260CD921EE479F67F05748C2117DAB8D5D81D332709F2E |-
/parenright 69 -| 68CCB9B776D9A12FAE68C1B6EF1E4110A7371308F21C51FA10256A195D35DC21EF2B2681
EFED1C0BDE77CEEC408E9A75C5F2F63120835163704460FCA5B463B1394F0DA3
66 |-
/asterisk 72 -| 68CCB9B776D9A12F635F5A723082FE469DD77DB267AC8473C3749C7A33C8577988984846
E03E3BDD00DC9D0A42631F478482F72DB192A18D205E181DBC87C747EC96F6D0
587B6062 |-
/comma 34 -| 68CCB9B776D9A12FBC2C27AAB63CE023CFF952B94ACF21DB38616A7B963F2618221C |-
/period 43 -| 68CCB9B776D9A12FE4EBD9E21C954A6649B73477C4BFD35DFF8A05ED077CF49034D85294
09FA26C44BFD3A |-
/four 74 -| 68CCB9B776D9A12F10C2F098695C2A4E302DF684584204D85D5C3751B132B8A939FCBBD6
F148C2F8ECE551E0C1F746508E7D14221E2CBF553077D206D39CE0DAF4755309
3A5D21D966DE |-
/six 174 -| 68CCB9B776D9A12FE4FAF94A85149E3F1D6CC33286A3978C34B4DF1E52FCA96E9B750BCD
E543AB4DED74AA3FC1B4B1B8FF2CFBF3FE549C07B4088E005B8542B2A8F0F6B2
ABC0B8D3B34C799E4ADE2E711C1744A81A8A5785A1AADB558B2AEDC95E6EA8C0
380B4F27E031EFEFC111ED37F0134289EBAF6E5612267C2568E8DD1154C591A0
3647C9648E0960C1A789C28C10DA66D7BE80CCFC51CDB9854CDCF4F8EEE1339E
2233B4C0ADD2BAF14947 |-
/semicolon 60 -| 68CCB9B776D9A12F6CDB6F768B93788963A1DF05F16E703F31C3887CE012E3DA20ACCC0C
827B23874C71FFCB833A4FEC4A957360CEF4C3B1DC637E0D |-
/equal 46 -| 68CCB9B776D9A12F44F067FD39077BE56D4415FC24A5D5D1727749CE5FC106B52691A45F
F3B423CE69C5BD33E92E |-
/F 227 -| 68CCB9B776D9A12F10C2F098AB04058BFFD39EC3458A1456E9D0DAFAA5C3C33011BAE6E9
85E57E7B78BED1992F87DBDE02F09EF3A2011F35CF083585B9D43467868F7F93
95B17B8D6BE7BE5294C2C349C7C6AD848DA053A30714EA690241EDF95711E108
865276F043B095ADFB124014902568671832CB57F8C6ABC4A54A5F17D109BBF8
B346F389B5B1C9D9EA2B4EE74E88247B9E978353340CE5EF0FC09DB48FB18B34
4E00741A4E281C0137E5E504B77A4CA43999B24C4521930E26BE6CF62E2AB16F
227107DBAC6C2A5A46D1ABFB94F75E059E5112AF2EA1F3C94A28440074F5C7 |-
/H 96 -| 68CCB9B776D9A12F10C2F098A0E5D1F45B2E047C2A559E30DBE30FD3FBF14FB94D660D46
5A6AE53B7908CBE7F4F92781F52592248CC2D177AF4FAE9F0CF5E7C746AB615D
D0183A8A3816AA9AEE90ADC83AA9DD7F56122D991CAE3180B6F74F35 |-
/I 53 -| 68CCB9B776D9A12F10C2F0972D50116043B51D17BBF75380E5AEAA2188BC30594C9203F7
6FCC61ACE74258F3D2A633196B863CEADC |-
/N 80 -| 68CCB9B776D9A12F10C2F0972D501172B3898E4A5385D319477910BED7B197A4CEDD7AEC
B48B58B3C2E736F1E299B65C947CC3494276F491C72EE177C89458714CD636CD
5C2108EBFDD1791646F4E736 |-
/P 120 -| 68CCB9B776D9A12F10C2F0987BDFA99E96FA7248B4A9B6F478950BAB204F0DE519B1B262
67276747C52B8647D0D833AAFA368A64596A4AE30CB4AD3F90A42DD6D7BAF36F
5AFFE05E08BCFFA824333267362BF441E3A22F0F04623C307E4268D6394832F9
B823834F4F62D731C12925426773400BEA4C1D44 |-
/R 125 -| 68CCB9B776D9A12F10C2F0985B825C59937D873408E20B7EBC2177B35245966B3FEE0355
B19D634D4B2CA3CEC62139EE10DDEFF2963FC50FF8D5F8A8406724C244C27551
661A98B5A29442256BF43F4A3753C9711A6F8E3F3CE783E6D30E7D19FDEE1FCA
6AB4FCCE58BAF5520854D40D569C754A71DEF58D21F1341A87 |-
/T 74 -| 68CCB9B776D9A12F10C2F0972D50112486C25AFA95B6D5E0C5895CCCA1DDEB9DB828E08D
A491048AB15DF1C65BD8FE56B0E945C3AB2C97E1EAB7187A9187E56AEBBAC2D1
2D78B6AAD953 |-
/bracketleft 44 -| 68CCB9B776D9A12FAE7960396973E901AFB07BC2C2F7890D5C183A062281FE9D69054982
E2393DB6129C89FC |-
/bracketright 44 -| 68CCB9B776D9A12FAE7960396973E9016A5C1D90DBFBE83889B957F770F56D51EC7407F5
C5B1BB4EB59BBE3F |-
/a 201 -| 68CCB9B776D9A12F10C2F0987475F74434C4DB7A2AB10F859412B2800C47140351B2DB79
06AF812807FB5669106032D1C29C6C3AF03DCD02392040D07F4C8CFB380444FD
5AA579070A89DEB97FEBA40A6F5E4A50DAFF97D35F13ED9DB3587EA219D2437A
5ED0A7EFD2809B9C467928D39F6DC3E12F34FE3043C597B83F75B7079CB8DF7C
3A634B77EAAED0DB376E768BA3D1FDCC2A62E07BEB2F16DF9ED51904BCB069AC
7EC2DB8FC7D800ED8940EBBA5A6730A9ABE9765E1C92EF13148FE11D6DEA705A
A1E8EC2885 |-
/d 196 -| 68CCB9B776D9A12F10C2F098DB48CCB7A696A42A4FF85175F18168B484CB1BC43018EF05
55604BEC6B6BFAFA57185B7557F11FFE832C9AA43C57168DB44AA1B115134783
E81FA4F22AAC7C74B0ACC7E675E2160561BFBE368A3F12EF2D2059C2914DC737
063B1FCD19764EDF3C0B001D8E0EE20DEBFCD5FBDCBE4CD950CC65C6F4DD6FE9
6608DD4B554F6D9F79B9841E0EA82AE895E0C748298622B4F4A9CF1F24C32A17
2FC99B4ED9163AB58DEF0AE5AE9792FBDEAF6F5457EBC6D6F7A09A4A7C361A9B
 |-
/e 112 -| 68CCB9B776D9A12FE4FBC7F1B7440C0B0C3C5CBC7433465F2608CAF7B4EB61AE343C802F
72A600C47F7F2BEE2A4A3783AEAF607DB6DC980B999E133B4A9674EB23E78582
99AF277AE2F678461923D7F1D41341F908A0B8AABF41D0F253FAF3B1DDBEA119
0F32F223E6DA1922DA51AF56 |-
/f 136 -| 68CCB9B776D9A12F10C2F098C6566DD458F23CBC65011443BCD3357B00F09424AFBA67A1
7C039D393398001280255A1613545CD6BA0D9F87AC1837E1D184BE6769303095
78062BD18162B20D4939A3B0F264616459554233EDE360E36CC0CAF0FBD3CAF8
7B1B4D64316C8F6F508962CB0BD0C5569BF591251E4C8252B3E445DC178DEC0D
E6BDB2CE |-
/i 69 -| 68CCB9B776D9A12F10C2F098C50B596AAA7310CC89FD5F84AD30C81749E1D04B39086B6E
62CEE45C6883BA2D766D1889C1A266D4FB7D30FCE7632D58669B3690A2955602
9F |-
/k 143 -| 68CCB9B776D9A12F10C2F098C659D65E462157A4A99202AF08230D051451EA1ED2C8325A
D92F3C5F8FFE2E22B8A9C2497B6CD6B250072988048A941D73C41B8D59AF0339
734E6FEAC0E42EB337695967CD9110E8F9DA2709D941488E53CB0DD1256C2BA3
198A38CE5BB2873CEA25FAFBB0CA49251D427F60FB67D7D39F563A6EDB08D70A
E187B3DF2F9B366E8C2A95 |-
/l 48 -| 68CCB9B776D9A12F10C2F097FAED4EE108B09D29F47B44810D9CE36ECEC54A2CF1FC91BD
CEF5020CA8A0C105AD07792A |-
/m 186 -| 68CCB9B776D9A12F10C2F098C50B595BF4D3291F2E9A6D138EC788C8E26185F6124746B8
4AB9A84FA2FE6471FDE9F35F0AA018284846D986AEB702C05B7580B802DCACFF
8C5883089D8EF7E11612BDFD73C417BF1DAD1DAC51F50FFE90A3EE0ACDB271E5
BB2A0BF394A8FF43FACD676FC6F387369455ADDC0DD29E96A23DD9322B03200E
3021E26A3953E908449ED4A2C8F359FDE522895AA9F5371ED7591EA8914EAD7A
6182F5307E945C7838CA835576CBE787A028E2858AE0 |-
/n 148 -| 68CCB9B776D9A12F10C2F098C50B5963616D4971BA13476818BAC66A668EBD3BF8B853EB
4213878042F40941475254339EEEBC3C883388182036FE8954E2001FC87C8F72
66B9DE319A3F8186978FC087C06FFC3E6518C0691640CCB460538BE02ABD4F8D
59B6CC6E401DBA018F3491A9600E0192BD3D5E70040A29016DB4E2655540FF57
163C4F3BD90FDC71CFF93E8BAC6EBA6B |-
/o 87 -| 68CCB9B776D9A12FE4F420D3A88F0157B18A5008CF24DF1C7DB137B50C9247E8324BF9F5
8C7A3B487C51215F082B31010625AD76F127F4CF746E425996A8256D4F830B1C
60078107467FBCC21D5D1EFE6970A38758BD66 |-
/p 175 -| 68CCB9B776D9A12F60E7E0D056A990218ABE43C95B63B9D79BFD7CD86AD8AC7D3C1B4F9B
724F09F39D444C10EF16EC77C4617FA1D616A31D118383F3737DBE2FC1F3F7E8
0ED100803AC02F4D37C8ABEDC02B2BD4FE307EA0092DD7FA7EA915EB2443D569
C0E6CA36A21FE331BA04E46F2B18235C45514C285AD47972CE4C1620A9598610
820A176FC47CE56923AE3A61C0EDD93975347A303A587E74CD97332451CC8AD3
E01B6D1AD0B4ECA0DEE6A8 |-
/q 134 -| 68CCB9B776D9A12F60E7E0D0A9DCC00B09427DA3A6102791A965D66365F7E0D4DF86591D
971ECB8E3F3484BB38A16FC121271CD223EF6EBB1F07E9C75C33D7F9D9A341B8
DA9B525EC4323F0DBAE0B401871F8C203C18FC039E06ED4AAC7A75E95186BCE1
F36495E158FD884F2A9E63BC3C6D119D1413FCEDFA09DBDE5DCA0553FFA57E19
9377 |-
/r 135 -| 68CCB9B776D9A12F10C2F098C50B59656643528E8E016C3103F8DA60CF08FE8B8137E570
862D0752B1A8F945DD2C51DAE8EB492788BAEBE395573862F14B37E7E8470B00
0B8F5A551C64E46BA7659F33E5E6B38F7AA73BEA47A816B88EC846FC428EA695
965D87BC6AC140BCF9FA2D19AA85D7A09C914B1A5D8EDFEB77C4A5000A7E9885
E373EF |-
/s 271 -| 68CCB9B776D9A12FE4F420D3A88F01022A6BEB4ED9021669E6D5802E40EEE1A26671962F
A420DD1C120177E5157A4C9BE5FF409DDACAF6387A7F422DBA6E5012517FBEBA
0E891B38FD38FD804D82BC882D392731B0AE2A8E5613956ACA8A75B709B7983A
C7CAAFA4C2702F7D95CFAA2D16A225D02D296461F16D10D9C1B451F21328425B
3B502DAD35544E88B3A77D8CD3DC2618499B601B9F07D4035BAF005E8D84F967
2EAFB818B530C0AE8D5163A20610C24CEA3CCCBA7BB774B812EA668AF8D44E3F
522D306C3C9EB20CD31EB5D7DCA2691534D9B58FE5137FD65142EE56E3C74EED
363D1F80892B0A6AAC376339A2A09D603868C2FA3D5FB666055B006E00899791
BE6BA23910E3CDBFAB3466 |-
/t 81 -| 68CCB9B776D9A12FE4FBC7F11AFBEAD2E1A1DAA456F2915A5DB25C768D07FEA6924EA15D
87C10DDC2AB17C77CA4C546EA4DD7CBFA3735B20BCE4D7734CA719A427E4E29E
CF99CFB3E9C3ADE39C148ABBAF |-
/v 73 -| 68CCB9B776D9A12F3BA0777AAEA74417787A6B8E7B795FA0B29A33D04CCFCBF223BF0122
955D7B3E91A5543D833C94C3DBD39E066AE31CD01D20E7E638D77F3F7F81643B
A39B3E7B6B |-
/w 127 -| 68CCB9B776D9A12F3BA0777AAEA74405FBDDF8FBF570B39776E0F15749925925CFDE4D75
7549114BE6C8BEC33EEBEF025987622DE446D573AF30E82D4D3827F9F2BF709E
77C7DFFDC2FDE1ED437CBF6CB3BBB3030484A0277C268D168F351F75D15152D6
EB5CC07363273E48F9C10E98C903A942787883D8CE1FF8B8D37482 |-
/braceleft 133 -| 68CCB9B776D9A12F60D45E8907B6C53BA63196D84DEB44AF85D86A84A827000ABDDDFA7D
689DDB840309D2290E128C06017ED3BFCAC48841EFAA3E64E482C14503201D4B
1A6F486C379374B1048E9838F1DBD12E97BF2097A06B17F9535EEB31B12EAC17
3E979321F1FFE8F37B063BF45948B1D04C1D666EE19CD69BAFF7194A3494A42E
B1 |-
/braceright 133 -| 68CCB9B776D9A12F60D45E8907B6C53BA62A31318FDB8584E0124EB5F67B83E1210E103D
EE4CE1AF21E34D521346CAD23F44F1775E2667F6EA66B0B099A35C47766C542D
113E6B81AD37C32FB5962FE9E238443E1E66A6D5F5E80006F773BE850C26F161
D92D057298AED120AF73653F51462F72AF3725C61C68F2251044951041C78C2D
A8 |-
end
end
put
put
dup/FontName get exch definefont pop
end
/PDFEGF+Courier-Bold findfont /Encoding get
dup 0 /.notdef put
pop
end
/PDFEGF+Courier-Bold findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 44 /comma put
dup 46 /period put
dup 52 /four put
dup 54 /six put
dup 59 /semicolon put
dup 61 /equal put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
dup 123 /braceleft put
dup 125 /braceright put
pop
%%EndResource
[/N40/PDFEGF+Courier-Bold 1 TZ
%%BeginResource: font PDFEDE+Courier
ct_CffDict begin
15 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (c) 1989, 1990, 1991, 1992, 1993, 1996, 1997, 1998 Adobe Systems Incorporated.  All Rights Reserved.) def
/version (004.000) def
/FullName (Courier) def
/FamilyName (Courier) def
/BaseFontName (Courier) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch true  def
/UnderlinePosition -224 def
/UnderlineThickness 52 def
end def
/FontName /PDFEDE+Courier def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for def
/PaintType 0 def
/FontType 1 def
/FontMatrix [.001 0 0 .001 0 0 ] def
/FontBBox { -28 -250 628 805 } def
/StrokeWidth 0 def
currentdict end
systemdict begin
dup /Private 29 dict dup begin
/-|{string currentfile exch readhexstring pop}executeonly def
/|-{def}executeonly def
/|{put}executeonly def
/BlueValues [ -14 0 572 585 434 448 782 803 626 626 ] def
/OtherBlues [ 236 243 344 344 -195 -193 ] def
/FamilyBlues [ -14 0 572 585 434 448 782 803 626 626 ] def
/FamilyOtherBlues [ 236 243 344 344 -195 -193 ] def
/StdHW [ 55 ] def
/StdVW [ 55 ] def
/BlueScale 0.039625 def
/BlueShift 7 def
/BlueFuzz 1 def
/ForceBold false  def
/ForceBoldThreshold 0 def
/LanguageGroup 0 def
/ExpansionFactor 0.06 def
/initialRandomSeed 0 def
/lenIV 4 def
/MinFeature {16 16} def
/password 5839 def
/Erode{
6.875 dup 3 -1 roll 0.1 mul exch 0.5 sub mul cvi sub dup mul
55 0 dtransform dup mul exch dup mul add
le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def
/OtherSubrs [
{ct_CffDict/F0Subr get exec}executeonly{ct_CffDict/F1Subr get exec}executeonly{ct_CffDict/F2Subr get exec}executeonly{ct_CffDict/HSSubr get exec}executeonly] |-
/Subrs 5  array
dup 0 15 -| 68CCB9B7733DBF957B5C4F6827AC8A |
dup 1 9 -| 68CCB9B776ADDED836 |
dup 2 9 -| 68CCB9B776AC088F04 |
dup 3 5 -| 68CCB9B7F6 |
dup 4 13 -| 68CCB9B7733AC657EC3EB6EC2F |
|-
2 index /CharStrings 53 dict dup begin
/.notdef 9 -| 68CCB9B776D9A12F95 |-
/parenleft 62 -| 68CCB9B776D9A12FB105DADE8684D41B375C0770BAC1B61C6429FF9FE0EDD9C8EDAE9960
024571161B9B1670EADCC1B86EC91D25E0341F6939F840D016CD |-
/parenright 65 -| 68CCB9B776D9A12FB105DADE86AF0016EDDDF57407F6ECA1DADF1428EA6BAE95A798696A
6BCC168798A3C983D76CB61F18EDFDFF408E3D11BFF08D7DAC2A104D67 |-
/period 43 -| 68CCB9B776D9A12FE4EBEB663D73353FB389871799C652D628056D88CDEAC0E3A7B42113
338D6EF617FE2E |-
/slash 35 -| 68CCB9B776D9A12F608FEB7C300ADD9E9B769CB0621A96FC7E7688E6FAACCA88845075 |-
/two 105 -| 68CCB9B776D9A12F10E894D3E226A9724650F60B70C118BD9A18D8DA511796595B8D06DE
6701F9B3250492072CFFF58BA203184DE1D6F82A93C39F40EAF873C3E78AD122
A60F99E6D200CB98A704E1245D074F233E5BE08545EF4EA377B406F0BA1584A4
4D7B829755 |-
/semicolon 58 -| 68CCB9B776D9A12F6CD404C50ADB0E0F307AAE7CED1FEBE9EB2FFE0CAB15E1EC2966B849
F7D32FDBF4A230D9EF21D9F339D44C6CF06CD2740248 |-
/less 41 -| 68CCB9B776D9A12F040B256D0D3AF2BEC4905F9E16579700D82EDDD32BDC49B606BA5D9E
BFAF3ADE5E |-
/equal 47 -| 68CCB9B776D9A12F6C5BA09C95E8212FB2A96979DEDB13501F0CE08A7B036DF6A83E56B5
D47BE1F665FA10B7B5323C |-
/greater 43 -| 68CCB9B776D9A12F3BA077754F0890271651A980E0E64E0C4CCDBE8310C1268F773AFD38
31A73375B06665 |-
/A 116 -| 68CCB9B776D9A12F10E894DCBB206F8C5DAA32900F0853184DE07DD7E92666D01D035852
5BEF419A21C973829489881C4C54F0D53F104158DFAC60D26F9AEDF3F32C4332
14F31B086AA7D124BCADA6DEDBE4F35BE687F3D9305E0DF5CF736CABE072E45F
C8A6A8AF6B12C784FCD4D54967251AD0 |-
/C 103 -| 68CCB9B776D9A12FE5283C115560B723B20E249A6A1832A590D6D4F07399D0C71674177E
8E4E42DEC773FFCC8D7843B8B01419135F1CE205A87095BAFFA5AEEB7CFFC294
08D2C7F788A55F8E7BBEA7A931B361E7DD3AC756EA0D0BA0D665177C481F98FE
C05759 |-
/D 117 -| 68CCB9B776D9A12F10E894D3DD1D6367D612CD82CAE2AF4E634441B999C7B7CB5D80A181
83573D2718681466E8EF5222345EBAC357B8964B62945F905D766E9B1DA5B341
79B89974ADA5D96A7191203E104E4236947751F478167E6938D477B3FD9B32DF
ED76B463E2EEDC1E8012EC6252C966309F |-
/E 145 -| 68CCB9B776D9A12F10E894DC103DAD9C88D113B62C642D0D9778E5217DB9572D0C12E429
8B077CB6DD7769E66E4DD48676168B242463CAE29F0F1C4D941411A3FE705BCD
52672B226DC22DA2CA0A699878F75BA6275BB687EA2407F3272603B1D32B5E4B
C2AF621961F1ECC4FE9BE7D07007A91361EE8CE061C7C62CC79DD4588E374AFD
B0E9F06F42EC9B668A8F33F3D9 |-
/F 92 -| 68CCB9B776D9A12F10E894DC103DAD9C88D113B61D4F30D43A90416981542A9C8416DE89
665CC375F44CD7FF6BE0DFD62C6DB6B96FF423A6DF7A868C9C1C8144ECD96C71
E6C117251EE2FDAF14FCE67D48A99E359312D79B6FBFE186 |-
/H 97 -| 68CCB9B776D9A12F10E894DC1766F52E67C66D062B32D7536BE0A5C30CC1D101B87108BB
EF519E577D81CB0DB63F01BCC38171EFC4D37DC48E21412993AE7601645A9C26
3F443EFD7D8FDD62ACD487592189710D8ED8D7483A12E66644A37A11D0 |-
/I 53 -| 68CCB9B776D9A12F10E894D3DD1D636777FB619FE7AA202986B21CFCD381041869C02B14
7B48473D100711293CE8D885D80C7A81C5 |-
/J 89 -| 68CCB9B776D9A12FE4DD97C264DDECB9BCFA03C1AF5E15B0C02DFAA895CDD59E0F05A066
FC3C57534EC6AB17E5AD5421D11321CBE1785575D995E5E3D14C2482CA8814C6
2AA67D6BFF640669DDA4129F1F2BDBF7F8A90CA941 |-
/L 61 -| 68CCB9B776D9A12F10E894D3DD1D6367E026F5D3E10141A4407197FEB15E43B257D586ED
8633305A0C55D077C1E90BE93186E04556DD960BB3BA330F8B |-
/M 98 -| 68CCB9B776D9A12F10E894D3DD1D63409D549DDADF848168567791CE8F9534A036183BD2
647502DCC6795CEACD0397BBF577912087997AFF92D44636526A1A762BB32639
532CDB87886C815FF6F382ECE4EDBC1CDE9CD734D551427181A181802C2C |-
/N 81 -| 68CCB9B776D9A12F10E894D3DD1D637AE6336A9CE07C496949EF8BC71F55DC88829C0033
B3D71E57A3759A1F65DE346E69CF9C98A8A37A07CBC783CEA9B573B39C0B7DD9
0AA054E56E74899ECA21CFFC21 |-
/O 94 -| 68CCB9B776D9A12FE4DE657B76B16F470582045C370106EB06DDC527B7E9C37D3FE90D66
F8AF6FCDBBD4D7E1BC0560C2465855DCFBA103D89E5FE41DE740FDC55FE44DC8
45021E2137B14F10FB8E83D76332A919C50A52F906C7D40E81F0 |-
/P 122 -| 68CCB9B776D9A12F10E894DCE64CD9522F338D81B043C7C7B5638D04930531E728FAF6E4
655E5656EE26C0AA1A0961B301FDB7FF2181902EB692E1375476F6F141053924
BAD17E370C6425F9417A8EC706202817526E448C6623EFCB2E300AF68DB835E0
0905E6D1E7E48900530B28F93B82181A23FD03E9D075 |-
/Q 304 -| 68CCB9B776D9A12F60BE3A3DB830C8A2EA9AC8CC61A41887FF8BD9E889820A5254020117
B0D89816A935F0B4E1C4B048BC4CC5EF1B35036EE9B47D1C5C92FB9ABC1E5B56
A04A22670E30B9373DBE2821BA471E89F35E84D2567A4E74295E6BD431E6B9D8
3775ADB21541789E149E458A4A346AE1BCFEFDC8D058B2B04534786EF0366F66
DA640194E61DB65BE033AABB13F7480CF23DA77223CE7C3F8F48F6D33B1905D5
94BD51040E41EE1C23A2380B40F1EB8C794076C12FA6BA1A84A78486E244D910
13AEE0EA7F1BC5E7DF51D9DA7556F0A7979C5926C880B8FF62A45925D45053EE
F19B173F22F1DD758146EA914814AF4478BB91B2394B3059D5A173758B4DB61A
EE4B363A4466D9B5AB8CF7E0266F6982A76D3FB92A3354B139E798213EE57967
5A3858BCFC1C6B014203A941 |-
/R 126 -| 68CCB9B776D9A12F10E894DC012547E4EE29A497D6EDF0FFBFDB2505A1134FD6AFAEE92F
909E9EA487202F71471F8D1C81A84A0F9715C70E5412FCEAE7CC05E6E3AFEBE0
2A6A6A356DB8566414F852BF409FF4DE6929B5161BAE33DE5427D343B02B0FB5
DD9E13BF3E3A51F6432C880D508920718592E13BC4B89E563678 |-
/S 311 -| 68CCB9B776D9A12FE4DE6574A5E3719E7C54C83B79D95D90582FDE8AD75A7725E99A22E0
F6AB829F46F10502D7FB546E84E8E5A6CB3C4CF44E361F24182E9D696DB01D98
236E33BF6C0F44464807B0BC1358412715092EF28417DF6008D60BBAE965A5BE
318796B96FE3A9438A04565008C14AFB1C0C5A191310229CE4D752773DF9ABDE
214D1DBDC9B9DF6773D611F1E790F366A9A55B2AAAFCC53C875941875615B946
C14CADAB8B9215DE07FEDECE45FB55120F9FE496C4387D49FE2F9A076847F6B3
A118E285A7BF29F9EEF7D3D01607B91756AA55692205DBF2B310676F740F5D87
41E8BF20A7937258D240D3EF30995551353DD68486034171D2666A85FBC748AD
8E80CDA44E0452743269FFA95F734991E8FE472D3AA136745E87268C9A4A54D6
DD1E590EE4A4402B8322DF4587E331C85DF8E5 |-
/T 74 -| 68CCB9B776D9A12F10E894D3DD1D632A60153F452040D087BA29AF1E49A8307D164075BE
1C4E096D5F043A9B297B3B18AB9C635521292094098188E32DDA587B40164C02
92B0E9D23591 |-
/underscore 30 -| 68CCB9B776D9A12F6021E132E350EDE50BA89834D3F818D016AE5988B89D |-
/a 210 -| 68CCB9B776D9A12F10E894DCEF13513962BF475F34729405EE6F5B7D02A283D8860732C2
190E56DDD3C0F6F115D341123F132806856F94EE5CC6FF0E189CC2152C42F923
1C8FE2CEA719191469F35B033DB05D5A5B95D37C5DFC704FD78B9000733B900E
E2659CC60D0A5A8996DDA7BE7642AB858FD03C6CA9230649E348CC760BDF6623
5CECCFA946467B8E3F0624305856667624613E19484B27B427C602A30C09DEF4
78AA2E538F0B182844972FBE7ED51B18987FF337930B5880D811B45C17D0D8F3
6C874F9120386ACC2E6D1EC89D0D |-
/c 98 -| 68CCB9B776D9A12FE4DD97C2E631A4DD16124039DB0B2640D58A28034E59B9086E01B807
989BD30EB9A6F900788E37391A1E7EFC641D67824AAC67C54C6865116B54EDCE
3118AAF9621A7FD0398C1E38D1384481CD613217C1DB5E01662D1CBE4A80 |-
/d 187 -| 68CCB9B776D9A12F10E894D35862CCB7D23BCF74479F1F93CBD10EE4B1F8284B18BAB14E
E4FB11F0685912D7863F78690CBE996A2F882A617980F4B9738A2F170F2BC74F
E6C35318C5C44864BE01B875E52690C8D8757177F889A0AB2CB05995F416E2DC
53F699E6D36236C46082F862623CAAA41F89E022B796068E11E32FC8536A72CD
D38140E58C414A6329C936E79B7BF03A61DDA81DEFD214E1C05E9ABBEB809C67
DD3A554920C4E4058EFF417F8249C903036D7D5F4491B7 |-
/e 113 -| 68CCB9B776D9A12FE4DD97CDBD44D90578477F3B85F4360763CC1F2420025429F401E8A3
61493A8AEFA103E1172012926851145FF038D630BE08A933E901C06211926984
F00E9E82F01D18B422297503105E8547859E512A2E0726E6E719DE709ABC2FBC
719ED30DC7DF642E78FBDDCBF3 |-
/f 101 -| 68CCB9B776D9A12F10E894D34BE735484CC085AE2523D0A749E805C1F1113F9885BC0E01
359AE41F10CBE6EECB173829663078F39F5BC3BCEC36A919AD2F853E4CEF8D3B
3F4F7A0E92F61761EDB8169500DB26B9D986AA91A6E79F29D61BFB72E2AC1528
44 |-
/g 189 -| 68CCB9B776D9A12F60FA9BA5CEF16AB32B88C27339654D3FEBF3C75CF6AD340F08E92898
85A57F26CC1074698E3C9AB7C7D50F818F3A42859C93394661733A16ED01B351
5F4CC2C63FE65428927C3310A04305B80498EAF20020A99A99ED2BD4B4C930FA
1BF6308D9CF59B35EDADA7D1F133FBE9BD166A2C6F5D9D4D78AF1608B996DEF0
022DF93CFD14BA9F3CCD6640ECF5B24DA74B0778DFC16BD5B586F2D3466B87B9
674968CC3DE876864F1C6110CD46B35DB4FFF24FFA0145DC11 |-
/h 98 -| 68CCB9B776D9A12F10E894D35862CCB7D23BCF3D25C43323FEC1187632ADD70B5B78600F
762F1522BDE4B575140B7813546EA48968D6FAF1BB0F556B70A70B2C50920FA5
53EAD8BD49A6F4F6A3C06BA5B55738AA9FE8A16AE7146DD4937615C907A6 |-
/i 105 -| 68CCB9B776D9A12F10E894D34BE73548243612E429343E4DC19468110C99EE4BAF96700B
E2422D520C34582F98AC14FA5219F3C39BC70C136F6A8FF926CB028313777E86
0CE0224182192E29CA19C1CB1282504501CC21FB680EB9D9C0BE371D18C65224
1DEEF34AF2 |-
/k 149 -| 68CCB9B776D9A12F10E894D34BE7354853655CF80F9AF3A7EAB1CA415E35B74BF31E7F3F
BA00CB9FEAD8540D88255FFE34BF2569282E87EB92F8BB0FD64A3B6C466D5F18
44CA9E7D7DB05FF0FC5CEF1FAF2F294AF9C3895905920A5777B8E130F1ADDEB0
F3375A17FDB3BFB4081FC82C2B6329A2058F6DF3E3DD93846BCD93D6074A8842
05348F79B4931C6F77593B8B0EDF557175 |-
/l 48 -| 68CCB9B776D9A12F10E894D394C0C8F47FB82AA59B1291A7379F24C65A3F987BB7CBAC2F
70D5C8EBBE93B8A6DC94BCF1 |-
/m 197 -| 68CCB9B776D9A12F10E894D34BE7357ECC3CBBAC4AF98A317D67ABE7271143884AFDDF41
9EA5A1A5F5F9FEAB54FA70F3C114094ADD7F837722EEA176A68F4B6FBC3F23BC
526DB906762749D621AF8563BB4E85E4060AEA54A973026F23FF0B42B7097A37
BE437CD0D436B1463DB334522F71FCAFC924023717A5AF174D50740D98D527EF
7E2669E6CDF212E5E4F52FDF396A43A033B8DE680B6F24D46808CA55638FDADC
4C572E1613FA6FBD4B7DB8D041C70708E0FA1E603480447ED5246C4E38544A36
C1 |-
/n 152 -| 68CCB9B776D9A12F10E894D34A957A567238DF2952E81C556B42DF625D2FABDA24860C3C
EF29D36B3000130CAB0ADCD5DB63EE035CF2388B436E57E51D09093532AAA914
15E9E8A47DA2E1BCC024AA538374DC5D5DD0E1523BE7E2CF04E72C8CA9DE16D9
EEC0AC379D5053805B19EA93BB096FD6509C60861A8AB1207C81DDA57B1E24C2
A671F4C7135CD4EA583F0AAFEBDECCD2F523442D |-
/o 87 -| 68CCB9B776D9A12FE4DE657BCC0EDFE7A0E8A98D9B78FB09F97D3631A8CB64B9A363771F
9988DF453DFEFD424C9F5B1C4782866F37002A0FD92AF5A33F880F6008AB8F50
FC569F0431D7FF1AA00E89B3980F9AF2768521 |-
/p 183 -| 68CCB9B776D9A12F60FA9838D304FFC215857665E2F9AB69FD727E745705ECD90580F726
86037604164810AE79E5106C547BFEB39F9B3E348EB7226A8D3F4600F762B45A
AC72AAC9AE3B5ACDA8CCF0BCCC6238BC599EC857DC33FA92B93B531672F85F76
FB5276CEBA76C42B9DC60FEA636A16306D813470172F043290F9F0DBD15AEA7E
E7DBE7F641BBB7F56F856C0D349FA35BBA6A18D90C6B41DCBCF173CFBBD74C79
E3C44F4495AC6A4F0367186669E348AF93A3E1 |-
/q 143 -| 68CCB9B776D9A12F60FA9838D304FFC215857636FF001CA605492BF87F6F7DDA9E5B48EF
AE9F4046D5E7852743D5927C661125848A63982041A9C305055F0C1A7EDE191E
1AC554B40001D8ADA57DCE6DB5DF94A222E2E4D519249196072A174D6B801108
6CA618C9F567A1D4D2FEEB6D40DEC12BCB2D65748B3F3E695BB452BAF934A6DF
E5CEF179F1923BD6D3156C |-
/r 131 -| 68CCB9B776D9A12F10E894D34BE73547EF15B59D1C8DD8740A435BC715A7A1E2235A6964
56BA9395FB32ECC0BA527731C712BA06E9FA7B3834FDA2C624D28B518A2FC143
DA5A120BA30F6212D5C7A7CE185B4B89CB90C010B93CF8A04B925473840191D0
42DE82B32FA83527CFBD597FE5CB71157CE5D32923C3850A0FEABCE116A47D |-
/s 215 -| 68CCB9B776D9A12FE4DE657BCC0EDFB0CA9F469DCCE16C7C8CBCEC806FB65322803B3AED
425564DAFED9F2713209A90BB5D5290FDAE9079CC5A036E905BAAA931F921C9B
B40E67EE649C87A6C401812486885896857A140B5494CBBFE6D9EB6DFE032404
0C370D8D1AD7B098C6898D84E2EA1F289266571F1983BB76CBE294290D15CA74
DADF2D73BE3D6523708D5B149F053DE2D799FA2FB6F07691BF271CCA587C0B7B
7EF54CBA5337ED971E3D59506FA12E80218F8D132D30C3D2989CEF27C1FBB03A
C1714575B1882D7FAD390806B88EACE524A66D |-
/t 91 -| 68CCB9B776D9A12FE4DE657BDFDC71900974225B3E8C0DBC70C4E74BB6BB3DC6659578AD
5EAB7C41A6FC99B71C0226A4D40EA479F35D66BAE94AD739EE987C901FAAB5B5
B081D06FA01700D6116485A3E57C3718FAFBB63927CBC5 |-
/u 136 -| 68CCB9B776D9A12F10E894D34BE73547B5D3ECBCC39C41C51A848BA9E408D8837F7922BA
00E0213C8252306D913179424C4B2EADEC40EF5826A2A033A68017B13CDA19F6
E5498652341711259FEE8F9FFA8CAC9929ADD55C14208653F8E23D9A933342C6
1776FFB95FF25BFD199842C1A61B1646E23AAC92E9535F345F0B3A951F520838
288F19F6 |-
/v 91 -| 68CCB9B776D9A12F3BA077753073299B191716F96D4DEC6ADFD0866657648FD7099C8CF7
D48C939A027CBD1F7309C5218AFE4EF92CC75F0AE8D47F02D0B12F66576654C2
F54023A0E7E6B9088FC6B83C59462F058FA9C95F7FA75F |-
/w 108 -| 68CCB9B776D9A12F3BA07775307329A509ADC1710DC02341DE6F169EE890D29B423CDEFE
0DB6FEEDF4D3C14560817EF52619EEB60C0F2CEA011642113E73933EEB0C4400
0506EEBE5806341B1CE5F09A0FB04D6E27FF4CBFC6D7AA8D72242D2B8527CB96
2F06366B6B837006 |-
/x 164 -| 68CCB9B776D9A12F10E894D34BE735032805A43DAF5EF80570AF1CEE578C6169C1FAB534
0710C45EDABF7EE4B4E9AB184938ADB906181D5D3C36DEC370CEBC9DA58CEC70
96A5E69D6E12DFB365F2EE42CE4FC073CB3C82BF8119C155B4651A0594806F61
A7276D0057EC7A7189FEB0589D46894BB60278C24B423D3AF8EAAA6FC178683D
409617C2B4F1F7BC778A156681239723AF4AFBBD5391B9266469A843B716478C
 |-
/y 107 -| 68CCB9B776D9A12F60FA98385451B91DAE9F3E7AE97AAEA1972765F40198999AECD70F8A
8DF6B85EB771650E3F36F4501B4C57DA97DB8386C20192B8A09D2935CFA0D4D3
0036FB2B2E5E2187D0B41C101FED5C6A08E3AA7289712B5640EF40B2CDE32F2A
8777B60209E20D |-
/braceleft 121 -| 68CCB9B776D9A12F60D691DCD0257B8B5262FB337345A388679AAB3A46217D16BECE59DF
AB93C214842997079765E72E7BB4243B63ED2678691B22D2F8526E60981AA233
5D9580C94D68C043F4F19ACE5DD22E1EB8A15893D7123A37CE7A72B5B1B1433F
A75ACFFD91C598A2A4B502061A51D31BE2852263A3 |-
/braceright 121 -| 68CCB9B776D9A12F60D691DCD0257B8B5262FB3373409B178620022806FE3A548BE99F19
D1CC4DB089FAA0EF4FE87F065B22F1E69883FA73E6A7343099321737E490C5FD
EB03229792DF06507D5A5D6FE97D99757E1E8487986CBBC2BD2F2B9158E7A197
B8BC0B594F88B536852B900504CA1D3C7875B7F699 |-
end
end
put
put
dup/FontName get exch definefont pop
end
/PDFEDE+Courier findfont /Encoding get
dup 0 /.notdef put
pop
end
/PDFEDE+Courier findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 47 /slash put
dup 50 /two put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 123 /braceleft put
dup 125 /braceright put
pop
%%EndResource
[/N39/PDFEDE+Courier 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
69 71 359 443 re W n
[ 0 -1 1 0 -2 583 ] concat
/N71 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N92 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
BT
/N39 1 Tf
0 9 -9 0 78.0406 72.0406 Tm
/N71 /ColorSpace findRes cs
0 0 0 scn
/N92 /ExtGState findRes gs
0 Tc
0 Tw
(class)Tj [-586.7 ]TJ (TrunkedRadio)Tj [-600 ]TJ (ex)Tj [13.3 ]TJ (tends)Tj [-600 ]TJ (Stream)Tj [-600 ]TJ ({)Tj 
/N40 1 Tf
1.8 -1.2267 TD
(RF)Tj [13.3 ]TJ (toIFPortal)Tj [-600 ]TJ (freqH)Tj [13.3 ]TJ (op)Tj [-600 ]TJ (=)Tj [-600 ]TJ (new)Tj [-600 ]TJ (RFtoIFPo)Tj [13.3 ]TJ (rtal\(\))Tj 
/N39 1 Tf
24.56 0 TD
(;)Tj 
-24.56 -1.2133 TD
(..)Tj [13.3 ]TJ (.)Tj 
0 -1.2267 TD
(vo)Tj [13.3 ]TJ (id)Tj [-600 ]TJ (init\(\))Tj [-600 ]TJ ({)Tj 
1.7867 -1.2267 TD
(...)Tj 
0 -1.2133 TD
(RFtoIF)Tj [-600 ]TJ (rf2if;)Tj 
0 -1.2267 TD
(add\(rf2if)Tj [-600 ]TJ (=)Tj [-600 ]TJ (new)Tj [-586.7 ]TJ (RFtoIF\(STARTFREQ)Tj [13.3 ]TJ (\)\);)Tj 
T*
(freqHop.registe)Tj [13.3 ]TJ (r\(rf2if\);)Tj 
0 -1.2133 TD
(...)Tj 
0 -1.2267 TD
(add\(new)Tj [-600 ]TJ (CheckFr)Tj [13.3 ]TJ (eqHop\(freqHop\)\);)Tj 
T*
(...)Tj 
-1.7867 -1.2133 TD
(})Tj 
-1.8 -1.2267 TD
(})Tj 
0 -2.44 TD
(class)Tj [-586.7 ]TJ (RFtoIF)Tj [-600 ]TJ (extends)Tj [-586.7 ]TJ (Filter)Tj [-600 ]TJ ({)Tj 
1.8 -1.2267 TD
(..)Tj [13.3 ]TJ (.)Tj 
T*
(//)Tj [-586.7 ]TJ (sets)Tj [-600 ]TJ (frequency)Tj [-586.7 ]TJ (to)Tj [-600 ]TJ (<f>)Tj 
/N40 1 Tf
0 -1.2133 TD
(vo)Tj [13.3 ]TJ (id)Tj [-600 ]TJ (setf\(float)Tj [-600 ]TJ (f\))Tj [-586.7 ]TJ ({)Tj 
1.7867 -1.2267 TD
(...)Tj 
-1.7867 -1.2267 TD
(})Tj 
/N39 1 Tf
-1.8 -1.2133 TD
(})Tj 
0 -2.45329 TD
(class)Tj [-586.7 ]TJ (CheckFreqHop)Tj [-600 ]TJ (ex)Tj [13.3 ]TJ (tends)Tj [-600 ]TJ (SplitJoin)Tj [-600 ]TJ ({)Tj 
1.8 -1.2133 TD
(RF)Tj [13.3 ]TJ (toIFPortal)Tj [-600 ]TJ (freqH)Tj [13.3 ]TJ (op;)Tj 
0 -2.45329 TD
(vo)Tj [13.3 ]TJ (id)Tj [-600 ]TJ (init\(RFtoIFPo)Tj [13.3 ]TJ (rtal)Tj [-600 ]TJ (freqHop\))Tj [-600 ]TJ ({)Tj 
1.7867 -1.2133 TD
(this.freqHop)Tj [-600 ]TJ (=)Tj [-586.7 ]TJ (freqHop;)Tj 
0 -1.2267 TD
(...)Tj 
T*
(add\(new)Tj [-600 ]TJ (Filter\()Tj [13.3 ]TJ (\))Tj [-600 ]TJ ({)Tj 
1.8 -1.2133 TD
(...)Tj 
0 -1.2267 TD
(void)Tj [-600 ]TJ (work\(\))Tj [-586.7 ]TJ ({)Tj 
1.8 -1.2267 TD
(...)Tj 
0 -1.2133 TD
(if\(val)Tj [-600 ]TJ (>=)Tj [-586.7 ]TJ (MIN_THRESHOLD\))Tj 
/N40 1 Tf
1.8 -1.2267 TD
(freqHo)Tj [13.3 ]TJ (p.setf\(Freq[k],)Tj [-600 ]TJ (n)Tj [13.3 ]TJ (e)Tj [0 ]TJ (w)Tj [-600 ]TJ (TimeInterval\()Tj [13.3 ]TJ (4*N,)Tj [-600 ]TJ (6*N\)\);)Tj 
/N39 1 Tf
-1.8 -1.2267 TD
(...)Tj 
-1.2 -1.2133 TD
(})Tj 
-2.39999 -1.2267 TD
(}\);)Tj 
T*
(...)Tj 
-1.7867 -1.2133 TD
(})Tj 
-1.8 -1.2267 TD
(})Tj 
ET
1 i
98.201 305.201 m
100.00101 303.28101 l
100.241 302.681 l
99.881 302.44099 l
91.601 297.881 l
90.041 297.041 l
90.881 298.601 l
95.44099 306.881 l
95.80099 307.36099 l
96.28101 307.00101 l
96.401 306.401 l
91.841 298.121 l
90.881 298.601 l
91.121 298.841 l
99.401 303.401 l
99.881 302.44099 l
99.28101 302.561 l
97.481 304.481 l
f 
96.28101 307.00101 m
98.201 305.201 l
97.481 304.481 l
95.561 306.28101 l
f 
97.841 304.841 m
99.64101 302.92101 l
91.36099 298.36099 l
95.92101 306.64101 l
f* 
432.041 341.80099 m
432.28101 341.80099 l
432.401 342.28101 l
432.161 342.28101 l
f 
432.041 341.80099 m
387.28101 353.681 l
352.841 362.44099 l
338.561 365.681 l
325.961 368.321 l
314.681 370.241 l
304.36099 371.561 l
294.761 372.401 l
285.521 372.64101 l
276.28101 372.28101 l
266.92101 371.561 l
256.841 370.36099 l
256.961 370.36099 l
246.161 368.681 l
220.601 364.241 l
196.481 359.92101 l
177.401 356.08099 l
169.481 354.161 l
162.28101 352.00101 l
155.681 349.72099 l
149.561 347.08099 l
143.80099 344.08099 l
143.80099 344.201 l
138.161 340.72099 l
132.521 336.64101 l
126.64101 331.961 l
126.761 331.961 l
120.64101 326.561 l
120.28101 326.92101 l
126.401 332.321 l
132.28101 337.00101 l
137.92101 341.08099 l
143.561 344.561 l
149.321 347.561 l
155.44099 350.201 l
155.561 350.201 l
162.161 352.481 l
169.36099 354.64101 l
177.28101 356.561 l
196.36099 360.401 l
220.481 364.72099 l
246.041 369.161 l
256.841 370.841 l
266.92101 372.041 l
276.28101 372.761 l
285.521 373.121 l
294.761 372.881 l
304.36099 372.041 l
304.481 372.041 l
314.80099 370.72099 l
326.08099 368.80099 l
338.681 366.161 l
352.961 362.92101 l
387.401 354.161 l
432.161 342.28101 l
f 
120.64101 326.561 m
113.92101 320.321 l
113.561 320.681 l
120.28101 326.92101 l
f 
98.44099 305.08099 m
98.321 304.961 l
97.961 305.321 l
98.08099 305.44099 l
f 
113.92101 320.321 m
113.561 320.681 l
98.08099 305.44099 l
98.44099 305.08099 l
f 
261.041 209.561 m
264.28101 209.561 l
264.161 208.961 l
261.041 198.041 l
257.92101 208.961 l
257.80099 209.561 l
258.401 209.561 l
258.881 209.201 l
261.521 199.961 l
260.561 199.72099 l
260.561 199.961 l
263.201 209.201 l
264.161 208.961 l
263.681 208.601 l
261.041 208.601 l
f 
258.401 209.561 2.64 -0.96001 rf
261.041 209.08099 m
263.681 209.08099 l
261.041 199.841 l
258.401 209.08099 l
f* 
90.041 288.28101 m
89.80099 288.28101 l
89.92101 287.80099 l
90.161 287.80099 l
f 
90.041 288.28101 m
119.80099 297.161 l
142.72099 303.64101 l
152.08099 305.92101 l
160.241 307.72099 l
167.44099 308.92101 l
173.80099 309.64101 l
179.681 309.761 l
185.201 309.401 l
185.321 309.401 l
190.601 308.561 l
195.881 307.241 l
201.28101 305.44099 l
207.161 303.161 l
220.601 297.28101 l
233.44099 291.401 l
238.72099 288.761 l
243.161 286.121 l
247.121 283.36099 l
247.241 283.36099 l
250.481 280.36099 l
253.241 277.00101 l
253.241 276.881 l
255.401 273.041 l
257.201 268.601 l
258.64101 263.44099 l
259.601 257.321 l
259.601 257.201 l
260.321 250.121 l
260.80099 241.961 l
260.321 241.961 l
259.841 250.121 l
259.121 257.201 l
258.161 263.321 l
256.72099 268.481 l
256.72099 268.36099 l
254.92101 272.80099 l
255.041 272.80099 l
252.881 276.64101 l
250.121 280.00101 l
246.881 283.00101 l
242.92101 285.761 l
238.481 288.401 l
238.481 288.28101 l
233.201 290.92101 l
220.36099 296.80099 l
206.92101 302.681 l
207.041 302.681 l
201.161 304.961 l
195.761 306.761 l
190.481 308.08099 l
185.201 308.92101 l
179.681 309.28101 l
173.80099 309.161 l
167.44099 308.44099 l
167.561 308.44099 l
160.36099 307.241 l
152.201 305.44099 l
142.841 303.161 l
119.92101 296.681 l
90.161 287.80099 l
f 
260.80099 241.961 m
261.161 232.601 l
260.681 232.601 l
260.321 241.961 l
f 
260.80099 209.561 0.48 -0.24001 rf
261.161 232.601 m
260.681 232.601 l
260.80099 209.561 l
261.28101 209.561 l
f 
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF
