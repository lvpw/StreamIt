%!PS-Adobe-2.0 EPSF-1.2
%%Title: Enscript Output
%%Creator: GNU enscript 1.6.1
%%CreationDate: Sat Apr 12 00:21:42 2003
%%For: William Thies
%%Pages: 1
%%DocumentFonts: F-gs-font
%%BoundingBox: 29 553 118 764
%%BeginPreview: 89 211 1 211
% efb000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% efbefbefbefbefbefbefbe00
% 020000000000000000000000
% fea800000000000000000000
% 000000000000000000000000
% 010000001000200000000000
% 27f001eabe6be60000000000
% 008000000800000000000000
% 020000002000000000000000
% 27bc01eabcd3780000000000
% 001c00000010000000000000
% 000800000010080010010000
% 27a601eab6336ebe59c59e00
% 040400000020000000040000
% 000400000020000000040000
% 000000000000000000000000
% 000000800000000000000000
% 6abebfa80000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 27c001cfbedfe68e00000000
% 000000002000000000000000
% 000000002000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% ff0000000000000000000000
% 800000000000000000000000
% 000000000000000000000000
% efbefbefbefbefbefbefbe00
% 000000000000000000000000
% 0bbcda6dfffbfb3ef3ef0000
% 0410a9440000000210000000
% 000021000000000000000000
% 0e2082cfbefbe00000000000
% 000210000000000000000000
% 001210000000000000000000
% ee97f06fbe50000000000000
% 0002200fbe20000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 0ebef9bfdf7bedfedb6ff800
% 010008000000000031000000
% 0ebefbc00000000000000000
% 010000000000000000000000
% 000000000000000000000000
% ef1afbefa290000000000000
% 000040000000000000000000
% 000000000000000000000000
% efbefbefbefbefbefbefbe00
% 000000000000000000000000
% 000000000000000000000000
% ee8000000000000000000000
% 040000000000000000000000
% 000000000000000000000000
% e8fee1000000000000000000
% 008000000000000000000000
% 0dfe3befb2fbeebe7beeb000
% 000000000400000000020000
% 000000000000000000000000
% 0fb800000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% cd567be1a7e0000000000000
% 000040000000000000000000
% 000000000000000000000000
% 1c0000000000000000000000
% 000000000000000000000000
% 020000000000000000000000
% af8000000000000000000000
% 000000000000000000000000
% efb8fbe06000000000000000
% 000028400000000000000000
% 000008000000000000000000
% e6f800000000000000000000
% 001000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 0f5cdbfe0000000000000000
% 008020000000000000000000
% 000000000000000000000000
% ebba90000000000000000000
% 001000000000000000000000
% efbefbefbefbefbefbefbe00
% 000000000000000000000000
% 000250000000001000000000
% eb9ef6ef3cfbafdaeae80000
% 400840000080000000800000
% 002000420001480000000000
% ebbcdbcfdedffb0000000000
% 000040000008400000000000
% 020040000002a00080210000
% f7aeffe69ebbe5b6eeed9000
% 000000400090800000000000
% 0002100000a0800000000000
% 6f96f6f7aaede7de7bec0000
% 0a0482a508490082100a1000
% eeb6bbe55ed96f36feefb680
% 000010801400000200050000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 001000000000000000000000
% ee97f0000000000000000000
% 000220000000000000000000
% 000000000000080040000000
% 2438f36fadfbafbcfbd80000
% 080020418083001800c80000
% 000000010000000000000000
% 2f9cd9995400000000000000
% 000011000800000000000000
% 07befbd8a000000000000000
% 0232dac80000000000000000
% 000042000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 0fbff3cebef19fbefbfc0000
% 000000000010200000000000
% 000000000000000000000000
% 67befd0c8000000000000000
% 040000000000000000000000
% 000000000000000000000000
% efbefbefbefbefbefbefbe00
% 000000000000000000000000
% 0fa673cbb800000000000000
% 000000020000000000000000
% 000002000000000000000000
% 4b32feee0000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 1c0000000000000000000000
% 000000000000000000000000
% 010000000000000000000000
% 4d8e80000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 2d9cffc20000000000000000
% 011040000000000000000000
% 4d9eda000000000000000000
% 000000000000000000000000
% 000800040000400800000000
% 0dbe8fcfa802ef3ee0000000
% 000000002800020440000000
% 000000000400010000000000
% 2d9effc0fef027fc20000000
% 001000000000008000000000
% 080000000000000000000000
% ac0000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 0fbaf9bdbe6febbab3ff0000
% 000000000000020000200000
% 000000000000000000000000
% 0ffeddfc0000000000000000
% 000020000000000000000000
% 000020000000000000000000
% ff1eeaefb000000000000000
% 000000000000000000000000
% 000000000000000000000000
% efbefbefbefbefbefbefbe00
% 000000000000000000000000
% 000000000000000000000000
% e13de0000000000000000000
% 802000000000000000000000
% 4f1680000000000000000000
% 040000000000000000000000
% 000000000000000000000000
% 033eebc7de5fc00000000000
% 000010000010000000000000
% 000000000000000000000000
% 2d9a00000000000000000000
% 000000000000000000000000
% 000040000000000000000000
% e93cfb600000000000000000
% 001000000000000000000000
% 000000000000000000000000
% 031afbafbe63afbe7b800000
% 002000400000008000000000
% 2d9e80000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% e93cf78b3473c39bfb800000
% 001080000042020200000000
% 000000000000000000000000
% 031f7ff6bedbe7de7f000000
% 000000001000000040000000
% 000000000000000000000000
% 2d9a00000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% e80000000000000000000000
% 000000000000000000000000
% 03b7dbefbb3bae72fa6d0000
% 000000400080008400000000
% 000000000080000000000000
% 03bf39e7f6fb37afbdcc0000
% 000000040000000000000000
% 000000000000000000000000
% 2d9e80000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% a20000000000000000000000
%%EndImage
%%EndPreview
save countdictstack mark newpath /showpage {} def /setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 2 2 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
/d_page_w 564 def
/d_page_h 744 def
/d_header_x 0 def
/d_header_y 744 def
/d_header_w 564 def
/d_header_h 0 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 564 def
/d_footer_h 0 def
/d_output_w 564 def
/d_output_h 744 def
/cols 1 def
_S
24 24 translate
/pagenum 1 def
/fname (algorithm.tex) def
/fdir () def
/ftail (algorithm.tex) def
/user_header_p false def
5 739.2 M
(structures) s
5 736.4 M
(-------------------------------------------------------------------------) s
5 733.6 M
(Container s:) s
5 730.8 M
(  s.height       : returns height of container) s
5 728 M
(  s.width[y]     : returns width of y'th row) s
5 725.2 M
(  s.get\(x, y\)    : returns the \(x, y\)'th child \(where x is col, y is row\)) s
5 719.6 M
(Node d ) s
/Courier-Bold 2 2 SUF
13.4 719.6 M
(extends) s
/F-gs-font 2 2 SF
21.8 719.6 M
( Container:) s
5 716.8 M
(  d.work         : the steady-state work of ) s
/Courier-Bold 2 2 SUF
57.8 716.8 M
(this) s
/F-gs-font 2 2 SF
62.6 716.8 M
( node) s
5 711.2 M
(globals) s
5 708.4 M
(-------------------------------------------------------------------------) s
/Courier-Oblique 2 2 SUF
5 705.6 M
(// A_s[x1][x2][y1][y2][n] holds minimum cost of assigning children ) s
/F-gs-font 2 2 SF
/Courier-Oblique 2 2 SUF
5 702.8 M
(// \(x1..x2, y1..y2\) of stream s to n tiles) s
/F-gs-font 2 2 SF
5 700 M
(forall s in graph:  ) s
/Courier-Bold 2 2 SUF
29 700 M
(int) s
/F-gs-font 2 2 SF
32.6 700 M
([][][][][] A_s;) s
/Courier-Oblique 2 2 SUF
5 694.4 M
(// do partitioning of stream s on n tiles and return mapping from node) s
/F-gs-font 2 2 SF
/Courier-Oblique 2 2 SUF
5 691.6 M
(// to partition number) s
/F-gs-font 2 2 SF
5 688.8 M
(stream->) s
/Courier-Bold 2 2 SUF
14.6 688.8 M
(int) s
/F-gs-font 2 2 SF
18.2 688.8 M
( toplevel\(stream s, ) s
/Courier-Bold 2 2 SUF
42.2 688.8 M
(int) s
/F-gs-font 2 2 SF
45.8 688.8 M
( n\)) s
5 686 M
(-------------------------------------------------------------------------) s
5 683.2 M
(setup\(n\)) s
5 680.4 M
(cost = getCost\(s, n\)) s
/Courier-Oblique 2 2 SUF
5 677.6 M
(// if desired, eliminate extra partitions that aren't contributing to) s
/F-gs-font 2 2 SF
/Courier-Oblique 2 2 SUF
5 674.8 M
(// the cost) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 672 M
(while) s
/F-gs-font 2 2 SF
11 672 M
( \(n>1 && getCost\(s, n-1\)==cost\)) s
5 669.2 M
(  n--) s
5 666.4 M
(endwhile) s
5 663.6 M
(traceback\(s, empty-map, 0, n\)) s
/Courier-Bold 2 2 SUF
5 660.8 M
(return) s
/F-gs-font 2 2 SF
12.2 660.8 M
( map) s
/Courier-Oblique 2 2 SUF
5 655.2 M
(// setup for n partitions) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 652.4 M
(void) s
/F-gs-font 2 2 SF
9.8 652.4 M
( setup\() s
/Courier-Bold 2 2 SUF
18.2 652.4 M
(int) s
/F-gs-font 2 2 SF
21.8 652.4 M
( n\) ) s
5 649.6 M
(-------------------------------------------------------------------------) s
5 646.8 M
(\(pad all splitjoins so that each parallel stream is same length\)) s
5 644 M
(\(add maximal synchronization to all splitjoins\)) s
5 641.2 M
(\(consider feedbackloops as a 2-way splitjoin, each child of which is a) s
5 638.4 M
( 2-element pipeline \(to prevent fusing with loop/body separately\)) s
5 635.6 M
(\(eliminate all splitjoins in pipelines in favor of ) s
/Courier-Bold 2 2 SUF
66.2 635.6 M
(synchronized) s
/F-gs-font 2 2 SF
80.6 635.6 M
( pipelines\)) s
5 630 M
(forall s in graph) s
5 627.2 M
(  A_s = ) s
/Courier-Bold 2 2 SUF
14.6 627.2 M
(new) s
/F-gs-font 2 2 SF
18.2 627.2 M
( ) s
/Courier-Bold 2 2 SUF
19.4 627.2 M
(int) s
/F-gs-font 2 2 SF
23 627.2 M
([s.length\(\)][s.length\(\)][s.width\(\)][s.width\(\)][n]) s
5 624.4 M
(  forall \(x1,x2,y1,y2,n\) \\in A_s) s
5 621.6 M
(    A[x1][x2][y1][y2][n] = -1) s
/Courier-Oblique 2 2 SUF
5 616 M
(// return minimal cost for allocating <n> partitions to children) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 613.2 M
(int) s
/F-gs-font 2 2 SF
8.6 613.2 M
( getCost\(stream s, ) s
/Courier-Bold 2 2 SUF
31.4 613.2 M
(int) s
/F-gs-font 2 2 SF
35 613.2 M
( n\)) s
5 610.4 M
(-------------------------------------------------------------------------) s
/Courier-Oblique 2 2 SUF
5 607.6 M
(// see if we will need a joiner) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 604.8 M
(if) s
/F-gs-font 2 2 SF
7.4 604.8 M
( \(n>1 && needsJoiner\(s\)\) ) s
5 602 M
(  n--) s
/Courier-Bold 2 2 SUF
5 599.2 M
(if) s
/F-gs-font 2 2 SF
7.4 599.2 M
( \(s is Node\)) s
5 596.4 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 596.4 M
(return) s
/F-gs-font 2 2 SF
14.6 596.4 M
( getNodeCost\(s, n\)) s
/Courier-Bold 2 2 SUF
5 593.6 M
(if) s
/F-gs-font 2 2 SF
7.4 593.6 M
( \(s is Container\)) s
5 590.8 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 590.8 M
(int) s
/F-gs-font 2 2 SF
11 590.8 M
( maxWidth = max\(s.width[0], ..., s.width[s.height]\);) s
5 588 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 588 M
(return) s
/F-gs-font 2 2 SF
14.6 588 M
( getContCost\(s, 0, maxWidth-1, 0, s.height-1, n\)) s
5 585.2 M
(endif) s
/Courier-Oblique 2 2 SUF
5 579.6 M
(// returns whether or not stream <s> needs a joiner if it is spread) s
/F-gs-font 2 2 SF
/Courier-Oblique 2 2 SUF
5 576.8 M
(// across multiple tiles) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 574 M
(boolean) s
/F-gs-font 2 2 SF
13.4 574 M
( needsJoiner \(stream s\)) s
5 571.2 M
(-------------------------------------------------------------------------) s
5 568.4 M
(par = s.parent\(\)) s
/Courier-Bold 2 2 SUF
5 565.6 M
(if) s
/F-gs-font 2 2 SF
7.4 565.6 M
( \(par==) s
/Courier-Bold 2 2 SUF
15.8 565.6 M
(null) s
/F-gs-font 2 2 SF
20.6 565.6 M
(\)) s
5 562.8 M
(  ) s
/Courier-Oblique 2 2 SUF
7.4 562.8 M
(// if have no parent, then need a joiner) s
/F-gs-font 2 2 SF
5 560 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 560 M
(return) s
/F-gs-font 2 2 SF
14.6 560 M
( ) s
/Courier-Bold 2 2 SUF
15.8 560 M
(true) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 557.2 M
(else) s
/F-gs-font 2 2 SF
9.8 557.2 M
( ) s
/Courier-Bold 2 2 SUF
11 557.2 M
(if) s
/F-gs-font 2 2 SF
13.4 557.2 M
( \(par.width\(\)>1\)) s
5 554.4 M
(  ) s
/Courier-Oblique 2 2 SUF
7.4 554.4 M
(// if par has multiple streams, it will have joiner instead) s
/F-gs-font 2 2 SF
5 551.6 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 551.6 M
(return) s
/F-gs-font 2 2 SF
14.6 551.6 M
( ) s
/Courier-Bold 2 2 SUF
15.8 551.6 M
(false) s
/F-gs-font 2 2 SF
21.8 551.6 M
(;) s
/Courier-Bold 2 2 SUF
5 548.8 M
(else) s
/F-gs-font 2 2 SF
9.8 548.8 M
( ) s
/Courier-Bold 2 2 SUF
11 548.8 M
(if) s
/F-gs-font 2 2 SF
13.4 548.8 M
( \(par.parent\(\)==) s
/Courier-Bold 2 2 SUF
32.6 548.8 M
(null) s
/F-gs-font 2 2 SF
37.4 548.8 M
( && s!=par.get\(0, par.length\(\)-1\)\)) s
5 546 M
(  ) s
/Courier-Oblique 2 2 SUF
7.4 546 M
(// if we're in middle of toplevel stream, then need joiner) s
/F-gs-font 2 2 SF
5 543.2 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 543.2 M
(return) s
/F-gs-font 2 2 SF
14.6 543.2 M
( ) s
/Courier-Bold 2 2 SUF
15.8 543.2 M
(true) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 540.4 M
(else) s
/F-gs-font 2 2 SF
5 537.6 M
(  ) s
/Courier-Oblique 2 2 SUF
7.4 537.6 M
(// otherwise we're guaranteed by lifter that par.parent\(\).width>1,) s
/F-gs-font 2 2 SF
5 534.8 M
(  ) s
/Courier-Oblique 2 2 SUF
7.4 534.8 M
(// so there will be a joiner there and we don't need one for s) s
/F-gs-font 2 2 SF
5 532 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 532 M
(return) s
/F-gs-font 2 2 SF
14.6 532 M
( ) s
/Courier-Bold 2 2 SUF
15.8 532 M
(false) s
/F-gs-font 2 2 SF
5 529.2 M
(end ) s
/Courier-Bold 2 2 SUF
9.8 529.2 M
(if) s
/F-gs-font 2 2 SF
_R
S
%%Trailer
cleartomark countdictstack exch sub { end } repeat restore
%%EOF
