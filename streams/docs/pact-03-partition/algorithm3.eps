%!PS-Adobe-2.0 EPSF-1.2
%%Title: Enscript Output
%%Creator: GNU enscript 1.6.1
%%CreationDate: Sat Apr 12 00:02:49 2003
%%For: William Thies
%%Pages: 1
%%DocumentFonts: F-gs-font
%%BoundingBox: 29 584 121 764
%%BeginPreview: 92 180 1 180
% 0ffcebee9be34fbf77ef8000
% 000000000620800008000000
% 000000000000000000000000
% 07bc7befdfd8effff9ec0000
% 002010010001000042000000
% ebbefbe3bcfbadb2bbe18800
% 000000000000002001000000
% 000000000000000000000000
% efbefbefbefbefbefbe00000
% 000000000000000000000000
% 010000000000000000000000
% 4d8e80000000000000000000
% 000000000000000000000000
% 000000008000000000000000
% 2ffff1e7bc20000000000000
% 000000402000000000000000
% 010040000000000000000000
% 4d9eda000000000000000000
% 000000008000800000000000
% 2fff71e7bc09ef80b7ec6000
% 000000402000000002000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 0ffcefc00000000000000000
% 000000000000000000000000
% 000000000800000000200000
% ebbefbef1eebedaf19ef0c40
% 000000000000000200080000
% efbefbefbefbefbefbe00000
% 000000000000000000000000
% 040000000000000000000000
% e40e60000000000000000000
% 000000000000000000000000
% 000001020000000000000000
% 3ff69bef0000000000000000
% 04a000800000000000000000
% 000000000000000000000000
% ae0000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 0ffcebee0000000000000000
% 000000000000000000000000
% 000000000800000000200000
% ebbefbef1eebedaf19ef0000
% 000000000000000200080000
% 000000000000000000000000
% 000000cc361986a290000000
% 000000000001008000000000
% 000000000001008000000000
% efbefbefbefbefbefbe00000
% 000000000000000000000000
% 000000000000000000000000
% 0cdffb6db67df3fefbefa6c0
% 000400000000000000000000
% 4efefbee8000000000000000
% 000033a00000000000000000
% 000090800000000000000000
% 061efbef0000000000000000
% 00000ae40000000000000000
% 000002200000000000000000
% 800000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 0cdc7de7bef1a9bfc0000000
% 000200080000000020000000
% 0fb67be3ffbbefbef0000000
% 001000000800000000000000
% 021400000000000000000000
% 4fbe2ae3363a000000000000
% 000000000420000000000000
% 010000000420000000000000
% 2d0cf8000000000000000000
% 000000000000000000000000
% 002000000000000000000000
% 0722bb000000000000000000
% 002202000000000000000000
% 000202240010000000000000
% 01bef3e63cfd840000000000
% 000002040808000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 0f9e7b37d7fae7befaefb000
% 000000000000000000420000
% 0208a0000000000000000000
% 668ab8000000000000000000
% 000008000000000000000000
% 000048000000000000000000
% 4ebefbc6329a800000000000
% 000001000210000000000000
% 002001000210000000000000
% 2dbc33ec0000000000000000
% 000800000000000000000000
% 071f89dc0000000000000000
% 000000000000000000000000
% 000000000000200002000000
% 00ae8fefbe98ee328be00000
% 000000400000002200000000
% 000000000002002200200000
% 0000006fbe9be98c616f8000
% 000000400000000840000000
% 000000000000000840000000
% 009e9befbeb2000000000000
% 000008c73aa0000000000000
% 000000010800000000000000
% 0007efae3efd6ffcf9ec0ef0
% 000000000000000000000000
% 0007deecbffefff7ebc7be00
% 000000200002040000080000
% 000000001000200002000000
% 003efa6dbe98ee328be00000
% 000000080800002200000000
% 000000001008022200001000
% 003efa6dbedb8ff8ca617e80
% 000000080800000008400000
% 000000000000000008400000
% 003a80000000000000000000
% 000000000000000000000000
% 001000000000000000000000
% 017800000000000000000000
% 000000000000000000000000
% 05b000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 278000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 800000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 0cfe7beb9e7bf17f3fef8000
% 030200000021028000010000
% e7b0dda40000000000000000
% 040081000000000000000000
% 042081000000000000000000
% 2cbc2b600000000000000000
% 000000000000000000000000
% 000000000000002010000000
% 033c3beffc6329bc3b800000
% 000001000000210000000000
% 000000000000250000800000
% 000001effc632fb289fe0000
% 000001000000200200000000
% 000000000000200200000000
% 02bc7befbdd0000000000000
% 0000232dac80000000000000
% 001fbefdfef9efb6e3e03fc0
% 000000000000000008000000
% 000000000000000008000000
% 001e73e3bff3ef9fbb2fb800
% 000000800010200000400000
% 000000008000002010000000
% 01bef1e7bc6329bc3b800000
% 000000402000210000000000
% 000000008020210400008000
% 01bef1e7be7e631ef185bc00
% 000000402000001001000000
% 000000000000001001000000
% 01ac00000000000000000000
% 008000000000000000000000
% 05a000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% 278000000000000000000000
% 000000000000000000000000
% 000000000000000000000000
% ae0000000000000000000000
%%EndImage
%%EndPreview
save countdictstack mark newpath /showpage {} def /setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 2 2 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
/d_page_w 564 def
/d_page_h 744 def
/d_header_x 0 def
/d_header_y 744 def
/d_header_w 564 def
/d_header_h 0 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 564 def
/d_footer_h 0 def
/d_output_w 564 def
/d_output_h 744 def
/cols 1 def
_S
24 24 translate
/pagenum 1 def
/fname (algorithm3.tex) def
/fdir () def
/ftail (algorithm3.tex) def
/user_header_p false def
/Courier-Oblique 2 2 SUF
5 739.2 M
(// traceback and construct a mapping <map> from nodes to partitions.) s
/F-gs-font 2 2 SF
/Courier-Oblique 2 2 SUF
5 736.4 M
(// <assigned> represents the number of partitions assigned so far.) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 733.6 M
(void) s
/F-gs-font 2 2 SF
9.8 733.6 M
( traceback\(stream s, list-of \(stream,) s
/Courier-Bold 2 2 SUF
54.2 733.6 M
(int) s
/F-gs-font 2 2 SF
57.8 733.6 M
(\) map, ) s
/Courier-Bold 2 2 SUF
66.2 733.6 M
(int) s
/F-gs-font 2 2 SF
69.8 733.6 M
( assigned, ) s
/Courier-Bold 2 2 SUF
83 733.6 M
(int) s
/F-gs-font 2 2 SF
86.6 733.6 M
( n\)) s
5 730.8 M
(---------------------------------------------------------------) s
/Courier-Bold 2 2 SUF
5 728 M
(if) s
/F-gs-font 2 2 SF
7.4 728 M
( \(s is Node\)) s
5 725.2 M
(  tracebackNode\(s, map, assigned, n\)) s
/Courier-Bold 2 2 SUF
5 722.4 M
(if) s
/F-gs-font 2 2 SF
7.4 722.4 M
( \(s is Container\)) s
5 719.6 M
(  tracebackCont\(s, map, assigned, 0, s.width\(\)-1, 0, s.length\(\)-1, n\)) s
/Courier-Oblique 2 2 SUF
5 711.2 M
(// traceback for node) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 708.4 M
(void) s
/F-gs-font 2 2 SF
9.8 708.4 M
( tracebackNode\(stream s, list-of \(stream,) s
/Courier-Bold 2 2 SUF
59 708.4 M
(int) s
/F-gs-font 2 2 SF
62.6 708.4 M
(\) map, ) s
/Courier-Bold 2 2 SUF
71 708.4 M
(int) s
/F-gs-font 2 2 SF
74.6 708.4 M
( assigned, ) s
/Courier-Bold 2 2 SUF
87.8 708.4 M
(int) s
/F-gs-font 2 2 SF
91.4 708.4 M
( n\)) s
5 705.6 M
(---------------------------------------------------------------) s
/Courier-Bold 2 2 SUF
5 702.8 M
(for) s
/F-gs-font 2 2 SF
8.6 702.8 M
( i = 0 to n-1) s
5 700 M
(  map.append\(s, assigned+i\)) s
5 697.2 M
(endfor) s
/Courier-Oblique 2 2 SUF
5 691.6 M
(// traceback for container) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 688.8 M
(void) s
/F-gs-font 2 2 SF
9.8 688.8 M
( tracebackCont\(stream s, list-of \(stream,) s
/Courier-Bold 2 2 SUF
59 688.8 M
(int) s
/F-gs-font 2 2 SF
62.6 688.8 M
(\) map, ) s
/Courier-Bold 2 2 SUF
71 688.8 M
(int) s
/F-gs-font 2 2 SF
74.6 688.8 M
( assigned, ) s
5 686 M
(                   ) s
/Courier-Bold 2 2 SUF
27.8 686 M
(int) s
/F-gs-font 2 2 SF
31.4 686 M
( x1, ) s
/Courier-Bold 2 2 SUF
37.4 686 M
(int) s
/F-gs-font 2 2 SF
41 686 M
( x2, ) s
/Courier-Bold 2 2 SUF
47 686 M
(int) s
/F-gs-font 2 2 SF
50.6 686 M
( y1, ) s
/Courier-Bold 2 2 SUF
56.6 686 M
(int) s
/F-gs-font 2 2 SF
60.2 686 M
( y2, ) s
/Courier-Bold 2 2 SUF
66.2 686 M
(int) s
/F-gs-font 2 2 SF
69.8 686 M
( n\)) s
5 683.2 M
(---------------------------------------------------------------) s
/Courier-Oblique 2 2 SUF
5 680.4 M
(// if we've exceeded the width of this node, then trim down to actual width) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 677.6 M
(if) s
/F-gs-font 2 2 SF
7.4 677.6 M
( \(x2>maxWidth[y1][y2]-1\) {) s
5 674.8 M
(    x2 = maxWidth[y1][y2]-1;) s
5 672 M
(}) s
/Courier-Oblique 2 2 SUF
5 666.4 M
(// if we only have one partition left, or if we are only) s
/F-gs-font 2 2 SF
/Courier-Oblique 2 2 SUF
5 663.6 M
(// looking at one child, then just recurse into children) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 660.8 M
(if) s
/F-gs-font 2 2 SF
7.4 660.8 M
( \(tileLimit==1 || \(x1==x2 && y1==y2\)\)) s
5 658 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 658 M
(for) s
/F-gs-font 2 2 SF
11 658 M
( i = x1 to x2) s
5 655.2 M
(    ) s
/Courier-Bold 2 2 SUF
9.8 655.2 M
(for) s
/F-gs-font 2 2 SF
13.4 655.2 M
( j = y1 to y2) s
5 652.4 M
(      traceback\(s.get\(i,j\), map, assigned, n\);) s
/Courier-Oblique 2 2 SUF
5 646.8 M
(// otherwise, see if we made a vertical cut \(in case s is a splitjoin\)) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 644 M
(int) s
/F-gs-font 2 2 SF
8.6 644 M
( min = infinity) s
/Courier-Bold 2 2 SUF
5 641.2 M
(if) s
/F-gs-font 2 2 SF
7.4 641.2 M
( \(canCutVertically\(s, x1, x2, y1, y2\) {) s
5 638.4 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 638.4 M
(for) s
/F-gs-font 2 2 SF
11 638.4 M
( xPivot = x1 to x2-1) s
5 635.6 M
(    ) s
/Courier-Bold 2 2 SUF
9.8 635.6 M
(for) s
/F-gs-font 2 2 SF
13.4 635.6 M
( nPivot = 1 to n-1) s
5 632.8 M
(      ) s
/Courier-Bold 2 2 SUF
12.2 632.8 M
(int) s
/F-gs-font 2 2 SF
15.8 632.8 M
( cost = max\(getContCost\(s, x1, xPivot, y1, y2, nPivot\),) s
5 630 M
(                     getContCost\(s, xPivot+1, x2, y1, y2, n-nPivot\)\);) s
5 627.2 M
(      ) s
/Courier-Bold 2 2 SUF
12.2 627.2 M
(if) s
/F-gs-font 2 2 SF
14.6 627.2 M
( \(cost==A[x1][x2][y1][y2][n]\) {) s
5 624.4 M
(        ) s
/Courier-Oblique 2 2 SUF
14.6 624.4 M
(// found best cost, so there's a division at this <xPivot>.  Recurse) s
/F-gs-font 2 2 SF
5 621.6 M
(        ) s
/Courier-Oblique 2 2 SUF
14.6 621.6 M
(// left and right, incrementing assignment count after partition.) s
/F-gs-font 2 2 SF
5 618.8 M
(        traceback\(s, map, assigned, x1, xPivot, y1, y2, nPivot\)) s
5 616 M
(        traceback\(s, map, assigned+nPivot, xPivot+1, x2, y1, y2, n-nPivot\);) s
5 613.2 M
(        ) s
/Courier-Bold 2 2 SUF
14.6 613.2 M
(return) s
/F-gs-font 2 2 SF
5 610.4 M
(      endif) s
5 607.6 M
(    endfor) s
5 604.8 M
(  endfor) s
5 602 M
(}) s
/Courier-Oblique 2 2 SUF
5 596.4 M
(// try making horizontal cut \(for splitjoin, pipeline, feedbackloop\)) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 593.6 M
(for) s
/F-gs-font 2 2 SF
8.6 593.6 M
( yPivot = y1 to y2 - 1) s
5 590.8 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 590.8 M
(for) s
/F-gs-font 2 2 SF
11 590.8 M
( nPivot = 1 to n-1) s
5 588 M
(    ) s
/Courier-Bold 2 2 SUF
9.8 588 M
(int) s
/F-gs-font 2 2 SF
13.4 588 M
( cost = max\(getContCost\(s, x1, x2, y1, yPivot, nPivot\),) s
5 585.2 M
(                   getContCost\(s, x1, x2, yPivot+1, y2, n-nPivot\)\);) s
5 582.4 M
(    ) s
/Courier-Bold 2 2 SUF
9.8 582.4 M
(if) s
/F-gs-font 2 2 SF
12.2 582.4 M
( \(cost==A[x1][x2][y1][y2][n]\) {) s
5 579.6 M
(      ) s
/Courier-Oblique 2 2 SUF
12.2 579.6 M
(// found best cost, so there's a division at this <yPivot>.  Recurse) s
/F-gs-font 2 2 SF
5 576.8 M
(      ) s
/Courier-Oblique 2 2 SUF
12.2 576.8 M
(// left and right, incrementing assignment count after partition.) s
/F-gs-font 2 2 SF
5 574 M
(      traceback\(s, map, assigned, x1, x2, y1, yPivot, nPivot\)) s
5 571.2 M
(      traceback\(s, map, assigned+nPivot, x1, x2, yPivot+1, y2, n-nPivot\);) s
5 568.4 M
(      ) s
/Courier-Bold 2 2 SUF
12.2 568.4 M
(return) s
/F-gs-font 2 2 SF
5 565.6 M
(    endif) s
5 562.8 M
(  endfor) s
5 560 M
(endfor) s
_R
S
%%Trailer
cleartomark countdictstack exch sub { end } repeat restore
%%EOF
