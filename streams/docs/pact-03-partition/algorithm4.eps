%!PS-Adobe-2.0 EPSF-1.2
%%Title: Enscript Output
%%Creator: GNU enscript 1.6.1
%%CreationDate: Sat Apr 12 00:02:50 2003
%%For: William Thies
%%Pages: 1
%%DocumentFonts: F-gs-font
%%BoundingBox: 29 580 111 764
%%BeginPreview: 82 184 1 184
% 07befbcfc0f8c63ef9e000
% 0000000200000200000000
% 0000000000000000000000
% 0fdef00000000000000000
% 0aa2080094200200000000
% ef9efbdfbd61be8cb00000
% 4200000210200400000000
% 0000000000000000000000
% efbefbefbefbefbefbee00
% 0000000000000000000000
% 0000000000000000000000
% 0fbefb6fbec00000000000
% 0000000108000000000000
% 0200420200084000000000
% ff84dbfe8019eea8000000
% 0000404480080420000000
% 0208100800000000000000
% 4ebed9efa0000000000000
% 0220084000000000000000
% 2fb0fbc000000000000000
% 0100200000000000000000
% 0000000000000000000000
% e800000000000000000000
% 0000000000000000000000
% 0080008208020008200000
% 2f92dba6bcfe801af3aa00
% 0000000220488008810800
% 0800000000000000000000
% ac00000000000000000000
% 0000000000000000000000
% 0200020a80200094000000
% fe8e7eab9fe8019d774000
% 0004a00a04480890210000
% fc3ee9ef1ed3ee80000000
% 0010800800000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0fbb7befbc000000000000
% 0000880000000000000000
% 0200880002100800000000
% 6f86bba0067bfb8fc00000
% 000080a002012080000000
% 0000880000108220000000
% 0002bbdf0033eeaec00000
% 0208808100100a00800000
% 4ebcdbee00000000000000
% 0220020000000000000000
% 0020080000000000000000
% 1fb0fbc000000000000000
% 0100200000000000000000
% 0000000000000000000000
% e800000000000000000000
% 0000000000000000000000
% 0020004082000020804000
% 1fb0ebd59eb200aedbde00
% 0100000088120024088200
% 0000104010002080000000
% 000033e7b48167ae600000
% 0000114224006306200000
% 000033e77c00cf9e6ba000
% 000011020400440a008000
% 0800000000000000000000
% ac00000000000000000000
% 0000000000000000000000
% 0200020a80000a80200000
% 6e8e7eab9c802b9feb0000
% 0000000a04800a04410000
% 0000a8020002a000000000
% 0002b9fe902ae798000000
% 0000a04480028108000000
% 0000a80000094088000000
% 0002b9e78019d79ae80000
% 000ae04280490a80200000
% e6bed8ef0ed1ee80000000
% 0022000800000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0ffefbefbefbf1be7bf000
% 0600000000000000210000
% 0000000000000000000000
% 063a1ff1ccbb2dbe7f3fc0
% 0200200200000010400400
% 0efedfa33f7befef7aed80
% 0000480c00000000000080
% 0a82080894200000000000
% ef9efbdfbd61be00000000
% 4200000210202000000000
% 0000000000000000000000
% efbefbefbefbefbefbee00
% 0000000000000000000000
% 4084000000000000000000
% e19efa0000000000000000
% 4080620000000000000000
% 0000000000000000000000
% 0f3e7baf9efb0000000000
% 0204580000920420000000
% fe8e75a40adeeeae800000
% 000440a000902400800000
% 0000520000000000000000
% 4f60deef80000000000000
% 0000502900000000000000
% 0008000000000000000000
% 2d98000000000000000000
% 0008000000000000000000
% 0800000000000000000000
% ac00000000000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0f9cedc1fa39efb6e00000
% 0208828080c04000000000
% 4ebcdbee00800000000000
% 0220020000000000000000
% 0020480400000000000000
% 0ab7eaffb0000000000000
% 0022002000000000000000
% 0002000000000000000000
% 0736000000000000000000
% 0002000000000000000000
% 0000000000000000000000
% 2e00000000000000000000
% 0000000000000000000000
% 0008010000000000000000
% 03bc3fe800000000000000
% 0220080000000000000000
% 2700000000000000000000
% 0000000000000000000000
% 0000000000000000000000
% e800000000000000000000
% 0000000000000000000000
% 0020408000080810800000
% 2fb0ebcd205aedbaba0000
% 0100420500084090020000
% 0002082000000000000000
% 0bbe99ebfc000000000000
% 0008088188000000000000
% 0002000000000000000000
% 0736000000000000000000
% 0002000000000000000000
% 2e00000000000000000000
% 0000000000000000000000
% 0008000820800010400000
% 03bc39faaed90037ebec00
% 0020000024090012030400
% 0000020400008102100000
% 00000b7ea801cf9eb3c000
% 000002202800840a004000
% 0000020800000820480000
% 00000aedbe802bb6d9e400
% 00000240a0800902402000
% 0200000000000000000000
% 2700000000000000000000
% 0800000000000000000000
% ac00000000000000000000
% 0000000000000000000000
% 0000000000000000000000
% 0f9e7befe6fbee00000000
% 0000000010000000000000
% 0200210010420000000000
% 6f846be400dbff80000000
% 0000202400406080000000
% 0000208000208210000000
% 000073ea0073ef36c00000
% 0000200a00200a00400000
% 0000210000022088000000
% 00006befa00aef9ae80000
% 0200222aa0020a80200000
% 6e8e7eab9c802b9ff80000
% 0000000a04800a06080000
% 0000920000490210000000
% 0002dee400eb6f36c00000
% 0000902400480a00400000
% 0000a80000094088000000
% 0002b9ff8019d79ae80000
% 0000a06080090280200000
% 000a402000400800000000
% e6bed3ef0ed1ee80000000
% 0022008000000000000000
%%EndImage
%%EndPreview
save countdictstack mark newpath /showpage {} def /setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 2 2 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
/d_page_w 564 def
/d_page_h 744 def
/d_header_x 0 def
/d_header_y 744 def
/d_header_w 564 def
/d_header_h 0 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 564 def
/d_footer_h 0 def
/d_output_w 564 def
/d_output_h 744 def
/cols 1 def
_S
24 24 translate
/pagenum 1 def
/fname (algorithm4.tex) def
/fdir () def
/ftail (algorithm4.tex) def
/user_header_p false def
/Courier-Oblique 2 2 SUF
5 739.2 M
(// Refactors children <begin>...<start> of <sj> into their own ) s
/F-gs-font 2 2 SF
/Courier-Oblique 2 2 SUF
5 736.4 M
(// sub-splitjoin.) s
/F-gs-font 2 2 SF
5 733.6 M
(splitjoin lowerChildren\(splitjoin sj, ) s
/Courier-Bold 2 2 SUF
50.6 733.6 M
(int) s
/F-gs-font 2 2 SF
54.2 733.6 M
( begin, ) s
/Courier-Bold 2 2 SUF
63.8 733.6 M
(int) s
/F-gs-font 2 2 SF
67.4 733.6 M
( end\)) s
5 730.8 M
(------------------------------------------------------------------) s
/Courier-Oblique 2 2 SUF
5 728 M
(// make hierarchical sub-splitjoin) s
/F-gs-font 2 2 SF
5 725.2 M
(subChild = { sj.child[begin], ... , sj.child[end] }) s
/Courier-Bold 2 2 SUF
5 722.4 M
(if) s
/F-gs-font 2 2 SF
7.4 722.4 M
( \(sj.splitter is duplicate\)) s
5 719.6 M
(  subSplit = duplicate) s
/Courier-Bold 2 2 SUF
5 716.8 M
(else) s
/F-gs-font 2 2 SF
5 714 M
(  subJoin = roundrobin\( sj.split.w[begin], ... , sj.split.w[end] \)) s
5 711.2 M
(endif) s
5 708.4 M
(subJoin = roundrobin\( sj.join.w[begin], ... , sj.join.w[end] \)) s
5 705.6 M
(subSJ = splitjoin\( subSplit, subJoin, subChild \)) s
/Courier-Oblique 2 2 SUF
5 700 M
(// make new splitjoin to return) s
/F-gs-font 2 2 SF
5 697.2 M
(newChild = {sj.child[0], ... , sj.child[begin-1], subSJ,) s
5 694.4 M
(            sj.child[end+1], ... , sj.child[sj.size-1]}) s
/Courier-Bold 2 2 SUF
5 691.6 M
(if) s
/F-gs-font 2 2 SF
7.4 691.6 M
( \(sj.split is duplicate\)) s
5 688.8 M
(  newSplit = duplicate) s
/Courier-Bold 2 2 SUF
5 686 M
(else) s
/F-gs-font 2 2 SF
5 683.2 M
(  newSplit = roundrobin \( sj.split.w[0], ... , sj.split.w[begin-1],) s
5 680.4 M
(               sj.split.w[begin] + ... + sj.split.w[end],) s
5 677.6 M
(               sj.split.w[end+1], ... , sj.split.w[sj.size-1] \)) s
5 674.8 M
(endif) s
5 672 M
(newJoin = roundrobin\( sj.join.w[0], ... , sj.join.w[begin-1],) s
5 669.2 M
(            sj.join.w[begin] + ... + sj.join.w[end],) s
5 666.4 M
(            sj.join.w[end+1], ... , sj.join.w[sj.size-1] \)) s
/Courier-Bold 2 2 SUF
5 663.6 M
(return) s
/F-gs-font 2 2 SF
12.2 663.6 M
( splitjoin \( newSplit, newJoin, newChild \)) s
/Courier-Oblique 2 2 SUF
5 655.2 M
(// Opposite trasnformation as lowerChildren.  Given a splitjoin) s
/F-gs-font 2 2 SF
/Courier-Oblique 2 2 SUF
5 652.4 M
(// <sj> and a  position <pos> of a child with aligned joiner weights) s
/F-gs-font 2 2 SF
/Courier-Oblique 2 2 SUF
5 649.6 M
(// and matching split type, raise the children of the child into <sj>.) s
/F-gs-font 2 2 SF
5 646.8 M
(splitjoin raiseChildren\(splitjoin sj, ) s
/Courier-Bold 2 2 SUF
50.6 646.8 M
(int) s
/F-gs-font 2 2 SF
54.2 646.8 M
( pos\)) s
5 644 M
(------------------------------------------------------------------) s
5 641.2 M
(sj2 = sj.child[pos]) s
/Courier-Oblique 2 2 SUF
5 638.4 M
(// must have "aligned rates" as follows) s
/F-gs-font 2 2 SF
5 635.6 M
(sumJoin = sj2.join.w[0] + ... + sj2.join.w[sj2.size-1]) s
/Courier-Bold 2 2 SUF
5 632.8 M
(if) s
/F-gs-font 2 2 SF
7.4 632.8 M
( \(count != sj.join.w[pos]\) ) s
5 630 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 630 M
(return) s
/F-gs-font 2 2 SF
14.6 630 M
( sj) s
5 627.2 M
(endif) s
/Courier-Oblique 2 2 SUF
5 624.4 M
(// build new new split... split types/weights must match) s
/F-gs-font 2 2 SF
/Courier-Bold 2 2 SUF
5 621.6 M
(if) s
/F-gs-font 2 2 SF
7.4 621.6 M
( \(sj.split is duplicate\)) s
5 618.8 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 618.8 M
(if) s
/F-gs-font 2 2 SF
9.8 618.8 M
( \(!sj2.split is duplicate\)) s
5 616 M
(    ) s
/Courier-Bold 2 2 SUF
9.8 616 M
(return) s
/F-gs-font 2 2 SF
17 616 M
( sj) s
5 613.2 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 613.2 M
(else) s
/F-gs-font 2 2 SF
12.2 613.2 M
( ) s
5 610.4 M
(    newSplit = duplicate) s
5 607.6 M
(  endif) s
/Courier-Bold 2 2 SUF
5 604.8 M
(else) s
/F-gs-font 2 2 SF
5 602 M
(  sumSplit = sj2.split.w[0] + ... + sj2.split.w[sj2.size-1]) s
5 599.2 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 599.2 M
(if) s
/F-gs-font 2 2 SF
9.8 599.2 M
( \(sumSplit!=sj.split.w[pos]\)) s
5 596.4 M
(    ) s
/Courier-Bold 2 2 SUF
9.8 596.4 M
(return) s
/F-gs-font 2 2 SF
17 596.4 M
( sj) s
5 593.6 M
(  ) s
/Courier-Bold 2 2 SUF
7.4 593.6 M
(else) s
/F-gs-font 2 2 SF
5 590.8 M
(    newSplit = roundrobin\( sj.split.w[0], ... , sj.split.w[pos-1], ) s
5 588 M
(                 sj2.split.w[0], ... , sj2.split.w[sj2.size-1], ) s
5 585.2 M
(                 sj.split.w[pos+1], ... , sj.split.w[sj.size-1] \)) s
5 582.4 M
(  endif) s
5 579.6 M
(endif) s
/Courier-Oblique 2 2 SUF
5 576.8 M
(// otherwise we can definately raise the child...) s
/F-gs-font 2 2 SF
5 574 M
(newChild = {  sj.child[0], ... , sj.child[pos-1], ) s
5 571.2 M
(              sj2.child[0], ... , sj2.child[sj2.size-1], ) s
5 568.4 M
(              sj.child[pos+1], ... , sj.child[sj.size-1] \);) s
5 565.6 M
(newJoin = roundrobin\( sj.join.w[0], ... , sj.join.w[pos-1], ) s
5 562.8 M
(            sj2.join.w[0], ... , sj2.join.w[sj2.size-1], ) s
5 560 M
(            sj.join.w[pos+1], ... , sj.join.w[sj.size-1] \)) s
/Courier-Bold 2 2 SUF
5 557.2 M
(return) s
/F-gs-font 2 2 SF
12.2 557.2 M
( splitjoin\( duplicate, newJoin, newChild \)) s
_R
S
%%Trailer
cleartomark countdictstack exch sub { end } repeat restore
%%EOF
