<!--#include virtual="../include/init.inc"-->
   <title>StreamIt - Download</title>
<!--#include virtual="../include/header-level1.inc"-->

  <tr>
    <td width="130" valign="top" align="left">
      <!--
      <b><hr>
	<a href="../shtml/systems-reqs.shtml"><font color="#000099">requirements</font></a><br><hr>
	<a href="../shtml/systems-dwnl.shtml"><font	color="#000099">download    </font></a><br><hr>
	<a href="../shtml/systems-faqs.shtml"><font color="#000099">faq         </font></a><br><hr>
 	<a href="../shtml/systems-sprt.shtml"><font color="#000099">support     </font></a><br><hr>
      </b>
      -->
    </td>
    <td width="20" valign="top" align="left"></td>
    <td width="700" valign="top" align="left">
      <hr>
      <h3>DOWNLOAD</h3>
      <p align="justify">

	  A public release of the StreamIt compiler, including the
	  <b><a href="../shtml/benchmarks.shtml">StreamIt
	  benchmarks</a></b>, is now available.  You may <b><a
	  href="register.shtml">register and download</a></b> either
	  the
	  <i>full source package</i> which  includes all of the StreamIt
	  sources,  or the  <i>full  binary package</i>  which does  not
	  contain any sources, but includes  a Java jar file of the full
	  compiler.<br>

	  <ul>
	    <li><p align="justify">
	    	Review the list of
	    	<a href="../shtml/download-reqs.shtml">software
	    	requirements</a> before downloading StreamIt.
	    </p>
	    <li><p align="justify">
	    	Read the <a
	    	href="../shtml/install.shtml">installation instructions</a>
	    	after you have downloaded StreamIt.
	    </p>
	    <li><p align="justify">
	    	Browse the <a
	    	href="../shtml/strc-options.shtml">quick start guide to StreamIt</a>
	    	for instructions on using the compiler.
	    </p>
	    <li><p align="justify">
	      For   technical  assistance  and   support,  you   may  <a
		href="../shtml/contact.shtml">        contact</a>        the
		StreamIt support  team.
	    </p>	    
	  </ul>

	  <hr>

	  <p align="justify">
	    The StreamIt  compiler is  a research infrastructure  and it
	    remains under  active development; if it breaks,  you get to
	    keep both pieces.  The compiler produces functional code for
	    both      uniprocessor      targets      and     the      <a
	    href="http://cag.lcs.mit.edu/raw">MIT Raw</a> processor, but
	    has several known shortcomings:
	  </p>
	  <ul>
	    <li><p align="justify">
	      The compiler works by converting StreamIt syntax to
            a Java intermediate  form; compiling <i>"foo.str"</i> will
            clobber  a  file   named  <i>"foo.java"</i>  in  the  same
            directory.
          </p>
	    <li><p align="justify">
	      The frontend  has only rudimentary  correctness checks. If
	      you get  strange exceptions from the  frontend, check your
	      program's  syntax,  and that  all  variables are  declared
	      before  being used.  A  semantic checker  is currently  in
	      progress.
          </p>
	    <li><p align="justify">
	      For  stream I/O  types, arrays  are not  supported  on the
	      uniprocessor backend.  Primitive types and  structures are
	      supported on  both the  uniprocessor backend and  Raw, and
	      should work in the Java library.
          </p>
	    <li><p align="justify">
            Multidimensional arrays may not work well, particularly as
            the input or output  type of a filter. (Better performance
            is often possible by destructuring arrays in any case.)
          </p>
	    <li><p align="justify"> The partitioner does not yet
	    support fusion of feedbackloops while performing load
	    balancing for Raw.  This means that the Raw backend might
	    fail for programs with small feedbackloops.
          </p>
	    <li><p align="justify">
	      The   compiler   may  have   memory   issues  running   on
	      particularly  large benchmarks.
          </p>
	  <!--
	    <li><p align="justify">
	      Phased  filter support  differs between  the  compiler and
		library.  A  work function that consists only  of calls to
		phase functions  should work  in both; a  more complicated
		work  function, possibly  including  variable declarations
		and static  control flow, would  work in the  compiler but
		not  the  library.  The  intermediate  Java  code  differs
		between the two compilation paths.
		-->
          </p>
	    <li><p align="justify">
	      The Java  library infrastructure may  not allow particular
	      combinations of  stream parameters.  This should  not be a
	      problem with the compiler; if you run into it, see
	      <i>library-init-functions.txt</i>       in             the
		<i>docs/implementation-notes/</i> directory for instructions that
	      may resolve the issue.
          </p>
	    <li><p align="justify">
	      Most  of  our  development  is  carried  out  in  a  Linux
	      environment; some aspects of  the compiler may be specific
	      to gcc and/or Linux.
          </p>

      </p>
    </td>
    <td width="150" valign="top" align="left"></td>
  </tr>

<!--#include virtual="../include/footer.inc"-->