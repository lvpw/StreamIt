%!PS-Adobe-3.0 EPSF-3.0
%%Title: (after-partition.dot.pdf)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 02:42:56 08/30/06
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 1167 1285 1666 1549
%%HiResBoundingBox: 1167.0 1284.88 1665.95 1549.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 15247 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreateDate>2006-08-30T02:42:56-04:00</xap:CreateDate>
         <xap:ModifyDate>2006-08-30T02:42:56-04:00</xap:ModifyDate>
         <xap:MetadataDate>2006-08-30T02:42:56-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>136</xapGImg:height>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6+/5C/lPrNtHeX+hc7i7&#xA;AuLlorq8gDyTJFzJWGaNaEwoaUpUV64qjJPyK/LJzMv6KItrq4uL28tfWlKy3NzGYnlLszSoQjMF&#xA;WN1X4jt0oqhLn/nHL8l7i2gtpPLaCG2JMKx3N5EVLKqsaxzKSSEFa9Tv1xVEv+RX5dx3U93ptnLp&#xA;d1eJJDfS20pf17ed+c0Lpci4RRJ05xqsiqAqOoAxVcv5H+QPrlzdTW005vZop7uN5mCu1t/vKPg4&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:F164D6C4F237DB11BB4EF0619F218308</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:F164D6C4F237DB11BB4EF0619F218308</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>uuid:146cbc0c-3313-426d-9224-2960eaa7c325</stRef:documentName>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
1167.0 1284.88 498.949 264.124 rectclip
q
1167.0 1284.88 m
1665.95 1284.88 l
1665.95 1549.0 l
1167.0 1549.0 l
h
W
n
1.0 0.0 0.0 -1.0 0.0 0.0 cm
0.3369 w
1.0 M
true setSA
n
1167.17 -1285.04 m
1167.17 -1285.04 1665.78 -1285.04 1665.78 -1285.04 c
1665.78 -1285.04 1665.78 -1547.83 1665.78 -1547.83 c
1665.78 -1547.83 1167.17 -1547.83 1167.17 -1547.83 c
1167.17 -1547.83 1167.17 -1285.04 1167.17 -1285.04 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (SWAAAA+Times)
%%Title: (SWAAAA+Times Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /SWAAAA+Times def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-46 -250 1126 831} def
/FontInfo 5 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 88 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 14 dict dup begin
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.1 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B896187A> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /SWAAAA+Times-Identity-H /Identity-H 0 [/SWAAAA+Times] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N57 (SWAAAA+Times-Identity-H)
/N57 (SWAAAA+Times-Identity-H) /Identity-H [ (SWAAAA+Times) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
1169.14 1544.05 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 25 GetGlyphDirectory
52 <001C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6E
B53E56E1831B0550D2FE4055F5> |
79 <001C60D8A8C9B7967683396363C51B2F1979461F3B52B4DE9D5B25D8A855
AB1B46FE9631B4DCEE52CD84AA08F1094EFB92ECAE28B9F270EC36D74BB15835
61930BC929FA93A4970736610867F1192023A3BA25> |
80 <001C60D8A8C9B7E2CE2B5D9AEC775B38F2FC9D79EBC0747E8537AA64BFDE
9DEE82BB7646F7CEC27EF91C06D4678185F05CE12ADDAD16B81BA95B5DFD51FB
920FE64B3BF8B211A23E486437984337D80F8A92C1A4FEF7A73E7D72D61B19CA
BFB469A3C452694B121B79570B42AFC2C91D3BE4E44C8314CD4F5854A5F1DDFE
4F4053B1138E72DDA0105AAD7207B1A0DCBB21F351A8E5ECCCDE451D167E6811
88C2514F73DC89> |
44 <001C60D8A8C9B74383E5F6C6CDF9C5C9B986319F48E0C8F60D9DD3B951CB
8A90C91D93DE> |
69 <001C60D8A8C9B7A66F84858C3680112C82D73E1C597325682C9ED530BCC0
B651B28ABA219143BA4989A6F804DAAF308E4096EA3C5EE4CE5A25A89A84AEDF
B47D9498707E4187C5FE017863CAF507AFEA82E084A8EFA129F39779B15FDFF3
2133732565D375FCDD8EE0A32F5A98049423277E1BD8> |
86 <001C60D8A8C9B75A17982D11DC3FC677436DFDC6EA949B3A8A476902498B
78CD729866CE567C88B5C4105F11006EA75E6774682E91A2E1F257423C8BD0B9
40F1B9F1BCB8B413DFC78AF75D4027> |
76 <001C60D8A8C9B88055FF27B3923C5344CB60EC167D30E66A163A5CE58557> |
16 <001C60D8A8C9B7BA8F6239473D6D0952B7B5E4CF4F1C971CBE1C94E90160
54EC0552B11B0B5EF94504E409022941DEA89445DB67DB2F07F4634927C31FC5
04AC564FF4DFB941DDF51D9955C409737147D922D6535E0476146E49A1150A> |
63 <001C60D8A8C9B7A73DB5FD3C3C923B7843323CF8B6FBF0CBA0C46FB7> |
38 <001C60D8A8C9B7544E530E823999841DA2F8EC66E9CFE2CD6B50437205F9
42FF37E122B69D17C7AA691A603207160811AFB791> |
65 <001C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B83F01E3CEBCE4
82B366633F5D4F2D1210B8096336DCE594268DC8CBC788AC277818F4265A1583
23040A081AF2813A4C46853024307C79D63531339CB7A33AE1B19A9EBE155A90
44AF94E2AB014EF5F3C3F84453DB645AE8DB251FAE462208E18C764287E4C503
E5D539A89B66BE752516C9BD24116E70C150AAE316110E44DAC51B50A5E67190
41345788BD574DAE6197556A3E98> |
84 <001C60D8A8C9B821B37F30E246C711EE3A9B1905ECA029E018F1B853B194
992023A1A2094A61AA6AC40B7390D1BCF785D2429D0AF32EA1E2BF602E38DE50
F90EE120A01A6478CC20B62FEDE17CBADD3C1BB7C9E4FE75CF0D3DFB8214AF8D
642DB00A> |
47 <001C60D8A8C9B624F9257693AA048B36DAD1746A21003321A85C5F6E80CF
60CB723A5CC5A54CF184D3FEE11F6EF76B25CBA2401CF46405EBA469AF87B00D
5751B379836707222B05CF252001B70774E3269C710D3AAEA9F64EAD29E5FC90
C01037E0F499A4> |
78 <001C60D8A8C9B790A816BA887E1FDE7CD82D372FF5366DAE5DCB8586A90B
38B997881AE3967F459F4112E189F13732C7688D71582E7A9ED9DDE11A26AE52
A0AA137F8A21AF613F6AFFF512A754B0550B0B3C16BE3A435E248CF28FD678E4
15358EE253E19230> |
51 <001C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC9666D445523C20D6BC
6D45C854A0BE693CA04DDB35CD63DEE609DA99BE5BB9BDB7651D8BF1CA5EA29F
7EFB65104E204234EA7868475D9878D05352A01BEB28BBDCB8142D807864E70A
03C78CC32A447952CB6F5903240924C227> |
85 <001C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A6
2DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DA
D0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8
F89019F8CCCB6FE03380D1> |
82 <001C60D8A8C9B825FA276057E42F8B6B57C9D83BDDD098E1F2815023B08C
E6DB69AE017A2B457327A0071129EDB590BE7AA3607E0922708891597C3D8F66
9F3ED32EED759BFAF13F7F4F0E8EBB695840553EB7F2B5DF808E628133796139
3BD02988D264043D0826E651AB7250C84536DC39AF> |
67 <001C60D8A8C9B77BBBDD6F2DE369649C6BDF153C7C962741EEC90DDB1DF1
E9782FBDC93F3133FEDE0DEC710BC71E765B57617A4C3A6F6003E2DAC43D9839
4F553F1D2B070FD11AFA487D9BDD28EA7E541892AA> |
19 <001C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09FB
3F0AFA0642E6C0751425F3A334CD3C228AEC4E90E461897DA0B6E68544752B67
A4F1AF2BA515FBEB3354381D1AEEE9228166830748EBCCD49650729B252BA0AF
9C83ED55793E92C62149841E4908A8558158DB07B1A2459DA9352556689C8455
5CD18A1256253A8BD45BD25F8CE8656AC404840665CF1FB17FCFAF> |
24 <001C60D8A8C9B7BA8F623D810BCFAA500925081CA33D22F40454E2DA1867
196729940CD0A5C1ECF9D45D88DFDF5E792BC01DDB322FE08E650555110E2277
B58D317E6F77605A2A5E572E3F33FBDE93CEEFA54E8170403DE2AAEA13EEEEC2
5435F970EAC1FE746C91849D341E5632DE319C889804DE73F175FF0DDED0E028
B9219721FD61F49E63FCEB21D9B139FB3BF983BE5CD5A828500154F7B9E41631
D4B7DA11B03A88CA94B567FE497A27AA9A33F529DEC3AB72118FB6C8C327EBF9
73F2DACBFB29604C0D3AAA2775424085847E4EF9C7> |
18 <001C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACAF941116
582617B9738BB5AF1D396C826652BF6DBB79EF1DD0AC1F7B54C0F37BCAD75B93
5293F3F71168A81E7D38CDD63CCC9A6CCC00BE68E00357641B> |
40 <001C60D8A8C9B6415B1C8023DCDB0FF1D084A484AF3579A723AF8D5247AB
B5D292AC378AF267DE95E8DC7174E8DD00326C723C8D6F70CCD88C857300A534
52> |
73 <001C60D8A8C9B88055FF27B3934D040E8DBE022633F95365A77FF409BAAF
F1E1652439417FB10FB1C8BD44F4FF37E45388A4291AA4DFED968F1E2FD89089
6D6F4E848D055FBE735701C484F07858CCD9> |
17 <001C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D5
98E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |
23 <001C60D8A8C9B7BA8F425ECEA3CCEB01D7DB356DB8BA3E0A3CCCF78FF75F
8426DAA26E156561A6B9F4A0AEC4D24580> |
!
end
end end
%ADOEndSubsetFont
/N57 4.7166 Tf
(\0004\000O\000P\000,\000E\000V\000E\000L\000\020\000?\000&\000L\000O\000\A\000T\000/\000N\000E\0003\000O\000U\000R\000C\000E\000?\000?\000\023\000\?\000\030\000\022\000?\000\(\000I\000E\000R\000?\000\(\000I\000E\000R\000\?\000\021\000\027\000\023)
[2.34412 2.58939 2.68375 2.22624 2.36305 2.2687 2.36305 1.10365 2.41962 2.3583 2.29698 
1.10365 2.58939 2.27338 1.56116 3.24972 2.61768 2.36305 2.32527 2.58939 2.59882 1.54231 
2.11303 2.36305 2.3583 2.3583 2.41962 2.3583 2.41962 2.41962 2.3583 3.07519 1.10365 
2.36305 1.54231 2.3583 3.07519 1.10365 2.36305 1.54231 2.3583 2.41962 2.41962 2.41962 
] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1172.56 -1328.17 m
1172.56 -1328.17 1660.39 -1328.17 1660.39 -1328.17 c
1660.39 -1328.17 1660.39 -1418.46 1660.39 -1418.46 c
1660.39 -1418.46 1172.56 -1418.46 1172.56 -1418.46 c
1172.56 -1418.46 1172.56 -1328.17 1172.56 -1328.17 c
h
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1175.07 1414.68 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 4 GetGlyphDirectory
42 <001C60D8A8C9B7299ACC7A42E6AE29E0787D9DA7475BC8B52E05061F7086
AAFF48958D5796C25528B68A53A127F22B73E1B82D000FDDD8C93746C59D7317> |
37 <001C60D8A8C9B7AFA9BC4F00998616708AD319D689B216B721CBB2862848
77352BA785E1B053DF2EC2B77B2A321D6047CBD4FD467F6DD70A1B400CD3EB> |
81 <001C60D8A8C9B7E897EED043C74253B54ADC1CD15CC5D2369EED179E4187
49FCECA224FAD8A34EB9BD7877CC97BC141452C1C22D35DEC4354AEA5079F527
6872807BF5EDD65591E095E87B92679B22DF99927D4E7465C02DAD24C43E908F
F3CA0E314CD4889800B6A7E8F34B832F99C86E9466BB91624900DCB9DA85DC9C
67EC1B3A5F3C2EB42BB53E2C5540DE7F05798BFE62BB837722ADFC21497AC84B
7C731A8F9BF1DE3D> |
20 <001C60D8A8C9B7BA8F425ECEAC1E90CF64A428339DB74167CDDD615E9086
60B3DCFC61B00E863A091E4C2411ED8A1FE7EF77B9EF8ED0EE14937DEA1D261C
E18126A49999E311FBCEDC110046FA33A851DF659FBB4009C8562C208B> |
!
end
end end
%ADOEndSubsetFont
(\0003\000P\000L\000I\000T\000*\000O\000I\000N\000\020\000?\000%\000Q\000\3\000P\000L\000I\000T\000?\000\030\000\021\000?\000\020\000?\000\(\000I\000\E\000R\000?\000\(\000I\000E\000R\000?\000\021\000\027\000\024)
[2.32527 2.68375 1.10365 1.10365 1.56116 1.74512 2.58939 1.10365 2.61768 2.41962 2.3583 
2.32059 2.65546 2.32527 2.68375 1.10365 1.10365 1.56116 2.3583 2.41962 2.41962 2.3583 
2.41962 2.3583 3.07519 1.10365 2.36305 1.54231 2.3583 3.07519 1.10365 2.36305 1.54231 
2.3583 2.41962 2.41962 2.41962 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1427.57 -1524.27 m
1427.57 -1532.64 1414.59 -1539.43 1398.59 -1539.43 c
1382.6 -1539.43 1369.62 -1532.64 1369.62 -1524.27 c
1369.62 -1515.9 1382.6 -1509.11 1398.59 -1509.11 c
1414.59 -1509.11 1427.57 -1515.9 1427.57 -1524.27 c
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1375.66 1531.25 m
(\000&\000L\000O\000A\000T\000/\000N\000E\0003\000O\000U\000R\000C\000E\000\?\000?\000\023\000?\000\030\000\022)
[2.29698 1.10365 2.58939 2.27338 1.56116 3.24972 2.61768 2.36305 2.32527 2.58939 2.59882 
1.54231 2.11303 2.36305 2.3583 2.3583 2.41962 2.3583 2.41962 2.41962 ] pdfxs
1391.12 1525.86 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 3 GetGlyphDirectory
83 <001C60D8A8C9B70FAD6F31E6985044CC86CE58E7103CFADE13C7DC457B6B
61B27C387A81A626F4966C688D0C50600476E9AB18467FFAC6ED3909C5C2017A
122463840FBE6795A1A2CAC9FEB45127B788B0426CC0AA67A9509F68032EDFEB
1AEA4184EB9837640B2C28468625> |
72 <001C60D8A8C9B790A816BA887E1EEB5E8F3559B4B8B5AF3C1F8CE7A16D3E
22CB112738E5F8A1CE5D26279FE5776EB4D209C6776FEB4AAA38429BF6C85B28
71ED715FE9B1E6017B480AA654530D060116FB2F0456C03BE42E66E7> |
29 <001C60D8A8C9B7C7F3AB181AB0C0D4CCBD039E0B840C2FD0290F361F5FAD
EFB5C66FFFF03997F6A3C47D6E28F621A8DA> |
!
end
end end
%ADOEndSubsetFont
(\000P\000U\000S\000H\000\035\000\021)
[2.68375 2.59882 1.86776 2.61768 2.81106 2.41962 ] pdfxs
1392.03 1520.47 m
(\000P\000O\000P\000\035\000\020)
[2.68375 2.58939 2.68375 2.81106 2.41962 ] pdfxs
1390.69 1515.08 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 1 GetGlyphDirectory
75 <001C60D8A8C9B746F4FCFA28E242EA979943B301877122189B94B7746787
75958F6CF4E2E0F5522F7B9585C8B0EB49A5C92E5202C6C38EBD05157E4CDB97
9B55A080B47AA80D3B2CE4ECE0C7> |
!
end
end end
%ADOEndSubsetFont
(\000P\000E\000E\000K\000\000\000\035\000\020)
[2.68375 2.36305 2.36305 2.21206 0.999946 2.81106 2.41962 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1427.23 -1481.19 m
1427.23 -1489.56 1414.4 -1496.35 1398.59 -1496.35 c
1382.79 -1496.35 1369.96 -1489.56 1369.96 -1481.19 c
1369.96 -1472.82 1382.79 -1466.03 1398.59 -1466.03 c
1414.4 -1466.03 1427.23 -1472.82 1427.23 -1481.19 c
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1376.85 1488.13 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 2 GetGlyphDirectory
87 <001C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA
80846DED508D58D627D5468DEE2B60219904BF5597C1DD0586D6CB808B7CC313
DDAA0A796A9F0AB2E718453881BA8BFE46177397F4506AB12A884ADC3EA310F7
BA731360D05BC453106567D4C7D8553B0FD82FB403D2071090179EE3FA548CEF
D0C62F> |
48 <001C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B5771A70D6
E97953F1D144059ED4A1FA2C4F4204702266669F1E78B62CE162B9A2B10D3019
FC319ACEE020094E9A769A2DCEC609C707A853CF960348961D0E687AE78FBE3D
C5B55501546D1534FA2BBDBB> |
!
end
end end
%ADOEndSubsetFont
(\000,\000O\000W\0000\000A\000S\000S\000&\000I\000L\000T\000E\000R\000?\000\?\000\021\000\023\000?\000\030\000\024)
[2.22624 2.58939 3.47138 2.50922 2.27338 1.86776 1.86776 2.29698 1.10365 1.10365 1.56116 
2.36305 1.54231 2.3583 2.3583 2.41962 2.41962 2.3583 2.41962 2.41962 ] pdfxs
1391.12 1482.74 m
(\000P\000U\000S\000H\000\035\000\021)
[2.68375 2.59882 1.86776 2.61768 2.81106 2.41962 ] pdfxs
1392.03 1477.35 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 1 GetGlyphDirectory
21 <001C60D8A8C9B7BA8F622456C49A518F1085868A644B482A95761EC40D33
51D4822367DFBC134C5554DD105D5A94BEAE9D21C1EEE8BC1DFF3D24CB8D5775
533BA6473F2BF5824FF528E8A1D3DC02763EE40CB70538E2FD10A2F17C5F6579
645821181390E15CE2634969098F1827> |
!
end
end end
%ADOEndSubsetFont
(\000P\000O\000P\000\035\000\025)
[2.68375 2.58939 2.68375 2.81106 2.41962 ] pdfxs
1389.48 1471.96 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 1 GetGlyphDirectory
22 <001C60D8A8C9B7BA8F6239473257A8A6F62798A9B90A534CECC0A90D8B73
AE3074157BABE14120F2609B18770B3E06AE47A154DC0A99FC2FCC80642F2DC7
F7A6023D85756DFE87A4B1F9960431B1674E1D12D344821E15F7A24B5F627C4C
65669BAE5E1A62CAE8D9CD7C3A3D44776C2FE82FC65ADF8829D321E60CD0095C
C7FF69210B6969F953136167C28B98> |
!
end
end end
%ADOEndSubsetFont
(\000P\000E\000E\000K\000\000\000\035\000\026\000\024)
[2.68375 2.36305 2.36305 2.21206 0.999946 2.81106 2.41962 2.41962 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1398.62 -1508.75 m
1398.62 -1505.71 1398.62 -1502.68 1398.62 -1499.99 c
S
n
1397.94 -1499.99 m
1397.94 -1499.99 1398.62 -1496.62 1398.62 -1496.62 c
1398.62 -1496.62 1399.63 -1499.99 1399.63 -1499.99 c
1399.63 -1499.99 1397.94 -1499.99 1397.94 -1499.99 c
h
[/DeviceGray] cs 0.0 sc
S
n
1397.94 -1499.99 m
1397.94 -1499.99 1398.62 -1496.62 1398.62 -1496.62 c
1398.62 -1496.62 1399.63 -1499.99 1399.63 -1499.99 c
1399.63 -1499.99 1397.94 -1499.99 1397.94 -1499.99 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1429.59 -1437.99 m
1429.59 -1446.36 1415.7 -1453.15 1398.59 -1453.15 c
1381.48 -1453.15 1367.6 -1446.36 1367.6 -1437.99 c
1367.6 -1429.62 1381.48 -1422.83 1398.59 -1422.83 c
1415.7 -1422.83 1429.59 -1429.62 1429.59 -1437.99 c
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1374.02 1445.0 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 4 GetGlyphDirectory
45 <001C60D8A8C9B6D9EA19A14B847D0E8EB8BF4B471CD6F46D062EB4BE9876
711DE846CB52CA29717591BA788944E909A85262E823C4FA12BA37712263FC72
E989A6DED74E14903D34D6198FBDC555D5CFE2C4496EBCDE1C8C3752795BF188
E4FAAED3EDACC0501E6038041D4A8B4E60EE57E2BABA6257E8> |
36 <001C60D8A8C9B64FADC8BE4593403BE5D424DEB8DFFAE06BF72BBBE59144
ED4D0D76A92E2A49E01C3250FA16D36E8432D1D43D5E2102AD433DB45A007188
1F56B96D80899632681F5387E21E3857808D19596B03B665F61B98CDE5985F3C
9D9C49CC8D985A3DCCA9E35E03A97C34> |
77 <001C60D8A8C9B6B7700392E60257FC106462D2DFCBC2A10C44EFEDC74AE4
DA23DDA2D9D4E78E5DFA35F442401F635CE4EC97BE57329CAA46C6A3C6CC0DEB
BD4CB8E8B931000F3668CFD86F5BA98BC18E8B1DBC445FD65D7EC5C67C2E7AD1
43C336B225F9618FB19106222772767E98CA6DE74BDC9E6E1E91AF0A9BC200F9
7951D7A45F25C7DC5AD757FFD60E2D9250E771B55218F79A54B61A1C40C396FB> |
68 <001C60D8A8C9B7E7C1D822193538A56B13640F1C3EE80C415BBD7C96E2BF
73396DB1AA7DC61C2D18E0B3069198774375660B0306E01D81239C02842C7F2E
14973A955EF13701904163E9D8199C7D02B07CD32387CE8688094A35EDC3BB36
E457939ADD3308C56413BCEB6E04555D81EBDA9F0A733BAFB14D3626C4FEF9EE
B409E9417D60AE7D1F31573E214F3C58292DA9BA7C14755FEDC4771F5484693E
D3BC8974E8B7374812226F> |
!
end
end end
%ADOEndSubsetFont
(\000&\000-\000$\000E\000M\000O\000D\000U\000L\000A\000T\000O\000R\000?\000\?\000\021\000\027\000?\000\030\000\025)
[2.29698 3.79215 3.14126 2.36305 3.93364 2.58939 2.66014 2.59882 1.10365 2.27338 1.56116 
2.58939 1.54231 2.3583 2.3583 2.41962 2.41962 2.3583 2.41962 2.41962 ] pdfxs
1391.12 1439.61 m
(\000P\000U\000S\000H\000\035\000\021)
[2.68375 2.59882 1.86776 2.61768 2.81106 2.41962 ] pdfxs
1392.03 1434.22 m
(\000P\000O\000P\000\035\000\021)
[2.68375 2.58939 2.68375 2.81106 2.41962 ] pdfxs
1390.69 1428.83 m
(\000P\000E\000E\000K\000\000\000\035\000\022)
[2.68375 2.36305 2.36305 2.21206 0.999946 2.81106 2.41962 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1398.62 -1465.62 m
1398.62 -1462.59 1398.62 -1459.56 1398.62 -1456.86 c
S
n
1397.94 -1456.86 m
1397.94 -1456.86 1398.62 -1453.49 1398.62 -1453.49 c
1398.62 -1453.49 1399.63 -1456.86 1399.63 -1456.86 c
1399.63 -1456.86 1397.94 -1456.86 1397.94 -1456.86 c
h
[/DeviceGray] cs 0.0 sc
S
n
1397.94 -1456.86 m
1397.94 -1456.86 1398.62 -1453.49 1398.62 -1453.49 c
1398.62 -1453.49 1399.63 -1456.86 1399.63 -1456.86 c
1399.63 -1456.86 1397.94 -1456.86 1397.94 -1456.86 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1423.31 -1404.27 m
1423.31 -1407.62 1412.29 -1410.33 1398.71 -1410.33 c
1385.14 -1410.33 1374.12 -1407.62 1374.12 -1404.27 c
1374.12 -1400.92 1385.14 -1398.21 1398.71 -1398.21 c
1412.29 -1398.21 1423.31 -1400.92 1423.31 -1404.27 c
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1379.8 1403.23 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 7 GetGlyphDirectory
53 <001C60D8A8C9B67A40D81BFBD664698F172962E5E1FA1185B63F3290B366
6C22108B29923B1DC2E04A6BB03297D059A20638E9439889AA598516C5989124
B65198F3D60A7398> |
41 <001C60D8A8C9B87DE005AD6F3C5D74814B2BFE06F81F462471EDB11E0EC3
9F39EA> |
35 <001C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C0603B0F
56B2079EC8B4534AB9C74A497574D9EF71E8F51BC95048F6DF2B869D41C666FA
C185E86887C1BFBF06008B88E70E2905C7696BAD3BCAD29844AD> |
33 <001C60D8A8C9B7D7E88499B0B4629F6222BB16137C7CA06A8AAC2774EF9B
3040901B1145499CB67E1F0E06E97898E1BF6CD1BDA4F8FEE98737DFEB0DA432
9DBC2B10502C72149324E886ACDA48658FC881BBAE> |
8 <001C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A
711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |
12 <001C60D8A8C9B89DB719C76984E1D043343790BEED227E9B2C48C19FEC8A
0F919F51B66D284B1B8CCC9C> |
9 <001C60D8A8C9B84E0A47D7FED609B3683507871E5C5015DC3BFD25D11DFBE
5B3FA44F36583D8E95C05293FC4D90FCF65F5DE156533A2E5AB895EC874E28F> |
!
end
end end
%ADOEndSubsetFont
(\000$\0005\0000\000,\000\)\000#\000!\0004\000%\000\b\000\021\000\f\000\021\\000\f\000\021\000\f\000\021\000\t)
[3.14126 3.05166 2.50922 2.22624 1.12726 2.73564 2.88656 2.34412 2.32059 1.3395 2.41962 
0.97634 2.41962 0.97634 2.41962 0.97634 2.41962 1.3395 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1398.62 -1422.5 m
1398.62 -1419.47 1398.62 -1416.1 1398.62 -1413.4 c
S
n
1397.94 -1413.74 m
1397.94 -1413.74 1398.62 -1410.37 1398.62 -1410.37 c
1398.62 -1410.37 1399.63 -1413.74 1399.63 -1413.74 c
1399.63 -1413.74 1397.94 -1413.74 1397.94 -1413.74 c
h
[/DeviceGray] cs 0.0 sc
S
n
1397.94 -1413.74 m
1397.94 -1413.74 1398.62 -1410.37 1398.62 -1410.37 c
1398.62 -1410.37 1399.63 -1413.74 1399.63 -1413.74 c
1399.63 -1413.74 1397.94 -1413.74 1397.94 -1413.74 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1273.54 -1370.55 m
1273.54 -1378.92 1251.5 -1385.71 1224.35 -1385.71 c
1197.2 -1385.71 1175.17 -1378.92 1175.17 -1370.55 c
1175.17 -1362.18 1197.2 -1355.39 1224.35 -1355.39 c
1251.5 -1355.39 1273.54 -1362.18 1273.54 -1370.55 c
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1181.7 1377.62 m
(\000&\000U\000S\000E\000D\000?\0003\000P\000L\000I\000T\000*\000O\000I\000\N\000\020\000?\000%\000Q\0003\000P\000L\000I\000T\000?\000\030\000\021\000\?\000\020\000?\000C\000H\000I\000L\000D\000\020\000?\000\021\000\025\000\\023)
[2.29698 2.59882 1.86776 2.36305 2.66014 2.3583 2.32527 2.68375 1.10365 1.10365 1.56116 
1.74512 2.58939 1.10365 2.61768 2.41962 2.3583 2.32059 2.65546 2.32527 2.68375 1.10365 
1.10365 1.56116 2.3583 2.41962 2.41962 2.3583 2.41962 2.3583 2.11303 2.61768 1.10365 
1.10365 2.66014 2.41962 2.3583 2.41962 2.41962 2.41962 ] pdfxs
1216.94 1372.23 m
(\000P\000U\000S\000H\000\035\000\022)
[2.68375 2.59882 1.86776 2.61768 2.81106 2.41962 ] pdfxs
1217.85 1366.84 m
(\000P\000O\000P\000\035\000\021)
[2.68375 2.58939 2.68375 2.81106 2.41962 ] pdfxs
1215.31 1361.45 m
(\000P\000E\000E\000K\000\000\000\035\000\026\000\024)
[2.68375 2.36305 2.36305 2.21206 0.999946 2.81106 2.41962 2.41962 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1376.72 -1401.61 m
1349.43 -1397.91 1302.94 -1391.5 1275.65 -1386.11 c
1271.61 -1385.1 1266.55 -1383.76 1261.16 -1382.41 c
S
n
1261.84 -1383.42 m
1261.84 -1383.42 1258.81 -1381.73 1258.81 -1381.73 c
1258.81 -1381.73 1262.17 -1381.73 1262.17 -1381.73 c
1262.17 -1381.73 1261.84 -1383.42 1261.84 -1383.42 c
h
[/DeviceGray] cs 0.0 sc
S
n
1261.84 -1383.42 m
1261.84 -1383.42 1258.81 -1381.73 1258.81 -1381.73 c
1258.81 -1381.73 1262.17 -1381.73 1262.17 -1381.73 c
1262.17 -1381.73 1261.84 -1383.42 1261.84 -1383.42 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1392.22 -1370.55 m
1392.22 -1378.92 1367.01 -1385.71 1335.95 -1385.71 c
1304.9 -1385.71 1279.69 -1378.92 1279.69 -1370.55 c
1279.69 -1362.18 1304.9 -1355.39 1335.95 -1355.39 c
1367.01 -1355.39 1392.22 -1362.18 1392.22 -1370.55 c
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1286.03 1377.62 m
(\000&\000U\000S\000E\000D\000?\0003\000P\000L\000I\000T\000*\000O\000I\000\N\000\020\000?\000%\000Q\0003\000P\000L\000I\000T\000?\000\030\000\021\000\?\000\020\000?\000C\000H\000I\000L\000D\000\021\000?\000C\000H\000I\000L\\000D\000\020\000?\000\021\000\025\000\026)
[2.29698 2.59882 1.86776 2.36305 2.66014 2.3583 2.32527 2.68375 1.10365 1.10365 1.56116 
1.74512 2.58939 1.10365 2.61768 2.41962 2.3583 2.32059 2.65546 2.32527 2.68375 1.10365 
1.10365 1.56116 2.3583 2.41962 2.41962 2.3583 2.41962 2.3583 2.11303 2.61768 1.10365 
1.10365 2.66014 2.41962 2.3583 2.11303 2.61768 1.10365 1.10365 2.66014 2.41962 2.3583 
2.41962 2.41962 2.41962 ] pdfxs
1328.46 1372.23 m
(\000P\000U\000S\000H\000\035\000\022)
[2.68375 2.59882 1.86776 2.61768 2.81106 2.41962 ] pdfxs
1329.36 1366.84 m
(\000P\000O\000P\000\035\000\021)
[2.68375 2.58939 2.68375 2.81106 2.41962 ] pdfxs
1326.82 1361.45 m
(\000P\000E\000E\000K\000\000\000\035\000\026\000\024)
[2.68375 2.36305 2.36305 2.21206 0.999946 2.81106 2.41962 2.41962 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1388.17 -1398.58 m
1381.44 -1395.21 1372.34 -1390.16 1363.58 -1385.44 c
S
n
1364.25 -1386.79 m
1364.25 -1386.79 1361.56 -1384.43 1361.56 -1384.43 c
1361.56 -1384.43 1364.93 -1385.1 1364.93 -1385.1 c
1364.93 -1385.1 1364.25 -1386.79 1364.25 -1386.79 c
h
[/DeviceGray] cs 0.0 sc
S
n
1364.25 -1386.79 m
1364.25 -1386.79 1361.56 -1384.43 1361.56 -1384.43 c
1361.56 -1384.43 1364.93 -1385.1 1364.93 -1385.1 c
1364.93 -1385.1 1364.25 -1386.79 1364.25 -1386.79 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1525.05 -1370.55 m
1525.05 -1378.92 1496.68 -1385.71 1461.71 -1385.71 c
1426.75 -1385.71 1398.38 -1378.92 1398.38 -1370.55 c
1398.38 -1362.18 1426.75 -1355.39 1461.71 -1355.39 c
1496.68 -1355.39 1525.05 -1362.18 1525.05 -1370.55 c
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1404.5 1377.62 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 1 GetGlyphDirectory
25 <001C60D8A8C9B7BA8F6221EDD135989371DA2F212F9B713BAB9018561883
DCCF43013C7DC60B0646C85A205B8E166EAB4165CDD99438481AD084E474FB83
123C662A5C6AD04127D6E2459E1A1313F357C24A8BB9044AD8AAC22072A80591
A06E6797E110D5653D923A6E5DF0E7CCE884CFF3344CFD7A566301F0BE8C5853
DDFCACC51B4468778613864489D372A68B3E> |
!
end
end end
%ADOEndSubsetFont
(\000&\000U\000S\000E\000D\000?\0003\000P\000L\000I\000T\000*\000O\000I\000\N\000\020\000?\000%\000Q\0003\000P\000L\000I\000T\000?\000\030\000\021\000\?\000\020\000?\000C\000H\000I\000L\000D\000\021\000?\000C\000H\000I\000L\\000D\000\021\000?\000C\000H\000I\000L\000D\000\020\000?\000\021\000\025\\000\031)
[2.29698 2.59882 1.86776 2.36305 2.66014 2.3583 2.32527 2.68375 1.10365 1.10365 1.56116 
1.74512 2.58939 1.10365 2.61768 2.41962 2.3583 2.32059 2.65546 2.32527 2.68375 1.10365 
1.10365 1.56116 2.3583 2.41962 2.41962 2.3583 2.41962 2.3583 2.11303 2.61768 1.10365 
1.10365 2.66014 2.41962 2.3583 2.11303 2.61768 1.10365 1.10365 2.66014 2.41962 2.3583 
2.11303 2.61768 1.10365 1.10365 2.66014 2.41962 2.3583 2.41962 2.41962 2.41962 ] pdfxs
1454.12 1372.23 m
(\000P\000U\000S\000H\000\035\000\022)
[2.68375 2.59882 1.86776 2.61768 2.81106 2.41962 ] pdfxs
1455.03 1366.84 m
(\000P\000O\000P\000\035\000\021)
[2.68375 2.58939 2.68375 2.81106 2.41962 ] pdfxs
1452.48 1361.45 m
(\000P\000E\000E\000K\000\000\000\035\000\026\000\024)
[2.68375 2.36305 2.36305 2.21206 0.999946 2.81106 2.41962 2.41962 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1409.06 -1398.58 m
1415.46 -1395.21 1424.9 -1390.16 1433.32 -1385.44 c
S
n
1431.97 -1385.1 m
1431.97 -1385.1 1435.34 -1384.43 1435.34 -1384.43 c
1435.34 -1384.43 1432.65 -1386.79 1432.65 -1386.79 c
1432.65 -1386.79 1431.97 -1385.1 1431.97 -1385.1 c
h
[/DeviceGray] cs 0.0 sc
S
n
1431.97 -1385.1 m
1431.97 -1385.1 1435.34 -1384.43 1435.34 -1384.43 c
1435.34 -1384.43 1432.65 -1386.79 1432.65 -1386.79 c
1432.65 -1386.79 1431.97 -1385.1 1431.97 -1385.1 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1657.77 -1370.55 m
1657.77 -1378.92 1629.4 -1385.71 1594.43 -1385.71 c
1559.47 -1385.71 1531.1 -1378.92 1531.1 -1370.55 c
1531.1 -1362.18 1559.47 -1355.39 1594.43 -1355.39 c
1629.4 -1355.39 1657.77 -1362.18 1657.77 -1370.55 c
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1537.24 1377.62 m
(\000&\000U\000S\000E\000D\000?\0003\000P\000L\000I\000T\000*\000O\000I\000\N\000\020\000?\000%\000Q\0003\000P\000L\000I\000T\000?\000\030\000\021\000\?\000\020\000?\000C\000H\000I\000L\000D\000\021\000?\000C\000H\000I\000L\\000D\000\021\000?\000C\000H\000I\000L\000D\000\021\000?\000\021\000\026\\000\022)
[2.29698 2.59882 1.86776 2.36305 2.66014 2.3583 2.32527 2.68375 1.10365 1.10365 1.56116 
1.74512 2.58939 1.10365 2.61768 2.41962 2.3583 2.32059 2.65546 2.32527 2.68375 1.10365 
1.10365 1.56116 2.3583 2.41962 2.41962 2.3583 2.41962 2.3583 2.11303 2.61768 1.10365 
1.10365 2.66014 2.41962 2.3583 2.11303 2.61768 1.10365 1.10365 2.66014 2.41962 2.3583 
2.11303 2.61768 1.10365 1.10365 2.66014 2.41962 2.3583 2.41962 2.41962 2.41962 ] pdfxs
1586.86 1372.23 m
(\000P\000U\000S\000H\000\035\000\022)
[2.68375 2.59882 1.86776 2.61768 2.81106 2.41962 ] pdfxs
1587.76 1366.84 m
(\000P\000O\000P\000\035\000\021)
[2.68375 2.58939 2.68375 2.81106 2.41962 ] pdfxs
1585.22 1361.45 m
(\000P\000E\000E\000K\000\000\000\035\000\026\000\024)
[2.68375 2.36305 2.36305 2.21206 0.999946 2.81106 2.41962 2.41962 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1420.52 -1401.61 m
1449.15 -1397.91 1499.35 -1391.17 1529.0 -1386.11 c
1534.39 -1385.1 1540.79 -1383.76 1547.87 -1382.41 c
S
n
1546.85 -1381.73 m
1546.85 -1381.73 1550.22 -1381.73 1550.22 -1381.73 c
1550.22 -1381.73 1547.19 -1383.42 1547.19 -1383.42 c
1547.19 -1383.42 1546.85 -1381.73 1546.85 -1381.73 c
h
[/DeviceGray] cs 0.0 sc
S
n
1546.85 -1381.73 m
1546.85 -1381.73 1550.22 -1381.73 1550.22 -1381.73 c
1550.22 -1381.73 1547.19 -1383.42 1547.19 -1383.42 c
1547.19 -1383.42 1546.85 -1381.73 1546.85 -1381.73 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1440.37 -1336.95 m
1440.37 -1340.3 1421.65 -1343.01 1398.59 -1343.01 c
1375.53 -1343.01 1356.82 -1340.3 1356.82 -1336.95 c
1356.82 -1333.6 1375.53 -1330.88 1398.59 -1330.88 c
1421.65 -1330.88 1440.37 -1333.6 1440.37 -1336.95 c
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1364.1 1335.85 m
%ADOBeginSubsetFont: SWAAAA+Times-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
/SWAAAA+Times 5 GetGlyphDirectory
55 <001C60D8A8C9B683825E2D044740A889FBE934ECCE78E1156C56B6149D73
8CA6C7B4AECC7FA154428E6DD465A34829655A052CE847BECFCE4935759CA332
0CB32E768FC6EFBCB2CBB05BF832AD060AE96C466D588BBBE9E07664F888374F
ADD9DAFA1F6B67B0D2A0D84DC25A0F90A7A94B1AFFA65681694BA26D98422B53
281178301F93B4E51ACA6C6CB21195> |
39 <001C60D8A8C9B67B1690716FF04D0147EA5B51F2B65610FAF2358C724A65
CE4A5C15BD93B6E6EA59AFCC3415F16C5AEB5B662300673D7883DCA60663F28B
1374AECADD3956841307F73A4A3284F6D8D8ABF9017548C3B89BDD9012EBEC97
E391C348B649F9A4B9E9FBB9333C1B69DB13F722AB4C9DC35502510C64773DA8
C4CCB3ABFBFDCCB6F676B3960993837C4B63CC7BA56876924A0E6E> |
50 <001C60D8A8C9B7818197CA8C10BDEF0792283B4AD60A4778EF56CD147344
6897A14587B239CC7236935A0C026A6381E9B79ABCED87A8EBB1D5AFD473480E
26645BAFFD01790195167107537B4D5E1C490BD01257730F3FC2EAC4A06E6D20
475F6A1920DC3E913DD654259560530D0C915BDA7946AB07618F2A> |
46 <001C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917F
D833E1AD6BC7D55692C9AE2F77E568D5881F8457D1A44289B0DB31B4E1DC1F34
87A85D6C086A5A13FB7D7B66A3F61FC6144BE5FC2AC4531DAC75D1CF7F22D283
068030CE48CB30B08E492B787031193B71DF10864EAAAD679E25079DE309> |
34 <001C60D8A8C9B79D2DDA73CBA562CCA616611FA2F6D9A4F73A3456416088
6E9CF893B5F30C6CA3CC5C829E6C86CCDF1B4F039933012B622744E19C9622C9
A0EDFD79C01774878F95329146747F49AE0B619F289D043714380915791A39EA
F1C55FAA6E8B0193D3A75CA38F014EE4A76200422AF52FE0B9914156E294C767
66CE3240B556A4C91860BA5F52645A4CE385CD5523EA2EA36662DB6518F37EBD
1D996F12928EF34E0A04AA450D0974D74C27> |
!
end
end end
%ADOEndSubsetFont
(\0007\000%\000\)\000'\000\(\0004\000%\000$\000?\0002\000/\0005\000.\000$\\000?\0002\000/\000"\000\)\000.\000\b\000\022\000\f\000\022\000\f\000\022\\000\f\000\022\000\t)
[3.99021 2.32059 1.12726 3.04691 3.07519 2.34412 2.32059 3.14126 2.3583 2.5375 3.24972 
3.05166 3.10355 3.14126 2.3583 2.5375 3.24972 2.55643 1.12726 3.10355 1.3395 2.41962 
0.97634 2.41962 0.97634 2.41962 0.97634 2.41962 1.3395 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1429.59 -1303.23 m
1429.59 -1311.6 1415.7 -1318.39 1398.59 -1318.39 c
1381.48 -1318.39 1367.6 -1311.6 1367.6 -1303.23 c
1367.6 -1294.86 1381.48 -1288.07 1398.59 -1288.07 c
1415.7 -1288.07 1429.59 -1294.86 1429.59 -1303.23 c
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
1374.28 1310.24 m
(\000&\000U\000S\000E\000D\000?\0003\000P\000L\000?\000!\000N\000O\000?\000\&\000L\000O\000?\000\021\000\027\000\020)
[2.29698 2.59882 1.86776 2.36305 2.66014 2.3583 2.32527 2.68375 1.10365 2.3583 2.88656 
2.61768 2.58939 2.3583 2.29698 1.10365 2.58939 2.3583 2.41962 2.41962 2.41962 ] pdfxs
1391.12 1304.85 m
(\000P\000U\000S\000H\000\035\000\020)
[2.68375 2.59882 1.86776 2.61768 2.81106 2.41962 ] pdfxs
1392.02 1299.46 m
(\000P\000O\000P\000\035\000\030)
[2.68375 2.58939 2.68375 2.81106 2.41962 ] pdfxs
1390.69 1294.07 m
(\000P\000E\000E\000K\000\000\000\035\000\030)
[2.68375 2.36305 2.36305 2.21206 0.999946 2.81106 2.41962 ] pdfxs
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
1398.62 -1330.86 m
1398.62 -1328.5 1398.62 -1325.47 1398.62 -1322.44 c
S
n
1397.94 -1322.1 m
1397.94 -1322.1 1398.62 -1318.73 1398.62 -1318.73 c
1398.62 -1318.73 1399.63 -1322.1 1399.63 -1322.1 c
1399.63 -1322.1 1397.94 -1322.1 1397.94 -1322.1 c
h
[/DeviceGray] cs 0.0 sc
S
n
1397.94 -1322.1 m
1397.94 -1322.1 1398.62 -1318.73 1398.62 -1318.73 c
1398.62 -1318.73 1399.63 -1322.1 1399.63 -1322.1 c
1399.63 -1322.1 1397.94 -1322.1 1397.94 -1322.1 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1258.47 -1359.5 m
1264.53 -1357.81 1270.93 -1356.13 1275.65 -1355.12 c
1299.23 -1350.4 1337.3 -1345.01 1364.93 -1341.31 c
S
n
1363.92 -1340.63 m
1363.92 -1340.63 1367.29 -1340.97 1367.29 -1340.97 c
1367.29 -1340.97 1363.92 -1342.32 1363.92 -1342.32 c
1363.92 -1342.32 1363.92 -1340.63 1363.92 -1340.63 c
h
[/DeviceGray] cs 0.0 sc
S
n
1363.92 -1340.63 m
1363.92 -1340.63 1367.29 -1340.97 1367.29 -1340.97 c
1367.29 -1340.97 1363.92 -1342.32 1363.92 -1342.32 c
1363.92 -1342.32 1363.92 -1340.63 1363.92 -1340.63 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1361.56 -1356.8 m
1369.65 -1352.76 1378.07 -1348.04 1385.14 -1344.34 c
S
n
1384.47 -1343.67 m
1384.47 -1343.67 1387.84 -1342.99 1387.84 -1342.99 c
1387.84 -1342.99 1385.14 -1345.35 1385.14 -1345.35 c
1385.14 -1345.35 1384.47 -1343.67 1384.47 -1343.67 c
h
[/DeviceGray] cs 0.0 sc
S
n
1384.47 -1343.67 m
1384.47 -1343.67 1387.84 -1342.99 1387.84 -1342.99 c
1387.84 -1342.99 1385.14 -1345.35 1385.14 -1345.35 c
1385.14 -1345.35 1384.47 -1343.67 1384.47 -1343.67 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1435.34 -1356.47 m
1427.59 -1352.42 1419.17 -1347.71 1412.43 -1344.34 c
S
n
1412.43 -1345.35 m
1412.43 -1345.35 1409.74 -1342.99 1409.74 -1342.99 c
1409.74 -1342.99 1413.11 -1343.67 1413.11 -1343.67 c
1413.11 -1343.67 1412.43 -1345.35 1412.43 -1345.35 c
h
[/DeviceGray] cs 0.0 sc
S
n
1412.43 -1345.35 m
1412.43 -1345.35 1409.74 -1342.99 1409.74 -1342.99 c
1409.74 -1342.99 1413.11 -1343.67 1413.11 -1343.67 c
1413.11 -1343.67 1412.43 -1345.35 1412.43 -1345.35 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
n
1550.22 -1359.5 m
1542.47 -1357.81 1535.06 -1356.13 1529.0 -1355.12 c
1503.06 -1350.4 1461.96 -1345.01 1432.98 -1341.31 c
S
n
1433.66 -1342.32 m
1433.66 -1342.32 1430.29 -1340.97 1430.29 -1340.97 c
1430.29 -1340.97 1433.66 -1340.63 1433.66 -1340.63 c
1433.66 -1340.63 1433.66 -1342.32 1433.66 -1342.32 c
h
[/DeviceGray] cs 0.0 sc
S
n
1433.66 -1342.32 m
1433.66 -1342.32 1430.29 -1340.97 1430.29 -1340.97 c
1430.29 -1340.97 1433.66 -1340.63 1433.66 -1340.63 c
1433.66 -1340.63 1433.66 -1342.32 1433.66 -1342.32 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
Q
/SWAAAA+Times /CIDFont _pdfUndefineResource
/SWAAAA+Times-Identity-H /Font _pdfUndefineResource
/N57 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
