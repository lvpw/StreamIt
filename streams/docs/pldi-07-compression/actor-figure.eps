%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - actor-figure.ppt)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 05:43:21 11/14/06
%%For: (Bill Thies)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 144 117 621 387
%%HiResBoundingBox: 144.0 117.0 621.0 387.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 17422 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreateDate>2006-11-14T05:43:21-05:00</xap:CreateDate>
         <xap:ModifyDate>2006-11-14T05:43:21-05:00</xap:ModifyDate>
         <xap:MetadataDate>2006-11-14T05:43:21-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:width>152</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FVC+vraxtJbu5Yr&#xA;BCOTsqtI1OmyIGZj7AYqgf8AEunf75vv+4fff9UcVd/iXTv9833/AHD77/qjirv8S6d/vm+/7h99&#xA;/wBUcVd/iXTv9833/cPvv+qOKtN5p0pWjEi3cfqyRwo0ljeInOZxGgLNCFWrsBUmmKptirHpdG0i&#xA;/wDNl899Y2926WFkEaeJJCAZrs0BYGmKofWF/K7RHij1kaHpkk39yl59Uty/b4RJxr9GKta7oHlY&#xA;aFJeWWm2IP7qS3uYYYf9+KVZHVfuIxVlWKscs9C0S+1fXZr3T7a6mF7GvqTQxyNxFjbUFWBNN8VR&#xA;3+E/K3/Vmsf+kaH/AJpxVAanoOh2U+mXFnp1rbTi9iAlhhjjcAhgRyVQd8VZJirsVdirsVdiqVea&#xA;f+ODdf7D/k4uKprirsVYtcfmJ5dt/PMflOe+sorqS2EoL3cSzfWXlVI7UQE8ubq/Je58MVRfmWfz&#xA;uZIrbyxa2ILKXn1HU3kMMe9AiW8FJJGPU1dFA7k9FWHWPnnUb5xo+s3ej3d0uo2UUN3pE0gDTR3s&#xA;ZaFrWflIp4xyEOruh4sKgimKvT8VSq2/5SnUf+YGx/5PXeKsW8+weSPL+nanqDJolr5k1NJJLWbW&#xA;Htle4lUAcQ926cgooFTmEGw+EYqgvL2l6vpmga1bPBYJ5fkFpc6Ld6ZxSC59Zy0s3oqzpCSvp1WP&#xA;92TVl+0QFXpeKpVo3/HR13/mOT/qBtsVSXU/zc/LzTdQlsLnVwbi3Yx3LQQXFxFC4+0s00EckUZX&#xA;9oOwp3xVM9SvrK/tNIvLGeO6tJ7yB4LiFhJG6nlRlZSQR8sVTzFXYq7FVDUNQstOsp76+nS2s7ZD&#xA;JPPIeKIi7kknFULpHmPQtZDHSr6K84IkknpNy4rIXVeX8p5ROCDuCCDiqn5p/wCODdf7D/k4uKof&#xA;zt5n0vy15bvNU1G/XTo1QxwXTo8vGZwRH+7jSV3odyAh2BPTFVLyB5p0/wAyeWra8tL06hJbhbW/&#xA;uzBNbB7qKNDMVjnjgahZq1C07dsVeZ2Gj+ZbT8zb2Q2Gqw2FxrZuUe20vS5rFonZP3j3lw7XqBqE&#xA;uU6dVA6Yqzr8z9f1qw0mG18vTzDWJriEzxWEEV5fx2RYiWeG1l+FqEAcmFOvemKsT8raDoX6J06T&#xA;UTdT+Y9M1SOfTTq9vDYahDb3V9AJ/Tt4CB9WLzGlRxBNBSgxV7BiqVW3/KU6j/zA2P8Ayeu8VYv5&#xA;+8h3mq6svmKz1m20uW1sWtHS8s7e6hYeoZVZnuOQi+I0qq/fiqLtb+4ufIQivJrCXUbaKCK7Gmzr&#xA;cQBlZBUFY4ePKlePCg7YqzLFUq0b/jo67/zHJ/1A22KvG9W81+d7fzBp+l+aFufIvlF5riO5bTLd&#xA;Ft0jUFrY/pWM3Cr67n4gscLL+OKvX9Xtba1i0yG2iSCEX8TCONQiguzMxotBVmJJ98VTrFXYq7FX&#xA;g/nzW/N2q3fmnRNRudRsNKtpJ5ZVtLMFUsoIFXTlt5zDJ6sl/eTguFZmHpkDgASVWaaZPruhx2+p&#xA;W3kW5vtc1ywsrjzHd2NxY26G9SMq8bx3dzA3NCTVgu4I3JGyrB9N/OP8w9b81eYPLN/5MuF0m0ul&#xA;hOoxtGDZAMjendOHktpW3/3VJyp2bFWYfnprOh2miaTa38llLNNqUEqadeXiWLTQoGEpWV2XgtG4&#xA;szVWh4n7WKon8kJ9Fm8r336LQgR6g8d3I1+mq85Vt4OJ+tRgRuFh9NAFrTjv8VcVeU6hpWjSfnlJ&#xA;fljcPFrtn62qTWxcxs1yixRRFpq/DODaM3p8QCrLuhOKvVPzzbR4fKdtcajp9hdsb2G3hu9Simlj&#xA;tPWJ5TAWxW46JT92wPc7DFUm8iRaPafl9c6jo9pp1/cfpWzDnQrea1a4MV1bssTNqUvN5KtsZJQm&#xA;43G+KrvzT/N/zv5X0Ky1DTPJWoR3Et/DbGK/awmSZZFcmKNbC9upxI3Gqn0yNt/Aqst8ja5qmuXU&#xA;+papotxoF7PYWJk027aN5E/e3e9Yz0P+Wqt4qMVY7+bN35uk1WDSbIaovl65sX+uNpWl22p+rM8n&#xA;AxTi6DIq+nuOIr1r2xVPLuwg0T8tgdN0xpLlLS15WyRQWlzM6+mP3q1jiSTrUFqA7Yqwz80fzj/M&#xA;nyxpelXen+RbuCe61KK0MN5LZ3QuFeGZzBElhczzCU+nyVuFPhNfAqs9/LvWNT1ix1LUtU0ibQ76&#xA;4u0abS7h0kkiP1K2oC0ZpuN9wD4gHbFXl/5gWx0bzLqGn6VNqumo620ml6DZXWpRwapLPITcJbtB&#xA;yhtevDipWjfE3wnFXrd1pWn6Tp+j6dp0It7O3vYRFECTSpZmJZiWZmYksxNSdzvirIMVdirsVdir&#xA;sVSnzQANBugBQfAdvEyqTirBfz5m0OXQ7CxuruwjvxdxXC21zqFpply1qOSzG3uLkhoidhyTc9Ol&#xA;cVTL8mX0uPybKbKSlpFdSkltWi1lUoiM3+lREog78O3XvirANM85+RLv8yzqT6Roeo6jLrAstP16&#xA;11K3Fw6yyLBDL9RVpHldA/H1VXdRWo3oqzX8638r3uhRaVq95awz289vqMVtqFrPdWkwjdkCTLAO&#xA;XFjUfCa+xGxVYh+WnkvT7I3PmfSLzT/0dfXlpDPY6VbT2luty+o2j8Qs/FmSGOIemSK8pJOgoAq9&#xA;3IBIJFSNx7HpiqVW3/KU6j/zA2P/ACeu8VePfnGH0vzhBBo+uN5TOoWzXt/diTUmguZfUEfH6vZM&#xA;I45KLyaSgZvoOKvQ7DSLDTfy7jWzIkN1FBdXV2Gmc3E8vpl52e5aSdufb1GLAUHbFWZkAkEipG49&#xA;j0xVKtG/46Ou/wDMcn/UDbYq8g/NO681r57vJdO8xw2FhaWcUcpfUzYDTvVKus8lrt9ZBkTkKcvU&#xA;/utt6qvX9f8A+lb/AMx0P/G2KprirsVdirsVdiqVeaf+ODdf7D/k4uKoq90fSb51e9sre6dBRGmi&#xA;SQgdaAsDiqjc6c1po17b6DDBZXbRSmzCIqRC4KERsygU+0BXbFXhXlL8v/NFrqflzUY9Ev8ATtRh&#xA;vrSNpbiZCI7aBTLrNxdenI0cjXs9w6Q8uTcUXjwUAYqyL8+tC1q/lguLHy4+oQxWcobWLdZbueGV&#xA;SzRwLZRXFs1HPWXjJxr9jFUb+WFl5ftPywsk0a+nvnk1LT5NWNyx9SG/a4tfXgKFIvS4bUTj771r&#xA;ir1fFUqtv+Up1H/mBsf+T13irxv86vMGmP5jhkS+u54orWewaxtNR1DSjBeJL/vQ5gjeOVVrTx26&#xA;N2VZb5J0zzHp35ZTRa5fNfl5I5NOuJJpLhzaFYVVzJN+8pLIryqrmqK4Q/ZxV6ZiqVaN/wAdHXf+&#xA;Y5P+oG2xV8y+bvO/l/X4LnzFqd9Z/wCLbLRmvNIkS8aNrHULbUDEkFtAJaB5IkErq4Zm/wBXbFX0&#xA;1r//AErf+Y6H/jbFU1xV2KuxV2KuxVAa9ZXN7pNxbWvD6w4HpCViiFlYNRmVXIG3XicVUfrPmn/q&#xA;3WP/AEnTf9kmKu+s+af+rdY/9J03/ZJirvrPmn/q3WP/AEnTf9kmKu+s+af+rdY/9J03/ZJiqGv4&#xA;PM19HDA9lZQxi6tZ5ZFu5XYJBcRzPRfqqcm4x0FWHzxVPsVSq2/5SnUf+YGx/wCT13irwP8AMy48&#xA;uP50k01tAg0S51DU47ObXdZk1Aet9YPxXlrCjwWrxIQdzcdeqYq9vvbFLDyPDYpN9ZS0traBbigH&#xA;qCPgoei7fFSu2KsixVKtG/46Ou/8xyf9QNtiryTzF58Sz12Sf/lX93Dpfl55JfMxMGkvyjmiP1d+&#xA;frsRQ/vDQ1p1xV63r/8A0rf+Y6H/AI2xVNcVdirsVdirsVdirsVdirsVdirsVdiqVW3/AClOo/8A&#xA;MDY/8nrvFXn/AOdPm1rO70rQDBZGCZ49Run1XUYNNtLiG3lCvaVnWRZudfjWlAKdcVZhcvbv5Dtn&#xA;t4ILa3a1tTDbWjrLbxofTKpDIgVHjUbIygAjpirJcVSrRv8Ajo67/wAxyf8AUDbYq8a/NzVfQ/My&#xA;2V/K1pqFzFbRHS5Li1up5L64WRZIoxJCyQ0Dco1Egbg3xt8NAVXrPnbVbPSdOtNRvfV+rW97A0no&#xA;Qy3MlCSvwxQLJK25/ZU4qwLzz/zkt5P8qnTZRY6je2l3M0V27WV5YvCoWoeMXsFukx7FQ4PfFU8u&#xA;Pzu8o22paTHd+taaXrGmyaja39xDcRvyjmSIQtbGL1ByDlg/2aDaoIOKss8t+atB8y2cl7ol19bt&#xA;opDDJJ6ckdJAoYikqoejDtiqbYq7FULqeoR6fYTXkkbyrCK+lFx5sSQAF5si1JPcjFUJ+mdR/wCr&#xA;Fff8HY/9lOKu/TOo/wDVivv+Dsf+ynFXfpnUf+rFff8AB2P/AGU4q79M6j/1Yr7/AIOx/wCynFVO&#xA;bzFc2/pNcaNewxSzQwGVmsyqtPKsKswS4ZqBnFaAmmKpziqVW3/KU6j/AMwNj/yeu8VeVfnZeadZ&#xA;eb9Lmjn1IavPZG3EGm6Zp2o1iMrOnP8ASBCqzMj8Qm+x8d1XoC3Ud3+XNhdRO0sdxY2cqSOsUbMr&#xA;iNgzJATCpNekZ4j9nbFWVYqlWjf8dHXf+Y5P+oG2xV4h+cdxKPPV0r+YpbS1T6myxxC+Jsplikb6&#xA;xxhAhKWkPq3Tb15MgYcaYq9v1/8A6Vv/ADHQ/wDG2Kq+oaHo2o3Nnc6hZQXc+nuZbGSeNZDDIwoX&#xA;j5A8Wp+0N8VbbRNLbW49cMAOqxWz2SXPJqi3kkWV04147vGprSu2Ko3FXYq7FUq80/8AHBuv9h/y&#xA;cXFU1xV2KsFk/NPRl/MNfLCz+rbCP6vLJFa3cvHUmlRVgaeNGgUBGPKp+E9SOmKp55l07zhqEkVv&#xA;omsQ6HaBS1xeC3W7umetAkayn0UWm5ZlcnpQdSqwjSNe81SXMmlanPeatYw6haRDU7rTRYSJcRX8&#xA;FUZom9GSNl3VlRe32q1Cr1XFUqtv+Up1H/mBsf8Ak9d4q8s/PnQte1TWtJ+p6PNqWnC3khvH0+3t&#xA;7i7HqtVQ/rHkiK8aPEVoOQbkabFV6A1te2v5e2drfww299BZWcV1b2wAgjlQRq6RAbBFYEL7Yqyj&#xA;FUq0b/jo67/zHJ/1A22KvD/zT8v+YNW/NO7k0jSG1BvqlvZg28cMtuJuUVxH+kfUblGrFAshoAYd&#xA;hyOwVe4a/wD9K3/mOh/42xVNcVdirsVQmrarp2kadcalqU621jaoZLi4evFEHVjQHYYqo6J5i0bX&#xA;IHn0q4+swxkK7hXQVIqPtqtdsVU/NP8Axwbr/Yf8nFxVLvzG82af5X8q3V/efWiJgbaAWCCS59SR&#xA;GPKMM8S1RVZ93HTxxVS/LTzPBr/liJo4b2KTTSlhcHUliW5kkigif1nWKW4/vFkVxVqmtehBKrzS&#xA;P6xpv5s3NtcajEjXetJOlrH5pSy+CYx8FfRkT967LSqk1k77muKsy/ObXntNJstMtdQawvry5idl&#xA;F6uktPbIx9aKHUJeMaSfZPFW507UNcVS3yRr2m3Hl+TSUu57jUYNTsp5459UOutHGb22VeV6nKNO&#xA;RrxhLcurUpXFXq2KpVbf8pTqP/MDY/8AJ67xV4V+a/m/VV/MC+nsLS7MWlQx6WLrR9Snt5ppHV72&#xA;RHSKzuS/1eNGeVVqIxuWBamKvYEluJfy4sJbm4S7uZLGyaa6idpI5XKxlpEd6MyudwTucVZViqVa&#xA;N/x0dd/5jk/6gbbFXhv5w6j5etfP2o3l3ZWTXWmwWjtazx6nLc6mCKhIp7WRILf0weK80bf4m+E4&#xA;q9ln1nTdZ03RtT02b17G5vYjDNxZOQVmU/C4Vhup6jFWRYq7FXYq8I81+bPP9xdeZLSW81HTodMn&#xA;vpRHa2AdDHHwg0a2iZ4JRcfpCWX1JRVtl4/AuKvUWn/MEWenmxsNL5NaQm9jurieBo7kr+8jRYoJ&#xA;14LtQ8sVeVWGt/8AOQM/m3zFZ6tplq/kyO7C/Wp2aMRLzTaxl4JLOtf546duS4qy389fMNjp2laL&#xA;ZymM3dxqUE8Ed1ZXN5autvVnEv1eOVhSoICnn3AIriqO/JKW1fyncraadb6dbR30qx/VLe7tYZx6&#xA;cbGVFvgs7bt6dWA+zxGwGKvKbt9FT88pYoA8TLrtqZYzJb/XJXknVjwi9IyrHHP8ZPPk1uz1ooGK&#xA;vU/z18xJoXkhbiWdLW1uL23tru4eC3umSFyxcxw3f7hn+H9vtXvTFWPeQvNemax+XVzH5Z1aHWdR&#xA;tNTszBb3cVlp3BjdW/pLJFpquqRM3+7OBbr1pirvzO13/nIix0axl0HSNMGoNfwoE0y4uL+R0KPy&#xA;SWK4tLeNYTT4n9QcdsVZr5GufNtzdTzebLK10/XGsLH6zbWUrTQj97d92A4nxUMwH8xxVjXmn8tD&#xA;Bqd5e6Ve30kutXRi+qxCJk079LGOHUL5AY2ducNvxHqHilWK4qy7XdM/Q/kL9F6NGhXT7a3tbGKd&#xA;2VOEJSNA7qrN9leoXFWB/mxrH5/WWk6RJ5X06ybUpNTijMenSS3ZeIwTFluFuIIY0hJA5OXFDx3x&#xA;Vm/5dz+Z57HUpfNFra2eutdob23spGlgVvqVtTizgHp1FTQ/tHriryT80bfTZfzQ1FtTt9OlUQ2Q&#xA;tX1bTtX1LbgS31drDhHCtT8StX4vi70xV7jr/wD0rf8AmOh/42xVNcVdirsVdirsVSrzT/xwbr/Y&#xA;f8nFxVgn566lo76LaaJdzos8txDeNa3NpqN1aTwQsweOY2EMpoTT4SR44qmP5MDTI/J050yzs7aE&#xA;XcpNvptve2kTP6cf7GorFLzIoOX2em/XFWDeXvOf5l3X5hRiXyUBa3epyx2+palbQxX9vpvqhZh6&#xA;yzDkIULU4qw6LVuuKsu/OXzJ5ctbODS9Smu7W+ieHUrC4tYrefjJFIyryhuHVJQN+Ske9a4qx78v&#xA;9B0e7t5fOdpf3d3c3N9bWlyt1b29qDPLqNnLNKsdsXUKVhhVVrtxY9XY4q9rxVKrb/lKdR/5gbH/&#xA;AJPXeKvIPz8udW07zdol/YXd9pCT2klrcanaC5dXHJnSIragGsclGozVYGiAfEcVemc79/y7sn1C&#xA;KSC/ays2u4J29SVJiIzIkj7cnVqhj3OKsoxVKtG/46Ou/wDMcn/UDbYq8k/Me+1e48ytqWmawRZG&#xA;7t9H0rVoNUltLPS9RBrMl3aRqYrrkTU8yQf7s8cVet6//wBK3/mOh/42xVNcVdirsVdirsVSrzT/&#xA;AMcG6/2H/JxcVTXFULqttc3Wl3lrazm1up4JIoLlesUjoVWQU7qTXFXi/l38oPNNtdeX7i607T7K&#xA;70+8seV1bzGVrSx0xS8ywu0aOX1O5mmklAoAG+Ms2Kp/+dHk7znr/pyaHY2d7ZpaSxyootY9T9c1&#xA;MXpT3kM8YhBpyVWjfwbFVbyDpel6X+XFjZWWkXejXMeoacNWt76OVJZL4XNqJ5g0rP6iuQOLqxXs&#xA;OlMVem4qlVt/ylOo/wDMDY/8nrvFXkn5q2NpZ+fRJbXWofpHUbH1Zlk8yvodokMcnp8IKrKWJb4m&#xA;QUUdaVOKvSGt4Lf8vbO3t4Ut4IbKzjigjm+spGiiMKizmnqhQKB/2uuKsoxVKtG/46Ou/wDMcn/U&#xA;DbYqwCb8rfN7aBP5GTVLBfJFxNIzTmCX9KLbS3BuXtwQ4g58mKesR0348sVZ/r//AErf+Y6H/jbF&#xA;U1xV2KuxV2KuxVB6vYPf6bPaJIIXlA4SleYVgQwJUFKio6VGKob6t5p/6uNj/wBIM3/ZXirvq3mn&#xA;/q42P/SDN/2V4q76t5p/6uNj/wBIM3/ZXirvq3mn/q42P/SDN/2V4qo3WleYLxYornULQwJPbzus&#xA;dnIjsLeZJuIZrlwOXp0rxOKp3iqVW3/KU6j/AMwNj/yeu8VYn5n/ACQ8o+ZtWl1TVrzVZbiUkrGL&#xA;+YRRgmvCJKkIlf2V2xVkerafBpvk8adbljb2cMFvCZGLuUiZEXkx3JoNziqfYqlWjf8AHR13/mOT&#xA;/qBtsVTXFUq1/wD6Vv8AzHQ/8bYqmuKuxV2KuxV2KuxV2KuxV2KuxV2KuxVLbvRXm1B76DULmylk&#xA;ijglWAW7KyxM7IT60UprWVuhxVZ+htR/6vt9/wABY/8AZNiqyby9cXEfpXOsXs8BKl4WWzVWCsGo&#xA;SlurU27EYqnGKpU+gzfXLu5ttVu7T65IsssMS2rIHWJIar6sEjbrEP2sVd+htR/6vt9/wFj/ANk2&#xA;KtfoCd57eS51W7ukt5BMsMi2qoXUGnIxwRvtXs2KptirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVakL&#xA;hGKCrgHiPft4Yq8k8g+VtY1vzBP5g83w3Vj5jt/qM0gS1eyQvCsivB6omu4LqANSnErT7XFSzFlX&#xA;rmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrZSBE5LBAFNXPRdup6dMVeQ/km2pxahdW&#xA;9rq0WsaMbS1eWSYala3LOwk9PUVt9QWf1FvVAq8UyxnjULWuKvSptT1d9SubSwsreZLUR85Z7l4S&#xA;WkBagVIJtgO9cVb+s+af+rdY/wDSdN/2SYqoXureYrK3a5uNOtPQQr6np3krOFZgpKqbVQSK9KjF&#xA;U8xV2KuxV2KuxV2KuxV2KuxV2KuxVgvnn80tH0XTdZt9MmN15isAtvb2kdtcXCm9mheaKL9yhDss&#xA;cZkdQ3wruaVxVG+RtS83ajLPdao9tdeX57KxuNC1O2AR7n1/WkmaaIM/pssZgFFJUmrKd+KqstxV&#xA;p+XBuH2qHjXpXtirx/8AKzy9rXkDU7i38xWUFpZanDaw/pgXVm0BvozLyij+GyljhlLgwwLC3Fi3&#xA;xb4q9M07/jvav/0b/wDJs4qmuKpV5p/44N1/sP8Ak4uKprirsVdirsVdirsVdirsVdirsVdirANS&#xA;/KSCfW9S1ew1m60+a+aa4ggVIZI7a9uoEtbm7i5rzLyW8XABmKqSSBirIovJulweWNP8t2s13aaf&#xA;pkUMFs9rcyW8/CBPTUNLCUY1H2uxOKoL/lXWnf8AV41z/uLX3/VXFXf8q607/q8a5/3Fr7/qrirF&#xA;/wAxvyJtPN3l0aNHr2p24e4illlu7y6vo+EZJYCCWXgWPYnpiqfflr5OtPKEN7oVre3l/Dai3C3F&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:E12D8BD6CC73DB11B2EC84C16D47C958</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:E12D8BD6CC73DB11B2EC84C16D47C958</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>uuid:64ccfe0b-dc87-41cb-b10e-8cb4c2f9e04e</stRef:documentName>
            <stRef:instanceID>uuid:458c14ce-e52f-467a-bd82-506f7b3b9100</stRef:instanceID>
            <stRef:documentID>uuid:8ed795be-2db3-410e-8e76-24affd242086</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Microsoft PowerPoint - actor-figure.ppt</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Bill Thies</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
144.0 117.0 477.0 270.0 rectclip
[ 0 -1 1 0 27 531 ] concat
q
144.0 117.0 m
414.0 117.0 l
414.0 594.0 l
144.0 594.0 l
h
W
n
1.0 0.0 0.0 -1.0 0.0 0.0 cm
0.75 w
8.0 M
1 J
true setSA
n
336.48 -364.62 m
336.48 -364.62 372.48 -364.62 372.48 -364.62 c
372.48 -364.62 372.48 -585.6 372.48 -585.6 c
372.48 -585.6 336.48 -585.6 336.48 -585.6 c
336.48 -585.6 336.48 -364.62 336.48 -364.62 c
h
[/DeviceRGB] cs 0.00392 0.00392 0.00392 sc
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (KGNBAA+ArialMT)
%%Title: (KGNBAA+ArialMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /KGNBAA+ArialMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-665 -325 2028 1006} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1320 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A93
6AA182F5809A9> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /KGNBAA+ArialMT-Identity-H /Identity-H 0 [/KGNBAA+ArialMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N43 (KGNBAA+ArialMT-Identity-H)
/N43 (KGNBAA+ArialMT-Identity-H) /Identity-H [ (KGNBAA+ArialMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
361.14 555.101 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
12 <001C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE
4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52A
BD0227B6CDD854C568D5A6F3817645C5> |
!
end
end end
%ADOEndSubsetFont
/N43 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(\000\f) show
361.14 543.097 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
36 <001C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB2
9ACC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D458220
8BD16D82> |
!
end
end end
%ADOEndSubsetFont
(\000$) show
361.14 537.104 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
11 <001C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D30
2C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC2
35F833AFCC30669C812FBF097879E1> |
!
end
end end
%ADOEndSubsetFont
(\000\013) show
361.14 528.106 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
70 <001C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0ED
CE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9
F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF3414
8C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36
548FE63FC8465B1B685766E782F0> |
!
end
end end
%ADOEndSubsetFont
(\000F) show
361.14 518.101 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
72 <001C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449
B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C
8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0E
EA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37
295284C077711C162623860AACA404F650F8D516970257> |
!
end
end end
%ADOEndSubsetFont
(\000H) show
361.14 509.102 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
91 <001C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E16
29C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDA
FEAD7BE7BD65F1051699CCF4B0> |
!
end
end end
%ADOEndSubsetFont
(\000[) show
361.14 497.098 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
40 <001C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411
B66E9361DDE78FC667AB91EF9824> |
!
end
end end
%ADOEndSubsetFont
(\000\() show
361.14 491.105 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
16 <001C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |
!
end
end end
%ADOEndSubsetFont
(\000\020) show
361.14 481.099 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
71 <001C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D962
1458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6
DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB6
12941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF
13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |
!
end
end end
%ADOEndSubsetFont
(\000G) show
361.14 471.093 m
(\000H) show
361.14 462.095 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
86 <001C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B
5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214
E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEAB
D96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046
E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB
3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8
435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F
4172D53C8FCAF4D28F2B78D3A4BF03> |
!
end
end end
%ADOEndSubsetFont
(\000V) show
361.14 453.097 m
(\000V) show
361.14 443.091 m
(\000H) show
361.14 437.099 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
85 <001C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857
894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619
ADD420F549AB7C795751D32E8EE6> |
!
end
end end
%ADOEndSubsetFont
(\000U) show
361.14 427.093 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
83 <001C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B9
6470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F43633
0DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F5
56CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672
C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |
!
end
end end
%ADOEndSubsetFont
(\000S) show
361.14 412.101 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
80 <001C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519A
D5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD
99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176A
FB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D5
5C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE3
7B> |
!
end
end end
%ADOEndSubsetFont
(\000P) show
361.14 402.093 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
82 <001C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A
987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C84
6C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD
79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC09
9F518C54BB58C51D6FB6D0C8> |
!
end
end end
%ADOEndSubsetFont
(\000R) show
361.141 389.101 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
38 <001C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210A
AD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B43
4C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047C
DFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F
32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D31
4851DE59> |
!
end
end end
%ADOEndSubsetFont
(\000&) show
410.46 467.64 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
55 <001C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A59
5D3927> |
!
end
end end
%ADOEndSubsetFont
(\0007) show
159.6 412.5 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
54 <001C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E55
8E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051
BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB
391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B
13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A9
6A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8
FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE
450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |
!
end
end end
%ADOEndSubsetFont
(\0006) show
164.58 424.5 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
20 <001C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |
!
end
end end
%ADOEndSubsetFont
/N43 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(\000\024) show
160.14 527.76 m
/N43 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(\0006) show
165.12 539.761 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
21 <001C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |
!
end
end end
%ADOEndSubsetFont
/N43 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(\000\025) show
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
280.26 -365.1 m
280.26 -365.1 316.26 -365.1 316.26 -365.1 c
316.26 -365.1 316.26 -586.14 316.26 -586.14 c
316.26 -586.14 280.26 -586.14 280.26 -586.14 c
280.26 -586.14 280.26 -365.1 280.26 -365.1 c
h
[/DeviceRGB] cs 0.00392 0.00392 0.00392 sc
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
304.86 529.479 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
81 <001C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A28
5C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCD
ADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5
203A8015DD09B7CE> |
!
end
end end
%ADOEndSubsetFont
/N43 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(\000Q) show
304.86 523.489 m
(\000\013) show
304.86 513.485 m
(\000Q) show
304.86 503.48 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
74 <001C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817
A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D
559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0
C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667
DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FB
D88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF
575C72F67F4BEBB98F8AFA57505EC9> |
!
end
end end
%ADOEndSubsetFont
(\000J) show
304.86 499.487 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
76 <001C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B
171C8A80AB> |
!
end
end end
%ADOEndSubsetFont
(\000L) show
304.86 495.495 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
79 <001C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |
!
end
end end
%ADOEndSubsetFont
(\000O) show
304.86 483.493 m
(\000$) show
304.86 477.502 m
(\000\020) show
304.86 462.512 m
(\000P) show
304.86 452.507 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
68 <001C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA
7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883
CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DB
BA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405
FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5
CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D
53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307
B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D1
77B5D88A> |
!
end
end end
%ADOEndSubsetFont
(\000D) show
304.86 442.502 m
(\000H) show
304.86 436.512 m
(\000U) show
304.86 431.512 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
87 <001C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D
065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349
CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB512
7F5C42C88FB43C> |
!
end
end end
%ADOEndSubsetFont
(\000W) show
304.86 419.51 m
(\0006) show
304.86 413.52 m
(\000\020) show
304.86 407.53 m
(\000U) show
304.86 397.525 m
(\000H) show
304.86 392.524 m
(\000W) show
304.86 382.52 m
(\000Q) show
304.86 377.52 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
44 <001C60D8A8C9B854D0F463D3892D665712D6B7D6A81E> |
!
end
end end
%ADOEndSubsetFont
(\000,) show
309.84 539.52 m
/N43 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(\000\024) show
304.86 551.103 m
/N43 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(\000Q) show
304.86 546.18 m
%ADOBeginSubsetFont: KGNBAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/KGNBAA+ArialMT 1 GetGlyphDirectory
15 <001C60D8A8C9B854D0F42C7AF5C4668C35A6B5F5176B9FC6F495643D4000
A6D27DE0DDA4D01F0D89D11ABC5445CF8C34A3A1CF> |
!
end
end end
%ADOEndSubsetFont
(\000\017) show
309.84 561.119 m
/N43 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(\000\025) show
304.86 567.78 m
/N43 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(\000\f) show
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
186.0 -377.1 m
186.0 -377.1 258.0 -377.1 258.0 -377.1 c
258.0 -377.1 258.0 -461.1 258.0 -461.1 c
258.0 -461.1 186.0 -461.1 186.0 -461.1 c
186.0 -461.1 186.0 -377.1 186.0 -377.1 c
h
[/DeviceRGB] cs 0.00392 0.00392 0.00392 sc
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
207.12 434.108 m
(\000\020) show
207.12 424.103 m
(\000D) show
207.12 418.11 m
(\000U) show
207.12 413.108 m
(\000W) show
207.12 403.103 m
(\000Q) show
207.12 398.101 m
(\000,) show
228.72 445.134 m
(\000\020) show
228.72 430.14 m
(\000P) show
228.72 420.132 m
(\000D) show
228.72 410.125 m
(\000H) show
228.72 404.13 m
(\000U) show
228.72 399.126 m
(\000W) show
228.72 387.121 m
(\0006) show
250.379 430.788 m
(\000Q) show
250.379 424.793 m
(\000\013) show
250.379 414.786 m
(\000Q) show
250.379 404.778 m
(\000J) show
250.379 400.782 m
(\000L) show
250.379 396.786 m
(\000O) show
250.379 384.78 m
(\000$) show
255.36 440.76 m
/N43 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(\000\024) show
250.38 447.42 m
/N43 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(\000\f) show
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
186.0 -491.1 m
186.0 -491.1 258.0 -491.1 258.0 -491.1 c
258.0 -491.1 258.0 -575.1 258.0 -575.1 c
258.0 -575.1 186.0 -575.1 186.0 -575.1 c
186.0 -575.1 186.0 -491.1 186.0 -491.1 c
h
[/DeviceRGB] cs 0.00392 0.00392 0.00392 sc
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
207.12 548.108 m
(\000\020) show
207.12 538.103 m
(\000D) show
207.12 532.11 m
(\000U) show
207.12 527.108 m
(\000W) show
207.12 517.103 m
(\000Q) show
207.12 512.101 m
(\000,) show
228.72 559.134 m
(\000\020) show
228.72 544.14 m
(\000P) show
228.72 534.132 m
(\000D) show
228.72 524.125 m
(\000H) show
228.72 518.13 m
(\000U) show
228.72 513.126 m
(\000W) show
228.72 501.121 m
(\0006) show
250.379 544.788 m
(\000Q) show
250.38 538.793 m
(\000\013) show
250.379 528.786 m
(\000Q) show
250.379 518.778 m
(\000J) show
250.379 514.782 m
(\000L) show
250.379 510.786 m
(\000O) show
250.379 498.78 m
(\000$) show
255.36 554.76 m
/N43 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(\000\025) show
250.38 561.42 m
/N43 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(\000\f) show
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
258.0 -419.88 m
258.0 -419.88 270.6 -419.88 270.6 -419.88 c
270.6 -419.88 270.6 -418.38 270.6 -418.38 c
270.6 -418.38 258.0 -418.38 258.0 -418.38 c
258.0 -418.38 258.0 -419.88 258.0 -419.88 c
h
269.64 -424.14 m
269.64 -424.14 279.6 -419.1 279.6 -419.1 c
279.6 -419.1 269.64 -414.12 269.64 -414.12 c
[/DeviceRGB] cs 0.00392 0.00392 0.00392 sc
f
n
258.0 -533.88 m
258.0 -533.88 270.6 -533.88 270.6 -533.88 c
270.6 -533.88 270.6 -532.38 270.6 -532.38 c
270.6 -532.38 258.0 -532.38 258.0 -532.38 c
258.0 -532.38 258.0 -533.88 258.0 -533.88 c
h
269.64 -538.14 m
269.64 -538.14 279.6 -533.1 279.6 -533.1 c
279.6 -533.1 269.64 -528.12 269.64 -528.12 c
f
n
265.74 -145.62 m
265.74 -145.62 301.74 -145.62 301.74 -145.62 c
301.74 -145.62 301.74 -259.62 301.74 -259.62 c
301.74 -259.62 265.74 -259.62 265.74 -259.62 c
265.74 -259.62 265.74 -145.62 265.74 -145.62 c
h
S
1.0 0.0 0.0 -1.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
290.34 228.654 m
(\000\f) show
290.339 216.648 m
(\000$) show
290.34 210.654 m
(\000\013) show
290.34 201.654 m
(\000F) show
290.34 191.646 m
(\000H) show
290.34 182.646 m
(\000[) show
290.34 170.641 m
(\000\() show
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
211.74 -170.4 m
211.74 -170.4 256.74 -170.4 256.74 -170.4 c
256.74 -170.4 256.74 -168.9 256.74 -168.9 c
256.74 -168.9 211.74 -168.9 211.74 -168.9 c
211.74 -168.9 211.74 -170.4 211.74 -170.4 c
h
255.72 -174.6 m
255.72 -174.6 265.74 -169.62 265.74 -169.62 c
265.74 -169.62 255.72 -164.64 255.72 -164.64 c
[/DeviceRGB] cs 0.00392 0.00392 0.00392 sc
f
n
301.74 -203.4 m
301.74 -203.4 346.74 -203.4 346.74 -203.4 c
346.74 -203.4 346.74 -201.9 346.74 -201.9 c
346.74 -201.9 301.74 -201.9 301.74 -201.9 c
301.74 -201.9 301.74 -203.4 301.74 -203.4 c
h
345.72 -207.6 m
345.72 -207.6 355.74 -202.62 355.74 -202.62 c
355.74 -202.62 345.72 -197.64 345.72 -197.64 c
f
n
211.74 -236.4 m
211.74 -236.4 256.74 -236.4 256.74 -236.4 c
256.74 -236.4 256.74 -234.9 256.74 -234.9 c
256.74 -234.9 211.74 -234.9 211.74 -234.9 c
211.74 -234.9 211.74 -236.4 211.74 -236.4 c
h
255.72 -240.6 m
255.72 -240.6 265.74 -235.62 265.74 -235.62 c
265.74 -235.62 255.72 -230.64 255.72 -230.64 c
f
1.0 0.0 0.0 -1.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
370.859 196.981 m
(\0007) show
204.0 161.76 m
(\0006) show
208.98 173.759 m
/N43 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(\000\024) show
204.0 230.879 m
/N43 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(\0006) show
208.98 242.88 m
/N43 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(\000\025) show
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (YNVBAA+Arial-ItalicMT)
%%Title: (YNVBAA+Arial-ItalicMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /YNVBAA+Arial-ItalicMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-517 -325 1082 998} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 956 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A93
6AA182F5809A9> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /YNVBAA+Arial-ItalicMT-Identity-H /Identity-H 0 [/YNVBAA+Arial-ItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N48 (YNVBAA+Arial-ItalicMT-Identity-H)
/N48 (YNVBAA+Arial-ItalicMT-Identity-H) /Identity-H [ (YNVBAA+Arial-ItalicMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
252.899 269.623 m
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/YNVBAA+Arial-ItalicMT 1 GetGlyphDirectory
81 <001C60D8A8C9B7EF322B18A8E8B2674776BB317260D07AACFA3465481E4F
B74827D3CE3327555DA6E18282782364AA872DF1DAFBF311A6BE634EE2284E4A
EFFF0DADB39A4096DF4A18C5E17D77FC063C67E26BBA6B806187FFFD8DE25F2D
58D002AEF2E409C1A7D172CB3CD1> |
!
end
end end
%ADOEndSubsetFont
/N48 [0.0 13.98 -13.98 0.0 0.0 0.0] Tf
(\000Q) show
252.899 265.779 m
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/YNVBAA+Arial-ItalicMT 1 GetGlyphDirectory
3 <001C60D8A8C9B854D00D> |
!
end
end end
%ADOEndSubsetFont
(\000\003) show
252.9 258.027 m
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/YNVBAA+Arial-ItalicMT 1 GetGlyphDirectory
83 <001C60D8A8C9B7EF3207F567BA45A9A2DC24C214D7FDAE273F6013EDBDEF
B2A033C3801A6B61EAA75EDEAD0C555E2B5C3A37DB1C932F175B45A14E1911D9
649FFCB7AC780E805193AFABE5F4C9B852C424AA59CD2841E403D67D40DB694E
AC0B3807BE83D89FED4BF01101B078C9EA9E888093645A0B16678A33385205DA
92D0E76615F71912977046A0D237F5EB4107C5ECC7D425356A6CBD5C6AA72F27
B93049AA39305145B394B3AF74AEB76849> |
!
end
end end
%ADOEndSubsetFont
(\000S) show
252.9 250.273 m
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/YNVBAA+Arial-ItalicMT 1 GetGlyphDirectory
82 <001C60D8A8C9B7EF320A9ABFEA5FF1C78F5840B7A5064DC8C7E41B0BBE48
36C650C07B0E95CD1630A250459B821DDE69AD2AAA346BDE8670C6D478E1AD40
7847DA3569019FF7CD08F616AD35AD641B4CF5788A4211E6B6BF63EE7DA33B57
DC4ECD3E8B6248858113BBA29F6AECE1A9288EF0C7897BB4DAE32705CDB5F650
C4344FD2288FFF670C7800BC673569236E671E22EA3E2EB886D5A6BF6938C7EF
CF6AD8D21ECB9E63DE5E72A0DF3DEBC27B9C026A2A36> |
!
end
end end
%ADOEndSubsetFont
(\000R) show
252.9 242.521 m
(\000S) show
256.919 277.439 m
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/YNVBAA+Arial-ItalicMT 1 GetGlyphDirectory
21 <001C60D8A8C9B7EF3224097BCB6ABBCDDEA477D12CFFAF4F68FB54930827
082AF91E2D1B8020DDADE94C5AC7042C1EA2941D40858EE393BA7D3F2A2C82F2
747F494AC0C60CDD5CBABD1E8112AD87385DD5F6259CA47A309713704E11F15B
D020829556D71EA564AB00E0DA68D41A172DCE1DA36DE7758589326BE57EE165
2A57AD1AF3EAB346A5F907B210589703F9EB3AD7898CC2DB965B4988A103> |
!
end
end end
%ADOEndSubsetFont
/N48 [0.0 9.0 -9.0 0.0 0.0 0.0] Tf
(\000\025) show
252.9 149.982 m
/N48 [0.0 13.98 -13.98 0.0 0.0 0.0] Tf
(\000Q) show
252.9 146.14 m
(\000\003) show
252.9 138.386 m
(\000S) show
252.9 130.634 m
(\000R) show
252.9 122.88 m
(\000S) show
256.92 157.799 m
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/YNVBAA+Arial-ItalicMT 1 GetGlyphDirectory
20 <001C60D8A8C9B7EF322BC8BFFEB46DFB8FEEF6035019FC931B1BBFB84699
BD6594BEC4C068E9FC2B14BBE1195BEC490DC755A231C46DE9EAB2> |
!
end
end end
%ADOEndSubsetFont
/N48 [0.0 9.0 -9.0 0.0 0.0 0.0] Tf
(\000\024) show
318.899 187.092 m
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/YNVBAA+Arial-ItalicMT 1 GetGlyphDirectory
80 <001C60D8A8C9B6B41CBB7CE52CADA9BB93ED388024666DE7453939D8C0BB
708C9663B80E641523F7E6595A9F4A0BF3FE4B0B5AF1CD4C3504435D1E06A42E
28FA87AC44F77CAF92AB1494EEDD0E0D959DCAB31C5353A52CAD7CE9804761FC
204F577F2A99221A0330CE3A8CBA17871EF3B672B895F1847C398BAF01E5794A
CDA086170DAE98DF2B98AEDF262B8A334006BD0DD3AF004DD0E8EBCBE620FBD4
C4FC6CDDA5BC4DCBC205F7384D0A7D59AD512EB46A161DAA3C7DEBA227284588
D623BD6024> |
!
end
end end
%ADOEndSubsetFont
/N48 [0.0 13.98 -13.98 0.0 0.0 0.0] Tf
(\000P) show
318.9 183.189 m
(\000\003) show
318.9 175.416 m
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/YNVBAA+Arial-ItalicMT 1 GetGlyphDirectory
75 <001C60D8A8C9B7EF322B1B3CB7A36FCDEEB8CBF34A925B4E0BAE2956F8A2
15F83293F639608FCFDD07626626577534C19364CF4D62953FC3EDDB9B1F3323
B8CA34A63C05DB8E601E5E660A64F1413958C469D41D787BED69F2986134D61D
FBE1AA87989F3382C2B4B439D3A76C4650B5891123E9> |
!
end
end end
%ADOEndSubsetFont
(\000K) show
318.9 168.426 m
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/YNVBAA+Arial-ItalicMT 1 GetGlyphDirectory
86 <001C60D8A8C9B7A73DBF501F5488FDBD4A20EF6D7B0506483C2B880D9827
035485646843C9D459AE9CB8D1BBD974889E6F89F2D43D89F327D894D864B1BF
A5AB890D16098D93759AFB3CA432904A4865393C68EE760D6EBDF0A6F29C5D97
65B45C6CB22C66996E91DD921F7292E259ABFB6A982338F25D286D28A8990FBB
123263F9C6EECFEC70EFF44E9EDC10ED0720F2476C4461C9BB9EE4E441F51AC8
4A1D9D4FF1983E0181C07DB489AADBC8B35A6747E61D103ACF8A6C8CBA20FE14
406BA91F13E4D8F3CBD8B7409F7F58C0A1B26D> |
!
end
end end
%ADOEndSubsetFont
(\000V) show
318.899 160.654 m
%ADOBeginSubsetFont: YNVBAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/YNVBAA+Arial-ItalicMT 1 GetGlyphDirectory
88 <001C60D8A8C9B7EF322474A3FF2252F8D4E7B8F3A17464B056D3596A3085
8BE0AAC1FDA682D8F4123E912883DE59CFE3BAC9264B6889F8BE310F125B9390
50B0551E424964CE907343BCAD6FB65FFC33ADA6E5E8020AC72D3FB9018F181C
424525E28468BF07B2156CCC6BBD5717088EDB73> |
!
end
end end
%ADOEndSubsetFont
(\000X) show
318.9 152.881 m
(\000S) show
1.0 0.0 0.0 -1.0 0.0 0.0 cm
n
315.6 -420.0 m
315.6 -420.0 328.26 -420.0 328.26 -420.0 c
328.26 -420.0 328.26 -418.5 328.26 -418.5 c
328.26 -418.5 315.6 -418.5 315.6 -418.5 c
315.6 -418.5 315.6 -420.0 315.6 -420.0 c
h
327.24 -424.26 m
327.24 -424.26 337.26 -419.22 337.26 -419.22 c
337.26 -419.22 327.24 -414.24 327.24 -414.24 c
[/DeviceRGB] cs 0.00392 0.00392 0.00392 sc
f
n
315.6 -534.0 m
315.6 -534.0 328.26 -534.0 328.26 -534.0 c
328.26 -534.0 328.26 -532.5 328.26 -532.5 c
328.26 -532.5 315.6 -532.5 315.6 -532.5 c
315.6 -532.5 315.6 -534.0 315.6 -534.0 c
h
327.24 -538.26 m
327.24 -538.26 337.26 -533.22 337.26 -533.22 c
337.26 -533.22 327.24 -528.24 327.24 -528.24 c
f
n
372.72 -473.88 m
372.72 -473.88 385.38 -473.88 385.38 -473.88 c
385.38 -473.88 385.38 -472.38 385.38 -472.38 c
385.38 -472.38 372.72 -472.38 372.72 -472.38 c
372.72 -472.38 372.72 -473.88 372.72 -473.88 c
h
384.36 -478.14 m
384.36 -478.14 394.38 -473.1 394.38 -473.1 c
394.38 -473.1 384.36 -468.12 384.36 -468.12 c
f
n
164.4 -420.0 m
164.4 -420.0 177.0 -420.0 177.0 -420.0 c
177.0 -420.0 177.0 -418.5 177.0 -418.5 c
177.0 -418.5 164.4 -418.5 164.4 -418.5 c
164.4 -418.5 164.4 -420.0 164.4 -420.0 c
h
175.98 -424.26 m
175.98 -424.26 186.0 -419.22 186.0 -419.22 c
186.0 -419.22 175.98 -414.24 175.98 -414.24 c
f
n
164.4 -534.0 m
164.4 -534.0 177.0 -534.0 177.0 -534.0 c
177.0 -534.0 177.0 -532.5 177.0 -532.5 c
177.0 -532.5 164.4 -532.5 164.4 -532.5 c
164.4 -532.5 164.4 -534.0 164.4 -534.0 c
h
175.98 -538.26 m
175.98 -538.26 186.0 -533.22 186.0 -533.22 c
186.0 -533.22 175.98 -528.24 175.98 -528.24 c
f
Q
/KGNBAA+ArialMT /CIDFont _pdfUndefineResource
/KGNBAA+ArialMT-Identity-H /Font _pdfUndefineResource
/N43 /Font _pdfUndefineResource
/YNVBAA+Arial-ItalicMT /CIDFont _pdfUndefineResource
/YNVBAA+Arial-ItalicMT-Identity-H /Font _pdfUndefineResource
/N48 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
