%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: compressed-splitjoin-example.pdf
%%Creator: Adobe Acrobat 8.0
%%For: Bill Thies
%%CreationDate: 7/17/2007, 3:34:14 AM
%%BoundingBox: -404 403 175 578
%%HiResBoundingBox: -403.1425 403.1426 174.8571 577.9996
%%CropBox: -403.1425 403.1426 174.8571 577.9996
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 4466 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
   xap:CreatorTool="PScript5.dll Version 5.2.2"
   xap:ModifyDate="2007-07-17T03:34:10-04:00"
   xap:CreateDate="2007-07-17T03:33:16-04:00"
   xap:MetadataDate="2007-07-17T03:34:10-04:00"
   dc:format="application/pdf"
   pdf:Producer="Acrobat Distiller 8.1.0 (Windows)"
   xapMM:DocumentID="uuid:d5b620ae-c2ab-4b53-bb92-8eb6d38ebcf0"
   xapMM:InstanceID="uuid:713cf008-0b71-437c-9038-67e577aa8585">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft PowerPoint - compressed-splitjoin-example</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Bill Thies</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/0 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 255 
/Lookup <~
J:N0"It)orIXQWmI!g<gH[C'bH?jd]G^+IWGB\4RG'.qMFEDVGF)uABEcH)=E,]c7Df9N2DJa6-Ci!p'
CMR["C2%BrBP;'lB4kggAn>ObA7T4\@q/tW@UW\R?smAL?XI,G?<piB>[1N<>?b97>$5!2=BJ[,='&F'
<`E$t;c?Um;Gp@h;,C(c:JXb]:/4MX9h\5S91qoM8kMWF84Q0?7Rfj977BU46pa4,5s[e%5X7Ou5<_7p
4Ztqj4?P\e4$#D`3B9)Z3&ifS2Dm?L1c.$F1G^dA1,1L<0/"t2/hS_-/M&G(.k<,".Olkr.4?Sm-RU8g
-70u`,U4NY+sJ3S+X%sN+<M[I*Zc@C*??(<)]BV5)&X;.(Ddi&()7Q!'GM5p',(ri&J,Kb%hB0\%LrmU
$jd4H"U,&1!<E<+"98E%!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
>>
/CSD add_res
/1 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 255 
/Lookup <~
J:N0"It)orIXQWmI!g<gH[C'bH?jd]G^+IWGB\4RG'.qMFEDVGF)uABEcH)=E,]c7Df9N2DJa6-Ci!p'
CMR["C2%BrBP;'lB4kggAn>ObA7T4\@q/tW@UW\R?smAL?XI)E?!LW>>?b<8>$>'3=]ed.='&I(<`W4#
<Dugp;GpCi;,L.d:esk_9he>U9MA)P91hfK8P)KD7n6$<7R]a76psF16UO.*5sR\#5<h@r5!D+m4Zb_e
3]];^3B9&Y3&`cT2)R6J1c.!E1GU^@0ekC:0JG.50.nk0/M/P*/1`;%.k3"u.4H\o-n$Gj-RL/e,pai^
,9nBV+sA*Q+<VdK+!2OF*ZZ7A)]K_7)B'J2)&O2-(Ddl'()@W"'bh>r',)#l&eY`e&.]9^%LrsW$k*IM
$3g\=!<E3'!s8N'!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
>>
/CSD add_res
/2 
<<
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
/MappedCSA null
/HiVal 255 
/Lookup <~
J:N0"It)orIXQWmI!g<gH[C'bH?jd]G^+IWGB\4RG'.qMFEDVGF)uABEcH)=E,]c7Df9N2DJa6-Ci!p'
CMR["C2%BrBP;'lB4kggAn>ObA7T4\@q/tW@UW\R?smAL?XI,G?<piB>[1N<>?b97>$5!2=BJ[,='&F'
<`N."<)cgq;c?Rl;Gg:g:f'ta:JX_\:/+GW9MA,Q91qlL8kDTG84Z9A7n6$<7R]a76psF16UO1,6:!n'
5X7S!5<h=q5!;%l4?P_f4$,Ja3]T2\3&ilV2`EWQ2Dm?L1c.$F1G^dA1,1L<0JG160/"q1/hJY,/1`>&
.k<)!.Oceq-n$Jk-RU5f-7'ra,U=W[,9nBV+sA*Q+<VdK+!2OF*ZQ.>)]K_7)B'J2)&F)*()@Z#'bqDs
'G;#k%hB0[%1N[Q$NL/,!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -578 translate
pgsv
[0 1 -1 0 174.857 0 ]ct
gsave
np
gsave
0 0 mo
0 578 li
174.857 578 li
174.857 0 li
cp
clp
[1 0 0 1 -175.551 0 ]ct
163.38 653.602 mo
448.5 653.602 li
448.5 -138.368 li
163.38 -138.368 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
201.36 423.832 mo
201.36 424.252 201.72 424.552 202.14 424.552 cv
202.56 424.552 202.86 424.252 202.86 423.832 cv
202.86 423.412 202.56 423.052 202.14 423.052 cv
201.72 423.052 201.36 423.412 201.36 423.832 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
.33 lw
1 lc
1 lj
10 ml
[] 0 dsh
false sadj
201.36 423.832 mo
201.36 424.252 201.72 424.552 202.14 424.552 cv
202.56 424.552 202.86 424.252 202.86 423.832 cv
202.86 423.412 202.56 423.052 202.14 423.052 cv
201.72 423.052 201.36 423.412 201.36 423.832 cv
cp
@
201.36 391.972 mo
201.36 392.392 201.72 392.692 202.14 392.692 cv
202.56 392.692 202.86 392.392 202.86 391.972 cv
202.86 391.552 202.56 391.252 202.14 391.252 cv
201.72 391.252 201.36 391.552 201.36 391.972 cv
ef
201.36 391.972 mo
201.36 392.392 201.72 392.692 202.14 392.692 cv
202.56 392.692 202.86 392.392 202.86 391.972 cv
202.86 391.552 202.56 391.252 202.14 391.252 cv
201.72 391.252 201.36 391.552 201.36 391.972 cv
cp
@
201.36 423.052 mo
199.92 420.832 li
@
202.8 423.052 mo
204.3 420.832 li
@
204.3 394.972 mo
202.8 392.692 li
@
201.54 392.692 mo
199.92 394.972 li
@
204.3 420.832 mo
204.3 394.972 li
@
199.92 420.832 mo
199.92 394.972 li
@
/1 
[/DeviceGray] /CSA add_res
0 gry
true set_gvm
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1991, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Arial is a trademark of The Monotype Corporation, registered in the US Patent and Trademark Office and elsewhere.) def
/Weight (Regular) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 111 /o put
def
/UniqueID 44339 def
/FontBBox {-222 -250 1006 922} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-25 0 716 728 518 530 706 706] def
/OtherBlues [349 358 -210 -199] def
/FamilyBlues [-25 0 716 728 518 530 706 706] def
/FamilyOtherBlues [349 358 -210 -199] def
/StdHW [72] def
/StdVW [88] def
/StemSnapH [72 85] def
/StemSnapV [88 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/o <1C60D8A8C9B7EF3272B38E4A6C94951E5562623629B934E27FB2180BD8D3
F6BE8C185E818E4FFC52D5CEB593503DF4218821B72034CF2A9A1A709533B323
EFB4629DFAE9D5E18F3D4BFACB0FD28655332930944FE909D271FBC01B5A1CBF
248702BAFDF5EBE494117F5AB7> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/UZRTXA+ArialMT /ArialMT findfont ct_VMDictPut
/UZRTXA+ArialMT*1 
[111{/.notdef}rp /o 144{/.notdef}rp]
UZRTXA+ArialMT nf
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204 471.532 mo
(ooooo)
[-4.37897 -4.37897 -4.37897 -4.43915 0 ]ysh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
true set_gvm
%ADOBeginSubsetFont: Arial-BoldMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Arial-BoldMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1991, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Arial is a trademark of The Monotype Corporation. registered in the US Patent and Trademark Office and elsewhere.) def
/Weight (Bold) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /x put
def
/UniqueID 44341 def
/FontBBox {-167 -250 1006 939} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-25 0 716 728 518 530 706 706] def
/OtherBlues [349 355 -210 -197] def
/FamilyBlues [-25 0 716 728 518 530 706 706] def
/FamilyOtherBlues [349 358 -210 -199] def
/StdHW [109] def
/StdVW [137] def
/StemSnapH [109 121] def
/StemSnapV [137 144] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/x <1C60D8A8C9B7EF324FE573CBC6AAE04E35CB866746618AFBF3F4A2AE329F
B6B45945C6BAF6FA9D0038F79F240CD7A08F46F395EA04D701B8B0436D39143C
703DFACD> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/UZRTXB+Arial-BoldMT-Identity-H /Arial-BoldMT findfont ct_VMDictPut
/UZRTXB+Arial-BoldMT-Identity-H*1 
[120{/.notdef}rp /x 135{/.notdef}rp]
UZRTXB+Arial-BoldMT-Identity-H nf
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
204 449.572 mo
(x)sh
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204 445.193 mo
(oooo)
[-4.43918 -4.37897 -4.37897 0 ]ysh
201.9 427.492 mo
201.9 425.632 li
202.14 425.632 li
202.2 425.752 li
202.2 427.492 li
202.14 427.612 li
201.9 427.612 li
201.9 427.492 li
cp
201.18 426.232 mo
202.02 424.432 li
202.92 426.232 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
201.9 391.252 mo
201.9 389.392 li
202.02 389.332 li
202.14 389.392 li
202.2 389.512 li
202.2 391.252 li
202.14 391.372 li
201.9 391.372 li
201.9 391.252 li
cp
201.18 389.992 mo
202.02 388.192 li
202.92 389.992 li
f
214.44 424.132 mo
214.44 424.552 214.74 424.912 215.16 424.912 cv
215.58 424.912 215.88 424.552 215.88 424.132 cv
215.88 423.712 215.58 423.412 215.16 423.412 cv
214.74 423.412 214.44 423.712 214.44 424.132 cv
ef
214.44 424.132 mo
214.44 424.552 214.74 424.912 215.16 424.912 cv
215.58 424.912 215.88 424.552 215.88 424.132 cv
215.88 423.712 215.58 423.412 215.16 423.412 cv
214.74 423.412 214.44 423.712 214.44 424.132 cv
cp
@
214.44 392.272 mo
214.44 392.692 214.74 393.052 215.16 393.052 cv
215.58 393.052 215.88 392.692 215.88 392.272 cv
215.88 391.912 215.58 391.552 215.16 391.552 cv
214.74 391.552 214.44 391.912 214.44 392.272 cv
ef
214.44 392.272 mo
214.44 392.692 214.74 393.052 215.16 393.052 cv
215.58 393.052 215.88 392.692 215.88 392.272 cv
215.88 391.912 215.58 391.552 215.16 391.552 cv
214.74 391.552 214.44 391.912 214.44 392.272 cv
cp
@
214.44 423.412 mo
212.94 421.132 li
@
215.82 423.412 mo
217.32 421.132 li
@
217.32 395.272 mo
215.82 393.052 li
@
214.56 393.052 mo
212.94 395.272 li
@
217.32 421.132 mo
217.32 395.272 li
@
212.94 421.132 mo
212.94 395.272 li
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
217.14 450.292 mo
(ooooo)
[-4.37897 -4.37897 -4.37897 -4.43915 0 ]ysh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
222.6 419.572 mo
(x)sh
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
222.6 415.192 mo
(oooo)
[-4.37897 -4.37897 -4.43918 0 ]ysh
214.98 427.912 mo
214.98 426.232 li
215.04 426.112 li
215.16 426.052 li
215.28 426.112 li
215.28 428.032 li
215.16 428.092 li
215.04 428.032 li
214.98 427.912 li
cp
214.26 426.652 mo
215.16 424.912 li
216 426.652 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
214.98 391.312 mo
214.98 389.572 li
215.04 389.452 li
215.16 389.392 li
215.28 389.452 li
215.28 391.432 li
215.04 391.432 li
214.98 391.312 li
cp
214.26 389.992 mo
215.16 388.252 li
216 389.992 li
f
234.3 423.712 mo
234.3 424.132 234.66 424.432 235.08 424.432 cv
235.5 424.432 235.8 424.132 235.8 423.712 cv
235.8 423.292 235.5 422.992 235.08 422.992 cv
234.66 422.992 234.3 423.292 234.3 423.712 cv
ef
234.3 423.712 mo
234.3 424.132 234.66 424.432 235.08 424.432 cv
235.5 424.432 235.8 424.132 235.8 423.712 cv
235.8 423.292 235.5 422.992 235.08 422.992 cv
234.66 422.992 234.3 423.292 234.3 423.712 cv
cp
@
234.3 391.852 mo
234.3 392.272 234.66 392.632 235.08 392.632 cv
235.5 392.632 235.8 392.272 235.8 391.852 cv
235.8 391.432 235.5 391.132 235.08 391.132 cv
234.66 391.132 234.3 391.432 234.3 391.852 cv
ef
234.3 391.852 mo
234.3 392.272 234.66 392.632 235.08 392.632 cv
235.5 392.632 235.8 392.272 235.8 391.852 cv
235.8 391.432 235.5 391.132 235.08 391.132 cv
234.66 391.132 234.3 391.432 234.3 391.852 cv
cp
@
234.3 422.992 mo
232.86 420.712 li
@
235.74 422.992 mo
237.24 420.712 li
@
237.24 394.852 mo
235.74 392.632 li
@
234.48 392.632 mo
232.86 394.852 li
@
237.24 420.712 mo
237.24 394.852 li
@
232.86 420.712 mo
232.86 394.852 li
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
232.02 419.452 mo
(ooooo)
[-4.37897 -4.37897 -4.37897 -4.43915 0 ]ysh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
242.46 419.092 mo
(x)sh
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
242.46 414.712 mo
(oooo)
[-4.37897 -4.37897 -4.43915 0 ]ysh
234.9 427.492 mo
234.9 425.632 li
235.14 425.632 li
235.2 425.752 li
235.2 427.492 li
235.14 427.612 li
234.9 427.612 li
234.9 427.492 li
cp
234.18 426.232 mo
235.02 424.432 li
235.92 426.232 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
234.9 390.832 mo
234.9 389.032 li
235.02 388.972 li
235.14 389.032 li
235.2 389.152 li
235.2 390.832 li
235.14 390.952 li
235.02 391.012 li
234.9 390.952 li
234.9 390.832 li
cp
234.18 389.572 mo
235.02 387.832 li
235.92 389.572 li
f
253.56 424.072 mo
253.56 424.492 253.92 424.852 254.34 424.852 cv
254.76 424.852 255.06 424.492 255.06 424.072 cv
255.06 423.652 254.76 423.352 254.34 423.352 cv
253.92 423.352 253.56 423.652 253.56 424.072 cv
ef
253.56 424.072 mo
253.56 424.492 253.92 424.852 254.34 424.852 cv
254.76 424.852 255.06 424.492 255.06 424.072 cv
255.06 423.652 254.76 423.352 254.34 423.352 cv
253.92 423.352 253.56 423.652 253.56 424.072 cv
cp
@
253.56 392.272 mo
253.56 392.632 253.92 392.992 254.34 392.992 cv
254.76 392.992 255.06 392.632 255.06 392.272 cv
255.06 391.852 254.76 391.492 254.34 391.492 cv
253.92 391.492 253.56 391.852 253.56 392.272 cv
ef
253.56 392.272 mo
253.56 392.632 253.92 392.992 254.34 392.992 cv
254.76 392.992 255.06 392.632 255.06 392.272 cv
255.06 391.852 254.76 391.492 254.34 391.492 cv
253.92 391.492 253.56 391.852 253.56 392.272 cv
cp
@
253.56 423.352 mo
252.12 421.072 li
@
255 423.352 mo
256.5 421.072 li
@
256.5 395.272 mo
255 392.992 li
@
253.74 392.992 mo
252.12 395.272 li
@
256.5 421.072 mo
256.5 395.272 li
@
252.12 421.072 mo
252.12 395.272 li
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
251.28 419.812 mo
(ooooo)
[-4.37897 -4.37897 -4.37897 -4.43915 0 ]ysh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
261.72 415.252 mo
(x)sh
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
261.72 410.872 mo
(ooo)
[-4.37897 -4.37897 0 ]ysh
254.1 427.852 mo
254.1 426.172 li
254.16 426.052 li
254.28 425.992 li
254.4 426.052 li
254.46 426.172 li
254.46 427.852 li
254.4 427.972 li
254.28 428.032 li
254.16 427.972 li
254.1 427.852 li
cp
253.44 426.592 mo
254.28 424.852 li
255.18 426.592 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
254.1 391.252 mo
254.1 389.512 li
254.16 389.392 li
254.28 389.332 li
254.4 389.392 li
254.46 389.512 li
254.46 391.252 li
254.4 391.372 li
254.16 391.372 li
254.1 391.252 li
cp
253.44 389.992 mo
254.28 388.192 li
255.18 389.992 li
f
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
256.38 388.012 mo
(o)sh
273.24 424.252 mo
273.24 424.672 273.6 424.972 274.02 424.972 cv
274.44 424.972 274.74 424.672 274.74 424.252 cv
274.74 423.832 274.44 423.532 274.02 423.532 cv
273.6 423.532 273.24 423.832 273.24 424.252 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
273.24 424.252 mo
273.24 424.672 273.6 424.972 274.02 424.972 cv
274.44 424.972 274.74 424.672 274.74 424.252 cv
274.74 423.832 274.44 423.532 274.02 423.532 cv
273.6 423.532 273.24 423.832 273.24 424.252 cv
cp
@
273.24 392.392 mo
273.24 392.812 273.6 393.172 274.02 393.172 cv
274.44 393.172 274.74 392.812 274.74 392.392 cv
274.74 391.972 274.44 391.672 274.02 391.672 cv
273.6 391.672 273.24 391.972 273.24 392.392 cv
ef
273.24 392.392 mo
273.24 392.812 273.6 393.172 274.02 393.172 cv
274.44 393.172 274.74 392.812 274.74 392.392 cv
274.74 391.972 274.44 391.672 274.02 391.672 cv
273.6 391.672 273.24 391.972 273.24 392.392 cv
cp
@
273.24 423.532 mo
271.8 421.252 li
@
274.68 423.532 mo
276.18 421.252 li
@
276.18 395.392 mo
274.68 393.172 li
@
273.42 393.172 mo
271.8 395.392 li
@
276.18 421.252 mo
276.18 395.392 li
@
271.8 421.252 mo
271.8 395.392 li
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
270.96 415.852 mo
(oooo)
[-4.37897 -4.37897 -4.37897 0 ]ysh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
281.4 415.432 mo
(x)sh
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
281.4 411.053 mo
(ooo)
[-4.37897 -4.37897 0 ]ysh
273.84 428.032 mo
273.84 426.172 li
274.08 426.172 li
274.14 426.292 li
274.14 428.032 li
274.08 428.152 li
273.96 428.212 li
273.84 428.152 li
273.84 428.032 li
cp
273.12 426.772 mo
273.96 424.972 li
274.86 426.772 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
273.84 391.372 mo
273.84 389.572 li
273.96 389.512 li
274.08 389.572 li
274.14 389.692 li
274.14 391.372 li
274.08 391.492 li
273.96 391.552 li
273.84 391.492 li
273.84 391.372 li
cp
273.12 390.112 mo
273.96 388.372 li
274.86 390.112 li
f
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
276.12 388.192 mo
(oo)
[-4.37897 0 ]ysh
293.16 424.072 mo
293.16 424.492 293.52 424.852 293.94 424.852 cv
294.36 424.852 294.66 424.492 294.66 424.072 cv
294.66 423.652 294.36 423.352 293.94 423.352 cv
293.52 423.352 293.16 423.652 293.16 424.072 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
293.16 424.072 mo
293.16 424.492 293.52 424.852 293.94 424.852 cv
294.36 424.852 294.66 424.492 294.66 424.072 cv
294.66 423.652 294.36 423.352 293.94 423.352 cv
293.52 423.352 293.16 423.652 293.16 424.072 cv
cp
@
293.16 392.272 mo
293.16 392.632 293.52 392.992 293.94 392.992 cv
294.36 392.992 294.66 392.632 294.66 392.272 cv
294.66 391.852 294.36 391.492 293.94 391.492 cv
293.52 391.492 293.16 391.852 293.16 392.272 cv
ef
293.16 392.272 mo
293.16 392.632 293.52 392.992 293.94 392.992 cv
294.36 392.992 294.66 392.632 294.66 392.272 cv
294.66 391.852 294.36 391.492 293.94 391.492 cv
293.52 391.492 293.16 391.852 293.16 392.272 cv
cp
@
293.16 423.352 mo
291.72 421.072 li
@
294.6 423.352 mo
296.1 421.072 li
@
296.1 395.272 mo
294.6 392.992 li
@
293.34 392.992 mo
291.72 395.272 li
@
296.1 421.072 mo
296.1 395.272 li
@
291.72 421.072 mo
291.72 395.272 li
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
290.88 402.532 mo
(o)sh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
301.32 401.872 mo
(x)sh
293.7 427.852 mo
293.7 426.172 li
293.76 426.052 li
293.88 425.992 li
294 426.052 li
294.06 426.172 li
294.06 427.852 li
294 427.972 li
293.88 428.032 li
293.76 427.972 li
293.7 427.852 li
cp
293.04 426.592 mo
293.88 424.852 li
294.78 426.592 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
293.7 391.252 mo
293.7 389.512 li
293.76 389.392 li
293.88 389.332 li
294 389.392 li
294.06 389.512 li
294.06 391.252 li
294 391.372 li
293.76 391.372 li
293.7 391.252 li
cp
293.04 389.992 mo
293.88 388.192 li
294.78 389.992 li
f
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
295.98 388.012 mo
(oooooooo)
[-4.37897 -4.37897 -4.37897 -4.43915 -4.37897 -4.37897 -4.43918 0 ]ysh
312.72 424.432 mo
312.72 424.852 313.02 425.152 313.44 425.152 cv
313.86 425.152 314.16 424.852 314.16 424.432 cv
314.16 424.012 313.86 423.652 313.44 423.652 cv
313.02 423.652 312.72 424.012 312.72 424.432 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
312.72 424.432 mo
312.72 424.852 313.02 425.152 313.44 425.152 cv
313.86 425.152 314.16 424.852 314.16 424.432 cv
314.16 424.012 313.86 423.652 313.44 423.652 cv
313.02 423.652 312.72 424.012 312.72 424.432 cv
cp
@
312.72 392.572 mo
312.72 392.992 313.02 393.292 313.44 393.292 cv
313.86 393.292 314.16 392.992 314.16 392.572 cv
314.16 392.152 313.86 391.852 313.44 391.852 cv
313.02 391.852 312.72 392.152 312.72 392.572 cv
ef
312.72 392.572 mo
312.72 392.992 313.02 393.292 313.44 393.292 cv
313.86 393.292 314.16 392.992 314.16 392.572 cv
314.16 392.152 313.86 391.852 313.44 391.852 cv
313.02 391.852 312.72 392.152 312.72 392.572 cv
cp
@
312.72 423.652 mo
311.22 421.432 li
@
314.16 423.652 mo
315.6 421.432 li
@
315.6 395.572 mo
314.16 393.292 li
@
312.84 393.292 mo
311.22 395.572 li
@
315.6 421.432 mo
315.6 395.572 li
@
311.22 421.432 mo
311.22 395.572 li
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
310.44 401.752 mo
(o)sh
313.26 428.212 mo
313.26 426.472 li
313.32 426.352 li
313.44 426.292 li
313.56 426.352 li
313.56 428.332 li
313.32 428.332 li
313.26 428.212 li
cp
312.54 426.952 mo
313.44 425.152 li
314.28 426.952 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
313.26 391.552 mo
313.26 389.872 li
313.32 389.752 li
313.44 389.692 li
313.56 389.752 li
313.56 391.672 li
313.44 391.732 li
313.32 391.672 li
313.26 391.552 li
cp
312.54 390.292 mo
313.44 388.552 li
314.28 390.292 li
f
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
315.54 388.372 mo
(x)sh
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
315.54 383.992 mo
(oooooooo)
[-4.37897 -4.37897 -4.43915 -4.37897 -4.37897 -4.43918 -4.37897 0 ]ysh
281.4 532.552 mo
281.4 530.872 li
281.46 530.752 li
281.58 530.692 li
281.7 530.752 li
281.76 530.872 li
281.76 532.552 li
281.7 532.672 li
281.58 532.732 li
281.46 532.672 li
281.4 532.552 li
cp
280.68 531.292 mo
281.58 529.552 li
282.48 531.292 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
0 lj
8 ml
277.14 529.252 mo
285.36 529.252 li
285.36 522.652 li
277.14 522.652 li
cp
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
283.38 528.292 mo
(x)sh
299.52 529.312 mo
307.74 529.312 li
307.74 522.712 li
299.52 522.712 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
305.76 528.232 mo
(o)sh
321.84 539.212 mo
330.06 539.212 li
330.06 532.612 li
321.84 532.612 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
328.08 538.012 mo
(o)sh
321.84 529.552 mo
330.06 529.552 li
330.06 522.952 li
321.84 522.952 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
328.08 528.292 mo
(o)sh
283.38 538.012 mo
(o)sh
277.14 539.212 mo
285.36 539.212 li
285.36 532.612 li
277.14 532.612 li
cp
288.36 529.252 mo
296.58 529.252 li
296.58 522.652 li
288.36 522.652 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
294.6 528.292 mo
(o)sh
299.52 539.152 mo
307.74 539.152 li
307.74 532.552 li
299.52 532.552 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
305.76 538.012 mo
(o)sh
310.68 539.212 mo
318.9 539.212 li
318.9 532.612 li
310.68 532.612 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
316.92 538.012 mo
(o)sh
310.68 529.492 mo
318.9 529.492 li
318.9 522.892 li
310.68 522.892 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
316.92 528.232 mo
(o)sh
294.6 538.012 mo
(o)sh
288.36 539.212 mo
296.58 539.212 li
296.58 532.612 li
288.36 532.612 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
303.48 532.312 mo
303.48 530.452 li
303.72 530.452 li
303.78 530.572 li
303.78 532.312 li
303.72 532.432 li
303.6 532.492 li
303.48 532.432 li
303.48 532.312 li
cp
302.76 531.052 mo
303.6 529.252 li
304.5 531.052 li
f
326.1 532.492 mo
326.1 530.752 li
326.16 530.632 li
326.28 530.572 li
326.4 530.632 li
326.46 530.752 li
326.46 532.492 li
326.4 532.612 li
326.16 532.612 li
326.1 532.492 li
cp
325.38 531.232 mo
326.28 529.432 li
327.18 531.232 li
f
292.44 532.492 mo
292.44 530.752 li
292.5 530.632 li
292.62 530.572 li
292.74 530.632 li
292.8 530.752 li
292.8 532.492 li
292.74 532.612 li
292.5 532.612 li
292.44 532.492 li
cp
291.72 531.232 mo
292.62 529.432 li
293.52 531.232 li
f
314.94 532.552 mo
314.94 530.872 li
315 530.752 li
315.12 530.692 li
315.24 530.752 li
315.3 530.872 li
315.3 532.552 li
315.24 532.672 li
315.12 532.732 li
315 532.672 li
314.94 532.552 li
cp
314.22 531.292 mo
315.12 529.552 li
316.02 531.292 li
f
326.04 522.772 mo
326.04 521.092 li
326.1 520.972 li
326.22 520.912 li
326.34 520.972 li
326.4 521.092 li
326.4 522.772 li
326.34 522.892 li
326.22 522.952 li
326.1 522.892 li
326.04 522.772 li
cp
325.38 521.512 mo
326.22 519.772 li
327.12 521.512 li
f
285.78 525.712 mo
287.52 534.952 li
287.52 535.072 li
287.4 535.132 li
287.28 535.132 li
287.22 535.012 li
285.42 525.772 li
285.48 525.652 li
285.54 525.592 li
285.78 525.712 li
cp
288.18 534.352 mo
287.64 536.272 li
286.44 534.712 li
f
281.4 542.152 mo
281.4 540.472 li
281.46 540.352 li
281.58 540.292 li
281.7 540.352 li
281.76 540.472 li
281.76 542.152 li
281.7 542.272 li
281.58 542.332 li
281.46 542.272 li
281.4 542.152 li
cp
280.68 540.892 mo
281.58 539.152 li
282.48 540.892 li
f
296.94 525.712 mo
298.68 534.952 li
298.68 535.072 li
298.56 535.132 li
298.44 535.132 li
298.38 535.012 li
296.58 525.772 li
296.64 525.652 li
296.7 525.592 li
296.82 525.592 li
296.94 525.712 li
cp
299.34 534.352 mo
298.8 536.272 li
297.6 534.712 li
f
308.16 525.712 mo
309.9 534.952 li
309.9 535.072 li
309.78 535.132 li
309.66 535.132 li
309.6 535.012 li
307.8 525.772 li
307.86 525.652 li
307.92 525.592 li
308.04 525.592 li
308.16 525.712 li
cp
310.56 534.352 mo
310.02 536.272 li
308.82 534.712 li
f
319.32 525.712 mo
321.06 534.952 li
321.06 535.072 li
320.94 535.132 li
320.82 535.132 li
320.76 535.012 li
318.96 525.772 li
319.02 525.652 li
319.08 525.592 li
319.2 525.592 li
319.32 525.712 li
cp
321.72 534.352 mo
321.18 536.272 li
319.98 534.712 li
f
326.04 424.492 mo
326.04 424.912 326.4 425.212 326.82 425.212 cv
327.24 425.212 327.54 424.912 327.54 424.492 cv
327.54 424.072 327.24 423.712 326.82 423.712 cv
326.4 423.712 326.04 424.072 326.04 424.492 cv
ef
1 lj
10 ml
326.04 424.492 mo
326.04 424.912 326.4 425.212 326.82 425.212 cv
327.24 425.212 327.54 424.912 327.54 424.492 cv
327.54 424.072 327.24 423.712 326.82 423.712 cv
326.4 423.712 326.04 424.072 326.04 424.492 cv
cp
@
326.04 392.632 mo
326.04 393.052 326.4 393.352 326.82 393.352 cv
327.24 393.352 327.54 393.052 327.54 392.632 cv
327.54 392.212 327.24 391.912 326.82 391.912 cv
326.4 391.912 326.04 392.212 326.04 392.632 cv
ef
326.04 392.632 mo
326.04 393.052 326.4 393.352 326.82 393.352 cv
327.24 393.352 327.54 393.052 327.54 392.632 cv
327.54 392.212 327.24 391.912 326.82 391.912 cv
326.4 391.912 326.04 392.212 326.04 392.632 cv
cp
@
326.04 423.712 mo
324.6 421.492 li
@
327.48 423.712 mo
328.98 421.492 li
@
328.98 395.632 mo
327.48 393.352 li
@
326.22 393.352 mo
324.6 395.632 li
@
328.98 421.492 mo
328.98 395.632 li
@
324.6 421.492 mo
324.6 395.632 li
@
326.64 428.272 mo
326.64 426.412 li
326.76 426.352 li
326.88 426.412 li
326.94 426.532 li
326.94 428.272 li
326.88 428.392 li
326.64 428.392 li
326.64 428.272 li
cp
325.92 426.952 mo
326.76 425.212 li
327.66 426.952 li
f
326.64 391.612 mo
326.64 389.812 li
326.76 389.752 li
326.88 389.812 li
326.94 389.932 li
326.94 391.612 li
326.88 391.732 li
326.76 391.792 li
326.64 391.732 li
326.64 391.612 li
cp
325.92 390.352 mo
326.76 388.612 li
327.66 390.352 li
f
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
328.92 388.432 mo
(o)sh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
328.92 384.052 mo
(x)sh
0 gry
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C0AE10AF89E3640E5FA79D7BBCA6A55D92CE2
2B86ADE2026877CED638BBD1D038B6C5AE7C6B3A0E455DCDF62CCEA75767688A
69D21C517ADCEC9A0C655792B4578CB6B74D47> |-
/parenright <1C60D8A8C9B81F2C3AF105008BF4C14977A5391C97502518193
ED7EC3F60D4E4A6A615277E5A76DF130278E01F945101C3D52F6F19B3C51C139
EAF392FE494F85B575CEA750D305AD09C5B0136> |-
/comma <1C60D8A8C9B854D0E60655E7F7F9E83D757EFA35086EED0E1F7E8A4C
D57C31A7DF335284A0C0F1E669> |-
/five <1C60D8A8C9B7EF32244A3E5F405B6D31E38A8EB7FBE5BAFC15835DF10
683C93AD804B5613AE64B5A58D8A22AA4318A2891CDF2D9FA16ACA439A9E54B8
8A475D9ABD1CB4EFDCF42DF6ED8297C59B8090B6E4B555FB696152B8F5A84767
58BEDA9F9B241E9B4EA7BFF7E> |-
/R <1C60D8A8C9B6079F4E60D063F0767E7F02FAC09A4010F4F0744E7BB7FD45
5FB6472FCC081F13976DD2CC9C30E89BAD096507542A0B90314DE7A4367ADD1E
412A0C92B1370A0844B40884679F91D8D6B7B5DBAD4EABF06DB35B8498117918
0699157C2C0BF36C5D1BFA24B06C1EDE922D86E780BE47A7050C9F38AF083E0C
F03CCAA0FF> |-
/i <1C60D8A8C9B88C084B70B34E18F97CF1997FF6644A06C3E9D2A9D91E0589
7D24E504390D1AACAF3599CA> |-
/n <1C60D8A8C9B7EF321358E32ACCD81AA16D19D782C50D8000CD7A7C03D382
AEFC72232E29A1B08D01004D3E9E50AA00D3BA506AE663B158755F270EA082AF
3827056B839C61FDB7B509318DF83E0B8CA2F21F3DB8BF9A12D0B81EEC234F1F
3832DAEA2C1BF9B7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXA+ArialMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 53 /five put
dup 82 /R put
dup 105 /i put
dup 110 /n put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 8{/.notdef}rp /five 28{/.notdef}rp 
/R 22{/.notdef}rp /i 4{/.notdef}rp /n /o 144{/.notdef}rp]
UZRTXA+ArialMT nf
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
328.92 379.673 mo
(oooooooo)
[-4.37897 -4.43915 -4.37897 -4.37897 -4.43918 -4.37897 -4.37897 0 ]ysh
185.64 468.473 mo
(inRR\(5,5\))
[-1.74399 -19.8586 -5.70398 -5.70398 -2.62305 -4.38928 -2.1875 -4.38925 0 ]ysh
180.66 451.192 mo
181.68 451.192 li
181.68 458.572 li
183.72 458.572 li
183.72 451.192 li
184.8 451.192 li
182.7 448.732 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
180.66 451.192 mo
181.68 451.192 li
181.68 458.572 li
183.72 458.572 li
183.72 451.192 li
184.8 451.192 li
182.7 448.732 li
cp
@
0 gry
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF322BA6DCE9BD5DF3DFF7C357023322936E9155634E4F
EAE48170BD90CB497150A64DE8E375FCCE900D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXA+ArialMT /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp /one 3{/.notdef}rp 
/five 28{/.notdef}rp /R 22{/.notdef}rp /i 4{/.notdef}rp /n /o 
144{/.notdef}rp]
UZRTXA+ArialMT nf
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
185.7 399.832 mo
(RR\(1,1\))
[-5.69922 -5.69922 -2.61832 -4.38449 -2.22156 -4.38452 0 ]ysh
180.84 361.912 mo
181.86 361.912 li
181.86 369.292 li
183.9 369.292 li
183.9 361.912 li
184.92 361.912 li
182.88 359.452 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
180.84 361.912 mo
181.86 361.912 li
181.86 369.292 li
183.9 369.292 li
183.9 361.912 li
184.92 361.912 li
182.88 359.452 li
cp
@
0 gry
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B854D0DFA7F3C3CFE997A880BB6118223EC140BB1D072976EE
7376E92C1688A186F47CEAAFED94409C37AA8625569840A3000DBDC757F1162E
2C0A9076C5CFF3F8D5838450BDCD> |-
/u <1C60D8A8C9B7EF3211FDB400F617E7ECE548A197892E72A9234771BE08CC
6A8D56A742A5122BE141318E124044E0D30B7644714B00B3BB9E61860FF6B41C
B17A850FE04ABD34133958C1F083E2DB097DB78C54871A4F3A0E7E828AD0BBA0
152EE27D2C480103CEE5B367EED1D0AF3404> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXA+ArialMT /Encoding get
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp /one 3{/.notdef}rp 
/five 28{/.notdef}rp /R 22{/.notdef}rp /i 4{/.notdef}rp /n /o 
4{/.notdef}rp /t /u 138{/.notdef}rp]
UZRTXA+ArialMT nf
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
185.52 356.392 mo
(out)
[-4.37897 -4.37897 0 ]ysh
177.3 412.492 mo
178.02 411.772 li
183.24 416.992 li
184.74 415.492 li
179.52 410.272 li
180.24 409.552 li
177 409.252 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
177.3 412.492 mo
178.02 411.772 li
183.24 416.992 li
184.74 415.492 li
179.52 410.272 li
180.24 409.552 li
177 409.252 li
cp
@
189.18 412.552 mo
188.46 411.832 li
183.24 417.052 li
181.8 415.552 li
187.02 410.332 li
186.3 409.612 li
189.48 409.312 li
ef
189.18 412.552 mo
188.46 411.832 li
183.24 417.052 li
181.8 415.552 li
187.02 410.332 li
186.3 409.612 li
189.48 409.312 li
cp
@
182.94 404.812 mo
182.22 404.092 li
177.78 408.532 li
176.34 407.032 li
180.78 402.652 li
180 401.932 li
182.94 401.932 li
ef
182.94 404.812 mo
182.22 404.092 li
177.78 408.532 li
176.34 407.032 li
180.78 402.652 li
180 401.932 li
182.94 401.932 li
cp
@
183.6 404.992 mo
184.32 404.272 li
188.64 408.532 li
190.08 407.092 li
185.82 402.772 li
186.54 402.052 li
183.66 402.112 li
ef
183.6 404.992 mo
184.32 404.272 li
188.64 408.532 li
190.08 407.092 li
185.82 402.772 li
186.54 402.052 li
183.66 402.112 li
cp
@
gsave
195.78 427.672 mo
195.78 426.112 li
188.4 426.112 li
188.4 422.992 li
195.78 422.992 li
195.78 421.432 li
198.24 424.552 li
eclp
198.3 427.732 mo
198.3 421.372 li
188.34 421.372 li
188.34 427.732 li
cp
gsave
/0 /CSD get_res idxcs
clp
[0 -1 -1 0 753.55 174.857 ]ct
[6.36 0 0 9.96 -252.875 555.25 ]ct
snap_to_device
<<
/T 1
/W 1 
/H 166 
/M[1 0 0 -166 0 166 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!!!!!!!!"!<E3%!<E3&!WiE)!s8W-!sA`0"9\l3"U5/9#6tM?#mgnF$4@4L$k*OR%1WmZ&.fEd&ebom
'bqK"(Dn#-)B0Y9*?H:F+X/-V,UFcb-n$Mo.kE8)0/,+91GgpG2E*TT3BB5a4[)(q5sdq,77B[984cEH
9MJ5V:Jand;cHat='/U/>?kE=?=.)K@U`hXAS,RgBkhF"D/K~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
gsave
195.78 395.092 mo
195.78 393.532 li
188.4 393.532 li
188.4 390.352 li
195.78 390.352 li
195.78 388.792 li
198.24 391.972 li
eclp
198.3 395.152 mo
198.3 388.732 li
188.34 388.732 li
188.34 395.152 li
cp
gsave
/0 /CSD get_res idxcs
clp
[0 -1 -1 0 753.55 174.857 ]ct
[6.42 0 0 9.96 -220.295 555.25 ]ct
snap_to_device
<<
/T 1
/W 1 
/H 166 
/M[1 0 0 -166 0 166 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!!!!!!!!"!<E3%!<E3&!WiE)!s8W-!sA`0"9\l3"U5/9#6tM?#mgnF$4@4L$k*OR%1WmZ&.fEd&ebom
'bqK"(Dn#-)B0Y9*?H:F+X/-V,UFcb-n$Mo.kE8)0/,+91GgpG2E*TT3BB5a4[)(q5sdq,77B[984cEH
9MJ5V:Jand;cHat='/U/>?kE=?=.)K@U`hXAS,RgBkhF"D/K~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
256.02 274.132 mo
256.02 274.492 256.32 274.852 256.74 274.852 cv
257.16 274.852 257.46 274.492 257.46 274.132 cv
257.46 273.712 257.16 273.352 256.74 273.352 cv
256.32 273.352 256.02 273.712 256.02 274.132 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
256.02 274.132 mo
256.02 274.492 256.32 274.852 256.74 274.852 cv
257.16 274.852 257.46 274.492 257.46 274.132 cv
257.46 273.712 257.16 273.352 256.74 273.352 cv
256.32 273.352 256.02 273.712 256.02 274.132 cv
cp
@
256.02 273.352 mo
254.52 271.132 li
@
257.4 273.352 mo
258.9 271.132 li
258.9 239.272 li
@
254.52 271.132 mo
254.52 239.272 li
@
0 gry
true set_gvm
%ADOBeginSubsetFont: QJJAAA+SymbolMT Initial
ct_T42Dict begin
0 -0.219 1.109 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+SymbolMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3284f3e872000000cc000000566376
74202ac4fb8500000124000005046670676df530c471000006280000050f
676c79667978e44b00001658000001a668656164c5ad5c6500000b380000
0036686865610f2d038100000b7000000024686d74787750493e00000b94
000002fc6c6f636119bf19bf00000e90000001826d617870020305a70000
1014000000206e616d6503714c0e00001034000002ae707265707e0fc165
000012e40000037167646972000000000000000000000000000104cd0190
00050000059a053300000125059a0533000003a0006602120c0305050102
010706020507000000000000000000000000000000004d6f6e6f0040f020
f0ff058cfe460133080b01c280000000000000000000055d0031054c001f
054c001c0394001b0000ffe10000ffe10000ffe4fe59ffed056b0023fe6a
ffdc270f000000b4000000b4000000000000000000610025005e0029004a
00c200f000be012a005000c0ffd0006300580277002d004a008f00b700c0
00de004400640002001a017c0020ff9c008c0026008300a00039041affb5
004c00e8080f00160024003a016f000600150067009e01dc0049004b002d
003b00470089007200470051006700f7013801dc0001000a005d00610094
009b00be00ce00df00190026002e00d6010701f7ffbb004300530063007b
00b900de0542058b0013009100a700a900c100e5012e01a401ea03eeffb5
ffccffeb0026002900310036005b00620062009200a100a700a700cb0223
03a3ff1aff7bffa8ffc8001c004400ab00b400c100c500ce00f601200156
016302a60379fefaff6effab0000000c00150024003a003a0041004c004e
007400a500ce00d600fb0109010901820220023f0263fe11ff170007001f
0020002b00530055006d007e0088008d0094009a009f00af00e8013f0168
01cd01ee020d028002bf0550074e074e09bffdd5ff47fff6000c000c0021
00290057006b0078007e009200930096009a00a100a500c400c400f000fd
0136013b013e01490152018f018601a501f8022b02db02fb030e030f032c
03590360037c03e203f90805fd4ffe97fed0ff50ff78000100010006000a
0025004300440054005c007000730077007c00800088008e008e00900091
00ab00ab00b000b900bf00bf00c300dd00e300e300e600e800ec01020105
0109010a012a012a01300130013b0140014a0155015f01670173019701b6
01b801be01c501ea01f4023402360239024f0252026702700274029002b0
02b102bf02e402f302fb033a03450373037f03ab03c203c803d203da0400
044a046104690475049404b004d504f004f404fe050005230523052e0561
05a0fda2fe4bfe5bff26ff3bff62ff8dff90ff90ffe80007001e00250026
002700440050006200630066006700700070007100710079007e00850091
0096009e00a100a100a500b600b800bc00c000c200c500c600d000da00dd
00dd00e200f700f901000102010501150121012d01310136013d01470147
015a01680176017c0180018e019a01a501b101b501b501c001dc01ea01fe
023902560259025e0276027c028d0297029b02b902c002d602db02ff0306
030f03180347034b0357035b035e0374039603980399039e039f03b803c0
03c60402043a045004720483049004a204af04c704d304dc0530053b058a
058a05b005b505bd05e60612061b0634065306b80706087908e708fe00b3
00c700b100b5000000000000000000000000000000000188011001b100ad
01e70304038002cc0258020b02d6018204cf01270274023c0100058e006e
00f202c0021d01d2023701570363015a002500820166015b009d031c03a2
034a00cc056e0153035001640053049700fc05c30061058a02b20302058a
03fd01f902ab0068008e026bfda9ff59010e005301a402a600ab007d003c
0029041a00d6023904b90125022902bf07ae01b8003e07060339033a080f
07ae01a403e300000053080f01ea006103e2004c00e102a6035202a6080f
00e601dc074f006e00fd03af0000007d003e01a4fe1100a905590260011c
02a4014cfd83fdd8039bff9f011902e20000fd11fd41024301b60155ffaa
02be00ef0097fef904e000be02db005501dc0063006b007800f200530077
003a015600fc020d0029005300610070403f3f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b0042651582320b00d44235921212d2c20204518684420b001602045b0
4676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c
00b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a23
4445b01923442d2c2045b00325456164b050515845441b2121592d2cb001
43632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0074365
0a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58
b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d
2cb01243588745b0112bb0172344b0177ae41b038a45186920b01723448a
8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d
2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185592d
2c20b0032545b019234445b01a23444565234520b00325606a20b0092342
23688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a545823
21b03f1b235961441cb114008a5279b31940201945208a54582321b03f1b
235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d432343
0b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143234365
0b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b000
525823b002253823b002256538008a63381b212121212159012d2c4bb064
51584569b00943608a103a1b212121592d2c01b005251023208af500b001
6023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f5
00edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb0
2b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b80241
23701020b802414520b0005058b00161593a2f182d2c21210c6423648bb8
4000622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d
2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423
648bb84000626023212d2cb4000100000015b00826b00826b00826b00826
0f10161345683ab001162d2cb4000100000015b00826b00826b00826b008
260f1016134568653ab001162d2c4b53234b515a5820458a60441b212159
2d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c
4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c
4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c64
23646164b807085158b00425b00425012046b01060482046b0106048590a
21211b2121592d2cb012435c580cb00425b00425060c6423646164b80708
5158b00425b00425012046b8fff060482046b8fff06048590a21211b2121
592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b
2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b0
0426024b545a8a8a0ab012435c5a58381b2121592d000001000000028000
3878cf775f0f3cf5081d080000000000a348bc3b00000000b24cd4e1ffff
fe3e08e7080b0000000b000100000000000000010000080bfe3e00000856
feabfc2e08740001000000000000000000000000000000be04cd00670000
000000fa00000200000002aa00e405b40061040000250464005106aa0047
063900480383003a02aa005402aa002d04000091046400250200006e0464
0025020000910239ffff0400004a040000f00400002c0400005304000020
04000062040000590400004c0400007c04000051023900ac0239008b0464
003c046400250464003c038d00580464002505c700140556002205c70012
04e5001a04e30027061b004804d3002305c7002602aa0033050c004e05c7
0025057d0014071d002505c7ffe805c7004c0625002305ee004a04730026
04bc003804e3003b05850016038300470625003805290042065c002504e3
001602aa00a706e7016a02aa004a054400250400ffef040003da050c0054
046400790464004603f4004503830049042b0047034affff04d3002d02a2
004304d300450464001504640031049c007c042b00280464005804640037
042b00590464006904d3004e0383002b049c004705b40041057d005003f2
005b057d002f03f4005b03d700d3019a00a403d700d60464003404f60013
01fa00790464003c0156feab05b4003604000000060600b9060601300606
00f7060600f60856002907e5004b04d3005d07e5004b04d3005d03330066
04640025034a00690464003c0464007905b4006603f4004103ae006a0464
0025046400250464002404640034080000e604d302390800ff8d05440020
069600e4057d002d065c005e07e501820625004e0625004e069600610625
004d0625004d05b4003805b4003705b4003b05b4003b05b4003a05b4010a
05b4010b0625005305b4004a0652006306520063071f00320696002e0464
00540200009105b4003004d3003004d300300856002907e5004c04d3005d
07e5004c04d3005d03f4002f02a200410652006306520063064a002a05b4
002b03120053031200530312005303120000031200000312000003f401a4
03f4001c03f401a403f401a40652007502a2003e02310000057d02a6057d
02a6057d00430312ff930312025d0312ff93031200230312028103120023
03f4001c01a4001c00000032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320085008500850085008500850085008500850085008500850085
00850085008500d300d300d300d300d300d300d300d300d300d300d300d3
00d300d300000001000000c0006700050000000000020010002f00400000
00ed050f000000000000000a007e0001000000000000007f000000010000
00000003000f007f0001000000000004000f008e0001000000000006000f
009d000300000409000000fe00ac0003000004090001001e01aa00030000
04090002000e01c80003000004090003001e01d60003000004090004001e
01f40003000004090006001e0212547970656661636520a920546865204d
6f6e6f7479706520436f72706f726174696f6e20706c632e204461746120
a920546865204d6f6e6f7479706520436f72706f726174696f6e20706c63
2f5479706520536f6c7574696f6e7320496e632e20313939302d31393932
2e20416c6c205269676874732052657365727665644a4741454f442b5379
6d626f6c4d544a4741454f442b53796d626f6c4d544a4741454f442b5379
6d626f6c4d5400540079007000650066006100630065002000a900200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200070006c0063002e00200044
006100740061002000a900200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c0063002f005400790070006500200053006f006c00750074
0069006f006e007300200049006e0063002e00200031003900390030002d
0031003900390032002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064004a004700410045004f
0044002b00530079006d0062006f006c004d00540052006500670075006c
00610072004a004700410045004f0044002b00530079006d0062006f006c
004d0054004a004700410045004f0044002b00530079006d0062006f006c
004d0054004a004700410045004f0044002b00530079006d0062006f006c
004d00540000411500120227022702260226006f01160001005f01160001
004f01160001003f01160001002f01160001022fb22f1f1fb8022eb2a01f
1fb8022cb21d291fb80224400be11a1f3127121f3c27291fb80217403b6c
291fe0aa191fe1aa191fab27321f883c321f833c321f2f3c321f7627321f
3c27291f27aa291f6f276f6d6f866f87043700161600000012110840b801
e3b655140914093790b801bf40390790bd0790b307906707906407905707
904607903607902e07902b079025079024071408120810080e080c080a08
0808060804080208000814b8ffe0402b0000010014061000000100060400
0001000410000001001002000001000200000001000002010802004a00b0
13034b024b5342b0382b4bb807ff52b0372b4bb007505b58b101018e59b0
382bb00288b801005458b801ffb101018e851bb0124358b9000101ff858d
1bb9000101ff858d5959014bb0c063004b6220b0f65323b8010a515ab005
234201b0124b004b5442180016763f183f123e113946443e113946443e11
3946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b
2b182b2b2b2b2b2b2b2b2b2b2b2b2b4b5079bc001f01750007001f0174b3
071f93072b2b2b4b5379bc00900175000700900174b3079093072b2b2b18
1db0964b5358b0aa1d59b0324b5358b0ff1d5901b341b5407b4565234560
23456560234560b08b766818b080622020b140b54565234520b003266062
636820b003266165b0b5236544b040234420b1417b4565234520b0032660
62636820b003266165b07b236544b0412344b1007b455458b17b406544b2
4140414523614459b9004e0162b12a8e456523456023456560234560b089
766818b080622020b9002a01624565234520b003266062636820b0032661
65b80162236544b02a234420b14e8e4565234520b003266062636820b003
266165b08e236544b04e2344b1008e455458b18e406544b24e404e452361
445945695342014b5058b108004259435c58b108004259b3020b0a124358
601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c
2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b0
0f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342
002b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7373737373001845694418
456944435c58b9ffc00280b2121f322b5900000000>
[423 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 100 162 <00010000fe880223058e0005007eba01ee000701ed401f060201011d0403
1404010004030001011d0405140401020405010401040203b801df401c05
0500010717171a00026b03006b0503580558041906078a21213f182b2b4e
f44de4e410ed10ed4e10456544e6003f3c4d10fd3c393901123987082e2b
057d10c487082e182b057d10c43130014644464409022301010223fe4901
b76bfe4801b8058efc7efc7c03840382>QJJAAA+SymbolMT AddT42Char 
1 0 0 <0002010000000500050000030007003b401e06076302010005046303000a
0605630303021a09070463010019082938182b4e10f43c4dfd3c4e10f63c
4d10fd3c003f3cfd3c3f3cfd3c3130211121112521112101000400fc2003
c0fc400500fb002004c0>QJJAAA+SymbolMT AddT42Char 
QJJAAA+SymbolMT /CharStrings get begin
/g162 162 def
end
QJJAAA+SymbolMT /Encoding get
dup 32 /g162 put
pop
end
%ADOEndSubsetFont
reset_gvm
/UZRTXC+SymbolMT /QJJAAA+SymbolMT findfont ct_VMDictPut
/UZRTXC+SymbolMT*1 
[32{/.notdef}rp /g162 223{/.notdef}rp]
UZRTXC+SymbolMT nf
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
258.72 302.032 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
258.72 302.032 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF322BCC006C030AB64D3EF833D53BD938867216DA205
B962D9925E09EE08B8DF37F6D3209FE507D562DC51C880758EA796E486DE516B
D20E232A65BA2969E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXA+ArialMT /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp /one 2{/.notdef}rp 
/four /five 28{/.notdef}rp /R 22{/.notdef}rp /i 4{/.notdef}rp /n 
/o 4{/.notdef}rp /t /u 138{/.notdef}rp]
UZRTXA+ArialMT nf
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
258.72 299.332 mo
(1,4)
[-4.31879 -2.22156 0 ]ysh
true set_gvm
%ADOBeginSubsetFont: QJJAAA+SymbolMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QJJAAA+SymbolMT gcheck setglobal} if
1 266 178 <0001003efe880261058e00050074401f0201011d04031404010004030100
0102001d05041405050401040104050500b8023a401d03030201061a0002
6b03006b0503580558041717190706078a21213f182b2b4e10456544f64d
e4e410ed10ed4e10e4003f3c4d10f43c123939011139872e2b087d10c487
082e182b057d10c431301301013301013e01b7fe496b01b8fe48fe880382
0384fc7cfc7e>QJJAAA+SymbolMT AddT42Char 
QJJAAA+SymbolMT /CharStrings get begin
/g178 178 def
end
QJJAAA+SymbolMT /Encoding get
dup 33 /g178 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/UZRTXC+SymbolMT*1 
[32{/.notdef}rp /g162 /g178 222{/.notdef}rp]
UZRTXC+SymbolMT nf
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
258.72 288.533 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
258.72 288.533 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
258.72 283.613 mo
(o)sh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
265.92 269.932 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
265.92 263.392 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
265.92 263.392 mo
( ) false chp
@
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32244785CEA209A0B1AB0C166286B08980771F18A2
E624A38924FBFF483B4270DC9D2DC0993B70234B4EC1271E14F4287F0E8138B3
113D3A2C3498A3A798175EFF8586ADBE42A40FAC722F4FFCCFD944A826B23E73
4742DC56E9B6688C0E5FD7D21A139B312D91D5BDCE396FF7BBECCF42DB4AFC88
249D903E724B304FA10CF534B30789F272BA1A52010A84503E2C2B5833B0AC24
972C530E56F2DDCFAF7F3D2938A2BD7EE7BA1ABFF97A9E066AC38570B8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXA+ArialMT /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXA+ArialMT*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp /one /.notdef 
/three /four /five 28{/.notdef}rp /R 22{/.notdef}rp /i 4{/.notdef}rp 
/n /o 4{/.notdef}rp /t /u 138{/.notdef}rp]
UZRTXA+ArialMT nf
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
265.92 260.692 mo
(1,3)
[-4.37897 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
265.92 249.832 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
265.92 249.832 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
265.92 244.912 mo
(o)sh
256.56 277.852 mo
256.56 276.172 li
256.62 276.052 li
256.74 275.992 li
256.86 276.052 li
256.86 277.972 li
256.74 278.032 li
256.62 277.972 li
256.56 277.852 li
cp
255.84 276.592 mo
256.74 274.852 li
257.58 276.592 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
256.02 236.272 mo
256.02 236.692 256.32 236.992 256.74 236.992 cv
257.16 236.992 257.46 236.692 257.46 236.272 cv
257.46 235.852 257.16 235.552 256.74 235.552 cv
256.32 235.552 256.02 235.852 256.02 236.272 cv
ef
.33 lw
1 lc
1 lj
10 ml
256.02 236.272 mo
256.02 236.692 256.32 236.992 256.74 236.992 cv
257.16 236.992 257.46 236.692 257.46 236.272 cv
257.46 235.852 257.16 235.552 256.74 235.552 cv
256.32 235.552 256.02 235.852 256.02 236.272 cv
cp
@
258.9 239.272 mo
257.4 236.992 li
@
256.14 236.992 mo
254.52 239.272 li
@
256.56 235.252 mo
256.56 233.572 li
256.62 233.452 li
256.74 233.392 li
256.86 233.452 li
256.86 235.372 li
256.74 235.432 li
256.62 235.372 li
256.56 235.252 li
cp
255.84 233.992 mo
256.74 232.252 li
257.58 233.992 li
f
235.98 274.072 mo
235.98 274.432 236.34 274.792 236.7 274.792 cv
237.12 274.792 237.48 274.432 237.48 274.072 cv
237.48 273.652 237.12 273.292 236.7 273.292 cv
236.34 273.292 235.98 273.652 235.98 274.072 cv
ef
235.98 274.072 mo
235.98 274.432 236.34 274.792 236.7 274.792 cv
237.12 274.792 237.48 274.432 237.48 274.072 cv
237.48 273.652 237.12 273.292 236.7 273.292 cv
236.34 273.292 235.98 273.652 235.98 274.072 cv
cp
@
235.98 273.292 mo
234.48 271.072 li
@
237.42 273.292 mo
238.92 271.072 li
238.92 239.212 li
@
234.48 271.072 mo
234.48 239.212 li
@
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
238.68 308.572 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
238.68 308.572 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
238.68 305.872 mo
(1,4)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
238.68 295.073 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
238.68 295.073 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
238.68 290.153 mo
(o)sh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
238.68 283.553 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
245.88 263.273 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
245.88 263.273 mo
( ) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
245.88 260.573 mo
(1,3)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
245.88 249.773 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
245.88 249.773 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
245.88 244.853 mo
(o)sh
236.52 277.792 mo
236.52 276.112 li
236.58 275.992 li
236.7 275.932 li
236.82 275.992 li
236.88 276.112 li
236.88 277.792 li
236.82 277.912 li
236.7 277.972 li
236.58 277.912 li
236.52 277.792 li
cp
235.8 276.532 mo
236.7 274.792 li
237.6 276.532 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
235.98 236.212 mo
235.98 236.632 236.34 236.932 236.7 236.932 cv
237.12 236.932 237.48 236.632 237.48 236.212 cv
237.48 235.792 237.12 235.492 236.7 235.492 cv
236.34 235.492 235.98 235.792 235.98 236.212 cv
ef
.33 lw
1 lc
1 lj
10 ml
235.98 236.212 mo
235.98 236.632 236.34 236.932 236.7 236.932 cv
237.12 236.932 237.48 236.632 237.48 236.212 cv
237.48 235.792 237.12 235.492 236.7 235.492 cv
236.34 235.492 235.98 235.792 235.98 236.212 cv
cp
@
238.92 239.212 mo
237.42 236.932 li
@
236.16 236.932 mo
234.48 239.212 li
@
236.52 235.192 mo
236.52 233.512 li
236.58 233.392 li
236.7 233.332 li
236.82 233.392 li
236.88 233.512 li
236.88 235.192 li
236.82 235.312 li
236.7 235.372 li
236.58 235.312 li
236.52 235.192 li
cp
235.8 233.932 mo
236.7 232.192 li
237.6 233.932 li
f
218.04 274.132 mo
218.04 274.492 218.4 274.852 218.82 274.852 cv
219.18 274.852 219.54 274.492 219.54 274.132 cv
219.54 273.712 219.18 273.352 218.82 273.352 cv
218.4 273.352 218.04 273.712 218.04 274.132 cv
ef
218.04 274.132 mo
218.04 274.492 218.4 274.852 218.82 274.852 cv
219.18 274.852 219.54 274.492 219.54 274.132 cv
219.54 273.712 219.18 273.352 218.82 273.352 cv
218.4 273.352 218.04 273.712 218.04 274.132 cv
cp
@
218.04 273.352 mo
216.54 271.132 li
@
219.48 273.352 mo
220.98 271.132 li
220.98 239.272 li
@
216.54 271.132 mo
216.54 239.272 li
@
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 326.992 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 326.992 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 324.292 mo
(1,4)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 313.493 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 313.493 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 308.573 mo
(o)sh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 301.973 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 295.493 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 295.493 mo
( ) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 292.733 mo
(1,3)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 281.873 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
220.8 281.873 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
227.88 244.973 mo
(o)sh
218.58 277.852 mo
218.58 276.172 li
218.64 276.052 li
218.76 275.992 li
218.88 276.052 li
218.94 276.172 li
218.94 277.852 li
218.88 277.972 li
218.76 278.032 li
218.64 277.972 li
218.58 277.852 li
cp
217.86 276.592 mo
218.76 274.852 li
219.66 276.592 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
218.04 236.272 mo
218.04 236.692 218.4 236.992 218.82 236.992 cv
219.18 236.992 219.54 236.692 219.54 236.272 cv
219.54 235.852 219.18 235.552 218.82 235.552 cv
218.4 235.552 218.04 235.852 218.04 236.272 cv
ef
.33 lw
1 lc
1 lj
10 ml
218.04 236.272 mo
218.04 236.692 218.4 236.992 218.82 236.992 cv
219.18 236.992 219.54 236.692 219.54 236.272 cv
219.54 235.852 219.18 235.552 218.82 235.552 cv
218.4 235.552 218.04 235.852 218.04 236.272 cv
cp
@
220.98 239.272 mo
219.48 236.992 li
@
218.22 236.992 mo
216.54 239.272 li
@
218.58 235.252 mo
218.58 233.572 li
218.64 233.452 li
218.76 233.392 li
218.88 233.452 li
218.94 233.572 li
218.94 235.252 li
218.88 235.372 li
218.76 235.432 li
218.64 235.372 li
218.58 235.252 li
cp
217.86 233.992 mo
218.76 232.252 li
219.66 233.992 li
f
202.02 274.132 mo
202.02 274.492 202.38 274.852 202.8 274.852 cv
203.22 274.852 203.52 274.492 203.52 274.132 cv
203.52 273.712 203.22 273.352 202.8 273.352 cv
202.38 273.352 202.02 273.712 202.02 274.132 cv
ef
202.02 274.132 mo
202.02 274.492 202.38 274.852 202.8 274.852 cv
203.22 274.852 203.52 274.492 203.52 274.132 cv
203.52 273.712 203.22 273.352 202.8 273.352 cv
202.38 273.352 202.02 273.712 202.02 274.132 cv
cp
@
202.02 273.352 mo
200.58 271.132 li
@
203.46 273.352 mo
204.96 271.132 li
204.96 239.272 li
@
200.58 271.132 mo
200.58 239.272 li
@
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 333.592 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 333.592 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 330.892 mo
(1,4)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 320.093 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 320.093 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 315.173 mo
(o)sh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 308.573 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 302.093 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 302.093 mo
( ) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 299.333 mo
(1,3)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 288.473 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 288.473 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
204.78 283.553 mo
(o)sh
202.62 277.852 mo
202.62 276.052 li
202.74 275.992 li
202.86 276.052 li
202.92 276.172 li
202.92 277.852 li
202.86 277.972 li
202.74 278.032 li
202.62 277.972 li
202.62 277.852 li
cp
201.9 276.592 mo
202.74 274.852 li
203.64 276.592 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
202.02 236.272 mo
202.02 236.692 202.38 236.992 202.8 236.992 cv
203.22 236.992 203.52 236.692 203.52 236.272 cv
203.52 235.852 203.22 235.552 202.8 235.552 cv
202.38 235.552 202.02 235.852 202.02 236.272 cv
ef
.33 lw
1 lc
1 lj
10 ml
202.02 236.272 mo
202.02 236.692 202.38 236.992 202.8 236.992 cv
203.22 236.992 203.52 236.692 203.52 236.272 cv
203.52 235.852 203.22 235.552 202.8 235.552 cv
202.38 235.552 202.02 235.852 202.02 236.272 cv
cp
@
204.96 239.272 mo
203.46 236.992 li
@
202.2 236.992 mo
200.58 239.272 li
@
202.62 235.252 mo
202.62 233.452 li
202.74 233.392 li
202.86 233.452 li
202.92 233.572 li
202.92 235.252 li
202.86 235.372 li
202.74 235.432 li
202.62 235.372 li
202.62 235.252 li
cp
201.9 233.992 mo
202.74 232.252 li
203.64 233.992 li
f
281.16 274.132 mo
281.16 274.492 281.52 274.852 281.94 274.852 cv
282.36 274.852 282.66 274.492 282.66 274.132 cv
282.66 273.712 282.36 273.352 281.94 273.352 cv
281.52 273.352 281.16 273.712 281.16 274.132 cv
ef
281.16 274.132 mo
281.16 274.492 281.52 274.852 281.94 274.852 cv
282.36 274.852 282.66 274.492 282.66 274.132 cv
282.66 273.712 282.36 273.352 281.94 273.352 cv
281.52 273.352 281.16 273.712 281.16 274.132 cv
cp
@
281.16 273.352 mo
279.72 271.132 li
@
282.6 273.352 mo
284.1 271.132 li
284.1 239.272 li
@
279.72 271.132 mo
279.72 239.272 li
@
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
283.92 295.432 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
283.92 295.432 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
283.92 292.732 mo
(1,4)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
283.92 281.933 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
283.92 281.933 mo
(!) false chp
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
291.12 269.932 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
291.12 263.392 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
291.12 263.392 mo
( ) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
291.12 260.692 mo
(1,3)
[-4.37897 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
291.12 249.832 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
291.12 249.832 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
291.12 244.912 mo
(o)sh
281.76 277.852 mo
281.76 276.052 li
281.88 275.992 li
282 276.052 li
282.06 276.172 li
282.06 277.852 li
282 277.972 li
281.88 278.032 li
281.76 277.972 li
281.76 277.852 li
cp
281.04 276.592 mo
281.88 274.852 li
282.78 276.592 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
281.16 236.272 mo
281.16 236.692 281.52 236.992 281.94 236.992 cv
282.36 236.992 282.66 236.692 282.66 236.272 cv
282.66 235.852 282.36 235.552 281.94 235.552 cv
281.52 235.552 281.16 235.852 281.16 236.272 cv
ef
.33 lw
1 lc
1 lj
10 ml
281.16 236.272 mo
281.16 236.692 281.52 236.992 281.94 236.992 cv
282.36 236.992 282.66 236.692 282.66 236.272 cv
282.66 235.852 282.36 235.552 281.94 235.552 cv
281.52 235.552 281.16 235.852 281.16 236.272 cv
cp
@
284.1 239.272 mo
282.6 236.992 li
@
281.34 236.992 mo
279.72 239.272 li
@
281.76 235.252 mo
281.76 233.452 li
281.88 233.392 li
282 233.452 li
282.06 233.572 li
282.06 235.252 li
282 235.372 li
281.88 235.432 li
281.76 235.372 li
281.76 235.252 li
cp
281.04 233.992 mo
281.88 232.252 li
282.78 233.992 li
f
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
277.02 245.032 mo
(o)sh
308.04 273.772 mo
308.04 274.192 308.34 274.492 308.76 274.492 cv
309.18 274.492 309.54 274.192 309.54 273.772 cv
309.54 273.352 309.18 273.052 308.76 273.052 cv
308.34 273.052 308.04 273.352 308.04 273.772 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
308.04 273.772 mo
308.04 274.192 308.34 274.492 308.76 274.492 cv
309.18 274.492 309.54 274.192 309.54 273.772 cv
309.54 273.352 309.18 273.052 308.76 273.052 cv
308.34 273.052 308.04 273.352 308.04 273.772 cv
cp
@
308.04 273.052 mo
306.54 270.772 li
@
309.48 273.052 mo
310.92 270.772 li
310.92 238.912 li
@
306.54 270.772 mo
306.54 238.912 li
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
317.94 269.632 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
317.94 263.092 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
317.94 263.092 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
317.94 260.392 mo
(1,3)
[-4.37897 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
317.94 249.532 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
317.94 249.532 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
317.94 244.612 mo
(o)sh
308.58 277.552 mo
308.58 275.812 li
308.64 275.692 li
308.88 275.692 li
308.88 277.672 li
308.76 277.732 li
308.64 277.672 li
308.58 277.552 li
cp
307.86 276.292 mo
308.76 274.492 li
309.6 276.292 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
308.04 235.912 mo
308.04 236.332 308.34 236.692 308.76 236.692 cv
309.18 236.692 309.54 236.332 309.54 235.912 cv
309.54 235.552 309.18 235.192 308.76 235.192 cv
308.34 235.192 308.04 235.552 308.04 235.912 cv
ef
.33 lw
1 lc
1 lj
10 ml
308.04 235.912 mo
308.04 236.332 308.34 236.692 308.76 236.692 cv
309.18 236.692 309.54 236.332 309.54 235.912 cv
309.54 235.552 309.18 235.192 308.76 235.192 cv
308.34 235.192 308.04 235.552 308.04 235.912 cv
cp
@
310.92 238.912 mo
309.48 236.692 li
@
308.22 236.692 mo
306.54 238.912 li
@
308.58 234.892 mo
308.58 233.212 li
308.64 233.092 li
308.76 233.032 li
308.88 233.212 li
308.88 235.012 li
308.76 235.072 li
308.64 235.012 li
308.58 234.892 li
cp
307.86 233.632 mo
308.76 231.892 li
309.6 233.632 li
f
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
303.96 263.092 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
303.96 263.092 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
303.96 260.392 mo
(1,4)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
303.96 249.593 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
303.96 249.593 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
303.96 244.673 mo
(o)sh
227.94 98.2122 mo
227.94 98.6322 228.3 98.9322 228.72 98.9322 cv
229.08 98.9322 229.44 98.6322 229.44 98.2122 cv
229.44 97.7922 229.08 97.4922 228.72 97.4922 cv
228.3 97.4922 227.94 97.7922 227.94 98.2122 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
.33 lw
1 lc
1 lj
10 ml
227.94 98.2122 mo
227.94 98.6322 228.3 98.9322 228.72 98.9322 cv
229.08 98.9322 229.44 98.6322 229.44 98.2122 cv
229.44 97.7922 229.08 97.4922 228.72 97.4922 cv
228.3 97.4922 227.94 97.7922 227.94 98.2122 cv
cp
@
227.94 97.4922 mo
226.44 95.2122 li
@
229.38 97.4922 mo
230.88 95.2122 li
230.88 63.3522 li
@
226.44 95.2122 mo
226.44 63.3522 li
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
237.9 87.4722 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
237.9 80.9319 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
237.9 80.9319 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
237.9 78.2319 mo
(1,3)
[-4.37897 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
237.9 67.372 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
237.9 67.372 mo
(!) false chp
@
228.48 101.992 mo
228.48 100.252 li
228.54 100.132 li
228.78 100.132 li
228.84 100.252 li
228.84 101.992 li
228.78 102.112 li
228.66 102.172 li
228.54 102.112 li
228.48 101.992 li
cp
227.76 100.732 mo
228.66 98.9322 li
229.56 100.732 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
227.94 60.3522 mo
227.94 60.7722 228.3 61.1322 228.72 61.1322 cv
229.08 61.1322 229.44 60.7722 229.44 60.3522 cv
229.44 59.9922 229.08 59.6322 228.72 59.6322 cv
228.3 59.6322 227.94 59.9922 227.94 60.3522 cv
ef
.33 lw
1 lc
1 lj
10 ml
227.94 60.3522 mo
227.94 60.7722 228.3 61.1322 228.72 61.1322 cv
229.08 61.1322 229.44 60.7722 229.44 60.3522 cv
229.44 59.9922 229.08 59.6322 228.72 59.6322 cv
228.3 59.6322 227.94 59.9922 227.94 60.3522 cv
cp
@
230.88 63.3522 mo
229.38 61.1322 li
@
228.12 61.1322 mo
226.44 63.3522 li
@
228.48 59.3322 mo
228.48 57.6522 li
228.54 57.5322 li
228.66 57.4722 li
228.78 57.5322 li
228.84 57.6522 li
228.84 59.3322 li
228.78 59.4522 li
228.66 59.5122 li
228.54 59.4522 li
228.48 59.3322 li
cp
227.76 58.0722 mo
228.66 56.3322 li
229.56 58.0722 li
f
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
223.92 87.6522 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
223.92 87.6522 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
223.92 84.9523 mo
(1,4)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
223.92 74.1526 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
223.92 74.1526 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
223.92 69.2327 mo
(o)sh
230.76 55.1327 mo
(o)sh
253.02 98.3322 mo
253.02 98.7522 253.38 99.0522 253.8 99.0522 cv
254.16 99.0522 254.52 98.7522 254.52 98.3322 cv
254.52 97.9122 254.16 97.6122 253.8 97.6122 cv
253.38 97.6122 253.02 97.9122 253.02 98.3322 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
.33 lw
1 lc
1 lj
10 ml
253.02 98.3322 mo
253.02 98.7522 253.38 99.0522 253.8 99.0522 cv
254.16 99.0522 254.52 98.7522 254.52 98.3322 cv
254.52 97.9122 254.16 97.6122 253.8 97.6122 cv
253.38 97.6122 253.02 97.9122 253.02 98.3322 cv
cp
@
253.02 97.6122 mo
251.52 95.3322 li
@
254.46 97.6122 mo
255.96 95.3322 li
255.96 63.4722 li
@
251.52 95.3322 mo
251.52 63.4722 li
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
262.98 87.5922 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
262.98 81.0519 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
262.98 81.0519 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
262.98 78.3519 mo
(1,3)
[-4.37897 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
262.98 67.492 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
262.98 67.492 mo
(!) false chp
@
253.56 102.112 mo
253.56 100.372 li
253.62 100.252 li
253.86 100.252 li
253.92 100.372 li
253.92 102.112 li
253.86 102.232 li
253.62 102.232 li
253.56 102.112 li
cp
252.84 100.852 mo
253.74 99.0522 li
254.64 100.852 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
253.02 60.4722 mo
253.02 60.8922 253.38 61.2523 253.8 61.2523 cv
254.16 61.2523 254.52 60.8922 254.52 60.4722 cv
254.52 60.0522 254.16 59.7523 253.8 59.7523 cv
253.38 59.7523 253.02 60.0522 253.02 60.4722 cv
ef
.33 lw
1 lc
1 lj
10 ml
253.02 60.4722 mo
253.02 60.8922 253.38 61.2522 253.8 61.2522 cv
254.16 61.2522 254.52 60.8922 254.52 60.4722 cv
254.52 60.0522 254.16 59.7522 253.8 59.7522 cv
253.38 59.7522 253.02 60.0522 253.02 60.4722 cv
cp
@
255.96 63.4722 mo
254.46 61.2522 li
@
253.2 61.2523 mo
251.52 63.4723 li
@
253.56 59.4522 mo
253.56 57.7722 li
253.62 57.6522 li
253.74 57.5922 li
253.86 57.6522 li
253.92 57.7722 li
253.92 59.4522 li
253.86 59.5722 li
253.74 59.6322 li
253.62 59.5722 li
253.56 59.4522 li
cp
252.84 58.1922 mo
253.74 56.4522 li
254.64 58.1922 li
f
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
249 81.1722 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
249 81.1722 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
249 78.4722 mo
(1,4)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
249 67.6725 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
249 67.6725 mo
(!) false chp
@
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D0F4790807CBACD8FD659970B8> |-
/p <1C60D8A8C9B7EF321358E32AAA345A5AF7CCBB1B651263DA97D7C5AD4C64
3ABAC27108E1DC5F64D49651712DD7CE0160F049F6EAB9902AA41DF02BCF26FA
46D961F9B17F535020755D6B92404E78327CEC4AF30ECBF0272F4F90D10655F4
9F35FD26E66BF3BA885DEFB8EF681D39EDE55C6486BE902F809F2A18F9343840
2E800ADB6004F556B7630C5D9436F57AA86148630065BC5512A0B98761542B41
43ECE97D8275> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXA+ArialMT /Encoding get
dup 32 /space put
dup 112 /p put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXA+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp 
/one /.notdef /three /four /five 28{/.notdef}rp /R 22{/.notdef}rp 
/i 4{/.notdef}rp /n /o /p 3{/.notdef}rp /t /u 
138{/.notdef}rp]
UZRTXA+ArialMT nf
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
255.84 55.2524 mo
(o o)
[-4.37897 -2.22156 0 ]ysh
185.52 326.573 mo
(inputRR\(5,5\))
[-1.73685 -4.38214 -4.38214 -4.38214 -17.9412 -5.69687 -5.69684 -2.61594 -4.38214 -2.22156 -4.38211 0 
]ysh
180.54 298.072 mo
181.56 298.072 li
181.56 305.452 li
183.66 305.452 li
183.66 298.072 li
184.68 298.072 li
182.58 295.612 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
.33 lw
1 lc
1 lj
10 ml
180.54 298.072 mo
181.56 298.072 li
181.56 305.452 li
183.66 305.452 li
183.66 298.072 li
184.68 298.072 li
182.58 295.612 li
cp
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
185.58 246.712 mo
(RR\(1,1\))
[-5.69922 -5.69925 -2.61829 -4.38452 -2.22156 -4.38452 0 ]ysh
180.72 208.792 mo
181.74 208.792 li
181.74 216.172 li
183.78 216.172 li
183.78 208.792 li
184.8 208.792 li
182.76 206.332 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
180.72 208.792 mo
181.74 208.792 li
181.74 216.172 li
183.78 216.172 li
183.78 208.792 li
184.8 208.792 li
182.76 206.332 li
cp
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
185.4 203.272 mo
(output)
[-4.37897 -4.37897 -2.22156 -4.37897 -4.37897 0 ]ysh
177.18 259.372 mo
177.96 258.652 li
183.18 263.872 li
184.62 262.372 li
179.4 257.152 li
180.12 256.432 li
176.94 256.132 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.50196 .50196 .50196 colr
ef
177.18 259.372 mo
177.96 258.652 li
183.18 263.872 li
184.62 262.372 li
179.4 257.152 li
180.12 256.432 li
176.94 256.132 li
cp
@
189.12 259.432 mo
188.4 258.712 li
183.12 263.932 li
181.68 262.432 li
186.9 257.212 li
186.18 256.492 li
189.36 256.192 li
ef
189.12 259.432 mo
188.4 258.712 li
183.12 263.932 li
181.68 262.432 li
186.9 257.212 li
186.18 256.492 li
189.36 256.192 li
cp
@
182.82 251.692 mo
182.1 250.972 li
177.72 255.412 li
176.22 253.912 li
180.66 249.532 li
179.94 248.812 li
182.82 248.812 li
ef
182.82 251.692 mo
182.1 250.972 li
177.72 255.412 li
176.22 253.912 li
180.66 249.532 li
179.94 248.812 li
182.82 248.812 li
cp
@
183.48 251.872 mo
184.26 251.152 li
188.52 255.412 li
189.96 253.972 li
185.7 249.652 li
186.42 248.932 li
183.54 248.992 li
ef
183.48 251.872 mo
184.26 251.152 li
188.52 255.412 li
189.96 253.972 li
185.7 249.652 li
186.42 248.932 li
183.54 248.992 li
cp
@
gsave
195.66 277.372 mo
195.66 275.812 li
188.28 275.812 li
188.28 272.692 li
195.66 272.692 li
195.66 271.132 li
198.12 274.252 li
eclp
198.18 277.432 mo
198.18 271.072 li
188.22 271.072 li
188.22 277.432 li
cp
gsave
/1 /CSD get_res idxcs
clp
[0 -1 -1 0 753.55 174.857 ]ct
[6.36 0 0 9.96 -102.575 555.37 ]ct
snap_to_device
<<
/T 1
/W 1 
/H 166 
/M[1 0 0 -166 0 166 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!!!!!!!!"!<E3%!<E3&!WiE)!s8W-!sA`0"9\l3"U5/9#6tM?#mgnF$47.K$k*OR%1WmZ&.fEd&ebom
'bqK"(Dmu,)B0Y9*?H:E+<_pR,:"Q^-7:2j.P!&%/hSe20etL?1c7-K2`NfY4$5Yi5!M:u5sdq,77Kd<
8P2WL9hnJ\;,U=l<E<1'=]np4>[:ZC?t!MSA7]@cBPD3sCi'~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
gsave
195.66 239.512 mo
195.66 237.892 li
188.28 237.892 li
188.28 234.772 li
195.66 234.772 li
195.66 233.212 li
198.12 236.332 li
eclp
198.18 239.512 mo
198.18 233.152 li
188.22 233.152 li
188.22 239.512 li
cp
gsave
/1 /CSD get_res idxcs
clp
[0 -1 -1 0 753.55 174.857 ]ct
[6.36 0 0 9.96 -64.6552 555.37 ]ct
snap_to_device
<<
/T 1
/W 1 
/H 166 
/M[1 0 0 -166 0 166 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!!!!!!!!"!<E3%!<E3&!WiE)!s8W-!sA`0"9\l3"U5/9#6tM?#mgnF$47.K$k*OR%1WmZ&.fEd&ebom
'bqK"(Dmu,)B0Y9*?H:E+<_pR,:"Q^-7:2j.P!&%/hSe20etL?1c7-K2`NfY4$5Yi5!M:u5sdq,77Kd<
8P2WL9hnJ\;,U=l<E<1'=]np4>[:ZC?t!MSA7]@cBPD3sCi'~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
278.94 98.8122 mo
278.94 99.2322 279.24 99.5922 279.66 99.5922 cv
280.08 99.5922 280.44 99.2322 280.44 98.8122 cv
280.44 98.3922 280.08 98.0922 279.66 98.0922 cv
279.24 98.0922 278.94 98.3922 278.94 98.8122 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
278.94 98.8122 mo
278.94 99.2322 279.24 99.5922 279.66 99.5922 cv
280.08 99.5922 280.44 99.2322 280.44 98.8122 cv
280.44 98.3922 280.08 98.0922 279.66 98.0922 cv
279.24 98.0922 278.94 98.3922 278.94 98.8122 cv
cp
@
278.94 98.0922 mo
277.44 95.8122 li
@
280.38 98.0922 mo
281.82 95.8122 li
281.82 63.9522 li
@
277.44 95.8122 mo
277.44 63.9522 li
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
288.72 69.7122 mo
(x)sh
279.48 102.592 mo
279.48 100.912 li
279.54 100.792 li
279.66 100.732 li
279.78 100.792 li
279.84 100.912 li
279.84 102.592 li
279.78 102.712 li
279.66 102.772 li
279.54 102.712 li
279.48 102.592 li
cp
278.76 101.332 mo
279.66 99.5922 li
280.5 101.332 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
278.94 60.9522 mo
278.94 61.3722 279.24 61.7322 279.66 61.7322 cv
280.08 61.7322 280.44 61.3722 280.44 60.9522 cv
280.44 60.5922 280.08 60.2322 279.66 60.2322 cv
279.24 60.2322 278.94 60.5922 278.94 60.9522 cv
ef
278.94 60.9522 mo
278.94 61.3722 279.24 61.7322 279.66 61.7322 cv
280.08 61.7322 280.44 61.3722 280.44 60.9522 cv
280.44 60.5922 280.08 60.2322 279.66 60.2322 cv
279.24 60.2322 278.94 60.5922 278.94 60.9522 cv
cp
@
281.82 63.9522 mo
280.38 61.7322 li
@
279.12 61.7322 mo
277.44 63.9522 li
@
279.48 59.9922 mo
279.48 58.2522 li
279.54 58.1322 li
279.66 58.0722 li
279.78 58.1322 li
279.84 58.2522 li
279.84 59.9922 li
279.78 60.1122 li
279.54 60.1122 li
279.48 59.9922 li
cp
278.76 58.6722 mo
279.66 56.9322 li
280.5 58.6722 li
f
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
274.92 81.7122 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
274.92 81.7122 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
274.92 79.0123 mo
(1,1)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
274.92 68.2126 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
274.92 68.2126 mo
(!) false chp
@
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
281.88 55.7322 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
281.88 55.7322 mo
( ) false chp
@
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF3267924C0E841D844D96E52D213648D8C77257F2277B
A4C41FB5CAF249253485C39B4DE4DC6EDB2B1015C856CF7517B514C527C22A86
B6B9D1C6F1114C96115314170D8261584309E37DE43EA36E0BC6C93BC2D7793C
3C49D34F50BC163C785C4D45779EEA84466CA0BBF46D1A8CF13659> |-
/six <1C60D8A8C9B7EF3269F625B6673B9EA52CBA62CA672C606BDB5B836B17
C2CE80FAB2D897CADEAB175E6C7DC01291E9F7084B4CBF4BC2C2DC4CD8B1CF88
C1312A30A6A1D5F0021F394973BE4EB0C30E6B34C0E729C5127993481ED48F35
3CCB40BC49153F289F22306CD57489660BDF3D9EB6D0D1FB1EA6FEEC6C28437D
C20763E0A7D9F9FB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXA+ArialMT /Encoding get
dup 50 /two put
dup 54 /six put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXA+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 4{/.notdef}rp 
/one /two /three /four /five /six 27{/.notdef}rp /R 
22{/.notdef}rp /i 4{/.notdef}rp /n /o /p 3{/.notdef}rp /t 
/u 138{/.notdef}rp]
UZRTXA+ArialMT nf
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
281.88 53.0323 mo
(2,6)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
281.88 42.2326 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
281.88 42.2326 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
281.88 37.3127 mo
(o o)
[-4.37897 -2.22156 0 ]ysh
303.84 98.5122 mo
303.84 98.8722 304.2 99.2322 304.62 99.2322 cv
304.98 99.2322 305.34 98.8722 305.34 98.5122 cv
305.34 98.0922 304.98 97.7322 304.62 97.7322 cv
304.2 97.7322 303.84 98.0922 303.84 98.5122 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
.33 lw
1 lc
1 lj
10 ml
303.84 98.5122 mo
303.84 98.8722 304.2 99.2322 304.62 99.2322 cv
304.98 99.2322 305.34 98.8722 305.34 98.5122 cv
305.34 98.0922 304.98 97.7322 304.62 97.7322 cv
304.2 97.7322 303.84 98.0922 303.84 98.5122 cv
cp
@
303.84 97.7322 mo
302.34 95.5122 li
@
305.28 97.7322 mo
306.78 95.5122 li
306.78 63.6522 li
@
302.34 95.5122 mo
302.34 63.6522 li
@
304.38 102.232 mo
304.38 100.552 li
304.44 100.432 li
304.56 100.372 li
304.68 100.432 li
304.74 100.552 li
304.74 102.232 li
304.68 102.352 li
304.56 102.412 li
304.44 102.352 li
304.38 102.232 li
cp
303.66 100.972 mo
304.56 99.2322 li
305.46 100.972 li
f
303.84 60.6522 mo
303.84 61.0722 304.2 61.3722 304.62 61.3722 cv
304.98 61.3722 305.34 61.0722 305.34 60.6522 cv
305.34 60.2322 304.98 59.9323 304.62 59.9323 cv
304.2 59.9323 303.84 60.2322 303.84 60.6522 cv
ef
303.84 60.6522 mo
303.84 61.0722 304.2 61.3722 304.62 61.3722 cv
304.98 61.3722 305.34 61.0722 305.34 60.6522 cv
305.34 60.2322 304.98 59.9322 304.62 59.9322 cv
304.2 59.9322 303.84 60.2322 303.84 60.6522 cv
cp
@
306.78 63.6522 mo
305.28 61.3722 li
@
304.02 61.3722 mo
302.34 63.6522 li
@
304.38 59.6322 mo
304.38 57.9522 li
304.44 57.8322 li
304.56 57.7722 li
304.68 57.8322 li
304.74 57.9522 li
304.74 59.6322 li
304.68 59.7522 li
304.56 59.8122 li
304.44 59.7522 li
304.38 59.6322 li
cp
303.66 58.3722 mo
304.56 56.6322 li
305.46 58.3722 li
f
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
299.82 81.3522 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
299.82 81.3522 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
299.82 78.6522 mo
(1,1)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
299.82 67.8525 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
299.82 67.8525 mo
(!) false chp
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
306.78 55.3722 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
306.78 48.8318 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
306.78 48.8318 mo
( ) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
306.78 46.1319 mo
(2,6)
[-4.37897 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
306.78 35.272 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
306.78 35.272 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
306.78 30.3521 mo
(o o)
[-4.37897 -2.22156 0 ]ysh
322.02 98.2722 mo
322.02 98.6922 322.32 98.9922 322.74 98.9922 cv
323.16 98.9922 323.46 98.6922 323.46 98.2722 cv
323.46 97.8522 323.16 97.5522 322.74 97.5522 cv
322.32 97.5522 322.02 97.8522 322.02 98.2722 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
.33 lw
1 lc
1 lj
10 ml
322.02 98.2722 mo
322.02 98.6922 322.32 98.9922 322.74 98.9922 cv
323.16 98.9922 323.46 98.6922 323.46 98.2722 cv
323.46 97.8522 323.16 97.5522 322.74 97.5522 cv
322.32 97.5522 322.02 97.8522 322.02 98.2722 cv
cp
@
322.02 97.5522 mo
320.52 95.2722 li
@
323.4 97.5522 mo
324.9 95.2722 li
324.9 63.4122 li
@
320.52 95.2722 mo
320.52 63.4122 li
@
322.56 102.052 mo
322.56 100.312 li
322.62 100.192 li
322.86 100.192 li
322.86 102.172 li
322.74 102.232 li
322.62 102.172 li
322.56 102.052 li
cp
321.84 100.792 mo
322.74 98.9922 li
323.58 100.792 li
f
322.02 60.4122 mo
322.02 60.8322 322.32 61.1923 322.74 61.1923 cv
323.16 61.1923 323.46 60.8322 323.46 60.4122 cv
323.46 59.9922 323.16 59.6923 322.74 59.6923 cv
322.32 59.6923 322.02 59.9922 322.02 60.4122 cv
ef
322.02 60.4122 mo
322.02 60.8322 322.32 61.1922 322.74 61.1922 cv
323.16 61.1922 323.46 60.8322 323.46 60.4122 cv
323.46 59.9922 323.16 59.6922 322.74 59.6922 cv
322.32 59.6922 322.02 59.9922 322.02 60.4122 cv
cp
@
324.9 63.4122 mo
323.4 61.1922 li
@
322.14 61.1923 mo
320.52 63.4123 li
@
322.56 59.3922 mo
322.56 57.7122 li
322.62 57.5922 li
322.74 57.5322 li
322.86 57.5922 li
322.86 59.5122 li
322.74 59.5722 li
322.62 59.5122 li
322.56 59.3922 li
cp
321.84 58.1322 mo
322.74 56.3922 li
323.58 58.1322 li
f
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 55.1923 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 55.1923 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 52.4924 mo
(2,1)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 41.6927 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 41.6927 mo
(!) false chp
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 36.7728 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 30.2926 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 30.2926 mo
( ) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 27.5325 mo
(2,6)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 16.6725 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 16.6725 mo
(!) false chp
@
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C66C118D247F858C73C47E3F4E6A6D96F995D033
A910C> |-
/bracketleft <1C60D8A8C9B854D0CC118562DA0B9B7EDC4708242A129F7FDA
76E8248E06FA2AA8230264BF5E887923BB> |-
/bracketright <1C60D8A8C9B854D0F43DC2CCF406001CFBEEF05F0764DAD33
08B0CE0223D083B89DD7D4227A758DC900F96BF> |-
/a <1C60D8A8C9B7EF326DA7DF6E992BB0067378CC2864443DD75F40C3F59BFA
E780442B93B6E9E205685F556603FDD13F43D7CFBA44B5FD94B172C1BAEAE134
90EC3F3CBF4B3033E0CFFB04D712ACAE53AC93BF916BCE432A2C3D908CE096B9
470EA658F5F9B573FFD8FE15CC5DA0E3B4E98C53A962DFC58BD092E98919B03F
2DF5CDAD8B352EA1AE212E81DCE57F9D7572BFCCB2BA60A4A5C55A7B7D088869
29F7B538F6F40182A00EFF18601643CDBDB7C59D7FDE2FDC86297A0526C719D7
1338> |-
/c <1C60D8A8C9B7A73DFCC965B95B407B63A21A323AC35889E4BD58B575823F
3D4C1849E342B371D24262A00F1B2118FF5BEF66219ACE8843324D9DE60D5A0C
40D6B21D6BB545548D091BEA6C08BFEE3773C5CA8BCA4E16C0DF3B738B5B4CA6
F12725C716> |-
/g <1C60D8A8C9B7EF327162A0E60DEADFC4B71361DE17F3AD9FB4F969218EFD
9B98EE4AD3F5ACD5F672F213D044BBEEED89EBDDAB7DBE036D1A33D4A3E36E30
BD6ACBDFC7B895FD67DBFFC2DCCD8F029AF9A8D463D2017E62B2B24BC48A314E
98D224948385897F08D68B6A608A8AC850FEB8FA1430D9D80A70CBD24E459805
E5F67372A3BB992C8607CF47679AE0B13147AC8AB721879D5078B035826B670D
317DB6BF95F3193D61C90A3EA0C99AB8ED74AF6617CFA5889BB7C23B99A42272
15> |-
/h <1C60D8A8C9B7EF32120E99BF44821945DDC2B4EFD38037A015A75CE173B6
AC0B36FA7934ECB2789D63BE76D2E6D4AB6FB403DBC988B8E6745C79D28C1F4C
9AFD120F64FD9576BF5E839856324CA83C437F59568D46BC0A0523> |-
/l <1C60D8A8C9B88C084B70B34E18F97D598FFC8BBB87271DAB31AE82C7D5> |-
/m <1C60D8A8C9B6B41C803D68C39EF50D06E406D806E0103ED63F6704BBF19B
FEDC611823F708F8CDC822B4765D0EA33D8918C5115C458B26634AC5E2670C4B
8962BBF3CF9C48946A0DC46F480672849B689EA7D57F5DF91E25DFD9B529EB14
2A1A839E512F7962D9E8B6440BB69ED272488E4A704361F8BFC3459B2DF3FCAF
F00E5B9790F065B3476716D31B338D> |-
/r <1C60D8A8C9B81F2C062E4A14544392D75EFC1DE071A88148476E7F4ADEB8
F773ACAC5F6D1E41C9D8141AD151602045512C4C321BE5332ACD4A9A1A81F153
B5A575F3D6F73178CB085E6B21> |-
/s <1C60D8A8C9B7A73DF6B5A4EE8BDAC430AB40D072096BA1391FB87ABD8D54
3094852EEAF06243E7B5ADCF9C1EF5646B8FC5B51310596E132370ECE7C9D12E
2BFFBF299CB441CA112192E2BF1E03F6D4324D162B40F907462F1CDA63BEAC17
54B4842C0FABDAE30E17E7E60566DCCF4C8EA4CA26C6ED> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXA+ArialMT /Encoding get
dup 45 /hyphen put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 103 /g put
dup 104 /h put
dup 108 /l put
dup 109 /m put
dup 114 /r put
dup 115 /s put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXA+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
3{/.notdef}rp /one /two /three /four /five /six 27{/.notdef}rp 
/R 8{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef 
/c 3{/.notdef}rp /g /h /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
138{/.notdef}rp]
UZRTXA+ArialMT nf
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
324.96 11.7526 mo
(o o)
[-4.31879 -2.22156 0 ]ysh
212.4 230.992 mo
([pass-uncomp])
[-2.22156 -4.38766 -4.3877 -3.94415 -3.94415 -2.62146 -4.3877 -4.38766 -3.94418 -4.38766 -6.65988 -4.38766 
0 ]ysh
229.26 230.992 mo
([pass-comp-short])
[-2.19937 -4.40115 -4.40115 -3.95761 -3.95764 -2.63492 -3.95761 -4.40115 -6.59491 -4.40115 -2.63492 -3.95764 
-4.40112 -4.40115 -2.63492 -2.19937 0 ]ysh
248.76 230.992 mo
([pass-uncomp])
[-2.22156 -4.38766 -4.3877 -3.94415 -3.94415 -2.62146 -4.3877 -4.38766 -3.94418 -4.38766 -6.65988 -4.38766 
0 ]ysh
271.08 230.992 mo
([pass-uncomp])
[-2.22156 -4.38766 -4.3877 -3.94415 -3.94415 -2.62146 -4.3877 -4.38766 -3.94418 -4.38766 -6.65988 -4.38766 
0 ]ysh
296.701 230.992 mo
([pass-comp])
[-2.19464 -4.39639 -4.39639 -3.95285 -3.95288 -2.63016 -3.95288 -4.39639 -6.59018 -4.39639 0 ]ysh
218.821 149.813 mo
([pass-uncomp])
[-2.22156 -4.38766 -4.38766 -3.94421 -3.94415 -2.62146 -4.38763 -4.3877 -3.94415 -4.3877 -6.65985 -4.3877 
0 ]ysh
243.181 149.813 mo
([pass-uncomp])
[-2.22156 -4.38766 -4.38766 -3.94421 -3.94415 -2.62146 -4.38763 -4.3877 -3.94415 -4.3877 -6.65985 -4.3877 
0 ]ysh
268.201 158.632 mo
([pass-comp-long])
[-2.22156 -4.39084 -4.39087 -3.94733 -3.9473 -2.62463 -3.94733 -4.39087 -6.58459 -4.39087 -2.62463 -1.79865 
-4.39081 -4.39087 -4.39087 0 ]ysh
293.101 149.813 mo
([pass-uncomp])
[-2.22156 -4.38766 -4.38766 -3.94421 -3.94415 -2.62146 -4.38763 -4.3877 -3.94415 -4.3877 -6.65985 -4.3877 
0 ]ysh
315.721 173.153 mo
([pass-comp-short \(a\)])
[-2.20016 -4.40195 -4.40195 -3.9584 -3.9584 -2.63571 -3.95844 -4.40192 -6.59573 -4.40192 -2.63574 -3.95844 
-4.40192 -4.40192 -2.63574 -2.20013 -2.22156 -2.63574 -4.40192 -2.63574 0 ]ysh
202.08 98.5722 mo
202.08 98.9322 202.44 99.2922 202.86 99.2922 cv
203.28 99.2922 203.58 98.9322 203.58 98.5722 cv
203.58 98.1522 203.28 97.7922 202.86 97.7922 cv
202.44 97.7922 202.08 98.1522 202.08 98.5722 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
ef
.33 lw
1 lc
1 lj
10 ml
202.08 98.5722 mo
202.08 98.9322 202.44 99.2922 202.86 99.2922 cv
203.28 99.2922 203.58 98.9322 203.58 98.5722 cv
203.58 98.1522 203.28 97.7922 202.86 97.7922 cv
202.44 97.7922 202.08 98.1522 202.08 98.5722 cv
cp
@
202.08 97.7922 mo
200.64 95.5722 li
@
203.52 97.7922 mo
205.02 95.5722 li
205.02 63.7122 li
@
200.64 95.5722 mo
200.64 63.7122 li
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
212.04 94.3722 mo
(x)sh
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
212.04 87.8318 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
212.04 87.8318 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
212.04 85.1319 mo
(1,3)
[-4.37897 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
212.04 74.272 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
212.04 74.272 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
212.04 69.3521 mo
(o)sh
202.62 102.292 mo
202.62 100.612 li
202.68 100.492 li
202.8 100.432 li
202.92 100.492 li
202.98 100.612 li
202.98 102.292 li
202.92 102.412 li
202.8 102.472 li
202.68 102.412 li
202.62 102.292 li
cp
201.96 101.032 mo
202.8 99.2922 li
203.7 101.032 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
202.08 60.7122 mo
202.08 61.1322 202.44 61.4322 202.86 61.4322 cv
203.28 61.4322 203.58 61.1322 203.58 60.7122 cv
203.58 60.2922 203.28 59.9922 202.86 59.9922 cv
202.44 59.9922 202.08 60.2922 202.08 60.7122 cv
ef
.33 lw
1 lc
1 lj
10 ml
202.08 60.7122 mo
202.08 61.1322 202.44 61.4322 202.86 61.4322 cv
203.28 61.4322 203.58 61.1322 203.58 60.7122 cv
203.58 60.2922 203.28 59.9922 202.86 59.9922 cv
202.44 59.9922 202.08 60.2922 202.08 60.7122 cv
cp
@
205.02 63.7122 mo
203.52 61.4322 li
@
202.26 61.4322 mo
200.64 63.7122 li
@
202.62 59.6922 mo
202.62 58.0122 li
202.68 57.8922 li
202.8 57.8322 li
202.98 58.0122 li
202.98 59.6922 li
202.92 59.8122 li
202.8 59.8722 li
202.68 59.8122 li
202.62 59.6922 li
cp
201.96 58.4322 mo
202.8 56.6922 li
203.7 58.4322 li
f
0 gry
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
198.06 87.8322 mo
( )sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
198.06 87.8322 mo
( ) false chp
.158 lw
0 lc
0 lj
1 ml
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
198.06 85.1323 mo
(1,4)
[-4.31879 -2.22156 0 ]ysh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
198.06 74.3326 mo
(!)sh
UZRTXC+SymbolMT*1 [0 -7.92 -7.92 0 0 0 ]msf
198.06 74.3326 mo
(!) false chp
@
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
198.06 69.4127 mo
(o)sh
gsave
276 433.552 mo
276 436.972 278.7 439.792 282 439.792 cv
285.48 439.792 li
288 439.792 290.28 438.112 291.12 435.592 cv
292.86 435.592 li
289.74 433.552 li
285.96 435.592 li
287.7 435.592 li
287.04 437.512 285.6 438.952 283.74 439.552 cv
281.22 438.712 279.48 436.312 279.48 433.552 cv
eclp
292.92 439.852 mo
292.92 433.492 li
275.94 433.492 li
275.94 439.852 li
cp
gsave
/2 /CSD get_res idxcs
clp
[0 -1 -1 0 753.55 174.857 ]ct
[6.36 0 0 16.98 -264.995 460.63 ]ct
snap_to_device
<<
/T 1
/W 1 
/H 283 
/M[1 0 0 -283 0 283 ]
/MD false
/BC 8 
/D[0 255 ]
/DS 
<~!!!!!!!!!!!!!!"!<E3%!<E3%!<E3%!<N<(!WiE)!WiH+!s8W-!s8W."9\i1"9\i2"U,&5"U5/8"pP;;
#6tJ>#RC\B#mgnE$47+I$O[=M$k*OR%1NaV%Ls![%hK9`&.oKe&eYik',2,p'bqK"()@]&(`4,.)B'M5
)]Th<*?H7D+!2UJ+X/*T,9nHZ,palc-R^Ak.4H_s/1`>(/M8\00/,+81,C^C1c7-K2`E]V3B9,^4$5Vg
5!D1q5X@\&6:4./6q'R77n?0B8P2TJ9MJ8W:/=Y^;,L4i;c?Xp<E3($='/U.>$G39?!UcC?XR8M@:E\T
@q0%\AS#IcB4kjjBk_<tCMR^%Ci!p)DJj=~>
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
276 433.552 mo
276 436.972 278.7 439.792 282 439.792 cv
282.6 439.792 283.2 439.732 283.74 439.552 cv
281.22 438.712 279.48 436.312 279.48 433.552 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.40392 .40392 .40392 colr
ef
.33 lw
1 lc
1 lj
10 ml
276 433.552 mo
276 436.972 278.7 439.792 282 439.792 cv
285.48 439.792 li
288 439.792 290.28 438.112 291.12 435.592 cv
292.86 435.592 li
289.74 433.552 li
285.96 435.592 li
287.7 435.592 li
287.04 437.512 285.6 438.952 283.74 439.552 cv
281.22 438.712 279.48 436.312 279.48 433.552 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
282 439.792 mo
282.6 439.792 283.2 439.732 283.74 439.552 cv
@
0 gry
true set_gvm
%ADOBeginSubsetFont: Arial-ItalicMT Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Arial-ItalicMT def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1991, 1993, 1996, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Arial is a trademark of The Monotype Corporation, registered in the US Patent and Trademark Office and elsewhere.) def
/Weight (Regular) def
/ItalicAngle -12 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 100 /d put
dup 102 /f put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
def
/UniqueID 44340 def
/FontBBox {-261 -250 1059 936} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-25 0 716 728 518 530 706 706] def
/OtherBlues [349 358 -210 -199] def
/FamilyBlues [-25 0 716 728 518 530 706 706] def
/FamilyOtherBlues [349 358 -210 -199] def
/StdHW [72] def
/StdVW [88] def
/StemSnapH [72 81] def
/StemSnapV [88 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/a <1C60D8A8C9B7EF32653955E89F4352B48A1DF8AA52A8096BEB991ED9684C
FCB34B1B2AC195366828CC20DB3D55C80F4465D13418537AFF4B4842DB02DC01
92CAB63CECE5CAA7BB5715AC24A49BF6B2182D89635F4BB84E3539973E84DB6F
7573AFA56AAE09EA0BAAF684B326552D0795372FAABCC41CFD1A95FC705C85CD
BBEAC9121090ECF2B56B818DE66414A379A5FC8A800DF32232F8D70B632591C2
9D52CFEC896892505BCAE6681BB6183A178D01CC08BE2E2DE8B4BC26BDFE031F
22774742C40FF4ADC8FE7A28A90A02CDE2FA1A86CA9C53B04256881DB646CA3C
8F> |-
/d <1C60D8A8C9B7EF321D283098E985330ED82084EC3F1D066DF637A0E9A63F
C330566F0FFC8396761C31B07F2FAF5A4E39EACF4C7AC864663628A9FDF9DD50
BEA6E0E5799A27FD29D417663983D0ABBBF1BC1700D4AB2EC3A352ADABFC2EEA
EB6DA1586B186E5589AFB469366144882BF03B214A51D76D2D0ED79D4C1D68B9
8D90981F8D6281F0CE6C810327> |-
/f <1C60D8A8C9B854D0BA987845FCD2A683AEA80AF7F6F88C01AA7B6D60DB00
9AECBEC9B4B2E69B833DE7840C7D36FAB0479BE0D8F674802AB24A4E6F16E6CE
D292E3D5DEA23E1451DF2D8136D3DEBEE422F7C4CD5706> |-
/o <1C60D8A8C9B7EF32628C772DE6E397E65479FFA0766E31A0E619CDF4C4DC
4CC3E6514703E474B4280A88D04D50E73BAE799C94015B42BA9F77179B03E534
EAE2CCFC401140682DA526CA1A105618EC153D2E89597FEDB26D9101> |-
/r <1C60D8A8C9B81F2C61D6B34B72618BAF7A017ADAF81B5D4BA8604A41A14B
E1A9C9C2DBA4B577719B27A2A683EAEC693405F711171A60726B0232FD8BFB8F
11132657AA1CE23D11A080432FF021C7BBFD08F5F840DF884E45660DEB3E9847
7616EF42B114FF93ADA454188EF46183B61B1037> |-
/s <1C60D8A8C9B7A73DFF73DED6D1A334AF9DF1AC3BB618AEFA513EC2FA7A2F
F0690F36A55D42546B6C9AF41300B955DEAF0CC3456A35B6131308E5419001A6
77EDA650F2A33C450A8E6541F0A17243712D84D28821B4E2A8C0E2A6FAD2A3B9
8CA456A821E751BC07D1E540C5C197816B76FF6BF12922B3A59A6D35CAD31A61
B4E65B33AB1939AF2E784E7AFCB109B911B7BB46E8BC3E2934B0E8F136632D48
C449E0EB> |-
/t <1C60D8A8C9B854D0C0AD17A70317BAE2408AB69F18E1EA4CA155B4984F69
E1CD18D066F5AFEA435850F58BFF00D7F0397258752F2B43057B16E549ECF164
E4C9E8CF52B7DF93325D9D5D9C9DBA9D9DA628D8EC62AE861608914D113B772F
BF4DBDEFE2> |-
/w <1C60D8A8C9B6079F6DB2729CC7E34CEC0E0DDF65E1C808E946DC1324D0C4
B05919BB9E5A8B57F677A072F827561A0AFB9BFD4C842AB6681A115152F6D4C3
5C74D18CC0D3039D91CEE2971FFA0EE07FAB5C43F3B3ED79E6E27714FD160F01
3C386DB575AC69025FFADB9C115402669669876B937E08AD31832B9A7FDEAA33
91FDF9F246DB561B4B7CA8836DEC2E56AA592F43C37BC5446AC62F86D9BBCE72
551A06B08476071515BA21E46FD26F5644117ED7DAA899B780AA18B1E186> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/UZRTXD+Arial-ItalicMT /Arial-ItalicMT findfont ct_VMDictPut
/UZRTXD+Arial-ItalicMT*1 
[97{/.notdef}rp /a 2{/.notdef}rp /d /.notdef /f 8{/.notdef}rp /o 
2{/.notdef}rp /r /s /t 2{/.notdef}rp /w 136{/.notdef}rp]
UZRTXD+Arial-ItalicMT nf
UZRTXD+Arial-ItalicMT*1 [0 -7.92 -7.92 0 0 0 ]msf
282.12 456.592 mo
(fast)
[-2.21204 -4.37897 -3.97031 0 ]ysh
291.66 470.212 mo
(forward)
[-2.20731 -4.37897 -2.64282 -5.72379 -4.37897 -2.63968 0 ]ysh
0 lj
8 ml
202.8 576.592 mo
272.94 576.592 li
272.94 485.332 li
202.8 485.332 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/semicolon <1C60D8A8C9B854D0E60655E7F7F9F591B2694E5AA7AE3C0CBBA1
BEE727BBBAB7F450B5F269864DE06D913B05C94C7D629838E2FE45E446> |-
/less <1C60D8A8C9B7F374BC3B7EDA1302A15E675C9FCF3DD4C23DA82BA2F2C
F1EC6F19B03CCFC050A423A05F61CB21887> |-
/greater <1C60D8A8C9B7F374BC3B7EDA13004CA11575DF30E508EB7D872DAB
506089EAFEBD43B34610ADA8DA5C341E7B96EBC7> |-
/I <1C60D8A8C9B854D0E4A6262EF3DF16941D2CC64C813A21E5AA377D59B3> |-
/T <1C60D8A8C9B7D8BE16B1D13146B900C9D9FC54E41477185687A83686CBE6
5FB0B29E1AC69D892699EDA5> |-
/b <1C60D8A8C9B7EF32120E99BF5D6FDFA51EBA929839068E186A7585CF179D
244BA0D588E65EBBB54420F952448D4C61DAF9F2A6CDA5B0E462CC5E57DE3F1F
11ABF2DB3178023445F95D57E212CA3ABC0A1F66804EAA458C64AB599AEEC1F7
6389CDECEFE4DF62CF692E9473CEDF02EEA259C34C06F7D6C8BE8CD2FE7AE1BD
E16E05B4B0D10B1E46A889B8DBD1A50EED11E65B782E1E6169CEC85C3BA8E2FD
357543C750C79E7A94AD6F39869D668D6F86BD306947AD0A319F9342857BCE61> |-
/d <1C60D8A8C9B7EF3273C171068F62243BF01CC0C4D8381A7B2A867BADD60E
EBDBBCFCC2F160DF11BDB7215B491AD7372B807EAD45F0EB713C717DE04C81DC
09113D38FC1FB63D793773AC6DBAE4611FE34B05C715FE44AF0E3CB2174BCD4B
F27A94E00504EC9EC5ED70070823B29317827C565409EA89B7820A022152> |-
/e <1C60D8A8C9B7EF326EF6294025B34AF8B77127E7F5CCDC823B159C13132C
3295CF49F6A5E65F9D32A6B27FFE75A3202DC7616AE9AD8F25F262C93EB25396
788B17C2E53B1B8B0A6290B9834F52C8CD0E8836227E2B0A022437C715658851
A54DA2FE5AC89A0FFE5C038A14D6FDB4> |-
/j <1C60D8A8C9B88C084B70B3153F7F27B811DFB92B1332F2D1C9B310C0094E
D30A4833236A69F339AC008A7AFF844465300573D24BA4AD4DD2B055A65513F9
2B898EA14E86855C3CD067CC57A55BAFC6E4D013C8BDA72AAEBED91D24> |-
/x <1C60D8A8C9B7A73DDCA69ACC039A7324A9F11A26534FD5F49B0943F1EA3D
460BE17BE972EBF8A1804F0B9CEA4BF1AB6C02F2A58F7013FBD2891146500214
AE893EF814CC1B353118B31DF90C3046B68F4A21D587C8F0AB8055> |-
/y <1C60D8A8C9B7A73DD541474E761A6B88B5FB25AF673FAAB86D3D3B06CF0F
DEE771E7EA11E3B595003274EC30647995D9CC896E925421106ABC2540062D11
122831B905F7CF0D35C6DDD15ED4FC285FE52F8A59E6608206A8D8E9596AB334
85224EC7B018F61788AC131ACEE93E23EC1A7B5FE7C3A8B53EAB567E> |-
/braceleft <1C60D8A8C9B81CBBBA69079648BC42F6C9527E13856ACA748D07
20DEC920C17414F6C9ABAA9F822825554CB45F573A71F6AD4B7F6F9A856F9312
77F64C966FEA966815E856CF311F36A47D0553B0DE8B63089BEA9971DD9DEF93
4E5171818C45E9ED37F09A76E10F03C5C747> |-
/braceright <1C60D8A8C9B81CBBBA733752CA64597C1C9C7870D660A1C23FF
A46A794CC019685656CF32D0E7EF1A68FCA09CC23BE196051BC8EE9A85A16D51
640708158958CC8B9F046F38CCC75BD57779631D99E2BAECB2BC0C82017B98E5
A85EC8D642919D38BB05D1AB8F8A901063A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXA+ArialMT /Encoding get
dup 59 /semicolon put
dup 60 /less put
dup 62 /greater put
dup 73 /I put
dup 84 /T put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 106 /j put
dup 120 /x put
dup 121 /y put
dup 123 /braceleft put
dup 125 /braceright put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXA+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
3{/.notdef}rp /one /two /three /four /five /six 4{/.notdef}rp 
/semicolon /less /.notdef /greater 10{/.notdef}rp /I 8{/.notdef}rp /R 
/.notdef /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a 
/b /c /d /e /.notdef /g /h /i 
/j /.notdef /l /m /n /o /p /.notdef 
/r /s /t /u 2{/.notdef}rp /x /y /.notdef 
/braceleft /.notdef /braceright 130{/.notdef}rp]
UZRTXA+ArialMT nf
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
212.28 573.232 mo
(char->char splitjoin)
[-3.94812 -4.39166 -4.3916 -2.62543 -2.62543 -4.6134 -3.94812 -4.3916 -4.39166 -2.62543 -2.22156 -3.94812 
-4.43915 -1.74634 -1.7464 -2.22156 -1.79865 -4.37897 -1.74631 0 ]ysh
221.82 573.232 mo
(Transpose2x5 {)
[-4.86127 -2.63965 -4.38849 -4.38843 -3.94495 -4.38849 -4.38849 -3.94495 -4.43915 -4.37897 -3.94495 -4.38849 
-2.22156 0 ]ysh
231.3 566.572 mo
(split roundrobin\(5,5\);)
[-3.94495 -4.38849 -1.74323 -1.74316 -2.22156 -2.22156 -2.62225 -4.38849 -4.38843 -4.38849 -4.38849 -2.62225 
-4.38843 -4.43921 -1.74316 -4.43915 -2.62225 -4.38846 -2.22156 -4.37897 -2.62225 0 ]ysh
240.84 566.572 mo
(add Identity<char>\(\);)
[-4.38928 -4.38928 -4.38922 -2.22235 -2.22156 -4.38928 -4.38928 -4.38922 -2.22156 -1.74402 -2.28094 -3.8396 
-4.61975 -3.94574 -4.43915 -4.38925 -2.62305 -4.61102 -2.62305 -2.62305 0 ]ysh
250.379 566.572 mo
(add Identity<char>\(\);)
[-4.38928 -4.38928 -4.38922 -2.22235 -2.22156 -4.38928 -4.38928 -4.38922 -2.22156 -1.74402 -2.28094 -3.8396 
-4.61975 -3.94574 -4.43915 -4.38925 -2.62305 -4.61102 -2.62305 -2.62305 0 ]ysh
259.859 566.632 mo
(join roundrobin\(1,1\);)
[-1.79865 -4.37897 -1.73767 -4.38287 -2.22156 -2.61676 -4.38293 -4.38287 -4.38293 -4.38293 -2.69989 -4.38287 
-4.38293 -1.79865 -4.43835 -2.63968 -4.38293 -2.22156 -4.3829 -2.61673 0 ]ysh
269.399 573.232 mo
(})sh
true set_gvm
%ADOBeginSubsetFont: Arial-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXD+Arial-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B7A73D8D4E46BB141FD3E31B4EFEF9BAF4412A04951FD0FD83
4B7053A9D80BBA6DEF58EE2303CE8299DC3FBDCF2D0902A98CD8A5C08BF0BBC1
443F04F97B198FDD377A6F18E57C254A6DF98046F4D3D25502F279145B3E73A2
4430130C280F73C82698962BCB05D7EE06D4F7AB8B68A6E74F3763B3433991A3
F05222> |-
/e <1C60D8A8C9B7EF321C1E8ACCC7D09A023042D90BE5D1EA563C909BDD033A
0FB8561F142300E7268D12D746DACC3F4A7A97F9B40781EFFB1CA1B9F31E51D1
3355EC2F6F9CDDC9DBA0762FC08E08CDA1008440931D6BC434A8BD12A11D9186
CD66868FB0154BC2177EB7E019995AB92E363DA36317815DE5DB> |-
/i <1C60D8A8C9B88C082D95EF87D70BBC01773D885656612F2664B1EBBF74FD
DA3A99656275184DDA6DB5627B57AEC600> |-
/n <1C60D8A8C9B7EF32243C6E9D7F5F381084FDC03363F7D1CF44694F9455A1
1002394CC78A59DC9EC4BCE0E14100DCA50F04A049D04F81BF505C372DE9E1F6
73E527FCE130BDECF1A9A10EC328C45FDED066F63968E68751B5E9F2E05F00A6
E1755BE8B4A864B11344EE32> |-
/u <1C60D8A8C9B7EF3217161211D4684A520DECA7EC32EF836D54C3A907BFE0
2F841CCA12F08922F0D3E766C756AAA747795503B7D9412650D2609585B2F58D
852A5E5E242BD1F31936C390E310BBF632545B2D8476B88E95031F231588F4A1
2862234E2CD54BB61DEEDEA6CB3A5B8D8FE325BDE7D2E24A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXD+Arial-ItalicMT /Encoding get
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 117 /u put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXD+Arial-ItalicMT*1 
[97{/.notdef}rp /a /.notdef /c /d /e /f 2{/.notdef}rp 
/i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t 
/u /.notdef /w 136{/.notdef}rp]
UZRTXD+Arial-ItalicMT nf
UZRTXD+Arial-ItalicMT*1 [0 -7.92 -7.92 0 0 0 ]msf
326.399 230.992 mo
(continued)
[-3.94019 -4.38373 -4.38373 -2.22156 -1.73843 -4.38373 -4.43915 -4.37897 0 ]ysh
321.84 253.252 mo
322.08 253.252 322.32 253.432 322.32 253.672 cv
322.32 253.912 322.08 254.092 321.84 254.092 cv
321.6 254.092 321.42 253.912 321.42 253.672 cv
321.42 253.432 321.6 253.252 321.84 253.252 cv
cp
323.64 253.252 mo
323.88 253.252 324.06 253.432 324.06 253.672 cv
324.06 253.912 323.88 254.092 323.64 254.092 cv
323.4 254.092 323.16 253.912 323.16 253.672 cv
323.16 253.432 323.4 253.252 323.64 253.252 cv
cp
325.38 253.252 mo
325.62 253.252 325.8 253.432 325.8 253.672 cv
325.8 253.912 325.62 254.092 325.38 254.092 cv
325.14 254.092 324.96 253.912 324.96 253.672 cv
324.96 253.432 325.14 253.252 325.38 253.252 cv
cp
327.12 253.252 mo
327.36 253.252 327.6 253.432 327.6 253.672 cv
327.6 253.912 327.36 254.092 327.12 254.092 cv
326.88 254.092 326.7 253.912 326.7 253.672 cv
326.7 253.432 326.88 253.252 327.12 253.252 cv
cp
327.96 253.132 mo
327.96 252.892 328.14 252.712 328.38 252.712 cv
328.62 252.712 328.8 252.892 328.8 253.132 cv
328.8 253.372 328.62 253.612 328.38 253.612 cv
328.14 253.612 327.96 253.372 327.96 253.132 cv
cp
327.96 251.392 mo
327.96 251.152 328.14 250.972 328.38 250.972 cv
328.62 250.972 328.8 251.152 328.8 251.392 cv
328.8 251.632 328.62 251.812 328.38 251.812 cv
328.14 251.812 327.96 251.632 327.96 251.392 cv
cp
327.96 249.652 mo
327.96 249.412 328.14 249.172 328.38 249.172 cv
328.62 249.172 328.8 249.412 328.8 249.652 cv
328.8 249.892 328.62 250.072 328.38 250.072 cv
328.14 250.072 327.96 249.892 327.96 249.652 cv
cp
327.96 247.852 mo
327.96 247.612 328.14 247.432 328.38 247.432 cv
328.62 247.432 328.8 247.612 328.8 247.852 cv
328.8 248.092 328.62 248.332 328.38 248.332 cv
328.14 248.332 327.96 248.092 327.96 247.852 cv
cp
327.96 246.112 mo
327.96 245.872 328.14 245.692 328.38 245.692 cv
328.62 245.692 328.8 245.872 328.8 246.112 cv
328.8 246.352 328.62 246.532 328.38 246.532 cv
328.14 246.532 327.96 246.352 327.96 246.112 cv
cp
327.96 244.372 mo
327.96 244.132 328.14 243.892 328.38 243.892 cv
328.62 243.892 328.8 244.132 328.8 244.372 cv
328.8 244.612 328.62 244.792 328.38 244.792 cv
328.14 244.792 327.96 244.612 327.96 244.372 cv
cp
327.96 242.572 mo
327.96 242.332 328.14 242.152 328.38 242.152 cv
328.62 242.152 328.8 242.332 328.8 242.572 cv
328.8 242.812 328.62 243.052 328.38 243.052 cv
328.14 243.052 327.96 242.812 327.96 242.572 cv
cp
327.96 240.832 mo
327.96 240.592 328.14 240.412 328.38 240.412 cv
328.62 240.412 328.8 240.592 328.8 240.832 cv
328.8 241.072 328.62 241.252 328.38 241.252 cv
328.14 241.252 327.96 241.072 327.96 240.832 cv
cp
327.96 239.092 mo
327.96 238.792 328.14 238.612 328.38 238.612 cv
328.62 238.612 328.8 238.792 328.8 239.092 cv
328.8 239.332 328.62 239.512 328.38 239.512 cv
328.14 239.512 327.96 239.332 327.96 239.092 cv
cp
327.96 237.292 mo
327.96 237.052 328.14 236.872 328.38 236.872 cv
328.62 236.872 328.8 237.052 328.8 237.292 cv
328.8 237.532 328.62 237.772 328.38 237.772 cv
328.14 237.772 327.96 237.532 327.96 237.292 cv
cp
327.96 235.552 mo
327.96 235.312 328.14 235.132 328.38 235.132 cv
328.62 235.132 328.8 235.312 328.8 235.552 cv
328.8 235.792 328.62 235.972 328.38 235.972 cv
328.14 235.972 327.96 235.792 327.96 235.552 cv
cp
327.96 233.812 mo
327.96 233.752 li
327.96 233.512 328.14 233.332 328.38 233.332 cv
328.62 233.332 328.8 233.512 328.8 233.752 cv
328.8 233.812 li
328.8 234.052 328.62 234.232 328.38 234.232 cv
328.14 234.232 327.96 234.052 327.96 233.812 cv
cp
327.96 232.012 mo
327.96 231.772 328.14 231.592 328.38 231.592 cv
328.62 231.592 328.8 231.772 328.8 232.012 cv
328.8 232.252 328.62 232.432 328.38 232.432 cv
328.14 232.432 327.96 232.252 327.96 232.012 cv
cp
327.96 230.272 mo
327.96 230.032 328.14 229.792 328.38 229.792 cv
328.62 229.792 328.8 230.032 328.8 230.272 cv
328.8 230.512 328.62 230.692 328.38 230.692 cv
328.14 230.692 327.96 230.512 327.96 230.272 cv
cp
327.96 228.472 mo
327.96 228.232 328.14 228.052 328.38 228.052 cv
328.62 228.052 328.8 228.232 328.8 228.472 cv
328.8 228.772 328.62 228.952 328.38 228.952 cv
328.14 228.952 327.96 228.772 327.96 228.472 cv
cp
327.96 226.732 mo
327.96 226.492 328.14 226.312 328.38 226.312 cv
328.62 226.312 328.8 226.492 328.8 226.732 cv
328.8 226.972 328.62 227.152 328.38 227.152 cv
328.14 227.152 327.96 226.972 327.96 226.732 cv
cp
327.96 224.992 mo
327.96 224.752 328.14 224.512 328.38 224.512 cv
328.62 224.512 328.8 224.752 328.8 224.992 cv
328.8 225.232 328.62 225.412 328.38 225.412 cv
328.14 225.412 327.96 225.232 327.96 224.992 cv
cp
327.96 223.192 mo
327.96 222.952 328.14 222.772 328.38 222.772 cv
328.62 222.772 328.8 222.952 328.8 223.192 cv
328.8 223.432 328.62 223.672 328.38 223.672 cv
328.14 223.672 327.96 223.432 327.96 223.192 cv
cp
327.96 221.452 mo
327.96 221.212 328.14 221.032 328.38 221.032 cv
328.62 221.032 328.8 221.212 328.8 221.452 cv
328.8 221.692 328.62 221.872 328.38 221.872 cv
328.14 221.872 327.96 221.692 327.96 221.452 cv
cp
327.96 219.712 mo
327.96 219.472 328.14 219.232 328.38 219.232 cv
328.62 219.232 328.8 219.472 328.8 219.712 cv
328.8 219.952 328.62 220.132 328.38 220.132 cv
328.14 220.132 327.96 219.952 327.96 219.712 cv
cp
327.96 217.912 mo
327.96 217.672 328.14 217.492 328.38 217.492 cv
328.62 217.492 328.8 217.672 328.8 217.912 cv
328.8 218.152 328.62 218.392 328.38 218.392 cv
328.14 218.392 327.96 218.152 327.96 217.912 cv
cp
327.96 216.172 mo
327.96 215.932 328.14 215.752 328.38 215.752 cv
328.62 215.752 328.8 215.932 328.8 216.172 cv
328.8 216.412 328.62 216.592 328.38 216.592 cv
328.14 216.592 327.96 216.412 327.96 216.172 cv
cp
327.96 214.432 mo
327.96 214.192 328.14 213.952 328.38 213.952 cv
328.62 213.952 328.8 214.192 328.8 214.432 cv
328.8 214.672 328.62 214.852 328.38 214.852 cv
328.14 214.852 327.96 214.672 327.96 214.432 cv
cp
327.96 212.632 mo
327.96 212.392 328.14 212.212 328.38 212.212 cv
328.62 212.212 328.8 212.392 328.8 212.632 cv
328.8 212.872 328.62 213.112 328.38 213.112 cv
328.14 213.112 327.96 212.872 327.96 212.632 cv
cp
327.96 210.892 mo
327.96 210.652 328.14 210.472 328.38 210.472 cv
328.62 210.472 328.8 210.652 328.8 210.892 cv
328.8 211.132 328.62 211.312 328.38 211.312 cv
328.14 211.312 327.96 211.132 327.96 210.892 cv
cp
327.96 209.152 mo
327.96 208.912 328.14 208.672 328.38 208.672 cv
328.62 208.672 328.8 208.912 328.8 209.152 cv
328.8 209.392 328.62 209.572 328.38 209.572 cv
328.14 209.572 327.96 209.392 327.96 209.152 cv
cp
327.96 207.352 mo
327.96 207.112 328.14 206.932 328.38 206.932 cv
328.62 206.932 328.8 207.112 328.8 207.352 cv
328.8 207.592 328.62 207.832 328.38 207.832 cv
328.14 207.832 327.96 207.592 327.96 207.352 cv
cp
327.96 205.612 mo
327.96 205.372 328.14 205.192 328.38 205.192 cv
328.62 205.192 328.8 205.372 328.8 205.612 cv
328.8 205.852 328.62 206.032 328.38 206.032 cv
328.14 206.032 327.96 205.852 327.96 205.612 cv
cp
327.96 203.872 mo
327.96 203.632 328.14 203.392 328.38 203.392 cv
328.62 203.392 328.8 203.632 328.8 203.872 cv
328.8 204.112 328.62 204.292 328.38 204.292 cv
328.14 204.292 327.96 204.112 327.96 203.872 cv
cp
327.96 202.072 mo
327.96 201.832 328.14 201.652 328.38 201.652 cv
328.62 201.652 328.8 201.832 328.8 202.072 cv
328.8 202.312 328.62 202.552 328.38 202.552 cv
328.14 202.552 327.96 202.312 327.96 202.072 cv
cp
327.96 200.332 mo
327.96 200.092 328.14 199.912 328.38 199.912 cv
328.62 199.912 328.8 200.092 328.8 200.332 cv
328.8 200.572 328.62 200.752 328.38 200.752 cv
328.14 200.752 327.96 200.572 327.96 200.332 cv
cp
327.96 198.592 mo
327.96 198.292 328.14 198.112 328.38 198.112 cv
328.62 198.112 328.8 198.292 328.8 198.592 cv
328.8 198.832 328.62 199.012 328.38 199.012 cv
328.14 199.012 327.96 198.832 327.96 198.592 cv
cp
327.96 196.792 mo
327.96 196.552 328.14 196.372 328.38 196.372 cv
328.62 196.372 328.8 196.552 328.8 196.792 cv
328.8 197.032 328.62 197.272 328.38 197.272 cv
328.14 197.272 327.96 197.032 327.96 196.792 cv
cp
327.96 195.052 mo
327.96 194.812 328.14 194.572 328.38 194.572 cv
328.62 194.572 328.8 194.812 328.8 195.052 cv
328.8 195.292 328.62 195.472 328.38 195.472 cv
328.14 195.472 327.96 195.292 327.96 195.052 cv
cp
327.96 193.252 mo
327.96 193.012 328.14 192.832 328.38 192.832 cv
328.62 192.832 328.8 193.012 328.8 193.252 cv
328.8 193.552 328.62 193.732 328.38 193.732 cv
328.14 193.732 327.96 193.552 327.96 193.252 cv
cp
328.14 192.052 mo
327.9 191.932 327.78 191.692 327.84 191.512 cv
327.9 191.272 328.14 191.092 328.38 191.152 cv
328.62 191.212 328.74 191.512 328.68 191.692 cv
328.62 191.932 328.38 192.112 328.14 192.052 cv
cp
326.46 191.512 mo
326.22 191.452 326.1 191.212 326.16 190.972 cv
326.22 190.732 326.46 190.612 326.7 190.672 cv
326.94 190.732 327.06 190.972 327 191.212 cv
326.94 191.452 326.7 191.572 326.46 191.512 cv
cp
324.78 190.972 mo
324.54 190.912 324.42 190.672 324.48 190.432 cv
324.54 190.192 324.78 190.072 325.02 190.132 cv
325.26 190.192 325.38 190.432 325.32 190.672 cv
325.26 190.912 325.02 191.032 324.78 190.972 cv
cp
323.1 190.492 mo
322.86 190.432 322.74 190.132 322.8 189.952 cv
322.86 189.712 323.1 189.532 323.34 189.592 cv
323.58 189.712 323.7 189.952 323.64 190.132 cv
323.58 190.372 323.34 190.552 323.1 190.492 cv
cp
321.42 189.952 mo
321.18 189.892 321.06 189.652 321.12 189.412 cv
321.18 189.172 321.42 189.052 321.66 189.112 cv
321.9 189.172 322.02 189.412 321.96 189.652 cv
321.9 189.892 321.66 190.012 321.42 189.952 cv
cp
319.74 189.412 mo
319.5 189.352 319.38 189.112 319.44 188.872 cv
319.5 188.632 319.74 188.512 319.98 188.572 cv
320.22 188.632 320.34 188.872 320.28 189.112 cv
320.22 189.352 319.98 189.472 319.74 189.412 cv
cp
318.06 188.932 mo
317.82 188.872 317.7 188.632 317.76 188.392 cv
317.82 188.152 318.06 187.972 318.3 188.092 cv
318.54 188.152 318.66 188.392 318.6 188.632 cv
318.54 188.812 318.3 188.992 318.06 188.932 cv
cp
316.38 188.392 mo
316.14 188.332 316.02 188.092 316.08 187.852 cv
316.14 187.612 316.38 187.492 316.62 187.552 cv
316.86 187.612 316.98 187.852 316.92 188.092 cv
316.86 188.332 316.62 188.452 316.38 188.392 cv
cp
314.7 187.852 mo
314.46 187.792 314.34 187.552 314.4 187.312 cv
314.46 187.072 314.7 186.952 314.94 187.012 cv
315.18 187.072 315.3 187.312 315.24 187.552 cv
315.18 187.792 314.94 187.912 314.7 187.852 cv
cp
313.02 187.372 mo
312.78 187.312 312.66 187.072 312.72 186.832 cv
312.78 186.592 313.02 186.412 313.26 186.532 cv
313.5 186.592 313.62 186.832 313.56 187.072 cv
313.5 187.252 313.26 187.432 313.02 187.372 cv
cp
311.34 186.832 mo
311.1 186.772 310.98 186.532 311.04 186.292 cv
311.1 186.052 311.34 185.932 311.58 185.992 cv
311.82 186.052 311.94 186.292 311.88 186.532 cv
311.82 186.772 311.58 186.892 311.34 186.832 cv
cp
309.66 186.292 mo
309.42 186.232 309.3 185.992 309.36 185.752 cv
309.42 185.512 309.66 185.392 309.9 185.452 cv
310.14 185.512 310.26 185.752 310.2 185.992 cv
310.14 186.232 309.9 186.352 309.66 186.292 cv
cp
307.98 185.812 mo
307.74 185.752 307.56 185.512 307.68 185.272 cv
307.74 185.032 307.98 184.912 308.22 184.972 cv
308.4 185.032 308.58 185.272 308.52 185.512 cv
308.46 185.752 308.22 185.872 307.98 185.812 cv
cp
306.3 185.272 mo
306.06 185.212 305.88 184.972 306 184.732 cv
306.06 184.492 306.3 184.372 306.54 184.432 cv
306.72 184.492 306.9 184.732 306.84 184.972 cv
306.78 185.212 306.54 185.332 306.3 185.272 cv
cp
304.62 184.732 mo
304.38 184.672 304.2 184.432 304.26 184.192 cv
304.38 184.012 304.62 183.832 304.8 183.892 cv
305.04 183.952 305.22 184.192 305.16 184.432 cv
305.1 184.672 304.8 184.852 304.62 184.732 cv
cp
302.94 184.252 mo
302.7 184.192 302.52 183.952 302.58 183.712 cv
302.64 183.472 302.94 183.352 303.12 183.412 cv
303.36 183.472 303.54 183.712 303.48 183.952 cv
303.36 184.192 303.12 184.312 302.94 184.252 cv
cp
301.26 183.712 mo
301.2 183.712 li
301.02 183.652 300.84 183.412 300.9 183.172 cv
300.96 182.932 301.2 182.812 301.44 182.872 cv
301.68 182.932 301.86 183.172 301.8 183.412 cv
301.68 183.652 301.44 183.772 301.26 183.712 cv
cp
299.52 183.232 mo
299.34 183.112 299.16 182.872 299.22 182.632 cv
299.28 182.452 299.52 182.272 299.76 182.332 cv
300 182.392 300.18 182.632 300.06 182.872 cv
300 183.112 299.76 183.292 299.52 183.232 cv
cp
297.84 182.692 mo
297.6 182.632 297.48 182.392 297.54 182.152 cv
297.6 181.912 297.84 181.792 298.08 181.852 cv
298.32 181.912 298.5 182.152 298.38 182.392 cv
298.32 182.632 298.08 182.752 297.84 182.692 cv
cp
296.16 182.152 mo
295.92 182.092 295.8 181.852 295.86 181.612 cv
295.92 181.372 296.16 181.252 296.4 181.312 cv
296.64 181.372 296.76 181.612 296.7 181.852 cv
296.64 182.092 296.4 182.212 296.16 182.152 cv
cp
294.48 181.672 mo
294.24 181.552 294.12 181.312 294.18 181.132 cv
294.24 180.892 294.48 180.712 294.72 180.772 cv
294.96 180.832 295.08 181.132 295.02 181.312 cv
294.96 181.552 294.72 181.732 294.48 181.672 cv
cp
292.8 181.132 mo
292.56 181.072 292.44 180.832 292.5 180.592 cv
292.56 180.352 292.8 180.232 293.04 180.292 cv
293.28 180.352 293.4 180.592 293.34 180.832 cv
293.28 181.072 293.04 181.192 292.8 181.132 cv
cp
291.12 180.592 mo
290.88 180.532 290.76 180.292 290.82 180.052 cv
290.88 179.812 291.12 179.692 291.36 179.752 cv
291.6 179.812 291.72 180.052 291.66 180.292 cv
291.6 180.532 291.36 180.652 291.12 180.592 cv
cp
289.44 180.112 mo
289.2 180.052 289.08 179.752 289.14 179.572 cv
289.2 179.332 289.44 179.152 289.68 179.212 cv
289.92 179.332 290.04 179.572 289.98 179.752 cv
289.92 179.992 289.68 180.172 289.44 180.112 cv
cp
287.76 179.572 mo
287.52 179.512 287.4 179.272 287.46 179.032 cv
287.52 178.792 287.76 178.672 288 178.732 cv
288.24 178.792 288.36 179.032 288.3 179.272 cv
288.24 179.512 288 179.632 287.76 179.572 cv
cp
286.08 179.032 mo
285.84 178.972 285.72 178.732 285.78 178.492 cv
285.84 178.252 286.08 178.132 286.32 178.192 cv
286.56 178.252 286.68 178.492 286.62 178.732 cv
286.56 178.972 286.32 179.092 286.08 179.032 cv
cp
284.4 178.552 mo
284.16 178.492 284.04 178.252 284.1 178.012 cv
284.16 177.772 284.4 177.592 284.64 177.712 cv
284.88 177.772 285 178.012 284.94 178.252 cv
284.88 178.432 284.64 178.612 284.4 178.552 cv
cp
282.72 178.012 mo
282.48 177.952 282.36 177.712 282.42 177.472 cv
282.48 177.232 282.72 177.112 282.96 177.172 cv
283.2 177.232 283.32 177.472 283.26 177.712 cv
283.2 177.952 282.96 178.072 282.72 178.012 cv
cp
281.04 177.472 mo
280.8 177.412 280.68 177.172 280.74 176.932 cv
280.8 176.692 281.04 176.572 281.28 176.632 cv
281.52 176.692 281.64 176.932 281.58 177.172 cv
281.52 177.412 281.28 177.532 281.04 177.472 cv
cp
279.36 176.992 mo
279.12 176.932 279 176.692 279.06 176.452 cv
279.12 176.212 279.36 176.032 279.6 176.152 cv
279.84 176.212 279.96 176.452 279.9 176.692 cv
279.84 176.932 279.6 177.052 279.36 176.992 cv
cp
277.68 176.452 mo
277.44 176.392 277.32 176.152 277.38 175.912 cv
277.44 175.672 277.68 175.552 277.92 175.612 cv
278.16 175.672 278.28 175.912 278.22 176.152 cv
278.16 176.392 277.92 176.512 277.68 176.452 cv
cp
276 175.912 mo
275.76 175.852 275.64 175.612 275.7 175.372 cv
275.76 175.132 276 175.012 276.24 175.072 cv
276.48 175.132 276.6 175.372 276.54 175.612 cv
276.48 175.852 276.24 175.972 276 175.912 cv
cp
274.32 175.432 mo
274.08 175.372 273.96 175.132 274.02 174.892 cv
274.08 174.652 274.32 174.532 274.56 174.592 cv
274.8 174.652 274.92 174.892 274.86 175.132 cv
274.8 175.372 274.56 175.492 274.32 175.432 cv
cp
272.64 174.892 mo
272.4 174.832 272.28 174.592 272.34 174.352 cv
272.4 174.112 272.64 173.992 272.88 174.052 cv
273.12 174.112 273.24 174.352 273.18 174.592 cv
273.12 174.832 272.88 174.952 272.64 174.892 cv
cp
270.96 174.352 mo
270.72 174.292 270.54 174.052 270.66 173.812 cv
270.72 173.632 270.96 173.452 271.2 173.512 cv
271.44 173.572 271.56 173.812 271.5 174.052 cv
271.44 174.292 271.2 174.472 270.96 174.352 cv
cp
269.28 173.872 mo
269.04 173.812 268.86 173.572 268.98 173.332 cv
269.04 173.092 269.28 172.972 269.52 173.032 cv
269.7 173.092 269.88 173.332 269.82 173.572 cv
269.76 173.812 269.52 173.932 269.28 173.872 cv
cp
267.6 173.332 mo
267.36 173.272 267.18 173.032 267.24 172.792 cv
267.36 172.552 267.6 172.432 267.84 172.492 cv
268.02 172.552 268.2 172.792 268.14 173.032 cv
268.08 173.272 267.78 173.392 267.6 173.332 cv
cp
265.92 172.852 mo
265.68 172.732 265.5 172.492 265.56 172.252 cv
265.68 172.072 265.92 171.892 266.1 171.952 cv
266.34 172.012 266.52 172.312 266.46 172.492 cv
266.34 172.732 266.1 172.912 265.92 172.852 cv
cp
264.24 172.312 mo
264.18 172.312 li
264 172.252 263.82 172.012 263.88 171.772 cv
263.94 171.532 264.24 171.412 264.42 171.472 cv
264.66 171.532 264.84 171.772 264.78 172.012 cv
264.66 172.252 264.42 172.372 264.24 172.312 cv
cp
262.5 171.772 mo
262.32 171.712 262.14 171.472 262.2 171.232 cv
262.26 170.992 262.5 170.872 262.74 170.932 cv
262.98 170.992 263.16 171.232 263.04 171.472 cv
262.98 171.712 262.74 171.832 262.5 171.772 cv
cp
260.82 171.292 mo
260.64 171.172 260.46 170.932 260.52 170.752 cv
260.58 170.512 260.82 170.332 261.06 170.392 cv
261.3 170.512 261.48 170.752 261.36 170.932 cv
261.3 171.172 261.06 171.352 260.82 171.292 cv
cp
259.14 170.752 mo
258.9 170.692 258.78 170.452 258.84 170.212 cv
258.9 169.972 259.14 169.852 259.38 169.912 cv
259.62 169.972 259.74 170.212 259.68 170.452 cv
259.62 170.692 259.38 170.812 259.14 170.752 cv
cp
257.46 170.212 mo
257.22 170.152 257.1 169.912 257.16 169.672 cv
257.22 169.432 257.46 169.312 257.7 169.372 cv
257.94 169.432 258.06 169.672 258 169.912 cv
257.94 170.152 257.7 170.272 257.46 170.212 cv
cp
255.78 169.732 mo
255.54 169.672 255.42 169.372 255.48 169.192 cv
255.54 168.952 255.78 168.772 256.02 168.832 cv
256.26 168.952 256.38 169.192 256.32 169.432 cv
256.26 169.612 256.02 169.792 255.78 169.732 cv
cp
254.1 169.192 mo
253.86 169.132 253.74 168.892 253.8 168.652 cv
253.86 168.412 254.1 168.292 254.34 168.352 cv
254.58 168.412 254.7 168.652 254.64 168.892 cv
254.58 169.132 254.34 169.252 254.1 169.192 cv
cp
252.42 168.652 mo
252.18 168.592 252.06 168.352 252.12 168.112 cv
252.18 167.872 252.42 167.752 252.66 167.812 cv
252.9 167.872 253.02 168.112 252.96 168.352 cv
252.9 168.592 252.66 168.712 252.42 168.652 cv
cp
250.74 168.172 mo
250.5 168.112 250.38 167.872 250.44 167.632 cv
250.5 167.392 250.74 167.212 250.98 167.332 cv
251.22 167.392 251.34 167.632 251.28 167.872 cv
251.22 168.052 250.98 168.232 250.74 168.172 cv
cp
249.06 167.632 mo
248.82 167.572 248.7 167.332 248.76 167.092 cv
248.82 166.852 249.06 166.732 249.3 166.792 cv
249.54 166.852 249.66 167.092 249.6 167.332 cv
249.54 167.572 249.3 167.692 249.06 167.632 cv
cp
247.38 167.092 mo
247.14 167.032 247.02 166.792 247.08 166.552 cv
247.14 166.312 247.38 166.192 247.62 166.252 cv
247.86 166.312 247.98 166.552 247.92 166.792 cv
247.86 167.032 247.62 167.152 247.38 167.092 cv
cp
245.7 166.612 mo
245.46 166.552 245.34 166.312 245.4 166.072 cv
245.46 165.832 245.7 165.652 245.94 165.772 cv
246.18 165.832 246.3 166.072 246.24 166.312 cv
246.18 166.552 245.94 166.672 245.7 166.612 cv
cp
244.02 166.072 mo
243.78 166.012 243.66 165.772 243.72 165.532 cv
243.78 165.292 244.02 165.172 244.26 165.232 cv
244.5 165.292 244.62 165.532 244.56 165.772 cv
244.5 166.012 244.26 166.132 244.02 166.072 cv
cp
242.34 165.532 mo
242.1 165.472 241.98 165.232 242.04 164.992 cv
242.1 164.752 242.34 164.632 242.58 164.692 cv
242.82 164.752 242.94 164.992 242.88 165.232 cv
242.82 165.472 242.58 165.652 242.34 165.532 cv
cp
240.66 165.052 mo
240.42 164.992 240.3 164.752 240.36 164.512 cv
240.42 164.272 240.66 164.152 240.9 164.212 cv
241.14 164.272 241.26 164.512 241.2 164.752 cv
241.14 164.992 240.9 165.112 240.66 165.052 cv
cp
238.98 164.512 mo
238.74 164.452 238.62 164.212 238.68 163.972 cv
238.74 163.732 238.98 163.612 239.22 163.672 cv
239.46 163.732 239.58 163.972 239.52 164.212 cv
239.46 164.452 239.22 164.572 238.98 164.512 cv
cp
237.3 163.972 mo
237.06 163.912 236.94 163.672 237 163.432 cv
237.06 163.252 237.3 163.072 237.54 163.132 cv
237.78 163.192 237.9 163.432 237.84 163.672 cv
237.78 163.912 237.54 164.092 237.3 163.972 cv
cp
235.62 163.492 mo
235.38 163.432 235.26 163.192 235.32 162.952 cv
235.38 162.712 235.62 162.592 235.86 162.652 cv
236.1 162.712 236.22 162.952 236.16 163.192 cv
236.1 163.432 235.86 163.552 235.62 163.492 cv
cp
233.94 162.952 mo
233.7 162.892 233.58 162.652 233.64 162.412 cv
233.7 162.172 233.94 162.052 234.18 162.112 cv
234.42 162.172 234.54 162.412 234.48 162.652 cv
234.42 162.892 234.18 163.012 233.94 162.952 cv
cp
232.26 162.472 mo
232.02 162.352 231.84 162.112 231.96 161.872 cv
232.02 161.692 232.26 161.512 232.5 161.572 cv
232.68 161.632 232.86 161.932 232.8 162.112 cv
232.74 162.352 232.5 162.532 232.26 162.472 cv
cp
230.58 161.932 mo
230.34 161.872 230.16 161.632 230.28 161.392 cv
230.34 161.152 230.58 161.032 230.82 161.092 cv
231 161.152 231.18 161.392 231.12 161.632 cv
231.06 161.872 230.82 161.992 230.58 161.932 cv
cp
228.9 161.392 mo
228.66 161.332 228.48 161.092 228.54 160.852 cv
228.66 160.612 228.9 160.492 229.08 160.552 cv
229.14 160.552 li
229.32 160.612 229.5 160.852 229.44 161.092 cv
229.38 161.332 229.08 161.452 228.9 161.392 cv
cp
227.22 160.912 mo
226.98 160.792 226.8 160.552 226.86 160.372 cv
226.98 160.132 227.22 159.952 227.4 160.012 cv
227.64 160.132 227.82 160.372 227.76 160.552 cv
227.64 160.792 227.4 160.972 227.22 160.912 cv
cp
225.48 160.372 mo
225.3 160.312 225.12 160.072 225.18 159.832 cv
225.24 159.592 225.54 159.472 225.72 159.532 cv
225.96 159.592 226.14 159.832 226.08 160.072 cv
225.96 160.312 225.72 160.432 225.48 160.372 cv
cp
223.8 159.832 mo
223.62 159.772 223.44 159.532 223.5 159.292 cv
223.56 159.052 223.8 158.932 224.04 158.992 cv
224.28 159.052 224.46 159.292 224.34 159.532 cv
224.28 159.772 224.04 159.892 223.8 159.832 cv
cp
222.12 159.352 mo
221.88 159.292 221.76 158.992 221.82 158.812 cv
221.88 158.572 222.12 158.392 222.36 158.452 cv
222.6 158.572 222.78 158.812 222.66 159.052 cv
222.6 159.232 222.36 159.412 222.12 159.352 cv
cp
220.44 158.812 mo
220.2 158.752 220.08 158.512 220.14 158.272 cv
220.2 158.032 220.44 157.912 220.68 157.972 cv
220.92 158.032 221.04 158.272 220.98 158.512 cv
220.92 158.752 220.68 158.872 220.44 158.812 cv
cp
218.76 158.272 mo
218.52 158.212 218.4 157.972 218.46 157.732 cv
218.52 157.492 218.76 157.372 219 157.432 cv
219.24 157.492 219.36 157.732 219.3 157.972 cv
219.24 158.212 219 158.332 218.76 158.272 cv
cp
217.08 157.792 mo
216.84 157.732 216.72 157.492 216.78 157.252 cv
216.84 157.012 217.08 156.832 217.32 156.952 cv
217.56 157.012 217.68 157.252 217.62 157.492 cv
217.56 157.672 217.32 157.852 217.08 157.792 cv
cp
215.4 157.252 mo
215.16 157.192 215.04 156.952 215.1 156.712 cv
215.16 156.472 215.4 156.352 215.64 156.412 cv
215.88 156.472 216 156.712 215.94 156.952 cv
215.88 157.192 215.64 157.312 215.4 157.252 cv
cp
213.72 156.712 mo
213.48 156.652 213.36 156.412 213.42 156.172 cv
213.48 155.932 213.72 155.812 213.96 155.872 cv
214.2 155.932 214.32 156.172 214.26 156.412 cv
214.2 156.652 213.96 156.772 213.72 156.712 cv
cp
212.04 156.232 mo
211.8 156.172 211.68 155.932 211.74 155.692 cv
211.8 155.452 212.04 155.272 212.28 155.392 cv
212.52 155.452 212.64 155.692 212.58 155.932 cv
212.52 156.172 212.28 156.292 212.04 156.232 cv
cp
210.36 155.692 mo
210.12 155.632 210 155.392 210.06 155.152 cv
210.12 154.912 210.36 154.792 210.6 154.852 cv
210.84 154.912 210.96 155.152 210.9 155.392 cv
210.84 155.632 210.6 155.752 210.36 155.692 cv
cp
208.68 155.152 mo
208.44 155.092 208.32 154.852 208.38 154.612 cv
208.44 154.372 208.68 154.252 208.92 154.312 cv
209.16 154.372 209.28 154.612 209.22 154.852 cv
209.16 155.092 208.92 155.272 208.68 155.152 cv
cp
207 154.672 mo
206.76 154.612 206.64 154.372 206.7 154.132 cv
206.76 153.892 207 153.772 207.24 153.832 cv
207.48 153.892 207.6 154.132 207.54 154.372 cv
207.48 154.612 207.24 154.732 207 154.672 cv
cp
205.32 154.132 mo
205.08 154.072 204.96 153.832 205.02 153.592 cv
205.08 153.352 205.32 153.232 205.56 153.292 cv
205.8 153.352 205.92 153.592 205.86 153.832 cv
205.8 154.072 205.56 154.192 205.32 154.132 cv
cp
203.64 153.592 mo
203.4 153.532 203.28 153.292 203.34 153.052 cv
203.4 152.872 203.64 152.692 203.88 152.752 cv
204.12 152.812 204.24 153.052 204.18 153.292 cv
204.12 153.532 203.88 153.712 203.64 153.592 cv
cp
201.96 153.112 mo
201.72 153.052 201.6 152.812 201.66 152.572 cv
201.72 152.332 201.96 152.212 202.2 152.272 cv
202.44 152.332 202.56 152.572 202.5 152.812 cv
202.44 153.052 202.2 153.172 201.96 153.112 cv
cp
200.28 152.572 mo
200.04 152.512 199.92 152.272 199.98 152.032 cv
200.04 151.792 200.28 151.672 200.52 151.732 cv
200.76 151.792 200.88 152.032 200.82 152.272 cv
200.76 152.512 200.52 152.632 200.28 152.572 cv
cp
198.6 152.092 mo
198.36 151.972 198.24 151.732 198.3 151.492 cv
198.36 151.312 198.6 151.132 198.84 151.192 cv
199.08 151.252 199.2 151.552 199.14 151.732 cv
199.08 151.972 198.84 152.152 198.6 152.092 cv
cp
196.92 151.552 mo
196.68 151.492 196.56 151.252 196.62 151.012 cv
196.68 150.772 196.92 150.652 197.16 150.712 cv
197.4 150.772 197.52 151.012 197.46 151.252 cv
197.4 151.492 197.16 151.612 196.92 151.552 cv
cp
195.24 151.012 mo
195 150.952 194.82 150.712 194.94 150.472 cv
195 150.232 195.24 150.112 195.48 150.172 cv
195.72 150.232 195.84 150.472 195.78 150.712 cv
195.72 150.952 195.48 151.072 195.24 151.012 cv
cp
193.56 150.532 mo
193.32 150.412 193.14 150.172 193.26 149.992 cv
193.32 149.752 193.56 149.572 193.8 149.632 cv
193.98 149.752 194.16 149.992 194.1 150.172 cv
194.04 150.412 193.8 150.592 193.56 150.532 cv
cp
191.88 149.992 mo
191.64 149.932 191.46 149.692 191.52 149.452 cv
191.64 149.212 191.88 149.092 192.12 149.152 cv
192.3 149.212 192.48 149.452 192.42 149.692 cv
192.36 149.932 192.12 150.052 191.88 149.992 cv
cp
190.98 148.192 mo
190.98 147.952 191.16 147.772 191.4 147.772 cv
191.7 147.772 191.88 147.952 191.88 148.192 cv
191.88 148.432 191.7 148.672 191.4 148.672 cv
191.16 148.672 190.98 148.432 190.98 148.192 cv
cp
190.98 146.452 mo
190.98 146.212 191.16 146.032 191.4 146.032 cv
191.7 146.032 191.88 146.212 191.88 146.452 cv
191.88 146.692 191.7 146.872 191.4 146.872 cv
191.16 146.872 190.98 146.692 190.98 146.452 cv
cp
190.98 144.712 mo
190.98 144.652 li
190.98 144.412 191.16 144.232 191.4 144.232 cv
191.7 144.232 191.88 144.412 191.88 144.652 cv
191.88 144.712 li
191.88 144.952 191.7 145.132 191.4 145.132 cv
191.16 145.132 190.98 144.952 190.98 144.712 cv
cp
190.98 142.912 mo
190.98 142.672 191.16 142.492 191.4 142.492 cv
191.7 142.492 191.88 142.672 191.88 142.912 cv
191.88 143.152 191.7 143.332 191.4 143.332 cv
191.16 143.332 190.98 143.152 190.98 142.912 cv
cp
190.98 141.172 mo
190.98 140.932 191.16 140.692 191.4 140.692 cv
191.7 140.692 191.88 140.932 191.88 141.172 cv
191.88 141.412 191.7 141.592 191.4 141.592 cv
191.16 141.592 190.98 141.412 190.98 141.172 cv
cp
190.98 139.372 mo
190.98 139.132 191.16 138.952 191.4 138.952 cv
191.7 138.952 191.88 139.132 191.88 139.372 cv
191.88 139.672 191.7 139.852 191.4 139.852 cv
191.16 139.852 190.98 139.672 190.98 139.372 cv
cp
190.98 137.632 mo
190.98 137.392 191.16 137.212 191.4 137.212 cv
191.7 137.212 191.88 137.392 191.88 137.632 cv
191.88 137.872 191.7 138.052 191.4 138.052 cv
191.16 138.052 190.98 137.872 190.98 137.632 cv
cp
190.98 135.892 mo
190.98 135.652 191.16 135.412 191.4 135.412 cv
191.7 135.412 191.88 135.652 191.88 135.892 cv
191.88 136.132 191.7 136.312 191.4 136.312 cv
191.16 136.312 190.98 136.132 190.98 135.892 cv
cp
190.98 134.092 mo
190.98 133.852 191.16 133.672 191.4 133.672 cv
191.7 133.672 191.88 133.852 191.88 134.092 cv
191.88 134.332 191.7 134.572 191.4 134.572 cv
191.16 134.572 190.98 134.332 190.98 134.092 cv
cp
190.98 132.352 mo
190.98 132.112 191.16 131.932 191.4 131.932 cv
191.7 131.932 191.88 132.112 191.88 132.352 cv
191.88 132.592 191.7 132.772 191.4 132.772 cv
191.16 132.772 190.98 132.592 190.98 132.352 cv
cp
190.98 130.612 mo
190.98 130.372 191.16 130.132 191.4 130.132 cv
191.7 130.132 191.88 130.372 191.88 130.612 cv
191.88 130.852 191.7 131.032 191.4 131.032 cv
191.16 131.032 190.98 130.852 190.98 130.612 cv
cp
190.98 128.812 mo
190.98 128.572 191.16 128.392 191.4 128.392 cv
191.7 128.392 191.88 128.572 191.88 128.812 cv
191.88 129.052 191.7 129.292 191.4 129.292 cv
191.16 129.292 190.98 129.052 190.98 128.812 cv
cp
190.98 127.072 mo
190.98 126.832 191.16 126.652 191.4 126.652 cv
191.7 126.652 191.88 126.832 191.88 127.072 cv
191.88 127.312 191.7 127.492 191.4 127.492 cv
191.16 127.492 190.98 127.312 190.98 127.072 cv
cp
190.98 125.332 mo
190.98 125.092 191.16 124.852 191.4 124.852 cv
191.7 124.852 191.88 125.092 191.88 125.332 cv
191.88 125.572 191.7 125.752 191.4 125.752 cv
191.16 125.752 190.98 125.572 190.98 125.332 cv
cp
190.98 123.532 mo
190.98 123.292 191.16 123.112 191.4 123.112 cv
191.7 123.112 191.88 123.292 191.88 123.532 cv
191.88 123.772 191.7 124.012 191.4 124.012 cv
191.16 124.012 190.98 123.772 190.98 123.532 cv
cp
190.98 121.792 mo
190.98 121.552 191.16 121.372 191.4 121.372 cv
191.7 121.372 191.88 121.552 191.88 121.792 cv
191.88 122.032 191.7 122.212 191.4 122.212 cv
191.16 122.212 190.98 122.032 190.98 121.792 cv
cp
190.98 120.052 mo
190.98 119.812 191.16 119.572 191.4 119.572 cv
191.7 119.572 191.88 119.812 191.88 120.052 cv
191.88 120.292 191.7 120.472 191.4 120.472 cv
191.16 120.472 190.98 120.292 190.98 120.052 cv
cp
190.98 118.252 mo
190.98 118.012 191.16 117.832 191.4 117.832 cv
191.7 117.832 191.88 118.012 191.88 118.252 cv
191.88 118.492 191.7 118.732 191.4 118.732 cv
191.16 118.732 190.98 118.492 190.98 118.252 cv
cp
190.98 116.512 mo
190.98 116.272 191.16 116.092 191.4 116.092 cv
191.7 116.092 191.88 116.272 191.88 116.512 cv
191.88 116.752 191.7 116.932 191.4 116.932 cv
191.16 116.932 190.98 116.752 190.98 116.512 cv
cp
190.98 114.772 mo
190.98 114.532 191.16 114.292 191.4 114.292 cv
191.7 114.292 191.88 114.532 191.88 114.772 cv
191.88 115.012 191.7 115.192 191.4 115.192 cv
191.16 115.192 190.98 115.012 190.98 114.772 cv
cp
190.98 112.972 mo
190.98 112.732 191.16 112.552 191.4 112.552 cv
191.7 112.552 191.88 112.732 191.88 112.972 cv
191.88 113.212 191.7 113.452 191.4 113.452 cv
191.16 113.452 190.98 113.212 190.98 112.972 cv
cp
190.98 111.232 mo
190.98 110.992 191.16 110.812 191.4 110.812 cv
191.7 110.812 191.88 110.992 191.88 111.232 cv
191.88 111.472 191.7 111.652 191.4 111.652 cv
191.16 111.652 190.98 111.472 190.98 111.232 cv
cp
190.98 109.492 mo
190.98 109.192 191.16 109.012 191.4 109.012 cv
191.7 109.012 191.88 109.192 191.88 109.492 cv
191.88 109.732 191.7 109.912 191.4 109.912 cv
191.16 109.912 190.98 109.732 190.98 109.492 cv
cp
190.98 107.692 mo
190.98 107.452 191.16 107.272 191.4 107.272 cv
191.7 107.272 191.88 107.452 191.88 107.692 cv
191.88 107.932 191.7 108.172 191.4 108.172 cv
191.16 108.172 190.98 107.932 190.98 107.692 cv
cp
190.98 105.952 mo
190.98 105.712 191.16 105.532 191.4 105.532 cv
191.7 105.532 191.88 105.712 191.88 105.952 cv
191.88 106.192 191.7 106.372 191.4 106.372 cv
191.16 106.372 190.98 106.192 190.98 105.952 cv
cp
190.98 104.212 mo
190.98 104.152 li
190.98 103.912 191.16 103.732 191.4 103.732 cv
191.7 103.732 191.88 103.912 191.88 104.152 cv
191.88 104.212 li
191.88 104.452 191.7 104.632 191.4 104.632 cv
191.16 104.632 190.98 104.452 190.98 104.212 cv
cp
190.98 102.412 mo
190.98 102.172 191.16 101.992 191.4 101.992 cv
191.7 101.992 191.88 102.172 191.88 102.412 cv
191.88 102.652 191.7 102.832 191.4 102.832 cv
191.16 102.832 190.98 102.652 190.98 102.412 cv
cp
190.98 100.672 mo
190.98 100.432 191.16 100.192 191.4 100.192 cv
191.7 100.192 191.88 100.432 191.88 100.672 cv
191.88 100.912 191.7 101.092 191.4 101.092 cv
191.16 101.092 190.98 100.912 190.98 100.672 cv
cp
190.98 98.8722 mo
190.98 98.6322 191.16 98.4522 191.4 98.4522 cv
191.7 98.4522 191.88 98.6322 191.88 98.8722 cv
191.88 99.1722 191.7 99.3522 191.4 99.3522 cv
191.16 99.3522 190.98 99.1722 190.98 98.8722 cv
cp
190.98 97.1322 mo
190.98 96.8922 191.16 96.7122 191.4 96.7122 cv
191.7 96.7122 191.88 96.8922 191.88 97.1322 cv
191.88 97.3722 191.7 97.5522 191.4 97.5522 cv
191.16 97.5522 190.98 97.3722 190.98 97.1322 cv
cp
190.98 95.3922 mo
190.98 95.1522 191.16 94.9122 191.4 94.9122 cv
191.7 94.9122 191.88 95.1522 191.88 95.3922 cv
191.88 95.6322 191.7 95.8122 191.4 95.8122 cv
191.16 95.8122 190.98 95.6322 190.98 95.3922 cv
cp
191.76 93.5322 mo
192 93.5322 192.18 93.7122 192.18 93.9522 cv
192.18 94.1922 192 94.3722 191.76 94.3722 cv
191.52 94.3722 191.34 94.1922 191.34 93.9522 cv
191.34 93.7122 191.52 93.5322 191.76 93.5322 cv
cp
193.5 93.5322 mo
193.74 93.5322 193.98 93.7122 193.98 93.9522 cv
193.98 94.1922 193.74 94.3722 193.5 94.3722 cv
193.26 94.3722 193.08 94.1922 193.08 93.9522 cv
193.08 93.7122 193.26 93.5322 193.5 93.5322 cv
cp
195.3 93.5322 mo
195.54 93.5322 195.72 93.7122 195.72 93.9522 cv
195.72 94.1922 195.54 94.3722 195.3 94.3722 cv
195.06 94.3722 194.82 94.1922 194.82 93.9522 cv
194.82 93.7122 195.06 93.5322 195.3 93.5322 cv
cp
195 92.6322 mo
196.74 93.9522 li
195 95.2722 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
f
181.02 546.892 mo
181.02 545.152 li
181.08 545.032 li
181.32 545.032 li
181.38 545.152 li
181.38 546.892 li
181.32 547.012 li
181.2 547.072 li
181.08 547.012 li
181.02 546.892 li
cp
180.3 545.632 mo
181.2 543.832 li
182.1 545.632 li
f
180.96 537.172 mo
180.96 535.492 li
181.02 535.372 li
181.14 535.312 li
181.26 535.372 li
181.32 535.492 li
181.32 537.172 li
181.26 537.292 li
181.14 537.352 li
181.02 537.292 li
180.96 537.172 li
cp
180.24 535.912 mo
181.14 534.172 li
182.04 535.912 li
f
176.76 543.772 mo
184.98 543.772 li
184.98 537.172 li
176.76 537.172 li
cp
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
183 542.752 mo
(o)sh
176.76 534.292 mo
184.98 534.292 li
184.98 527.692 li
176.76 527.692 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
183 533.152 mo
(o)sh
176.76 524.812 mo
184.98 524.812 li
184.98 518.212 li
176.76 518.212 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
183 523.612 mo
(o)sh
176.76 515.332 mo
184.98 515.332 li
184.98 508.732 li
176.76 508.732 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
183 514.012 mo
(o)sh
183 552.292 mo
(o)sh
176.76 553.552 mo
184.98 553.552 li
184.98 546.952 li
176.76 546.952 li
cp
188.1 543.772 mo
196.32 543.772 li
196.32 537.172 li
188.1 537.172 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
194.28 542.752 mo
(o)sh
188.1 534.292 mo
196.32 534.292 li
196.32 527.692 li
188.1 527.692 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
194.28 533.152 mo
(o)sh
188.1 524.812 mo
196.32 524.812 li
196.32 518.212 li
188.1 518.212 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
194.28 523.612 mo
(o)sh
188.1 515.332 mo
196.32 515.332 li
196.32 508.732 li
188.1 508.732 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
UZRTXA+ArialMT*1 [0 -7.92 -7.92 0 0 0 ]msf
194.28 514.012 mo
(o)sh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.64706 0 .12941 colr
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -7.92 -7.92 0 0 0 ]msf
194.28 552.292 mo
(x)sh
188.1 553.552 mo
196.32 553.552 li
196.32 546.952 li
188.1 546.952 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
180.9 527.632 mo
180.9 525.952 li
180.96 525.832 li
181.08 525.772 li
181.2 525.832 li
181.26 525.952 li
181.26 527.632 li
181.2 527.752 li
181.08 527.812 li
180.96 527.752 li
180.9 527.632 li
cp
180.18 526.372 mo
181.08 524.632 li
181.98 526.372 li
f
180.9 518.032 mo
180.9 516.352 li
180.96 516.232 li
181.08 516.172 li
181.2 516.232 li
181.26 516.352 li
181.26 518.032 li
181.2 518.152 li
181.08 518.212 li
180.96 518.152 li
180.9 518.032 li
cp
180.18 516.772 mo
181.08 515.032 li
181.98 516.772 li
f
192.06 546.772 mo
192.06 545.092 li
192.12 544.972 li
192.24 544.912 li
192.42 545.092 li
192.42 546.772 li
192.36 546.892 li
192.24 546.952 li
192.12 546.892 li
192.06 546.772 li
cp
191.4 545.512 mo
192.24 543.772 li
193.14 545.512 li
f
192.06 536.992 mo
192.06 535.252 li
192.12 535.132 li
192.36 535.132 li
192.42 535.252 li
192.42 536.992 li
192.36 537.112 li
192.24 537.172 li
192.12 537.112 li
192.06 536.992 li
cp
191.4 535.732 mo
192.24 533.932 li
193.14 535.732 li
f
192.12 527.572 mo
192.12 525.892 li
192.18 525.772 li
192.3 525.712 li
192.42 525.772 li
192.48 525.892 li
192.48 527.572 li
192.42 527.692 li
192.3 527.752 li
192.18 527.692 li
192.12 527.572 li
cp
191.4 526.312 mo
192.3 524.572 li
193.2 526.312 li
f
192.12 518.092 mo
192.12 516.412 li
192.18 516.292 li
192.3 516.232 li
192.42 516.292 li
192.48 516.412 li
192.48 518.092 li
192.42 518.212 li
192.3 518.272 li
192.18 518.212 li
192.12 518.092 li
cp
191.4 516.832 mo
192.3 515.092 li
193.2 516.832 li
f
185.28 510.952 mo
187.2 548.332 li
187.14 548.452 li
187.02 548.512 li
186.9 548.512 li
186.84 548.392 li
184.92 510.952 li
185.1 510.772 li
185.22 510.832 li
185.28 510.952 li
cp
187.86 547.852 mo
187.08 549.712 li
186.12 547.972 li
f
181.02 556.432 mo
181.02 554.752 li
181.08 554.632 li
181.2 554.572 li
181.32 554.632 li
181.38 554.752 li
181.38 556.432 li
181.32 556.552 li
181.2 556.612 li
181.08 556.552 li
181.02 556.432 li
cp
180.3 555.172 mo
181.2 553.432 li
182.1 555.172 li
f
1 lj
10 ml
192.24 508.492 mo
192.24 505.732 li
@
192.18 505.492 mo
199.44 505.492 li
199.44 530.872 li
199.32 530.692 li
201.42 530.692 li
201.54 530.752 li
201.6 530.872 li
201.54 530.992 li
201.42 531.052 li
199.32 531.052 li
199.2 530.992 li
199.14 530.872 li
199.14 505.612 li
199.32 505.792 li
192.18 505.792 li
192.06 505.732 li
192.06 505.492 li
192.18 505.492 li
cp
201 529.972 mo
202.74 530.872 li
201 531.772 li
f
272.94 531.052 mo
274.74 531.052 li
274.74 542.092 li
281.52 542.092 li
@
0 gry
true set_gvm
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXB+Arial-BoldMT-Identity-H dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D0F4790807CBACD8FD659970B8> |-
/parenleft <1C60D8A8C9B81F2C72146EAAC695F5A07C2F1D42F4ECFAFB99D5
B899E6739868D6522235F0AF6332C85CA30CAEC95DBB523788622A0FDBAF5694
5859AED5AEC0A6AF7B564BC94E339A7726> |-
/parenright <1C60D8A8C9B81F2C3A92BEFBE70AC1ECC3DF5A57EA622F764BF
A6DC49C94D700C7728E7832E635A7AD60A5A0F2BE12248DE299D5D500912A0C4
F88A530C6A590C843192DEA872C7859BB9F> |-
/hyphen <1C60D8A8C9B81F2C66C118D247C063C3B94AF8F773CC341A5DE26BA
36218B351> |-
/C <1C60D8A8C9B6079F29433629160CFF8C0ED394DAF78ABC659D3C1CA35A71
24F3EC60D99D402EF815BBAD183DF52A632874467D7EAD718D8FFCEFADFCF793
B6AB7419428601D191F7033C3B817C9BA6FA6DF9FDEC520C6F71A6522E372C77
BA9557779C66B2293B99A1FC76> |-
/E <1C60D8A8C9B64EDFD521FAC9E1227358079CD160790D488CEAC1D36F991A
E2DFDF43C0A49240BF6C382DFDE386ECC08D48363C516091D47DFC3804430A8D
22> |-
/N <1C60D8A8C9B6079F4C1A36BFFBB0238DA9D199C92424EBC58209E918EA9D
8176C623D3A2FF453A0431A50E1A7C08A7835C1032C76A643729D97B929DA73F
8A> |-
/a <1C60D8A8C9B7EF326DB97D6F43409870DDE68B36E786E1CEB8C520798D75
A089914E6D50A78DBDE606DB1E7A7A8A7E9EBB3907821FBB6528D5604AE78DFC
F7C60D51B8097B66F1ABB013D9B0783FE79A8A07EEB9D0E55921B5EA14136EF4
D4629A27554D96FEE6DC8B31E0625B1401D62376758CA8D1FE53560B6C98E394
A2FA3EA31E7F994C1FBC689A2BB92D1634E7FC7597B84CCC44D98860261A174B
D9B54FE8C42C72F0CE477BB0756B270C987530EE723AA3D0D89B094F519F7001
647A92AB31595C> |-
/b <1C60D8A8C9B7D8BE2E8969E41767A50AC5667D3B64010783805F48F72157
1532BCC161DF6CE2C0DF9545B37E4D11132F9C0BD39E22C92B3FC86D9CE5DA95
A3D93F38AE09235C108E4BAA0F762F5FD5B9DB5E618BC7FEEEB85393DF015C92
42EB05F211CDC010CF2078AFE05DF19DFBF3243EBD9E123A5AAC9CA5EA6CE250
53799CA79AE1D8> |-
/c <1C60D8A8C9B7EF326A1572E83D714470118FDB578BF17067C3D6074E5867
EBE537A9330F0B16B9465DF152DBD1446ABD0FF4A160712BE2CB96FAAE20EFDA
96F75F80042DA3827757BEAFB3CA088896EBEF2A6C67A840982C0866> |-
/d <1C60D8A8C9B7D8BE54D5898D0F1241BAF5CE10A639D27365AB0DE8F0649A
BD4BD5D80C84B14C6B3DABEDB581BAAF2E659E1D99336B93D073BA229F593ED3
D237ACA024AE0716833AE6B4D65F3D22EF0AC9A5CC74593FDCBB8D8727D8DAB3
EDC76C00329856A8FD551FE0F30DE401254996F6961AFD368B3F3D2134441595
55C32186A0DA15365A2B898181EF8324BB009725C41F9F450D890DD24A735F22
C38FD32A84AB9FD3FBDAC06F3A548E5FB76C1F60E76F06EE546B6ABA16ECAF09
0618BF9E24E58B48D86B> |-
/e <1C60D8A8C9B7EF327170CEA4018476226C697B4144AC96594938D62BFBFA
88A2435693228FF048F202912B04439DD491C783E3C9EDA3A0ECF0A9763B2DA5
61371E6C00F9929F77F043560BA16BB7BCD3A5B5FBA94C358937B721512CC833
A6D9E0F4C499FF052890E101427575BE8CD6602A95B8> |-
/f <1C60D8A8C9B81F2C2EF90798875F55C6B7C9208D714355EF726A351D6815
982DB68413ADC09EF04A61699F666099EE693D8E6D61A084A3164CA8570BB0C4
70CCFFE68639B9D9AED0B640B5FA6767AFA6B9DF91EE> |-
/g <1C60D8A8C9B7D8BE25CB0E30EE3D27E80A0D189524766F2E9D2F98B2838E
625EAF2C9B7379AB1A3182DC4AF4483220F7A5EC6A3D31DACEE32A0945B3D362
78ACD21F4337DCAEA128473784113086E594373CAEEBB632690AB58075210105
255E472EF5E1646846E94FBDC933695CFBE426E7748399439E36B920CF671308
87A80C8FC14B70767652F503A90E4C772936ED7E2D62BFCF471135E999ABE2E5
2EBBF3F9A3ACE741F5EDC50E3E112695B70A297AAA7D4D8BE1ACC05DE354C864
97F6E32FD2EBA3D0C7B0C79CECD60B96296367D595> |-
/h <1C60D8A8C9B7D8BE30EC60D657F53493D6A9005A307158F1312B9A48ED7F
5A4BE2BA7F405DA4BA80093FC29024643F661785C633DB7B9A56502C85C0AAE5
0F587FF572B87331864F867905837D687C95CFFF0B33663829851B> |-
/i <1C60D8A8C9B854D0D10D4D348B649B6FF4ED290F8DE2C6F987DAC372F583
5820362D4099CF3F8BF6A4DCF04A7640C7AA37> |-
/j <1C60D8A8C9B854D0CC05C42A7ACD4BB46420801A5D2B9C383FF86F4D7B88
025239BFDD9FBD33C3BD793E6B3AFFFE0C45E1434042CBCECC8AEF7C299D6EBA
E8A059DECA1CF5057E5F1E8239A91B8B20ED0153200DAD> |-
/l <1C60D8A8C9B854D0D10D4D348B649B6EFFA8EAC40F98C35489B1FD3D17AB
C960> |-
/m <1C60D8A8C9B59F85DABCEED9E2B55A82FCE33D33512D09C488E4202F4B8C
841DEEB7C6815BB8BAB99EFF5558A1EC6E19D3A918855F92406B7568E5E94C76
D9C7886C30D62B0C6F7D79708144CB267ABB419520058D24F7E10A99D890843C
A8501EFC4D1DD6CCE757E7A8BEAB149C3B64658987F12F8586D084DD13A0F1BD
D17707C2992A601E7947C7EDADD7C01E63AF9EB29D0797677C3ADD6695A042BA
0E321A68E840092B8D00EE27BC491F2791> |-
/n <1C60D8A8C9B7D8BE311EE1D5AD9369197FDEA8E999B7FE1D92C1E7368175
09C153C8825C21AF043584B3C7AB318B54A4375FDC168F0AAA42780648DE7B0E
E6000E7A12C12CC6A6D9318B94056D8EE48D4652C631D30EC08CC082E5EC5436
405E13CA8F20648C0066A19A2EABBAF7F341464B3A3A214CC2FCDFB0487F3B94
1FFB8804CC351FB575530108E5D9617963BCF8> |-
/o <1C60D8A8C9B7D8BE501F5C8FB2FBA72D8923E47835DE04B22A6DB6CD384A
8F505FD4DB2070BE21A07902695A4B01FE95621D4795A955A214F8A522B40E7F
49FC473B0C330EA40629155ACC203AB3D22D764D7002A9F475F185DD03> |-
/p <1C60D8A8C9B7D8BE2E8969E41767A50AC53DB864890F8AC4DB5FFC4864AA
9CFB9901D942AA1EE14992E778D2D546105E1240E0409DA6B2235C9A673AB724
DB51D485B2313D5C9592A2AA32B34AC9A7F78B4DF9E416924A27C6FCA9D3EEC2
A0B3D0F0FA2FE27D6217E678CF3187D2A8B8701F4A150C604DA2ECB34E742B81
55857713AF16103FD8900AC6D68B9EA979E837394C08D3DF4CEEC1DF2C05FE9D
CB7D5C3EF3C33AB755F40D57404D635BEB3C73A7ADEE00FCD36C54912F7D4DCD
219CB47430A21E8D6E03C6> |-
/r <1C60D8A8C9B7361F3A2E2EA543DCA8575071FD31784B4748C250AC0B4D39
056998178576FBEA7C529C1AE8759F8FD6FF2D6A8EDF25FCBB23C7E2E993575B
970C791C6D557486F04956E12464BB4F3640FB1D9F5678F71A545AF506F8A208
D3469C> |-
/s <1C60D8A8C9B7EF321E6D62106D71367A30B92B79921F3B990CD6460AD600
F2C8A6FD77E2623F886FB64866A4819705B687650A9EED80C7AB2F37F2310234
6BE9E56CDEFED10A033E1015835DBED2258FF415A2EE3EC3CB9E3D8BC8E48FB1
9637F96518BD7F873BD31905E290B05414AE5BA1E97DE5CE72A46C64C9962757
16A7E487FAE966> |-
/t <1C60D8A8C9B81F2C14E05CE4A197E2108EFA556D82D4CBC77481E17DCF9B
9D8D9068CDA17B502BC71DA7C6F937765FE6AADE863E87299714A1550013E8EA
F90212914FD27571E22A8C7E69815A1556764DCA9CCB40C26B0BB1E0782AFF> |-
/u <1C60D8A8C9B7D8BE30EC60D657F53493D6A9005A30D66A5EF6D35D0F7DCE
F50CCE4574406031EA587157F01BD3B08C2A7AEEC0BF96E018E0D0D63956BEB2
63C3EA7254A97F7B297731ED15D642B722A623E0069B961F11DBB791516B4722
8DB7F76B9060753A620DBDFA0D2F0C7E3B2E1915C724CFAB766E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXB+Arial-BoldMT-Identity-H /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 67 /C put
dup 69 /E put
dup 78 /N put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXB+Arial-BoldMT-Identity-H*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp 
/C /.notdef /E 8{/.notdef}rp /N 18{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/.notdef /l /m /n /o /p /.notdef /r 
/s /t /u 2{/.notdef}rp /x 135{/.notdef}rp]
UZRTXB+Arial-BoldMT-Identity-H nf
UZRTXB+Arial-BoldMT-Identity-H*1 [0 -8.82 -8.82 0 0 0 ]msf
346.74 574.432 mo
(\(a\) Example splitjoin\(b\) Normal execution\(c\) Compressed-domain execution of splitter \(left\) and joiner \(right\))
[-2.93964 -4.91895 -2.89288 -2.46167 -5.83887 -4.85986 -4.8598 -7.8587 -5.40125 -2.40173 -4.91888 -2.40167 
-4.8598 -5.40131 -2.40787 -2.46167 -2.89288 -2.46164 -5.40131 -2.4017 -45.3612 -2.93967 -5.40131 -2.87964 
-2.46167 -6.32394 -5.40131 -3.38696 -7.85867 -4.85983 -2.46167 -2.40167 -4.91891 -4.85983 -4.8598 -4.91891 
-5.40131 -2.87967 -2.46167 -5.40131 -66.4216 -2.93964 -4.91888 -2.8797 -2.46161 -6.32397 -5.34485 -7.85864 
-5.40131 -3.38696 -4.8598 -4.91888 -4.85986 -4.8598 -5.40131 -2.93964 -5.40131 -5.34485 -7.85864 -4.8598 
-2.46167 -5.34485 -2.46167 -4.8598 -4.91888 -4.8598 -4.91895 -5.40131 -2.87964 -2.46167 -5.40131 -5.34485 
-2.46161 -5.40131 -2.8797 -2.46161 -4.8598 -5.40131 -2.4079 -2.46161 -2.89288 -2.89288 -4.91895 -3.38696 
-2.40167 -2.93964 -2.40167 -4.91895 -2.87964 -2.9397 -2.87964 -2.46167 -4.91888 -5.40131 -5.34485 -2.40173 
-2.46161 -5.34131 -2.4079 -5.40131 -4.91888 -3.4187 -2.40173 -2.93964 -3.3587 -2.46167 -5.40125 -5.40131 
-2.8797 0 ]ysh
true set_gvm
%ADOBeginSubsetFont: Arial-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
UZRTXD+Arial-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D0F4790807CBACD8FD659970B8> |-
/h <1C60D8A8C9B7EF32243F1B832E8F0F34AF47BA3599AC161382694C88EB62
0236CBA444D31C92230C215440ACACF56AD166585A0943D1BD31B6E6D91F2C5A
7DE04FB917D9C829C18A59146921E257141D3A8A13EB0E41166AF4FAEE544C37
308490> |-
/l <1C60D8A8C9B88C082010D53CF1A8D4CD196DF6A30943D4B76D6352A37443
0CD7> |-
/p <1C60D8A8C9B7EF322425E24BBF205D0D28F6A72EB6470F2FDDD4B97193E8
EC3AA7AD14C760E3B194983EC4D64865917F03CA67729CEA1EE9C42CAAD8FE9F
E2CB135A5623E89E005ECACD2EC5442BC972438A4FF009A192AB0441908381BB
20156904349778823B7039773C7847600AAE6723D98B6D218A26175899FC4C6A
B198FA471A84023AD03549B1B049B6488850E599406282B49873C17C379E1D56
831013E19FEEE0FDCBD1720B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
UZRTXD+Arial-ItalicMT /Encoding get
dup 32 /space put
dup 104 /h put
dup 108 /l put
dup 112 /p put
pop
%ADOEndSubsetFont
reset_gvm
/UZRTXD+Arial-ItalicMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /.notdef /c /d /e 
/f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n 
/o /p /.notdef /r /s /t /u /.notdef 
/w 136{/.notdef}rp]
UZRTXD+Arial-ItalicMT nf
UZRTXD+Arial-ItalicMT*1 [0 -7.92 -7.92 0 0 0 ]msf
183.18 42.8922 mo
(prune rules )
[-4.39008 -2.62384 -4.39001 -4.39008 -4.39008 -2.22156 -2.62384 -4.43835 -1.74475 -4.39008 -3.94653 0 
]ysh
192.72 39.352 mo
(not shown)
[-4.38373 -4.38373 -2.22156 -2.22156 -3.94019 -4.38373 -4.43915 -5.63904 0 ]ysh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 /2 ]]
] del_res
true set_gvm
/UZRTXB+Arial-BoldMT-Identity-H*1 uf
/UZRTXB+Arial-BoldMT-Identity-H uf
/Arial-BoldMT uf
/UZRTXC+SymbolMT*1 uf
/UZRTXC+SymbolMT uf
/QJJAAA+SymbolMT uf
/UZRTXD+Arial-ItalicMT*1 uf
/UZRTXD+Arial-ItalicMT uf
/Arial-ItalicMT uf
/UZRTXA+ArialMT*1 uf
/UZRTXA+ArialMT uf
/ArialMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
