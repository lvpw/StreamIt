%!PS-Adobe-3.0 EPSF-3.0
%%Title: (splitjoin.eps)
%%Version: 1 3
%%Creator: (Adobe Illustrator\(R\) 9.0)
%%CreationDate: (D:20011116133740-05'00')
%%For: (Saman P Amarasinghe)
%%DocumentData: Clean7Bit
%%BoundingBox: 196 38 612 162
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
196 38 moveto 612 38 lineto 612 162 lineto 196 162 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
196 38 415 124 rectclip
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font HIICDN+Arial
ct_CffDict begin
%!FontType1
15 dict begin
/FontInfo 13 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/BaseFontName (Arial) def
/Weight (Regular) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /HIICDN+Arial def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -46 -250 1126 831 } def
/XUID [5 41987 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC67F973A7D
D910BBCA8FA950CADA53428D6A05E03FC36240446596E9CE8C00741062BC2225
21BE3ACEBBC0E52B5DBF08A16A533A1006532B48C5B0C609587B7664D3ED28D3
498C000D1A6EDC1803276B85D2EA91BA82A38289E339681369EC118B310B1B22
D650A646D98D39314CDB5674512440C625A60A8E62638FAABC319D14995E3889
E0BD7715F32ACD98071CB1950367782435771B2BC4BE7B798F797C0582576E87
AEDA4824F4774779185C9CB8E380DD8BE09255DCE1572AC4F9C79D50660DDB3A
51CC285BDC3487AD2D386300C7A37E9425873251753B42E6DDA9F5BCDF97B48B
AB37870A6446A062A0481D450DB1394217B65B35FECB79647B9E78E62412DD93
3C56359CBCC516BE17001BFD2D0AE40F8FF536D11DA737D990395CA8891F62BC
5725944E1295B6C697D250F2AEFA64FBA381261CC52CE11FC260B7507A5F9F6F
3D5969CDA6090477A15BF250CC75E014A130BF570F6DCD9CFFF5A5880B6EF7CD
7502ADF4D550BD5D5C2CE6F2286E34156D0D8613897908BE57B72C10C9AA19CB
EFE8B414A1BF7D4B6245F70E9E1EE3F495106CA1AF2BB51450D792B3A503FA7C
7DD77C0A4E3363D0410186947A96BE5585B8D09B728D342ED0C310CF9FBABD9A
A830C36E40863C2A7E8511F776A07769096C811CFC46D2F289C5BBC7DB634FF0
06AEAD116C29FF2291CA3DE36F2B852DA2A863D5BB2C26A71394F15E17F40876
D5127514F2FAEB6F06CC8D76D31F16C01DB7B46DB3B8544CAE855FDA4BCD268F
862058610D749B2A9DE7ADBC3628C47E65EDF0AC69F1584DE83FA30130453832
4C7807012D672D74A43DADA897E6C08644082C410F9701EEF11F0AFA63732A63
759608037514F874F203954724574129591FD82E46181DAD885E4F7C98636D76
D3DEDF93579038C4EF5162564836FC630A3AFA74F43492134E690ACC8F787DBB
15D8733276B50EDC5E9FB5B87C17489F3F0BAF8FC919DCCDA069EC1BF1F1240F
228ADA6B4BCE9E32E0E557ED666CB57FFFEFD90C133582BAFF759EEDC74DCF73
E08C81822CEF823136F1D5AFB9126DABFB0EC390C837200E9C5273D221A14366
047FADCDDAE9CC9108BE9589129D583838613F48CC5E827051210C23DA9CD3A9
5692EDE683BCF025D955A9819F91DB7069E4613937A58E23020D64C2C1E4B56A
D99AAB627F500B1479F9F4B288C81F773BAAEFBB790FEE5B6127C90BD24E7E50
DBEB10EC4A97D4FCBE939B5DEA291787676C7266C3BF2C6F0D2B612109773D2A
B484BC0244686D7201484EB27FDD571A0E456B4172D045EB17CF3A5DC58BA09C
623B96D3FA5E83DB470FAB8EC65165679F73F845624B795BA2D724B4B95B2BD2
0EA57DCF1FED1752C9CF58B49DDBC7FAE5FE0CFE8D30D597E7ECFE447885F98D
BF0F06A586B7EF2A79A4B3FDFAA2E9AD70D02780F5447AD1943D7F5AA1F49F9D
731A3BA53F5F650B144137758B160EC3F36E8473E4F5A748F021AEE3965163DD
AB466AEA76D19C3194EBC821B1B553C37C699737B45E6B9530CC876626F76A85
EB2511DB745329AD34DA8B151C504E707A56291BABFF08812AA8657894ACDC3A
53F715DD905D08D9CAC48795CF6744D67986968E79C8EDAF32EC9A52A28C8AE9
FE22D629DCDCAB0E8B42AB0310AD9323FB89F4871603417DC1812C6C64CCE37F
CB51C00859CF687DB538858AA0DEB84962141D09A073A84950C60ABCE1BBBDFB
EAC87D4E4134468AE4F9AFCF56B05C35C23123E16B120A220E9AFBEBA77D7658
FE7D4D6FF5B7DD7E7CE160A74D0F435FFE12BBEEF92E95DC10D3A5AE7F50DAD4
35FC10AF3A8E21463794DAAF1238F10861FE1B79BB8BB592F0C2823C1F41B5CC
51501CBFFF4924AB96E7AD620B16509D462E90BE1EBC79D861044701709AF87D
C9302A97A3A4B8E4AAF086DCC1854BA6E4CE706FB0FD180F9C5CEBE7600C3AD3
99901E7467CDC3E3838C183733A9634C4BB542A29B31991CCFADB54D25162F16
C09F61FB9716FE57484B76774586412D3B5E71E0542AF6A90F13387B9053C8CE
84532CB01BDD3C6B463C20C4628685FB26C39E98A8B540E1AC36148A148FB446
46560C3B88E140A8DA36E10DF1F9DD56940332F978BB0BADB73716701ED9B138
9A89EF84587F2215835FFABCB626338BCEE8F8750FF38F21D745C52DE79407F8
13C5604E6692429E3712EFCC1369DEDBBEE661D3DE855FE8FA575FD9E9D03B77
6F234EF6A31A380C67AA38FB97AC1E39B55E05BE8E5AACC137451374F346A8D1
C3BBF46460B492C649F7C97008C56C63B8D41DA3CD9323935230D14C0942E163
8D99DE4CC097185B4F91D8D705D9BB1BF68BF92F192E92E71DEE8955E83E08A1
635ACE329F1A4ABBE78D2DD5F83C779F9651F4942C31E44D240573B5F2CE5FD5
EEDAF031DB43F567223BA99128CC8C6868B9E2A7D7AB808C1F44E78AC83D6970
8B5D9C38B3DC719474C4EFCCDF9CDB657E139E5A761C0C379C1914007EBC9472
EDC0CC856C5CA6B006B790217692A219A2E9A0161B4483FA157D6B6E4CCAD105
9A13A81BFCCD6FAA32EC0FFD38EC1B522389AD4DBEEFA8316BA137AD302D33FA
A6C4CC68E2C2FF80A230194BBA20BB9EDECA8E8C434DC018E83C371DFE85CCBA
3B7DB73DC8BF56AAD132304ADC802499B8EB8EA81C09982E41B0CC3EC0C6A08D
1734BDC36AC9136B9448F226BA7882D17DB9361C92BE11166FDC00E79A7311C6
31E30EF42D2D6331B8BAB25F3F046EC131FF4603560E4BFE9C398D5F601FEE48
391A42E8642E1FB0617836647C8B34097F7BD213B70072FA9083D7E1842A9FBC
FC99231FD52E40E2F00D44BD6F96B400799C5B99C3E9B4B2AC7901727C51B664
E1A80CD578180F87F626354BFE7B637A4098399BFBF9C7E8E6C5E28373E61C2A
4E5C474891F71D366E8E4501902EB71F8A1143B18A5F4C96C5899B8A1FF45024
E14B602FE31A84118A97F6A2072BDA0FA618182CD54881C93AF60F8B1DD07E36
CDC5B401D6EAB6516B624B2BCE97B2DE67857CCA2E929A4155B2EE493C7792C3
11298E3038FFC30B3EF8F93B9500AE42D9AAB320
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/HIICDN+Arial findfont /Encoding get
dup 0 /.notdef put
pop
end
/HIICDN+Arial findfont /Encoding get
dup 0 /.notdef put
dup 49 /one put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 74 /J put
dup 83 /S put
dup 109 /m put
dup 110 /n put
pop
%%EndResource
[ 32 /space/exclamsmall/Hungarumlautsmall 36 /dollaroldstyle/dollarsuperior/ampersandsmall
/Acutesmall/parenleftsuperior/parenrightsuperior/twodotenleader/onedotenleader/comma
/hyphen/period/fraction/zerooldstyle/one/twooldstyle
/threeoldstyle/fouroldstyle/fiveoldstyle/sixoldstyle/sevenoldstyle/eightoldstyle
/nineoldstyle/colon/semicolon/commasuperior/equal/periodsuperior
/questionsmall 65 /A/B/centsuperior/dsuperior/esuperior
 73 /isuperior/J 76 /lsuperior/msuperior/nsuperior/osuperior
 82 /rsuperior/S/tsuperior 86 /ff/fi/fl
/ffi/ffl/parenleftinferior 93 /parenrightinferior/Circumflexsmall/hyphensuperior
/Gravesmall/Asmall/Bsmall/Csmall/Dsmall/Esmall
/Fsmall/Gsmall/Hsmall/Ismall/Jsmall/Ksmall
/Lsmall/m/n/Osmall/Psmall/Qsmall
/Rsmall/Ssmall/Tsmall/Usmall/Vsmall/Wsmall
/Xsmall/Ysmall/Zsmall/colonmonetary/onefitted/rupiah
/Tildesmall 161 /exclamdownsmall/centoldstyle/Lslashsmall 166 /Scaronsmall/Zcaronsmall
/Dieresissmall/Brevesmall/Caronsmall 172 /Dotaccentsmall 175 /Macronsmall 178 /figuredash
/hypheninferior 182 /Ogoneksmall/Ringsmall/Cedillasmall 188 /onequarter/onehalf
/threequarters/questiondownsmall/oneeighth/threeeighths/fiveeighths/seveneighths
/onethird/twothirds 200 /zerosuperior/onesuperior/twosuperior/threesuperior
/foursuperior/fivesuperior/sixsuperior/sevensuperior/eightsuperior/ninesuperior
/zeroinferior/oneinferior/twoinferior/threeinferior/fourinferior/fiveinferior
/sixinferior/seveninferior/eightinferior/nineinferior/centinferior/dollarinferior
/periodinferior/commainferior/Agravesmall/Aacutesmall/Acircumflexsmall/Atildesmall
/Adieresissmall/Aringsmall/AEsmall/Ccedillasmall/Egravesmall/Eacutesmall
/Ecircumflexsmall/Edieresissmall/Igravesmall/Iacutesmall/Icircumflexsmall/Idieresissmall
/Ethsmall/Ntildesmall/Ogravesmall/Oacutesmall/Ocircumflexsmall/Otildesmall
/Odieresissmall/OEsmall/Oslashsmall/Ugravesmall/Uacutesmall/Ucircumflexsmall
/Udieresissmall/Yacutesmall/Thornsmall/Ydieresissmall
/N21/HIICDN+Arial -1 TZ
%%BeginResource: font HIICBN+TimesNewRoman
ct_CffDict begin
%!FontType1
15 dict begin
/FontInfo 13 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/BaseFontName (TimesNewRoman) def
/Weight (Regular) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /HIICBN+TimesNewRoman def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -46 -250 1126 831 } def
/XUID [5 41987 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC67F973A7D
D910BBCA8FA950CADA53428D6A05E03FC36240446596E9CE8C00741062BC2225
21BE3ACEBBC0E52B5DBF08A16A533A1006532B48C5B0C609587B7664D3ED28D3
498C000D1A6EDC1803276B85D2EA91BA82A38289E339681369EC118B310B1B22
D650A646D98D39314CDB5674512440C625A60A8E62638FAABC319D14995E3889
E0BD7715F32ACD98071CB1950367782435771B2BC4BE7B798F797C0582576E87
AEDA4824F4774779185C9CB8E380DD8BE09255DCE1572AC4F9C79D50660DDB3A
51CC285BDC3487AD2D386300C7A37E9425873251753B42E6DDA9F5BCDF97B48B
AB37870A6446A062A0481D450DB1394217B65B35FECB79647B9E78E62412DD93
3C56359CBCC516BE17001BFD2D0AE40F8FF536D11DA737D990395CA8891F62BC
5725944E1295B6C697D250F2AEFA64FBA381261CC52CE11FC260B7507A5F9F6F
3D5969CDA6090477A15BF250CC75E014A130BF570F6DCD9CFFF5A5880B6EF7CD
7502ADF4D550BD5D5C2CE6F2286E34156D0D8613897908BE57B72C10C9AA19CB
EFE8B414A1BF7D4B6245F70E9E1EE3F495106CA1AF2BB51450D792B3A503FA7C
7DD77C0A4E3363D0410186947A96BE5585B8D09B728D342ED0C310CF9FBABD9A
A830C36E40863C2A7E8511F776A07769096C811CFC46D2F289C5BBC7DB634FF0
06AEAD116C29FF2291CA3DE36F2B852DA2A863D5BB2C26A71394F15E17F40876
D5127514F2FAEB6F06CC8D76D31F16C01DB7B46DB3B8544CAE855FDA4BCD268F
862058610D749B2A9DE7ADBC3628C47E65EDF0AC69F1584DE83FA30130453832
4C7807012D672D74A43DADA897E6C08644082C410F9701EEF11F0AFA63732A63
759608037514F874F203954724574129591FD82E46181DAD885E4F7C98636D76
D3DEDF93579038C4EF5162564836FC630A3AFA74F43492134E690ACC8F787DBB
15D8733276B50EDC5E9FB5B87C17489F3F0BAF8FC919DCCDA069EC1BF1F1240F
228ADA6B4BCE9E32E0E557ED666CB57FFFEFD90C133582BAFF759EEDC74DCF73
E08C81822CEF823136F1D5AFB9126DABFB0EC390C837200E9C5273D221A14366
047FADCDDAE9CC9108BE9589129D583838613F48CC5E827051210C23DA9CD3A9
5692EDE683BCF025D955A9819F91DB7069E4613937A58E23020D64C2C1E4B56A
D99AAB627F500B1479F9F4B288C81F773BAAEFBB790FEE5B6127C90BD24E7E50
DBEB10EC4A97D4FCBE939B5DEA291787676C7266C3BF2C6F0D2B612109773D2A
B484BC0244686D7201484EB27FDD571A0E456B4172D045EB17CF3A5DC58BA09C
623B96D3FA5E83DB470FAB8EC65165679F73F845624B795BA2D724B4B95B2BD2
0EA57DCF1FED1752C9CF58B49DDBC7FAE5FE0CFE8D30D597E7ECFE447885F98D
BF0F06A586B7EF2A79A4B3FDFAA2E9AD70D02780F5447AD1943D7F5AA1F49F9D
731A3BA53F5F650B144137758B160EC3F36E8473E4F5A748F021AEE3965163DD
AB466AEA76D19C3194EBC821B1B553C37C699737B45E6B9530CC876626F76A85
EB2511DB745329AD34DA8B151C504E707A56291BABFF08812AA8657894ACDC3A
53FF9BBA1D4F2E637120ABE6A0E37C45233D40F1BF869EB25CE63EB83ACEE51A
D3DC780D2B984000D98535C239F9D1DED6DB6A4F6C3867347BB43859821680E7
FBA0B6B753A8E432B0283C6544180F091A32E2B933B16D5AD0BB2116C651A886
3FA30FFB7042711800F5D586692B9467D7A6E53583715360B00F97FFD064BB5E
6E36158CCEED4BABA53C3259B444EA60C692701F56215247F83345A2D1385CC1
A746C56C356464235848796CB8BC2AC509C405FC19D0D1E216247C49FCBA52B2
D5E2485E0CD0ED28548A30E8B60BE12AEB9665D36786F918FE425E5D7D106D80
E319FC0D1B95CD2F07757CFAF4FF31DAF835DDCEC72529411EDE03214050A40A
E3123C3D2288D3378A73D5C6C84AA110F01743AC4174AF129188910BF9631850
5A2550E1146AC407979270EA2954A47F7EEFF6728EFFF74DEFF7F20FDCFE9D17
2CBC683743848D7480A26B0E5E3458E3C14DAE843F62187E64933D77706B2D6C
D5005306F090884E76B4C3BFC0020ECF67C85D2FBB2B9C8A5A5CF123881F56A5
F16158B3FCF1A139CFFDE05FCA8FF107509073C7063D75F7C419BE8C0E4C15EE
54A53689D3BD29B046E742A9D45807BB884ED063B07284429535B5CC9AD0E9BB
B4EB6AA0A73AD0D242A2274A8F428873D08164C39659A8EC3C5DC9467F652D59
5599A152DC86428624082E05424C9815CEBFAA3578DA59DAA843E5F9024E911C
33D1CF7FAF5579EF1AB295E149ADCF78083B5A9297213D0D1C6DA9FBF40A8560
FC29EB2B7436FF836A38B3F07EE3DD3B6A7A25BB3598D22A0317FD5C8D71E31C
2DE9EA117EE08749198864051FEEC7A73E736081C8CCEBBCC31549AE9DE835AE
29E57381496BA6A357518C1B7FF3E02A1E1508B85906506836D0D03153D4398A
10AE9B3A7899B170B19D0B80D07729548197B1CC7396FCA925645858D7A13FFA
A982794BE70A5F155F816557E201E8753AD3BBA6025570167FA339E5D1605F6B
D693E420C4561A78066E15EF6B0AD6DEC4FE774F5F766381A8D0CA6EDEC2AC5F
73A9FDAD872BE980492CD0B89B93098CC95940632A2BAEC6FFB0F41D8B87589E
C84B71A323206683C50382CDF45DB37264CA8693478844D15209E41A432BE4C0
9E5169EA2EF16CC05E85D23DB3ACA8A5C33C67F0F9C595D0254623871ED90F23
F67B1DD3624748BE2EE802E224CFFA851ED3C4D8AEEE1A422E8866F20D04F6F7
959C6983C46BD212497FCC1255E2BC5488CF58AEBC3F9D492433A77CF679893F
FC2A6849403AB760C11B5075AFC195FB935C4A8EFCCE25F5930EE3EB4407BD3E
2C84013A1C467BD81E0BCA432020DE7B1D557A8B48E461E5369DD771523C2DEE
9F14E3213E67927AE757FA27A29C1B0C3F4ABB875FC7B87EFD1A5E21B53F56C2
50D0FBE21475899FEB45139C93E5F017A857928F880A763CD84E7FFA993CEA48
F14FA85E656BC5FA6D4818E421DF09728A117B839F253E01509590FF45FA1E46
8F370720E68554560EB7834A2BA755B98AC2DEB5FEDA88A9B89321AF74685959
3298F4B90ABD8CC91032678727E0B5632D068983E19345CA3649D0E87FFF8FBB
D480AA1172A8DB0493D00CE6EBBC50BCA6B3BE3CE1FF5EB5D270AB5B0CB9F7C1
42A3108E0D3361711E8C38B167FDA718C410C8C820C90A5E35F57334EE635818
D4B047B31CE3284C51B6B32451523DC92D40463C6D98040D9404ACF5D2D883F4
892E81DF18B10642F24E1B09F520F5495BCEBB3678C9B469A50B9132D3E51A90
36B0344399E84E6D72E54F18946003E1F78C8A530CDF800099A021A877EE7043
AF91FD23EFD60ACECC594EC3D465F3093788ABFD5343
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/HIICBN+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
pop
end
/HIICBN+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 44 /comma put
dup 49 /one put
dup 50 /two put
dup 65 /A put
dup 66 /B put
dup 73 /I put
dup 74 /J put
dup 79 /O put
dup 83 /S put
dup 109 /m put
dup 110 /n put
pop
%%EndResource
[ 44 /comma 49 /one/two 65 /A/B 73 /I
/J 79 /O 83 /S 109 /m/n
/N16/HIICBN+TimesNewRoman -1 TZ
false setSA
n
524.417 83.779 m
524.177 84.018 l
523.817 84.138 l
523.337 84.138 l
522.857 83.659 l
522.737 83.299 l
522.737 82.819 l
522.857 82.459 l
523.217 82.219 l
523.938 82.219 l
524.297 82.339 l
524.537 82.699 l
524.657 83.058 l
524.657 83.419 l
524.417 83.779 l
0.136993 0.121994 0.125 setrgbcolor
eofill
n
522.377 82.459 m
521.897 85.459 l
521.657 85.699 l
522.137 85.939 l
530.897 89.899 l
532.577 90.619 l
531.497 89.179 l
526.097 81.259 l
525.977 81.018 l
525.617 81.138 l
525.377 81.739 l
530.777 89.659 l
531.497 89.179 l
531.377 88.939 l
522.617 84.978 l
522.137 85.939 l
522.857 85.579 l
523.337 82.579 l
f
n
525.617 81.138 m
522.737 82.098 l
522.497 82.098 l
522.377 82.459 l
523.097 82.939 l
525.977 81.978 l
f
n
522.857 82.459 m
522.377 85.459 l
531.137 89.419 l
525.737 81.499 l
eofill
n
524.417 82.339 m
525.137 82.939 l
523.817 84.499 l
523.097 83.899 l
f
n
492.137 55.459 m
491.417 54.859 l
490.097 56.419 l
490.817 57.018 l
f
n
524.417 82.339 m
523.097 83.899 l
490.817 57.018 l
492.137 55.459 l
f
n
524.897 117.499 m
525.137 117.859 l
525.137 118.219 l
525.017 118.579 l
524.777 118.939 l
524.417 119.179 l
524.057 119.179 l
523.697 119.059 l
523.457 118.819 l
523.217 118.459 l
523.217 118.099 l
523.337 117.739 l
523.577 117.379 l
524.297 117.139 l
524.657 117.259 l
524.897 117.499 l
eofill
n
523.217 119.179 m
526.097 120.259 l
526.457 120.499 l
526.577 120.139 l
531.977 112.219 l
533.057 110.779 l
531.377 111.499 l
522.617 115.339 l
522.377 115.459 l
522.377 115.819 l
523.097 116.299 l
531.857 112.459 l
531.377 111.499 l
531.257 111.739 l
525.857 119.659 l
526.577 120.139 l
526.457 119.419 l
523.577 118.339 l
f
n
522.377 115.819 m
522.857 118.819 l
522.977 119.179 l
523.217 119.179 l
523.817 118.699 l
523.337 115.699 l
f
n
523.337 118.819 m
526.217 119.899 l
531.617 111.979 l
522.857 115.819 l
eofill
n
523.577 117.379 m
524.297 116.779 l
525.617 118.339 l
524.897 118.939 l
f
n
491.297 144.139 m
490.577 144.739 l
491.897 146.299 l
492.617 145.699 l
f
n
523.577 117.379 m
524.897 118.939 l
492.617 145.699 l
491.297 144.139 l
f
457.857 119.329 m
/N16 13.5 Tf
(O) show
468.117 114.829 m
/N16 10.44 Tf
(An)
[6.41014 5.81499 ] pdfxs
502.137 119.329 m
/N16 13.5 Tf
(I) show
506.016 114.829 m
/N16 10.44 Tf
(1,J) show
487.557 119.329 m
/N21 13.5 Tf
(=) show
n
461.537 68.299 m
458.897 68.058 l
456.377 67.219 l
453.977 66.018 l
452.057 64.339 l
450.377 62.299 l
449.177 60.018 l
448.337 57.499 l
448.097 54.739 l
448.337 52.098 l
449.177 49.579 l
450.377 47.299 l
452.057 45.259 l
453.977 43.579 l
456.377 42.379 l
458.897 41.539 l
461.537 41.299 l
479.657 41.299 l
482.297 41.539 l
484.938 42.379 l
487.217 43.579 l
489.137 45.259 l
490.817 47.299 l
492.017 49.579 l
492.857 52.098 l
493.097 54.739 l
492.857 57.499 l
492.017 60.018 l
490.817 62.299 l
489.137 64.339 l
487.217 66.018 l
484.938 67.219 l
482.297 68.058 l
479.657 68.299 l
461.537 68.299 l
1 1 1  setrgbcolor
eofill
n
461.537 68.058 m
458.897 67.819 l
459.017 67.819 l
456.497 66.978 l
454.097 65.779 l
454.217 65.779 l
452.297 64.098 l
450.617 62.058 l
450.617 62.179 l
449.417 59.899 l
448.577 57.379 l
448.577 57.499 l
448.337 54.739 l
448.577 52.098 l
449.417 49.579 l
449.417 49.699 l
450.617 47.419 l
452.297 45.379 l
454.217 43.699 l
454.097 43.819 l
456.497 42.619 l
459.017 41.779 l
458.897 41.779 l
461.537 41.539 l
479.657 41.539 l
482.297 41.779 l
484.938 42.619 l
484.817 42.619 l
487.097 43.819 l
487.097 43.699 l
489.017 45.379 l
490.697 47.419 l
490.577 47.419 l
491.777 49.699 l
491.777 49.579 l
492.617 52.098 l
492.857 54.739 l
492.617 57.499 l
492.617 57.379 l
491.777 59.899 l
490.577 62.179 l
490.697 62.058 l
489.017 64.098 l
487.097 65.779 l
484.817 66.978 l
484.938 66.978 l
482.297 67.819 l
479.657 68.058 l
461.537 68.058 l
461.537 68.539 l
479.657 68.539 l
482.297 68.299 l
482.417 68.299 l
485.057 67.459 l
487.337 66.259 l
487.457 66.138 l
489.377 64.459 l
491.057 62.419 l
492.257 60.138 l
492.257 60.018 l
493.097 57.499 l
493.337 54.739 l
493.097 52.098 l
493.097 51.978 l
492.257 49.459 l
491.057 47.179 l
491.057 47.058 l
489.377 45.018 l
487.457 43.339 l
487.337 43.339 l
485.057 42.138 l
482.417 41.299 l
482.297 41.299 l
479.657 41.058 l
461.537 41.058 l
458.897 41.299 l
456.377 42.138 l
456.257 42.138 l
453.857 43.339 l
451.938 45.018 l
450.257 47.058 l
450.137 47.179 l
448.938 49.459 l
448.097 51.978 l
448.097 52.098 l
447.857 54.739 l
448.097 57.499 l
448.938 60.018 l
448.938 60.138 l
450.137 62.419 l
450.257 62.419 l
451.938 64.459 l
453.857 66.138 l
453.857 66.259 l
456.257 67.459 l
456.377 67.459 l
458.897 68.299 l
461.537 68.539 l
0.136993 0.121994 0.125  setrgbcolor
f
n
461.537 68.058 m
461.537 68.539 l
f
461.537 48.859 m
/N21 14.3999 Tf
(Bm) show
n
361.217 55.699 0.960022 -2.03999 re
f
n
362.177 55.699 30.72 -2.03999 re
f
n
390.977 55.699 0.960022 -2.03999 re
f
n
391.937 55.699 1.44 -2.03999 re
f
n
395.657 55.699 0.960022 -2.03999 re
f
n
397.457 55.699 0.959991 -2.03999 re
f
n
396.617 55.699 0.839996 -2.03999 re
f
n
400.577 55.699 0.959991 -2.03999 re
f
n
402.377 55.699 0.960022 -2.03999 re
f
n
401.537 55.699 0.839996 -2.03999 re
f
n
405.617 55.699 0.960022 -2.03999 re
f
n
407.297 55.699 0.960022 -2.03999 re
f
n
406.577 55.699 0.720001 -2.03999 re
f
n
410.537 55.699 0.960022 -2.03999 re
f
n
412.337 55.699 0.959991 -2.03999 re
f
n
411.497 55.699 0.839996 -2.03999 re
f
n
415.457 55.699 0.959991 -2.03999 re
f
n
416.417 55.699 1.44 -2.03999 re
f
n
437.417 54.739 m
437.297 55.219 l
437.177 55.459 l
436.817 55.699 l
436.457 55.819 l
435.977 55.699 l
435.497 55.219 l
435.377 54.739 l
435.497 54.379 l
435.977 53.899 l
436.457 53.779 l
436.817 53.899 l
437.177 54.138 l
437.297 54.379 l
437.417 54.739 l
eofill
n
435.017 54.978 m
436.577 57.619 l
436.577 57.978 l
437.057 57.859 l
447.977 54.739 l
437.057 51.619 l
436.817 51.499 l
436.577 51.859 l
436.817 52.579 l
446.057 55.219 l
446.297 54.259 l
446.057 54.259 l
436.817 56.899 l
437.057 57.859 l
437.417 57.138 l
435.857 54.499 l
f
n
436.577 51.859 m
435.017 54.499 l
434.897 54.739 l
435.017 54.978 l
435.857 54.978 l
437.417 52.339 l
f
n
435.377 54.739 m
436.938 57.379 l
446.177 54.739 l
436.938 52.098 l
eofill
n
417.137 55.699 0.959991 -2.03999 re
f
n
418.097 55.699 19.32 -2.03999 re
f
n
330.617 68.299 m
327.857 68.058 l
325.337 67.219 l
323.057 66.018 l
321.017 64.339 l
319.337 62.299 l
318.137 60.018 l
317.297 57.499 l
317.057 54.739 l
317.297 52.098 l
318.137 49.579 l
319.337 47.299 l
321.017 45.259 l
323.057 43.579 l
325.337 42.379 l
327.857 41.539 l
330.617 41.299 l
348.617 41.299 l
351.377 41.539 l
353.897 42.379 l
356.177 43.579 l
358.217 45.259 l
359.777 47.299 l
361.097 49.579 l
361.817 52.098 l
362.177 54.739 l
361.817 57.499 l
361.097 60.018 l
359.777 62.299 l
358.217 64.339 l
356.177 66.018 l
353.897 67.219 l
351.377 68.058 l
348.617 68.299 l
330.617 68.299 l
1 1 1  setrgbcolor
eofill
n
330.617 68.058 m
327.857 67.819 l
327.977 67.819 l
325.457 66.978 l
323.177 65.779 l
323.297 65.779 l
321.257 64.098 l
319.577 62.058 l
319.577 62.179 l
318.377 59.899 l
317.537 57.379 l
317.537 57.499 l
317.297 54.739 l
317.537 52.098 l
318.377 49.579 l
318.377 49.699 l
319.577 47.419 l
321.257 45.379 l
323.297 43.699 l
323.177 43.819 l
325.457 42.619 l
327.977 41.779 l
327.857 41.779 l
330.617 41.539 l
348.617 41.539 l
351.377 41.779 l
353.897 42.619 l
353.777 42.619 l
356.057 43.819 l
356.057 43.699 l
358.097 45.379 l
359.657 47.419 l
360.977 49.699 l
360.857 49.579 l
361.577 52.098 l
361.937 54.739 l
361.937 54.619 l
361.577 57.379 l
360.857 59.899 l
360.977 59.899 l
359.657 62.179 l
358.097 64.219 l
358.097 64.098 l
356.057 65.779 l
353.777 66.978 l
353.897 66.978 l
351.377 67.819 l
348.617 68.058 l
330.617 68.058 l
330.617 68.539 l
348.617 68.539 l
351.377 68.299 l
351.497 68.299 l
354.017 67.459 l
356.297 66.259 l
356.417 66.138 l
358.457 64.459 l
360.017 62.419 l
361.337 60.138 l
361.337 60.018 l
362.057 57.499 l
362.417 54.739 l
362.417 54.619 l
362.057 51.978 l
361.337 49.459 l
360.017 47.179 l
358.457 45.138 l
358.457 45.018 l
356.417 43.339 l
356.297 43.339 l
354.017 42.138 l
351.497 41.299 l
351.377 41.299 l
348.617 41.058 l
330.617 41.058 l
327.857 41.299 l
325.337 42.138 l
325.217 42.138 l
322.937 43.339 l
320.897 45.018 l
319.217 47.058 l
319.097 47.179 l
317.897 49.459 l
317.057 51.978 l
317.057 52.098 l
316.817 54.739 l
317.057 57.499 l
317.897 60.018 l
317.897 60.138 l
319.097 62.419 l
319.217 62.419 l
320.897 64.459 l
322.937 66.138 l
322.937 66.259 l
325.217 67.459 l
325.337 67.459 l
327.857 68.299 l
330.617 68.539 l
0.136993 0.121994 0.125  setrgbcolor
f
n
330.617 68.058 m
330.617 68.539 l
f
332.537 48.859 m
(B1) show
n
309.017 61.579 m
309.137 61.819 l
309.257 62.299 l
309.137 62.659 l
308.897 62.899 l
308.537 63.138 l
308.057 63.138 l
307.697 63.018 l
307.457 62.779 l
307.217 62.419 l
307.217 62.058 l
307.337 61.699 l
307.577 61.339 l
307.937 61.219 l
308.657 61.219 l
309.017 61.579 l
eofill
n
307.337 63.138 m
310.217 64.219 l
310.577 64.459 l
310.697 64.098 l
316.097 56.179 l
317.177 54.739 l
315.497 55.459 l
306.617 59.299 l
306.377 59.419 l
306.377 59.779 l
307.097 60.259 l
315.977 56.419 l
315.497 55.459 l
315.377 55.699 l
309.977 63.619 l
310.697 64.098 l
310.577 63.379 l
307.697 62.299 l
f
n
306.377 59.779 m
306.977 62.779 l
307.097 63.138 l
307.337 63.138 l
307.937 62.659 l
307.337 59.659 l
f
n
307.457 62.779 m
310.337 63.859 l
315.737 55.939 l
306.857 59.779 l
eofill
n
276.617 89.779 m
275.897 90.379 l
274.577 88.819 l
275.297 88.219 l
f
n
308.897 62.899 m
309.617 62.299 l
308.297 60.739 l
307.577 61.339 l
f
n
276.617 89.779 m
275.297 88.219 l
307.577 61.339 l
308.897 62.899 l
f
290.507 78.259 m
/N16 13.5 Tf
(O) show
301.606 73.939 m
/N16 10.44 Tf
(2,S) show
334.787 78.259 m
/N16 13.5 Tf
(I) show
339.646 73.939 m
/N16 10.44 Tf
(B1)
[5.72212 5.41929 ] pdfxs
320.207 78.259 m
/N21 13.5 Tf
(=) show
n
308.417 136.819 m
308.177 137.059 l
307.817 137.179 l
307.097 136.939 l
306.857 136.579 l
306.737 136.219 l
306.737 135.859 l
306.977 135.499 l
307.217 135.259 l
307.577 135.139 l
308.297 135.379 l
308.537 135.739 l
308.657 136.099 l
308.657 136.459 l
308.417 136.819 l
eofill
n
306.497 135.499 m
305.897 138.499 l
305.777 138.859 l
306.137 138.979 l
314.897 142.819 l
316.577 143.539 l
315.497 142.099 l
310.097 134.179 l
309.977 133.939 l
309.617 134.059 l
309.377 134.659 l
314.777 142.579 l
315.497 142.099 l
315.377 141.859 l
306.617 138.019 l
306.137 138.979 l
306.857 138.619 l
307.457 135.619 l
f
n
309.617 134.059 m
306.857 135.139 l
306.617 135.139 l
306.497 135.499 l
307.217 135.979 l
309.977 134.899 l
f
n
306.977 135.499 m
306.377 138.499 l
315.137 142.339 l
309.737 134.419 l
eofill
n
274.817 110.059 m
274.097 109.459 l
275.417 107.899 l
276.137 108.499 l
f
n
307.097 136.819 m
307.817 137.419 l
309.137 135.859 l
308.417 135.259 l
f
n
274.817 110.059 m
276.137 108.499 l
308.417 135.259 l
307.097 136.819 l
f
n
461.537 158.299 m
458.897 158.059 l
456.377 157.219 l
453.977 156.019 l
452.057 154.339 l
450.377 152.299 l
449.177 150.019 l
448.337 147.499 l
448.097 144.739 l
448.337 142.099 l
449.177 139.579 l
450.377 137.299 l
452.057 135.259 l
453.977 133.579 l
456.377 132.379 l
458.897 131.539 l
461.537 131.299 l
479.657 131.299 l
482.297 131.539 l
484.938 132.379 l
487.217 133.579 l
489.137 135.259 l
490.817 137.299 l
492.017 139.579 l
492.857 142.099 l
493.097 144.739 l
492.857 147.499 l
492.017 150.019 l
490.817 152.299 l
489.137 154.339 l
487.217 156.019 l
484.938 157.219 l
482.297 158.059 l
479.657 158.299 l
461.537 158.299 l
1 1 1  setrgbcolor
eofill
n
461.537 158.059 m
458.897 157.819 l
459.017 157.819 l
456.497 156.979 l
454.097 155.779 l
454.217 155.779 l
452.297 154.099 l
450.617 152.059 l
450.617 152.179 l
449.417 149.899 l
448.577 147.379 l
448.577 147.499 l
448.337 144.739 l
448.577 142.099 l
449.417 139.579 l
449.417 139.699 l
450.617 137.419 l
452.297 135.379 l
454.217 133.699 l
454.097 133.819 l
456.497 132.619 l
459.017 131.779 l
458.897 131.779 l
461.537 131.539 l
479.657 131.539 l
482.297 131.779 l
484.938 132.619 l
484.817 132.619 l
487.097 133.819 l
487.097 133.699 l
489.017 135.379 l
490.697 137.419 l
490.577 137.419 l
491.777 139.699 l
491.777 139.579 l
492.617 142.099 l
492.857 144.739 l
492.617 147.499 l
492.617 147.379 l
491.777 149.899 l
490.577 152.179 l
490.697 152.059 l
489.017 154.099 l
487.097 155.779 l
484.817 156.979 l
484.938 156.979 l
482.297 157.819 l
479.657 158.059 l
461.537 158.059 l
461.537 158.539 l
479.657 158.539 l
482.297 158.299 l
482.417 158.299 l
485.057 157.459 l
487.337 156.259 l
487.457 156.139 l
489.377 154.459 l
491.057 152.419 l
492.257 150.139 l
492.257 150.019 l
493.097 147.499 l
493.337 144.739 l
493.097 142.099 l
493.097 141.979 l
492.257 139.459 l
491.057 137.179 l
491.057 137.059 l
489.377 135.019 l
487.457 133.339 l
487.337 133.339 l
485.057 132.139 l
482.417 131.299 l
482.297 131.299 l
479.657 131.059 l
461.537 131.059 l
458.897 131.299 l
456.377 132.139 l
456.257 132.139 l
453.857 133.339 l
451.938 135.019 l
450.257 137.059 l
450.137 137.179 l
448.938 139.459 l
448.097 141.979 l
448.097 142.099 l
447.857 144.739 l
448.097 147.499 l
448.938 150.019 l
448.938 150.139 l
450.137 152.419 l
450.257 152.419 l
451.938 154.459 l
453.857 156.139 l
453.857 156.259 l
456.257 157.459 l
456.377 157.459 l
458.897 158.299 l
461.537 158.539 l
0.136993 0.121994 0.125  setrgbcolor
f
n
461.537 158.059 m
461.537 158.539 l
f
463.457 138.859 m
/N21 14.3999 Tf
(An) show
n
361.217 145.699 0.960022 -2.03999 re
f
n
362.177 145.699 30.72 -2.03999 re
f
n
390.977 145.699 0.960022 -2.03999 re
f
n
391.937 145.699 1.44 -2.03999 re
f
n
395.657 145.699 0.960022 -2.03999 re
f
n
397.457 145.699 0.959991 -2.03999 re
f
n
396.617 145.699 0.839996 -2.03999 re
f
n
400.577 145.699 0.959991 -2.03999 re
f
n
402.377 145.699 0.960022 -2.03999 re
f
n
401.537 145.699 0.839996 -2.03999 re
f
n
405.617 145.699 0.960022 -2.03999 re
f
n
407.297 145.699 0.960022 -2.03999 re
f
n
406.577 145.699 0.720001 -2.03999 re
f
n
410.537 145.699 0.960022 -2.03999 re
f
n
412.337 145.699 0.959991 -2.03999 re
f
n
411.497 145.699 0.839996 -2.03999 re
f
n
415.457 145.699 0.959991 -2.03999 re
f
n
416.417 145.699 1.44 -2.03999 re
f
n
437.417 144.739 m
437.297 145.219 l
437.177 145.459 l
436.817 145.699 l
436.457 145.819 l
435.977 145.699 l
435.497 145.219 l
435.377 144.739 l
435.497 144.379 l
435.977 143.899 l
436.457 143.779 l
436.817 143.899 l
437.177 144.139 l
437.297 144.379 l
437.417 144.739 l
eofill
n
435.017 144.979 m
436.577 147.739 l
436.697 148.099 l
437.057 147.979 l
446.297 145.219 l
447.977 144.739 l
437.057 141.619 l
436.817 141.499 l
436.577 141.859 l
436.817 142.579 l
446.057 145.219 l
446.297 144.259 l
446.057 144.259 l
436.817 147.019 l
437.057 147.979 l
437.417 147.259 l
435.857 144.499 l
f
n
436.577 141.859 m
435.017 144.499 l
434.897 144.739 l
435.017 144.979 l
435.857 144.979 l
437.417 142.339 l
f
n
435.377 144.739 m
436.938 147.499 l
446.177 144.739 l
436.938 142.099 l
eofill
n
417.137 145.699 0.959991 -2.03999 re
f
n
418.097 145.699 19.32 -2.03999 re
f
n
330.617 158.299 m
327.857 158.059 l
325.337 157.219 l
323.057 156.019 l
321.017 154.339 l
319.337 152.299 l
318.137 150.019 l
317.297 147.499 l
317.057 144.739 l
317.297 142.099 l
318.137 139.579 l
319.337 137.299 l
321.017 135.259 l
323.057 133.579 l
325.337 132.379 l
327.857 131.539 l
330.617 131.299 l
348.617 131.299 l
351.377 131.539 l
353.897 132.379 l
356.177 133.579 l
358.217 135.259 l
359.777 137.299 l
361.097 139.579 l
361.817 142.099 l
362.177 144.739 l
361.817 147.499 l
361.097 150.019 l
359.777 152.299 l
358.217 154.339 l
356.177 156.019 l
353.897 157.219 l
351.377 158.059 l
348.617 158.299 l
330.617 158.299 l
1 1 1  setrgbcolor
eofill
n
330.617 158.059 m
327.857 157.819 l
327.977 157.819 l
325.457 156.979 l
323.177 155.779 l
323.297 155.779 l
321.257 154.099 l
319.577 152.059 l
319.577 152.179 l
318.377 149.899 l
317.537 147.379 l
317.537 147.499 l
317.297 144.739 l
317.537 142.099 l
318.377 139.579 l
318.377 139.699 l
319.577 137.419 l
321.257 135.379 l
323.297 133.699 l
323.177 133.819 l
325.457 132.619 l
327.977 131.779 l
327.857 131.779 l
330.617 131.539 l
348.617 131.539 l
351.377 131.779 l
353.897 132.619 l
353.777 132.619 l
356.057 133.819 l
356.057 133.699 l
358.097 135.379 l
359.657 137.419 l
360.977 139.699 l
360.857 139.579 l
361.577 142.099 l
361.937 144.739 l
361.937 144.619 l
361.577 147.379 l
360.857 149.899 l
360.977 149.899 l
359.657 152.179 l
358.097 154.219 l
358.097 154.099 l
356.057 155.779 l
353.777 156.979 l
353.897 156.979 l
351.377 157.819 l
348.617 158.059 l
330.617 158.059 l
330.617 158.539 l
348.617 158.539 l
351.377 158.299 l
351.497 158.299 l
354.017 157.459 l
356.297 156.259 l
356.417 156.139 l
358.457 154.459 l
360.017 152.419 l
361.337 150.139 l
361.337 150.019 l
362.057 147.499 l
362.417 144.739 l
362.417 144.619 l
362.057 141.979 l
361.337 139.459 l
360.017 137.179 l
358.457 135.139 l
358.457 135.019 l
356.417 133.339 l
356.297 133.339 l
354.017 132.139 l
351.497 131.299 l
351.377 131.299 l
348.617 131.059 l
330.617 131.059 l
327.857 131.299 l
325.337 132.139 l
325.217 132.139 l
322.937 133.339 l
320.897 135.019 l
319.217 137.059 l
319.097 137.179 l
317.897 139.459 l
317.057 141.979 l
317.057 142.099 l
316.817 144.739 l
317.057 147.499 l
317.897 150.019 l
317.897 150.139 l
319.097 152.419 l
319.217 152.419 l
320.897 154.459 l
322.937 156.139 l
322.937 156.259 l
325.217 157.459 l
325.337 157.459 l
327.857 158.299 l
330.617 158.539 l
0.136993 0.121994 0.125  setrgbcolor
f
n
330.617 158.059 m
330.617 158.539 l
f
n
571.938 101.779 0.958984 -2.03999 re
f
n
572.897 101.779 36.48 -2.03999 re
f
n
225.857 99.739 m
225.857 100.219 l
225.617 100.459 l
225.257 100.699 l
224.897 100.819 l
224.537 100.699 l
224.177 100.459 l
223.937 100.219 l
223.937 99.379 l
224.177 99.139 l
224.537 98.899 l
224.897 98.779 l
225.257 98.899 l
225.617 99.139 l
225.857 99.379 l
225.857 99.739 l
eofill
n
223.577 99.979 m
225.017 102.619 l
225.017 102.979 l
225.497 102.859 l
236.417 99.739 l
225.497 96.619 l
225.257 96.499 l
225.017 96.859 l
225.257 97.579 l
234.497 100.219 l
234.737 99.259 l
234.497 99.259 l
225.257 101.899 l
225.497 102.859 l
225.857 102.139 l
224.417 99.499 l
f
n
225.017 96.859 m
223.577 99.499 l
223.457 99.739 l
223.577 99.979 l
224.417 99.979 l
225.857 97.339 l
f
n
223.937 99.739 m
225.377 102.379 l
234.617 99.739 l
225.377 97.098 l
eofill
n
199.937 100.699 0.960007 -2.03999 re
f
n
200.897 100.699 24.96 -2.03999 re
f
n
541.337 114.259 m
538.577 114.019 l
536.057 113.179 l
533.777 111.979 l
531.737 110.299 l
530.177 108.379 l
528.857 106.099 l
528.137 103.459 l
527.777 100.819 l
528.137 98.058 l
528.857 95.539 l
530.177 93.259 l
531.737 91.219 l
533.777 89.659 l
536.057 88.339 l
538.577 87.619 l
541.337 87.259 l
559.337 87.259 l
562.097 87.619 l
564.617 88.339 l
566.897 89.659 l
568.938 91.219 l
570.617 93.259 l
571.817 95.539 l
572.657 98.058 l
572.897 100.819 l
572.657 103.459 l
571.817 106.099 l
570.617 108.379 l
568.938 110.299 l
566.897 111.979 l
564.617 113.179 l
562.097 114.019 l
559.337 114.259 l
541.337 114.259 l
1 1 1  setrgbcolor
eofill
n
541.337 114.019 m
538.577 113.779 l
538.697 113.779 l
536.177 112.939 l
533.897 111.739 l
534.017 111.739 l
531.977 110.059 l
530.417 108.139 l
530.417 108.259 l
529.097 105.979 l
528.377 103.339 l
528.017 100.699 l
528.017 100.819 l
528.377 98.058 l
529.097 95.539 l
529.097 95.659 l
530.417 93.379 l
531.977 91.339 l
531.857 91.339 l
533.897 89.779 l
536.177 88.459 l
536.177 88.579 l
538.697 87.859 l
541.457 87.499 l
541.337 87.499 l
559.337 87.499 l
562.097 87.859 l
564.617 88.579 l
564.497 88.459 l
566.777 89.779 l
568.817 91.339 l
570.497 93.379 l
570.377 93.379 l
571.577 95.659 l
571.577 95.539 l
572.417 98.058 l
572.657 100.819 l
572.417 103.459 l
572.417 103.339 l
571.577 105.979 l
570.377 108.259 l
570.497 108.139 l
568.817 110.059 l
566.777 111.739 l
564.497 112.939 l
564.617 112.939 l
562.097 113.779 l
559.337 114.019 l
541.337 114.019 l
541.337 114.499 l
559.337 114.499 l
562.097 114.259 l
562.217 114.259 l
564.737 113.419 l
567.017 112.219 l
567.137 112.099 l
569.177 110.419 l
570.857 108.499 l
572.057 106.219 l
572.057 106.099 l
572.897 103.459 l
573.137 100.819 l
572.897 98.058 l
572.897 97.939 l
572.057 95.419 l
570.857 93.138 l
570.857 93.018 l
569.177 90.978 l
569.057 90.978 l
567.017 89.419 l
564.737 88.098 l
562.217 87.379 l
559.457 87.018 l
541.337 87.018 l
538.577 87.379 l
536.057 88.098 l
535.938 88.098 l
533.657 89.419 l
531.617 90.978 l
531.617 91.098 l
530.057 93.138 l
528.737 95.419 l
528.617 95.419 l
527.897 97.939 l
527.537 100.699 l
527.537 100.819 l
527.897 103.459 l
528.617 106.099 l
528.737 106.219 l
530.057 108.499 l
531.617 110.419 l
533.657 112.099 l
533.657 112.219 l
535.938 113.419 l
536.057 113.419 l
538.577 114.259 l
541.337 114.499 l
0.136993 0.121994 0.125  setrgbcolor
f
n
541.337 114.019 m
541.337 114.499 l
f
545.057 94.819 m
(J) show
n
249.017 112.819 m
246.377 112.579 l
243.857 111.739 l
241.577 110.539 l
239.537 108.859 l
237.857 106.819 l
236.657 104.539 l
235.817 102.019 l
235.577 99.259 l
235.817 96.619 l
236.657 93.978 l
237.857 91.699 l
239.537 89.779 l
241.577 88.098 l
243.857 86.899 l
246.377 86.058 l
249.017 85.819 l
267.137 85.819 l
269.897 86.058 l
272.417 86.899 l
274.697 88.098 l
276.617 89.779 l
278.297 91.699 l
279.617 93.978 l
280.337 96.619 l
280.577 99.259 l
280.337 102.019 l
279.617 104.539 l
278.297 106.819 l
276.617 108.859 l
274.697 110.539 l
272.417 111.739 l
269.897 112.579 l
267.137 112.819 l
249.017 112.819 l
1 1 1  setrgbcolor
eofill
n
249.017 112.579 m
246.377 112.339 l
246.497 112.339 l
243.977 111.499 l
241.697 110.299 l
241.817 110.299 l
239.777 108.619 l
238.097 106.579 l
238.097 106.699 l
236.897 104.419 l
236.057 101.899 l
236.057 102.019 l
235.817 99.259 l
236.057 96.619 l
236.897 93.978 l
236.897 94.098 l
238.097 91.819 l
239.777 89.899 l
241.817 88.219 l
241.697 88.339 l
243.977 87.138 l
246.497 86.299 l
246.377 86.299 l
249.017 86.058 l
267.137 86.058 l
269.897 86.299 l
272.417 87.138 l
272.297 87.138 l
274.577 88.339 l
274.577 88.219 l
276.497 89.899 l
278.177 91.819 l
279.497 94.098 l
279.377 93.978 l
280.097 96.619 l
280.337 99.259 l
280.097 102.019 l
280.097 101.899 l
279.377 104.419 l
279.497 104.419 l
278.177 106.699 l
278.177 106.579 l
276.497 108.619 l
274.577 110.299 l
272.297 111.499 l
272.417 111.499 l
269.897 112.339 l
267.137 112.579 l
249.017 112.579 l
249.017 113.059 l
267.137 113.059 l
269.897 112.819 l
270.017 112.819 l
272.537 111.979 l
274.817 110.779 l
274.937 110.659 l
276.857 108.979 l
278.537 106.939 l
279.857 104.659 l
279.857 104.539 l
280.577 102.019 l
280.817 99.259 l
280.577 96.619 l
280.577 96.499 l
279.857 93.859 l
278.537 91.579 l
278.537 91.459 l
276.857 89.539 l
274.937 87.859 l
274.817 87.859 l
272.537 86.659 l
270.017 85.819 l
269.897 85.819 l
267.137 85.579 l
249.017 85.579 l
246.377 85.819 l
243.857 86.659 l
243.737 86.659 l
241.457 87.859 l
239.417 89.539 l
237.737 91.459 l
237.617 91.579 l
236.417 93.859 l
235.577 96.499 l
235.577 96.619 l
235.337 99.259 l
235.577 102.019 l
236.417 104.539 l
236.417 104.659 l
237.617 106.939 l
237.737 106.939 l
239.417 108.979 l
241.457 110.659 l
241.457 110.779 l
243.737 111.979 l
243.857 111.979 l
246.377 112.819 l
249.017 113.059 l
0.136993 0.121994 0.125  setrgbcolor
f
n
249.017 112.579 m
249.017 113.059 l
f
209.574 88.081 m
/N16 13.5 Tf
(I) show
214.614 83.762 m
/N16 10.44 Tf
(S) show
332.32 139.983 m
/N21 14.4 Tf
(A1) show
252.319 95.3154 m
(S) show
585.062 88.635 m
/N16 13.5 Tf
(O) show
595.321 84.316 m
/N16 10.44 Tf
(J) show
451.537 79.841 m
/N16 13.5 Tf
(O) show
461.797 75.341 m
/N16 10.44 Tf
(Bm)
[5.67927 8.72783 ] pdfxs
495.816 79.841 m
/N16 13.5 Tf
(I) show
499.695 75.341 m
/N16 10.44 Tf
(2,J) show
481.236 79.841 m
/N21 13.5 Tf
(=) show
367.639 132.507 m
/N16 13.5 Tf
(O) show
377.898 128.007 m
/N16 10.44 Tf
(A1)
[6.41126 5.37755 ] pdfxs
420.973 132.84 m
/N16 13.5 Tf
(I) show
425.232 128.34 m
/N16 10.44 Tf
(An)
[6.41014 5.81499 ] pdfxs
369.972 62.507 m
/N16 13.5 Tf
(O) show
380.232 58.007 m
/N16 10.44 Tf
(B1)
[5.67927 5.37644 ] pdfxs
414.64 62.174 m
/N16 13.5 Tf
(I) show
419.899 57.674 m
/N16 10.44 Tf
(Bm)
[5.68038 8.72894 ] pdfxs
289.833 112.083 m
/N16 13.5 Tf
(O) show
300.932 107.764 m
/N16 10.44 Tf
(1,S) show
334.113 112.083 m
/N16 13.5 Tf
(I) show
338.972 107.764 m
/N16 10.44 Tf
(A1)
[6.45188 5.41817 ] pdfxs
319.533 112.083 m
/N21 13.5 Tf
(=) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF
