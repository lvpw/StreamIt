%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Acr6AC5.tmp)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 17:20:39 04/23/09
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 320 522 554 624
%%HiResBoundingBox: 320.249 521.625 553.874 624.0
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Times-Bold
[ 0 /space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quoteright/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/quoteleft/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/exclamdown
/cent/sterling/fraction/yen/florin/section
/currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright
/fi/fl/space/endash/dagger/daggerdbl
/periodcentered/space/paragraph/bullet/quotesinglbase/quotedblbase
/quotedblright/guillemotright/ellipsis/perthousand/space/questiondown
/space/grave/acute/circumflex/tilde/macron
/breve/dotaccent/dieresis/space/ring/cedilla
/space/hungarumlaut/ogonek/caron/emdash/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/AE/space/ordfeminine
/space/space/space/space/Lslash/Oslash
/OE/ordmasculine/space/space/space/space
/space/ae/space/space/space/dotlessi
/space/space/lslash/oslash/oe/germandbls
/space/space/space/space
/N33 (Times-Bold) -1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2009-04-23T17:20:39+05:30</xap:CreateDate>
         <xap:ModifyDate>2009-04-23T17:20:39+05:30</xap:ModifyDate>
         <xap:MetadataDate>2009-04-23T17:20:39+05:30</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:6655C4E4FB2FDE118807B38CD8D197B9</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:6655C4E4FB2FDE118807B38CD8D197B9</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:4a2324d8-e5f5-4988-bbd7-ee35330fe7b4</stRef:instanceID>
            <stRef:documentID>uuid:6ec1b48b-680f-406d-be50-0efe28e153a1</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
320.249 521.625 233.625 102.375 rectclip
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N106 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
0 
40 
53 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 
249 nND] def
/GlyphProcs 8 dict begin
/.notdef {250 0 d0} bind def
/a0 {
0 0 setcharwidth
31.0 0.0 0.0 39.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 31
/Height 39
/ImageMatrix [31.0 0.0 0.0 -39.0 0.0 39.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<~s7c]qs1eV`rVup>rVup.rr<$'rr`$#ru_.?s8W'"s8W*!s8W*!s8W*!s8W*!s8W*!
s8W&us8W&us8Vuus8VQis8Tk=s8E!.s7cR8s6p#;s53nVs1em=s*u3js+#UurrE)u
rrN0!rrN0!rrN0!rrN0!rrN0!s+(.Ks+#Ues1gi's1eU=s53k]s6p!is82j,s8RUu~>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 >>
imagemask
Q
} bind def
/a1 {
0 0 setcharwidth
27.0 0.0 0.0 46.0 0.0 -7.0 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 27
/Height 46
/ImageMatrix [27.0 0.0 0.0 -46.0 0.0 46.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<~s8TlBs8Duus82iss7cQos7cQos6p!gs6pQWs55!Ws55!Ws56-"s56-"s56-"s56-"
s56-"s56-"s56-"s56-"s56-"s56-"s56-"s56-"s56-"s56-"s56-"s56-"s56-"
s56-"s56-"s56-"s56-"s56-"s56-"s56-"p](9op](9op](9op](9op](9os56-"
s56-"s56-"s56-"s56-"s56-"s56-"s85+>~>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 >>
imagemask
Q
} bind def
/a2 {
30 0 setcharwidth
} bind def
/a3 {
0 0 setcharwidth
20.0 0.0 0.0 38.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 20
/Height 38
/ImageMatrix [20.0 0.0 0.0 -38.0 0.0 38.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<~_#No>s6tR=n::Q.JH,+hs6tR=n::Q.JH,+hs6tR=n::Q.JH,+hs6tR=n::Q.JH,+h
s6tR=n::Q.JH,+hs6tR=n:6#XJ:I'=J+.tQn:3amJ0492&+G,Tn::VuJUd`O^]8rD
!.jV>JbT6FrVu~>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 >>
imagemask
Q
} bind def
/a4 {
34 0 setcharwidth
} bind def
/a5 {
0 0 setcharwidth
40.0 0.0 0.0 39.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 40
/Height 39
/ImageMatrix [40.0 0.0 0.0 -39.0 0.0 39.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<~s8VQhs8W+L!$D7?!!!9(qu?^%s7cQo#QO8qrWiJ]+90[e^d%l!s+#V!s8RWLs8W+M
s8W-!!WW3"rr`<$s8N3$s8W'#s8W,u"98E$rWiK's8E9's8W&u!!!'!zrVuou!<)ru
!!)uu!!!#u#QOgSrr`<$JH#`Os+(+Os8RZM!WW0#s+14M!WR]Mrr`;:s8E-#^jl7a
s55!o#QO8ui",k_!!",@qu?^]s8DuuJ,fP!!WW3"n-As~>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 >>
imagemask
Q
} bind def
/a6 {
33 0 setcharwidth
} bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N106 -1 TZ
q
320.249 521.625 m
553.874 521.625 l
553.874 624.0 l
320.249 624.0 l
h
W
n
0.1 0.0 0.0 0.1 0.0 0.0 cm
q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
Q
q
n
3391.65 7381.09 m
3391.65 6200.73 l
5407.47 6200.73 l
5407.47 7381.09 l
W
n
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
true setSA
2.11321 w
4.0 M
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
6.33962 w
2.11321 w
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
6.33962 w
4.22642 w
Q
q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
Q
q
n
3316.77 6203.86 m
3316.77 5380.47 l
3647.77 5380.47 l
3647.77 6203.86 l
W
n
2.10828 w
4.0 M
n
3646.72 6040.12 m
3646.72 6026.14 3640.45 6014.82 3632.72 6014.82 c
3331.82 6014.82 l
3324.09 6014.82 3317.82 6026.14 3317.82 6040.12 c
3317.82 6113.91 l
3317.82 6127.88 3324.09 6139.21 3331.82 6139.21 c
3632.72 6139.21 l
3640.45 6139.21 3646.72 6127.88 3646.72 6113.91 c
3646.72 6040.12 l
h
[/DeviceGray] cs 0.0 sc
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
%ADOBeginSubsetFont: EQHBAA+Myriad-Roman~60 Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /EQHBAA+Myriad-Roman~60 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {0 0 0 0} def
end
systemdict begin
dup /Private
8 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 0 600 650] def
/BlueScale 0.02 def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1EDB5064B948993D
43DEBBDF0C8F90FC2F2EEEC226B04210> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 97 /a 101 /e 109 /m 114 /r/s/t
/N119 (EQHBAA+Myriad-Roman~60) -1 TZ
336.629 605.496 m
%ADOBeginSubsetFont: EQHBAA+Myriad-Roman~60 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
/EQHBAA+Myriad-Roman~60 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B7A73DA057E90C9BFBE0FF0291D372E7F39B44EAB84E731F14
3D56B700D2E334832DF55EE5823BE6CA691B5963612FFECFE558A890B59C65F0
5B464EF90A6B6810EE9FD12C9900ADC18D43A550803499F9876CBAA62CC2FAFF
C48074E6F1A7497FEC8F7A1A738A66DAD7E7F97630122A2D0578E3180921FD49
61202F6C5FF7BA4B62494C2DFCE686575F7769FCF90F146C55896AFD42E3F21F
DD84176CC52894B8290BB333544803EF905CCEEDB2ECD2603B36CDF0442C3A3A
34F056DA8F5BE25D3D09FD1896A1A72D2A9A7F7CD1C41A2FC43C98B6630C8E83
BB996D452D85CAA210CE1FBCF763> |-
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A49C5EC17D6C6150A0B8670
9F0C6EC617FD9BE5F732D8509512673F3C30A49DAF4EE34FA33006E1B788D4E7
E8E201A65F8CB91E06DF2AD7E659BC073F41A0C632DC3E28DC3F25DA6303A626
6B6F97E29DD1C913> |-
/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C4985423E917555FA87F2CE9D
A0648741755D6E14CB6D9125F9031111ED67FDE41FA2B8FDE74B9F5A56811B2E
43A1103A3CB8167896DC073168763442> |-
/e <1C60D8A8C9B7EF322472FA01213F055066788642016A5D8BFE47582B28A8
D2BE2F85431C7EE1AE0F2D60E863B3C2C92F9249357CCB3A0A0606FF6D456A41
804750A2F30F961FFC88124E7F5E534DEE63B0D6D7A66C45CE6AEE28557F02CB
002E7C1DADC8566373C7B2CD0333BA1CB32ADFDAB723970828337936B61AEC06
FE73C1FABCE3C13EB3FFCEFC5F5A097A67DCD440EA21> |-
/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7D
C8D9A28C62ADE3B609CF5E2EE23C64D0B6613BA3186759CF186A579FD028324F
ED568C0B0A37C3694A3B38ED5056E768192D4DA82A31CBFD0393A5740AE983BC
603AD898484C212C529AE8104602F06E02DDFDA7D766F7B230D38B75921C05F7
A9BA533767FE531C2938074AFDA8A38A035EF57E83DBAF64A8391697DEF95F5C
7F6B5FE55F5EFF9CB067D105A16AEDC33C6CB6A79E2BDA1BF6F35C5191C97CA5
07E5340C10F814A806F5DFA423119EA3DC48818E842527D33EC20A4AF93F4E0D
F2505B4AD66C6BF67DBA2F61C24A66174011C7CAB87373F40FA3304455005D2D
6C7ABF57A302A9AE> |-
/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB3654240A2C33EABBC1041
DC9084AED0E7185E3FCCC5963A79F095BD85C28D457CB4D23420DA86ADAD18C2
6C1B41612CE1420E5F3740E37B5DA6AA2437FABDABAD08C42630DF1D3303F085
DE0EEF174B16642F70BA03827CB4EAC19AB38C8F07EAC8B0A77E3D9E0CD64175
D19267F7FFD083D266C5B6E230F4B948683204BAC267B6DB41A7ECEDAD51AE13
9D806FF3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/EQHBAA+Myriad-Roman~60 findfont /Encoding get
dup 115 /s put
dup 116 /t put
dup 114 /r put
dup 101 /e put
dup 97 /a put
dup 109 /m put
pop
end
%ADOEndSubsetFont
/N119 7.58981 Tf
(stream)
[3.7949 2.10997 2.52735 4.21993 4.21993 6.32226 ] pdfxs
Q
n
3482.27 6016.22 m
3482.27 5969.84 l
f
n
3482.27 5963.48 m
3481.16 5966.47 3479.26 5970.19 3477.26 5972.49 c
3482.27 5970.67 l
3487.28 5972.49 l
3485.28 5970.19 3483.38 5966.47 3482.27 5963.48 c
f
6.32484 w
n
3482.27 6016.22 m
3482.27 5969.84 l
S
n
3482.27 5950.75 m
3478.94 5959.73 3473.25 5970.88 3467.23 5977.78 c
3482.27 5972.34 l
3497.31 5977.78 l
3491.29 5970.88 3485.6 5959.73 3482.27 5950.75 c
f
n
3482.27 5824.37 m
3482.27 5777.99 l
f
n
3482.27 5771.62 m
3481.16 5774.62 3479.26 5778.33 3477.26 5780.63 c
3482.27 5778.82 l
3487.28 5780.63 l
3485.28 5778.33 3483.38 5774.62 3482.27 5771.62 c
f
n
3482.27 5824.37 m
3482.27 5777.99 l
S
n
3482.27 5758.9 m
3478.94 5767.88 3473.25 5779.02 3467.23 5785.93 c
3482.27 5780.49 l
3497.31 5785.93 l
3491.29 5779.02 3485.6 5767.88 3482.27 5758.9 c
f
n
3482.27 5636.73 m
3482.27 5590.35 l
f
n
3482.27 5583.99 m
3481.16 5586.98 3479.26 5590.7 3477.26 5593.0 c
3482.27 5591.18 l
3487.28 5593.0 l
3485.28 5590.7 3483.38 5586.98 3482.27 5583.99 c
f
n
3482.27 5636.73 m
3482.27 5590.35 l
S
n
3482.27 5571.26 m
3478.94 5580.24 3473.25 5591.39 3467.23 5598.29 c
3482.27 5592.85 l
3497.31 5598.29 l
3491.29 5591.39 3485.6 5580.24 3482.27 5571.26 c
f
n
3482.27 6203.86 m
3482.27 6157.48 l
f
n
3482.27 6151.11 m
3481.16 6154.11 3479.26 6157.82 3477.26 6160.12 c
3482.27 6158.31 l
3487.28 6160.12 l
3485.28 6157.82 3483.38 6154.11 3482.27 6151.11 c
f
n
3482.27 6203.86 m
3482.27 6157.48 l
S
n
3482.27 6138.39 m
3478.94 6147.37 3473.25 6158.51 3467.23 6165.42 c
3482.27 6159.98 l
3497.31 6165.42 l
3491.29 6158.51 3485.6 6147.37 3482.27 6138.39 c
f
2.10828 w
n
3646.72 5849.56 m
3646.72 5835.59 3640.45 5824.26 3632.72 5824.26 c
3331.82 5824.26 l
3324.09 5824.26 3317.82 5835.59 3317.82 5849.56 c
3317.82 5923.35 l
3317.82 5937.32 3324.09 5948.65 3331.82 5948.65 c
3632.72 5948.65 l
3640.45 5948.65 3646.72 5937.32 3646.72 5923.35 c
3646.72 5849.56 l
h
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
337.05 586.441 m
/N119 7.58981 Tf
(stream)
[3.7949 2.10997 2.52735 4.21993 4.21993 6.32226 ] pdfxs
Q
n
3646.72 5663.67 m
3646.72 5649.69 3640.45 5638.37 3632.72 5638.37 c
3331.82 5638.37 l
3324.09 5638.37 3317.82 5649.69 3317.82 5663.67 c
3317.82 5737.46 l
3317.82 5751.43 3324.09 5762.76 3331.82 5762.76 c
3632.72 5762.76 l
3640.45 5762.76 3646.72 5751.43 3646.72 5737.46 c
3646.72 5663.67 l
h
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
337.05 567.851 m
/N119 7.58981 Tf
(stream)
[3.7949 2.10997 2.52735 4.21993 4.21993 6.32226 ] pdfxs
Q
n
3482.27 5445.94 m
3482.27 5399.55 l
f
n
3482.27 5393.19 m
3481.16 5396.19 3479.26 5399.9 3477.26 5402.2 c
3482.27 5400.39 l
3487.28 5402.2 l
3485.28 5399.9 3483.38 5396.19 3482.27 5393.19 c
f
6.32484 w
n
3482.27 5445.94 m
3482.27 5399.55 l
S
n
3482.27 5380.47 m
3478.94 5389.45 3473.25 5400.59 3467.23 5407.5 c
3482.27 5402.06 l
3497.31 5407.5 l
3491.29 5400.59 3485.6 5389.45 3482.27 5380.47 c
f
2.10828 w
n
3646.72 5471.13 m
3646.72 5457.16 3640.45 5445.84 3632.72 5445.84 c
3331.82 5445.84 l
3324.09 5445.84 3317.82 5457.16 3317.82 5471.13 c
3317.82 5544.92 l
3317.82 5558.9 3324.09 5570.22 3331.82 5570.22 c
3632.72 5570.22 l
3640.45 5570.22 3646.72 5558.9 3646.72 5544.92 c
3646.72 5471.13 l
h
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
337.05 548.598 m
/N119 7.58981 Tf
(stream)
[3.7949 2.10997 2.52735 4.21993 4.21993 6.32226 ] pdfxs
Q
Q
q
n
3740.13 6226.78 m
3740.13 5357.61 l
4675.6 5357.61 l
4675.6 6226.78 l
W
n
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
%ADOBeginSubsetFont: RCLAAA+Myriad-Roman~64 Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /RCLAAA+Myriad-Roman~64 def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-46 -250 1126 831} def
/XUID [6 41987] def
systemdict /languagelevel known {mark {systemdict
/version get exec cvi 3011 le {currentdict /XUID
undef } if} stopped cleartomark} if
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def
/FamilyOtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.10001 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B896187A> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 101 /e 105 /i 108 /l 112 /p 114 /r/s
/t
/N98 (RCLAAA+Myriad-Roman~64) -1 TZ
409.6 608.132 m
%ADOBeginSubsetFont: RCLAAA+Myriad-Roman~64 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/RCLAAA+Myriad-Roman~64 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B70FAD6F31E6985044CC86CE58E7103CFADE13C7DC457B6B61
B27C387A81A626F4966C688D0C50600476E9AB18467FFAC6ED3909C5C2017A12
2463840FBE6795A1A2CAC9FEB45127B788B0426CC0AA67A9509F68032EDFEB1A
EA4184EB9837640B2C28468625> |-
/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FC9D79EBC0747E8537AA64BFDE9D
EE82BB7646F7CEC27EF91C06D4678185F05CE12ADDAD16B81BA95B5DFD51FB92
0FE64B3BF8B211A23E486437984337D80F8A92C1A4FEF7A73E7D72D61B19CABF
B469A3C452694B121B79570B42AFC2C91D3BE4E44C8314CD4F5854A5F1DDFE4F
4053B1138E72DDA0105AAD7207B1A0DCBB21F351A8E5ECCCDE451D167E681188
C2514F73DC89> |-
/l <1C60D8A8C9B88055FF27B3923C5344CB60EC167D30E66A163A5CE58557> |-
/i <1C60D8A8C9B88055FF27B3934D040E8DBE022633F95365A77FF409BAAFF1
E1652439417FB10FB1C8BD44F4FF37E45388A4291AA4DFED968F1E2FD890896D
6F4E848D055FBE735701C484F07858CCD9> |-
/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA029E018F1B853B19499
2023A1A2094A61AA6AC40B7390D1BCF785D2429D0AF32EA1E2BF602E38DE50F9
0EE120A01A6478CC20B62FEDE17CBADD3C1BB7C9E4FE75CF0D3DFB8214AF8D64
2DB00A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/RCLAAA+Myriad-Roman~64 findfont /Encoding get
dup 115 /s put
dup 112 /p put
dup 108 /l put
dup 105 /i put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/N98 7.60632 Tf
(splitt)
[3.01207 4.328 1.77983 1.77983 2.51764 2.51764 ] pdfxs
425.489 608.132 m
%ADOBeginSubsetFont: RCLAAA+Myriad-Roman~64 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/RCLAAA+Myriad-Roman~64 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A66F84858C3680112C82D73E1C597325682C9ED530BCC0B6
51B28ABA219143BA4989A6F804DAAF308E4096EA3C5EE4CE5A25A89A84AEDFB4
7D9498707E4187C5FE017863CAF507AFEA82E084A8EFA129F39779B15FDFF321
33732565D375FCDD8EE0A32F5A98049423277E1BD8> |-
/r <1C60D8A8C9B825FA276057E42F8B6B57C9D83BDDD098E1F2815023B08CE6
DB69AE017A2B457327A0071129EDB590BE7AA3607E0922708891597C3D8F669F
3ED32EED759BFAF13F7F4F0E8EBB695840553EB7F2B5DF808E6281337961393B
D02988D264043D0826E651AB7250C84536DC39AF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/RCLAAA+Myriad-Roman~64 findfont /Encoding get
dup 101 /e put
dup 114 /r put
pop
end
%ADOEndSubsetFont
(er)
[3.81082 2.48724 ] pdfxs
Q
2.11287 w
4.0 M
n
4340.05 6063.89 m
4340.05 6049.89 4334.98 6038.53 4328.72 6038.53 c
4085.16 6038.53 l
4078.9 6038.53 4073.83 6049.89 4073.83 6063.89 c
4073.83 6137.84 l
4073.83 6151.84 4078.9 6163.19 4085.16 6163.19 c
4328.72 6163.19 l
4334.98 6163.19 4340.05 6151.84 4340.05 6137.84 c
4340.05 6063.89 l
h
[/DeviceGray] cs 0.0 sc
S
n
4207.04 6037.39 m
3889.49 5854.03 l
f
n
3883.97 5850.84 m
3886.01 5853.3 3888.29 5856.81 3889.28 5859.7 c
3890.22 5854.44 l
3894.3 5851.0 l
3891.3 5851.59 3887.13 5851.37 3883.97 5850.84 c
f
6.3386 w
n
4207.04 6037.39 m
3889.49 5854.03 l
S
n
3872.93 5844.46 m
3879.05 5851.85 3885.87 5862.37 3888.85 5871.06 c
3891.67 5855.28 l
3903.92 5844.96 l
3894.91 5846.72 3882.39 5846.07 3872.93 5844.46 c
f
n
4204.7 6034.07 m
4100.84 5852.02 l
f
n
4097.69 5846.48 m
4098.2 5849.64 4098.4 5853.82 4097.8 5856.82 c
4101.26 5852.75 l
4106.52 5851.84 l
4103.63 5850.83 4100.14 5848.54 4097.69 5846.48 c
f
n
4204.7 6034.07 m
4100.84 5852.02 l
S
n
4091.37 5835.41 m
4092.93 5844.88 4093.51 5857.4 4091.7 5866.4 c
4102.09 5854.2 l
4117.88 5851.47 l
4109.21 5848.45 4098.73 5841.57 4091.37 5835.41 c
f
n
4201.26 5423.22 m
4201.26 5376.74 l
f
n
4201.26 5370.36 m
4200.15 5373.36 4198.25 5377.08 4196.24 5379.39 c
4201.26 5377.57 l
4206.28 5379.39 l
4204.27 5377.08 4202.37 5373.36 4201.26 5370.36 c
f
n
4201.26 5423.22 m
4201.26 5376.74 l
S
n
4201.26 5357.61 m
4197.92 5366.61 4192.22 5377.78 4186.19 5384.7 c
4201.26 5379.25 l
4216.33 5384.7 l
4210.3 5377.78 4204.6 5366.61 4201.26 5357.61 c
f
n
4204.96 6226.78 m
4204.96 6180.3 l
f
n
4204.96 6173.92 m
4203.84 6176.92 4201.95 6180.64 4199.94 6182.95 c
4204.96 6181.13 l
4209.98 6182.95 l
4207.97 6180.64 4206.07 6176.92 4204.96 6173.92 c
f
n
4204.96 6226.78 m
4204.96 6180.3 l
S
n
4204.96 6161.17 m
4201.62 6170.17 4195.92 6181.34 4189.89 6188.26 c
4204.96 6182.8 l
4220.03 6188.26 l
4214.0 6181.34 4208.3 6170.17 4204.96 6161.17 c
f
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
376.1 579.9 m
/N106 [0.1 0.0 0.0 -0.1 0.0 0.0] Tf
(\000\002\001\004\003)
[0.0 3.0 0.0 3.4 0.0 ] pdfxs
384.1 579.9 m
(\005) show
%ADOBeginSubsetFont: CPUAAA+Myriad-Roman~6f Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /CPUAAA+Myriad-Roman~6f def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-46 -250 1126 831} def
/XUID [6 41987] def
systemdict /languagelevel known {mark {systemdict
/version get exec cvi 3011 le {currentdict /XUID
undef } if} stopped cleartomark} if
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def
/FamilyOtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.10001 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B896187A> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 97 /a 109 /m
/N82 (CPUAAA+Myriad-Roman~6f) -1 TZ
388.316 576.117 m
%ADOBeginSubsetFont: CPUAAA+Myriad-Roman~6f AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/CPUAAA+Myriad-Roman~6f findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B83F01E3CEBCE482
B366633F5D4F2D1210B8096336DCE594268DC8CBC788AC277818F4265A158323
040A081AF2813A4C46853024307C79D63531339CB7A33AE1B19A9EBE155A9044
AF94E2AB014EF5F3C3F84453DB645AE8DB251FAE462208E18C764287E4C503E5
D539A89B66BE752516C9BD24116E70C150AAE316110E44DAC51B50A5E6719041
345788BD574DAE6197556A3E98> |-
/m <1C60D8A8C9B6B770778B71072D7C1E07589A410E5C648181D5E5D7686C58
9E0C639D4BCA9A198CE046FB4820E81306D49B7F58AF594598A27C6FC5CBD8BA
4ACACEDC12131EFFBFC46ED56775F49AC6F32233D61236E048FD96B7123D1ABB
9FC0BFC5768199FF64DDF5DAD9DE2FC7496C9B8F64D92F146527108452A0359B
834500F40DA0F228CB9F9CFA43D8518159807EA68DBDABEA1A94A485646132B3
16> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/CPUAAA+Myriad-Roman~6f findfont /Encoding get
dup 97 /a put
dup 109 /m put
pop
end
%ADOEndSubsetFont
/N82 7.60632 Tf
(am)
[3.66621 6.34367 ] pdfxs
Q
2.11287 w
n
4007.41 5743.74 m
4007.41 5729.74 4002.33 5718.39 3996.08 5718.39 c
3752.51 5718.39 l
3746.26 5718.39 3741.19 5729.74 3741.19 5743.74 c
3741.19 5817.69 l
3741.19 5831.69 3746.26 5843.05 3752.51 5843.05 c
3996.08 5843.05 l
4002.33 5843.05 4007.41 5831.69 4007.41 5817.69 c
4007.41 5743.74 l
h
S
n
4205.01 6036.14 m
4522.56 5852.78 l
f
n
4528.08 5849.59 m
4524.92 5850.13 4520.75 5850.35 4517.75 5849.76 c
4521.83 5853.2 l
4522.77 5858.46 l
4523.76 5855.56 4526.03 5852.06 4528.08 5849.59 c
f
6.3386 w
n
4205.01 6036.14 m
4522.56 5852.78 l
S
n
4539.12 5843.22 m
4529.66 5844.83 4517.14 5845.48 4508.13 5843.71 c
4520.38 5854.04 l
4523.2 5869.81 l
4526.18 5861.13 4532.99 5850.61 4539.12 5843.22 c
f
n
4204.27 6035.34 m
4308.12 5853.29 l
f
n
4311.28 5847.76 m
4308.83 5849.81 4305.33 5852.1 4302.44 5853.11 c
4307.7 5854.02 l
4311.17 5858.09 l
4310.57 5855.09 4310.76 5850.91 4311.28 5847.76 c
f
n
4204.27 6035.34 m
4308.12 5853.29 l
S
n
4317.6 5836.68 m
4310.24 5842.84 4299.76 5849.72 4291.08 5852.74 c
4306.88 5855.48 l
4317.27 5867.68 l
4315.45 5858.67 4316.04 5846.15 4317.6 5836.68 c
f
n
4134.28 5792.51 m
4134.28 5789.01 4131.45 5786.17 4127.94 5786.17 c
4124.45 5786.17 4121.61 5789.01 4121.61 5792.51 c
4121.61 5796.02 4124.45 5798.85 4127.94 5798.85 c
4131.45 5798.85 4134.28 5796.02 4134.28 5792.51 c
f
n
4080.82 5792.14 m
4080.61 5788.65 4077.62 5785.98 4074.12 5786.18 c
4070.63 5786.39 4067.96 5789.38 4068.16 5792.88 c
4068.37 5796.37 4071.36 5799.04 4074.86 5798.84 c
4078.35 5798.64 4081.02 5795.64 4080.82 5792.14 c
f
n
4348.11 5792.51 m
4348.11 5789.01 4345.27 5786.17 4341.77 5786.17 c
4338.27 5786.17 4335.43 5789.01 4335.43 5792.51 c
4335.43 5796.02 4338.27 5798.85 4341.77 5798.85 c
4345.27 5798.85 4348.11 5796.02 4348.11 5792.51 c
f
n
4294.65 5792.51 m
4294.65 5789.01 4291.81 5786.17 4288.31 5786.17 c
4284.81 5786.17 4281.97 5789.01 4281.97 5792.51 c
4281.97 5796.02 4284.81 5798.85 4288.31 5798.85 c
4291.81 5798.85 4294.65 5796.02 4294.65 5792.51 c
f
n
4241.2 5792.51 m
4241.2 5789.01 4238.36 5786.17 4234.86 5786.17 c
4231.36 5786.17 4228.52 5789.01 4228.52 5792.51 c
4228.52 5796.02 4231.36 5798.85 4234.86 5798.85 c
4238.36 5798.85 4241.2 5796.02 4241.2 5792.51 c
f
n
4187.74 5792.51 m
4187.74 5789.01 4184.9 5786.17 4181.4 5786.17 c
4177.9 5786.17 4175.06 5789.01 4175.06 5792.51 c
4175.06 5796.02 4177.9 5798.85 4181.4 5798.85 c
4184.9 5798.85 4187.74 5796.02 4187.74 5792.51 c
f
n
4313.96 5723.21 m
4226.98 5564.9 l
f
n
4223.91 5559.31 m
4224.38 5562.47 4224.51 5566.65 4223.86 5569.64 c
4227.39 5565.63 l
4232.67 5564.8 l
4229.79 5563.75 4226.34 5561.4 4223.91 5559.31 c
f
n
4313.96 5723.21 m
4226.98 5564.9 l
S
n
4217.78 5548.13 m
4219.18 5557.63 4219.57 5570.16 4217.61 5579.13 c
4228.2 5567.09 l
4244.03 5564.62 l
4235.41 5561.46 4225.03 5554.41 4217.78 5548.13 c
f
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
443.1 579.8 m
/N106 [0.1 0.0 0.0 -0.1 0.0 0.0] Tf
(\000\002\001\006\003)
[0.0 3.0 0.0 3.3 0.0 ] pdfxs
451.0 579.8 m
(\005) show
455.241 576.032 m
/N82 7.60632 Tf
(am)
[3.66621 6.34367 ] pdfxs
Q
2.11287 w
n
4668.21 5742.89 m
4668.21 5728.88 4663.13 5717.53 4656.88 5717.53 c
4413.31 5717.53 l
4407.06 5717.53 4401.99 5728.88 4401.99 5742.89 c
4401.99 5816.84 l
4401.99 5830.84 4407.06 5842.19 4413.31 5842.19 c
4656.88 5842.19 l
4663.13 5842.19 4668.21 5830.84 4668.21 5816.84 c
4668.21 5742.89 l
h
S
n
3871.51 5717.1 m
4145.25 5559.04 l
f
n
4150.77 5555.85 m
4147.62 5556.38 4143.44 5556.6 4140.44 5556.01 c
4144.53 5559.45 l
4145.46 5564.71 l
4146.46 5561.82 4148.73 5558.31 4150.77 5555.85 c
f
6.3386 w
n
3871.51 5717.1 m
4145.25 5559.04 l
S
n
4161.82 5549.47 m
4152.35 5551.08 4139.83 5551.73 4130.82 5549.97 c
4143.08 5560.29 l
4145.89 5576.07 l
4148.87 5567.38 4155.69 5556.86 4161.82 5549.47 c
f
n
4092.29 5724.75 m
4183.5 5564.86 l
f
n
4186.66 5559.32 m
4184.2 5561.38 4180.71 5563.67 4177.82 5564.68 c
4183.08 5565.59 l
4186.55 5569.65 l
4185.94 5566.65 4186.14 5562.48 4186.66 5559.32 c
f
n
4092.29 5724.75 m
4183.5 5564.86 l
S
n
4192.98 5548.25 m
4185.61 5554.41 4175.13 5561.29 4166.46 5564.31 c
4182.25 5567.04 l
4192.64 5579.24 l
4190.83 5570.24 4191.41 5557.72 4192.98 5548.25 c
f
n
4539.46 5717.1 m
4265.31 5558.8 l
f
n
4259.79 5555.61 m
4261.83 5558.08 4264.11 5561.58 4265.1 5564.47 c
4266.04 5559.22 l
4270.12 5555.78 l
4267.12 5556.36 4262.95 5556.15 4259.79 5555.61 c
f
n
4539.46 5717.1 m
4265.31 5558.8 l
S
n
4248.75 5549.23 m
4254.87 5556.63 4261.69 5567.15 4264.67 5575.83 c
4267.48 5560.05 l
4279.74 5549.73 l
4270.73 5551.49 4258.21 5550.84 4248.75 5549.23 c
f
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
%ADOBeginSubsetFont: EGDAAA+Myriad-Roman~73 Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /EGDAAA+Myriad-Roman~73 def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-46 -250 1126 831} def
/XUID [6 41987] def
systemdict /languagelevel known {mark {systemdict
/version get exec cvi 3011 le {currentdict /XUID
undef } if} stopped cleartomark} if
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def
/FamilyOtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.10001 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B896187A> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 106 /j 110 /n/o
/N74 (EGDAAA+Myriad-Roman~73) -1 TZ
410.96 546.684 m
%ADOBeginSubsetFont: EGDAAA+Myriad-Roman~73 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/EGDAAA+Myriad-Roman~73 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j <1C60D8A8C9B879BE2B58B5F57562532F89696610E4EED8373007BD68669D
815AD49966FAD453481767A010EBE80E8783EC4CB3BE706C170F4379C120FD16
6626103B43A81695F47FA73EAC7F8B3989F2840F1CEE53997917311C86BDBC32
7C0ABF6DD81152D8B7346A03FB809A4D794D559FA9A77448962ABC265961C637
F751F154> |-
/o <1C60D8A8C9B7967683396363C51B2F1979461F3B52B4DE9D5B25D8A855AB
1B46FE9631B4DCEE52CD84AA08F1094EFB92ECAE28B9F270EC36D74BB1583561
930BC929FA93A4970736610867F1192023A3BA25> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/EGDAAA+Myriad-Roman~73 findfont /Encoding get
dup 106 /j put
dup 111 /o put
pop
end
%ADOEndSubsetFont
/N74 [7.60634 -0.0174095 0.0174127 7.60634 0.0 0.0] Tf
(jo)
[1.84831 -0.00423043 4.17585 -0.00955773 ] pdfxys
416.984 546.67 m
/N98 [7.60634 -0.0174095 0.0174127 7.60634 0.0 0.0] Tf
(i) show
418.764 546.666 m
%ADOBeginSubsetFont: EGDAAA+Myriad-Roman~73 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/EGDAAA+Myriad-Roman~73 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B790A816BA887E1FDE7CD82D372FF5366DAE5DCB8586A90B38
B997881AE3967F459F4112E189F13732C7688D71582E7A9ED9DDE11A26AE52A0
AA137F8A21AF613F6AFFF512A754B0550B0B3C16BE3A435E248CF28FD678E415
358EE253E19230> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/EGDAAA+Myriad-Roman~73 findfont /Encoding get
dup 110 /n put
pop
end
%ADOEndSubsetFont
/N74 [7.60634 -0.0174095 0.0174127 7.60634 0.0 0.0] Tf
(n) show
422.986 546.656 m
/N98 [7.60634 -0.0174095 0.0174127 7.60634 0.0 0.0] Tf
(er)
[3.81083 -0.00872227 2.48724 -0.00569282 ] pdfxys
Q
2.11287 w
n
4334.28 5448.89 m
4334.25 5434.88 4329.16 5423.54 4322.9 5423.56 c
4079.34 5424.12 l
4073.08 5424.14 4068.03 5435.5 4068.07 5449.51 c
4068.24 5523.46 l
4068.27 5537.46 4073.37 5548.8 4079.62 5548.78 c
4323.19 5548.22 l
4329.44 5548.2 4334.49 5536.84 4334.46 5522.84 c
4334.28 5448.89 l
h
S
Q
q
n
4768.29 6106.38 m
4768.29 5477.13 l
5500.93 5477.13 l
5500.93 6106.38 l
W
n
2.09714 w
4.0 M
n
5096.49 5943.51 m
5096.49 5929.61 5090.26 5918.34 5082.57 5918.34 c
4783.26 5918.34 l
4775.57 5918.34 4769.34 5929.61 4769.34 5943.51 c
4769.34 6016.91 l
4769.34 6030.81 4775.57 6042.07 4783.26 6042.07 c
5082.57 6042.07 l
5090.26 6042.07 5096.49 6030.81 5096.49 6016.91 c
5096.49 5943.51 l
h
[/DeviceGray] cs 0.0 sc
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
%ADOBeginSubsetFont: GMCAAA+Myriad-Roman~79 Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /GMCAAA+Myriad-Roman~79 def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-46 -250 1126 831} def
/XUID [6 41987] def
systemdict /languagelevel known {mark {systemdict
/version get exec cvi 3011 le {currentdict /XUID
undef } if} stopped cleartomark} if
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def
/FamilyOtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.10001 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B896187A> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 101 /e 105 /i/j 110 /n/o 114 /r
/N58 (GMCAAA+Myriad-Roman~79) -1 TZ
484.617 595.828 m
%ADOBeginSubsetFont: GMCAAA+Myriad-Roman~79 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/GMCAAA+Myriad-Roman~79 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j <1C60D8A8C9B879BE2B58B5F57562532F89696610E4EED8373007BD68669D
815AD49966FAD453481767A010EBE80E8783EC4CB3BE706C170F4379C120FD16
6626103B43A81695F47FA73EAC7F8B3989F2840F1CEE53997917311C86BDBC32
7C0ABF6DD81152D8B7346A03FB809A4D794D559FA9A77448962ABC265961C637
F751F154> |-
/o <1C60D8A8C9B7967683396363C51B2F1979461F3B52B4DE9D5B25D8A855AB
1B46FE9631B4DCEE52CD84AA08F1094EFB92ECAE28B9F270EC36D74BB1583561
930BC929FA93A4970736610867F1192023A3BA25> |-
/i <1C60D8A8C9B88055FF27B3934D040E8DBE022633F95365A77FF409BAAFF1
E1652439417FB10FB1C8BD44F4FF37E45388A4291AA4DFED968F1E2FD890896D
6F4E848D055FBE735701C484F07858CCD9> |-
/n <1C60D8A8C9B790A816BA887E1FDE7CD82D372FF5366DAE5DCB8586A90B38
B997881AE3967F459F4112E189F13732C7688D71582E7A9ED9DDE11A26AE52A0
AA137F8A21AF613F6AFFF512A754B0550B0B3C16BE3A435E248CF28FD678E415
358EE253E19230> |-
/e <1C60D8A8C9B7A66F84858C3680112C82D73E1C597325682C9ED530BCC0B6
51B28ABA219143BA4989A6F804DAAF308E4096EA3C5EE4CE5A25A89A84AEDFB4
7D9498707E4187C5FE017863CAF507AFEA82E084A8EFA129F39779B15FDFF321
33732565D375FCDD8EE0A32F5A98049423277E1BD8> |-
/r <1C60D8A8C9B825FA276057E42F8B6B57C9D83BDDD098E1F2815023B08CE6
DB69AE017A2B457327A0071129EDB590BE7AA3607E0922708891597C3D8F669F
3ED32EED759BFAF13F7F4F0E8EBB695840553EB7F2B5DF808E6281337961393B
D02988D264043D0826E651AB7250C84536DC39AF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/GMCAAA+Myriad-Roman~79 findfont /Encoding get
dup 106 /j put
dup 111 /o put
dup 105 /i put
dup 110 /n put
dup 101 /e put
dup 114 /r put
pop
end
%ADOEndSubsetFont
/N58 7.54971 Tf
(joiner)
[1.83455 4.14476 1.76658 4.19003 3.78246 2.46872 ] pdfxs
Q
n
4935.01 5919.74 m
4935.01 5873.6 l
f
n
4935.01 5867.27 m
4933.91 5870.25 4932.02 5873.95 4930.03 5876.23 c
4935.01 5874.43 l
4940.0 5876.23 l
4938.0 5873.95 4936.12 5870.25 4935.01 5867.27 c
f
6.29143 w
n
4935.01 5919.74 m
4935.01 5873.6 l
S
n
4935.01 5854.62 m
4931.7 5863.55 4926.04 5874.63 4920.05 5881.5 c
4935.01 5876.09 l
4949.97 5881.5 l
4943.98 5874.63 4938.33 5863.55 4935.01 5854.62 c
f
n
4935.01 5728.9 m
4935.01 5682.76 l
f
n
4935.01 5676.43 m
4933.91 5679.41 4932.02 5683.1 4930.03 5685.39 c
4935.01 5683.59 l
4940.0 5685.39 l
4938.0 5683.1 4936.12 5679.41 4935.01 5676.43 c
f
n
4935.01 5728.9 m
4935.01 5682.76 l
S
n
4935.01 5663.78 m
4931.7 5672.71 4926.04 5683.79 4920.05 5690.66 c
4935.01 5685.25 l
4949.97 5690.66 l
4943.98 5683.79 4938.33 5672.71 4935.01 5663.78 c
f
n
4935.01 5542.25 m
4935.01 5496.12 l
f
n
4935.01 5489.79 m
4933.91 5492.76 4932.02 5496.46 4930.03 5498.75 c
4935.01 5496.94 l
4940.0 5498.75 l
4938.0 5496.46 4936.12 5492.76 4935.01 5489.79 c
f
n
4935.01 5542.25 m
4935.01 5496.12 l
S
n
4935.01 5477.13 m
4931.7 5486.06 4926.04 5497.15 4920.05 5504.02 c
4935.01 5498.6 l
4949.97 5504.02 l
4943.98 5497.15 4938.33 5486.06 4935.01 5477.13 c
f
n
4935.01 6106.38 m
4935.01 6060.25 l
f
n
4935.01 6053.92 m
4933.91 6056.9 4932.02 6060.59 4930.03 6062.88 c
4935.01 6061.08 l
4940.0 6062.88 l
4938.0 6060.59 4936.12 6056.9 4935.01 6053.92 c
f
n
4935.01 6106.38 m
4935.01 6060.25 l
S
n
4935.01 6041.26 m
4931.7 6050.19 4926.04 6061.28 4920.05 6068.15 c
4935.01 6062.74 l
4949.97 6068.15 l
4943.98 6061.28 4938.33 6050.19 4935.01 6041.26 c
f
2.09714 w
n
5096.49 5753.96 m
5096.49 5740.06 5090.26 5728.79 5082.57 5728.79 c
4783.26 5728.79 l
4775.57 5728.79 4769.34 5740.06 4769.34 5753.96 c
4769.34 5827.36 l
4769.34 5841.26 4775.57 5852.52 4783.26 5852.52 c
5082.57 5852.52 l
5090.26 5852.52 5096.49 5841.26 5096.49 5827.36 c
5096.49 5753.96 l
h
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
%ADOBeginSubsetFont: TPDAAA+Myriad-Roman~7c Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /TPDAAA+Myriad-Roman~7c def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-46 -250 1126 831} def
/XUID [6 41987] def
systemdict /languagelevel known {mark {systemdict
/version get exec cvi 3011 le {currentdict /XUID
undef } if} stopped cleartomark} if
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def
/FamilyOtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.10001 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B896187A> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 97 /a 109 /m 115 /s/t
/N50 (TPDAAA+Myriad-Roman~7c) -1 TZ
482.873 576.873 m
%ADOBeginSubsetFont: TPDAAA+Myriad-Roman~7c AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/TPDAAA+Myriad-Roman~7c findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B70FAD6F31E6985044CC86CE58E7103CFADE13C7DC457B6B61
B27C387A81A626F4966C688D0C50600476E9AB18467FFAC6ED3909C5C2017A12
2463840FBE6795A1A2CAC9FEB45127B788B0426CC0AA67A9509F68032EDFEB1A
EA4184EB9837640B2C28468625> |-
/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA029E018F1B853B19499
2023A1A2094A61AA6AC40B7390D1BCF785D2429D0AF32EA1E2BF602E38DE50F9
0EE120A01A6478CC20B62FEDE17CBADD3C1BB7C9E4FE75CF0D3DFB8214AF8D64
2DB00A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TPDAAA+Myriad-Roman~7c findfont /Encoding get
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/N50 7.54971 Tf
(st)
[2.98966 2.49891 ] pdfxs
488.362 576.873 m
/N58 7.54971 Tf
(re)
[2.46872 3.78246 ] pdfxs
494.613 576.873 m
%ADOBeginSubsetFont: TPDAAA+Myriad-Roman~7c AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/TPDAAA+Myriad-Roman~7c findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B83F01E3CEBCE482
B366633F5D4F2D1210B8096336DCE594268DC8CBC788AC277818F4265A158323
040A081AF2813A4C46853024307C79D63531339CB7A33AE1B19A9EBE155A9044
AF94E2AB014EF5F3C3F84453DB645AE8DB251FAE462208E18C764287E4C503E5
D539A89B66BE752516C9BD24116E70C150AAE316110E44DAC51B50A5E6719041
345788BD574DAE6197556A3E98> |-
/m <1C60D8A8C9B6B770778B71072D7C1E07589A410E5C648181D5E5D7686C58
9E0C639D4BCA9A198CE046FB4820E81306D49B7F58AF594598A27C6FC5CBD8BA
4ACACEDC12131EFFBFC46ED56775F49AC6F32233D61236E048FD96B7123D1ABB
9FC0BFC5768199FF64DDF5DAD9DE2FC7496C9B8F64D92F146527108452A0359B
834500F40DA0F228CB9F9CFA43D8518159807EA68DBDABEA1A94A485646132B3
16> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TPDAAA+Myriad-Roman~7c findfont /Encoding get
dup 97 /a put
dup 109 /m put
pop
end
%ADOEndSubsetFont
/N50 7.54971 Tf
(am)
[3.63892 6.29646 ] pdfxs
Q
n
5096.49 5569.05 m
5096.49 5555.15 5090.26 5543.88 5082.57 5543.88 c
4783.26 5543.88 l
4775.57 5543.88 4769.34 5555.15 4769.34 5569.05 c
4769.34 5642.45 l
4769.34 5656.34 4775.57 5667.61 4783.26 5667.61 c
5082.57 5667.61 l
5090.26 5667.61 5096.49 5656.34 5096.49 5642.45 c
5096.49 5569.05 l
h
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
482.677 558.381 m
/N50 7.54971 Tf
(s) show
%ADOBeginSubsetFont: GWVAAA+Myriad-Roman~7f Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /GWVAAA+Myriad-Roman~7f def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-46 -250 1126 831} def
/XUID [6 41987] def
systemdict /languagelevel known {mark {systemdict
/version get exec cvi 3011 le {currentdict /XUID
undef } if} stopped cleartomark} if
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def
/FamilyOtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.10001 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B896187A> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 108 /l 112 /p
/N42 (GWVAAA+Myriad-Roman~7f) -1 TZ
485.667 558.381 m
%ADOBeginSubsetFont: GWVAAA+Myriad-Roman~7f AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/GWVAAA+Myriad-Roman~7f findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FC9D79EBC0747E8537AA64BFDE9D
EE82BB7646F7CEC27EF91C06D4678185F05CE12ADDAD16B81BA95B5DFD51FB92
0FE64B3BF8B211A23E486437984337D80F8A92C1A4FEF7A73E7D72D61B19CABF
B469A3C452694B121B79570B42AFC2C91D3BE4E44C8314CD4F5854A5F1DDFE4F
4053B1138E72DDA0105AAD7207B1A0DCBB21F351A8E5ECCCDE451D167E681188
C2514F73DC89> |-
/l <1C60D8A8C9B88055FF27B3923C5344CB60EC167D30E66A163A5CE58557> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/GWVAAA+Myriad-Roman~7f findfont /Encoding get
dup 112 /p put
dup 108 /l put
pop
end
%ADOEndSubsetFont
/N42 7.54971 Tf
(pl)
[4.29579 1.76658 ] pdfxs
491.729 558.381 m
/N58 7.54971 Tf
(i) show
493.496 558.381 m
/N50 7.54971 Tf
(tt)
[2.49891 2.49891 ] pdfxs
498.493 558.381 m
/N58 7.54971 Tf
(er)
[3.78246 2.46872 ] pdfxs
Q
n
5499.88 5753.96 m
5499.88 5740.06 5493.64 5728.79 5485.96 5728.79 c
5186.64 5728.79 l
5178.96 5728.79 5172.72 5740.06 5172.72 5753.96 c
5172.72 5827.36 l
5172.72 5841.26 5178.96 5852.52 5186.64 5852.52 c
5485.96 5852.52 l
5493.64 5852.52 5499.88 5841.26 5499.88 5827.36 c
5499.88 5753.96 l
h
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
523.212 576.873 m
/N50 7.54971 Tf
(st)
[2.98966 2.49891 ] pdfxs
528.7 576.873 m
/N58 7.54971 Tf
(re)
[2.46872 3.78246 ] pdfxs
534.952 576.873 m
/N50 7.54971 Tf
(am)
[3.63892 6.29646 ] pdfxs
Q
6.29143 w
n
5102.78 5603.01 m
5331.37 5603.01 l
S
n
5333.47 5598.82 m
5333.47 5716.32 l
f
n
5333.47 5722.65 m
5334.58 5719.67 5336.46 5715.97 5338.45 5713.69 c
5333.47 5715.49 l
5328.49 5713.69 l
5330.48 5715.97 5332.36 5719.67 5333.47 5722.65 c
f
n
5333.47 5598.82 m
5333.47 5716.32 l
S
n
5333.47 5735.3 m
5336.78 5726.37 5342.44 5715.29 5348.43 5708.42 c
5333.47 5713.83 l
5318.51 5708.42 l
5324.5 5715.29 5330.15 5726.37 5333.47 5735.3 c
f
n
5102.75 5984.69 m
5105.72 5985.8 5109.42 5987.68 5111.71 5989.68 c
5109.9 5984.69 l
5111.71 5979.71 l
5109.42 5981.7 5105.72 5983.59 5102.75 5984.69 c
1.0 sc
f
n
5335.57 5848.38 m
5335.57 5984.69 l
5109.08 5984.69 l
0.0 sc
S
n
5090.09 5984.69 m
5099.02 5988.01 5110.11 5993.66 5116.98 5999.65 c
5111.56 5984.69 l
5116.98 5969.74 l
5110.11 5975.72 5099.02 5981.38 5090.09 5984.69 c
f
Q
q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
%ADOBeginSubsetFont: TIRAAA+CMBX8 Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TIRAAA+CMBX8 def
/FontInfo 6 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-59 -250 1235 750} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 0 686 700 444 455 658 676] def
/OtherBlues [-202 -194] def
/BlueScale 0.04379 def
/StdHW [52] def
/StdVW [122] def
/StemSnapH [42 52] def
/StemSnapV [122 149] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B08A9583D4A6BBF37360> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 39 /quoteright/parenleft/parenright 44 /comma/hyphen/period
 48 /zero/one/two/three/four/five
/six 57 /nine 59 /semicolon 65 /A/B/C
/D/E/F/G/H/I
 77 /M 79 /O/P 82 /R/S/T
 86 /V 97 /a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/endash 174 /ff/fi
/N90 (TIRAAA+CMBX8) -1 TZ
320.499 524.304 m
%ADOBeginSubsetFont: TIRAAA+CMBX8 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
/TIRAAA+CMBX8 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B08A95A6993DCF20961811AD2540D6419988F7B40A
E12B685DAAED95956D146A38FF6E4A2AFED22FB137B52DAF107893C74456D241
6E58F0CC991C3978042D4C157C464B03C35D070F1191D51C74102B742559640B
75327FB02FA90BEEFC7326537B15F72AD21AD8535827> |-
/a <1C60D8A8C9B08A95F4EE86680A4D516EC246CFE4AD21AF98470FA741B0B9
104B6660BEB3387D60B86DAB3B1D8693D2C84F630861C099575F4CFC47E305E2
B4DC2FE436531F1E97FFE32E503AABB1443A28D0FA59004EF71AED766B7A9A65
0F78EBD1AA02482C82FEA6A5FCF92C64A712BEDE89D54D5BFAF498A916D5B1C1
0D89E46752E72E1CD50B410566FC0BDDA8EEA79F1AF07A9000A6AF> |-
/parenright <1C60D8A8C9B08A95A6993DCF20961811AD2540D64199F457225
022880110E876D7D990E083A7B79884F90D0525C9820DCDACD002BA89DF7AA5C
D99E0951E019DE0797EA45CDC9D677F6E7AE707E23E974AF27C74D8874583EE6
B490ADC01A881759A7F9DA3B56F77A7D7AD966C9D7C934B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TIRAAA+CMBX8 findfont /Encoding get
dup 40 /parenleft put
dup 97 /a put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
/N90 7.97011 Tf
(\(a\))
[3.79376 4.74223 3.79376 ] pdfxs
336.078 524.304 m
%ADOBeginSubsetFont: TIRAAA+CMBX8 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
/TIRAAA+CMBX8 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B08A9426823A933AC6496800290B42BB367657654688C79B58
4A6A3A6EB86D292CDA26528D64C35AE5B359719FE5DFDA2F8A9DCD950322980F
D40BC709700390672AC14DC4837FCCBEA63B5E52E1DE4E3039040D3725E1E97D
E2431475547D46ADF16CCA620F0B7E08F4BB3AA07E1BB7DF5D20B2D3FC7C1B93
038055C9CC438A7D7DABA9D26331FBF6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TIRAAA+CMBX8 findfont /Encoding get
dup 65 /A put
pop
end
%ADOEndSubsetFont
(A) show
346.684 524.304 m
%ADOBeginSubsetFont: TIRAAA+CMBX8 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
/TIRAAA+CMBX8 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B08A94478101EE5603BA3AFEB38B18E7E19BEB82A4CA9F90D0
ADF490A227B73C904BE9B64163F3AC53D3AC2BF2D5102209E2741E07A3D882D9
D9CF6889DF3D9134B14406DEA45F55222279211CA93CA85013BF7D0CD21FE43C
7D4726731D02F26262E4B8DB971B1D0C476FEB92BFD39859F07FCCBD40EBD8A5
D515D6DF1C58C227769418A11C349E140D1F27748B7D> |-
/i <1C60D8A8C9B08A9598A8964DAF178A30BD7F5402A30F3DB5B18F121D7449
4E3A697952C28389202042F7B9D552D04063EF294261D45B9A37F48DF2414227
CF19A270E046934A485C169452C49FE8AB01B43908FB254A56324322FFEA03EA
607679E0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TIRAAA+CMBX8 findfont /Encoding get
dup 112 /p put
dup 105 /i put
pop
end
%ADOEndSubsetFont
(pip)
[5.41962 2.7019 5.41962 ] pdfxs
360.495 524.304 m
%ADOBeginSubsetFont: TIRAAA+CMBX8 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
/TIRAAA+CMBX8 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B08A95C7058C097FD3B2414F1B2D66523946B56185348411D0
05BEF0948A509D39740D070150CB3BECE01D028512D8FCA6D66C84C0082E1A7D
3C6B7F99E5D8D3716E5DAA6585C20B80308EC144122F0A38C7FD01041ADED4FF
15BEA7DBAD224B1219A4410ACB4F9A55860764024302AC7A73DD10B6C430DC39
AE4A4552> |-
/l <1C60D8A8C9B08A9598A8964DAF178A30BD7E8E280422F2D1B3FD49D675F6
D4E1957CBDA97FCAC6DC8665F5A7267EABCAE0EDAA244F8650716A7559158D6B
BCE6B82BD342> |-
/n <1C60D8A8C9B08A94478101EE5603CAEC6E4585804EE58F4787EA3691EB9F
AFE8E0D0E7871EC7648260AF45BF0BE69C0E07F4C80A2339F165F15FE1705B8C
E522D9945AE5FBFCCCD2F9C4261582AEC7EF935EBF29E984B7FB9AC8C36A43B8
0E58EB60B1E8063A87CB04097DB02C2BA130F3A2AAD43EF8E6412B3F8B373B1A
D4268E35> |-
/period <1C60D8A8C9B08A9598A8964DAF178A78FE5F42EC40B5074A9B13AB7
35EF4B39DBC59624CE45F0EA099DBD3A570CC1749> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TIRAAA+CMBX8 findfont /Encoding get
dup 101 /e put
dup 108 /l put
dup 110 /n put
dup 46 /period put
pop
end
%ADOEndSubsetFont
(eline.)
[4.47127 2.7019 2.7019 5.41962 4.47127 2.7019 ] pdfxs
393.808 524.304 m
%ADOBeginSubsetFont: TIRAAA+CMBX8 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
/TIRAAA+CMBX8 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B08A94478101EE5603C5FFBC11E1BE53FB095AB6A23B0D7E57
4533D25BD112A7227F556EF131DA4297DAD0E9DD438C3D6AE32DA466A59CFE4C
336221100C11F0C9E305B4C395B58398A6BE3E594B8A9355DF192AAB1404D5A0
D25CB7F7A401C603A301DD57F2110BEA0AC1186B9B4869AE6386> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TIRAAA+CMBX8 findfont /Encoding get
dup 98 /b put
pop
end
%ADOEndSubsetFont
(\(b\))
[3.79376 5.41962 3.79376 ] pdfxs
410.064 524.304 m
(A) show
420.671 524.304 m
%ADOBeginSubsetFont: TIRAAA+CMBX8 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
/TIRAAA+CMBX8 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B08A950E1DB249DBED6CF318F7D4A8C142E579898242F3F3ED
3661DF9C133D2E42304946CECB6B646C371100E7B475432A348F39E13B97F578
297CE96480977786E1C46F91C448E005F4A8F47CE17D2FBC17FB72E46A77652C
A148DAAF850FAD40D72B5F20CA18652A753491EE24E007299B42393B6BBAAC36
258C934B1A4E21595FA728C51E42E78ABC6121A507467BA2C026061B2C83CE75
27989144A09183D82BC56AAADF8CB74824147DBFD131359B92> |-
/t <1C60D8A8C9B08A95A6993DCF209667E9DE53D1BCB1E59A95265F72E599BF
732E57E83A2521D21F45FA3C3442CE5C6A30554605032F3C4EC67F0E9A068900
D535F47BD1CEAB69696936BF2EFD086CEA8ED529249C6A93FF2AB4B0614844> |-
/j <1C60D8A8C9B08A958E04DC6557F2C6661388DAF6D1443A9DF1469B319058
C1E434D93D1EF952BE9A7827F266701FC0860FB0B847D124694146C688838BF2
8256D5D318F734ECB7F39CDB146E19794B682FCA53C1E8E981D5EE07751727D4
A33EEFF6229E0864F399BE753B5B8843BD439EBD4F0F809F703AEF302413BCD7
8E02106768BFD056A735> |-
/o <1C60D8A8C9B08A950B7FCBDFACA0967E973D61FC61AC7834E16027C33137
050063F8FF69040244825F19732427B344CAFF12B69552EF87F7E6A0E41EB8B0
67C1645644BDBC5839C37C6B68857FCC601037D92E9072DBC0A34309CC48C287
C409DE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TIRAAA+CMBX8 findfont /Encoding get
dup 115 /s put
dup 116 /t put
dup 106 /j put
dup 111 /o put
pop
end
%ADOEndSubsetFont
(splitjoin.)
[3.84958 5.41962 2.7019 2.7019 3.79376 2.97286 4.8777 2.7019 5.41962 2.7019 ] pdfxs
468.665 524.304 m
%ADOBeginSubsetFont: TIRAAA+CMBX8 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
/TIRAAA+CMBX8 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B08A95C8545EDDED8B90CACD4728F1049F463494352785164D
506BAB3B5EA6907D69089BE022BF4A82E0B87C6F7FB3592A92B16952B7455C47
CB9AFA26A679FA808BDC00568659F6C1572C7DF41387B9AB8DDB7D3232FBF579
81994F799D4A9B1469951D78A1A4E8852D33B225F02B0A39741FA8E704BE0F0A
6611C7F13E492349> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TIRAAA+CMBX8 findfont /Encoding get
dup 99 /c put
pop
end
%ADOEndSubsetFont
(\(c\))
[3.79376 4.33579 3.79376 ] pdfxs
483.847 524.304 m
(A) show
494.444 524.304 m
%ADOBeginSubsetFont: TIRAAA+CMBX8 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
/TIRAAA+CMBX8 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B08A958E04DC6557F2B6EB3F890F7974D4D00E3A891B4A0261
40232F4BF34ACE2FF23ABE8DCF061866B2016A09CA66F59CED2718923EDD5FDD
37DFD804FA0D99E8D81968D7B18286F4590A43E9062D15764B9F608904A9075E
A5FE58ECE08DB997F780B0EF285A5D055550D89A4AF84CC9CE8215D60AA9A93D
DDA2CE71> |-
/d <1C60D8A8C9B08A94478101EE5603C5FFBC11E1BE53FB095AB6E4F328E7FF
6B5336D8B5CCA46FDE385946A20CA6A7AC80D2693D0DFC63EFC95AF2F3D3D05F
7E2C6B11B46AB3D15C3771F26A57326759D581BDC366FCA364A373C64C244EE6
80A894AB86499276602238D2A95CD07BD226AB0C94A73C6C95CB36BA30864142
7687B0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TIRAAA+CMBX8 findfont /Encoding get
dup 102 /f put
dup 100 /d put
pop
end
%ADOEndSubsetFont
(feedbac)
[2.97286 4.47127 4.47127 5.41962 5.41962 4.74223 4.33579 ] pdfxs
526.007 524.304 m
%ADOBeginSubsetFont: TIRAAA+CMBX8 AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
/TIRAAA+CMBX8 findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B08A95E0DFAFA5786CE3B7A4EFEB969D2ED89C23868245BBB2
D4EC87F3033E4C3C9E446A352027F4050953CA88DD4614E001949BBA04972C5F
416022E40382E9931FC5EA0FAA7643D1DAFD05A0513D4FCF9882656618D6C460
B7951214361FB2697B8BFB1532819E32BACEC0FB00A102F60C3F8A34C7462BF4
EEB03BC301170CFCD676EE2DA179998DCDA0DC9750A389BC8EC58AAA2A8B9A6A
9D32EA0A8E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/TIRAAA+CMBX8 findfont /Encoding get
dup 107 /k put
pop
end
%ADOEndSubsetFont
(klo)
[5.15669 2.7019 4.8777 ] pdfxs
539.013 524.304 m
(op.)
[4.8777 5.41962 2.7019 ] pdfxs
Q
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
Q
Q
/RCLAAA+Myriad-Roman~64 /Font _pdfUndefineResource
/N98 /Font _pdfUndefineResource
/GWVAAA+Myriad-Roman~7f /Font _pdfUndefineResource
/N42 /Font _pdfUndefineResource
/EGDAAA+Myriad-Roman~73 /Font _pdfUndefineResource
/N74 /Font _pdfUndefineResource
/EQHBAA+Myriad-Roman~60 /Font _pdfUndefineResource
/N119 /Font _pdfUndefineResource
/TPDAAA+Myriad-Roman~7c /Font _pdfUndefineResource
/N50 /Font _pdfUndefineResource
/CPUAAA+Myriad-Roman~6f /Font _pdfUndefineResource
/N82 /Font _pdfUndefineResource
/TIRAAA+CMBX8 /Font _pdfUndefineResource
/N90 /Font _pdfUndefineResource
/GMCAAA+Myriad-Roman~79 /Font _pdfUndefineResource
/N58 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Times-Bold
%%DocumentSuppliedResources:
%%+ font A
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EOF
