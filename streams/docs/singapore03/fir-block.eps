%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010725005706)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 179 93 448 202
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

179 93 moveto
448 93 lineto
448 202 lineto
179 202 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font AFNJKN+TimesNewRoman,Bold
11 dict begin
/FontName /AFNJKN+TimesNewRoman,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/asterisk 359 RD 
c3f8880df725f88c15868f7f97789f08789e7795778b087c8b7f86818108
8282867f8b7e088b7d917f978108967e9b879e8b08908b998c9e8d08958a
938c948b08bf89057d7d808183850883867d8377800879807c8184810884
7f87808b7e088b7f908095820894819787988b089a8b9791969608969593
a08fa9088d9b8f998f94088c969398969c089679917f8e82088f838e7d8e
78088d6d9477968008967e9886998b08988b9790949508949390978b9908
8b99889585930882957d9678950878947d9383910885917f967d9b08a38c
9d8c978b08968b938b938b089a89978b928b089e8b9b9097960897969197
8b99088b98869681940882967f8f7d8b08768b78807675087d7b7f808385
0883877e847984088d9d8d9b8e95088d93929a959e08959f909b8b98088b
9c869981960880947f917d8b087e8b7f85808008827f857e8b7c088b8090
7b9676089677927b8e81088c838e7c8c780879937e928391088a07090e ND 
/plus 42 RD 
9ff8ce0d8af7be15f77f06fb7c07ca06f77c07f77f06cb07fb7f06f77e07
4c06fb7e07fb7f064b07090e ND 
/hyphen 21 RD 
a3f7e10df7b1f7ac15fbb1062607f7b106f007090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AFNJKN+TimesNewRoman,Bold findfont /Encoding get
dup 0 /.notdef put
dup 42 /asterisk put
dup 43 /plus put
dup 45 /hyphen put
pop
%%EndResource
[/N19/AFNJKN+TimesNewRoman,Bold 1 TZ
%%BeginResource: font AFNJAO+TimesNewRoman
11 dict begin
/FontName /AFNJAO+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/parenleft 100 RD 
b4f7e10df752fb0e1576a47ba57fa6087fa681af83b8087fc386ca8bd108
8bcc91c898c60898c59ebca5b108a5b2aca9b3a108a0073b674a50593808
5937722f8b26088b479848a44b08a54baf54ba5c08ab68b46fbc72088d9e
0568a271a377a408090e ND 
/parenright 99 RD 
a1f7e10ddbf8ee15a0729b7197700898719567935e089551914c8b46088b
4b854d7e50087f51785a71650870656b6d637508897805deadcbc7bdde08
bcdfa4e78bf0088bcf7ece72cb0871cc67c25cbb086cab61a859a3087607
ac76a6729f7208090e ND 
/plus 42 RD 
9df8c80df7afd015f78807f78806b307fb8806f787076306fb8707fb8706
6307f78706fb8807b306090e ND 
/hyphen 19 RD 
b4f7e10df75004f79106d507fb91064107090e ND 
/zero 164 RD 
aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf
96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d
6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2
a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008
8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6
80d58be6088bc38fc494c508090e ND 
/one 103 RD 
f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108
8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a
087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8
c3077b06fb363d05927c05090e ND 
/two 140 RD 
a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08
fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae
0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e
08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c
493a35fb0722087907f81b06b9f715057806090e ND 
/three 221 RD 
b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b
7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4
8008a2819f7f997e089581947d947908967391728b71088b687f6d727108
72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e
838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986
b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b
08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d
727369785e089c8305090e ND 
/four 55 RD 
9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7
4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 
/five 155 RD 
bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368
99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091
858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e
089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b
a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb
818a05090e ND 
/six 196 RD 
b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608
725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8
9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1
9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb
69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575
70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08
8ba68eae91b708a79da096989008090e ND 
/seven 50 RD 
b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc
e905c206f770f926059e07fbf7064cfb3105090e ND 
/eight 250 RD 
c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4
8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0
a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a
6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08
09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695
ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468
083ace0509f73bfba515987991768b74088b6e807376770876796f80688b
08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3
52b95fa269088a07090e ND 
/nine 181 RD 
b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd
73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b
ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778
0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199
76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78
089e779b6f966608946891688b6b088b7288698561087b7e798177840809
0e ND 
/Z 83 RD 
98f8f70dd4f92b157dfb3a059e0691b393a6939908949a97969b93089a92
a58fae8b08f76706fc3bfcf105897905f8b106a8f743057d8e0578547866
75790874776b83618b08fba206f847f90305fc7e06090e ND 
/h 234 RD 
91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708
90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588
087f857c88778b087907f771069d07748b7b8e829008828f859288920886
938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308
9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385
0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893
088696899e8ba708f732078bc388b185a00882a97ea17999087799769272
8b08758b768576800876806e71676308f7db07758c05090e ND 
/x 215 RD 
98f8880df842049f8b9b8798820899819d75a36808dffb0f052efb11056e
6476737f8208828381887f89087a07f726069c077c8c808f849108849187
938b93088b8f969ea0a908d3ea05cd2b059f6d96788b83088b8488858586
08828480887c8b088c7a05f767069c07788c7c907f9308809277a370b308
fb03f73605c7dc05a8b0a0a39b9608979399909b8c089d07fb2a06790797
89948a91860890858e858b84088b837f76736b0867580569be0586978592
8790087f9d85968b93088b948e909090089090948d988b088d9d05fb6706
8c7905090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AFNJAO+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 90 /Z put
dup 104 /h put
dup 120 /x put
pop
%%EndResource
[/N57/AFNJAO+TimesNewRoman 1 TZ
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
%%BeginResource: font AFNKKJ+Symbol
ct_CffDict begin
15 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/version (001.008) def
/FullName (Symbol) def
/FamilyName (Symbol) def
/BaseFontName (Symbol) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /AFNKKJ+Symbol def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for def
/PaintType 0 def
/FontType 1 def
/FontMatrix [.001 0 0 .001 0 0 ] def
/FontBBox { -180 -293 1090 1010 } def
/StrokeWidth 0 def
currentdict end
systemdict begin
dup /Private 26 dict dup begin
/-|{string currentfile exch readhexstring pop}executeonly def
/|-{def}executeonly def
/|{put}executeonly def
/BlueValues [ -19 0 673 688 487 500 ] def
/StdHW [ 92 ] def
/StdVW [ 85 ] def
/BlueScale 0.039625 def
/BlueShift 7 def
/BlueFuzz 1 def
/ForceBold false  def
/ForceBoldThreshold 0 def
/LanguageGroup 0 def
/ExpansionFactor 0.06 def
/initialRandomSeed 0 def
/lenIV 4 def
/MinFeature {16 16} def
/password 5839 def
/Erode{
10.625 dup 3 -1 roll 0.1 mul exch 0.5 sub mul cvi sub dup mul
85 0 dtransform dup mul exch dup mul add
le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def
/OtherSubrs [
{ct_CffDict/F0Subr get exec}executeonly{ct_CffDict/F1Subr get exec}executeonly{ct_CffDict/F2Subr get exec}executeonly{ct_CffDict/HSSubr get exec}executeonly] |-
/Subrs 5  array
dup 0 15 -| 68CCB9B7733DBF957B5C4F6827AC8A |
dup 1 9 -| 68CCB9B776ADDED836 |
dup 2 9 -| 68CCB9B776AC088F04 |
dup 3 5 -| 68CCB9B7F6 |
dup 4 13 -| 68CCB9B7733AC657EC3EB6EC2F |
|-
2 index /CharStrings 2 dict dup begin
/.notdef 9 -| 68CCB9B776D66C9B0D |-
/Sigma 79 -| 68CCB9B776D9A99B0F8C60A68012A0A703930D5247235EC1DA15F553ED2E1603BB5117C3
356658DE18D203E430B8A0BA56669FAEB5FE960B1985ACE2EA7704EC2927F0EA
322988B9EA36EDE904983C |-
end
end
put
put
dup/FontName get exch definefont pop
end
/AFNKKJ+Symbol findfont /Encoding get
dup 0 /.notdef put
pop
end
/AFNKKJ+Symbol findfont /Encoding get
dup 0 /.notdef put
dup 83 /Sigma put
pop
%%EndResource
[ 1 /Sigma
/N20/AFNKKJ+Symbol -1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
179 93 269 109 re W n
[ 0 -1 1 0 86 381 ] concat
/N45 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N66 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N45 /ColorSpace findRes cs
0 0 0 scn
/N66 /ExtGState findRes gs
1 i
189.401 246.28101 0.48 0.24001 rf
189.401 210.28101 0.48 -0.24001 rf
189.401 210.28101 0.48 36 rf
1 1 1 scn
180.64101 261.041 18 -18 rf
0 0 0 scn
180.401 261.28101 0.48 -18.24001 rf
180.64101 261.28101 18.24001 -0.48 rf
198.401 261.041 0.48 -18.24001 rf
180.401 243.28101 18.24001 -0.48 rf
BT
/N57 1 Tf
0 8.3813 -6.48 0 191.6806 246.28059 Tm
0 Tc
0 Tw
(Z)Tj 
0.58701 0.8148 TD
-0.00369 Tc
(-1)Tj 
ET
189.28101 210.28101 0.48 0.24001 rf
189.28101 174.28101 0.48 -0.24001 rf
189.28101 174.28101 0.48 36 rf
1 1 1 scn
180.521 225.041 18 -18 rf
0 0 0 scn
180.28101 225.28101 0.48 -18.24001 rf
180.521 225.28101 18.24001 -0.48 rf
198.28101 225.041 0.48 -18.24001 rf
180.28101 207.28101 18.24001 -0.48 rf
BT
0 8.3813 -6.48 0 191.56059 210.28059 Tm
0 Tc
(Z)Tj 
0.58701 0.8148 TD
-0.00369 Tc
(-1)Tj 
ET
189.28101 270.041 0.48 0.24001 rf
189.28101 261.041 0.48 -0.24001 rf
189.28101 261.041 0.48 9 rf
216.521 269.80099 0.24001 0.48 rf
189.28101 270.28101 0.24001 -0.48 rf
189.521 269.80099 27 0.48 rf
235.36099 233.80099 0.24001 0.48 rf
189.401 234.28101 0.24001 -0.48 rf
189.64101 233.80099 45.72 0.48 rf
243.521 197.80099 0.24001 0.48 rf
189.28101 198.28101 0.24001 -0.48 rf
189.521 197.80099 54 0.48 rf
261.521 161.80099 0.24001 0.48 rf
189.28101 162.28101 0.24001 -0.48 rf
189.521 161.80099 72 0.48 rf
189.28101 174.28101 0.48 0.24001 rf
189.28101 138.28101 0.48 -0.24001 rf
189.28101 138.28101 0.48 36 rf
1 1 1 scn
180.521 189.041 18 -18 rf
0 0 0 scn
180.28101 189.28101 0.48 -18.24001 rf
180.521 189.28101 18.24001 -0.48 rf
198.28101 189.041 0.48 -18.24001 rf
180.28101 171.28101 18.24001 -0.48 rf
BT
0 8.3813 -6.48 0 191.56059 174.28059 Tm
0 Tc
(Z)Tj 
0.58701 0.8148 TD
-0.00369 Tc
(-1)Tj 
ET
189.28101 138.28101 0.48 0.24001 rf
189.28101 102.28101 0.48 -0.24001 rf
189.28101 102.28101 0.48 36 rf
1 1 1 scn
180.521 153.041 18 -18 rf
0 0 0 scn
180.28101 153.28101 0.48 -18.24001 rf
180.521 153.28101 18.24001 -0.48 rf
198.28101 153.041 0.48 -18.24001 rf
180.28101 135.28101 18.24001 -0.48 rf
BT
0 8.3813 -6.48 0 191.56059 138.28059 Tm
0 Tc
(Z)Tj 
0.58701 0.8148 TD
-0.00369 Tc
(-1)Tj 
ET
1 1 1 scn
214.241 270.041 m
214.481 268.241 l
214.961 266.561 l
215.80099 265.00101 l
216.881 263.681 l
218.201 262.601 l
219.761 261.761 l
221.44099 261.161 l
223.241 261.041 l
225.041 261.161 l
226.841 261.761 l
228.28101 262.601 l
229.601 263.681 l
230.80099 265.00101 l
231.521 266.561 l
232.121 268.241 l
232.241 270.041 l
232.121 271.841 l
231.521 273.521 l
230.80099 275.08099 l
229.601 276.401 l
228.28101 277.481 l
226.841 278.321 l
225.041 278.80099 l
223.241 279.041 l
221.44099 278.80099 l
219.761 278.321 l
218.201 277.481 l
216.881 276.401 l
215.80099 275.08099 l
214.961 273.521 l
214.481 271.841 l
214.241 270.041 l
f* 
0 0 0 scn
214.481 270.161 m
214.72099 268.36099 l
215.201 266.681 l
216.041 265.121 l
216.041 265.241 l
217.121 263.92101 l
218.44099 262.841 l
218.321 262.841 l
219.881 262.00101 l
221.561 261.401 l
221.44099 261.401 l
223.241 261.28101 l
225.041 261.401 l
226.841 262.00101 l
226.72099 262.00101 l
228.161 262.841 l
229.481 263.92101 l
230.681 265.241 l
230.561 265.121 l
231.28101 266.681 l
231.881 268.36099 l
231.881 268.241 l
232.00101 270.041 l
231.881 271.841 l
231.28101 273.521 l
231.28101 273.401 l
230.561 274.961 l
230.681 274.961 l
229.481 276.28101 l
228.161 277.36099 l
226.72099 278.201 l
226.841 278.08099 l
225.041 278.561 l
223.241 278.80099 l
223.36099 278.80099 l
221.561 278.561 l
219.881 278.08099 l
218.321 277.241 l
218.44099 277.36099 l
217.121 276.28101 l
216.041 274.961 l
215.201 273.401 l
215.201 273.521 l
214.72099 271.841 l
214.481 270.041 l
214.00101 270.161 l
214.241 271.961 l
214.72099 273.64101 l
215.561 275.201 l
215.681 275.321 l
216.761 276.64101 l
218.08099 277.72099 l
219.64101 278.561 l
219.761 278.561 l
221.44099 279.041 l
223.241 279.28101 l
223.36099 279.28101 l
225.161 279.041 l
226.961 278.561 l
228.401 277.72099 l
228.521 277.72099 l
229.841 276.64101 l
231.041 275.321 l
231.041 275.201 l
231.761 273.64101 l
232.36099 271.961 l
232.36099 271.841 l
232.481 270.041 l
232.36099 268.241 l
231.761 266.561 l
231.761 266.44099 l
231.041 264.881 l
229.841 263.561 l
228.521 262.481 l
228.401 262.481 l
226.961 261.64101 l
226.961 261.521 l
225.161 260.92101 l
225.041 260.92101 l
223.241 260.80099 l
221.44099 260.92101 l
219.761 261.521 l
219.64101 261.521 l
218.08099 262.36099 l
218.08099 262.481 l
216.761 263.561 l
215.681 264.881 l
215.561 264.881 l
214.72099 266.44099 l
214.72099 266.561 l
214.241 268.241 l
214.00101 270.041 l
f 
214.481 270.041 m
214.481 270.161 l
214.00101 270.041 l
214.00101 270.161 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 228.28059 266.6806 Tm
0 Tc
(*)Tj 
ET
1 1 1 scn
227.80099 234.041 m
227.92101 232.241 l
228.521 230.561 l
229.36099 229.00101 l
230.44099 227.681 l
231.761 226.601 l
233.321 225.761 l
235.00101 225.161 l
236.80099 225.041 l
238.601 225.161 l
240.28101 225.761 l
241.841 226.601 l
243.161 227.681 l
244.241 229.00101 l
245.08099 230.561 l
245.561 232.241 l
245.80099 234.041 l
245.561 235.841 l
245.08099 237.521 l
244.241 239.08099 l
243.161 240.401 l
241.841 241.481 l
240.28101 242.321 l
238.601 242.80099 l
236.80099 243.041 l
235.00101 242.80099 l
233.321 242.321 l
231.761 241.481 l
230.44099 240.401 l
229.36099 239.08099 l
228.521 237.521 l
227.92101 235.841 l
227.80099 234.041 l
f* 
0 0 0 scn
228.041 234.041 m
228.161 232.241 l
228.161 232.36099 l
228.761 230.681 l
229.601 229.121 l
229.601 229.241 l
230.681 227.92101 l
232.00101 226.841 l
231.881 226.841 l
233.44099 226.00101 l
235.121 225.401 l
235.00101 225.401 l
236.80099 225.28101 l
238.601 225.401 l
240.28101 226.00101 l
240.161 226.00101 l
241.72099 226.841 l
243.041 227.92101 l
244.121 229.241 l
244.00101 229.121 l
244.841 230.681 l
245.321 232.36099 l
245.561 234.161 l
245.561 234.041 l
245.321 235.841 l
244.841 237.521 l
244.841 237.401 l
244.00101 238.961 l
244.121 238.961 l
243.041 240.28101 l
241.72099 241.36099 l
241.72099 241.241 l
240.161 242.08099 l
240.28101 242.08099 l
238.601 242.561 l
236.80099 242.80099 l
236.92101 242.80099 l
235.121 242.561 l
233.44099 242.08099 l
231.881 241.241 l
232.00101 241.36099 l
230.681 240.28101 l
229.601 238.961 l
228.761 237.401 l
228.761 237.521 l
228.161 235.841 l
228.041 234.041 l
227.561 234.041 l
227.681 235.841 l
227.681 235.961 l
228.28101 237.64101 l
229.121 239.201 l
229.241 239.321 l
230.321 240.64101 l
231.64101 241.72099 l
233.201 242.561 l
233.321 242.561 l
235.00101 243.041 l
236.80099 243.28101 l
236.92101 243.28101 l
238.72099 243.041 l
240.401 242.561 l
241.961 241.72099 l
242.08099 241.72099 l
243.401 240.64101 l
244.481 239.321 l
244.481 239.201 l
245.321 237.64101 l
245.80099 235.961 l
246.041 234.161 l
246.041 234.041 l
245.80099 232.241 l
245.321 230.561 l
245.321 230.44099 l
244.481 228.881 l
243.401 227.561 l
242.08099 226.481 l
241.961 226.36099 l
240.401 225.521 l
238.72099 224.92101 l
238.601 224.92101 l
236.80099 224.80099 l
235.00101 224.92101 l
233.321 225.521 l
233.201 225.521 l
231.64101 226.36099 l
231.64101 226.481 l
230.321 227.561 l
229.241 228.881 l
229.121 228.881 l
228.28101 230.44099 l
228.28101 230.561 l
227.681 232.241 l
227.561 234.041 l
f 
228.041 234.041 m
227.561 234.041 l
f 
BT
0 14.39999 -14.39999 0 242.6806 230.6806 Tm
(*)Tj 
ET
1 1 1 scn
240.521 198.041 m
240.761 196.241 l
241.241 194.561 l
242.08099 193.00101 l
243.161 191.681 l
244.481 190.601 l
246.041 189.761 l
247.72099 189.161 l
249.521 189.041 l
251.321 189.161 l
253.00101 189.761 l
254.561 190.601 l
255.881 191.681 l
256.961 193.00101 l
257.80099 194.561 l
258.401 196.241 l
258.521 198.041 l
258.401 199.841 l
257.80099 201.521 l
256.961 203.08099 l
255.881 204.401 l
254.561 205.481 l
253.00101 206.321 l
251.321 206.80099 l
249.521 207.041 l
247.72099 206.80099 l
246.041 206.321 l
244.481 205.481 l
243.161 204.401 l
242.08099 203.08099 l
241.241 201.521 l
240.761 199.841 l
240.521 198.041 l
f* 
0 0 0 scn
240.761 198.161 m
241.00101 196.36099 l
241.481 194.681 l
242.321 193.121 l
242.321 193.241 l
243.401 191.92101 l
244.72099 190.841 l
244.601 190.841 l
246.161 190.00101 l
247.841 189.401 l
247.72099 189.401 l
249.521 189.28101 l
251.321 189.401 l
253.00101 190.00101 l
252.881 190.00101 l
254.44099 190.841 l
255.761 191.92101 l
256.841 193.241 l
256.72099 193.121 l
257.561 194.681 l
258.161 196.36099 l
258.161 196.241 l
258.28101 198.041 l
258.161 199.841 l
257.561 201.521 l
257.561 201.401 l
256.72099 202.961 l
256.841 202.961 l
255.761 204.28101 l
254.44099 205.36099 l
254.44099 205.241 l
252.881 206.08099 l
253.00101 206.08099 l
251.321 206.561 l
249.521 206.80099 l
249.64101 206.80099 l
247.841 206.561 l
246.161 206.08099 l
244.601 205.241 l
244.72099 205.36099 l
243.401 204.28101 l
242.321 202.961 l
241.481 201.401 l
241.481 201.521 l
241.00101 199.841 l
240.761 198.041 l
240.28101 198.161 l
240.521 199.961 l
241.00101 201.64101 l
241.841 203.201 l
241.961 203.321 l
243.041 204.64101 l
244.36099 205.72099 l
245.92101 206.561 l
246.041 206.561 l
247.72099 207.041 l
249.521 207.28101 l
249.64101 207.28101 l
251.44099 207.041 l
253.121 206.561 l
254.681 205.72099 l
254.80099 205.72099 l
256.121 204.64101 l
257.201 203.321 l
257.201 203.201 l
258.041 201.64101 l
258.64101 199.961 l
258.64101 199.841 l
258.761 198.041 l
258.64101 196.241 l
258.041 194.561 l
258.041 194.44099 l
257.201 192.881 l
256.121 191.561 l
254.80099 190.481 l
254.681 190.36099 l
253.121 189.521 l
251.44099 188.92101 l
251.321 188.92101 l
249.521 188.80099 l
247.72099 188.92101 l
246.041 189.521 l
245.92101 189.521 l
244.36099 190.36099 l
244.36099 190.481 l
243.041 191.561 l
241.961 192.881 l
241.841 192.881 l
241.00101 194.44099 l
241.00101 194.561 l
240.521 196.241 l
240.28101 198.041 l
f 
240.761 198.041 m
240.761 198.161 l
240.28101 198.041 l
240.28101 198.161 l
f 
BT
0 14.39999 -14.39999 0 254.56059 194.6806 Tm
(*)Tj 
ET
1 1 1 scn
253.961 162.041 m
254.201 160.241 l
254.681 158.561 l
255.521 157.00101 l
256.601 155.681 l
257.92101 154.601 l
259.481 153.761 l
261.161 153.161 l
262.961 153.041 l
264.761 153.161 l
266.44099 153.761 l
268.00101 154.601 l
269.321 155.681 l
270.401 157.00101 l
271.241 158.561 l
271.841 160.241 l
271.961 162.041 l
271.841 163.841 l
271.241 165.521 l
270.401 167.08099 l
269.321 168.401 l
268.00101 169.481 l
266.44099 170.321 l
264.761 170.80099 l
262.961 171.041 l
261.161 170.80099 l
259.481 170.321 l
257.92101 169.481 l
256.601 168.401 l
255.521 167.08099 l
254.681 165.521 l
254.201 163.841 l
253.961 162.041 l
f* 
0 0 0 scn
254.201 162.161 m
254.44099 160.36099 l
254.92101 158.681 l
255.761 157.121 l
255.761 157.241 l
256.841 155.92101 l
258.161 154.841 l
258.041 154.841 l
259.601 154.00101 l
261.28101 153.401 l
261.161 153.401 l
262.961 153.28101 l
264.761 153.401 l
266.44099 154.00101 l
266.321 154.00101 l
267.881 154.841 l
269.201 155.92101 l
270.28101 157.241 l
270.161 157.121 l
271.00101 158.681 l
271.601 160.36099 l
271.601 160.241 l
271.72099 162.041 l
271.601 163.841 l
271.00101 165.521 l
271.00101 165.401 l
270.161 166.961 l
270.28101 166.961 l
269.201 168.28101 l
267.881 169.36099 l
267.881 169.241 l
266.321 170.08099 l
266.44099 170.08099 l
264.761 170.561 l
262.961 170.80099 l
263.08099 170.80099 l
261.28101 170.561 l
259.601 170.08099 l
258.041 169.241 l
258.161 169.36099 l
256.841 168.28101 l
255.761 166.961 l
254.92101 165.401 l
254.92101 165.521 l
254.44099 163.841 l
254.201 162.041 l
253.72099 162.161 l
253.961 163.961 l
254.44099 165.64101 l
255.28101 167.201 l
255.401 167.321 l
256.481 168.64101 l
257.80099 169.72099 l
259.36099 170.561 l
259.481 170.561 l
261.161 171.041 l
262.961 171.28101 l
263.08099 171.28101 l
264.881 171.041 l
266.561 170.561 l
268.121 169.72099 l
268.241 169.72099 l
269.561 168.64101 l
270.64101 167.321 l
270.64101 167.201 l
271.481 165.64101 l
272.08099 163.961 l
272.08099 163.841 l
272.201 162.041 l
272.08099 160.241 l
271.481 158.561 l
271.481 158.44099 l
270.64101 156.881 l
269.561 155.561 l
268.241 154.481 l
268.121 154.36099 l
266.561 153.521 l
264.881 152.92101 l
264.761 152.92101 l
262.961 152.80099 l
261.161 152.92101 l
259.481 153.521 l
259.36099 153.521 l
257.80099 154.36099 l
257.80099 154.481 l
256.481 155.561 l
255.401 156.881 l
255.28101 156.881 l
254.44099 158.44099 l
254.44099 158.561 l
253.961 160.241 l
253.72099 162.041 l
f 
254.201 162.041 m
254.201 162.161 l
253.72099 162.041 l
253.72099 162.161 l
f 
BT
0 14.39999 -14.39999 0 268.0006 158.6806 Tm
(*)Tj 
ET
270.521 125.80099 0.24001 0.48 rf
189.28101 126.28101 0.24001 -0.48 rf
189.521 125.80099 81 0.48 rf
1 1 1 scn
266.321 126.041 m
266.561 124.241 l
267.041 122.561 l
267.881 121.00101 l
268.961 119.681 l
270.28101 118.601 l
271.841 117.761 l
273.521 117.161 l
275.321 117.041 l
277.121 117.161 l
278.80099 117.761 l
280.36099 118.601 l
281.681 119.681 l
282.761 121.00101 l
283.601 122.561 l
284.201 124.241 l
284.321 126.041 l
284.201 127.841 l
283.601 129.521 l
282.761 131.08099 l
281.681 132.401 l
280.36099 133.481 l
278.80099 134.321 l
277.121 134.80099 l
275.321 135.041 l
273.521 134.80099 l
271.841 134.321 l
270.28101 133.481 l
268.961 132.401 l
267.881 131.08099 l
267.041 129.521 l
266.561 127.841 l
266.321 126.041 l
f* 
0 0 0 scn
266.561 126.161 m
266.80099 124.36099 l
267.28101 122.681 l
268.121 121.121 l
268.121 121.241 l
269.201 119.92101 l
270.521 118.841 l
270.401 118.841 l
271.961 118.00101 l
273.64101 117.401 l
273.521 117.401 l
275.321 117.28101 l
277.121 117.401 l
278.80099 118.00101 l
278.681 118.00101 l
280.241 118.841 l
281.561 119.92101 l
282.64101 121.241 l
282.521 121.121 l
283.36099 122.681 l
283.961 124.36099 l
283.961 124.241 l
284.08099 126.041 l
283.961 127.841 l
283.36099 129.521 l
283.36099 129.401 l
282.521 130.961 l
282.64101 130.961 l
281.561 132.28101 l
280.241 133.36099 l
280.241 133.241 l
278.681 134.08099 l
278.80099 134.08099 l
277.121 134.561 l
275.321 134.80099 l
275.44099 134.80099 l
273.64101 134.561 l
271.961 134.08099 l
270.401 133.241 l
270.521 133.36099 l
269.201 132.28101 l
268.121 130.961 l
267.28101 129.401 l
267.28101 129.521 l
266.80099 127.841 l
266.561 126.041 l
266.08099 126.161 l
266.321 127.961 l
266.80099 129.64101 l
267.64101 131.201 l
267.761 131.321 l
268.841 132.64101 l
270.161 133.72099 l
271.72099 134.561 l
271.841 134.561 l
273.521 135.041 l
275.321 135.28101 l
275.44099 135.28101 l
277.241 135.041 l
278.92101 134.561 l
280.481 133.72099 l
280.601 133.72099 l
281.92101 132.64101 l
283.00101 131.321 l
283.00101 131.201 l
283.841 129.64101 l
284.44099 127.961 l
284.44099 127.841 l
284.561 126.041 l
284.44099 124.241 l
283.841 122.561 l
283.841 122.44099 l
283.00101 120.881 l
281.92101 119.561 l
280.601 118.481 l
280.481 118.36099 l
278.92101 117.521 l
277.241 116.92101 l
277.121 116.92101 l
275.321 116.80099 l
273.521 116.92101 l
271.841 117.521 l
271.72099 117.521 l
270.161 118.36099 l
270.161 118.481 l
268.841 119.561 l
267.761 120.881 l
267.64101 120.881 l
266.80099 122.44099 l
266.80099 122.561 l
266.321 124.241 l
266.08099 126.041 l
f 
266.561 126.041 m
266.561 126.161 l
266.08099 126.041 l
266.08099 126.161 l
f 
BT
0 14.39999 -14.39999 0 280.3606 122.56059 Tm
(*)Tj 
ET
223.00101 278.80099 0.48 0.24001 rf
223.00101 297.28101 0.48 -0.24001 rf
223.00101 279.041 0.48 18 rf
236.561 242.80099 0.48 0.24001 rf
236.561 297.28101 0.48 -0.24001 rf
236.561 243.041 0.48 54 rf
249.28101 206.80099 0.48 0.24001 rf
249.28101 361.00101 0.48 -0.24001 rf
249.28101 207.041 0.48 153.72 rf
262.72099 170.80099 0.48 0.24001 rf
262.72099 297.28101 0.48 -0.24001 rf
262.72099 171.041 0.48 126 rf
275.08099 134.80099 0.48 0.24001 rf
275.08099 297.28101 0.48 -0.24001 rf
275.08099 135.041 0.48 162 rf
223.00101 261.041 0.48 0.24001 rf
223.00101 252.041 0.48 -0.24001 rf
223.00101 252.041 0.48 9 rf
BT
/N57 1 Tf
0 9.96001 -9.96001 0 221.3206 243.0406 Tm
(h)Tj 
0 7.92 -7.92 0 223.84061 248.0806 Tm
(5)Tj 
ET
236.561 224.681 0.48 0.24001 rf
236.561 215.681 0.48 -0.24001 rf
236.561 215.681 0.48 9 rf
BT
0 9.96001 -9.96001 0 234.7606 206.6806 Tm
(h)Tj 
0 7.92 -7.92 0 237.28059 211.6006 Tm
(4)Tj 
ET
249.64101 189.041 0.48 0.24001 rf
249.64101 180.041 0.48 -0.24001 rf
249.64101 180.041 0.48 9 rf
BT
0 9.96001 -9.96001 0 247.9606 171.0406 Tm
(h)Tj 
0 7.92 -7.92 0 250.48061 176.0806 Tm
(3)Tj 
ET
262.841 152.681 0.48 0.24001 rf
262.841 143.681 0.48 -0.24001 rf
262.841 143.681 0.48 9 rf
BT
0 9.96001 -9.96001 0 261.0406 134.6806 Tm
(h)Tj 
0 7.92 -7.92 0 263.56059 139.6006 Tm
(2)Tj 
ET
275.561 116.681 0.48 0.24001 rf
275.561 107.681 0.48 -0.24001 rf
275.561 107.681 0.48 9 rf
BT
0 9.96001 -9.96001 0 273.7606 98.6806 Tm
(h)Tj 
0 7.92 -7.92 0 276.28059 103.6006 Tm
(1)Tj 
ET
236.561 297.161 m
236.561 296.92101 l
237.041 296.80099 l
237.041 297.041 l
f 
244.481 324.881 m
244.481 325.121 l
244.961 325.00101 l
244.961 324.761 l
f 
236.561 297.161 m
237.041 297.041 l
244.961 324.761 l
244.481 324.881 l
f 
223.121 297.161 m
223.00101 297.041 l
223.36099 296.80099 l
223.481 296.92101 l
f 
243.401 329.44099 m
243.521 329.561 l
243.881 329.321 l
243.761 329.201 l
f 
223.121 297.161 m
223.481 296.92101 l
243.761 329.201 l
243.401 329.44099 l
f 
262.72099 297.041 m
262.72099 296.80099 l
263.201 296.92101 l
263.201 297.161 l
f 
253.241 324.761 m
253.241 325.00101 l
253.72099 325.121 l
253.72099 324.881 l
f 
262.72099 297.041 m
263.201 297.161 l
253.72099 324.881 l
253.241 324.761 l
f 
275.201 296.92101 m
275.321 296.80099 l
275.681 297.041 l
275.561 297.161 l
f 
256.481 327.521 m
256.36099 327.64101 l
256.72099 327.881 l
256.841 327.761 l
f 
275.201 296.92101 m
275.561 297.161 l
256.841 327.761 l
256.481 327.521 l
f 
1 1 1 scn
240.161 332.681 m
240.401 330.881 l
240.881 329.201 l
241.72099 327.64101 l
242.80099 326.321 l
244.121 325.241 l
245.681 324.401 l
247.36099 323.80099 l
249.161 323.681 l
250.961 323.80099 l
252.64101 324.401 l
254.201 325.241 l
255.521 326.321 l
256.601 327.64101 l
257.44099 329.201 l
257.92101 330.881 l
258.161 332.681 l
257.92101 334.481 l
257.44099 336.161 l
256.601 337.72099 l
255.521 339.041 l
254.201 340.121 l
252.64101 340.961 l
250.961 341.44099 l
249.161 341.681 l
247.36099 341.44099 l
245.681 340.961 l
244.121 340.121 l
242.80099 339.041 l
241.72099 337.72099 l
240.881 336.161 l
240.401 334.481 l
240.161 332.681 l
f* 
0 0 0 scn
240.401 332.80099 m
240.64101 331.00101 l
241.121 329.321 l
241.961 327.761 l
241.961 327.881 l
243.041 326.561 l
244.36099 325.481 l
244.241 325.481 l
245.80099 324.64101 l
247.481 324.041 l
247.36099 324.041 l
249.161 323.92101 l
250.961 324.041 l
252.64101 324.64101 l
252.521 324.64101 l
254.08099 325.481 l
255.401 326.561 l
256.481 327.881 l
256.36099 327.761 l
257.201 329.321 l
257.681 331.00101 l
257.92101 332.80099 l
257.92101 332.681 l
257.681 334.481 l
257.201 336.161 l
257.201 336.041 l
256.36099 337.601 l
256.481 337.601 l
255.401 338.92101 l
254.08099 340.00101 l
254.08099 339.881 l
252.521 340.72099 l
252.64101 340.72099 l
250.961 341.201 l
249.161 341.44099 l
249.28101 341.44099 l
247.481 341.201 l
245.80099 340.72099 l
244.241 339.881 l
244.36099 340.00101 l
243.041 338.92101 l
241.961 337.601 l
241.121 336.041 l
241.121 336.161 l
240.64101 334.481 l
240.401 332.681 l
239.92101 332.80099 l
240.161 334.601 l
240.64101 336.28101 l
241.481 337.841 l
241.601 337.961 l
242.681 339.28101 l
244.00101 340.36099 l
245.561 341.201 l
245.681 341.201 l
247.36099 341.681 l
249.161 341.92101 l
249.28101 341.92101 l
251.08099 341.681 l
252.761 341.201 l
254.321 340.36099 l
254.44099 340.36099 l
255.761 339.28101 l
256.841 337.961 l
256.841 337.841 l
257.681 336.28101 l
258.161 334.601 l
258.401 332.80099 l
258.401 332.681 l
258.161 330.881 l
257.681 329.201 l
257.681 329.08099 l
256.841 327.521 l
255.761 326.201 l
254.44099 325.121 l
254.321 325.00101 l
252.761 324.161 l
251.08099 323.561 l
250.961 323.561 l
249.161 323.44099 l
247.36099 323.561 l
245.681 324.161 l
245.561 324.161 l
244.00101 325.00101 l
244.00101 325.121 l
242.681 326.201 l
241.601 327.521 l
241.481 327.521 l
240.64101 329.08099 l
240.64101 329.201 l
240.161 330.881 l
239.92101 332.681 l
f 
240.401 332.681 m
240.401 332.80099 l
239.92101 332.681 l
239.92101 332.80099 l
f 
BT
/N20 1 Tf
0 9 -9 0 251.8006 330.0406 Tm
(\001)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF
