%TGIF 4.1.40
state(0,37,100.000,3885,3436,0,16,1,9,1,1,0,0,1,0,1,0,'Helvetica',0,138240,0,0,0,10,0,0,1,1,0,16,0,0,1,1,1,1,5376,4608,0,0,2880,0).
%
% @(#)$Header: /afs/csail.mit.edu/group/commit/reps/projects/streamit/cvsroot/streams/docs/darpa-poster-02/poster.obj,v 1.1 2002-04-19 17:36:42 dmaze Exp $
% %W%
%
unit("1 pixel/pixel").
color_info(12,65535,0,[
	"magenta", 65535, 0, 65535, 65535, 0, 65535, 1,
	"red", 65535, 0, 0, 65535, 0, 0, 1,
	"green", 0, 65535, 0, 0, 65535, 0, 1,
	"blue", 0, 0, 65535, 0, 0, 65535, 1,
	"yellow", 65535, 65535, 0, 65535, 65535, 0, 1,
	"pink", 65535, 49344, 52171, 65535, 49344, 52171, 1,
	"cyan", 0, 65535, 65535, 0, 65535, 65535, 1,
	"CadetBlue", 24415, 40606, 41120, 24415, 40606, 41120, 1,
	"white", 65535, 65535, 65535, 65535, 65535, 65535, 1,
	"black", 0, 0, 0, 0, 0, 0, 1,
	"DarkSlateGray", 12079, 20303, 20303, 12079, 20303, 20303, 1,
	"SkyBlue", 34695, 52942, 60395, 34695, 52942, 60395, 1
]).
script_frac("0.6").
fg_bg_colors('black','white').
page(1,"",1,'').
box('SkyBlue','',1472,1856,2344,4352,1,1,0,1873,0,0,0,0,0,'1',0,[
]).
box('SkyBlue','',2400,640,3848,2368,1,1,0,618,0,0,0,0,0,'1',0,[
]).
box('white','',2456,960,3784,2096,1,1,0,726,0,0,0,0,0,'1',0,[
]).
box('SkyBlue','',1472,640,2344,1664,1,1,0,253,0,0,0,0,0,'1',0,[
]).
box('SkyBlue','',64,640,1408,1536,1,1,0,67,0,0,0,0,0,'1',0,[
]).
box('white','',936,800,1384,1088,1,1,0,190,0,0,0,0,0,'1',0,[
]).
box('white','',368,800,912,1088,1,1,0,164,0,0,0,0,0,'1',0,[
]).
box('white','',96,800,344,1088,1,1,0,142,0,0,0,0,0,'1',0,[
]).
text('black',1032,22,1,0,1,3275,165,0,134,31,0,0,0,0,2,3275,165,0,0,"",0,0,0,0,156,'',[
minilines(3275,165,0,0,0,0,0,[
mini_line(3275,134,31,0,0,0,[
str_block(0,3275,134,31,0,-8,0,0,0,[
str_seg('black','Helvetica-Bold',1,829440,3275,134,31,0,-8,0,0,0,0,0,
	"StreamIt: A Compiler for Streaming Applications")])
])
])]).
text('black',2688,189,3,1,1,4227,249,26,67,16,0,0,0,0,2,4227,249,0,0,"",0,0,0,0,256,'',[
minilines(4227,249,0,0,1,0,0,[
mini_line(4227,67,16,0,0,0,[
str_block(0,4227,67,16,0,-2,0,0,0,[
str_seg('black','Helvetica',0,414720,4227,67,16,0,-2,0,0,0,0,0,
	"Bill Thies, Michal Karczmarek, Michael Gordon, David Maze, Jeremy Wong, Henry Hoffmann, Matthew Brown, and Saman Amarasinghe")])
]),
mini_line(1034,67,16,0,0,0,[
str_block(0,1034,67,16,0,-2,0,0,0,[
str_seg('black','Helvetica',0,414720,1034,67,16,0,-2,0,0,0,0,0,
	"Laboratory for Computer Science")])
]),
mini_line(1186,67,16,0,0,0,[
str_block(0,1186,67,16,0,-3,0,0,0,[
str_seg('black','Helvetica',0,414720,1186,67,16,0,-3,0,0,0,0,0,
	"Massachusetts Institute of Technology")])
])
])]).
text('black',96,656,3,0,1,646,120,82,32,8,0,0,0,0,2,646,120,-5,0,"",0,0,0,0,688,'',[
minilines(646,120,-5,0,0,0,0,[
mini_line(622,32,8,0,0,0,[
str_block(0,622,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,622,32,8,0,-2,0,0,0,0,0,
	"* Oriented towards continuous data streams")])
]),
mini_line(417,32,8,-5,0,0,[
str_block(0,333,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,333,32,8,0,-8,0,0,0,0,0,
	"* Computation done in ")]),
str_block(0,84,32,8,-5,0,0,0,0,[
str_seg('black','Times-Italic',2,207360,84,32,8,-5,0,0,0,0,0,0,
	"filters")])
]),
mini_line(646,32,8,0,0,0,[
str_block(0,646,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,646,32,8,0,-2,0,0,0,0,0,
	"* Three language constructs to connect filters")])
])
])]).
group([
box('blue','',64,512,1408,640,1,1,0,37,0,0,0,0,0,'1',0,[
]),
text('black',736,535,1,1,1,1112,83,35,67,16,0,0,0,0,2,1112,83,0,0,"",0,0,0,0,602,'',[
minilines(1112,83,0,0,1,0,0,[
mini_line(1112,67,16,0,0,0,[
str_block(0,1112,67,16,0,-6,0,0,0,[
str_seg('white','Helvetica-Bold',1,414720,1112,67,16,0,-6,0,0,0,0,0,
	"Streaming Model of Computation")])
])
])])
],
108,0,0,[
]).
box('black','',128,896,320,928,0,1,1,113,0,0,0,0,0,'1',0,[
]).
box('black','',128,952,320,984,0,1,1,115,0,0,0,0,0,'1',0,[
]).
box('black','',128,1008,320,1040,0,1,1,116,0,0,0,0,0,'1',0,[
]).
poly('black','',2,[
	224,864,224,896],1,1,1,117,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	224,928,224,952],1,1,1,123,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	224,984,224,1008],1,1,1,124,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	224,1040,224,1064],1,1,1,125,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',400,952,592,984,0,1,1,126,0,0,0,0,0,'1',0,[
]).
box('black','',696,952,888,984,0,1,1,127,0,0,0,0,0,'1',0,[
]).
box('black','',960,952,1152,984,0,1,1,128,0,0,0,0,0,'1',0,[
]).
text('black',624,936,1,0,1,27,40,131,32,8,0,0,0,0,2,27,40,0,0,"",0,0,0,0,968,'',[
minilines(27,40,0,0,0,0,0,[
mini_line(27,32,8,0,0,0,[
str_block(0,27,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-3,0,0,0,0,0,
	"...")])
])
])]).
poly('black','',2,[
	640,864,640,896],1,1,1,133,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	640,896,488,952],1,1,1,134,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	640,896,608,952],1,1,1,135,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	640,896,672,952],1,1,1,136,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	640,896,800,952],1,1,1,137,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',224,806,1,1,1,136,42,140,34,8,0,0,0,0,2,136,42,0,0,"",0,0,0,0,840,'',[
minilines(136,42,0,0,1,0,0,[
mini_line(136,34,8,0,0,0,[
str_block(0,136,34,8,0,-1,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,136,34,8,0,-1,0,0,0,0,0,
	"Pipeline")])
])
])]).
text('black',640,806,1,1,1,161,42,168,34,8,0,0,0,0,2,161,42,0,0,"",0,0,0,0,840,'',[
minilines(161,42,0,0,1,0,0,[
mini_line(161,34,8,0,0,0,[
str_block(0,161,34,8,0,-4,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,161,34,8,0,-4,0,0,0,0,0,
	"Split/Join")])
])
])]).
poly('black','',2,[
	488,984,640,1032],1,1,1,171,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	800,984,640,1032],1,1,1,172,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	608,984,640,1032],1,1,1,176,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	640,984,640,1032],1,1,1,177,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	672,984,640,1032],1,1,1,179,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	640,896,640,952],1,1,1,185,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	640,1032,640,1064],1,1,1,186,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',1176,952,1368,984,0,1,1,188,0,0,0,0,0,'1',0,[
]).
text('black',1160,814,1,1,1,261,42,194,34,8,0,0,0,0,2,261,42,0,0,"",0,0,0,0,848,'',[
minilines(261,42,0,0,1,0,0,[
mini_line(261,34,8,0,0,0,[
str_block(0,261,34,8,0,-3,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,261,34,8,0,-3,0,0,0,0,0,
	"Feedback Loop")])
])
])]).
poly('black','',2,[
	1272,984,1272,1016],1,1,1,203,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1272,1016,1272,1048],1,1,1,204,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1272,888,1272,920],1,1,1,210,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1272,920,1272,952],1,1,1,211,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',3,[
	1056,952,1056,920,1272,920],1,1,1,212,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',3,[
	1272,1016,1056,1016,1056,984],1,1,1,213,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',96,1104,10,0,1,1294,400,217,32,8,0,0,0,0,2,1294,400,-3,1,"",0,0,0,0,1136,'',[
minilines(1294,400,-3,1,0,0,0,[
mini_line(1208,32,8,0,0,0,[
str_block(0,1208,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1208,32,8,0,-1,0,0,0,0,0,
	"* Splitters and joiners implicit in split/joins and feedback loops; user specifies policy")])
]),
mini_line(746,32,8,0,0,0,[
str_block(0,746,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,746,32,8,0,-2,0,0,0,0,0,
	"   (duplicating splitters, round-robin splitters/joiners)")])
]),
mini_line(809,32,8,0,0,0,[
str_block(0,809,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,809,32,8,0,-2,0,0,0,0,0,
	"* Composite objects can be used in place of filters above")])
]),
mini_line(886,32,8,0,1,0,[
str_block(0,338,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,338,32,8,0,-8,0,0,0,0,0,
	"* Primitive filters have ")]),
str_block(0,47,32,8,0,1,0,0,0,[
str_seg('black','Times-Italic',2,207360,47,32,8,0,1,0,0,0,0,0,
	"init")]),
str_block(0,68,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,68,32,8,0,-8,0,0,0,0,0,
	" and ")]),
str_block(0,72,32,8,0,1,0,0,0,[
str_seg('black','Times-Italic',2,207360,72,32,8,0,1,0,0,0,0,0,
	"work")]),
str_block(0,361,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,361,32,8,0,-2,0,0,0,0,0,
	" functions, per-filter state")])
]),
mini_line(1224,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,138,32,8,0,0,0,0,0,[
str_seg('black','Times-Italic',2,207360,138,32,8,0,0,0,0,0,0,0,
	"Messages")]),
str_block(0,1059,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1059,32,8,0,-2,0,0,0,0,0,
	" can be sent between filters for out-of-band information (e.g. sampling rate")])
]),
mini_line(1189,32,8,-3,0,0,[
str_block(0,539,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,539,32,8,0,-8,0,0,0,0,0,
	"   changes); senders send messages to ")]),
str_block(0,101,32,8,-3,0,0,0,0,[
str_seg('black','Times-Italic',2,207360,101,32,8,-3,0,0,0,0,0,0,
	"portals")]),
str_block(0,549,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,549,32,8,0,-2,0,0,0,0,0,
	", and message is broadcast to all filters")])
]),
mini_line(557,32,8,0,0,0,[
str_block(0,557,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,557,32,8,0,-2,0,0,0,0,0,
	"   attached to the portal after some time")])
]),
mini_line(1294,32,8,0,0,0,[
str_block(0,1294,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1294,32,8,0,-1,0,0,0,0,0,
	"* Messages may have timing constraints, expressed in number of executions of the sending")])
]),
mini_line(225,32,8,0,0,0,[
str_block(0,225,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,225,32,8,0,0,0,0,0,0,0,
	"   work function")])
]),
mini_line(426,32,8,0,0,0,[
str_block(0,426,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,426,32,8,0,-3,0,0,0,0,0,
	"* No concept of \"global time\"")])
])
])]).
box('SkyBlue','',64,1728,1408,4352,1,1,0,220,0,0,0,0,0,'1',0,[
]).
group([
box('blue','',64,1600,1408,1728,1,1,0,222,0,0,0,0,0,'1',0,[
]),
text('black',736,1623,1,1,1,618,83,223,67,16,0,0,0,0,2,618,83,0,0,"",0,0,0,0,1690,'',[
minilines(618,83,0,0,1,0,0,[
mini_line(618,67,16,0,0,0,[
str_block(0,618,67,16,0,-2,0,0,0,[
str_seg('white','Helvetica-Bold',1,414720,618,67,16,0,-2,0,0,0,0,0,
	"Example FIR Filter")])
])
])])
],
221,0,0,[
]).
text('black',96,1752,2,0,1,815,80,227,32,8,0,0,0,0,2,815,80,0,0,"",0,0,0,0,1784,'',[
minilines(815,80,0,0,0,0,0,[
mini_line(815,32,8,0,0,0,[
str_block(0,815,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,815,32,8,0,0,0,0,0,0,0,
	"* StreamIt uses filters as fundamental computational unit")])
]),
mini_line(715,32,8,0,0,0,[
str_block(0,715,32,8,0,-4,0,0,0,[
str_seg('black','Times-Roman',0,207360,715,32,8,0,-4,0,0,0,0,0,
	"* Straightforward implementation of an FIR filter:")])
])
])]).
box('white','',88,1840,1384,2344,1,1,0,231,0,0,0,0,0,'1',0,[
]).
text('black',104,1853,18,0,1,600,432,233,19,5,0,0,0,0,2,600,432,0,0,"",0,0,0,0,1872,'',[
minilines(600,432,0,0,0,0,0,[
mini_line(240,19,5,0,0,0,[
str_block(0,240,19,5,0,-2,0,0,0,[
str_seg('black','Courier',0,138240,240,19,5,0,-2,0,0,0,0,0,
	"filter FIRFilter")])
]),
mini_line(15,19,5,0,0,0,[
str_block(0,15,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,15,19,5,0,-5,0,0,0,0,0,
	"{")])
]),
mini_line(285,19,5,0,0,0,[
str_block(0,285,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,285,19,5,0,-6,0,0,0,0,0,
	"  int numberOfTaps;")])
]),
mini_line(240,19,5,0,0,0,[
str_block(0,240,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,240,19,5,0,-6,0,0,0,0,0,
	"  float COEFF[];")])
]),
mini_line(0,19,5,0,0,0,[
str_block(0,0,19,5,0,0,0,0,0,[
str_seg('black','Courier',0,138240,0,19,5,0,0,0,0,0,0,0,
	"")])
]),
mini_line(285,19,5,0,0,0,[
str_block(0,285,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,285,19,5,0,-8,0,0,0,0,0,
	"  init(int numTaps)")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  {")])
]),
mini_line(150,19,5,0,0,0,[
str_block(0,150,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,150,19,5,0,-6,0,0,0,0,0,
	"    int i;")])
]),
mini_line(570,19,5,0,0,0,[
str_block(0,570,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,570,19,5,0,-6,0,0,0,0,0,
	"    input = new Channel(Float.TYPE, 1,")])
]),
mini_line(225,19,5,0,0,0,[
str_block(0,225,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,225,19,5,0,-6,0,0,0,0,0,
	"      numTaps);")])
]),
mini_line(600,19,5,0,0,0,[
str_block(0,600,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,600,19,5,0,-6,0,0,0,0,0,
	"    output = new Channel(Float.TYPE, 1);")])
]),
mini_line(405,19,5,0,0,0,[
str_block(0,405,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,405,19,5,0,-6,0,0,0,0,0,
	"    numberOfTaps = numTaps;")])
]),
mini_line(465,19,5,0,0,0,[
str_block(0,465,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,465,19,5,0,-6,0,0,0,0,0,
	"    COEFF = new float[numTaps];")])
]),
mini_line(570,19,5,0,0,0,[
str_block(0,570,19,5,0,-1,0,0,0,[
str_seg('black','Courier',0,138240,570,19,5,0,-1,0,0,0,0,0,
	"    // Should have better way to build")])
]),
mini_line(345,19,5,0,0,0,[
str_block(0,345,19,5,0,-3,0,0,0,[
str_seg('black','Courier',0,138240,345,19,5,0,-3,0,0,0,0,0,
	"    // FIR coefficients")])
]),
mini_line(495,19,5,0,0,0,[
str_block(0,495,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,495,19,5,0,-8,0,0,0,0,0,
	"    for (i = 0; i < numTaps; i++)")])
]),
mini_line(285,19,5,0,0,0,[
str_block(0,285,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,285,19,5,0,-6,0,0,0,0,0,
	"      COEFF[i] = i;")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  }")])
])
])]).
text('black',752,1853,20,0,1,615,480,236,19,5,0,0,0,0,2,615,480,0,0,"",0,0,0,0,1872,'',[
minilines(615,480,0,0,0,0,0,[
mini_line(120,19,5,0,0,0,[
str_block(0,120,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,120,19,5,0,-8,0,0,0,0,0,
	"  work()")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  {")])
]),
mini_line(150,19,5,0,0,0,[
str_block(0,150,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,150,19,5,0,-6,0,0,0,0,0,
	"    int i;")])
]),
mini_line(270,19,5,0,0,0,[
str_block(0,270,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,270,19,5,0,-6,0,0,0,0,0,
	"    float sum = 0;")])
]),
mini_line(570,19,5,0,0,0,[
str_block(0,570,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,570,19,5,0,-8,0,0,0,0,0,
	"    for (i = 0; i < numberOfTaps; i++)")])
]),
mini_line(615,19,5,0,0,0,[
str_block(0,615,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,615,19,5,0,-6,0,0,0,0,0,
	"      sum += input.peekFloat(i)*COEFF[i];")])
]),
mini_line(315,19,5,0,0,0,[
str_block(0,315,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,315,19,5,0,-6,0,0,0,0,0,
	"    input.popFloat();")])
]),
mini_line(390,19,5,0,0,0,[
str_block(0,390,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,390,19,5,0,-6,0,0,0,0,0,
	"    output.pushFloat(sum);")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  }")])
]),
mini_line(15,19,5,0,0,0,[
str_block(0,15,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,15,19,5,0,-5,0,0,0,0,0,
	"}")])
]),
mini_line(0,19,5,0,0,0,[
str_block(0,0,19,5,0,0,0,0,0,[
str_seg('black','Courier',0,138240,0,19,5,0,0,0,0,0,0,0,
	"")])
]),
mini_line(195,19,5,0,0,0,[
str_block(0,195,19,5,0,-1,0,0,0,[
str_seg('black','Courier',0,138240,195,19,5,0,-1,0,0,0,0,0,
	"streamit Main")])
]),
mini_line(15,19,5,0,0,0,[
str_block(0,15,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,15,19,5,0,-5,0,0,0,0,0,
	"{")])
]),
mini_line(120,19,5,0,0,0,[
str_block(0,120,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,120,19,5,0,-8,0,0,0,0,0,
	"  init()")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  {")])
]),
mini_line(390,19,5,0,0,0,[
str_block(0,390,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,390,19,5,0,-6,0,0,0,0,0,
	"    add(new DataSource());")])
]),
mini_line(390,19,5,0,0,0,[
str_block(0,390,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,390,19,5,0,-6,0,0,0,0,0,
	"    add(new FIRFilter(N));")])
]),
mini_line(345,19,5,0,0,0,[
str_block(0,345,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,345,19,5,0,-6,0,0,0,0,0,
	"    add(new Display());")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  }")])
]),
mini_line(15,19,5,0,0,0,[
str_block(0,15,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,15,19,5,0,-5,0,0,0,0,0,
	"}")])
])
])]).
text('black',96,2360,4,0,1,969,160,249,32,8,0,0,0,0,2,969,160,0,0,"",0,0,0,0,2392,'',[
minilines(969,160,0,0,0,0,0,[
mini_line(681,32,8,0,0,0,[
str_block(0,681,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,681,32,8,0,-2,0,0,0,0,0,
	"* FIRFilter module is readily used in other code")])
]),
mini_line(969,32,8,0,0,0,[
str_block(0,969,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,969,32,8,0,0,0,0,0,0,0,
	"* Compiler, not module author, takes responsibility for optimization")])
]),
mini_line(792,32,8,0,0,0,[
str_block(0,792,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,792,32,8,0,-2,0,0,0,0,0,
	"* Language gives well-defined interface between filters")])
]),
mini_line(809,32,8,0,0,0,[
str_block(0,809,32,8,0,-4,0,0,0,[
str_seg('black','Times-Roman',0,207360,809,32,8,0,-4,0,0,0,0,0,
	"* \"Performance-oriented\" implementation might be in C:")])
])
])]).
group([
box('blue','',1472,512,2344,640,1,1,0,255,0,0,0,0,0,'1',0,[
]),
text('black',1908,535,1,1,1,613,83,256,67,16,0,0,0,0,2,613,83,0,0,"",0,0,0,0,602,'',[
minilines(613,83,0,0,1,0,0,[
mini_line(613,67,16,0,0,0,[
str_block(0,613,67,16,0,-2,0,0,0,[
str_seg('white','Helvetica-Bold',1,414720,613,67,16,0,-2,0,0,0,0,0,
	"StreamIt Compiler")])
])
])])
],
254,0,0,[
]).
text('black',1512,656,4,0,1,810,160,260,32,8,0,0,0,0,2,810,160,0,0,"",0,0,0,0,688,'',[
minilines(810,160,0,0,0,0,0,[
mini_line(583,32,8,0,0,0,[
str_block(0,583,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,583,32,8,0,0,0,0,0,0,0,
	"* Compiler based on Kopi Java compiler")])
]),
mini_line(762,32,8,0,0,0,[
str_block(0,762,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,762,32,8,0,-1,0,0,0,0,0,
	"* Uses existing Java infrastructure to build high-level")])
]),
mini_line(810,32,8,0,0,0,[
str_block(0,810,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,810,32,8,0,-3,0,0,0,0,0,
	"   stream graph, optimize, reduce to low-level constructs,")])
]),
mini_line(285,32,8,0,0,0,[
str_block(0,285,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,285,32,8,0,-2,0,0,0,0,0,
	"   and output C code")])
])
])]).
text('black',1512,1520,3,0,1,716,120,353,32,8,0,0,0,0,2,716,120,0,0,"",0,0,0,0,1552,'',[
minilines(716,120,0,0,0,0,0,[
mini_line(716,32,8,0,0,0,[
str_block(0,716,32,8,0,-4,0,0,0,[
str_seg('black','Times-Roman',0,207360,716,32,8,0,-4,0,0,0,0,0,
	"* StreamIt programs are also legal Java programs;")])
]),
mini_line(653,32,8,0,0,0,[
str_block(0,653,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,653,32,8,0,-1,0,0,0,0,0,
	"   provided run-time library allows direct Java")])
]),
mini_line(196,32,8,0,0,0,[
str_block(0,196,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,196,32,8,0,0,0,0,0,0,0,
	"   compilation")])
])
])]).
group([
box('blue','',1472,1728,2344,1856,1,1,0,357,0,0,0,0,0,'1',0,[
]),
text('black',1908,1751,1,1,1,429,83,358,67,16,0,0,0,0,2,429,83,0,0,"",0,0,0,0,1818,'',[
minilines(429,83,0,0,1,0,0,[
mini_line(429,67,16,0,0,0,[
str_block(0,429,67,16,0,-6,0,0,0,[
str_seg('white','Helvetica-Bold',1,414720,429,67,16,0,-6,0,0,0,0,0,
	"Optimization")])
])
])])
],
356,0,0,[
]).
text('black',1512,1872,11,0,1,778,440,365,32,8,0,0,0,0,2,778,440,0,1,"",0,0,0,0,1904,'',[
minilines(778,440,0,1,0,0,0,[
mini_line(752,32,8,0,1,0,[
str_block(0,752,32,8,0,1,0,0,0,[
str_seg('black','Times-Roman',0,207360,752,32,8,0,1,0,0,0,0,0,
	"* Some overhead in StreamIt C library with pushing/")])
]),
mini_line(501,32,8,0,0,0,[
str_block(0,501,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,501,32,8,0,-3,0,0,0,0,0,
	"   popping data, splitters, joiners, ...")])
]),
mini_line(728,32,8,0,0,0,[
str_block(0,728,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,728,32,8,0,0,0,0,0,0,0,
	"* Rearrange filters for better performance on target")])
]),
mini_line(637,32,8,0,0,0,[
str_block(0,637,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,637,32,8,0,-2,0,0,0,0,0,
	"   architecture (e.g. Pentium MMX, AltiVec)")])
]),
mini_line(732,32,8,0,0,0,[
str_block(0,732,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,732,32,8,0,-1,0,0,0,0,0,
	"* General philosophy: allow programmer to write a")])
]),
mini_line(744,32,8,0,0,0,[
str_block(0,744,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,744,32,8,0,-2,0,0,0,0,0,
	"   natural program, then optimize to get performance")])
]),
mini_line(767,32,8,0,0,0,[
str_block(0,767,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,767,32,8,0,-1,0,0,0,0,0,
	"* Compiler, not programmer, is responsible for taking")])
]),
mini_line(519,32,8,0,0,0,[
str_block(0,519,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,519,32,8,0,-2,0,0,0,0,0,
	"   advantage of architectural features")])
]),
mini_line(778,32,8,0,0,0,[
str_block(0,778,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,778,32,8,0,-1,0,0,0,0,0,
	"* Still work in progress: currently only have horizontal")])
]),
mini_line(765,32,8,0,0,0,[
str_block(0,765,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,765,32,8,0,-2,0,0,0,0,0,
	"   fusion, limited vertical fusion, and only when filters")])
]),
mini_line(190,32,8,0,0,0,[
str_block(0,190,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,190,32,8,0,0,0,0,0,0,0,
	"   do not peek")])
])
])]).
box('white','',1504,2344,2312,2760,1,1,0,368,0,0,0,0,0,'1',0,[
]).
box('black','',1640,2472,1832,2504,0,1,1,385,0,0,0,0,0,'1',0,[
]).
box('black','',1640,2528,1832,2560,0,1,1,386,0,0,0,0,0,'1',0,[
]).
box('black','',1640,2584,1832,2616,0,1,1,387,0,0,0,0,0,'1',0,[
]).
poly('black','',2,[
	1736,2440,1736,2472],1,1,1,388,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1736,2504,1736,2528],1,1,1,389,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1736,2560,1736,2584],1,1,1,390,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1736,2616,1736,2640],1,1,1,391,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',1976,2528,2168,2560,0,1,1,392,0,0,0,0,0,'1',0,[
]).
poly('black','',2,[
	2072,2496,2072,2528],1,1,1,393,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2072,2560,2072,2584],1,1,1,394,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',1904,2366,1,1,1,256,42,395,34,8,0,0,0,0,2,256,42,0,0,"",0,0,0,0,2400,'',[
minilines(256,42,0,0,1,0,0,[
mini_line(256,34,8,0,0,0,[
str_block(0,256,34,8,0,-4,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,256,34,8,0,-4,0,0,0,0,0,
	"Vertical Fusion")])
])
])]).
poly('black','',2,[
	1864,2544,1944,2544],1,1,1,397,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',1528,2656,2,0,1,673,80,398,32,8,0,0,0,0,2,673,80,0,0,"",0,0,0,0,2688,'',[
minilines(673,80,0,0,0,0,0,[
mini_line(561,32,8,0,0,0,[
str_block(0,561,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,561,32,8,0,-2,0,0,0,0,0,
	"* Combine adjacent filters in a pipeline")])
]),
mini_line(673,32,8,0,0,0,[
str_block(0,673,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,673,32,8,0,0,0,0,0,0,0,
	"* Minimizes push/pop, work function overhead")])
])
])]).
box('white','',1504,2784,2312,3200,1,1,0,401,0,0,0,0,0,'1',0,[
]).
box('black','',2088,2968,2280,3000,0,1,1,409,0,0,0,0,0,'1',0,[
]).
poly('black','',2,[
	2184,2936,2184,2968],1,1,1,410,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2184,3000,2184,3024],1,1,1,411,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',1904,2806,1,1,1,303,42,412,34,8,0,0,0,0,2,303,42,0,0,"",0,0,0,0,2840,'',[
minilines(303,42,0,0,1,0,0,[
mini_line(303,34,8,0,0,0,[
str_block(0,303,34,8,0,-4,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,303,34,8,0,-4,0,0,0,0,0,
	"Horizontal Fusion")])
])
])]).
poly('black','',2,[
	1976,2984,2056,2984],1,1,1,413,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',1528,3096,2,0,1,562,80,414,32,8,0,0,0,0,2,562,80,0,0,"",0,0,0,0,3128,'',[
minilines(562,80,0,0,0,0,0,[
mini_line(562,32,8,0,0,0,[
str_block(0,562,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,562,32,8,0,0,0,0,0,0,0,
	"* Combine parallel filters in a split/join")])
]),
mini_line(499,32,8,0,0,0,[
str_block(0,499,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,499,32,8,0,0,0,0,0,0,0,
	"* Removes splitter/joiner overhead")])
])
])]).
box('black','',1536,2968,1688,3000,0,1,1,461,0,0,0,0,0,'1',0,[
]).
text('black',1720,2952,1,0,1,27,40,463,32,8,0,0,0,0,2,27,40,0,0,"",0,0,0,0,2984,'',[
minilines(27,40,0,0,0,0,0,[
mini_line(27,32,8,0,0,0,[
str_block(0,27,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-3,0,0,0,0,0,
	"...")])
])
])]).
poly('black','',2,[
	1736,2880,1736,2912],1,1,1,464,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1736,2912,1608,2968],1,1,1,465,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1736,2912,1704,2968],1,1,1,466,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1736,2912,1768,2968],1,1,1,467,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1736,2912,1872,2968],1,1,1,468,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1608,3000,1736,3048],1,1,1,469,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1872,3000,1736,3048],1,1,1,470,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1704,3000,1736,3048],1,1,1,471,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1736,3000,1736,3048],1,1,1,472,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1768,3000,1736,3048],1,1,1,473,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1736,2912,1736,2968],1,1,1,474,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1736,3048,1736,3080],1,1,1,475,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',1792,2968,1944,3000,0,1,1,483,0,0,0,0,0,'1',0,[
]).
box('white','',1504,3232,2312,3648,1,1,0,488,0,0,0,0,0,'1',0,[
]).
box('black','',1544,3416,1736,3448,0,1,1,489,0,0,0,0,0,'1',0,[
]).
poly('black','',2,[
	1640,3384,1640,3416],1,1,1,490,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1640,3448,1640,3472],1,1,1,491,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',1904,3254,1,1,1,225,42,492,34,8,0,0,0,0,2,225,42,0,0,"",0,0,0,0,3288,'',[
minilines(225,42,0,0,1,0,0,[
mini_line(225,34,8,0,0,0,[
str_block(0,225,34,8,0,-4,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,225,34,8,0,-4,0,0,0,0,0,
	"Filter Fission")])
])
])]).
poly('black','',2,[
	1760,3432,1840,3432],1,1,1,493,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',1528,3544,2,0,1,765,80,494,32,8,0,0,0,0,2,765,80,0,0,"",0,0,0,0,3576,'',[
minilines(765,80,0,0,0,0,0,[
mini_line(494,32,8,0,0,0,[
str_block(0,494,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,494,32,8,0,0,0,0,0,0,0,
	"* Duplicate a filter into a split/join")])
]),
mini_line(765,32,8,0,0,0,[
str_block(0,765,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,765,32,8,0,0,0,0,0,0,0,
	"* Filter parallelism in preparation for SIMD back-end")])
])
])]).
box('black','',1872,3416,2024,3448,0,1,1,495,0,0,0,0,0,'1',0,[
]).
text('black',2056,3400,1,0,1,27,40,496,32,8,0,0,0,0,2,27,40,0,0,"",0,0,0,0,3432,'',[
minilines(27,40,0,0,0,0,0,[
mini_line(27,32,8,0,0,0,[
str_block(0,27,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-3,0,0,0,0,0,
	"...")])
])
])]).
poly('black','',2,[
	2072,3328,2072,3360],1,1,1,497,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2072,3360,1944,3416],1,1,1,498,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2072,3360,2040,3416],1,1,1,499,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2072,3360,2104,3416],1,1,1,500,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2072,3360,2208,3416],1,1,1,501,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1944,3448,2072,3496],1,1,1,502,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2208,3448,2072,3496],1,1,1,503,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2040,3448,2072,3496],1,1,1,504,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2072,3448,2072,3496],1,1,1,505,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2104,3448,2072,3496],1,1,1,506,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2072,3360,2072,3416],1,1,1,507,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2072,3496,2072,3528],1,1,1,508,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',2128,3416,2280,3448,0,1,1,509,0,0,0,0,0,'1',0,[
]).
box('white','',1504,3680,2312,4328,1,1,0,512,0,0,0,0,0,'1',0,[
]).
text('black',1904,3702,1,1,1,438,42,516,34,8,0,0,0,0,2,438,42,0,0,"",0,0,0,0,3736,'',[
minilines(438,42,0,0,1,0,0,[
mini_line(438,34,8,0,0,0,[
str_block(0,438,34,8,0,-4,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,438,34,8,0,-4,0,0,0,0,0,
	"Synchronization Removal")])
])
])]).
poly('black','',2,[
	1848,3936,1928,3936],1,1,1,517,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',1520,4152,4,0,1,729,160,518,32,8,0,0,0,0,2,729,160,0,0,"",0,0,0,0,4184,'',[
minilines(729,160,0,0,0,0,0,[
mini_line(726,32,8,0,0,0,[
str_block(0,726,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,726,32,8,0,0,0,0,0,0,0,
	"* If two split/joins are in a pipeline, and the second")])
]),
mini_line(674,32,8,0,0,0,[
str_block(0,674,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,674,32,8,0,-3,0,0,0,0,0,
	"   splitter has the same policy as the first joiner,")])
]),
mini_line(729,32,8,0,0,0,[
str_block(0,729,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,729,32,8,0,-2,0,0,0,0,0,
	"   combine the split/joins, placing component filters")])
]),
mini_line(192,32,8,0,0,0,[
str_block(0,192,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,192,32,8,0,-2,0,0,0,0,0,
	"   in pipelines")])
])
])]).
box('black','',1944,3944,2064,3976,0,1,1,519,0,0,0,0,0,'1',0,[
]).
text('black',2096,3928,1,0,1,27,40,520,32,8,0,0,0,0,2,27,40,0,0,"",0,0,0,0,3960,'',[
minilines(27,40,0,0,0,0,0,[
mini_line(27,32,8,0,0,0,[
str_block(0,27,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-3,0,0,0,0,0,
	"...")])
])
])]).
poly('black','',2,[
	2112,3800,2112,3832],1,1,1,521,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2112,3832,2000,3888],1,1,1,522,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2112,3832,2080,3888],1,1,1,523,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2112,3832,2144,3888],1,1,1,524,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2112,3832,2232,3888],1,1,1,525,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2000,3976,2112,4024],1,1,1,526,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2232,3976,2112,4024],1,1,1,527,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2080,3976,2112,4024],1,1,1,528,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2112,3976,2112,4024],1,1,1,529,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2144,3976,2112,4024],1,1,1,530,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2112,3832,2112,3888],1,1,1,531,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2112,4024,2112,4056],1,1,1,532,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',2168,3944,2288,3976,0,1,1,533,0,0,0,0,0,'1',0,[
]).
box('black','',1528,3856,1648,3888,0,1,1,577,0,0,0,0,0,'1',0,[
]).
text('black',1680,3840,1,0,1,27,40,578,32,8,0,0,0,0,2,27,40,0,0,"",0,0,0,0,3872,'',[
minilines(27,40,0,0,0,0,0,[
mini_line(27,32,8,0,0,0,[
str_block(0,27,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-3,0,0,0,0,0,
	"...")])
])
])]).
poly('black','',2,[
	1696,3768,1696,3800],1,1,1,579,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3800,1584,3856],1,1,1,580,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3800,1664,3856],1,1,1,581,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3800,1728,3856],1,1,1,582,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3800,1816,3856],1,1,1,583,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1584,3888,1696,3936],1,1,1,584,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1816,3888,1696,3936],1,1,1,585,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1664,3888,1696,3936],1,1,1,586,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3888,1696,3936],1,1,1,587,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1728,3888,1696,3936],1,1,1,588,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3800,1696,3856],1,1,1,589,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3936,1696,3968],1,1,1,590,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',1752,3856,1872,3888,0,1,1,591,0,0,0,0,0,'1',0,[
]).
box('black','',1528,4024,1648,4056,0,1,1,592,0,0,0,0,0,'1',0,[
]).
text('black',1680,4008,1,0,1,27,40,593,32,8,0,0,0,0,2,27,40,0,0,"",0,0,0,0,4040,'',[
minilines(27,40,0,0,0,0,0,[
mini_line(27,32,8,0,0,0,[
str_block(0,27,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-3,0,0,0,0,0,
	"...")])
])
])]).
poly('black','',2,[
	1696,3968,1584,4024],1,1,1,594,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3968,1664,4024],1,1,1,595,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3968,1728,4024],1,1,1,596,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3968,1816,4024],1,1,1,597,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1584,4056,1696,4104],1,1,1,598,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1816,4056,1696,4104],1,1,1,599,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1664,4056,1696,4104],1,1,1,600,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,4056,1696,4104],1,1,1,601,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1728,4056,1696,4104],1,1,1,602,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,3968,1696,4024],1,1,1,603,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	1696,4104,1696,4136],1,1,1,604,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',1752,4024,1872,4056,0,1,1,605,0,0,0,0,0,'1',0,[
]).
box('black','',1944,3888,2064,3920,0,1,1,606,0,0,0,0,0,'1',0,[
]).
text('black',2096,3872,1,0,1,27,40,607,32,8,0,0,0,0,2,27,40,0,0,"",0,0,0,0,3904,'',[
minilines(27,40,0,0,0,0,0,[
mini_line(27,32,8,0,0,0,[
str_block(0,27,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-3,0,0,0,0,0,
	"...")])
])
])]).
box('black','',2168,3888,2288,3920,0,1,1,608,0,0,0,0,0,'1',0,[
]).
poly('black','',2,[
	2000,3920,2000,3944],1,1,1,609,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2232,3920,2232,3944],1,1,1,610,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2080,3920,2080,3944],1,1,1,612,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2112,3920,2112,3944],1,1,1,613,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2144,3920,2144,3944],1,1,1,614,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
group([
box('blue','',2400,512,3848,640,1,1,0,620,0,0,0,0,0,'1',0,[
]),
text('black',3124,535,1,1,1,379,83,621,67,16,0,0,0,0,2,379,83,0,0,"",0,0,0,0,602,'',[
minilines(379,83,0,0,1,0,0,[
mini_line(379,67,16,0,0,0,[
str_block(0,379,67,16,0,-6,0,0,0,[
str_seg('white','Helvetica-Bold',1,414720,379,67,16,0,-6,0,0,0,0,0,
	"Scheduling")])
])
])])
],
619,0,0,[
]).
group([
box('white','',1604,832,2212,1504,1,1,0,340,0,0,0,0,0,'1',0,[
]),
group([
box('black','',1636,864,1884,912,0,1,1,262,0,0,0,0,0,'1',0,[
]),
text('black',1760,868,1,1,1,230,40,266,32,8,0,0,0,0,2,230,40,0,0,"",0,0,0,0,900,'',[
minilines(230,40,0,0,1,0,0,[
mini_line(230,32,8,0,0,0,[
str_block(0,230,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,230,32,8,0,-2,0,0,0,0,0,
	"StreamIt Source")])
])
])])
],
271,0,0,[
]),
group([
box('black','',1636,944,1884,992,0,1,1,273,0,0,0,0,0,'1',0,[
]),
text('black',1760,948,1,1,1,223,40,274,32,8,0,0,0,0,2,223,40,0,0,"",0,0,0,0,980,'',[
minilines(223,40,0,0,1,0,0,[
mini_line(223,32,8,0,0,0,[
str_block(0,223,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,223,32,8,0,0,0,0,0,0,0,
	"Kopi Front-End")])
])
])])
],
272,0,0,[
]),
group([
box('black','',1636,1024,1884,1072,0,1,1,279,0,0,0,0,0,'1',0,[
]),
text('black',1760,1028,1,1,1,199,40,280,32,8,0,0,0,0,2,199,40,0,0,"",0,0,0,0,1060,'',[
minilines(199,40,0,0,1,0,0,[
mini_line(199,32,8,0,0,0,[
str_block(0,199,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,199,32,8,0,0,0,0,0,0,0,
	"Stream Graph")])
])
])])
],
278,0,0,[
]),
group([
box('black','',1636,1104,1884,1152,0,1,1,288,0,0,0,0,0,'1',0,[
]),
text('black',1760,1108,1,1,1,188,40,289,32,8,0,0,0,0,2,188,40,0,0,"",0,0,0,0,1140,'',[
minilines(188,40,0,0,1,0,0,[
mini_line(188,32,8,0,0,0,[
str_block(0,188,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,188,32,8,0,0,0,0,0,0,0,
	"Optimization")])
])
])])
],
287,0,0,[
]),
group([
box('black','',1636,1184,1884,1232,0,1,1,294,0,0,0,0,0,'1',0,[
]),
text('black',1760,1188,1,1,1,157,40,295,32,8,0,0,0,0,2,157,40,0,0,"",0,0,0,0,1220,'',[
minilines(157,40,0,0,1,0,0,[
mini_line(157,32,8,0,0,0,[
str_block(0,157,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,157,32,8,0,-1,0,0,0,0,0,
	"Scheduling")])
])
])])
],
293,0,0,[
]),
group([
box('black','',1636,1264,1884,1312,0,1,1,300,0,0,0,0,0,'1',0,[
]),
text('black',1760,1268,1,1,1,137,40,301,32,8,0,0,0,0,2,137,40,0,0,"",0,0,0,0,1300,'',[
minilines(137,40,0,0,1,0,0,[
mini_line(137,32,8,0,0,0,[
str_block(0,137,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,137,32,8,0,-1,0,0,0,0,0,
	"Lowering")])
])
])])
],
299,0,0,[
]),
group([
box('black','',1636,1344,1884,1392,0,1,1,308,0,0,0,0,0,'1',0,[
]),
text('black',1760,1348,1,1,1,133,40,309,32,8,0,0,0,0,2,133,40,0,0,"",0,0,0,0,1380,'',[
minilines(133,40,0,0,1,0,0,[
mini_line(133,32,8,0,0,0,[
str_block(0,133,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,133,32,8,0,0,0,0,0,0,0,
	"C Output")])
])
])])
],
307,0,0,[
]),
group([
box('black','',1636,1424,1884,1472,0,1,1,316,0,0,0,0,0,'1',0,[
]),
text('black',1760,1428,1,1,1,240,40,317,32,8,0,0,0,0,2,240,40,0,0,"",0,0,0,0,1460,'',[
minilines(240,40,0,0,1,0,0,[
mini_line(240,32,8,0,0,0,[
str_block(0,240,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,240,32,8,0,0,0,0,0,0,0,
	"Native Compiler")])
])
])])
],
315,0,0,[
]),
poly('black','',2,[
	1760,912,1760,944],1,1,1,328,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]),
poly('black','',2,[
	1760,992,1760,1024],1,1,1,330,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]),
poly('black','',2,[
	1760,1072,1760,1104],1,1,1,331,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]),
poly('black','',2,[
	1760,1152,1760,1184],1,1,1,334,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]),
poly('black','',2,[
	1760,1232,1760,1264],1,1,1,335,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]),
poly('black','',2,[
	1760,1312,1760,1344],1,1,1,337,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]),
poly('black','',2,[
	1760,1392,1760,1424],1,1,1,338,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]),
group([
box('black','',1932,1344,2180,1392,0,1,1,627,5,0,0,0,0,'1',0,[
]),
text('black',2056,1348,1,1,1,205,40,628,32,8,0,0,0,0,2,205,40,0,0,"",0,0,0,0,1380,'',[
minilines(205,40,0,0,1,0,0,[
mini_line(205,32,8,0,0,0,[
str_block(0,205,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,205,32,8,0,0,0,0,0,0,0,
	"Parallelization")])
])
])])
],
626,0,0,[
]),
group([
box('black','',1932,1424,2180,1472,0,1,1,630,5,0,0,0,0,'1',0,[
]),
text('black',2056,1428,1,1,1,237,40,631,32,8,0,0,0,0,2,237,40,0,0,"",0,0,0,0,1460,'',[
minilines(237,40,0,0,1,0,0,[
mini_line(237,32,8,0,0,0,[
str_block(0,237,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,237,32,8,0,-1,0,0,0,0,0,
	"RAW Assembly")])
])
])])
],
629,0,0,[
]),
poly('black','',3,[
	1884,1288,2060,1288,2060,1344],1,1,1,640,0,0,5,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]),
poly('black','',2,[
	2060,1392,2060,1424],1,1,1,641,0,0,5,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
])
],
699,0,0,[
]).
xbm('black','',2496,992,3749,2069,0,700,0,212,189,0,0,1,0,0,212000,189000,1,0,0,0,1,0,0,
    "Fri Jan  4 15:36:09 2002","src/streams/docs/pldi-02/sched_diag.eps",[
    2496,896,2496,896,2694,1073,6327.47,0,0,6082.68,0,96],[
]).
text('black',2440,656,7,0,1,1349,280,710,32,8,0,0,0,0,2,1349,280,0,1,"",0,0,0,0,688,'',[
minilines(1349,280,0,1,0,0,0,[
mini_line(994,32,8,0,0,0,[
str_block(0,994,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,994,32,8,0,-2,0,0,0,0,0,
	"* Determine ordering for filters to execute given peek/pop/push ratios")])
]),
mini_line(1349,32,8,0,1,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,332,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,332,32,8,0,-1,0,0,0,0,0,
	"Initialization schedule")]),
str_block(0,990,32,8,0,1,0,0,0,[
str_seg('black','Times-Roman',0,207360,990,32,8,0,1,0,0,0,0,0,
	": if there are filters that peek more than they pop, run filters at start of")])
]),
mini_line(525,32,8,0,0,0,[
str_block(0,525,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,525,32,8,0,-2,0,0,0,0,0,
	"   program to prepare for steady state")])
]),
mini_line(1342,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,322,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,322,32,8,0,-1,0,0,0,0,0,
	"Steady-state schedule")]),
str_block(0,993,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,993,32,8,0,-2,0,0,0,0,0,
	": pattern of filter firings such that the number of items on data tapes is")])
]),
mini_line(627,32,8,0,0,0,[
str_block(0,627,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,627,32,8,0,0,0,0,0,0,0,
	"   the same after each steady-state execution")])
]),
mini_line(1329,32,8,0,0,0,[
str_block(0,1329,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1329,32,8,0,-1,0,0,0,0,0,
	"* Many different possible schedules; might want to minimize tape length, fire a filter as early")])
]),
mini_line(812,32,8,0,0,0,[
str_block(0,812,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,812,32,8,0,0,0,0,0,0,0,
	"   as possible, minimize length of schedule representation")])
])
])]).
box('SkyBlue','',3904,640,5320,1368,1,1,0,1004,0,0,0,0,0,'1',0,[
]).
group([
box('blue','',3904,512,5320,640,1,1,0,1006,0,0,0,0,0,'1',0,[
]),
text('black',4612,535,1,1,1,259,83,1007,67,16,0,0,0,0,2,259,83,0,0,"",0,0,0,0,602,'',[
minilines(259,83,0,0,1,0,0,[
mini_line(259,67,16,0,0,0,[
str_block(0,259,67,16,0,-4,0,0,0,[
str_seg('white','Helvetica-Bold',1,414720,259,67,16,0,-4,0,0,0,0,0,
	"Results")])
])
])])
],
1005,0,0,[
]).
box('SkyBlue','',2400,2560,3848,4352,1,1,0,1015,0,0,0,0,0,'1',0,[
]).
group([
box('blue','',2400,2432,3848,2560,1,1,0,1017,0,0,0,0,0,'1',0,[
]),
text('black',3124,2455,1,1,1,422,83,1018,67,16,0,0,0,0,2,422,83,0,0,"",0,0,0,0,2522,'',[
minilines(422,83,0,0,1,0,0,[
mini_line(422,67,16,0,0,0,[
str_block(0,422,67,16,0,-4,0,0,0,[
str_seg('white','Helvetica-Bold',1,414720,422,67,16,0,-4,0,0,0,0,0,
	"Applications")])
])
])])
],
1016,0,0,[
]).
box('SkyBlue','',3904,1536,5320,4352,1,1,0,1023,0,0,0,0,0,'1',0,[
]).
group([
box('blue','',3904,1408,5320,1536,1,1,0,1025,0,0,0,0,0,'1',0,[
]),
text('black',4612,1431,1,1,1,418,83,1026,67,16,0,0,0,0,2,418,83,0,0,"",0,0,0,0,1498,'',[
minilines(418,83,0,0,1,0,0,[
mini_line(418,67,16,0,0,0,[
str_block(0,418,67,16,0,-4,0,0,0,[
str_seg('white','Helvetica-Bold',1,414720,418,67,16,0,-4,0,0,0,0,0,
	"Future Work")])
])
])])
],
1024,0,0,[
]).
box('white','',2432,2592,3816,3408,1,1,0,1045,0,0,0,0,0,'1',0,[
]).
text('black',3120,2614,1,1,1,160,42,1046,34,8,0,0,0,0,2,160,42,0,0,"",0,0,0,0,2648,'',[
minilines(160,42,0,0,1,0,0,[
mini_line(160,34,8,0,0,0,[
str_block(0,160,34,8,0,-3,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,160,34,8,0,-3,0,0,0,0,0,
	"FM Radio")])
])
])]).
group([
box('black','',2996,2672,3244,2720,0,1,1,1097,0,0,0,0,0,'1',0,[
]),
text('black',3120,2676,1,1,1,156,40,1096,32,8,0,0,0,0,2,156,40,0,0,"",0,0,0,0,2708,'',[
minilines(156,40,0,0,1,0,0,[
mini_line(156,32,8,0,0,0,[
str_block(0,156,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,156,32,8,0,0,0,0,0,0,0,
	"FileReader")])
])
])])
],
1095,0,0,[
]).
group([
box('black','',2996,2752,3244,2800,0,1,1,1115,0,0,0,0,0,'1',0,[
]),
text('black',3120,2756,1,1,1,205,40,1116,32,8,0,0,0,0,2,205,40,0,0,"",0,0,0,0,2788,'',[
minilines(205,40,0,0,1,0,0,[
mini_line(205,32,8,0,0,0,[
str_block(0,205,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,205,32,8,0,0,0,0,0,0,0,
	"LowPassFilter")])
])
])])
],
1114,0,0,[
]).
group([
box('black','',2996,2832,3244,2880,0,1,1,1121,0,0,0,0,0,'1',0,[
]),
text('black',3120,2836,1,1,1,238,40,1122,32,8,0,0,0,0,2,238,40,0,0,"",0,0,0,0,2868,'',[
minilines(238,40,0,0,1,0,0,[
mini_line(238,32,8,0,0,0,[
str_block(0,238,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,238,32,8,0,0,0,0,0,0,0,
	"FMDemodulator")])
])
])])
],
1120,0,0,[
]).
group([
box('black','',2484,3008,2732,3056,0,1,1,1127,0,0,0,0,0,'1',0,[
]),
text('black',2608,3012,1,1,1,205,40,1128,32,8,0,0,0,0,2,205,40,0,0,"",0,0,0,0,3044,'',[
minilines(205,40,0,0,1,0,0,[
mini_line(205,32,8,0,0,0,[
str_block(0,205,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,205,32,8,0,0,0,0,0,0,0,
	"LowPassFilter")])
])
])])
],
1126,0,0,[
]).
group([
box('black','',2756,3008,3004,3056,0,1,1,1133,0,0,0,0,0,'1',0,[
]),
text('black',2880,3012,1,1,1,205,40,1134,32,8,0,0,0,0,2,205,40,0,0,"",0,0,0,0,3044,'',[
minilines(205,40,0,0,1,0,0,[
mini_line(205,32,8,0,0,0,[
str_block(0,205,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,205,32,8,0,0,0,0,0,0,0,
	"LowPassFilter")])
])
])])
],
1132,0,0,[
]).
poly('black','',2,[
	3120,2720,3120,2752],1,1,1,1153,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3120,2800,3120,2832],1,1,1,1156,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3120,2880,3120,2920],1,1,1,1157,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3120,2920,2744,2976],1,1,1,1158,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2744,2976,2600,3008],1,1,1,1159,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2744,2976,2888,3008],1,1,1,1160,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2888,3056,2744,3088],1,1,1,1161,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2600,3056,2744,3088],1,1,1,1162,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
group([
box('black','',2620,3120,2868,3168,0,1,1,1164,0,0,0,0,0,'1',0,[
]),
text('black',2744,3124,1,1,1,190,40,1165,32,8,0,0,0,0,2,190,40,0,0,"",0,0,0,0,3156,'',[
minilines(190,40,0,0,1,0,0,[
mini_line(190,32,8,0,0,0,[
str_block(0,190,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,190,32,8,0,0,0,0,0,0,0,
	"FloatSubtract")])
])
])])
],
1163,0,0,[
]).
poly('black','',2,[
	2744,3088,2744,3120],1,1,1,1167,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',2472,2944,3016,3184,0,1,1,1174,0,0,0,0,0,'1',0,[
]).
text('black',2472,2944,1,0,1,214,40,1175,32,8,0,0,0,0,2,214,40,0,0,"",0,0,0,0,2976,'',[
minilines(214,40,0,0,0,0,0,[
mini_line(214,32,8,0,0,0,[
str_block(0,214,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,214,32,8,0,0,0,0,0,0,0,
	"BandPassFilter")])
])
])]).
group([
box('black','',3236,3008,3484,3056,0,1,1,1180,0,0,0,0,0,'1',0,[
]),
text('black',3360,3012,1,1,1,205,40,1181,32,8,0,0,0,0,2,205,40,0,0,"",0,0,0,0,3044,'',[
minilines(205,40,0,0,1,0,0,[
mini_line(205,32,8,0,0,0,[
str_block(0,205,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,205,32,8,0,0,0,0,0,0,0,
	"LowPassFilter")])
])
])])
],
1179,0,0,[
]).
group([
box('black','',3508,3008,3756,3056,0,1,1,1183,0,0,0,0,0,'1',0,[
]),
text('black',3632,3012,1,1,1,205,40,1184,32,8,0,0,0,0,2,205,40,0,0,"",0,0,0,0,3044,'',[
minilines(205,40,0,0,1,0,0,[
mini_line(205,32,8,0,0,0,[
str_block(0,205,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,205,32,8,0,0,0,0,0,0,0,
	"LowPassFilter")])
])
])])
],
1182,0,0,[
]).
poly('black','',2,[
	3496,2976,3352,3008],1,1,1,1185,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3496,2976,3640,3008],1,1,1,1186,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3640,3056,3496,3088],1,1,1,1187,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3352,3056,3496,3088],1,1,1,1188,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
group([
box('black','',3372,3120,3620,3168,0,1,1,1190,0,0,0,0,0,'1',0,[
]),
text('black',3496,3124,1,1,1,190,40,1191,32,8,0,0,0,0,2,190,40,0,0,"",0,0,0,0,3156,'',[
minilines(190,40,0,0,1,0,0,[
mini_line(190,32,8,0,0,0,[
str_block(0,190,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,190,32,8,0,0,0,0,0,0,0,
	"FloatSubtract")])
])
])])
],
1189,0,0,[
]).
poly('black','',2,[
	3496,3088,3496,3120],1,1,1,1192,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',3224,2944,3768,3184,0,1,1,1193,0,0,0,0,0,'1',0,[
]).
text('black',3552,2944,1,0,1,214,40,1194,32,8,0,0,0,0,2,214,40,0,0,"",0,0,0,0,2976,'',[
minilines(214,40,0,0,0,0,0,[
mini_line(214,32,8,0,0,0,[
str_block(0,214,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,214,32,8,0,0,0,0,0,0,0,
	"BandPassFilter")])
])
])]).
poly('black','',2,[
	3120,2920,3496,2976],1,1,1,1195,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
group([
box('black','',2996,3248,3244,3296,0,1,1,1198,0,0,0,0,0,'1',0,[
]),
text('black',3120,3252,1,1,1,160,40,1199,32,8,0,0,0,0,2,160,40,0,0,"",0,0,0,0,3284,'',[
minilines(160,40,0,0,1,0,0,[
mini_line(160,32,8,0,0,0,[
str_block(0,160,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,160,32,8,0,0,0,0,0,0,0,
	"FloatAdder")])
])
])])
],
1197,0,0,[
]).
group([
box('black','',2996,3336,3244,3384,0,1,1,1204,0,0,0,0,0,'1',0,[
]),
text('black',3120,3340,1,1,1,150,40,1205,32,8,0,0,0,0,2,150,40,0,0,"",0,0,0,0,3372,'',[
minilines(150,40,0,0,1,0,0,[
mini_line(150,32,8,0,0,0,[
str_block(0,150,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,150,32,8,0,0,0,0,0,0,0,
	"FileWriter")])
])
])])
],
1203,0,0,[
]).
poly('black','',2,[
	2768,3168,3120,3216],1,1,1,1209,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3496,3168,3120,3216],1,1,1,1210,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3120,3216,3120,3248],1,1,1,1211,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3120,3296,3120,3336],1,1,1,1214,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',2456,2896,1,0,1,138,40,1218,32,8,0,0,0,0,2,138,40,0,0,"",0,0,0,0,2928,'',[
minilines(138,40,0,0,0,0,0,[
mini_line(138,32,8,0,0,0,[
str_block(0,138,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,138,32,8,0,0,0,0,0,0,0,
	"Equalizer")])
])
])]).
box('black','',2456,2896,3784,3312,0,1,1,1237,0,0,0,0,0,'1',0,[
]).
text('black',3128,2896,1,0,1,52,29,1240,24,5,0,0,0,0,2,52,29,0,0,"",0,0,0,0,2920,'',[
minilines(52,29,0,0,0,0,0,[
mini_line(52,24,5,0,0,0,[
str_block(0,52,24,5,0,-1,0,0,0,[
str_seg('black','Helvetica',0,138240,52,24,5,0,-1,0,0,0,0,0,
	"DUP")])
])
])]).
text('black',2728,2944,1,0,1,52,29,1242,24,5,0,0,0,0,2,52,29,0,0,"",0,0,0,0,2968,'',[
minilines(52,29,0,0,0,0,0,[
mini_line(52,24,5,0,0,0,[
str_block(0,52,24,5,0,-1,0,0,0,[
str_seg('black','Helvetica',0,138240,52,24,5,0,-1,0,0,0,0,0,
	"DUP")])
])
])]).
text('black',3472,2944,1,0,1,52,29,1243,24,5,0,0,0,0,2,52,29,0,0,"",0,0,0,0,2968,'',[
minilines(52,29,0,0,0,0,0,[
mini_line(52,24,5,0,0,0,[
str_block(0,52,24,5,0,-1,0,0,0,[
str_seg('black','Helvetica',0,138240,52,24,5,0,-1,0,0,0,0,0,
	"DUP")])
])
])]).
text('black',2728,3056,1,0,1,34,29,1245,24,5,0,0,0,0,2,34,29,0,0,"",0,0,0,0,3080,'',[
minilines(34,29,0,0,0,0,0,[
mini_line(34,24,5,0,0,0,[
str_block(0,34,24,5,0,-2,0,0,0,[
str_seg('black','Helvetica',0,138240,34,24,5,0,-2,0,0,0,0,0,
	"RR")])
])
])]).
text('black',3128,3208,1,0,1,34,29,1247,24,5,0,0,0,0,2,34,29,0,0,"",0,0,0,0,3232,'',[
minilines(34,29,0,0,0,0,0,[
mini_line(34,24,5,0,0,0,[
str_block(0,34,24,5,0,-2,0,0,0,[
str_seg('black','Helvetica',0,138240,34,24,5,0,-2,0,0,0,0,0,
	"RR")])
])
])]).
text('black',3480,3056,1,0,1,34,29,1248,24,5,0,0,0,0,2,34,29,0,0,"",0,0,0,0,3080,'',[
minilines(34,29,0,0,0,0,0,[
mini_line(34,24,5,0,0,0,[
str_block(0,34,24,5,0,-2,0,0,0,[
str_seg('black','Helvetica',0,138240,34,24,5,0,-2,0,0,0,0,0,
	"RR")])
])
])]).
poly('black','',2,[
	3120,2920,3072,2968],1,1,1,1259,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3120,2920,3168,2968],1,1,1,1260,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3072,3168,3120,3216],1,1,1,1265,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3168,3168,3120,3216],1,1,1,1267,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',3120,3024,1,1,1,27,40,1275,32,8,0,0,0,0,2,27,40,0,0,"",0,0,0,0,3056,'',[
minilines(27,40,0,0,1,0,0,[
mini_line(27,32,8,0,0,0,[
str_block(0,27,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-3,0,0,0,0,0,
	"...")])
])
])]).
box('white','',2432,3440,3816,4320,1,1,0,1277,0,0,0,0,0,'1',0,[
]).
text('black',3128,3462,1,1,1,231,42,1281,34,8,0,0,0,0,2,231,42,0,0,"",0,0,0,0,3496,'',[
minilines(231,42,0,0,1,0,0,[
mini_line(231,34,8,0,0,0,[
str_block(0,231,34,8,0,-1,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,231,34,8,0,-1,0,0,0,0,0,
	"GSM Decoder")])
])
])]).
group([
box('black','',2532,3520,2780,3568,0,1,1,1296,0,0,0,0,0,'1',0,[
]),
text('black',2656,3524,1,1,1,156,40,1295,32,8,0,0,0,0,2,156,40,0,0,"",0,0,0,0,3556,'',[
minilines(156,40,0,0,1,0,0,[
mini_line(156,32,8,0,0,0,[
str_block(0,156,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,156,32,8,0,0,0,0,0,0,0,
	"FileReader")])
])
])])
],
1294,0,0,[
]).
group([
box('black','',2532,3600,2780,3648,0,1,1,1299,0,0,0,0,0,'1',0,[
]),
text('black',2656,3604,1,1,1,140,40,1298,32,8,0,0,0,0,2,140,40,0,0,"",0,0,0,0,3636,'',[
minilines(140,40,0,0,1,0,0,[
mini_line(140,32,8,0,0,0,[
str_block(0,140,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,140,32,8,0,0,0,0,0,0,0,
	"RPEInput")])
])
])])
],
1297,0,0,[
]).
group([
box('black','',2532,3680,2780,3728,0,1,1,1302,0,0,0,0,0,'1',0,[
]),
text('black',2656,3684,1,1,1,173,40,1301,32,8,0,0,0,0,2,173,40,0,0,"",0,0,0,0,3716,'',[
minilines(173,40,0,0,1,0,0,[
mini_line(173,32,8,0,0,0,[
str_block(0,173,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,173,32,8,0,-2,0,0,0,0,0,
	"RPEDecode")])
])
])])
],
1300,0,0,[
]).
poly('black','',2,[
	2656,3568,2656,3600],1,1,1,1303,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2656,3648,2656,3680],1,1,1,1304,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
group([
box('black','',2836,3632,3084,3680,0,1,1,1314,0,0,0,0,0,'1',0,[
]),
text('black',2960,3636,1,1,1,227,40,1315,32,8,0,0,0,0,2,227,40,0,0,"",0,0,0,0,3668,'',[
minilines(227,40,0,0,1,0,0,[
mini_line(227,32,8,0,0,0,[
str_block(0,227,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,227,32,8,0,-2,0,0,0,0,0,
	"AdditionUpdate")])
])
])])
],
1313,0,0,[
]).
group([
box('black','',3252,3552,3500,3600,0,1,1,1326,0,0,0,0,0,'1',0,[
]),
text('black',3376,3556,1,1,1,63,40,1327,32,8,0,0,0,0,2,63,40,0,0,"",0,0,0,0,3588,'',[
minilines(63,40,0,0,1,0,0,[
mini_line(63,32,8,0,0,0,[
str_block(0,63,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,63,32,8,0,0,0,0,0,0,0,
	"LTP")])
])
])])
],
1325,0,0,[
]).
group([
box('black','',3388,3736,3636,3784,0,1,1,1338,0,0,0,0,0,'1',0,[
]),
text('black',3512,3740,1,1,1,156,40,1339,32,8,0,0,0,0,2,156,40,0,0,"",0,0,0,0,3772,'',[
minilines(156,40,0,0,1,0,0,[
mini_line(156,32,8,0,0,0,[
str_block(0,156,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,156,32,8,0,0,0,0,0,0,0,
	"FileReader")])
])
])])
],
1337,0,0,[
]).
group([
box('black','',3388,3656,3636,3704,0,1,1,1341,0,0,0,0,0,'1',0,[
]),
text('black',3512,3660,1,1,1,138,40,1342,32,8,0,0,0,0,2,138,40,0,0,"",0,0,0,0,3692,'',[
minilines(138,40,0,0,1,0,0,[
mini_line(138,32,8,0,0,0,[
str_block(0,138,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,138,32,8,0,0,0,0,0,0,0,
	"LTPInput")])
])
])])
],
1340,0,0,[
]).
poly('black','',2,[
	3512,3736,3512,3704],1,1,1,1346,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
group([
box('black','',3116,3688,3364,3736,0,1,1,1351,0,0,0,0,0,'1',0,[
]),
text('black',3240,3692,1,1,1,185,40,1352,32,8,0,0,0,0,2,185,40,0,0,"",0,0,0,0,3724,'',[
minilines(185,40,0,0,1,0,0,[
mini_line(185,32,8,0,0,0,[
str_block(0,185,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,185,32,8,0,-1,0,0,0,0,0,
	"ShortIdentity")])
])
])])
],
1350,0,0,[
]).
poly('black','',2,[
	3512,3656,3376,3624],1,1,1,1356,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3232,3688,3376,3624],1,1,1,1357,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3376,3824,3232,3736],1,1,1,1358,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3376,3624,3376,3600],1,1,1,1362,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2960,3744,2960,3776],1,1,1,1392,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
group([
box('black','',2836,3776,3084,3824,0,1,1,1394,0,0,0,0,0,'1',0,[
]),
text('black',2960,3780,1,1,1,70,40,1395,32,8,0,0,0,0,2,70,40,0,0,"",0,0,0,0,3812,'',[
minilines(70,40,0,0,1,0,0,[
mini_line(70,32,8,0,0,0,[
str_block(0,70,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,70,32,8,0,0,0,0,0,0,0,
	"Hold")])
])
])])
],
1393,0,0,[
]).
group([
box('black','',2724,3928,2972,3976,0,1,1,1403,0,0,0,0,0,'1',0,[
]),
text('black',2848,3932,1,1,1,185,40,1404,32,8,0,0,0,0,2,185,40,0,0,"",0,0,0,0,3964,'',[
minilines(185,40,0,0,1,0,0,[
mini_line(185,32,8,0,0,0,[
str_block(0,185,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,185,32,8,0,-1,0,0,0,0,0,
	"ShortIdentity")])
])
])])
],
1402,0,0,[
]).
group([
box('black','',3004,3888,3252,3936,0,1,1,1406,0,0,0,0,0,'1',0,[
]),
text('black',3128,3892,1,1,1,156,40,1407,32,8,0,0,0,0,2,156,40,0,0,"",0,0,0,0,3924,'',[
minilines(156,40,0,0,1,0,0,[
mini_line(156,32,8,0,0,0,[
str_block(0,156,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,156,32,8,0,0,0,0,0,0,0,
	"FileReader")])
])
])])
],
1405,0,0,[
]).
group([
box('black','',3004,3968,3252,4016,0,1,1,1409,0,0,0,0,0,'1',0,[
]),
text('black',3128,3972,1,1,1,147,40,1410,32,8,0,0,0,0,2,147,40,0,0,"",0,0,0,0,4004,'',[
minilines(147,40,0,0,1,0,0,[
mini_line(147,32,8,0,0,0,[
str_block(0,147,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,147,32,8,0,0,0,0,0,0,0,
	"LARInput")])
])
])])
],
1408,0,0,[
]).
group([
box('black','',2836,4080,3084,4128,0,1,1,1415,0,0,0,0,0,'1',0,[
]),
text('black',2960,4084,1,1,1,234,40,1416,32,8,0,0,0,0,2,234,40,0,0,"",0,0,0,0,4116,'',[
minilines(234,40,0,0,1,0,0,[
mini_line(234,32,8,0,0,0,[
str_block(0,234,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,234,32,8,0,0,0,0,0,0,0,
	"ShortTermSynth")])
])
])])
],
1414,0,0,[
]).
group([
box('black','',2836,4160,3084,4208,0,1,1,1421,0,0,0,0,0,'1',0,[
]),
text('black',2960,4164,1,1,1,212,40,1422,32,8,0,0,0,0,2,212,40,0,0,"",0,0,0,0,4196,'',[
minilines(212,40,0,0,1,0,0,[
mini_line(212,32,8,0,0,0,[
str_block(0,212,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,212,32,8,0,-1,0,0,0,0,0,
	"PostProcessing")])
])
])])
],
1420,0,0,[
]).
group([
box('black','',2836,4240,3084,4288,0,1,1,1424,0,0,0,0,0,'1',0,[
]),
text('black',2960,4244,1,1,1,150,40,1425,32,8,0,0,0,0,2,150,40,0,0,"",0,0,0,0,4276,'',[
minilines(150,40,0,0,1,0,0,[
mini_line(150,32,8,0,0,0,[
str_block(0,150,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,150,32,8,0,0,0,0,0,0,0,
	"FileWriter")])
])
])])
],
1423,0,0,[
]).
poly('black','',2,[
	2960,4208,2960,4240],1,1,1,1433,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2960,4128,2960,4160],1,1,1,1434,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2960,4048,2960,4080],1,1,1,1435,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3128,4016,2960,4048],1,1,1,1436,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	3128,3936,3128,3968],1,1,1,1437,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2960,3824,2960,3856],1,1,1,1438,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2960,3856,2840,3928],1,1,1,1439,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2840,3976,2960,4048],1,1,1,1440,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',5,[
	2960,3744,3104,3744,3104,3856,3376,3856,3376,3824],1,1,1,1457,0,0,0,0,0,0,0,'1',0,0,
    "00","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',4,[
	3376,3552,3376,3520,2960,3520,2960,3584],1,1,1,1458,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2960,3680,2960,3744],1,1,1,1459,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',5,[
	2656,3728,2656,3760,2816,3760,2816,3584,2960,3584],1,1,1,1460,0,0,0,0,0,0,0,'1',0,0,
    "00","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	2960,3584,2960,3632],1,1,1,1461,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',3936,656,6,0,1,1318,240,1462,32,8,0,0,0,0,2,1318,240,0,0,"",0,0,0,0,688,'',[
minilines(1318,240,0,0,0,0,0,[
mini_line(1318,32,8,0,0,0,[
str_block(0,1318,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1318,32,8,0,-1,0,0,0,0,0,
	"* Benchmarks: PCA application, software FM radio, SpectrumWare performance test, GSM")])
]),
mini_line(138,32,8,0,0,0,[
str_block(0,138,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,138,32,8,0,0,0,0,0,0,0,
	"   decoder")])
]),
mini_line(1310,32,8,0,0,0,[
str_block(0,1310,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,1310,32,8,0,0,0,0,0,0,0,
	"* Compared performance vs. SpectrumWare, except for C implementation of GSM decoder")])
]),
mini_line(1074,32,8,0,0,0,[
str_block(0,1074,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1074,32,8,0,-1,0,0,0,0,0,
	"* No StreamIt optimizations, except applying horizontal fusion to FM radio")])
]),
mini_line(417,32,8,0,0,0,[
str_block(0,417,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,417,32,8,0,-2,0,0,0,0,0,
	"* Target platform: x86 Linux")])
]),
mini_line(724,32,8,0,0,0,[
str_block(0,724,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,724,32,8,0,0,0,0,0,0,0,
	"* Benchmark times are in microseconds per output")])
])
])]).
box('white','',3936,912,5264,1208,1,1,0,1465,0,0,0,0,0,'1',0,[
]).
text('black',3968,934,6,0,1,350,242,1466,34,8,0,0,0,0,2,350,242,0,0,"",0,0,0,0,968,'',[
minilines(350,242,0,0,0,0,0,[
mini_line(194,34,8,0,0,0,[
str_block(0,194,34,8,0,-3,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,194,34,8,0,-3,0,0,0,0,0,
	"Benchmark")])
]),
mini_line(165,32,8,0,0,0,[
str_block(0,165,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,165,32,8,0,-1,0,0,0,0,0,
	"PCA Demo")])
]),
mini_line(144,32,8,0,0,0,[
str_block(0,144,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,144,32,8,0,-1,0,0,0,0,0,
	"FM Radio")])
]),
mini_line(337,32,8,0,0,0,[
str_block(0,337,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,337,32,8,0,-2,0,0,0,0,0,
	"FM Radio (with fusion)")])
]),
mini_line(350,32,8,0,0,0,[
str_block(0,350,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,350,32,8,0,-1,0,0,0,0,0,
	"SpectrumWare perftest4")])
]),
mini_line(206,32,8,0,0,0,[
str_block(0,206,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,206,32,8,0,0,0,0,0,0,0,
	"GSM Decoder")])
])
])]).
text('black',4440,934,6,1,1,94,242,1471,34,8,0,0,0,0,2,94,242,0,0,"",0,0,0,0,968,'',[
minilines(94,242,0,0,1,0,0,[
mini_line(94,34,8,0,0,0,[
str_block(0,94,34,8,0,-3,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,94,34,8,0,-3,0,0,0,0,0,
	"Lines")])
]),
mini_line(51,32,8,0,0,0,[
str_block(0,51,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,51,32,8,0,-1,0,0,0,0,0,
	"484")])
]),
mini_line(51,32,8,0,0,0,[
str_block(0,51,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,51,32,8,0,-3,0,0,0,0,0,
	"411")])
]),
mini_line(51,32,8,0,0,0,[
str_block(0,51,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,51,32,8,0,-3,0,0,0,0,0,
	"411")])
]),
mini_line(51,32,8,0,0,0,[
str_block(0,51,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,51,32,8,0,-1,0,0,0,0,0,
	"347")])
]),
mini_line(68,32,8,0,0,0,[
str_block(0,68,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,68,32,8,0,-1,0,0,0,0,0,
	"3050")])
])
])]).
text('black',4592,934,6,1,1,108,242,1473,34,8,0,0,0,0,2,108,242,0,0,"",0,0,0,0,968,'',[
minilines(108,242,0,0,1,0,0,[
mini_line(108,34,8,0,0,0,[
str_block(0,108,34,8,0,-3,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,108,34,8,0,-3,0,0,0,0,0,
	"Filters")])
]),
mini_line(17,32,8,0,0,0,[
str_block(0,17,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,17,32,8,0,-2,0,0,0,0,0,
	"5")])
]),
mini_line(17,32,8,0,0,0,[
str_block(0,17,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,17,32,8,0,-2,0,0,0,0,0,
	"5")])
]),
mini_line(17,32,8,0,0,0,[
str_block(0,17,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,17,32,8,0,-2,0,0,0,0,0,
	"5")])
]),
mini_line(17,32,8,0,0,0,[
str_block(0,17,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,17,32,8,0,-2,0,0,0,0,0,
	"5")])
]),
mini_line(34,32,8,0,0,0,[
str_block(0,34,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,34,32,8,0,-3,0,0,0,0,0,
	"11")])
])
])]).
text('black',4768,934,6,1,1,185,242,1475,34,8,0,0,0,0,2,185,242,0,0,"",0,0,0,0,968,'',[
minilines(185,242,0,0,1,0,0,[
mini_line(185,34,8,0,0,0,[
str_block(0,185,34,8,0,-1,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,185,34,8,0,-1,0,0,0,0,0,
	"Graph Size")])
]),
mini_line(17,32,8,0,0,0,[
str_block(0,17,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,17,32,8,0,-1,0,0,0,0,0,
	"7")])
]),
mini_line(34,32,8,0,0,0,[
str_block(0,34,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,34,32,8,0,-1,0,0,0,0,0,
	"27")])
]),
mini_line(34,32,8,0,0,0,[
str_block(0,34,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,34,32,8,0,-2,0,0,0,0,0,
	"15")])
]),
mini_line(34,32,8,0,0,0,[
str_block(0,34,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,34,32,8,0,-1,0,0,0,0,0,
	"20")])
]),
mini_line(34,32,8,0,0,0,[
str_block(0,34,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,34,32,8,0,-3,0,0,0,0,0,
	"21")])
])
])]).
text('black',5168,934,6,1,1,142,242,1485,34,8,0,0,0,0,2,142,242,0,0,"",0,0,0,0,968,'',[
minilines(142,242,0,0,1,0,0,[
mini_line(142,34,8,0,0,0,[
str_block(0,142,34,8,0,-1,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,142,34,8,0,-1,0,0,0,0,0,
	"StreamIt")])
]),
mini_line(43,32,8,0,0,0,[
str_block(0,43,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,43,32,8,0,-2,0,0,0,0,0,
	"1.3")])
]),
mini_line(43,32,8,0,0,0,[
str_block(0,43,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,43,32,8,0,-1,0,0,0,0,0,
	"5.8")])
]),
mini_line(43,32,8,0,0,0,[
str_block(0,43,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,43,32,8,0,-1,0,0,0,0,0,
	"4.9")])
]),
mini_line(51,32,8,0,0,0,[
str_block(0,51,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,51,32,8,0,-1,0,0,0,0,0,
	"330")])
]),
mini_line(60,32,8,0,0,0,[
str_block(0,60,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,60,32,8,0,-1,0,0,0,0,0,
	"4.88")])
])
])]).
text('black',4976,934,6,1,1,169,242,1487,34,8,0,0,0,0,2,169,242,0,0,"",0,0,0,0,968,'',[
minilines(169,242,0,0,1,0,0,[
mini_line(169,34,8,0,0,0,[
str_block(0,169,34,8,0,-1,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,169,34,8,0,-1,0,0,0,0,0,
	"Reference")])
]),
mini_line(43,32,8,0,0,0,[
str_block(0,43,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,43,32,8,0,-1,0,0,0,0,0,
	"3.4")])
]),
mini_line(43,32,8,0,0,0,[
str_block(0,43,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,43,32,8,0,-1,0,0,0,0,0,
	"9.9")])
]),
mini_line(43,32,8,0,0,0,[
str_block(0,43,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,43,32,8,0,-1,0,0,0,0,0,
	"9.9")])
]),
mini_line(51,32,8,0,0,0,[
str_block(0,51,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,51,32,8,0,-1,0,0,0,0,0,
	"330")])
]),
mini_line(60,32,8,0,0,0,[
str_block(0,60,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,60,32,8,0,-1,0,0,0,0,0,
	"0.47")])
])
])]).
text('black',3936,1224,3,0,1,1193,120,1510,32,8,0,0,0,0,2,1193,120,0,0,"",0,0,0,0,1256,'',[
minilines(1193,120,0,0,0,0,0,[
mini_line(1005,32,8,0,0,0,[
str_block(0,1005,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1005,32,8,0,-2,0,0,0,0,0,
	"* StreamIt performance beats existing stream system (SpectrumWare)")])
]),
mini_line(1193,32,8,0,0,0,[
str_block(0,1193,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1193,32,8,0,-2,0,0,0,0,0,
	"* Order-of-magnitude slowdown from hand-written optimized C application (GSM)")])
]),
mini_line(1005,32,8,0,0,0,[
str_block(0,1005,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,1005,32,8,0,0,0,0,0,0,0,
	"* Horizontal fusion brings noticable speed-up for FM radio application")])
])
])]).
text('black',3936,1552,9,0,1,1326,360,1524,32,8,0,0,0,0,2,1326,360,-5,0,"",0,0,0,0,1584,'',[
minilines(1326,360,-5,0,0,0,0,[
mini_line(1326,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,348,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,348,32,8,0,-1,0,0,0,0,0,
	"Improved optimization")]),
str_block(0,951,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,951,32,8,0,-2,0,0,0,0,0,
	": implement more stream-level optimizations, traditional data-flow")])
]),
mini_line(1319,32,8,-5,0,0,[
str_block(0,405,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,405,32,8,0,-8,0,0,0,0,0,
	"   optimizations.  Recognize ")]),
str_block(0,286,32,8,-5,0,0,0,0,[
str_seg('black','Times-Italic',2,207360,286,32,8,-5,0,0,0,0,0,0,
	"filter-invariant code")]),
str_block(0,628,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,628,32,8,0,-1,0,0,0,0,0,
	" and remove it to the init function, similar to")])
]),
mini_line(1284,32,8,-3,0,0,[
str_block(0,591,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,591,32,8,0,-8,0,0,0,0,0,
	"   traditional loop-invariant code motion.  ")]),
str_block(0,344,32,8,-3,0,0,0,0,[
str_seg('black','Times-Italic',2,207360,344,32,8,-3,0,0,0,0,0,0,
	"Algebraic simplification")]),
str_block(0,349,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,349,32,8,0,-1,0,0,0,0,0,
	" is also a major potential")])
]),
mini_line(1147,32,8,0,0,0,[
str_block(0,1147,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,1147,32,8,0,-3,0,0,0,0,0,
	"   improvement when combining filters that perform parallel vector dot products.")])
]),
mini_line(1268,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,306,32,8,0,-2,0,0,0,[
str_seg('black','Times-Bold',1,207360,306,32,8,0,-2,0,0,0,0,0,
	"SIMD optimizations")]),
str_block(0,935,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,935,32,8,0,-2,0,0,0,0,0,
	": add compiler-specific constructs for SIMD architectures such as")])
]),
mini_line(1243,32,8,-5,0,0,[
str_block(0,742,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,742,32,8,0,-8,0,0,0,0,0,
	"   Pentium MMX/SSE or PowerPC AltiVec.  Apply ")]),
str_block(0,172,32,8,-5,0,0,0,0,[
str_seg('black','Times-Italic',2,207360,172,32,8,-5,0,0,0,0,0,0,
	"filter fission")]),
str_block(0,329,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,329,32,8,0,-1,0,0,0,0,0,
	" to get superword-level")])
]),
mini_line(1214,32,8,0,0,0,[
str_block(0,1214,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1214,32,8,0,-1,0,0,0,0,0,
	"   parallelism; duplicated code in parallel filters can be combined to execute as SIMD")])
]),
mini_line(1251,32,8,0,0,0,[
str_block(0,1251,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1251,32,8,0,-1,0,0,0,0,0,
	"   instructions, giving potentially 4x speed-up on appropriate hardware without changing")])
]),
mini_line(274,32,8,0,0,0,[
str_block(0,274,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,274,32,8,0,-3,0,0,0,0,0,
	"   original program.")])
])
])]).
box('white','',3936,1952,5288,2392,1,1,0,1548,0,0,0,0,0,'1',0,[
]).
box('black','',3976,2112,4168,2144,0,1,1,1549,0,0,0,0,0,'1',0,[
]).
poly('black','',2,[
	4072,2080,4072,2112],1,1,1,1550,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4072,2144,4072,2168],1,1,1,1551,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4184,2128,4264,2128],1,1,1,1553,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',4280,2112,4432,2144,0,1,1,1555,0,0,0,0,0,'1',0,[
]).
poly('black','',2,[
	4608,2024,4608,2056],1,1,1,1557,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4608,2056,4352,2112],1,1,1,1558,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4608,2056,4520,2112],1,1,1,1559,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4608,2056,4696,2112],1,1,1,1560,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4608,2056,4856,2112],1,1,1,1561,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4352,2144,4608,2192],1,1,1,1562,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4856,2144,4608,2192],1,1,1,1563,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4520,2144,4608,2192],1,1,1,1564,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4696,2144,4608,2192],1,1,1,1566,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4608,2192,4608,2224],1,1,1,1568,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',4448,2112,4600,2144,0,1,1,1569,0,0,0,0,0,'1',0,[
]).
box('black','',5056,2112,5248,2144,0,1,1,1573,0,0,0,0,0,'1',0,[
]).
poly('black','',2,[
	5152,2080,5152,2112],1,1,1,1574,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5152,2144,5152,2168],1,1,1,1575,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4952,2128,5032,2128],1,1,1,1576,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',4612,1966,1,1,1,315,42,1578,34,8,0,0,0,0,2,315,42,0,0,"",0,0,0,0,2000,'',[
minilines(315,42,0,0,1,0,0,[
mini_line(315,34,8,0,0,0,[
str_block(0,315,34,8,0,-4,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,315,34,8,0,-4,0,0,0,0,0,
	"SIMD Optimization")])
])
])]).
box('black','',4616,2112,4768,2144,0,1,1,1583,0,0,0,0,0,'1',0,[
]).
box('black','',4784,2112,4936,2144,0,1,1,1584,0,0,0,0,0,'1',0,[
]).
text('black',4072,2110,1,1,1,11,28,1599,22,6,0,0,0,0,2,11,28,0,0,"",0,0,0,0,2132,'',[
minilines(11,28,0,0,1,0,0,[
mini_line(11,22,6,0,0,0,[
str_block(0,11,22,6,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,138240,11,22,6,0,-1,0,0,0,0,0,
	"a")])
])
])]).
text('black',4360,2110,1,1,1,11,28,1601,22,6,0,0,0,0,2,11,28,0,0,"",0,0,0,0,2132,'',[
minilines(11,28,0,0,1,0,0,[
mini_line(11,22,6,0,0,0,[
str_block(0,11,22,6,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,138240,11,22,6,0,-1,0,0,0,0,0,
	"a")])
])
])]).
text('black',4520,2110,1,1,1,11,28,1603,22,6,0,0,0,0,2,11,28,0,0,"",0,0,0,0,2132,'',[
minilines(11,28,0,0,1,0,0,[
mini_line(11,22,6,0,0,0,[
str_block(0,11,22,6,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,138240,11,22,6,0,-1,0,0,0,0,0,
	"a")])
])
])]).
text('black',4696,2110,1,1,1,11,28,1605,22,6,0,0,0,0,2,11,28,0,0,"",0,0,0,0,2132,'',[
minilines(11,28,0,0,1,0,0,[
mini_line(11,22,6,0,0,0,[
str_block(0,11,22,6,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,138240,11,22,6,0,-1,0,0,0,0,0,
	"a")])
])
])]).
text('black',4856,2110,1,1,1,11,28,1607,22,6,0,0,0,0,2,11,28,0,0,"",0,0,0,0,2132,'',[
minilines(11,28,0,0,1,0,0,[
mini_line(11,22,6,0,0,0,[
str_block(0,11,22,6,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,138240,11,22,6,0,-1,0,0,0,0,0,
	"a")])
])
])]).
text('black',5152,2110,1,1,1,44,28,1609,22,6,0,0,0,0,2,44,28,0,0,"",0,0,0,0,2132,'',[
minilines(44,28,0,0,1,0,0,[
mini_line(44,22,6,0,0,0,[
str_block(0,44,22,6,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,138240,44,22,6,0,-1,0,0,0,0,0,
	"aaaa")])
])
])]).
text('black',3992,2256,3,0,1,1218,120,1617,32,8,0,0,0,0,2,1218,120,0,0,"",0,0,0,0,2288,'',[
minilines(1218,120,0,0,0,0,0,[
mini_line(1216,32,8,0,0,0,[
str_block(0,1216,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1216,32,8,0,-2,0,0,0,0,0,
	"Filter fission converts single filters into split/joins; parallelism-detection pass reduces")])
]),
mini_line(1218,32,8,0,0,0,[
str_block(0,1218,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1218,32,8,0,-1,0,0,0,0,0,
	"parallel split/joins into single filters processing multiple items in parallel using SIMD")])
]),
mini_line(146,32,8,0,0,0,[
str_block(0,146,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,146,32,8,0,-2,0,0,0,0,0,
	"primitives")])
])
])]).
text('black',3944,2416,5,0,1,1318,200,1620,32,8,0,0,0,0,2,1318,200,0,0,"",0,0,0,0,2448,'',[
minilines(1318,200,0,0,0,0,0,[
mini_line(1318,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,222,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,222,32,8,0,-1,0,0,0,0,0,
	"RAW backend")]),
str_block(0,1069,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1069,32,8,0,-2,0,0,0,0,0,
	": add code to map filters on to RAW tiles, expanding and condensing filters")])
]),
mini_line(1279,32,8,0,0,0,[
str_block(0,1279,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,1279,32,8,0,0,0,0,0,0,0,
	"   as necessary.  StreamIt \"tapes\" can be mapped to inter-tile communication; splitters and")])
]),
mini_line(1266,32,8,0,0,0,[
str_block(0,1266,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1266,32,8,0,-2,0,0,0,0,0,
	"   joiners can be implemented on per-tile switch processors.  Put tapes on the RAW static")])
]),
mini_line(1276,32,8,0,0,0,[
str_block(0,1276,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1276,32,8,0,-1,0,0,0,0,0,
	"   network, and use the dynamic network for messaging.  Add RAW-specific constructs to")])
]),
mini_line(281,32,8,0,0,0,[
str_block(0,281,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,281,32,8,0,-3,0,0,0,0,0,
	"   generated C code.")])
])
])]).
box('white','',3936,2640,5288,3016,1,1,0,1623,0,0,0,0,0,'1',0,[
]).
text('black',4632,2662,1,1,1,191,42,1624,34,8,0,0,0,0,2,191,42,0,0,"",0,0,0,0,2696,'',[
minilines(191,42,0,0,1,0,0,[
mini_line(191,34,8,0,0,0,[
str_block(0,191,34,8,0,-4,0,0,0,[
str_seg('black','Helvetica-Bold',1,207360,191,34,8,0,-4,0,0,0,0,0,
	"RAW Tiling")])
])
])]).
group([
box('black','',4412,2720,4660,2768,0,1,1,1631,0,0,0,0,0,'1',0,[
]),
text('black',4536,2724,1,1,1,26,40,1630,32,8,0,0,0,0,2,26,40,0,0,"",0,0,0,0,2756,'',[
minilines(26,40,0,0,1,0,0,[
mini_line(26,32,8,0,0,0,[
str_block(0,26,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,26,32,8,0,-1,0,0,0,0,0,
	"A")])
])
])])
],
1629,0,0,[
]).
group([
box('black','',3964,2832,4212,2880,0,1,1,1634,0,0,0,0,0,'1',0,[
]),
text('black',4088,2836,1,1,1,24,40,1633,32,8,0,0,0,0,2,24,40,0,0,"",0,0,0,0,2868,'',[
minilines(24,40,0,0,1,0,0,[
mini_line(24,32,8,0,0,0,[
str_block(0,24,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,24,32,8,0,-1,0,0,0,0,0,
	"C")])
])
])])
],
1632,0,0,[
]).
group([
box('black','',4252,2832,4500,2880,0,1,1,1637,0,0,0,0,0,'1',0,[
]),
text('black',4376,2836,1,1,1,24,40,1636,32,8,0,0,0,0,2,24,40,0,0,"",0,0,0,0,2868,'',[
minilines(24,40,0,0,1,0,0,[
mini_line(24,32,8,0,0,0,[
str_block(0,24,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,24,32,8,0,-1,0,0,0,0,0,
	"B")])
])
])])
],
1635,0,0,[
]).
group([
box('black','',4564,2832,4812,2880,0,1,1,1640,0,0,0,0,0,'1',0,[
]),
text('black',4688,2836,1,1,1,26,40,1639,32,8,0,0,0,0,2,26,40,0,0,"",0,0,0,0,2868,'',[
minilines(26,40,0,0,1,0,0,[
mini_line(26,32,8,0,0,0,[
str_block(0,26,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,26,32,8,0,-1,0,0,0,0,0,
	"D")])
])
])])
],
1638,0,0,[
]).
group([
box('black','',4412,2944,4660,2992,0,1,1,1643,0,0,0,0,0,'1',0,[
]),
text('black',4536,2948,1,1,1,22,40,1642,32,8,0,0,0,0,2,22,40,0,0,"",0,0,0,0,2980,'',[
minilines(22,40,0,0,1,0,0,[
mini_line(22,32,8,0,0,0,[
str_block(0,22,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,22,32,8,0,0,0,0,0,0,0,
	"E")])
])
])])
],
1641,0,0,[
]).
poly('black','',2,[
	4376,2800,4376,2832],1,1,1,1661,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',3,[
	4088,2832,4088,2800,4376,2800],1,1,1,1662,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4536,2768,4376,2800],1,1,1,1663,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4536,2768,4688,2832],1,1,1,1664,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4376,2880,4376,2912],1,1,1,1665,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',3,[
	4376,2912,4088,2912,4088,2880],1,1,1,1666,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4376,2912,4536,2944],1,1,1,1668,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4696,2880,4536,2944],1,1,1,1669,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4856,2856,4936,2856],1,1,1,1670,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4976,2736,5232,2736],0,1,1,1691,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4976,2736,4976,2992],0,1,1,1692,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4976,2800,5232,2800],0,1,1,1693,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5040,2736,5040,2992],0,1,1,1694,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4976,2864,5232,2864],0,1,1,1695,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5104,2736,5104,2992],0,1,1,1698,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4976,2928,5232,2928],0,1,1,1700,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5168,2736,5168,2992],0,1,1,1701,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4976,2992,5232,2992],0,1,1,1703,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5232,2736,5232,2992],0,1,1,1704,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',5072,2752,1,1,1,26,40,1710,32,8,0,0,0,0,2,26,40,0,0,"",0,0,0,0,2784,'',[
minilines(26,40,0,0,1,0,0,[
mini_line(26,32,8,0,0,0,[
str_block(0,26,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,26,32,8,0,-1,0,0,0,0,0,
	"A")])
])
])]).
text('black',5008,2752,1,1,1,26,40,1712,32,8,0,0,0,0,2,26,40,0,0,"",0,0,0,0,2784,'',[
minilines(26,40,0,0,1,0,0,[
mini_line(26,32,8,0,0,0,[
str_block(0,26,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,26,32,8,0,-1,0,0,0,0,0,
	"D")])
])
])]).
text('black',5008,2816,1,1,1,22,40,1714,32,8,0,0,0,0,2,22,40,0,0,"",0,0,0,0,2848,'',[
minilines(22,40,0,0,1,0,0,[
mini_line(22,32,8,0,0,0,[
str_block(0,22,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,22,32,8,0,0,0,0,0,0,0,
	"E")])
])
])]).
text('black',5072,2816,1,1,1,24,40,1716,32,8,0,0,0,0,2,24,40,0,0,"",0,0,0,0,2848,'',[
minilines(24,40,0,0,1,0,0,[
mini_line(24,32,8,0,0,0,[
str_block(0,24,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,24,32,8,0,-1,0,0,0,0,0,
	"B")])
])
])]).
text('black',5072,2880,1,1,1,24,40,1718,32,8,0,0,0,0,2,24,40,0,0,"",0,0,0,0,2912,'',[
minilines(24,40,0,0,1,0,0,[
mini_line(24,32,8,0,0,0,[
str_block(0,24,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,24,32,8,0,-1,0,0,0,0,0,
	"C")])
])
])]).
poly('black','',2,[
	5072,2784,5072,2816],1,1,1,1720,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5056,2848,5056,2880],1,1,1,1721,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5072,2880,5072,2848],1,1,1,1722,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5056,2832,5024,2832],1,1,1,1723,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5056,2768,5024,2768],1,1,1,1724,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5008,2784,5008,2816],1,1,1,1726,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	5072,2736,5072,2752],1,1,1,1727,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	4992,2832,4976,2832],1,1,1,1728,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',3936,3040,29,0,1,1354,1160,1761,32,8,0,0,0,0,2,1354,1160,0,1,"",0,0,0,0,3072,'',[
minilines(1354,1160,0,1,0,0,0,[
mini_line(1316,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,371,32,8,0,-2,0,0,0,[
str_seg('black','Times-Bold',1,207360,371,32,8,0,-2,0,0,0,0,0,
	"Language improvements")]),
str_block(0,918,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,918,32,8,0,-2,0,0,0,0,0,
	": make the StreamIt language more usable, and possibly less like")])
]),
mini_line(1339,32,8,0,0,0,[
str_block(0,1339,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1339,32,8,0,-2,0,0,0,0,0,
	"   Java where appropriate.  Current implementation uses Java \"extends\" syntax to differentiate")])
]),
mini_line(1239,32,8,0,0,0,[
str_block(0,1239,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1239,32,8,0,-2,0,0,0,0,0,
	"   between filters, pipelines, etc., but actual class derivation isn't supported.  Streamline")])
]),
mini_line(1296,32,8,0,0,0,[
str_block(0,1296,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,1296,32,8,0,0,0,0,0,0,0,
	"   declarations for commonly used language constructs.  Write a StreamIt-to-Java converter")])
]),
mini_line(492,32,8,0,0,0,[
str_block(0,492,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,492,32,8,0,-3,0,0,0,0,0,
	"   to use the existing Java libraries.")])
]),
mini_line(1296,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,158,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,158,32,8,0,-1,0,0,0,0,0,
	"Messaging")]),
str_block(0,1111,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,1111,32,8,0,0,0,0,0,0,0,
	": implement the StreamIt messaging model to allow filters to send out-of-band")])
]),
mini_line(1322,32,8,0,0,0,[
str_block(0,1322,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,1322,32,8,0,-3,0,0,0,0,0,
	"   messages to other filters.  Accomodate sampling rate changes, change equalizer settings, ...")])
]),
mini_line(1166,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,232,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,232,32,8,0,-1,0,0,0,0,0,
	"Reinitialization")]),
str_block(0,907,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,907,32,8,0,-3,0,0,0,0,0,
	": allow composite filters to recreate their child stream structure,")])
]),
mini_line(951,32,8,0,0,0,[
str_block(0,951,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,951,32,8,0,-3,0,0,0,0,0,
	"   possibly with different parameters than the original initialization.")])
]),
mini_line(1307,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,251,32,8,0,-2,0,0,0,[
str_seg('black','Times-Bold',1,207360,251,32,8,0,-2,0,0,0,0,0,
	"Structured tapes")]),
str_block(0,676,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,676,32,8,0,-1,0,0,0,0,0,
	": current language only allows primitive types (")]),
str_block(0,66,28,7,0,-3,0,0,0,[
str_seg('black','Courier',0,207360,66,28,7,0,-3,0,0,0,0,0,
	"int")]),
str_block(0,18,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,18,32,8,0,-8,0,0,0,0,0,
	", ")]),
str_block(0,110,28,7,0,-3,0,0,0,[
str_seg('black','Courier',0,207360,110,28,7,0,-3,0,0,0,0,0,
	"float")]),
str_block(0,159,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,159,32,8,0,-2,0,0,0,0,0,
	", etc.) to be")])
]),
mini_line(1287,32,8,0,1,0,[
str_block(0,1287,32,8,0,1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1287,32,8,0,1,0,0,0,0,0,
	"   passed between filters.  This requires the code to represent data as an unstructured list of")])
]),
mini_line(1232,32,8,0,0,0,[
str_block(0,1232,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1232,32,8,0,-2,0,0,0,0,0,
	"   primitives passed between filters (\"2 floats\" instead of \"a complex number\").  Allow")])
]),
mini_line(1274,32,8,0,0,0,[
str_block(0,1274,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,1274,32,8,0,-3,0,0,0,0,0,
	"   user-defined structures, to represent e.g. complex numbers or packets within a protocol.")])
]),
mini_line(1354,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,164,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,164,32,8,0,-1,0,0,0,0,0,
	"Scheduling")]),
str_block(0,1163,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1163,32,8,0,-2,0,0,0,0,0,
	": implement phased scheduling, and explore alternate scheduling schemes.  Allow")])
]),
mini_line(1301,32,8,0,0,0,[
str_block(0,1301,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1301,32,8,0,-1,0,0,0,0,0,
	"   run-time system to change scheduling policy.  In particular, constrained message delivery")])
]),
mini_line(1222,32,8,0,0,0,[
str_block(0,1222,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1222,32,8,0,-1,0,0,0,0,0,
	"   will require the run-time system to be able to individually fire filters not necessarily")])
]),
mini_line(453,32,8,0,0,0,[
str_block(0,453,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,453,32,8,0,-3,0,0,0,0,0,
	"   according to a static schedule.")])
]),
mini_line(1334,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,331,32,8,0,-2,0,0,0,[
str_seg('black','Times-Bold',1,207360,331,32,8,0,-2,0,0,0,0,0,
	"Variable-rate streams")]),
str_block(0,976,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,976,32,8,0,-2,0,0,0,0,0,
	": current language requires the number of items pushed/popped to be")])
]),
mini_line(1230,32,8,0,0,0,[
str_block(0,1230,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1230,32,8,0,-2,0,0,0,0,0,
	"   fixed across iterations; however, commonly used audio compression (e.g. MP3) uses")])
]),
mini_line(310,32,8,0,0,0,[
str_block(0,310,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,310,32,8,0,-3,0,0,0,0,0,
	"   variable-rate filters.")])
]),
mini_line(1230,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,191,32,8,0,-2,0,0,0,[
str_seg('black','Times-Bold',1,207360,191,32,8,0,-2,0,0,0,0,0,
	"Finite inputs")]),
str_block(0,1012,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,1012,32,8,0,0,0,0,0,0,0,
	": allow a filter to shut down the system, if it reaches the end of its input")])
]),
mini_line(763,32,8,0,0,0,[
str_block(0,763,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,763,32,8,0,-3,0,0,0,0,0,
	"   (e.g. a file-reading filter reaches the end of the file).")])
]),
mini_line(1330,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,275,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,275,32,8,0,-1,0,0,0,0,0,
	"External interface")]),
str_block(0,1028,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,1028,32,8,0,-3,0,0,0,0,0,
	": provide an interface for incorporating StreamIt code in a C application,")])
]),
mini_line(763,32,8,0,0,0,[
str_block(0,763,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,763,32,8,0,-3,0,0,0,0,0,
	"   or for including external C code as a StreamIt filter.")])
]),
mini_line(1308,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,190,32,8,0,-2,0,0,0,[
str_seg('black','Times-Bold',1,207360,190,32,8,0,-2,0,0,0,0,0,
	"Applications")]),
str_block(0,1091,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,1091,32,8,0,-3,0,0,0,0,0,
	": implement more programs in StreamIt.  Possibilities include GSM encoder,")])
]),
mini_line(635,32,8,0,0,0,[
str_block(0,635,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,635,32,8,0,-3,0,0,0,0,0,
	"   cryptographic algorithms, MP3 decoder, ...")])
]),
mini_line(1284,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,346,32,8,0,-2,0,0,0,[
str_seg('black','Times-Bold',1,207360,346,32,8,0,-2,0,0,0,0,0,
	"General improvements")]),
str_block(0,911,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,911,32,8,0,-2,0,0,0,0,0,
	": make the Kopi infrastructure more palatable.  Write a rigorous")])
]),
mini_line(1269,32,8,0,0,0,[
str_block(0,1269,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,1269,32,8,0,0,0,0,0,0,0,
	"   language specification.  Give examples of common programs, and write documentation")])
]),
mini_line(659,32,8,0,0,0,[
str_block(0,659,32,8,0,-3,0,0,0,[
str_seg('black','Times-Roman',0,207360,659,32,8,0,-3,0,0,0,0,0,
	"   explaining how to write a StreamIt program.")])
])
])]).
box('white','',88,2528,1384,3112,1,1,0,1765,0,0,0,0,0,'1',0,[
]).
text('black',104,2541,15,0,1,570,360,1766,19,5,0,0,0,0,2,570,360,0,0,"",0,0,0,0,2560,'',[
minilines(570,360,0,0,0,0,0,[
mini_line(165,19,5,0,0,0,[
str_block(0,165,19,5,0,-3,0,0,0,[
str_seg('black','Courier',0,138240,165,19,5,0,-3,0,0,0,0,0,
	"#define N 5")])
]),
mini_line(330,19,5,0,0,0,[
str_block(0,330,19,5,0,-3,0,0,0,[
str_seg('black','Courier',0,138240,330,19,5,0,-3,0,0,0,0,0,
	"#define BLOCK_SIZE 100")])
]),
mini_line(0,19,5,0,0,0,[
str_block(0,0,19,5,0,0,0,0,0,[
str_seg('black','Courier',0,138240,0,19,5,0,0,0,0,0,0,0,
	"")])
]),
mini_line(570,19,5,0,0,0,[
str_block(0,570,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,570,19,5,0,-6,0,0,0,0,0,
	"void step(float* input, float* output,")])
]),
mini_line(420,19,5,0,0,0,[
str_block(0,420,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,420,19,5,0,-8,0,0,0,0,0,
	"          int numIn, numOut)")])
]),
mini_line(15,19,5,0,0,0,[
str_block(0,15,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,15,19,5,0,-5,0,0,0,0,0,
	"{")])
]),
mini_line(270,19,5,0,0,0,[
str_block(0,270,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,270,19,5,0,-6,0,0,0,0,0,
	"  float sum = 0.0;")])
]),
mini_line(120,19,5,0,0,0,[
str_block(0,120,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,120,19,5,0,-6,0,0,0,0,0,
	"  int k;")])
]),
mini_line(435,19,5,0,0,0,[
str_block(0,435,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,435,19,5,0,-8,0,0,0,0,0,
	"  for (k = 0; k < numIn; k++)")])
]),
mini_line(570,19,5,0,0,0,[
str_block(0,570,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,570,19,5,0,-6,0,0,0,0,0,
	"    sum += input[k]*COEFF[k+numIn][N];")])
]),
mini_line(435,19,5,0,0,0,[
str_block(0,435,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,435,19,5,0,-8,0,0,0,0,0,
	"  for (k = numIn; k < N; k++)")])
]),
mini_line(570,19,5,0,0,0,[
str_block(0,570,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,570,19,5,0,-6,0,0,0,0,0,
	"    sum += input[k]*COEFF[k-numIn][N];")])
]),
mini_line(345,19,5,0,0,0,[
str_block(0,345,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,345,19,5,0,-6,0,0,0,0,0,
	"  output[numOut] = sum;")])
]),
mini_line(405,19,5,0,0,0,[
str_block(0,405,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,405,19,5,0,-6,0,0,0,0,0,
	"  input[numIn] = getData();")])
]),
mini_line(15,19,5,0,0,0,[
str_block(0,15,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,15,19,5,0,-5,0,0,0,0,0,
	"}")])
])
])]).
text('black',736,2541,23,0,1,645,552,1767,19,5,0,0,0,0,2,645,552,0,0,"",0,0,0,0,2560,'',[
minilines(645,552,0,0,0,0,0,[
mini_line(165,19,5,0,0,0,[
str_block(0,165,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,165,19,5,0,-8,0,0,0,0,0,
	"void main()")])
]),
mini_line(15,19,5,0,0,0,[
str_block(0,15,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,15,19,5,0,-5,0,0,0,0,0,
	"{")])
]),
mini_line(555,19,5,0,0,0,[
str_block(0,555,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,555,19,5,0,-6,0,0,0,0,0,
	"  float input[N], output[BLOCK_SIZE];")])
]),
mini_line(300,19,5,0,0,0,[
str_block(0,300,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,300,19,5,0,-6,0,0,0,0,0,
	"  int numIn, numOut;")])
]),
mini_line(555,19,5,0,0,0,[
str_block(0,555,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,555,19,5,0,-8,0,0,0,0,0,
	"  for (numIn = 0; numIn < N; numIn++)")])
]),
mini_line(435,19,5,0,0,0,[
str_block(0,435,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,435,19,5,0,-6,0,0,0,0,0,
	"    input[numIn] = getData();")])
]),
mini_line(165,19,5,0,0,0,[
str_block(0,165,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,165,19,5,0,-8,0,0,0,0,0,
	"  while (1)")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  {")])
]),
mini_line(255,19,5,0,0,0,[
str_block(0,255,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,255,19,5,0,-6,0,0,0,0,0,
	"    int steps, k;")])
]),
mini_line(465,19,5,0,0,0,[
str_block(0,465,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,465,19,5,0,-6,0,0,0,0,0,
	"    for (numIn = 0, numOut = 0;")])
]),
mini_line(570,19,5,0,0,0,[
str_block(0,570,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,570,19,5,0,-8,0,0,0,0,0,
	"         numIn < N; numIn++, numOut++)")])
]),
mini_line(615,19,5,0,0,0,[
str_block(0,615,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,615,19,5,0,-6,0,0,0,0,0,
	"      step(input, output, numIn, numOut);")])
]),
mini_line(510,19,5,0,0,0,[
str_block(0,510,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,510,19,5,0,-6,0,0,0,0,0,
	"    steps = (BLOCK_SIZE-numOut)/N;")])
]),
mini_line(465,19,5,0,0,0,[
str_block(0,465,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,465,19,5,0,-8,0,0,0,0,0,
	"    for (k = 0; k < steps; k++)")])
]),
mini_line(480,19,5,0,0,0,[
str_block(0,480,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,480,19,5,0,-6,0,0,0,0,0,
	"      for (numIn = 0; numIn < N;")])
]),
mini_line(435,19,5,0,0,0,[
str_block(0,435,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,435,19,5,0,-8,0,0,0,0,0,
	"           numIn++, numOut++)")])
]),
mini_line(645,19,5,0,0,0,[
str_block(0,645,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,645,19,5,0,-6,0,0,0,0,0,
	"        step(input, output, numIn, numOut);")])
]),
mini_line(600,19,5,0,0,0,[
str_block(0,600,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,600,19,5,0,-6,0,0,0,0,0,
	"    for (numIn = 0; numOut < BLOCK_SIZE;")])
]),
mini_line(405,19,5,0,0,0,[
str_block(0,405,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,405,19,5,0,-8,0,0,0,0,0,
	"         numIn++, numOut++)")])
]),
mini_line(615,19,5,0,0,0,[
str_block(0,615,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,615,19,5,0,-6,0,0,0,0,0,
	"      step(input, output, numIn, numOut);")])
]),
mini_line(375,19,5,0,0,0,[
str_block(0,375,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,375,19,5,0,-6,0,0,0,0,0,
	"    displayBlock(output);")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  }")])
]),
mini_line(15,19,5,0,0,0,[
str_block(0,15,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,15,19,5,0,-5,0,0,0,0,0,
	"}")])
])
])]).
text('black',96,3120,8,0,1,1202,320,1775,32,8,0,0,0,0,2,1202,320,0,0,"",0,0,0,0,3152,'',[
minilines(1202,320,0,0,0,0,0,[
mini_line(1106,32,8,0,0,0,[
str_block(0,1106,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,1106,32,8,0,0,0,0,0,0,0,
	"* To get good performance, programmer needs to write complicated loop nest")])
]),
mini_line(1202,32,8,0,0,0,[
str_block(0,1202,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,1202,32,8,0,0,0,0,0,0,0,
	"* Compiler has no opportunity to perform stream optimizations without complicated")])
]),
mini_line(142,32,8,0,0,0,[
str_block(0,142,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,142,32,8,0,-2,0,0,0,0,0,
	"   analysis")])
]),
mini_line(1189,32,8,0,0,0,[
str_block(0,1189,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1189,32,8,0,-2,0,0,0,0,0,
	"* Possible to squeeze more performance out by adding platform-specific extensions")])
]),
mini_line(1159,32,8,0,0,0,[
str_block(0,1159,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1159,32,8,0,-2,0,0,0,0,0,
	"   (extensions for the RAW compiler, MMX/SSE/AltiVec extensions, ...), but this")])
]),
mini_line(749,32,8,0,0,0,[
str_block(0,749,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,749,32,8,0,-1,0,0,0,0,0,
	"   comes at the cost of portability and maintainability")])
]),
mini_line(594,32,8,0,0,0,[
str_block(0,594,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,594,32,8,0,-2,0,0,0,0,0,
	"* Hard to reuse the filter in other contexts")])
]),
mini_line(1123,32,8,0,0,0,[
str_block(0,1123,32,8,0,-4,0,0,0,[
str_seg('black','Times-Roman',0,207360,1123,32,8,0,-4,0,0,0,0,0,
	"* Might encourage reuse by rewriting in an object-oriented language, e.g. Java:")])
])
])]).
box('white','',88,3456,1384,3992,1,1,0,1778,0,0,0,0,0,'1',0,[
]).
text('black',104,3469,21,0,1,540,504,1779,19,5,0,0,0,0,2,540,504,0,0,"",0,0,0,0,3488,'',[
minilines(540,504,0,0,0,0,0,[
mini_line(225,19,5,0,0,0,[
str_block(0,225,19,5,0,-2,0,0,0,[
str_seg('black','Courier',0,138240,225,19,5,0,-2,0,0,0,0,0,
	"class FIRFilter")])
]),
mini_line(15,19,5,0,0,0,[
str_block(0,15,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,15,19,5,0,-5,0,0,0,0,0,
	"{")])
]),
mini_line(240,19,5,0,0,0,[
str_block(0,240,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,240,19,5,0,-6,0,0,0,0,0,
	"  private int N;")])
]),
mini_line(360,19,5,0,0,0,[
str_block(0,360,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,360,19,5,0,-6,0,0,0,0,0,
	"  private float[] input;")])
]),
mini_line(0,19,5,0,0,0,[
str_block(0,0,19,5,0,0,0,0,0,[
str_seg('black','Courier',0,138240,0,19,5,0,0,0,0,0,0,0,
	"")])
]),
mini_line(375,19,5,0,0,0,[
str_block(0,375,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,375,19,5,0,-8,0,0,0,0,0,
	"  public FIRFilter(int N)")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  {")])
]),
mini_line(225,19,5,0,0,0,[
str_block(0,225,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,225,19,5,0,-6,0,0,0,0,0,
	"    this.N = N;")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  }")])
]),
mini_line(0,19,5,0,0,0,[
str_block(0,0,19,5,0,0,0,0,0,[
str_seg('black','Courier',0,138240,0,19,5,0,0,0,0,0,0,0,
	"")])
]),
mini_line(525,19,5,0,0,0,[
str_block(0,525,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,525,19,5,0,-8,0,0,0,0,0,
	"  public static void main(String[])")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  {")])
]),
mini_line(300,19,5,0,0,0,[
str_block(0,300,19,5,0,-2,0,0,0,[
str_seg('black','Courier',0,138240,300,19,5,0,-2,0,0,0,0,0,
	"    DataSource src =")])
]),
mini_line(345,19,5,0,0,0,[
str_block(0,345,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,345,19,5,0,-6,0,0,0,0,0,
	"      new DataSource();")])
]),
mini_line(330,19,5,0,0,0,[
str_block(0,330,19,5,0,-2,0,0,0,[
str_seg('black','Courier',0,138240,330,19,5,0,-2,0,0,0,0,0,
	"    FIRFilter filter =")])
]),
mini_line(345,19,5,0,0,0,[
str_block(0,345,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,345,19,5,0,-6,0,0,0,0,0,
	"      new FIRFilter(5);")])
]),
mini_line(540,19,5,0,0,0,[
str_block(0,540,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,540,19,5,0,-6,0,0,0,0,0,
	"    Display display = new Display();")])
]),
mini_line(360,19,5,0,0,0,[
str_block(0,360,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,360,19,5,0,-6,0,0,0,0,0,
	"    filter.source = src;")])
]),
mini_line(420,19,5,0,0,0,[
str_block(0,420,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,420,19,5,0,-6,0,0,0,0,0,
	"    display.source = filter;")])
]),
mini_line(270,19,5,0,0,0,[
str_block(0,270,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,270,19,5,0,-6,0,0,0,0,0,
	"    display.run();")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  }")])
])
])]).
text('black',736,3469,21,0,1,630,504,1780,19,5,0,0,0,0,2,630,504,0,0,"",0,0,0,0,3488,'',[
minilines(630,504,0,0,0,0,0,[
mini_line(600,19,5,0,0,0,[
str_block(0,600,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,600,19,5,0,-6,0,0,0,0,0,
	"  public float[] getData(float[] output,")])
]),
mini_line(435,19,5,0,0,0,[
str_block(0,435,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,435,19,5,0,-8,0,0,0,0,0,
	"      int offset, int length)")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  {")])
]),
mini_line(330,19,5,0,0,0,[
str_block(0,330,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,330,19,5,0,-8,0,0,0,0,0,
	"    if (input == null)")])
]),
mini_line(75,19,5,0,0,0,[
str_block(0,75,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,75,19,5,0,-5,0,0,0,0,0,
	"    {")])
]),
mini_line(540,19,5,0,0,0,[
str_block(0,540,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,540,19,5,0,-6,0,0,0,0,0,
	"      input = new float[MAX_LENGTH];")])
]),
mini_line(615,19,5,0,0,0,[
str_block(0,615,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,615,19,5,0,-6,0,0,0,0,0,
	"      source.getData(input, 0, N+length);")])
]),
mini_line(75,19,5,0,0,0,[
str_block(0,75,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,75,19,5,0,-5,0,0,0,0,0,
	"    }")])
]),
mini_line(120,19,5,0,0,0,[
str_block(0,120,19,5,0,-2,0,0,0,[
str_seg('black','Courier',0,138240,120,19,5,0,-2,0,0,0,0,0,
	"    else")])
]),
mini_line(585,19,5,0,0,0,[
str_block(0,585,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,585,19,5,0,-6,0,0,0,0,0,
	"      source.getData(input, N, length);")])
]),
mini_line(540,19,5,0,0,0,[
str_block(0,540,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,540,19,5,0,-8,0,0,0,0,0,
	"    for (int i = 0; i < length; i++)")])
]),
mini_line(75,19,5,0,0,0,[
str_block(0,75,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,75,19,5,0,-5,0,0,0,0,0,
	"    {")])
]),
mini_line(300,19,5,0,0,0,[
str_block(0,300,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,300,19,5,0,-6,0,0,0,0,0,
	"      float sum = 0;")])
]),
mini_line(495,19,5,0,0,0,[
str_block(0,495,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,495,19,5,0,-8,0,0,0,0,0,
	"      for (int j = 0; j < N; j++)")])
]),
mini_line(630,19,5,0,0,0,[
str_block(0,630,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,630,19,5,0,-6,0,0,0,0,0,
	"        sum += data1[i+j]*FIR_COEFF[j][N];")])
]),
mini_line(435,19,5,0,0,0,[
str_block(0,435,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,435,19,5,0,-6,0,0,0,0,0,
	"      output[i+offset] = sum;")])
]),
mini_line(75,19,5,0,0,0,[
str_block(0,75,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,75,19,5,0,-5,0,0,0,0,0,
	"    }")])
]),
mini_line(465,19,5,0,0,0,[
str_block(0,465,19,5,0,-8,0,0,0,[
str_seg('black','Courier',0,138240,465,19,5,0,-8,0,0,0,0,0,
	"    for (int i = 0; i < N; i++)")])
]),
mini_line(495,19,5,0,0,0,[
str_block(0,495,19,5,0,-6,0,0,0,[
str_seg('black','Courier',0,138240,495,19,5,0,-6,0,0,0,0,0,
	"      input[i] = input[i+length];")])
]),
mini_line(45,19,5,0,0,0,[
str_block(0,45,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,45,19,5,0,-5,0,0,0,0,0,
	"  }")])
]),
mini_line(15,19,5,0,0,0,[
str_block(0,15,19,5,0,-5,0,0,0,[
str_seg('black','Courier',0,138240,15,19,5,0,-5,0,0,0,0,0,
	"}")])
])
])]).
text('black',96,4000,8,0,1,1242,320,1784,32,8,0,0,0,0,2,1242,320,0,0,"",0,0,0,0,4032,'',[
minilines(1242,320,0,0,0,0,0,[
mini_line(1214,32,8,0,0,0,[
str_block(0,1214,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1214,32,8,0,-1,0,0,0,0,0,
	"* Define common object model such that each filter has a source member; filters pull")])
]),
mini_line(415,32,8,0,0,0,[
str_block(0,415,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,415,32,8,0,0,0,0,0,0,0,
	"   data from their predecessor")])
]),
mini_line(1242,32,8,0,0,0,[
str_block(0,1242,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1242,32,8,0,-2,0,0,0,0,0,
	"* Works well for simple pipelines, but doesn't account for more complicated constructs")])
]),
mini_line(539,32,8,0,0,0,[
str_block(0,539,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,539,32,8,0,-2,0,0,0,0,0,
	"   such as split/joins or feedback loops")])
]),
mini_line(1132,32,8,0,0,0,[
str_block(0,1132,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1132,32,8,0,-2,0,0,0,0,0,
	"* Compiler still can't do stream optimizations or exploit target-specific features")])
]),
mini_line(1191,32,8,0,0,0,[
str_block(0,1191,32,8,0,-4,0,0,0,[
str_seg('black','Times-Roman',0,207360,1191,32,8,0,-4,0,0,0,0,0,
	"* StreamIt gets the reusability of OO languages, plus a well-defined filter interface;")])
]),
mini_line(1199,32,8,0,0,0,[
str_block(0,1199,32,8,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,207360,1199,32,8,0,-1,0,0,0,0,0,
	"   the compiler has enough information to do high-level optimization and can target a")])
]),
mini_line(794,32,8,0,0,0,[
str_block(0,794,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,794,32,8,0,-2,0,0,0,0,0,
	"   variety of hardware targets with the same source code")])
])
])]).
text('black',2448,2112,6,0,1,1341,240,1820,32,8,0,0,0,0,2,1341,240,0,1,"",0,0,0,0,2144,'',[
minilines(1341,240,0,1,0,0,0,[
mini_line(1315,32,8,0,1,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,413,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,413,32,8,0,-1,0,0,0,0,0,
	"Single-appearance schedule")]),
str_block(0,875,32,8,0,1,0,0,0,[
str_seg('black','Times-Roman',0,207360,875,32,8,0,1,0,0,0,0,0,
	": schedule can be represented as just a number of iterations of")])
]),
mini_line(1341,32,8,0,0,0,[
str_block(0,1341,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1341,32,8,0,-2,0,0,0,0,0,
	"   each filter (4A, 6B, 9C, 3D); compact representation, well-suited for inlining work functions")])
]),
mini_line(1220,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,199,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,199,32,8,0,-1,0,0,0,0,0,
	"Pull schedule")]),
str_block(0,994,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,994,32,8,0,0,0,0,0,0,0,
	": minimizes amount of storage required for steady-state execution and")])
]),
mini_line(894,32,8,0,0,0,[
str_block(0,894,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,894,32,8,0,0,0,0,0,0,0,
	"   end-to-end latency, but has a very irregular execution pattern")])
]),
mini_line(1327,32,8,0,0,0,[
str_block(0,27,32,8,0,-8,0,0,0,[
str_seg('black','Times-Roman',0,207360,27,32,8,0,-8,0,0,0,0,0,
	"* ")]),
str_block(0,245,32,8,0,-1,0,0,0,[
str_seg('black','Times-Bold',1,207360,245,32,8,0,-1,0,0,0,0,0,
	"Phased schedule")]),
str_block(0,1055,32,8,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,207360,1055,32,8,0,-2,0,0,0,0,0,
	": preserves minimum latency, but rearranges intermediate filters to reduce")])
]),
mini_line(464,32,8,0,0,0,[
str_block(0,464,32,8,0,0,0,0,0,[
str_seg('black','Times-Roman',0,207360,464,32,8,0,0,0,0,0,0,0,
	"   size of schedule representation")])
])
])]).
text('black',2912,3560,1,0,1,26,29,1822,24,5,0,0,0,0,2,26,29,0,0,"",0,0,0,0,3584,'',[
minilines(26,29,0,0,0,0,0,[
mini_line(26,24,5,0,0,0,[
str_block(0,26,24,5,0,-1,0,0,0,[
str_seg('black','Helvetica',0,138240,26,24,5,0,-1,0,0,0,0,0,
	"40")])
])
])]).
text('black',2944,3544,1,0,1,13,29,1826,24,5,0,0,0,0,2,13,29,0,0,"",0,0,0,0,3568,'',[
minilines(13,29,0,0,0,0,0,[
mini_line(13,24,5,0,0,0,[
str_block(0,13,24,5,0,-5,0,0,0,[
str_seg('black','Helvetica',0,138240,13,24,5,0,-5,0,0,0,0,0,
	"1")])
])
])]).
text('black',2896,3736,1,0,1,52,29,1828,24,5,0,0,0,0,2,52,29,0,0,"",0,0,0,0,3760,'',[
minilines(52,29,0,0,0,0,0,[
mini_line(52,24,5,0,0,0,[
str_block(0,52,24,5,0,-1,0,0,0,[
str_seg('black','Helvetica',0,138240,52,24,5,0,-1,0,0,0,0,0,
	"DUP")])
])
])]).
text('black',3328,3608,1,0,1,39,29,1831,24,5,0,0,0,0,2,39,29,0,0,"",0,0,0,0,3632,'',[
minilines(39,29,0,0,0,0,0,[
mini_line(39,24,5,0,0,0,[
str_block(0,39,24,5,0,-1,0,0,0,[
str_seg('black','Helvetica',0,138240,39,24,5,0,-1,0,0,0,0,0,
	"160")])
])
])]).
text('black',3408,3608,1,0,1,13,29,1833,24,5,0,0,0,0,2,13,29,0,0,"",0,0,0,0,3632,'',[
minilines(13,29,0,0,0,0,0,[
mini_line(13,24,5,0,0,0,[
str_block(0,13,24,5,0,-1,0,0,0,[
str_seg('black','Helvetica',0,138240,13,24,5,0,-1,0,0,0,0,0,
	"2")])
])
])]).
text('black',2896,4024,1,0,1,39,29,1835,24,5,0,0,0,0,2,39,29,0,0,"",0,0,0,0,4048,'',[
minilines(39,29,0,0,0,0,0,[
mini_line(39,24,5,0,0,0,[
str_block(0,39,24,5,0,-1,0,0,0,[
str_seg('black','Helvetica',0,138240,39,24,5,0,-1,0,0,0,0,0,
	"160")])
])
])]).
text('black',2992,4040,1,0,1,13,29,1837,24,5,0,0,0,0,2,13,29,0,0,"",0,0,0,0,4064,'',[
minilines(13,29,0,0,0,0,0,[
mini_line(13,24,5,0,0,0,[
str_block(0,13,24,5,0,-1,0,0,0,[
str_seg('black','Helvetica',0,138240,13,24,5,0,-1,0,0,0,0,0,
	"8")])
])
])]).
