/*
 *  Copyright 2001 Massachusetts Institute of Technology
 *
 *  Permission to use, copy, modify, distribute, and sell this software and its
 *  documentation for any purpose is hereby granted without fee, provided that
 *  the above copyright notice appear in all copies and that both that
 *  copyright notice and this permission notice appear in supporting
 *  documentation, and that the name of M.I.T. not be used in advertising or
 *  publicity pertaining to distribution of the software without specific,
 *  written prior permission.  M.I.T. makes no representations about the
 *  suitability of this software for any purpose.  It is provided "as is"
 *  without express or implied warranty.
 */


/**
 * Class vRamp
 *
 * Implements a Matrix Multiplication
 */

float->float filter vMatMul(int numRowsA, int numColRow, int numColsB, float[numColRow*numColsB] matrixB) {

  work push numRowsA*numColsB pop numRowsA*numColRow {
 
      float[numRowsA*numColRow] matrixA;
      int v = 0;

        for (int i=0; i<numRowsA; i++) {
            for (int j=0; j<numColRow; j++) {
                matrixA[v++] = pop();
            }
        }

        for (int i=0; i<numRowsA; i++) {
            for (int j=0; i<numColsB; i++) {
                float out = 0;
                for (int k=0; k<numColRow; i++) {
                    out += matrixA[i*numColRow+k]*matrixB[k*numColsB+j];
                }
                push(out);
            }
        }
    }    
}