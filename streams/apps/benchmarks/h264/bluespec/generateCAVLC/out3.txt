else if(buffertemp2[9:9]  ==  1'b1) return tuple2(0,1);
else if(buffertemp2[9:7]  ==  3'b011) return tuple2(1,3);
else if(buffertemp2[9:7]  ==  3'b010) return tuple2(2,3);
else if(buffertemp2[9:6]  ==  4'b0011) return tuple2(3,4);
else if(buffertemp2[9:6]  ==  4'b0010) return tuple2(4,4);
else if(buffertemp2[9:5]  ==  5'b00011) return tuple2(5,5);
else if(buffertemp2[9:5]  ==  5'b00010) return tuple2(6,5);
else if(buffertemp2[9:4]  ==  6'b000011) return tuple2(7,6);
else if(buffertemp2[9:4]  ==  6'b000010) return tuple2(8,6);
else if(buffertemp2[9:3]  ==  7'b0000011) return tuple2(9,7);
else if(buffertemp2[9:3]  ==  7'b0000010) return tuple2(10,7);
else if(buffertemp2[9:2]  ==  8'b00000011) return tuple2(11,8);
else if(buffertemp2[9:2]  ==  8'b00000010) return tuple2(12,8);
else if(buffertemp2[9:1]  ==  9'b000000011) return tuple2(13,9);
else if(buffertemp2[9:1]  ==  9'b000000010) return tuple2(14,9);
else if(buffertemp2[9:1]  ==  9'b000000001) return tuple2(15,9);







else if(buffertemp[5:3]  ==  3'b111) return tuple2(0,3);
else if(buffertemp[5:3]  ==  3'b110) return tuple2(1,3);
else if(buffertemp[5:3]  ==  3'b101) return tuple2(2,3);
else if(buffertemp[5:3]  ==  3'b100) return tuple2(3,3);
else if(buffertemp[5:3]  ==  3'b011) return tuple2(4,3);
else if(buffertemp[5:2]  ==  4'b0101) return tuple2(5,4);
else if(buffertemp[5:2]  ==  4'b0100) return tuple2(6,4);
else if(buffertemp[5:2]  ==  4'b0011) return tuple2(7,4);
else if(buffertemp[5:2]  ==  4'b0010) return tuple2(8,4);
else if(buffertemp[5:1]  ==  5'b00011) return tuple2(9,5);
else if(buffertemp[5:1]  ==  5'b00010) return tuple2(10,5);
else if(buffertemp[5:0]  ==  6'b000011) return tuple2(11,6);
else if(buffertemp[5:0]  ==  6'b000010) return tuple2(12,6);
else if(buffertemp[5:0]  ==  6'b000001) return tuple2(13,6);
else if(buffertemp[5:0]  ==  6'b000000) return tuple2(14,6);







else if(buffertemp[5:2]  ==  4'b0101) return tuple2(0,4);
else if(buffertemp[5:3]  ==  3'b111) return tuple2(1,3);
else if(buffertemp[5:3]  ==  3'b110) return tuple2(2,3);
else if(buffertemp[5:3]  ==  3'b101) return tuple2(3,3);
else if(buffertemp[5:2]  ==  4'b0100) return tuple2(4,4);
else if(buffertemp[5:2]  ==  4'b0011) return tuple2(5,4);
else if(buffertemp[5:3]  ==  3'b100) return tuple2(6,3);
else if(buffertemp[5:3]  ==  3'b011) return tuple2(7,3);
else if(buffertemp[5:2]  ==  4'b0010) return tuple2(8,4);
else if(buffertemp[5:1]  ==  5'b00011) return tuple2(9,5);
else if(buffertemp[5:1]  ==  5'b00010) return tuple2(10,5);
else if(buffertemp[5:0]  ==  6'b000001) return tuple2(11,6);
else if(buffertemp[5:1]  ==  5'b00001) return tuple2(12,5);
else if(buffertemp[5:0]  ==  6'b000000) return tuple2(13,6);







else if(buffertemp[5:1]  ==  5'b00011) return tuple2(0,5);
else if(buffertemp[5:3]  ==  3'b111) return tuple2(1,3);
else if(buffertemp[5:2]  ==  4'b0101) return tuple2(2,4);
else if(buffertemp[5:2]  ==  4'b0100) return tuple2(3,4);
else if(buffertemp[5:3]  ==  3'b110) return tuple2(4,3);
else if(buffertemp[5:3]  ==  3'b101) return tuple2(5,3);
else if(buffertemp[5:3]  ==  3'b100) return tuple2(6,3);
else if(buffertemp[5:2]  ==  4'b0011) return tuple2(7,4);
else if(buffertemp[5:3]  ==  3'b011) return tuple2(8,3);
else if(buffertemp[5:2]  ==  4'b0010) return tuple2(9,4);
else if(buffertemp[5:1]  ==  5'b00010) return tuple2(10,5);
else if(buffertemp[5:1]  ==  5'b00001) return tuple2(11,5);
else if(buffertemp[5:1]  ==  5'b00000) return tuple2(12,5);







else if(buffertemp[5:2]  ==  4'b0101) return tuple2(0,4);
else if(buffertemp[5:2]  ==  4'b0100) return tuple2(1,4);
else if(buffertemp[5:2]  ==  4'b0011) return tuple2(2,4);
else if(buffertemp[5:3]  ==  3'b111) return tuple2(3,3);
else if(buffertemp[5:3]  ==  3'b110) return tuple2(4,3);
else if(buffertemp[5:3]  ==  3'b101) return tuple2(5,3);
else if(buffertemp[5:3]  ==  3'b100) return tuple2(6,3);
else if(buffertemp[5:3]  ==  3'b011) return tuple2(7,3);
else if(buffertemp[5:2]  ==  4'b0010) return tuple2(8,4);
else if(buffertemp[5:1]  ==  5'b00001) return tuple2(9,5);
else if(buffertemp[5:2]  ==  4'b0001) return tuple2(10,4);
else if(buffertemp[5:1]  ==  5'b00000) return tuple2(11,5);







else if(buffertemp[5:0]  ==  6'b000001) return tuple2(0,6);
else if(buffertemp[5:1]  ==  5'b00001) return tuple2(1,5);
else if(buffertemp[5:3]  ==  3'b111) return tuple2(2,3);
else if(buffertemp[5:3]  ==  3'b110) return tuple2(3,3);
else if(buffertemp[5:3]  ==  3'b101) return tuple2(4,3);
else if(buffertemp[5:3]  ==  3'b100) return tuple2(5,3);
else if(buffertemp[5:3]  ==  3'b011) return tuple2(6,3);
else if(buffertemp[5:3]  ==  3'b010) return tuple2(7,3);
else if(buffertemp[5:2]  ==  4'b0001) return tuple2(8,4);
else if(buffertemp[5:3]  ==  3'b001) return tuple2(9,3);
else if(buffertemp[5:0]  ==  6'b000000) return tuple2(10,6);







else if(buffertemp[5:0]  ==  6'b000001) return tuple2(0,6);
else if(buffertemp[5:1]  ==  5'b00001) return tuple2(1,5);
else if(buffertemp[5:3]  ==  3'b101) return tuple2(2,3);
else if(buffertemp[5:3]  ==  3'b100) return tuple2(3,3);
else if(buffertemp[5:3]  ==  3'b011) return tuple2(4,3);
else if(buffertemp[5:4]  ==  2'b11) return tuple2(5,2);
else if(buffertemp[5:3]  ==  3'b010) return tuple2(6,3);
else if(buffertemp[5:2]  ==  4'b0001) return tuple2(7,4);
else if(buffertemp[5:3]  ==  3'b001) return tuple2(8,3);
else if(buffertemp[5:0]  ==  6'b000000) return tuple2(9,6);







else if(buffertemp[5:0]  ==  6'b000001) return tuple2(0,6);
else if(buffertemp[5:2]  ==  4'b0001) return tuple2(1,4);
else if(buffertemp[5:1]  ==  5'b00001) return tuple2(2,5);
else if(buffertemp[5:3]  ==  3'b011) return tuple2(3,3);
else if(buffertemp[5:4]  ==  2'b11) return tuple2(4,2);
else if(buffertemp[5:4]  ==  2'b10) return tuple2(5,2);
else if(buffertemp[5:3]  ==  3'b010) return tuple2(6,3);
else if(buffertemp[5:3]  ==  3'b001) return tuple2(7,3);
else if(buffertemp[5:0]  ==  6'b000000) return tuple2(8,6);







else if(buffertemp[5:0]  ==  6'b000001) return tuple2(0,6);
else if(buffertemp[5:0]  ==  6'b000000) return tuple2(1,6);
else if(buffertemp[5:2]  ==  4'b0001) return tuple2(2,4);
else if(buffertemp[5:4]  ==  2'b11) return tuple2(3,2);
else if(buffertemp[5:4]  ==  2'b10) return tuple2(4,2);
else if(buffertemp[5:3]  ==  3'b001) return tuple2(5,3);
else if(buffertemp[5:4]  ==  2'b01) return tuple2(6,2);
else if(buffertemp[5:1]  ==  5'b00001) return tuple2(7,5);







else if(buffertemp[5:1]  ==  5'b00001) return tuple2(0,5);
else if(buffertemp[5:1]  ==  5'b00000) return tuple2(1,5);
else if(buffertemp[5:3]  ==  3'b001) return tuple2(2,3);
else if(buffertemp[5:4]  ==  2'b11) return tuple2(3,2);
else if(buffertemp[5:4]  ==  2'b10) return tuple2(4,2);
else if(buffertemp[5:4]  ==  2'b01) return tuple2(5,2);
else if(buffertemp[5:2]  ==  4'b0001) return tuple2(6,4);







else if(buffertemp[5:2]  ==  4'b0000) return tuple2(0,4);
else if(buffertemp[5:2]  ==  4'b0001) return tuple2(1,4);
else if(buffertemp[5:3]  ==  3'b001) return tuple2(2,3);
else if(buffertemp[5:3]  ==  3'b010) return tuple2(3,3);
else if(buffertemp[5:5]  ==  1'b1) return tuple2(4,1);
else if(buffertemp[5:3]  ==  3'b011) return tuple2(5,3);







else if(buffertemp[5:2]  ==  4'b0000) return tuple2(0,4);
else if(buffertemp[5:2]  ==  4'b0001) return tuple2(1,4);
else if(buffertemp[5:4]  ==  2'b01) return tuple2(2,2);
else if(buffertemp[5:5]  ==  1'b1) return tuple2(3,1);
else if(buffertemp[5:3]  ==  3'b001) return tuple2(4,3);







else if(buffertemp[5:3]  ==  3'b000) return tuple2(0,3);
else if(buffertemp[5:3]  ==  3'b001) return tuple2(1,3);
else if(buffertemp[5:5]  ==  1'b1) return tuple2(2,1);
else if(buffertemp[5:4]  ==  2'b01) return tuple2(3,2);







else if(buffertemp[5:4]  ==  2'b00) return tuple2(0,2);
else if(buffertemp[5:4]  ==  2'b01) return tuple2(1,2);
else if(buffertemp[5:5]  ==  1'b1) return tuple2(2,1);







else if(buffertemp[5:5]  ==  1'b0) return tuple2(0,1);
else if(buffertemp[5:5]  ==  1'b1) return tuple2(1,1);







