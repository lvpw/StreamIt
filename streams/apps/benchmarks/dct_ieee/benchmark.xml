<benchmark>
  <name>DCT</name>
  <desc>IEEE-complaint DCT and IDCT.</desc>
  <description>
The dct_ieee package contains functions that implement Discrete Cosine
Transforms and Inverse Discrete Cosine Transforms in accordance with
IEEE specifications for such operations. The IEEE specified DCT is
used in both the MPEG and JPEG standards. A definition of what makes a
DCT or inverse DCT implementation conform to the IEEE specification
can be found in Appendix A of the MPEG-2 specification (ISO/IEC
13818-2) on P. 125.

  </description>
  <implementations>
    <impl lang="StreamIt" dir="streamit" regtest="skip">
      <file>DCT.str</file>
      <desc>
      Contains two implementations od DCT:

      A reference implementation based on the DCT code found within
the C reference MPEG implementation.

      A (hopefully) faster implementation:
An intuitive StreamIt DCT implementation based on the formula
for the DCT and its natural representation in StreamIt. The
2-Dimensional DCT is broken down into 1-Dimensional DCTs in
perpendicular directions. (Note: It may not actually be faster than
the reference implementation. However, ideally it will be.)
      </desc>
    </impl>
    <impl lang="StreamIt" dir="streamit" regtest="skip">
      <file>iDCTcompare.str</file>
      <desc>
This will run the numbers through both the
reference DCT components and the fast DCT components and report
discrepancies between the two.
      </desc>
    </impl>
    <impl lang="StreamIt" dir="streamit" regtest="skip">
      <file>DCT.str</file>
      <desc>Contains library of functions for reference and fast versions 
of DCT.</desc>
    </impl>
    <impl lang="StreamIt" dir="streamit" id="dctcompare"  iters="1">
      <file class="source">iDCTcompare.str DCT.str</file>
      <desc>Compares coarse reference, fine reference, and fine fast DCT implementations</desc>
    </impl>
    <impl lang="StreamIt" dir="streamit" id="dctverify" iters="1">
      <file class="source">DCTverify.str DCT.str</file>
      <desc>Checks that reference DCT and reference IDCT are inverses</desc>
    </impl>
  </implementations>
</benchmark>
