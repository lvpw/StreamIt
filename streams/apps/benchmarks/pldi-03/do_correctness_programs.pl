#!/usr/local/bin/perl
# script that compares the output that was generates by do_timing_programs.pl
# to ensure that they are the same.
# assumes the existence of programs generated by generate_timing_programs.pl
# and the existence of files  generated by do_timing_programs.pl


# Note that files with the postfix of postfix-np merely have had their
# printf's commented out


use strict;
require "reaplib.pl";
my $OUTPUTDIR = "timing";

# input is "postfix:options:filename"

if (not @ARGV) {
    print "usage: do_correctness_programs.pl inputscript\n";
    print "  input script has on separate lines: postfix:options:filename\n";
    die();
}

# select the tests to run
my @input_lines = split("\n", read_file(shift(@ARGV)));

# pull out the first line so we know what we are comparing to.
my ($first_postfix, $first_options, $first_filename)  = split(":", shift(@input_lines));
    # if the files don't exist, then signal an error
    if (not (-e "$OUTPUTDIR/$first_filename-$first_postfix.out")) {
	print "$first_filename-$first_postfix.out doesn't exist\n";
	die();
    }

# loop for the rest of the tests.
foreach (@input_lines) {
    if (not $_) {next;} #ignore blank lines
    my ($postfix, $options, $filename) = split(":");
    
    # if the files don't exist, then signal an error
    if (not (-e "$OUTPUTDIR/$filename-$postfix.out")) {
	print "$filename-$postfix.out doesn't exist\n";
	next;
    }
    
    print "$first_filename-$first_postfix.out and $filename-$postfix.out:";
    # run the comparison program
    print `compare_uni.pl $OUTPUTDIR/$first_filename-$first_postfix.out $OUTPUTDIR/$filename-$postfix.out`;
    print "done.\n";
}
