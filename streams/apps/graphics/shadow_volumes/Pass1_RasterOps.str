Fragment->void filter RasterOps( int offset, int numUnits, int screenWidth, int screenHeight )
{
    float[ ( screenWidth / numUnits ) * screenHeight  ] zBuffer = init_array_1D_float( "Pass0.zBuffer.xy.arr", ( screenWidth / numUnits ) * screenHeight );
    int[ ( screenWidth / numUnits ) * screenHeight ] stencilBuffer;

    int width;

    init
	{
	    width = screenWidth / numUnits;
	}

    work pop 1
	{
	    Fragment r = pop();

	    r.x = r.x / numUnits;
	    int index = r.x * screenHeight + r.y;

	    // zFail
	    if( r.z >= zBuffer[ index ] )
		{
		    if( r.isFrontFacing == 1 )
			{
			    stencilBuffer[ index ] = stencilBuffer[ index ] - 1;
			}
		    else
			{
			    stencilBuffer[ index ] = stencilBuffer[ index ] + 1;
			}
		}
	}
}
