Fragment->void filter RasterOps( int offset, int numUnits,
	int screenWidth, int screenHeight )
{
    // TODO: break it up!
    //    float[ ( screenWidth / numUnits ) * screenHeight ] zBuffer = init_array_1D_float( "Pass0.zBuffer.xy.arr", 360000 );
    float[ 360000 ] zBuffer = init_array_1D_float( "Pass0.zBuffer.xy.arr", 360000 );

    int[ ( screenWidth / numUnits ) * screenHeight ] stencilBuffer;

    int width;

    init
	{
	    width = screenWidth / numUnits;
	}

    work pop 1
	{
	    Fragment f = pop();
	
	    f.x = f.x / numUnits;	    
	    int index = f.y * width + f.x;

	    // zFail
	    if( f.z >= zBuffer[ index ] )
		{
		    if( f.isFrontFacing == 1 )
			{
			    stencilBuffer[ index ] = stencilBuffer[ index ] - 1;
			}
		    else
			{
			    stencilBuffer[ index ] = stencilBuffer[ index ] + 1;
			}
		}
	}
}
