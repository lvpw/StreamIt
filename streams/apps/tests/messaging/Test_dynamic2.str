/*
  This tests sending a downstream message from a dynamic output
  filter, but where there is a single phase with a static output rate.
  Mirrors the structure of the first filter (the parser) in MPEG
  decoding.
 */

void->void pipeline Test_dynamic2 {
    portal<Output> p;
    add Source;
    add Counter(p);
    add Identity<int>;
    add Output to p;
}

void->int filter Source {
    int i=100;
    work push 1 {
	push(i);
	i++;
    }
}

int->int filter Counter(portal<Output> p) {
    int val1 = 0;
    int val2 = 0;

    work push * pop 1 {
	// would use while loop, but it fails in frontend
	for (int i=0; i<10000; i++) {
	    pop();
	    myPhase();
	    myPhase();
	    myPhase();
	    p.setVal(val1++);
	}
    }
    
    phase myPhase push 1 {
	push(val2++);
    }

}

int->void filter Output {
    int val = 0;
    handler setVal(int v) {
	val = v;
    }
    work pop 1 {
	println(pop());
	println(val);
    }
}

/* OUTPUT
cagfarm-44 % strc -library -nosched Test_dynamic2.str | & more
0
0
1
0
2
0
3
0
4
0
5
0
6  <-- message delivered before this iteration of target
1  <-- value incremented in target
7
1
8
1
9
2
10
2
11
2
12
3
13
3
14
3

*/
