<benchmark>
  <name>arraytest</name>
  <desc>Tests of array declarations; passing arrays over tapes; passing arrays between functions, etc.</desc>
  <description>
This set of tests looks at the problem of using arrays as the values
passed between filters.  These tests all have a single source and a
single sink, with an array or matrix generated and passed between
them.
  </description>
  <implementations>
    <impl lang="StreamIt" id="arraytest">
      <desc>MIT, test passing float[1][1] between source and sink</desc>
      <file class="source">ArrayTest.str</file>
      <file class="output">ArrayTest.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest2">
      <desc>MIT, test passing float[4][4] and float[3][3]
            The .out file was just generated by strc -library -i100.  Not checked for correctness</desc>
      <file class="source">ArrayTest2.str</file>
      <file class="output">ArrayTest2.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest3">
      <desc class="source">MIT, test involving a splitjoin
            The .out file was just generated by strc -library -i100.  Not checked for correctness</desc>
      <file>ArrayTest3.str</file>
      <file class="output">ArrayTest3.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest4">
      <desc>MIT, simple test of 3-d array allocation</desc>
      <file class="source">ArrayTest4.str</file>
      <file class="output">ArrayTest4.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest5">
      <desc>MIT, multiple array allocations</desc>
      <file class="source">ArrayTest5.str</file>
      <file class="output">ArrayTest5.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest6">
      <desc>MIT, propagating fields into array dimensions</desc>
      <file class="source">ArrayTest6.str</file>
      <file class="output">ArrayTest6.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest7">
      <desc>MIT, propagating fields into array dimensions</desc>
      <file class="source">ArrayTest7.str</file>
      <file class="output">ArrayTest7.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest8">
      <desc>MIT, passing parameterized arrays to helper functions</desc>
      <file class="source">ArrayTest8.str</file>
      <file class="output">ArrayTest8.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest9">
      <desc>MIT, resolving constant expressions within dimensions of fields</desc>
      <file class="source">ArrayTest9.str</file>
      <file class="output">ArrayTest9.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest10">
      <desc>MIT, resolving constant expressions within dimensions of parameters</desc>
      <file class="source">ArrayTest10.str</file>
      <file class="output">ArrayTest10.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest11">
      <desc>MIT, intersection of arrays and global prop</desc>
      <file class="source">ArrayTest11.str</file>
      <file class="output">ArrayTest11.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest12">
      <desc>MIT, intersection of arrays and global prop into splitjoin weights</desc>
      <file class="source">ArrayTest12.str</file>
      <file class="output">ArrayTest12.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest13">
      <desc>MIT, propagating one constant field into array dimension of another field</desc>
      <file class="source">ArrayTest13.str</file>
      <file class="output">ArrayTest13.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest14">
      <desc>MIT, propagating array values into streams</desc>
      <file class="source">ArrayTest14.str</file>
      <file class="output">ArrayTest14.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest15">
      <desc>MIT, assignment of arrays to each other</desc>
      <file class="source">ArrayTest15.str</file>
      <file class="output">ArrayTest15.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest16_1d">
      <desc>MIT, splitjoin with arrays</desc>
      <file class="source">ArrayTest16_1d.str</file>
      <file class="output">ArrayTest16_1d.out</file>
    </impl>
    <impl lang="StreamIt" id="arraytest16_2d">
      <desc>MIT, splitjoin with arrays</desc>
      <file class="source">ArrayTest16_2d.str</file>
      <file class="output">ArrayTest16_2d.out</file>
    </impl>
  </implementations>
</benchmark>
