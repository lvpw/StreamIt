/**

More tests of 3-D arrays: mutliple arrays, initializers

% strc -library ArrayTest4.str -i 2
6
6
6
6
6
6
12
12
12
12
12
12

**/

void->void pipeline ArrayTest5 {
    add Source();
    add Test();
    add Printer();
}

int->int filter Test {
    int[2][1][3] arr1 = {{{6,5,4}},{{3,2,1}}};
    int[1][2][3] array;
    int[3][2][1] arr2;

    work pop 1*2*3 push 1*2*3 {
	for (int i=0; i<1; i++) {
	    for (int j=0; j<2; j++) {
		for (int k=0; k<3; k++) {
		    array[i][j][k] = pop();
		    arr2[k][j][i] = array[i][j][k] + arr1[j][i][k];
		}
	    }
	}

	for (int i=0; i<1; i++) {
	    for (int j=0; j<2; j++) {
		for (int k=0; k<3; k++) {
		    push(arr2[k][j][i]);
		}
	    }
	}

    }
}

void->int filter Source {
    int i = 0;
    work push 1 { push(i++); }
}

int->void filter Printer {
    work pop 1 { print(pop()); }
}

