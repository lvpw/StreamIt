void->void pipeline huffman {
    add FileReader<float>("./tmp.bin");
    add encoder();
    add decoder();
    add FileWriter<float>(stdout);
}

int->int stateful filter encoder() {
    float sum;
    float count;
    float delta;
    float last_time;
    init {
        sum = 0;
        count = 0;
        delta = 1;
        last_time = 1;
    } 
    work pop 1 push * {
        float time = pop();
        float val = pop();
        if (time - last_time >= delta) {
            push(count); 
            push(sum); 
            float avg = sum / count;
            push(avg);
            count = 1;
            sum = val;
            last_time = time;
        } else {
            count++;
            sum += val;
        }

    }
}

int->int stateful filter decoder() {
    push(pop())
}

