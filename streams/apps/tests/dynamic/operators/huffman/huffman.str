//
// http://en.wikipedia.org/wiki/Huffman_coding
//Char	Freq	Code             Ord
//space	7	111               32
//a	4	010               97
//e	4	000               101
//f	3	1101              102
//h	2	1010              104
//i	2	1000              105
//m	2	0111              109
//n	2	0010              110
//s	2	1011              115
//t	2	0110              116
//l	1	11001             108
//o	1	00110             111
//p	1	10011             112
//r	1	11000             114
//u	1	00111             117
//x	1	10010             120
//


void->void pipeline huffman {
    add FileReader<int>("./tmp.bin");
    add encoder();
    add decoder();
    add FileWriter<int>(stdout);
}

int->int filter encoder() {

    work pop 1 push * {
        int c = pop();
        if (c == 32) {
            push(1);
            push(1);
            push(1);
        } else if (c == 97) {
            push(0);
            push(1);
            push(0);
        } else if (c == 101) {
            push(0);
            push(0);
            push(0);
        } else if (c == 102) {
            push(1);
            push(1);
            push(0);
            push(1);
        } else if (c == 104) {
            push(1);
            push(0);
            push(1);
            push(0);
        } else if (c == 105) {
            push(1);
            push(0);
            push(0);
            push(0);
        } else if (c == 109) {
            push(0);
            push(1);
            push(1);
            push(1);
        } else if (c == 110) {
            push(0);
            push(0);
            push(1);
            push(0);
        } else if (c == 115) {
            push(1);
        } else if (c == 116) {
            push(0);
            push(1);
            push(1);
            push(0);
        } else if (c == 108) {
            push(1);
            push(1);
            push(0);
            push(0);
            push(1);
        } else if (c == 111) {
            push(0);
            push(0);
            push(1);
            push(1);
            push(0);
        } else if (c == 112) {
            push(1);
            push(0);
            push(0);
            push(1);
            push(1);
        } else if (c == 114) {
            push(1);
            push(1);
            push(0);
            push(0);
            push(0);
        } else if (c == 117) {
            push(0);
            push(0);
            push(1);
            push(1);
            push(1);
        } else if (c == 120) {
            push(1);
            push(0);
            push(0);
            push(1);
            push(0);
        }        
    }
}

int->int stateful filter decoder() {
    work pop * push 1 {
        int c1 = pop();
        int c2 = pop();
        int c3 = pop();
        int c4 = 0;
        int c5 = 0;
        int match = 0;

        if ((c1 == 1) && (c2 == 1) && (c3 == 1)) {
           push(32);
           match = 1;
        }

        else if ((c1 == 0) && (c2 == 1) && (c3 == 0)) {
           push(97);
           match = 1;
        }

        else if ((c1 == 0) && (c2 == 0) && (c3 == 0)) {
           push(101);
           match = 1;
        }

        if (0 == match) {
            c4 = pop();
            if ((c1 == 1) && (c2 == 1) && (c3 == 0) && (c4 == 1)) {
                push(102);
                match = 1;
            }
            else if ((c1 == 1) && (c2 == 0) && (c3 == 1) && (c4 == 0)) {
               push(104);
               match = 1;
            }
            else if ((c1 == 1) && (c2 == 0) && (c3 == 0) && (c4 == 0)) {
               push(105);
               match = 1;
            }
            else if ((c1 == 0) && (c2 == 1) && (c3 == 1) && (c4 == 1)) {
               push(109);
               match = 1;
            }
            else if ((c1 == 0) && (c2 == 0) && (c3 == 1) && (c4 == 0)) {
               push(110);
               match = 1;
            }
            else if ((c1 == 1) && (c2 == 0) && (c3 == 1) && (c4 == 1)) {
               push(115);
               match = 1;
            }
            else if ((c1 == 0) && (c2 == 1) && (c3 == 1) && (c4 == 0)) {
               push(116);
               match = 1;
            }
        }
        if (0 == match) {
            c5 = pop();
            if ((c1 == 1) && (c2 == 1) && (c3 == 0) && (c4 == 0) && (c5 == 1)) {
                push(108);
                match = 1;
            }
            else if ((c1 == 0) && (c2 == 0) && (c3 == 1) && (c4 == 1) && (c5 == 0)) {
                push(111);
                match = 1;
            }
            else if ((c1 == 1) && (c2 == 0) && (c3 == 0) && (c4 == 1) && (c5 == 1)) {
                push(112);
                match = 1;
            }
            else if ((c1 == 1) && (c2 == 1) && (c3 == 0) && (c4 == 0) && (c5 == 0)) {
                push(114);
                match = 1;
            }
            else if ((c1 == 0) && (c2 == 0) && (c3 == 1) && (c4 == 1) && (c5 == 1)) {
                push(117);
                match = 1;
            }
            else if ((c1 == 1) && (c2 == 0) && (c3 == 0) && (c4 == 1) && (c5 == 0)) {
                push(120);
                match = 1;
            }
        }
    }
}

