/** 
 * Test recognizing the special "Identity" filters 
 * that are recognized as a special stream construct.
 **/
void->void pipeline LinearTest13 {
  add FloatSource();
  add LinearPipe();
  add FloatSink();
}

void->float stateful filter FloatSource {
  float x;
  init {
    x = 0;
  }
  work push 1 {
    push(x);
    x = x + 1;
  }
}

float->void filter FloatSink {
  work pop 1 {
    println(pop());
  }
}

/** Pipeline of linear filters which have constant components. **/
float->float pipeline LinearPipe {
  add Identity<float>();
  add FloatFilter1();
}

/** filter that computes [[1 2][3 4][5 6][7 8]] + [9 10] **/
float->float filter FloatFilter1 {
  work pop 4 push 2 {
    float t1 = pop();
    float t2 = pop();
    float t3 = pop();
    float t4 = pop();
    push(2*t4 + 4*t3 + 6*t2 + 8*t1 + 10);
    push(1*t4 + 3*t3 + 5*t2 + 7*t1 + 9);
  }
}
