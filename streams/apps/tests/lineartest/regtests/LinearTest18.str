/** 
 * Test out combining splitjoins, with multiple split 
 * joins in weighted roundrobin fashion.
 **/
void->void pipeline LinearTest18 {
  add FloatSource();
  add LinearSJ();
  add FloatSink();
}

void->float stateful filter FloatSource {
  int x;
  init {
    x = 0;
  }
  work push 1 {
    push(x);
    x = (x + 1)%20;
  }
}

float->void filter FloatSink {
  work pop 1 {
    println(pop());
  }
}

/** A linear split join to test combination with different round robin weightings. **/
float->float splitjoin LinearSJ {
  split duplicate;
  for (int i=0; i<10; i++) {
    add MockFIRFilter(i);
  }
  join roundrobin;

}

/** This is a mock up of an FIR filter. N is where the counting starts from **/
float->float filter MockFIRFilter(int N) {
  float[10] weights;
  init {
    for (int i=0; i<10; i++) {
      weights[i] = N + i;
    }
  }
  work pop 1 peek 10 push 1 {
    float sum = 0;
    /** do the MAC like normal **/
    for (int i=0; i<10; i++) {
      sum = sum + (peek(i) * weights[i]);
    }
    push(sum);
    pop();
  }
}
