void->void pipeline RStreamEx {
    add Source();
    add splitjoin {
	split roundrobin(1, 2);
	for (int i = 0; i < 2; i++)
	    add LowPassFilter(i + 2, i);
	join roundrobin(1, 1);
    }
    add Sink();
}

float->float filter LowPassFilter(int taps, int decimation) {
  float[taps] coeff;
  init {
      for (int i = 0; i < taps; i++)
	  coeff[i] = 1;
  }
  work pop 1+decimation push 1 peek taps {
    float sum = 0;
    for (int i = 0; i < taps; i++)
      sum += peek(i) * coeff[i];
    push(sum);
    for (int i=0; i<decimation; i++)
	pop();
    pop();
  }
}

void->float filter Source() 
{
    float x = 0;
    
    work push 1 {
	push(x++);
    }
}

float->void filter Sink() 
{
    work pop 1 {
	print(pop());
    }
}
