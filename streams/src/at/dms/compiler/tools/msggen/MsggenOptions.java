// Generated by optgen from MsggenOptions.opt
package at.dms.compiler.tools.msggen;

import at.dms.compiler.getopt.Getopt;
import at.dms.compiler.getopt.LongOpt;

public class MsggenOptions extends at.dms.compiler.tools.common.Options {

    public MsggenOptions(String name) {
        super(name);
    }

    public MsggenOptions() {
        this("Msggen");
    }

    @Override
	public boolean processOption(int code, Getopt g) {
        switch (code) {
        default:
            return super.processOption(code, g);
        }
    }

    @Override
	public String[] getOptions() {
        String[]    parent = super.getOptions();
        String[]    total = new String[parent.length + 0];
        System.arraycopy(parent, 0, total, 0, parent.length);
    
        return total;
    }


    @Override
	public String getShortOptions() {
        return "" + super.getShortOptions();
    }


    @Override
	public void version() {
        System.out.println("Version 1.5B released 9 August 2001");
    }


    @Override
	public void usage() {
        System.err.println("usage: at.dms.msggen <file>");
    }


    @Override
	public void help() {
        System.err.println("usage: at.dms.msggen <file>");
        printOptions();
        System.err.println();
        version();
        System.err.println();
        System.err.println("This program is part of the Kopi Suite.");
        System.err.println("For more info, please see: http://www.dms.at/kopi");
    }

    @Override
	public LongOpt[] getLongOptions() {
        LongOpt[]   parent = super.getLongOptions();
        LongOpt[]   total = new LongOpt[parent.length + LONGOPTS.length];
    
        System.arraycopy(parent, 0, total, 0, parent.length);
        System.arraycopy(LONGOPTS, 0, total, parent.length, LONGOPTS.length);
    
        return total;
    }

    private static final LongOpt[] LONGOPTS = {

    };
}
