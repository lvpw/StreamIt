#
# Assume we control exported symbols JAVA_HOME, TOPDIR, ATLAS_HOME, LEFTYPATH
# Assume that exported symbols STREAMIT_HOME and PATH are already set by user.
# Assume other symbols may or may not already be set.
#

# make sure STREAMIT_HOME is exported
export STREAMIT_HOME

# detect cygwin environment
export STRC_HOST_TYPE="unknown"
if [[ `uname` == "Linux" ]]; then
  export STRC_HOST_TYPE="x86-linux"
else
  if [[ `uname` == "CYGWIN_NT-5.1" ]]; then
    export STRC_HOST_TYPE="x86-windows"
  fi
fi

# take care of classpath
if [ -z "$CLASSPATH" ]
then
 export CLASSPATH=.
fi

# location of java
export JAVA_HOME=~/jdk1.6.0_10

export PATH=${JAVA_HOME}/bin:$PATH

# java classes
CLASSPATH=${CLASSPATH}:${JAVA_HOME}/jre/lib/rt.jar
## antlr classes
CLASSPATH=${CLASSPATH}:${STREAMIT_HOME}/uns/antlr.jar
# streamit classes
CLASSPATH=${CLASSPATH}:${STREAMIT_HOME}/src
CLASSPATH=${CLASSPATH}:${STREAMIT_HOME}/3rdparty
CLASSPATH=${CLASSPATH}:${STREAMIT_HOME}/3rdparty/cplex/cplex.jar
CLASSPATH=${CLASSPATH}:${STREAMIT_HOME}/3rdparty/jgraph/jgraph.jar
CLASSPATH=${CLASSPATH}:${STREAMIT_HOME}/3rdparty/JFlex/jflex.jar
CLASSPATH=${CLASSPATH}:${STREAMIT_HOME}/3rdparty/jcc/jcc.jar

# xalan classes, for building benchmarks.html in release
#CLASSPATH=${CLASSPATH}:/home/streamit/lib/xalan-j_2_7_0/serializer.jar 
#CLASSPATH=${CLASSPATH}:/home/streamit/lib/xalan-j_2_7_0/xalan.jar      
#CLASSPATH=${CLASSPATH}:/home/streamit/lib/xalan-j_2_7_0/xercesImpl.jar 
#CLASSPATH=${CLASSPATH}:/home/streamit/lib/xalan-j_2_7_0/xml-apis.jar   
#CLASSPATH=${CLASSPATH}:/home/streamit/lib/xalan-j_2_7_0/xsltc.jar      

# use gcc34 as our gcc and g++
#alias gcc='gcc34'
#alias g++='gcc34'
alias gcc34='gcc'

# also need to define CXX and CC to be gcc34; otherwise make will subvert aliases
export CC=gcc
export CXX=gcc


# add STREAMIT_HOME to the path in order to find "strc"
if [ -z "$PATH" ]
then
  export PATH=${STREAMIT_HOME}
else
  PATH=${PATH}:${STREAMIT_HOME}
fi

# add java to path
#export PATH=${JAVA_HOME}/bin:${PATH}

# include extra LaTeX packages
# (Note that this *always* DTRT: the TeX path-searching stuff interprets
# a blank entry as "the default path".)
if [ -z "$TEXINPUTS" ]
then
    export TEXINPUTS=${STREAMIT_HOME}/include/tex:
else 
    TEXINPUTS=${STREAMIT_HOME}/include/tex:${TEXINPUTS}
fi


#### DEPRECATED CONFIG STUFF #####

# for viewing dot graphs in absence of dotty
#mg() { dot -Tps $1 > $1.ps; /projects/streamit/tools/gv $1.ps & }

#include builtin Eclipse plugins
# export ECLIPSE_PLUG=/home/bits7/NO_BACKUP/streamit/eclipse/plugins
# PRE=${ECLIPSE_PLUG}/org.eclipse.
# VER="_2.1.1"
# CLASSPATH=${CLASSPATH}:${PRE}ui.workbench.texteditor${VER}/texteditor.jar
# CLASSPATH=${CLASSPATH}:${PRE}jface${VER}/jface.jar
# CLASSPATH=${CLASSPATH}:${PRE}ui.editors${VER}/editors.jar
# CLASSPATH=${CLASSPATH}:${PRE}jface.text${VER}/jfacetext.jar
# CLASSPATH=${CLASSPATH}:${PRE}swt.motif${VER}/ws/motif/swt.jar
# CLASSPATH=${CLASSPATH}:${PRE}ui.views${VER}/views.jar
# CLASSPATH=${CLASSPATH}:${PRE}core.runtime${VER}/runtime.jar
# CLASSPATH=${CLASSPATH}:${PRE}ui.workbench${VER}/workbench.jar
# CLASSPATH=${CLASSPATH}:${PRE}text${VER}/text.jar
# CLASSPATH=${CLASSPATH}:${PRE}jdt.core${VER}/jdtcore.jar
# CLASSPATH=${CLASSPATH}:${PRE}jdt.ui${VER}/jdt.jar
# CLASSPATH=${CLASSPATH}:${PRE}core.resources${VER}/resources.jar

# the current version of starsearch we're using
#export TOPDIR=${STREAMIT_HOME}/misc/raw
# the following needed to use spacetime, but can clobber Mike's research
#export TOPDIR=/home/bits6/mgordon/starsearch/

# the path to ATLAS
#export ATLAS_HOME=/home/bits7/NO_BACKUP/streamit/ATLAS

# for running dotty
#export LEFTYPATH=/home/bits7/NO_BACKUP/streamit/dotty

# Perl on RHEL-3
#if [ -z "$PERL5LIB" ]
#then
#    export PERL5LIB=/usr/uns/encap/perl-5.8.0/lib/5.8.0/:/usr/uns/lib/site_perl/5.8.0:/home/streamit/lib/perl5/site_perl/5.8.0:/home/streamit/lib/perl5/site_perl/5.8.0/i386-linux-thread-multi
#else
#    PERL5LIB=/usr/uns/encap/perl-5.8.0/lib/5.8.0/:/usr/uns/lib/site_perl/5.8.0:/home/streamit/lib/perl5/site_perl/5.8.0:/home/streamit/lib/perl5/site_perl/5.8.0/i386-linux-thread-multi:${PERL5LIB}
#fi
